# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bytes_0 = b"\x8f3\xe5R\\\x94\xa0\x1c\x82"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0)


def test_case_2():
    import_processor_0 = module_0.ImportProcessor()


def test_case_3():
    str_0 = 'J^M`@9jt"~Zs!<rq:eS '
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_4():
    str_0 = 'J^M`@9jt"~Zs!<rq:eS '
    module_0.lazy_import(str_0, str_0)


def test_case_5():
    var_0 = module_0.disallow_proxying()


def test_case_6():
    int_0 = -2810
    var_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0, int_0)
    var_0.__repr__()


def test_case_7():
    str_0 = "(HMYrVIxxPrt\\%6\nz"
    str_1 = "um=1;o-Ch/"
    module_0.ImportReplacer(str_1, str_0, str_1, str_0)


def test_case_8():
    str_0 = '"%r\x0bZT[a!'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = "#,n\\\\.#0$,JiSqVcoPNO"
    import_processor_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "|sd#IKY,AMp*\t lpP[\n{"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "(HMYrVIxxPrt\\%6\nz"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0)
    module_0.lazy_import(bool_0, import_replacer_0)


def test_case_15():
    float_0 = -1426.530749
    none_type_0 = None
    module_0.ImportReplacer(float_0, float_0, none_type_0, float_0, float_0)


def test_case_16():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue([\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = " Convert onequeue into several. Kind of like a teeing queue.\n\n   >>> in_q = Queu]([\n    >>>/q1, 2,Rq3 = multiplex(in_q, count=3)\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__setattr__(dict_0, import_replacer_0)


def test_case_18():
    str_0 = " Convert onequeue into several. Kind of like a teeing queue.\n\n   >>> in_q = Queu]([\n    >>>/q1, 2,Rq3 = multiplex(in_q, count=3)\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=str_0)
    import_replacer_0.__getattribute__(str_0)
