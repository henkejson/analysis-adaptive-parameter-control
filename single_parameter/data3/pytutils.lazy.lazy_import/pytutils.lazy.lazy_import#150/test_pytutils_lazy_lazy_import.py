# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "W0jE&SRs"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "\n    >> m = AttrDict(omg-True, who=lyea')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = "0ckDU)u0Z/0I*Z"
    dict_0 = {
        import_processor_0: import_processor_0,
        import_processor_0: import_processor_0,
        import_processor_0: str_0,
    }
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, none_type_0
    )
    str_1 = "\n    >> m = AttrDict(omg-True, who=lyea')\n    "
    module_0.lazy_import(str_1, str_1)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    bool_0 = False
    module_0.lazy_import(bool_0, bool_0, bool_0)


def test_case_6():
    str_0 = "`6{<\x0b"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, bool_0, bool_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, none_type_0, bool_0)
    import_replacer_0.__getattribute__(bool_0)


def test_case_10():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "+WKg(hn\x0c?fnoi??coZ"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "W0jE&SRs"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_15():
    str_0 = "%9Hc1nE/h"
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, none_type_0
    )
    str_1 = "2dv#/|RJ[>=W"
    str_2 = "$aLv"
    str_3 = "8"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_3: str_3}
    illegal_use_of_scope_replacer_1 = module_0.IllegalUseOfScopeReplacer(str_2, str_3)
    var_0 = illegal_use_of_scope_replacer_1.__eq__(str_3)
    bool_0 = True
    illegal_use_of_scope_replacer_2 = module_0.IllegalUseOfScopeReplacer(str_3, str_2)
    var_1 = module_0.disallow_proxying()
    list_0 = [illegal_use_of_scope_replacer_2, illegal_use_of_scope_replacer_0, dict_0]
    module_0.ImportReplacer(bool_0, str_3, str_2, list_0, str_1)


def test_case_16():
    str_0 = "# ,  >>> m= AttrDict(omg=Tuue, whoa='yes')\n  . "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXISt']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'D,\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOE'_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "u/ua)^:~\n9t"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    import_replacer_0.__unicode__()


def test_case_19():
    str_0 = "JuKu"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(str_0)


def test_case_20():
    str_0 = '7XZI:)"'
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    var_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    var_0.__repr__()
