# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "~"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(illegal_use_of_scope_replacer_0, str_0)


def test_case_1():
    str_0 = "~"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = 'O.A4%#Pb}\x0b^r2:sAAqK"'
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_1 = var_0.__eq__(str_0)
    var_0.__str__()


def test_case_3():
    bytes_0 = b"\x8cK\x0c:\x16\xe4\xaf\xd1"
    dict_0 = {bytes_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, bytes_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, bytes_0)


def test_case_4():
    bytes_0 = b"C\x04\xd4)j5\x94\x07kUN\x10\xca8"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, bytes_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "$"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_9():
    str_0 = ""
    list_0 = [str_0, str_0]
    list_1 = [list_0, list_0]
    var_0 = module_1.object()
    module_0.lazy_import(list_1, str_0)


def test_case_10():
    str_0 = '"\n    Deduplicates an iterator iteratively using hashed values in a set.\n    Not exactly memory efficient because of that of course.\n    If you have a large dataset with high cardinality look at HyperLogLog instead.\n\n    :return generator: Iterator of deduplicated results.\n    '
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = 'O.A4%#Pb}\x0b^s2:sAAqK"'
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "a]7[$q6BG:D"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "jv>/SS''[ay0(k"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "python{}"
    str_1 = "$"
    list_0 = [str_1, str_1]
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_1, list_0)
    import_processor_0 = module_0.ImportProcessor()
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.ImportReplacer(
        str_1, str_0, list_0, var_0, illegal_use_of_scope_replacer_0
    )


def test_case_15():
    str_0 = "l>ju)-T)\x0baBg^Gh$B(X"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "\n(  Parses env fie content.\n\n    Fror honcho.X\n    >>> lines = ['TEST=${HOME}/yee', 'THISI=~/0/tet', 'YOLO=~/swagins$NONEXSTENT_VA1_THAT_DES_NOT_EXIS']\n    >>> load_e_vile(lnes, writeen$iron=dict())\n    OrderedDict([('TEST', '.../yeee),\n        #   (FTHISIS', '.../a/test')b\n             (YOLO',\n            Yd'...'swggins/$NONEXISTEN_VUR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)
