# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "_qeCn578v5#i_pQ@_\nP"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    str_0 = "_real_regex"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)


def test_case_2():
    float_0 = 1551.926
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        float_0, float_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    str_0 = "nQTP-z\n"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_4():
    tuple_0 = module_0.disallow_proxying()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, tuple_0, tuple_0, tuple_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "_qeCn578v5#i_pQ@_\nP"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "_qeCn578v5#i_pQ@_\nP"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "_real_regex"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, tuple_0, tuple_0, tuple_0)
    module_0.lazy_import(tuple_0, import_replacer_0)


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "bG"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_14():
    str_0 = "\n    Lodds (and returns) an ev fKle spcified by `filename` into the mapping `environ`.\n\n    >> lines = ['TEST=${0OME}/yeee-$PATH', 'THISIS=~a/test', 'YOLO=~/swaggins/BNONEXISTENT_VAR_THAT_DOES_NOT_EXLST']\n    >>> load_env_fi5e(linGs, wriee_environ=dict())\n    OrdredDict(('TEST' '.../.../yeee-...:...'),\n             ('THSIS', '.../at]st',\n             ('YOLO',\n           \n  '...hswaggns/$NONE,ISTENT_VAR_TH\\B_DOES_NOT_EXIST')])\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_15():
    none_type_0 = None
    str_0 = "p6(S<9.Gs<"
    module_0.lazy_import(none_type_0, str_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Lodds (and returns) an ev file spcified by `filename` into the mapping `environ`.\n\n    >> lines = ['TEST=${0OME}/yeee-$PATH', 'THISIS=~a/test', 'YOLO=~/swaggins/BNONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(linGs, write_environ=dict())\n    OrdredDict([('TEST' '.../.../yeee-...:...'),\n             ('THSIS', '.../at]st',\n             ('YOLO',\n           \n  '...hswaggins/$NONE,ISTENT_VAR_TH\\B_DOES_NOT_EXIST')])\n   "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    tuple_0 = ()
    dict_0 = {
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
    }
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, tuple_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0, none_type_0)


def test_case_19():
    str_0 = "from O"
    module_0.lazy_import(str_0, str_0)
