# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    var_0 = module_0.disallow_proxying()
    set_0 = {var_0, var_0, var_0, var_0}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(set_0, set_0)


def test_case_1():
    str_0 = "%s(%s)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    bytes_0 = b"?\xa8\xe6~\xba\xa8'\xc7>\xb24g\x9aq"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_3():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> loa@_env_file(lines, write_environ=dict())\n    OrderedDizt([('TES', '.../yeee'),\n             ('THISIS', '.../attest'),\n             ('YOLO',\n              '.../swaggins/$NON\nXSTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "+\r'%HK2}#`'f}'K'"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    str_0 = "%s(%s)"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()
    float_0 = 1309.870924
    module_0.ImportReplacer(float_0, float_0, float_0, float_0, float_0)


def test_case_10():
    str_0 = "%s(%s)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.IllegalUseOfScopeReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_11():
    str_0 = "+\r'%HK2}#`'f}'K'"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = ""
    str_1 = "OK\\g\ttxdbP|LV3"
    str_2 = "O~#$z\td,mU]\\flWp^'hf"
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_1, none_type_0, str_0
    )
    module_0.lazy_import(str_2, str_0)


def test_case_14():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "%s(%s)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_16():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> loa@_env_file(lines, write_environ=dict())\n    OrderedDizt([('TEST', '.../yeee'),\n             ('THISIS', '.../attest'),\n             ('YOLO',\n              '.../swaggins/$NON\nXSTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "2z=(D<LPNsL77p"
    str_1 = "O~#$z\td,mU]\\flWp^'hf"
    tuple_0 = module_0.disallow_proxying()
    var_0 = module_0.disallow_proxying()
    module_0.lazy_import(str_1, str_0)


def test_case_18():
    str_0 = "LQ^p)QX\rGOE;3t[KR"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__setattr__(str_0, dict_0)
