# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "(debug\n shell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_1():
    str_0 = "(debug\n shell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "RsY~sTmX\rqp;;grvtn|D"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, dict_0)


def test_case_3():
    str_0 = "RsY~sTmX\rqp;rvtn|D"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "(debug\n shell)"
    module_0.lazy_import(str_0, str_0)


def test_case_6():
    str_0 = "(ceb2\n Xel)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "N>%\nN^?&%XIqRc-+=g"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "(debu\n hell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "(debu\n hell)"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = "(debug\n shell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\x0c\nL*e"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "(debuZ hell)"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "?_H#mKC 4"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "(debug shell)"
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, str_0, str_0)


def test_case_17():
    str_0 = "(debug<sXell&"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\n        :param collections.MutableMapping mapping: Dict-like object to wrap\n        :param bool fancy_repr: If True, show fancy repr, otherwise just show dict's\n        :param bool dictify_repr: If True, cast mapping to a dict on repr\n        "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_19():
    str_0 = "(\n9\n+Yel)"
    module_0.lazy_import(str_0, str_0)
