# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bytes_0 = b"6\x04\xf9\xac\x8b\xb7\x10\x93\xcb"
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, none_type_0, none_type_0
    )


def test_case_1():
    str_0 = "\n\n    >>> log = logging.getLogger(__na\ne__)\n    >>> configure()\n    >>> log.info('test')\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0)
    import_replacer_0.__call__()


def test_case_4():
    str_0 = "PQgOs"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "\n\n    >>> log = logging.getLogger(__na\ne__)\n    >>> configure()\n    >>> log.info('test')\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\n\n    >>> log = logging.getLogger(__na\ne__)\n    >>> configure()\n    >>> log.info('test')\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    int_0 = -124
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        int_0,
        illegal_use_of_scope_replacer_0,
        int_0,
    )


def test_case_10():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_11():
    str_0 = "\n\n    >>> log = logging.getLogger(__na\ne__)\n    >>> configure()\n    >>> log.info('test')\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_12():
    str_0 = ".Q;@7o00m\nNEITp\\3#l"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    none_type_0 = None
    str_0 = 'GfM"5Jrl(rLa,A6Hf29'
    module_0.lazy_import(none_type_0, str_0, none_type_0)


def test_case_14():
    str_0 = "\n\n    >> lg = logging.gtLogger(__na\ne__]\n    >>> cnfigure()\n    >>> o.info('est')\n\n W  "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    none_type_0 = None
    str_0 = ""
    module_0.lazy_import(none_type_0, str_0, none_type_0)


def test_case_16():
    str_0 = "4PQgOs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
