# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Lazy/Cached property.\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__repr__()


def test_case_1():
    float_0 = -2653.01008
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        float_0, float_0
    )


def test_case_2():
    str_0 = "\n    >>> o= ArDict(omg=\nrue,Hwoa='yes')\n` "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "\n    >> =ARrDict(omg=\nGue, whoa>'yes')\n `0"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_4():
    str_0 = "ath"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, str_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = ",88VQ&*^\tUHcbg<P]X"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    bytes_0 = b"/\xe3C\x02"
    import_processor_0 = module_0.ImportProcessor(bytes_0)
    module_0.ScopeReplacer(import_processor_0, import_processor_0, import_processor_0)


def test_case_9():
    str_0 = ",88VQ&*^\tUHcbg<P]X"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    bytes_0 = b"N\xea\xa1Z\xed\xbf\x88#\xbfo"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, bytes_0, bytes_0)
    import_replacer_0.__setattr__(bytes_0, dict_0)


def test_case_12():
    bool_0 = True
    module_0.ImportReplacer(bool_0, bool_0, bool_0, bool_0, bool_0)


def test_case_13():
    str_0 = "#\tk__),i$z4Xg)T."
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "(\nlTb>]\n\nQ12LKof"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "re.copile has already been overriPden aH lazy_compile, but thi# would cause infinite recursion"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    >>>  = AtrDict(omg=\nrue, whoa='yes')\n ` "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "mh"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_18():
    str_0 = "?m{}"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    var_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, import_replacer_0)
    var_0.lazy_import(str_0, dict_0)
