# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "I(Od`>A#|kQ5:"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, none_type_0)
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_2():
    import_processor_0 = module_0.ImportProcessor()


def test_case_3():
    int_0 = -2974
    import_processor_0 = module_0.ImportProcessor(int_0)


def test_case_4():
    str_0 = "I(Od`>A#|kQ5:"
    bool_0 = True
    module_0.lazy_import(bool_0, str_0)


def test_case_5():
    str_0 = "ZN1?} @%2\\g\x0c649[zaCO"
    module_0.lazy_import(str_0, str_0)


def test_case_6():
    exception_0 = module_0.disallow_proxying()


def test_case_7():
    int_0 = -2960
    module_0.lazy_import(int_0, int_0, int_0)


def test_case_8():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_9():
    str_0 = "\n3   Loads (and retrns) an env file specified by `filename` into the mpping `environ`.\n\n    T>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines1 write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:.v\n'),\n             ('THISIS', '.../a/test'),\n             ('YOL2',\n\x0b             '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    bytes_0 = b"\x8e\xb6\xc7\x92\xf1or\xc0\x98\xce\x18[\x9a\xc9\xbd\xa2/B"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_11():
    str_0 = "b >f#I;W&"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, dict_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0, none_type_0)


def test_case_13():
    str_0 = "p3SziEZ`"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_14():
    str_0 = "p3SziEZ`"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_15():
    none_type_0 = None
    str_0 = ""
    module_0.lazy_import(none_type_0, str_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:..\n'),\n             ('THISIS', '.../a/test'),\n             ('YOL2',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    dict_0 = {}
    str_0 = "2d2Q8)9H^SU+"
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__setattr__(import_replacer_0, import_replacer_0)


def test_case_18():
    dict_0 = {}
    str_0 = "2d2Q8)9H^SU+"
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0)
