# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "requests"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    dict_0 = {}
    bytes_0 = b"2\r\xcc\x1b]p>\x9fo\x1dF\x9a\x06\xed\xae\xa8\xb7I\xe6"
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, bytes_0, bytes_0)
    scope_replacer_0.__unicode__()


def test_case_2():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    module_0.ImportReplacer(none_type_0, bool_0, bool_0, bool_1)


def test_case_3():
    bytes_0 = b"\xe4\x08{IT\xd8'"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, children=bytes_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = 'N\tx{W@+A">\n1YXtA~8p'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = 'N\tx{W@+A">\nm1YXtA~8p'
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n!P(t}(\nH3c)\n6j<3"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "$\n!P(}(\nH3c)\\\nyj6G<3"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\n!(I}(Hxi)\n6j<3"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "requests"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    str_0 = "reT|sts"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "reqests"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__unicode__()


def test_case_14():
    float_0 = -152.6
    module_0.ImportReplacer(float_0, float_0, float_0, float_0, float_0)


def test_case_15():
    str_0 = "1r1wu+#Y~H:"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "requests"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_17():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    dict_0 = {}
    import_processor_0 = module_0.ImportProcessor()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(dict_0, set_0)
    none_type_0 = None
    var_0 = module_0.disallow_proxying()
    var_1 = module_1.BaseException()
    var_2 = var_1.__str__()
    module_0.lazy_import(none_type_0, var_2, bool_0)


def test_case_18():
    str_0 = "$\n!P(t}(\nH3c)\n6j<3"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_19():
    str_0 = 'N\tx{W@+A">\nm1YXtA~8p'
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=dict_0)
    import_replacer_0.__setattr__(str_0, str_0)


def test_case_20():
    str_0 = "NdE}oIt6"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_21():
    str_0 = 'EFc46("&\rhxd~\r('
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    none_type_0 = None
    module_0.lazy_import(scope_replacer_0, scope_replacer_0, none_type_0)
