# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    str_0 = "(debug shell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "()FHB$;"
    int_0 = 1134
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(int_0)
    module_0.lazy_import(str_0, str_0)


def test_case_3():
    int_0 = 835
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, int_0, int_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_4():
    int_0 = 3190
    none_type_0 = None
    module_0.ImportReplacer(int_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "~UcHeHY#f7=O.|K/VBV*"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "yDYW\t_p@"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "(debug shell)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "yDYW\t_p@"
    module_0.ScopeReplacer(str_0, str_0, str_0)


def test_case_11():
    str_0 = "(debug shell)"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "(deug shl)1"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "~UcHeHY#f7=O.|K/VBV*"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "n48"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_15():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\nUtilities to work with files.\n"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    int_0 = -233
    str_0 = "(dbug sul)"
    module_0.ImportReplacer(int_0, int_0, int_0, str_0, str_0)


def test_case_18():
    str_0 = "(u?-5"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "(>j\n..$;"
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_21():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(str_0, import_replacer_0, str_0)


def test_case_22():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bytes_0 = b"\xe6h\xfc\x83d\x8f\x7f\xc4"
    scope_replacer_0 = module_0.ScopeReplacer(list_0, bytes_0, bool_0)
    scope_replacer_1 = module_0.ScopeReplacer(list_0, scope_replacer_0, bool_0)
    scope_replacer_1.__call__()
