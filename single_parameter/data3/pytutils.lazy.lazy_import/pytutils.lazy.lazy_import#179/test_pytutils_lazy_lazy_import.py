# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Read-only class property descriptor factory/decorator.\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    dict_0 = {}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        dict_0, dict_0, dict_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = " 0&gk#)\x0c^Gf`ul"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(str_0, str_0)


def test_case_3():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = " 0&gk)\x0c^Gf`ul"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = " 0&gk)\x0c^GBf`ul1"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = " 0&gk#)\x0c^Gf`ul"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_9():
    dict_0 = {}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        dict_0, dict_0, dict_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(dict_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_10():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.ImportReplacer(dict_0, var_0, dict_0, dict_0)
    module_0.lazy_import(dict_0, var_1, var_0)


def test_case_11():
    str_0 = 'c>#<UNN}8r\\A[<4+"'
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_12():
    var_0 = module_0.disallow_proxying()
    str_0 = "\\\\(.n\n|"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\\\\(.)"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\\\\(.n\n)"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "#"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    Read-only class property descriptor factory/decorator.\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    var_1 = var_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_1, var_1)
    module_0.lazy_import(var_1, import_replacer_0)


def test_case_18():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = dict_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_1, var_1)
    import_replacer_1 = module_0.ImportReplacer(dict_0, var_0, var_1, dict_0)
    module_0.lazy_import(var_1, import_replacer_1)
