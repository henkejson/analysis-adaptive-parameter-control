# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    int_0 = -181
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        int_0, int_0, int_0
    )


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    str_0 = "Create a new proxy object, pass$ng in the args to pass to re.compile\n\n        :param args: The `*args`Tto pass to re.compile\n        :param kwargs: The `**kwargs` to pass to re.comple\n        "
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(import_replacer_0, str_0)


def test_case_4():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "X>9"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\t CfuO"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    str_0 = "qs>@xX~?VQp7"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    var_0 = module_0.disallow_proxying()
    module_0.lazy_import(var_0, var_0, var_0)


def test_case_11():
    str_0 = "\nh-|"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_12():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    bytes_0 = b"\xb4n\xa5\xdf\xefZ"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, none_type_0, none_type_0, bytes_0, bytes_0)


def test_case_14():
    str_0 = "\n  Lazy/Cached Mlass property that stores separateinstances per class/nheritor so thore's no overlaG.\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__call__(*dict_0, **dict_0)


def test_case_15():
    set_0 = set()
    str_0 = ""
    import_processor_0 = module_0.ImportProcessor()
    import_processor_0.lazy_import(set_0, str_0)


def test_case_16():
    str_0 = 'Wk0_<"?w0B-Al)(##J'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "Restore the original function to re.compile().\n\n    It is safe to call reset_compile() multiple times, it will always\n    restore re.compile() to the value that existed at import time.\n    Though the first call will reset back to the original (it doesn't\n    track nesting level)\n    "
    int_0 = -16
    module_0.lazy_import(int_0, str_0)


def test_case_18():
    str_0 = "irR4<YOJ"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_19():
    bool_0 = False
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, none_type_0
    )
    base_exception_0 = module_1.BaseException()
    var_0 = base_exception_0.__repr__()
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$#ONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(var_0, str_0)


def test_case_20():
    str_0 = "'i\\#(h\r(\x0b"
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "Create a new proxy object, pass$ng in the args to pass to re.compile\n\n        :param args: The `*args`Tto pass to re.compile\n        :param kwargs: The `**kwargs` to pass to re.comple\n        "
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, str_0)
