# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = '"}%8N'
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    int_0 = 460
    list_0 = [int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)


def test_case_2():
    int_0 = -908
    str_0 = "oRX2vsA\n;["
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(int_0)
    var_2 = var_1.to_maybe()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(validation_0)


def test_case_4():
    bytes_0 = b"\x0f\x84e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_8():
    set_0 = set()
    tuple_0 = (set_0,)
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(tuple_0)


def test_case_9():
    bytes_0 = b"\x0f\x84"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    int_0 = 667
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    int_0 = 460
    list_0 = [int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = validation_0.to_lazy()
    var_0 = validation_1.to_box()
    var_1 = validation_1.to_either()
    var_1.ap(var_0)


def test_case_14():
    str_0 = "J@:~69b"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(str_0)
    var_1.to_either()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    bool_0 = False
    validation_1 = module_0.Validation(list_0, validation_0)
    var_1 = validation_0.__eq__(bool_0)
    var_2 = validation_1.__eq__(var_0)


def test_case_17():
    int_0 = 460
    list_0 = [int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(validation_0, int_0)
    var_0 = validation_1.to_box()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(validation_1)
