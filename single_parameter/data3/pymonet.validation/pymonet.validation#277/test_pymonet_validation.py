# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -5276.39172462083
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    float_0 = -5278.1164
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)


def test_case_2():
    str_0 = "8u~K"
    bytes_0 = b"Z\xbb#\xcf\xea\xb3\x9ao7\xdbL\xd7\xc1q."
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_lazy()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.map(var_1)


def test_case_7():
    bytes_0 = b"2\x0c\xdf\x8fCbXo\x93\xb8\xaa\x9c?qtq"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_11():
    complex_0 = -737.886 + 1071.84j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    complex_0 = 627.566435 - 1705.62213j
    validation_0 = module_0.Validation(complex_0, complex_0)
    set_0 = {complex_0, complex_0, complex_0}
    dict_0 = {complex_0: set_0}
    bool_0 = False
    validation_1 = module_0.Validation(dict_0, set_0)
    validation_2 = module_0.Validation(dict_0, validation_0)
    var_0 = validation_1.__str__()
    validation_2.ap(bool_0)


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, tuple_0)
    validation_2 = module_0.Validation(validation_0, tuple_0)
    var_2 = validation_2.to_box()
    var_1.ap(validation_2)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.is_success()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.to_lazy()
    var_1.map(var_2)


def test_case_16():
    none_type_0 = None
    float_0 = -1174.0
    set_0 = {float_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(float_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_17():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_1.to_maybe()
    var_0.to_try()
