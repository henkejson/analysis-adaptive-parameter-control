# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"v\xb2\xad\x08I|\xaf\xc6\xd4*"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_lazy()


def test_case_2():
    str_0 = "<8_UD'|-{u"
    float_0 = -1151.3154
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(float_0)
    var_1.ap(str_0)


def test_case_3():
    str_0 = "Vc%XiYv[j?@CPvnPo4D"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    bytes_0 = b"\x95\xc2\x87\xb0\x90b\xab6\xdfT"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    bytes_0 = b"\x1f5+\xb3)_\xc7Z`"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.is_fail()
    var_1.to_either()


def test_case_7():
    none_type_0 = None
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    dict_0 = {}
    list_1 = [tuple_0, dict_0, none_type_0, dict_0]
    validation_0 = module_0.Validation(none_type_0, list_1)
    validation_1 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_box()
    validation_1.map(list_0)


def test_case_8():
    int_0 = 1168
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(int_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    int_0 = 30
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    bool_0 = True
    int_0 = 30
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    validation_1 = module_0.Validation(bool_0, var_1)
    var_1.to_box()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    none_type_0 = None
    complex_0 = 1268.370976 + 1615.6304j
    set_0 = set()
    validation_0 = module_0.Validation(complex_0, set_0)
    var_0 = validation_0.to_either()
    var_0.ap(none_type_0)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.is_fail()
