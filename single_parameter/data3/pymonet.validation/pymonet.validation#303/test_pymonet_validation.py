# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xdc\xc4\xcc.\x88H\xfd\xdbcG\xcd.\xfd\xa9\xfe\x9c]G\x81\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_0.to_try()
    var_4 = var_0.to_either()
    var_3.to_try()


def test_case_1():
    bytes_0 = b"\x0f\xd6\xcd1\x83\xba\xef\xcf\xa99\xe1G"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bytes_0)
    var_1.is_success()


def test_case_2():
    bytes_0 = b"\x85\xe3\xa9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(list_0)


def test_case_4():
    str_0 = "!Y/0xlw[SEqlDJ0w?,{^"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    list_0 = []
    str_0 = "!Y/0xlw[SEqlDJ0w?,{^"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(list_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_9():
    bytes_0 = b"<\x11HB\xf2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, bool_0)
    validation_2 = module_0.Validation(none_type_0, validation_1)
    validation_1.to_either()


def test_case_11():
    int_0 = 475
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.bind(int_0)


def test_case_12():
    str_0 = "\n        Transform Either to Box.\n\n        :returns: Box monad with previous value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    list_0 = [str_0]
    var_1 = validation_0.to_try()
    list_1 = [validation_0, str_0, list_0]
    validation_1 = module_0.Validation(list_1, list_1)
    var_2 = validation_0.is_success()
    var_0.is_fail()


def test_case_13():
    list_0 = []
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.is_success()
    validation_1 = validation_0.__str__()
    validation_1.to_either()


def test_case_14():
    int_0 = 3365
    list_0 = [int_0]
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.__eq__(int_0)
    bytes_0 = b""
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    var_1.to_either()


def test_case_15():
    bytes_0 = b"\xdc\xc4\xcc.\x88H\xfd\xdbcG\xcd.\xfd\xa9\xfe\x9c]G\x81\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_0.__eq__(validation_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, var_0)
    module_1.object(*var_0, **var_0)


def test_case_16():
    bytes_0 = b"\xdc\xc4\xcc.\x88H\xfd\xdbcG\xcd.\xfd\xa9\xfe\x9c]G\x81\xaa"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(var_1, none_type_0)
    float_0 = 820.703
    var_2 = validation_1.__eq__(validation_0)
    var_3 = var_0.to_try()
    validation_2 = module_0.Validation(float_0, var_3)
    var_0.is_fail()
