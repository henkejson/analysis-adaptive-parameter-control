# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = var_1.__str__()
    var_2.to_box()


def test_case_1():
    list_0 = []
    bytes_0 = b"\x88\xfe\xec\t\xe3Y\x86\x8fd\xa6\x17\xcda\r:"
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(bytes_0)


def test_case_2():
    none_type_0 = None
    none_type_0.to_box()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    str_0 = "&|-hph@rS(Xh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_lazy()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    float_0 = 573.0
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(float_0)


def test_case_7():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(bool_0)


def test_case_8():
    str_0 = "iL7x'$a|NU`5gY7=F3R8"
    dict_0 = {str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(str_0, dict_0)
    validation_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = var_0.__eq__(none_type_0)
    var_3.is_success()


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bool_0, bool_0)


def test_case_11():
    int_0 = -272
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_2 = module_0.Validation(str_0, var_1)
    var_2 = validation_2.__str__()
    var_3 = validation_1.to_maybe()
    var_3.is_fail()


def test_case_13():
    bytes_0 = b" &msM\xeb\xcb\xa8\x1a\xe7\x05\x85\x18\xe0\x14\x03"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_3.to_box()


def test_case_14():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_1.bind(str_0)


def test_case_15():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(var_1)
    var_1.to_maybe()


def test_case_16():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = var_0.__str__()
    var_2.bind(str_0)


def test_case_17():
    set_0 = set()
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_0.map(set_0)


def test_case_18():
    bytes_0 = b"\xe4\xdb\xce\xe2\xa8\xf5\xd2\x19"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    list_0 = []
    validation_1 = module_0.Validation(list_0, list_0)
    var_2 = var_0.to_maybe()
    var_3 = validation_1.to_either()
    none_type_0 = None
    validation_2 = module_0.Validation(list_0, none_type_0)
    var_4 = var_3.to_try()
    validation_2.is_success()


def test_case_19():
    str_0 = "&|ph@rStXh.TZDWg1T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_2 = module_0.Validation(str_0, var_1)
    var_2 = validation_0.to_try()
    var_3 = validation_2.__str__()
    var_4 = validation_1.to_maybe()
    var_5 = module_0.Validation(validation_2, var_0)
    var_6 = validation_0.__eq__(validation_2)
    validation_0.ap(var_1)
