# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    bytes_0 = b"F$Hm"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"\x80\x0c)"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = False
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(var_0)


def test_case_8():
    bytes_0 = b"\xaf\x82F$Hm"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_9():
    int_0 = -1269
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    int_0 = 2048
    float_0 = 2445.14
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(int_0)
    var_2 = var_1.to_try()
    var_3 = var_2.map(bool_0)
    bool_1 = True
    set_0 = {bool_1, bool_1}
    list_0 = [bool_1, bool_1, set_0, set_0]
    tuple_0 = (list_0, bool_1)
    validation_1 = module_0.Validation(tuple_0, bool_1)
    var_4 = validation_1.to_lazy()


def test_case_12():
    float_0 = 887.7
    bool_0 = True
    set_0 = {float_0, float_0, float_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.__eq__(float_0)
    validation_0.to_try()


def test_case_13():
    float_0 = 887.3977762974675
    bool_0 = True
    set_0 = {bool_0}
    validation_0 = module_0.Validation(float_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.__str__()
    var_2.is_success()


def test_case_14():
    bool_0 = True
    list_0 = [bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.map(none_type_0)
    var_2.to_box()


def test_case_15():
    float_0 = 887.3977762974675
    set_0 = {float_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    set_0.to_maybe()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_17():
    float_0 = 887.7
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_2.to_box()
    validation_1.__str__()


def test_case_18():
    dict_0 = {}
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_1.map(dict_0)
