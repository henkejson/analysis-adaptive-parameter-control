# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.bind(bool_0)


def test_case_1():
    bytes_0 = b"\xb0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_maybe()
    var_0.bind(var_1)


def test_case_2():
    tuple_0 = ()
    set_0 = set()
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_either()


def test_case_3():
    bytes_0 = b"+\\u\xaa+\x0e\xe7\xc1\x82h\x0f\xa8\xfa/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()


def test_case_4():
    bytes_0 = b"s\xdeMA\x16\xc7\xe13\x07\xe2\x0b\x9e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_7():
    bytes_0 = b"\xb0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = False
    var_0 = validation_0.__eq__(bool_0)
    validation_1.bind(validation_1)


def test_case_8():
    bytes_0 = b"+\\u\xaa+\x0e\xe7\xc1\x82h\x0f\xa8\xfa/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    validation_0.ap(validation_0)


def test_case_9():
    bytes_0 = b"\xdb\x16\xe4\xe6\xad\xd0\x11\x99\xa9"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.map(bytes_0)


def test_case_10():
    bool_0 = False
    complex_0 = -1781.23019 + 2957.106428j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(bool_0)
    var_2.to_lazy()


def test_case_11():
    int_0 = 1695
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_12():
    bytes_0 = b"+\\u\xaa+\x0e\xe7\xc1\x82h\x0f\xa8\xfa/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)


def test_case_13():
    tuple_0 = ()
    set_0 = set()
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_either()
    set_1 = set()
    validation_1 = module_0.Validation(set_1, set_0)
    var_1 = validation_1.to_maybe()
    var_1.to_maybe()


def test_case_14():
    bytes_0 = b"$w"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_1.to_either()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_box()
