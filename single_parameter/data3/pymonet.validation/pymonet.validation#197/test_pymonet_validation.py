# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_success()


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = bool_0.__eq__(bool_0)
    var_1.is_success()


def test_case_2():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.to_maybe()
    dict_1 = {}
    dict_2 = {}
    validation_2 = module_0.Validation(dict_1, dict_2)
    validation_2.map(dict_1)


def test_case_3():
    bool_0 = True
    bool_1 = True
    str_0 = "d"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(bool_1)
    var_2.ap(bool_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(set_0, bool_0)
    none_type_0 = None
    validation_1.map(none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.to_lazy()
    validation_0.ap(bool_0)


def test_case_10():
    bool_0 = False
    str_0 = "1X+Rs;"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_0.bind(bool_0)


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_13():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, bool_1)
    var_2 = validation_0.to_maybe()
    validation_1.bind(bool_0)


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(set_0, bool_0)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_0.is_success()


def test_case_16():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_0.__str__()
    dict_1 = {}
    dict_2 = {}
    validation_2 = module_0.Validation(dict_1, dict_2)
    validation_2.map(dict_1)
