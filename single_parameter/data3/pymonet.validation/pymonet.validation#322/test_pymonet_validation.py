# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_1():
    set_0 = set()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.to_try()


def test_case_2():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = validation_0.is_success()
    var_5 = var_4.__eq__(var_2)
    var_6 = var_2.__eq__(bytes_0)
    var_7 = var_3.__eq__(var_0)
    var_4.to_try()


def test_case_3():
    bytes_0 = b"\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    var_0.is_success()


def test_case_4():
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, validation_0)
    validation_1.to_try()


def test_case_5():
    str_0 = "]W9\r-\\}2zx,q*."
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_lazy()


def test_case_6():
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    str_0.to_either()


def test_case_7():
    str_0 = "\n        :~eturns: True\n        :rtype: Boolean\n        "
    var_0 = module_0.Validation(str_0, str_0)


def test_case_8():
    str_0 = "]W9\r-\\}2zx,q*."
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_12():
    bytes_0 = b"\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    validation_0.ap(validation_0)


def test_case_13():
    bytes_0 = b"\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_0.is_success()


def test_case_14():
    bytes_0 = b"\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_lazy()
    var_4 = var_3.to_maybe()
    var_5 = validation_0.to_try()
    var_6 = validation_0.to_lazy()


def test_case_15():
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(var_1)
    var_3 = module_0.Validation(str_0, var_2)
    var_4 = var_3.__eq__(validation_0)
    var_3.is_fail()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_0.to_lazy()
