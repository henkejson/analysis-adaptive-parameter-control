# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_1():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    str_0 = "X'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.to_maybe()


def test_case_4():
    str_0 = "X'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    str_0.to_maybe()


def test_case_5():
    int_0 = 727
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(bool_0)


def test_case_9():
    str_0 = "Left[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_10():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "0,wt?Sl{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_12():
    float_0 = -32.233
    bool_0 = False
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(bool_0)


def test_case_13():
    bytes_0 = b"G\x15H\r\x85\xcf2)\xf9\xde\x99yn\x06\xf9oA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(bytes_0)
    dict_0 = {bytes_0: bytes_0}
    validation_1 = module_0.Validation(dict_0, bytes_0)
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.to_maybe()


def test_case_14():
    str_0 = "Left[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_15():
    list_0 = []
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, list_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = var_2.__eq__(bool_0)
    var_4 = var_3.__str__()
    var_4.to_either()


def test_case_16():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = module_0.Validation(none_type_0, validation_0)
    var_2 = var_1.__eq__(validation_0)
    var_1.to_try()


def test_case_17():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    var_4 = var_3.ap(none_type_0)
    var_5 = var_4.map(set_0)
    var_5.to_either()
