# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(var_0)


def test_case_1():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.bind(validation_0)


def test_case_2():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_3():
    bytes_0 = b"\x9c\x15\xac\xf3S\xc9\x13\xc0\xa1r`"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(validation_0)


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = var_2.__eq__(validation_0)
    var_4 = validation_0.to_maybe()
    var_3.bind(var_0)


def test_case_5():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_1.to_either()
    validation_1.bind(var_1)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    float_0 = 280.927778
    validation_1 = module_0.Validation(float_0, bytes_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.is_fail()
    var_3 = validation_1.to_either()
    var_4 = validation_1.__eq__(float_0)
    var_1.to_try()


def test_case_8():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(bytes_0)


def test_case_9():
    bool_0 = False
    float_0 = -5001.79823
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(bool_0)


def test_case_10():
    str_0 = "Xjw.5u_i"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, validation_0)


def test_case_11():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    float_0 = 280.927778
    validation_1 = module_0.Validation(float_0, bytes_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.to_either()
    var_1.bind(var_0)


def test_case_12():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()


def test_case_13():
    bytes_0 = b"\xda\x9a\xae\x91Xx\xe5\x0b\x96"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    float_0 = 280.927778
    validation_1 = module_0.Validation(float_0, bytes_0)
    var_1 = var_0.to_try()
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_either()
    var_4 = var_2.__eq__(var_3)
    var_5 = validation_0.to_try()
