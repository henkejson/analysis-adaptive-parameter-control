# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(validation_0)


def test_case_1():
    bytes_0 = b"\xfc\xb3,x\xc1}6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.ap(bytes_0)


def test_case_2():
    bytes_0 = b"\x8c\x87\x8c\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_try()
    var_3 = var_2.map(var_0)
    validation_0.bind(validation_0)


def test_case_3():
    bytes_0 = b"\x03\x02\xd4k\xa3\x1a-UY\xbc=\xc2^\xcb\xbf\x90\xaf\x16=m"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(none_type_0)
    var_1.is_success()


def test_case_4():
    bytes_0 = b"\xfc\xb3,x\xc1}6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    str_0 = "j]"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "t@'%73{@uOr `n"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(str_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, none_type_0}
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: set_0}
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_1.__eq__(var_0)
    validation_0.ap(dict_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_2.__eq__(var_1)
    var_2.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_1.to_either()
    var_4 = var_1.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_try()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = module_0.Validation(bool_0, validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = var_3.__eq__(var_1)
    validation_1 = module_0.Validation(var_4, var_2)
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    validation_2.to_try()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_0.to_either()
