# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 2003.45337
    tuple_0 = (float_0, float_0)
    validation_0 = module_0.Validation(float_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    validation_1 = module_0.Validation(tuple_0, var_1)
    var_3 = validation_1.to_try()
    var_4 = validation_1.to_lazy()
    var_5 = validation_1.__eq__(validation_1)
    var_6 = var_4.to_box()
    var_7 = var_3.__str__()
    validation_1.bind(var_2)


def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    int_0 = -1145
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    var_3 = var_1.bind(int_0)
    var_0.is_success()


def test_case_4():
    str_0 = "J8"
    bytes_0 = b"#\x0e\xea\x89\xf7\xb6g "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(str_0)
    var_2 = validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\xc9n\x08{\xac\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    bytes_0 = b"\x82G"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(var_1, var_1)
    int_0 = 1
    validation_2 = module_0.Validation(int_0, int_0)
    var_2 = validation_2.to_box()
    var_2.ap(validation_1)


def test_case_9():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(int_0)


def test_case_10():
    bytes_0 = b"\x82G"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(var_1, var_1)
    int_0 = 1
    validation_2 = module_0.Validation(int_0, int_0)
    validation_1.ap(validation_0)


def test_case_11():
    str_0 = "J8"
    bytes_0 = b"#\x0e\xea\x89\xf7\xb6g "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(str_0)
    var_1.to_either()


def test_case_12():
    str_0 = "y]/="
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    float_0 = 2003.45337
    tuple_0 = (float_0, float_0)
    set_0 = {tuple_0, float_0}
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_0.to_box()
    validation_1 = module_0.Validation(tuple_0, var_3)
    validation_0.ap(tuple_0)


def test_case_14():
    float_0 = 2003.45337
    tuple_0 = (float_0, float_0)
    set_0 = {tuple_0, float_0}
    validation_0 = module_0.Validation(float_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    validation_1 = module_0.Validation(tuple_0, set_0)
    var_3 = validation_1.to_try()
    var_4 = validation_1.to_lazy()
    var_5 = validation_1.__eq__(validation_1)
    none_type_0 = None
    var_6 = validation_1.to_either()
    var_7 = var_4.to_box()
    validation_2 = module_0.Validation(tuple_0, none_type_0)
    var_8 = var_3.__str__()
    var_9 = validation_0.to_lazy()


def test_case_15():
    float_0 = 2003.45337
    tuple_0 = (float_0, float_0)
    set_0 = {tuple_0, float_0}
    validation_0 = module_0.Validation(float_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.to_try()
    validation_1 = module_0.Validation(tuple_0, set_0)
    var_3 = validation_1.to_try()
    var_4 = validation_1.to_lazy()
    var_5 = validation_0.__eq__(validation_1)
    var_6 = validation_1.to_either()
    var_7 = var_6.to_box()
    validation_2 = module_0.Validation(validation_0, var_2)
    var_8 = validation_1.__str__()
    var_9 = validation_1.__str__()
    var_10 = var_5.__str__()
    var_8.to_try()


def test_case_16():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.ap(none_type_0)
