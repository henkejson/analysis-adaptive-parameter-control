# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    float_0 = -1423.2565
    dict_0 = {float_0: float_0, float_0: float_0}
    list_0 = [dict_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.__str__()
    dict_1 = {}
    dict_1.to_either()


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\x1b\x8c#N(M"
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = var_0.map(validation_0)
    var_3 = var_0.bind(bytes_0)
    var_1.to_either()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_box()
    var_3 = var_0.map(var_1)
    var_4 = var_1.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.ap(var_1)


def test_case_4():
    complex_0 = 1806.61 - 880.695968j
    str_0 = "zzT.8ssSF,u\\QQH/Cd"
    validation_0 = module_0.Validation(complex_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_either()
    var_3 = var_0.map(var_0)
    var_4 = validation_0.to_maybe()
    var_5 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_5)
    var_6 = validation_1.to_lazy()
    var_7 = validation_0.to_either()
    var_8 = var_4.__eq__(var_7)
    var_9 = var_7.map(validation_1)
    var_10 = var_0.to_try()


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_7():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_8():
    complex_0 = 1806.61 - 880.695968j
    str_0 = "zzT.8ssSF,u\\QQH/Cd"
    validation_0 = module_0.Validation(complex_0, str_0)
    validation_0.map(str_0)


def test_case_9():
    int_0 = 0
    int_1 = 2110
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.bind(int_0)


def test_case_10():
    float_0 = 184.0
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(float_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_12():
    complex_0 = 1806.61 - 880.695968j
    str_0 = "zzT.8ssSF,u\\QQH/Cd"
    validation_0 = module_0.Validation(complex_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    list_0 = []
    int_0 = -795
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.ap(list_0)


def test_case_14():
    complex_0 = 1806.61 - 880.695968j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, complex_0)
    validation_0.to_try()


def test_case_15():
    bytes_0 = b"\x19\x00\xddUr\x93\xee"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    dict_0 = {}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.__str__()
    var_0.to_lazy()


def test_case_16():
    complex_0 = 1806.61 - 880.695968j
    str_0 = "zzT.8ssSF,u\\QQH/Cd"
    validation_0 = module_0.Validation(complex_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = var_1.map(var_1)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = var_2.to_lazy()
    var_5 = validation_0.to_either()
    var_6 = var_3.__eq__(var_5)
    var_7 = var_5.map(var_5)
    var_3.to_try()


def test_case_17():
    complex_0 = 1806.61 - 880.695968j
    str_0 = ""
    validation_0 = module_0.Validation(complex_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = var_0.map(var_0)
    var_3 = validation_0.__eq__(var_0)
    var_3.bind(var_3)


def test_case_18():
    complex_0 = 1806.61 - 880.695968j
    str_0 = "zzT.8ssSF,u\\QQH/Cd"
    validation_0 = module_0.Validation(complex_0, str_0)
    bytes_0 = b"\x86\xces\xa7\x18P\x12\x08"
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_1.to_box()
    var_1 = var_0.to_either()
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(var_2, complex_0)
    var_3 = validation_1.__eq__(validation_2)
    var_4 = var_1.__eq__(complex_0)
    var_5 = validation_0.to_lazy()
    validation_3 = module_0.Validation(complex_0, var_5)
    var_6 = validation_1.to_lazy()
    validation_2.to_either()
