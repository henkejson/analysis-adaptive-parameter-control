# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bytes_0 = b"Y\xe1~\xbahX>\xba\xb5{\x15\x97ca\x0b\xf0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_1():
    bytes_0 = b"!\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()


def test_case_2():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_4():
    bool_0 = True
    bytes_0 = b"!\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = module_0.Validation(bool_0, bytes_0)
    var_2 = var_1.is_fail()
    var_3 = validation_0.__str__()
    var_4 = var_1.__eq__(var_2)
    var_3.to_lazy()


def test_case_5():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1, bool_1]
    dict_0 = {}
    tuple_0 = (bool_0, bool_1, list_0, dict_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(var_1, var_0)
    validation_1.map(tuple_0)


def test_case_6():
    bytes_0 = b"\x01"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_7():
    bytes_0 = b"&q#\xd7X:\xb6R\x83Jr\x8b\xe5\x87)\xe4\x99\xdd[\xc5"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_8():
    bytes_0 = b"\xd9\x81Sc\xb1\x85\x1d"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_lazy()


def test_case_9():
    bool_0 = True
    bytes_0 = b"!\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()


def test_case_10():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_2.to_lazy()


def test_case_11():
    bytes_0 = b"Y\xe1~\xbahX>\xba\xb5{\x15\x97ca\x0b\xf0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_12():
    bytes_0 = b"Y\xe1~\xbahX>\xba\xb5{\x15\x97ca\x0b\xf0"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.to_maybe()
    var_0.to_lazy()


def test_case_13():
    bytes_0 = b"!\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    bytes_0 = b"Y\xe1~\xbahX>\xba\xb5{\x15\x97ca\x0b\xf0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_1.to_maybe()


def test_case_15():
    bool_0 = False
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = var_1.to_lazy()
