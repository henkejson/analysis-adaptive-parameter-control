# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -362.364763
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_either()


def test_case_1():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"K\x97*"
    dict_0 = {
        bool_0: bool_0,
        bool_0: none_type_1,
        none_type_1: bool_0,
        none_type_1: bytes_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.bind(none_type_0)


def test_case_3():
    bool_0 = True
    int_0 = 4265
    list_0 = [bool_0, bool_0, int_0, bool_0]
    int_1 = 1
    dict_0 = {int_1: int_1}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(list_0)
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_box()
    var_3.is_fail()


def test_case_4():
    int_0 = -1324
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xdc\x12{K\xbe9\x89\xf8\xfa\x97b\x84\x89\xa0\xc8\x18\xd5"
    float_0 = 4908.958551
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.map(float_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.bind(validation_0)


def test_case_9():
    bytes_0 = b"F=\xff\x1f\xd5\x90\xb4\x860.\x17\xc4\xc2Kn"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_10():
    complex_0 = -2035.538 + 2441.3j
    dict_0 = {complex_0: complex_0}
    bool_0 = True
    tuple_0 = (complex_0, dict_0, bool_0, bool_0)
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_box()
    var_0.bind(tuple_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    bool_0 = False
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(var_0)
    var_0.to_box()


def test_case_13():
    bytes_0 = b"\xdf\x1eo\x98O$?@\xf6w\xccHr\xf2\xa0\xfb*B"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(bytes_0, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(none_type_0)
    var_3.to_lazy()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(dict_0)
    var_1.map(validation_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    bool_1 = False
    bytes_0 = b"\x9c"
    dict_0 = {
        bool_0: bool_0,
        bool_1: none_type_1,
        none_type_1: bool_0,
        none_type_1: bytes_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.to_maybe()


def test_case_16():
    bool_0 = False
    int_0 = 3372
    float_0 = 624.45
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, int_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.bind(bool_0)


def test_case_17():
    bool_0 = False
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(set_0)
    validation_1 = module_0.Validation(var_2, var_2)
    var_3 = validation_1.to_box()
    var_1.is_fail()
