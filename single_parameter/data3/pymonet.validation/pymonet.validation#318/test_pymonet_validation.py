# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    str_0 = "u\\Y_d,,2TSf?kR"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    int_0 = -1129
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    validation_0.map(bool_0)


def test_case_5():
    float_0 = -516.0
    tuple_0 = (float_0, float_0, float_0)
    none_type_0 = None
    int_0 = -194
    validation_0 = module_0.Validation(none_type_0, int_0)
    validation_0.bind(tuple_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.ap(var_0)


def test_case_7():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    str_0 = "u\\Y_d,,2TSf?kR"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.to_try()


def test_case_9():
    float_0 = -1348.066
    int_0 = -1127
    validation_0 = module_0.Validation(float_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_try()


def test_case_10():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()
    str_0 = "Ez!Ych;#k\ns/tw["
    validation_1 = module_0.Validation(bytes_0, str_0)
    var_3 = var_0.to_try()
    var_4 = var_0.__eq__(var_1)
    var_4.is_fail()


def test_case_11():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_12():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_2.__eq__(validation_0)
    var_4 = var_0.to_try()
    var_5 = bytes_0.__eq__(var_2)
    validation_1 = module_0.Validation(var_3, var_3)
    var_6 = validation_0.to_maybe()
    validation_1.is_success()


def test_case_13():
    bytes_0 = b"\xfes\xf8\nH\x82u\x12\xfc\xc7c*\xc6M\xb3\xb6"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.__str__()
    str_0 = "Ez!Ych;#k\ns/tw["
    validation_1 = module_0.Validation(bytes_0, str_0)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = validation_0.__eq__(var_2)
    validation_0.bind(var_0)


def test_case_14():
    bytes_0 = b"%N\xcc0'\xcav8\xe1\xbe\x86\xb77\x91"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    bool_0 = False
    complex_0 = 746.38515 - 4086.26j
    dict_0 = {}
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_1.to_try()
    var_3 = var_0.map(none_type_0)
    validation_2 = module_0.Validation(complex_0, none_type_0)
    var_4 = validation_0.__str__()
    var_5 = validation_1.__str__()
    var_6 = validation_1.__eq__(var_2)
    var_0.is_success()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    complex_0 = 746.38515 - 4086.26j
    dict_0 = {}
    tuple_0 = (complex_0, dict_0)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_either()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, dict_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    var_3 = module_1.object()
    var_4 = validation_1.to_either()
    var_0.is_success()


def test_case_16():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_maybe()
    var_0.to_maybe()
