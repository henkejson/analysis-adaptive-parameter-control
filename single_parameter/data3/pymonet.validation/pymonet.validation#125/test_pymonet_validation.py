# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_lazy()


def test_case_1():
    str_0 = "bt&I=FAF)G"
    str_1 = "s]~G6clmX%"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(str_0)
    var_2 = validation_0.to_either()


def test_case_2():
    str_0 = "bt&I=FAF)G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    float_0 = 683.69028
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    float_0 = 2581.01
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_either()


def test_case_5():
    bool_0 = True
    int_0 = -1211
    validation_0 = module_0.Validation(bool_0, int_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\xb9W\xa0\xb7\x0e]z@}\xdf\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    validation_0.bind(validation_0)


def test_case_7():
    bytes_0 = b"\xb9W\xa0\xb7\x0e]z@}\xdf\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.to_box()
    var_4 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(bool_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_10():
    none_type_0 = None
    int_0 = 2
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.to_lazy()
    bool_0 = False
    set_0 = set()
    list_0 = [bool_0]
    validation_1 = module_0.Validation(list_0, set_0)
    var_1 = validation_1.is_success()
    var_2 = validation_1.is_success()
    var_3 = validation_1.is_fail()
    var_4 = validation_1.to_either()
    var_3.to_lazy()


def test_case_11():
    none_type_0 = None
    float_0 = 2581.01
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = module_0.Validation(validation_1, var_0)
    var_1.map(none_type_0)


def test_case_12():
    str_0 = "\n        :param value: value to store in Box\n        :type value: Any\n        "
    str_1 = "bt&I=FAF)G"
    validation_0 = module_0.Validation(str_0, str_1)
    validation_1 = validation_0.__str__()


def test_case_13():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    validation_0.ap(none_type_0)


def test_case_14():
    bytes_0 = b"\xb9W\xa0\xb7\x0e]z@}\xdf\x12"
    bytes_1 = b"\xb9W\xb7\x0ez@}\xdf"
    validation_0 = module_0.Validation(bytes_1, bytes_0)
    validation_1 = module_0.Validation(bytes_0, validation_0)
    var_0 = validation_0.to_either()
    var_1 = validation_1.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.to_try()
    var_5 = var_3.to_box()
    var_6 = validation_0.__str__()
    var_7 = var_0.to_try()
    validation_2 = validation_0.__str__()
    var_6.is_fail()


def test_case_15():
    str_0 = "NE7N"
    validation_0 = module_0.Validation(str_0, str_0)
    bytes_0 = b""
    set_0 = set()
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.__str__()
    var_3 = validation_1.is_success()
    validation_2 = module_0.Validation(set_0, set_0)
    var_4 = validation_2.to_lazy()
    var_5 = var_4.__eq__(validation_1)
    var_6 = validation_2.to_maybe()
    var_2.to_maybe()
