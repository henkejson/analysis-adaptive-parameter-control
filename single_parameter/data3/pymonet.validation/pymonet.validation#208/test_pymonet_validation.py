# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(list_0)
    list_0.to_either()


def test_case_1():
    none_type_0 = None
    str_0 = "*"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_1.to_maybe()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(list_0)
    var_2 = validation_0.to_lazy()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    int_0 = 463
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    validation_0.map(dict_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    int_0 = 2102
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    validation_0.ap(bool_0)


def test_case_8():
    str_0 = 'jX\\%Je*O:N#o@"TR?\x0c`'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_9():
    int_0 = -525
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Maybe with previous value\n        :rtype: Maybe[A]\n        "
    set_0 = {str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(none_type_1)
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.to_either()
    var_2.is_fail()


def test_case_11():
    int_0 = 3083
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    int_1 = -495
    var_1 = var_0.__eq__(int_1)
    validation_0.to_maybe()


def test_case_12():
    int_0 = -5
    list_0 = [int_0, int_0, int_0]
    bytes_0 = b"Fz_F=#\xa3 "
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.__eq__(int_0)
    int_1 = 3083
    validation_1 = module_0.Validation(int_1, int_1)
    var_1 = validation_0.to_box()
    var_2 = var_1.to_either()
    var_3 = validation_0.__eq__(validation_1)
    var_0.to_maybe()


def test_case_13():
    int_0 = -5
    list_0 = [int_0, int_0, int_0]
    bytes_0 = b"Fz_F=#\xa3 "
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.__str__()
    validation_0.map(bytes_0)


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(list_0)
    var_2 = validation_0.to_lazy()


def test_case_15():
    bool_0 = True
    bytes_0 = b""
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_either()
