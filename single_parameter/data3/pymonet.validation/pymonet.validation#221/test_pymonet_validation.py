# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    bytes_0 = b"y#\r\x01\x80\x1a\x05\x93\x11\xddJ\xa6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__eq__(bool_0)
    var_1.to_try()


def test_case_1():
    bytes_0 = b"y#\r\x01\x80\x1a\x05\x93\x11\xddJ\xa6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()


def test_case_2():
    str_0 = "%!PaRD"
    validation_0 = module_0.Validation(str_0, str_0)
    set_0 = set()
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_either()


def test_case_3():
    str_0 = "%!PaRD"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    validation_0.map(validation_0)


def test_case_4():
    str_0 = "Al\rG(Tb0X|\x0c(m6A*c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_3.map(str_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    str_0 = "0*[''E\t*\x0brcC,Pc#"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()


def test_case_7():
    bool_0 = True
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_0.to_either()


def test_case_8():
    bytes_0 = b"\x8c|Y\xc6\x1c\xe8v\xd1R=\x9b;\x1d"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bytes_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.bind(none_type_0)


def test_case_10():
    bytes_0 = b""
    set_0 = set()
    tuple_0 = (bytes_0, set_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(tuple_0)


def test_case_11():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(list_0, list_0)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_13():
    bytes_0 = b"\xa5/5"
    bytes_1 = b"y#\r\x01\x80\x1a\x05\x93\x11\xddJ\xa6"
    validation_0 = module_0.Validation(bytes_1, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(bytes_1)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_2.to_either()
    var_5 = var_4.to_maybe()
    var_4.is_success()


def test_case_14():
    str_0 = "h\r"
    tuple_0 = (str_0,)
    bytes_0 = b"\xb54$\xae"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(tuple_0)


def test_case_15():
    bytes_0 = b"\xa5/5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(var_0, var_0)
    bool_0 = False
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_2.__eq__(var_0)
    var_2 = validation_1.__eq__(validation_0)
    var_1.to_try()


def test_case_16():
    object_0 = module_1.object()
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()
