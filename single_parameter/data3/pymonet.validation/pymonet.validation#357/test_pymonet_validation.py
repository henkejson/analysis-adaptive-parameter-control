# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xb6\x93s"
    int_0 = 0
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_box()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    bytes_0 = b"^\x0c\xbc\xa2\x01<p\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = ""
    list_0 = [str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(str_0, list_0)
    validation_0.map(str_0)


def test_case_7():
    none_type_0 = None
    str_0 = "z"
    str_1 = "FLAg\rr'v/[~"
    tuple_0 = (str_0, str_1)
    validation_0 = module_0.Validation(tuple_0, str_1)
    validation_0.bind(none_type_0)


def test_case_8():
    int_0 = -475
    bool_0 = False
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(int_0)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_try()
    var_5 = validation_0.to_maybe()
    validation_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_0.__eq__(validation_0)
    var_1.is_success()


def test_case_10():
    str_0 = "~Y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.__str__()
    var_3.to_lazy()


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    float_0 = -1293.21141
    validation_0 = module_0.Validation(set_0, float_0)
    validation_0.to_try()


def test_case_12():
    bool_0 = False
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_either()
    validation_0.bind(bool_0)


def test_case_13():
    int_0 = -475
    bool_0 = False
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.__eq__(int_0)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_maybe()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_15():
    bool_0 = False
    tuple_0 = ()
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_box()
    var_0.to_maybe()


def test_case_16():
    bool_0 = False
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_box()
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, bool_0)
    var_5 = validation_0.__eq__(validation_1)
    var_6 = var_0.__eq__(var_5)
    validation_2 = module_0.Validation(var_6, var_1)
    validation_2.to_maybe()
