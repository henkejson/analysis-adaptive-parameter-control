# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_1():
    bytes_0 = b"(U\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()


def test_case_2():
    bytes_0 = b"V\xfa\xfa\xde\xb9\x9d\xb2\xd3\xe6V"
    bytes_0.to_box()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_5():
    bytes_0 = b"(\x02\xeb/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_6():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)
    validation_1.map(str_0)


def test_case_7():
    bytes_0 = b"V\xfa\xfa\xde\xb9\x9d\xb2\xd3\xe6V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_8():
    bytes_0 = b"V\xfa\xfa\xde\xb9\x9d\xb2\xd3\xe6V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_9():
    bytes_0 = b"V\xfa\xfa\xde\xb9\x9d\xb2\xd3\xe6V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_10():
    str_0 = "C+A$4"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_12():
    bytes_0 = b"(U\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_try()
    var_3 = var_2.__eq__(validation_0)


def test_case_13():
    bytes_0 = b"(U\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()


def test_case_14():
    bytes_0 = b"\x0b\x02\xeb/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_0)


def test_case_15():
    bytes_0 = b"(U\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()


def test_case_16():
    bytes_0 = b"(U\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_17():
    bytes_0 = b'\r"a!YDp$\xb1\xa4%'
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_1.is_fail()


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.to_either()
    var_1.is_success()


def test_case_19():
    bytes_0 = b"{\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = module_0.Validation(var_0, var_0)
    var_2 = var_0.bind(validation_0)
    var_3 = validation_0.__eq__(var_1)
