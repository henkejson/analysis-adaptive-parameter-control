# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 2116
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_box()


def test_case_2():
    bytes_0 = b"\xbb\x1d"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_3():
    bool_0 = False
    none_type_0 = None
    dict_0 = {}
    bool_1 = False
    set_0 = {bool_1, bool_1}
    bytes_0 = b"\x13\xc6\xf8OH\xb6`\xc9\x16"
    tuple_0 = (bool_1, set_0, bytes_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.ap(dict_0)
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.map(bool_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.to_maybe()


def test_case_4():
    none_type_0 = None
    none_type_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    float_0 = 580.359
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_success()


def test_case_7():
    bytes_0 = b"\xc8\xbe\x95\xd1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.is_fail()
    var_0.to_either()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_9():
    int_0 = 2082
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    int_1 = -1798
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.bind(int_1)


def test_case_10():
    str_0 = "ZIlXG"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_11():
    int_0 = 2082
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    validation_0.ap(var_0)


def test_case_12():
    bytes_0 = b"\xd4\xe0\n,\x84\xf7\x90\x8c\x9d\xf9\x8e\xa1\xc64\xbe\xa5\xd3"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = True
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, bool_0)
    dict_0 = {}
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(none_type_0)
    validation_2 = module_0.Validation(dict_0, dict_0)
    var_3 = validation_2.to_lazy()
    var_4 = validation_2.to_either()
    int_0 = -1612
    var_5 = validation_1.to_either()
    var_6 = validation_2.__eq__(int_0)
    var_7 = var_4.to_box()
    var_6.to_box()


def test_case_15():
    bytes_0 = b"J/\xb3&\xe1\x82."
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_16():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_1.to_box()


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(dict_0)
    var_1.to_box()


def test_case_18():
    int_0 = 2082
    validation_0 = module_0.Validation(int_0, int_0)
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = validation_0.__eq__(dict_0)
    int_1 = -1809
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, none_type_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.map(int_1)
