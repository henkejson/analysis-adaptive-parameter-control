# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(tuple_0)
    none_type_0.to_either()


def test_case_1():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_2():
    bytes_0 = b"\x12\x92\xcc\xf0\x9a\xc2d\x91\xc0\xc6\x88\xe3\xd0\xb4a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    int_0 = -1957
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_4():
    bytes_0 = b"\xc6%\x15\xf1Y(\xaf\xd9\x86T\xef\xc5\xfa\xcb\xc7&\x83\xa0\x10"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_5():
    bytes_0 = b"D\x9a\xcaX\xa2"
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_6():
    int_0 = -98
    str_0 = "(hL.0#`*e\rr>6g\nwrzXB"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(none_type_0)


def test_case_8():
    float_0 = -2690.3
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, float_0)
    var_0 = validation_1.to_lazy()


def test_case_9():
    bytes_0 = b"\xb5n\xd6\xa4\xce\xc9\x97x\xa1\x82\x98\x930\x94T\xe8\x93w"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.to_maybe()


def test_case_10():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_11():
    str_0 = "b<"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(validation_0, set_0)
    var_0 = validation_1.to_either()
    var_0.to_either()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__str__()
    validation_1 = module_0.Validation(var_2, var_1)
    var_3 = validation_0.to_try()
    validation_2 = module_0.Validation(var_3, var_1)
    var_4 = validation_2.to_maybe()
    var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__str__()
    var_3 = var_0.to_box()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    validation_2.is_success()


def test_case_15():
    str_0 = "b<"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, set_0)
    var_1 = validation_1.to_either()
    var_1.to_either()


def test_case_16():
    complex_0 = -4729 + 300.928j
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = module_0.Validation(list_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(var_0, complex_0)
    var_2 = validation_1.__eq__(var_1)
    validation_1.is_success()
