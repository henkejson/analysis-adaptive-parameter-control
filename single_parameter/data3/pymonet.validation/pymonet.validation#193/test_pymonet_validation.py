# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -2023.087
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.map(float_0)


def test_case_1():
    bytes_0 = b"="
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    validation_0.map(var_2)


def test_case_2():
    bytes_0 = b"\x1a\xd2\xe7\td\xaf\x14="
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    int_0 = -421
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.bind(int_0)


def test_case_4():
    none_type_0 = None
    int_0 = 623
    set_0 = {int_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_fail()


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_1 = {}
    validation_0 = module_0.Validation(dict_1, dict_1)
    validation_0.bind(dict_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_1.to_box()
    list_0 = [none_type_0, validation_0, none_type_1, none_type_1]
    validation_1.ap(list_0)


def test_case_7():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_8():
    int_0 = 1
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_9():
    int_0 = 1
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(var_0)
    var_2 = var_0.__str__()


def test_case_10():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_12():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_13():
    tuple_0 = ()
    none_type_0 = None
    float_0 = 2282.88029
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(float_0, tuple_0)
    validation_2 = module_0.Validation(none_type_0, tuple_0)
    var_1 = validation_2.to_either()
    validation_1.map(tuple_0)


def test_case_14():
    none_type_0 = None
    int_0 = 623
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_1 = module_0.Validation(validation_0, int_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_maybe()


def test_case_15():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_maybe()
