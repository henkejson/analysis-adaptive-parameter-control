# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_1.to_either()
    var_3 = validation_1.__eq__(var_0)


def test_case_1():
    bytes_0 = b""
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    validation_2 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_2.to_either()
    var_3 = validation_0.to_either()
    var_4 = validation_1.__eq__(var_3)
    var_4.to_maybe()


def test_case_2():
    str_0 = "Lazy[fn={}, value={}, is_evaluated={}]"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_3():
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_5():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    validation_2 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_2.to_either()
    var_2 = var_0.__eq__(str_0)
    var_3 = validation_1.to_maybe()
    validation_1.map(validation_1)


def test_case_6():
    str_0 = "x{5:%'\nLYX&/js5o%"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"\xdb\xcd\xa9c\xc6O\xd8"
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.bind(bytes_0)


def test_case_7():
    float_0 = -4863.19413
    int_0 = -1217
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.ap(float_0)


def test_case_8():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    validation_2 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_2.__eq__(var_1)
    var_3 = validation_2.to_box()


def test_case_9():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.to_either()
    none_type_0 = None
    var_3 = validation_1.__eq__(none_type_0)
    var_4 = validation_0.to_try()


def test_case_10():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_1.to_lazy()
    validation_2 = module_0.Validation(validation_1, str_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = var_1.__eq__(var_0)
    var_3 = var_0.to_either()
    var_4 = validation_0.__str__()
    var_5 = validation_2.to_maybe()
    var_6 = validation_0.to_try()


def test_case_11():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    validation_2 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_2.to_either()
    var_2 = validation_2.__eq__(var_1)
    var_3 = validation_0.to_try()


def test_case_12():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_1.to_maybe()
    validation_2 = module_0.Validation(var_0, var_0)
    var_1 = validation_2.__eq__(validation_1)
    var_2 = validation_1.to_either()
    var_3 = validation_2.__eq__(bytes_0)


def test_case_13():
    bytes_0 = b"\x82\xd0\xeeS]\xba2\xbc\x07"
    str_0 = "ON"
    validation_0 = module_0.Validation(str_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, str_0)
    validation_2 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_2.to_either()
    var_3 = validation_2.__eq__(var_1)
    var_3.to_box()


def test_case_14():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    list_1 = [list_0, list_0, tuple_0]
    validation_0 = module_0.Validation(list_1, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.is_fail()
