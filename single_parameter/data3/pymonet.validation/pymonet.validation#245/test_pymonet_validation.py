# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    str_0 = "N/Td#t{!6em07k(?=`("
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.map(none_type_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(validation_1)
    var_1.to_box()


def test_case_2():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    str_0 = "!)U)-x2]vTD"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    validation_2 = module_0.Validation(bool_0, validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.to_try()
    validation_0.bind(list_0)


def test_case_3():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_1, bool_0, bool_1, bool_1]
    str_0 = "!)U)-x2]vTD"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_either()
    validation_2 = module_0.Validation(bool_0, validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_3.to_try()
    validation_0.bind(list_0)


def test_case_4():
    float_0 = -2831.0
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_5():
    none_type_0 = None
    int_0 = 1
    validation_0 = module_0.Validation(none_type_0, int_0)
    validation_0.to_either()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = var_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_3 = validation_1.__eq__(var_2)
    var_3.to_box()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"4i\xda/m\x16\xc0:\xfe\x17\xb0Aw%[\x1d"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    validation_0 = module_0.Validation(dict_0, bool_1)
    validation_0.bind(tuple_0)


def test_case_9():
    bool_0 = True
    str_0 = "!)U)-x2]vTD"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_either()
    validation_2 = module_0.Validation(bool_0, validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_3.to_try()
    validation_1.ap(validation_2)


def test_case_10():
    int_0 = -2070
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(bool_0)
    var_1.to_box()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_14():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(set_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.__str__()
    validation_1 = module_0.Validation(var_2, set_0)
    var_2.bind(bool_0)


def test_case_15():
    str_0 = "!)U)-x2]vTD"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(validation_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_0.to_try()
    var_4 = var_2.__eq__(var_0)
    var_5 = var_1.to_try()
    validation_1 = module_0.Validation(var_5, var_1)
    validation_1.to_maybe()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.to_box()
