# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 342
    complex_0 = 1997.1731 - 1320.1j
    set_0 = {complex_0}
    validation_0 = module_0.Validation(set_0, complex_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.is_fail()


def test_case_1():
    str_0 = "HmF-:'wp\\$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_2():
    bytes_0 = b"\xa5\x96\x8b\x1fL\x01\xb4\x03\x8b\x87\xa9\xce<\x03\xebT-\xcat\x1f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_4():
    str_0 = "#t.YEl45GW"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(str_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = validation_0.is_fail()
    list_0 = [tuple_0]
    validation_1 = module_0.Validation(list_0, tuple_0)
    var_3 = validation_1.to_either()
    var_4 = validation_1.to_maybe()
    var_5 = var_4.to_try()


def test_case_5():
    bytes_0 = b"\x8b3\xe2\xb3\xc9 \x96k9\xe5\xf5\x80\xef\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    int_0 = 3125
    validation_0.bind(int_0)


def test_case_7():
    int_0 = -2289
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(validation_0)


def test_case_8():
    bytes_0 = b"\xa5\x96\x8b\x1fL\x01\xb4\x03\x8b\x87\xa9\xce<\x03\xebT-\xcat\x1f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    float_0 = 2865.605223
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_1 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_either()


def test_case_10():
    str_0 = "6[8Dd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(str_0, validation_1)
    var_1 = validation_2.__eq__(validation_2)
    validation_3 = module_0.Validation(none_type_0, str_0)
    var_2 = validation_3.to_either()
    var_3 = var_2.to_box()
    validation_1.to_maybe()


def test_case_11():
    str_0 = "6[8Dd"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(str_0, none_type_1)
    var_0 = validation_0.__eq__(none_type_1)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(none_type_0)
    var_1.to_box()


def test_case_12():
    str_0 = "6[8Dd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(str_0)
    var_2 = var_1.ap(str_0)
    validation_1 = module_0.Validation(var_1, var_0)


def test_case_13():
    str_0 = "6[8Dd"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_1 = None
    none_type_2 = None
    validation_1 = validation_0.is_success()
    validation_2 = module_0.Validation(none_type_2, none_type_0)
    var_0 = validation_2.__eq__(validation_0)
    var_1 = validation_2.__eq__(none_type_1)
    var_2 = validation_2.__eq__(var_1)
    validation_1.to_box()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.ap(set_0)


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_16():
    str_0 = "6[8Dd"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_0.is_success()
