# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_fail()


def test_case_1():
    bytes_0 = b"{\xeb=\xb1\x88\xd9\xa0\xfe:x\x88u\xf3\x99\x05R\xa4mEE"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    none_type_0.is_success()


def test_case_2():
    bytes_0 = b"{\xeb=\xb1\x88\xd9\xa0\xfe:x\x88u\xf3\x99\x05R\xa4mEE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__eq__(var_0)
    var_3 = validation_0.to_either()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    list_0 = [validation_0, none_type_0, validation_0]
    validation_1 = module_0.Validation(list_0, validation_0)
    validation_1.to_try()


def test_case_5():
    bytes_0 = b"\x0c\x9c$\xb8\x93"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(validation_0, bytes_0)
    validation_0.map(var_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_7():
    str_0 = "^K(67;G[F\t^"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(str_0)


def test_case_8():
    bytes_0 = b"\xdc8\x15\xa9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    int_0 = 657
    int_1 = -3378
    dict_0 = {int_0: int_0, int_0: int_1}
    bool_0 = True
    dict_1 = {bool_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_1, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(dict_0)
    var_1.to_maybe()


def test_case_10():
    int_0 = -738
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.is_fail()


def test_case_11():
    bytes_0 = b"{\xeb=\xb1\x88\xd9\xa0\xfe:x\x88u\xf3\x99\x05R\xa4mEE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_1.__eq__(var_2)
    var_4 = validation_1.to_either()
    var_5 = validation_0.is_success()
    var_6 = validation_0.is_success()
    var_7 = validation_0.to_either()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    object_0 = module_1.object()
    validation_0.ap(none_type_1)


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    bytes_0 = b"{\xeb=\xb1\x88\xd9\xa0\xfe:x\x88u\xf3\x99\x05R\xa4mEE"
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    var_2 = validation_1.__eq__(validation_1)
    str_0 = "\t[b.`d+u<,"
    dict_0 = {var_2: var_2, var_2: var_2, str_0: bytes_0}
    module_1.object(**dict_0)


def test_case_14():
    bytes_0 = b"{\xeb=\xb1\x88\xd9\xa0\xfe:x\x88u\xf3\x99\x05R\xa4mEE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(none_type_0, var_1)
    var_3 = validation_2.__eq__(validation_0)
    validation_2.is_success()


def test_case_15():
    float_0 = -1394.03675
    none_type_0 = None
    list_0 = []
    set_0 = set()
    validation_0 = module_0.Validation(set_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_2 = var_0.to_lazy()
    validation_1 = module_0.Validation(float_0, none_type_0)
    validation_1.is_fail()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(none_type_0, var_1)
    var_3 = validation_2.__eq__(validation_0)
    validation_2.is_success()
