# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    str_0 = "=5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    str_0 = "GXLv\tE\rL8t_XBGYKmte"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    int_0 = 1555
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_5():
    int_0 = 1555
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_6():
    bytes_0 = b"\xf7g\x96=T\x9el\x1f\xdc\xda\xf5\x90:=,"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_7():
    none_type_0 = None
    int_0 = -2811
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_8():
    str_0 = 'Gqu\x0bAw&\t6eX!Fs"xdc'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "JZ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    set_0 = set()
    str_0 = "md2e0}_\\_C+t4u_`d"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_try()
    var_3.map(set_0)


def test_case_11():
    str_0 = "@c=Ll:(%e\t~={!{/cd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    int_0 = 1595
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    str_0 = ""
    list_0 = []
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.__str__()


def test_case_14():
    float_0 = -2861.0342451851043
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_1 = module_0.Validation(float_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)


def test_case_15():
    set_0 = set()
    str_0 = "\n   \x0b    Transform Lazy into Box with constructor_fn result.\n\n        :returns: Box monad with constructor_fn result\n       :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_either()


def test_case_16():
    str_0 = "fZ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(tuple_0, tuple_0)
    var_3 = validation_1.to_lazy()
    var_0.to_either()
