# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()


def test_case_1():
    int_0 = 0
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_2():
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_0.bind(var_0)


def test_case_3():
    int_0 = 0
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__eq__(validation_0)
    var_2.to_box()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_1.map(validation_0)


def test_case_5():
    int_0 = 6
    int_0.map(int_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_8():
    int_0 = 6
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(var_1)
    validation_0.map(var_2)


def test_case_9():
    int_0 = 0
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = var_0.__eq__(int_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2 = validation_0.__eq__(validation_0)
    validation_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_11():
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.__eq__(dict_0)
    validation_0.bind(var_3)


def test_case_12():
    bytes_0 = b"u2\x97\xef\x8c\xad\x14\xc8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    int_0 = 1329
    validation_2 = module_0.Validation(int_0, int_0)
    var_1 = validation_2.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_13():
    str_0 = "A"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    int_0 = 0
    set_0 = set()
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_1.bind(int_0)


def test_case_15():
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.__eq__(validation_0)
