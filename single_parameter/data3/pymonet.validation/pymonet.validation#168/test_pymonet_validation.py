# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_try()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_1.is_success()


def test_case_2():
    bool_0 = False
    str_0 = "PTj]N~W"
    tuple_0 = (bool_0, bool_0, str_0)
    object_0 = module_1.object()
    bytes_0 = b"]\x1evw"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(object_0)
    var_1.bind(tuple_0)


def test_case_3():
    bytes_0 = b"\x15\xac\xf92o\x14\xe0\xfa\x972\x93\xa4@"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.to_try()


def test_case_4():
    str_0 = 'H+\t-"<vR{15P^'
    bytes_0 = b"\x15\xac\xf92o\x14\xe0\xfa\x972\x93\xa4@"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_maybe()
    none_type_0.to_try()


def test_case_5():
    bool_0 = True
    bool_0.to_try()


def test_case_6():
    bool_0 = True
    var_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_maybe()


def test_case_8():
    str_0 = "}),q"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_2.is_fail()


def test_case_9():
    str_0 = 'H+\t-"<vR{15P^'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    str_1 = "HE3~L.\\"
    validation_0.map(str_1)


def test_case_10():
    bytes_0 = b"\xb6`\xf9\xd2\xc99\x1c"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.bind(bytes_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = True
    set_0 = {bool_0, bool_0}
    tuple_0 = (bool_0, bool_0, set_0, bool_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.ap(tuple_0)


def test_case_12():
    str_0 = 'H+\t-"<vR{15P^'
    bytes_0 = b"\x15\xac\xf92o\x14\xe0\xfa\x972\x93\xa4@"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(str_0, bytes_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_box()
    var_1.bind(var_1)


def test_case_13():
    str_0 = "bw~bM*\t"
    bytes_0 = b"\x15\xac\xf92o\x14\xe0\xfa2\x93\xa4"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(var_0)
    var_1.is_fail()


def test_case_14():
    tuple_0 = ()
    list_0 = [tuple_0]
    tuple_1 = (tuple_0, list_0)
    int_0 = -1917
    bytes_0 = b")\xb1-\xaa\x8f\xad\x05J\xc6\x1b\x05\x96"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(int_0)
    var_4 = var_3.__eq__(tuple_1)
    var_4.to_either()


def test_case_15():
    complex_0 = -339 - 119.3j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    tuple_0 = (dict_0,)
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)


def test_case_17():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.to_try()
