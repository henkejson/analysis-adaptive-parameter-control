# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -1724.24562 + 699.5113j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(complex_0)
    var_0.to_either()


def test_case_1():
    bytes_0 = b"\xb9\xee\xeb>\xf6\xb0\xbd\x98\xce\x02s\xa7\xec\xcb\xf4\xcb%"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xc8y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"\xc8y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    int_0 = 2068
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_5():
    float_0 = 2098.6
    set_0 = {float_0, float_0, float_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_fail()
    var_2.to_box()


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(dict_0)


def test_case_7():
    bytes_0 = b"\xc8y?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_8():
    bytes_0 = b"\xb9\xee\xeb>\xf6\xb0\xbd\x98\xce\x02s\xa7\xec\xcb\xf4\xcb%"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_9():
    complex_0 = -1724.24562 + 699.5113j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_either()


def test_case_10():
    bytes_0 = b"\xc8y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()


def test_case_11():
    bytes_0 = b"h\xebK\xf9\xed4\x1c;\xbb\xee"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.bind(bytes_0)


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_13():
    bytes_0 = b"\xc8y?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_14():
    float_0 = 2098.6
    set_0 = {float_0, float_0, float_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(var_1, validation_0)
    validation_1.to_try()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_17():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, validation_0)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = var_1.__eq__(bool_0)
    var_4 = var_0.to_box()
    var_4.ap(bool_0)
