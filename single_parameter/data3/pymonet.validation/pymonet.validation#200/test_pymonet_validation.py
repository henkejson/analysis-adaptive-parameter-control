# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 2252.62233
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)
    validation_0.to_either()


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = 1
    set_1 = set()
    validation_0 = module_0.Validation(int_0, set_1)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(set_0)
    var_4 = var_0.__str__()
    var_5 = validation_0.is_fail()
    var_0.to_maybe()


def test_case_2():
    int_0 = 1049
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_4():
    int_0 = 1
    set_0 = {int_0, int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = int_0.__str__()
    var_4 = validation_0.is_fail()
    var_5 = validation_0.to_maybe()


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(dict_0)


def test_case_6():
    bool_0 = True
    int_0 = -3191
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, int_0)
    validation_0.bind(bool_0)


def test_case_7():
    bytes_0 = b"3\xd4\x80R\xfc\xc5j:\xda\xb0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    complex_0 = -293.2 - 377.587j
    validation_1 = module_0.Validation(complex_0, complex_0)
    str_0 = "All"
    validation_1.ap(str_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_9():
    list_0 = []
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    str_0 = "\n        Transform Either to Box.\n\n        :returns: Box monad with previous value\n        :rtype: Box[A]\n        "
    validation_1 = module_0.Validation(set_0, str_0)
    var_2 = validation_1.__eq__(list_0)
    validation_2 = module_0.Validation(var_2, var_2)
    var_3 = validation_2.to_lazy()
    validation_3 = module_0.Validation(var_3, set_0)
    var_4 = validation_3.to_either()


def test_case_10():
    int_0 = -3232
    str_0 = "JI{\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.to_either()
    var_4 = var_3.__str__()
    var_5 = var_3.to_box()
    var_6 = var_5.__eq__(int_0)
    var_6.to_box()


def test_case_11():
    int_0 = 692
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_13():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = -184
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_14():
    bytes_0 = b"\xf4\x1f\x16\xea\x89\xf7\xb7\x14\xcf\xdf\x9c>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = var_0.to_lazy()
    var_3 = var_2.bind(bytes_0)


def test_case_15():
    int_0 = 1
    set_0 = {int_0, int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.__str__()
    var_0.is_fail()


def test_case_16():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_try()


def test_case_17():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    bytes_0 = b")\xca#\xdf"
    validation_2 = module_0.Validation(bytes_0, validation_1)
    validation_1.__str__()
