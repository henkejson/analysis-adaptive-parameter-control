# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "s@0d*B7x*p`joFnnj"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(str_0)


def test_case_1():
    int_0 = 5036
    set_0 = set()
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_2.to_maybe()


def test_case_2():
    str_0 = "s@0d**7x*p`joF\tnsj"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    bytes_0 = b"\xbb\xe1\xae\x8fs\xa4\x90\x81\x90L8\xa4\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, none_type_0)
    bool_0 = False
    var_0 = validation_0.to_maybe()
    validation_0.bind(bool_0)


def test_case_5():
    str_0 = "*0/{H43/viZD6z2:"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    str_0 = "s@0d**7x*p`joF\tn'j"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_7():
    int_0 = -516
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_8():
    str_0 = "s@0d*B7x*p`eonnj"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_9():
    str_0 = "s@0d*B7x*p`joFnnj"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_11():
    bytes_0 = b"-\xe8\xbc%\x9a\xdd9\xec\xc3\x11|"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_12():
    str_0 = "*0/{H43qY/viZD6z2:"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    bytes_0 = b"-[\xe8\x02Q\x9a\xa4\xcc\xddJ\xc3\x11|"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_14():
    str_0 = "s@0**7x*p`joF\tn'j"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_15():
    bytes_0 = b"\xbb\xe1\x1e\x8fs\xa4\x90RL8\xa4\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    bytes_0 = b"L<I\xdb\x9fJk\xae"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = bytes_0.__str__()
    var_3 = validation_0.__str__()
    validation_1.is_fail()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()
