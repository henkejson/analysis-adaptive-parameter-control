# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    int_0 = 2831
    int_1 = -308
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_1, int_1: int_1}
    validation_0 = module_0.Validation(dict_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_box()


def test_case_1():
    int_0 = 1
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"\xd0\xbd\xbf\x8d$k\xa3\tW\xc8B\x89\xe6s\xdc\x82\x15\xfb\xf1"
    bytes_1 = b"G\xde\xc2Z"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_1.to_either()


def test_case_3():
    bytes_0 = b"\x14\x932"
    int_0 = 575
    set_0 = {bytes_0, bytes_0, int_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    dict_0 = {}
    bool_0 = False
    validation_0 = module_0.Validation(dict_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = -1238
    set_0 = {int_0}
    set_1 = set()
    validation_0 = module_0.Validation(set_1, set_1)
    validation_0.map(set_0)


def test_case_8():
    int_0 = 1535
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.to_lazy()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_14():
    bool_0 = True
    str_0 = 'X24iyC`Z*"gWW"zwhH.,'
    validation_0 = module_0.Validation(bool_0, str_0)
    int_0 = 2831
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, int_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.map(var_1)


def test_case_15():
    str_0 = "K0uY\n71"
    bool_0 = False
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    str_1 = 'X24iyC`Z*"gWW"zwhH.,'
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(bool_0, str_1)
    none_type_0 = None
    int_0 = 2831
    var_2 = validation_1.to_either()
    validation_2 = module_0.Validation(var_2, int_0)
    var_3 = validation_1.__str__()
    var_4 = validation_2.__eq__(none_type_0)
    var_5 = validation_1.__eq__(validation_1)
    str_2 = "D-R\n2-;?T@,{$&\x0b"
    validation_3 = module_0.Validation(var_4, str_2)
    validation_3.map(none_type_0)


def test_case_16():
    str_0 = "K0uY\n71"
    bool_0 = False
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    str_1 = ""
    validation_1 = module_0.Validation(bool_0, str_1)
    int_0 = 2831
    var_1 = validation_1.to_either()
    validation_2 = module_0.Validation(var_1, int_0)
    var_2 = validation_1.__str__()
    var_3 = validation_2.__eq__(int_0)
    var_2.map(var_1)


def test_case_17():
    str_0 = "K0uY\n71"
    bool_0 = False
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    str_1 = 'X24iyC`Z*"gWW"zwhH.,'
    validation_1 = module_0.Validation(var_0, bool_0)
    var_1 = validation_0.to_either()
    float_0 = -513.0
    validation_2 = module_0.Validation(str_1, float_0)
    validation_2.__str__()
