# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_fail()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.map(none_type_0)


def test_case_2():
    str_0 = "ka+`6J\n|\t9M=5UOQ"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_1.__str__()
    var_0.to_box()


def test_case_3():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (set_0,)
    tuple_1 = (bool_0, tuple_0)
    str_0 = "Lt\x0c"
    set_1 = {str_0, str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_1, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(tuple_1)
    var_1.to_lazy()


def test_case_4():
    tuple_0 = ()
    int_0 = 66
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = tuple_0.__eq__(int_0)
    int_1 = 1524
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.map(int_1)


def test_case_5():
    bool_0 = False
    int_0 = -465
    str_0 = "$:vtQ5C4VP=%\t]"
    tuple_0 = (str_0, bool_0)
    tuple_1 = (bool_0, bool_0, int_0, tuple_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_1)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_fail()
    var_1.is_fail()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_10():
    int_0 = 1
    int_1 = -4
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.bind(int_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b"*\xd9\xea\xd0\x1bTL~\xb2\x85\xe9\xdd\xb4?W\x87\x95\xe9"
    str_0 = "ka+`6J\n|\t9M=5UOQ"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_box()
    none_type_0 = None
    var_1 = validation_1.__eq__(none_type_0)


def test_case_13():
    bytes_0 = b"\x18\x1act\xdd\xe8MRlI!\xd55\xde\x98\xf1xp\xe0'"
    bytes_1 = b"\xc5*\xc7\xc6~N\x93\x15\xaf\xd4\xc6"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(bytes_0)


def test_case_14():
    int_0 = 1907
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    float_0 = -790.18
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_0.ap(list_0)


def test_case_17():
    str_0 = ")A%o',2KK\x0bb{/G2_{"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_0.to_either()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = validation_0.to_either()
    var_6 = validation_0.to_maybe()
    int_0 = -3121
    var_7 = validation_0.__eq__(int_0)
    var_7.is_fail()
