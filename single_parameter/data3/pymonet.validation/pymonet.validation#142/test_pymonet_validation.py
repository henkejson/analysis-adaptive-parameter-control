# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "\x0cK\r8"
    int_0 = 539
    tuple_0 = (str_0, int_0, str_0, str_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = var_0.__str__()
    bool_0 = False
    validation_1 = module_0.Validation(var_1, bool_0)
    validation_1.to_either()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    str_0 = "Qjoa|]rqY<SOclU%K"
    var_1 = validation_0.__eq__(str_0)
    var_1.to_try()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.is_fail()


def test_case_3():
    bytes_0 = b"\x82\x8b\xd5B\xde\xd2\xe7\xfc\xf2\x8f\xbd\x0c\x01\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_1.is_fail()


def test_case_5():
    bytes_0 = b"\x1e\xf9\x03\x01g\xd0J"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    validation_1.__str__()


def test_case_7():
    int_0 = 1386
    validation_0 = module_0.Validation(int_0, int_0)
    validation_1 = module_0.Validation(validation_0, int_0)
    validation_1.is_fail()


def test_case_8():
    int_0 = 213
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_10():
    int_0 = 1386
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(int_0)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__str__()
    var_3 = var_1.bind(validation_0)
    var_4 = var_1.map(var_1)
    var_5 = var_1.to_either()
    var_5.to_either()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bytes_0 = b"\x13\xfe\xec\x80\x15SQ\x9ef\r\x0cWM"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_15():
    str_0 = "MKE"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    tuple_0 = ()
    var_2 = validation_0.__eq__(tuple_0)
    var_3 = validation_0.is_fail()
    var_4 = var_0.__str__()
    var_5 = var_4.__eq__(validation_0)
    var_6 = var_1.__eq__(var_5)
    var_7 = validation_0.is_success()
    tuple_0.map(var_7)


def test_case_16():
    bytes_0 = b"\x13\xfe\xec\x80\x15SQ\x9ef\r\x0cWM"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_17():
    bytes_0 = b"\x13\xfe\xec\x80\x15SQ\x9ef\r\x0cWM"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.ap(bytes_0)
