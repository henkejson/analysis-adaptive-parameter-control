# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_0.bind(none_type_0)


def test_case_2():
    bytes_0 = b"\x94X\xe8\xea\xf7m\x10!\xc8\x11\xfc\xaf!\xbeIw\x05K6\xe5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_1.to_try()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    float_0 = 2153.23
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.ap(float_0)


def test_case_4():
    int_0 = -909
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    bytes_0 = b"\x9c\xfb"
    list_0 = [bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.ap(none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.to_maybe()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_11():
    float_0 = 2320.4982
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.ap(float_0)


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_2.map(dict_0)


def test_case_13():
    complex_0 = -2078.58 + 4639.219291j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.to_maybe()
