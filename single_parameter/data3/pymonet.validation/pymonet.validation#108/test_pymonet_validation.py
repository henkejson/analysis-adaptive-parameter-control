# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(dict_0, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_try()


def test_case_1():
    bytes_0 = b"2\\M\x93Qs\x9d\xf7\x9b\x1e|\x82\xd1\xa1"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_success()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_either()
    var_4 = var_3.map(none_type_0)
    var_5 = var_2.__eq__(none_type_0)
    var_6 = validation_0.is_fail()
    var_3.to_either()


def test_case_2():
    str_0 = "I,5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.is_success()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_either()


def test_case_5():
    bytes_0 = b"C\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_6():
    str_0 = "!4CxX"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_7():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.bind(object_0)


def test_case_8():
    set_0 = set()
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    validation_0.ap(set_0)


def test_case_9():
    bytes_0 = b"\x17\xcbZ\xc4G\xa1\x1c\x0b<"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_10():
    int_0 = 1290
    int_1 = -1003
    validation_0 = module_0.Validation(int_1, int_1)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_lazy()
    validation_0.ap(int_0)


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_box()
    none_type_0 = None
    var_3 = var_2.__str__()
    none_type_0.to_either()


def test_case_12():
    int_0 = -818
    list_0 = [int_0, int_0, int_0, int_0]
    str_0 = "&m"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = var_0.__eq__(list_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_1.to_try()
    var_2.is_fail()


def test_case_13():
    bytes_0 = b"\xfb\x9bK\x90Q8h"
    bool_0 = False
    set_0 = {bytes_0, bool_0, bytes_0, bool_0}
    set_1 = set()
    validation_0 = module_0.Validation(set_1, set_1)
    var_0 = validation_0.__str__()
    var_0.map(set_0)


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_0.to_box()
    var_3 = var_2.__str__()
    validation_2 = var_1.to_lazy()
    var_4 = validation_0.to_either()
    var_2.bind(validation_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    bool_0 = True
    validation_1 = module_0.Validation(var_2, bool_0)
    var_3 = var_1.to_box()
    none_type_0 = None
    var_4 = var_1.__str__()
    dict_1 = var_1.to_maybe()
    validation_2 = module_0.Validation(dict_1, dict_1)
    validation_2.bind(none_type_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_box()
    var_3 = var_2.to_try()
    var_4 = validation_0.is_fail()
    validation_1.map(var_1)


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_box()
