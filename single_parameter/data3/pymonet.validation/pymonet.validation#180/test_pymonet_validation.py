# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(list_0)


def test_case_1():
    str_0 = "UVoYkn)Ahdo!3B&fF/p"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    str_0 = "|ougr,0&=k)g;^=cbv 7"
    list_0 = [str_0, str_0, str_0]
    validation_1 = module_0.Validation(list_0, list_0)
    var_1.is_fail()


def test_case_3():
    str_0 = "rd/R\\Cl{l-"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    var_3 = var_2.__eq__(var_2)
    var_4 = var_2.__eq__(var_3)
    var_4.bind(str_0)


def test_case_4():
    bytes_0 = b'{"\xb9'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bytes_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bytes_0 = b"\x1a\x8f\x98\x1d\xd5\x97\x14\xc7}\xbb\xe8J\x97a\xce\xdc\x99=\xf0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\x01\xc0\xc1\xa6(\x89\x93\xe2.?\xd5\xd6\xb71"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_8():
    bytes_0 = b"\x950\x96q\xa3\xc51\x9f\xd9\\\xdf\xbb\xe7\xa6\x1c}\x03\x7fb5"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(bytes_0, validation_0)
    validation_1.bind(none_type_0)


def test_case_9():
    int_0 = -3173
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_10():
    complex_0 = 302.11217 - 1655.9j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    float_0 = 3392.345
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_12():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_try()


def test_case_13():
    int_0 = -1320
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.ap(int_0)


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(var_0)
    bool_0 = True
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_1.is_success()


def test_case_15():
    int_0 = 179
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()


def test_case_16():
    str_0 = "'f)//0FyDnJ^v@l\r#"
    bytes_0 = b"\xfd\x88\x9fc\xd5\xbf\x1c\r\x0c\xae\xc8j["
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.__eq__(str_0)
    bytes_1 = b'{"\xb9'
    validation_1 = module_0.Validation(bytes_1, bytes_1)


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
