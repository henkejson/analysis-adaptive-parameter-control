# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x18A\xe3\x99\x13\xb4\xaf\xa5&\xab\xeeS"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.bind(bytes_0)
    var_3 = var_0.__eq__(bytes_0)
    var_1.ap(validation_0)


def test_case_1():
    int_0 = 3046
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_lazy()


def test_case_2():
    list_0 = []
    list_1 = []
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_box()
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_5.to_maybe()
    var_7 = validation_0.is_fail()
    var_8 = var_6.__eq__(list_0)
    var_8.map(var_1)


def test_case_3():
    bytes_0 = b"\x18A\xe3\x99\x13\xb4\xaf\xa5&\xab\xeeS"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_2.to_try()


def test_case_4():
    bytes_0 = b'v\x9fX\x7f\xf9"H\xd3'
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bytes_0 = b"(@\xcaJ\xad"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_7():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.map(bytes_0)


def test_case_8():
    bytes_0 = b"\x18A\xe3\x99\x13\xb4\xaf\xa5&\xab\xeeS"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    validation_0.bind(var_0)


def test_case_9():
    int_0 = 811
    validation_0 = module_0.Validation(int_0, int_0)
    bytes_0 = b'v\x9fX\x7f\xf9"H\xd3'
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.ap(validation_0)


def test_case_10():
    set_0 = set()
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_box()
    var_0.ap(set_0)


def test_case_11():
    bool_0 = False
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.ap(bool_0)


def test_case_12():
    bytes_0 = b"(@\xcaJ\xad"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = var_0.to_try()
    var_4 = validation_0.__eq__(validation_0)
    var_0.bind(bytes_0)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"\x18A\xe3\x99\x13\xb4\xaf\xa5&\xab\xeeS"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = validation_0.to_try()
    var_4 = var_1.to_try()
    var_5 = validation_0.__eq__(validation_0)
    var_6 = var_1.bind(bytes_0)
    var_7 = var_5.__eq__(validation_0)
    str_0 = "D\\tsSt\tM"
    validation_1 = module_0.Validation(str_0, str_0)
    var_8 = validation_1.__eq__(validation_0)
    var_8.ap(var_7)
