# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(bool_0, tuple_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_box()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_either()
    var_1 = validation_1.to_box()
    var_2 = var_1.to_try()
    var_3 = var_1.to_maybe()
    var_4 = var_3.to_box()
    validation_1.to_try()


def test_case_2():
    str_0 = "\n g&!MjF!73&[8L wlS"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_box()
    var_2 = var_0.__str__()
    var_3 = validation_0.to_maybe()
    var_2.ap(str_0)


def test_case_3():
    str_0 = "|I-ey?&.X"
    str_0.to_box()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    int_0 = -2992
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_either()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__eq__(var_1)
    var_3 = validation_0.to_maybe()
    var_4 = var_1.to_either()
    var_5 = var_4.__eq__(var_1)


def test_case_7():
    str_0 = "|I-ey?&.X"
    str_1 = "|I-y&X"
    validation_0 = module_0.Validation(str_0, str_1)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.bind(str_0)
    var_3 = var_2.__eq__(validation_0)
    var_4 = var_1.bind(var_1)
    var_5 = var_0.__eq__(validation_0)
    var_6 = var_4.to_box()
    var_7 = var_2.bind(str_0)
    var_8 = var_4.to_box()
    validation_0.map(var_1)


def test_case_8():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    bytes_0 = b"\xcd\xb5\xcf"
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.ap(bytes_0)


def test_case_10():
    str_0 = "|I-ey?&.X"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.bind(str_0)
    var_3 = var_2.__eq__(validation_0)
    var_4 = var_2.bind(validation_0)
    var_5 = var_4.__eq__(str_0)
    var_6 = validation_0.to_box()
    var_7 = var_4.bind(str_0)
    str_0.to_box()


def test_case_11():
    str_0 = 's:+k" NoL|}2H['
    float_0 = -2779.885
    dict_0 = {str_0: str_0, float_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b"aV]"
    bytes_1 = b"w"
    list_0 = [bytes_1]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_try()
    var_0.to_box()


def test_case_13():
    bytes_0 = b"aV]"
    bytes_1 = b"w"
    list_0 = [bytes_1]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_14():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(none_type_0)


def test_case_15():
    float_0 = -941.254591
    bool_0 = True
    dict_0 = {float_0: bool_0, float_0: bool_0, bool_0: float_0}
    tuple_0 = (float_0, dict_0, dict_0, dict_0)
    tuple_1 = (tuple_0, bool_0)
    list_0 = [bool_0, float_0]
    tuple_2 = (tuple_1, list_0)
    validation_0 = module_0.Validation(tuple_2, bool_0)
    validation_1 = module_0.Validation(tuple_2, tuple_0)
    validation_2 = module_0.Validation(float_0, list_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_box()
