# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0.is_success()


def test_case_1():
    int_0 = 0
    bool_0 = True
    validation_0 = module_0.Validation(int_0, bool_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_2():
    str_0 = "Pm,`R\x0cICK+FiQ"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    bytes_0 = b"\x16\xc8\xa1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    validation_0.bind(var_2)


def test_case_4():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.__eq__(dict_0)
    var_2.to_lazy()


def test_case_5():
    bytes_0 = b"\xee\xbcG{\xb2\x1c4Q\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.ap(bytes_0)
    var_3 = var_0.to_box()
    var_4 = var_2.to_box()
    var_5 = var_0.__str__()
    var_4.bind(bytes_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bytes_0 = b"\r\x8c\xa2n\x12\xec\xbdr\xf9\xbf\xf2\xe3\xd0\xbc]\x9e\xf2m("
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1}
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.map(bool_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xce\x11'\x11\xe4*\x08\x18m_{o"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    int_0 = 442
    float_0 = -1368.658
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.to_box()
    var_0.map(int_0)


def test_case_11():
    str_0 = "Pm,`R\x0cICK+FiQ"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.__str__()


def test_case_12():
    str_0 = "Pm,`R\x0cICK+FiQ"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(none_type_0)
    var_3 = validation_1.__str__()
    var_4 = var_1.to_maybe()
    var_0.is_success()


def test_case_13():
    str_0 = "=\r?WXz`zw]iG"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_0.to_either()


def test_case_14():
    str_0 = "Pm,`R\x0cICK+FiQ"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    set_0 = set()
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_1.to_either()
    validation_2 = module_0.Validation(validation_0, str_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.__eq__(str_0)
    var_4 = var_3.__str__()
    var_3.ap(set_0)


def test_case_15():
    str_0 = "Pm,`R\x0cICK+FiQ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = var_0.__str__()
    validation_2 = module_0.Validation(var_2, validation_1)
    validation_0.bind(str_0)


def test_case_16():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(none_type_0)
    var_3 = validation_1.__str__()
    var_4 = var_3.__eq__(none_type_0)
    var_5 = var_4.__str__()
    validation_2 = module_0.Validation(var_4, str_0)
    validation_0.ap(var_1)
