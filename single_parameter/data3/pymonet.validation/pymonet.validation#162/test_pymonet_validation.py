# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)


def test_case_1():
    str_0 = "ALkSHA${V04"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_2():
    str_0 = 'q,p^r$"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_4():
    str_0 = "grTE]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()


def test_case_5():
    float_0 = 1399.789
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "4bhuyQRoXvY"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_7():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Sum[B]\n        :returns: new Sum with sum of concat semigroups values\n        :rtype: Sum[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = "Byr C=x|0Z*A"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_9():
    float_0 = 1399.789
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()


def test_case_10():
    float_0 = 1399.789
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    int_0 = 4
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(int_0)


def test_case_12():
    str_0 = "rTE]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_13():
    str_0 = "+8k`p6Mr{4>"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_14():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_18():
    str_0 = "o"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_0.__eq__(validation_1)
    var_2.is_success()
