# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = 2380
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_lazy()


def test_case_1():
    bytes_0 = b"9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = validation_0.__str__()
    var_1.is_fail()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_try()
    var_3 = var_0.to_either()
    var_2.to_maybe()


def test_case_3():
    bytes_0 = b"9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_5():
    bytes_0 = b"R\x98~\xb0:c\\\x18-fl\xf8\xcd^U\x9c"
    bytes_0.to_either()


def test_case_6():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_7():
    float_0 = -3710.389
    str_0 = "zU2IJwA,$}&PYDS<2X"
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    validation_0.map(validation_0)


def test_case_9():
    bytes_0 = b"\xd2\xce\xf2+\xf7L\xba\xc2~?\x82\xfcrq\x1a\xbb\x05\x03Y*"
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(bytes_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = True
    none_type_1 = None
    validation_1 = module_0.Validation(bool_0, none_type_1)
    validation_1.ap(validation_1)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_0.bind(validation_0)


def test_case_12():
    bytes_0 = b"9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_2 = validation_1.to_lazy()
    var_3 = var_1.to_lazy()
    var_4 = validation_0.is_success()
    var_5 = validation_0.to_maybe()
    var_6 = var_4.__eq__(validation_1)
    var_7 = var_3.to_try()
    var_8 = validation_0.to_try()
    validation_0.ap(var_8)


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = True
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.bind(validation_0)
