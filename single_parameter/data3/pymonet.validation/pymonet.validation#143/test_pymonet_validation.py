# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "V1!cRxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_box()
    var_2.is_success()


def test_case_1():
    str_0 = "V1!cRxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_1.to_maybe()


def test_case_2():
    str_0 = "V1!cZxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_box()
    var_3 = var_2.__str__()
    var_4 = validation_0.__str__()
    var_2.map(var_3)


def test_case_3():
    bool_0 = False
    bool_1 = True
    bytes_0 = b"\xfaw0_D"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(bool_1)
    var_2 = var_1.to_lazy()
    var_3 = var_2.__eq__(bool_0)
    var_3.is_success()


def test_case_4():
    str_0 = "{ `!9!<<Q8jA[`lA6E"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()


def test_case_6():
    str_0 = "V1!cRxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.__eq__(validation_0)
    str_0.is_success()


def test_case_7():
    str_0 = "\n        Transform Lazy into not empty Maybe with constructor_fn result.\n\n        :returns: not empty Maybe monad with constructor_fn result\n        :rtype: Maybe[A]\n        "
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    validation_0.map(str_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    float_0 = -519.0
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.bind(float_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_10():
    str_0 = "V1!cRxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_0.to_box()
    var_3.is_success()


def test_case_11():
    float_0 = 30.245
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_12():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = var_1.to_box()
    var_5 = validation_0.to_box()
    validation_0.ap(var_1)


def test_case_13():
    str_0 = "V1!cZxGugV>Qz\\"
    validation_0 = module_0.Validation(str_0, str_0)
    list_0 = [str_0]
    validation_1 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_1.to_box()
    var_4 = validation_1.to_box()
    var_5 = validation_0.__str__()
    var_6 = var_1.__str__()
    var_7 = var_1.bind(validation_0)
    list_1 = [var_5, var_0]
    var_8 = var_6.__eq__(list_1)
    var_9 = var_0.to_box()
    var_10 = var_9.to_lazy()
    var_0.to_lazy()
