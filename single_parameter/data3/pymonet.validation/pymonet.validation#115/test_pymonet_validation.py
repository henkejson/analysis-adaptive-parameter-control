# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\xf4g\x16S\xa2"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_try()
    var_1 = var_0.__str__()
    var_1.map(none_type_0)


def test_case_1():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.ap(bool_0)


def test_case_2():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_1.to_maybe()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    complex_0 = -2520.4 + 239.805j
    validation_0 = module_0.Validation(complex_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_8():
    float_0 = 2698.239
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_9():
    int_0 = 3646
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_10():
    dict_0 = {}
    float_0 = 550.0
    int_0 = 1429
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__eq__(float_0)
    var_2.ap(dict_0)


def test_case_11():
    str_0 = ";Wv=(}Hg"
    dict_0 = {str_0: str_0}
    validation_0 = module_0.Validation(dict_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_0.to_box()


def test_case_12():
    bytes_0 = b"5\xc8\xbc\x12\xe3\xd5\xd6\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1.to_maybe()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\xf4g\x16S\xa2"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_either()
    var_1 = var_0.__str__()
    var_1.map(none_type_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_0.to_maybe()


def test_case_16():
    bytes_0 = b"5\xc8\xbc\x12\xe3\xd5\xd6\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = validation_0.to_maybe()
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_2 = validation_1.__eq__(validation_0)
    validation_1.is_success()


def test_case_17():
    bytes_0 = b"5\xc8\xbc\x12\xe3\xd5\xd6\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(validation_1)
    var_1.bind(validation_1)
