# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1, bool_1)
    bool_2 = False
    dict_0 = {tuple_0: bool_2, bool_2: bool_1}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_1 = module_0.Validation(var_0, bool_1)
    validation_1.bind(var_0)


def test_case_1():
    str_0 = "K6r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    bytes_0 = b"0rKH#\x95j\xbb\x0b\xca\xcc\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = True
    bytes_0 = b"\xba\x82"
    str_0 = "i4qu3CG"
    tuple_0 = (bytes_0, str_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    validation_0.map(bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_8():
    float_0 = -218.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(float_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_10():
    bool_0 = False
    int_0 = 41
    validation_0 = module_0.Validation(bool_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_either()


def test_case_14():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1, bool_1)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = var_1.__str__()
    var_0.to_either()


def test_case_15():
    bool_0 = True
    list_0 = []
    none_type_0 = None
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    dict_0 = {none_type_0: bool_1, bool_1: list_0}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_2 = module_0.Validation(dict_0, list_0)
    var_1 = validation_1.to_box()
    var_2 = validation_2.to_either()
    var_3 = validation_2.to_box()
    var_4 = validation_2.to_lazy()
    var_5 = var_4.map(var_1)
    var_1.is_fail()


def test_case_16():
    bool_0 = True
    list_0 = []
    none_type_0 = None
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    validation_1 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(none_type_0, bool_0)
    var_1 = validation_2.to_box()
    var_0.to_either()


def test_case_17():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(var_0)
    var_1.to_box()
