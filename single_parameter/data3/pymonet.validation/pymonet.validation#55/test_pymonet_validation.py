# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_maybe()


def test_case_1():
    bytes_0 = b"\xcc\xb4A-7{\xd8\x0ezl\xfc\rT\xb8(\x0b\xcd"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_2 = var_1.__eq__(bytes_0)
    var_3 = var_0.__str__()
    var_3.is_success()


def test_case_2():
    none_type_0 = None
    none_type_0.to_maybe()


def test_case_3():
    str_0 = "9?U^#2\r"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    complex_0 = 1835 - 3430.879646j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\xbdh>\xbfV\x92\xc1\xb2|\x99\xe7F\xc1\xcc\xea\x97_\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_7():
    str_0 = "9?U^#2\r"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_8():
    bytes_0 = b"\xcc\xb4A-7{\xd8\x0ezl\xfc\rT\xb8(\x0b\xcd"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    validation_0.ap(var_0)


def test_case_9():
    str_0 = "O6uKT7Vaf1E?}D{H~"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_box()
    var_0.to_box()


def test_case_10():
    bytes_0 = b'\xad\xab\xc1"\x8e\x07\x98\xe4\xad\xa2\xab\x94\xf5\x0c'
    bytes_1 = b"\xc4\xe4\xa0"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_maybe()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_12():
    int_0 = -156
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"V\xffFg\\\xba|4+\xa1M\xa3/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(bytes_0)
    var_4.to_box()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_1 = validation_1.to_try()
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_2.__eq__(validation_1)
    var_3 = validation_0.__str__()
    var_1.map(validation_1)


def test_case_15():
    str_0 = "ifz^O\ris/T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(bytes_0)
    var_4.to_box()


def test_case_17():
    int_0 = -3625
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    str_0 = ""
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.is_fail()
    none_type_1 = None
    var_2 = var_0.__eq__(none_type_1)
    var_3 = validation_1.is_fail()
    var_4 = var_3.__str__()
    var_5 = validation_1.__eq__(none_type_1)
    var_6 = validation_1.to_either()
    var_7 = validation_1.__eq__(var_6)
    var_5.to_box()


def test_case_18():
    bytes_0 = b"\xa9\xf0\xbd{\xf7\x1e\x19\xc4\x82)7\xee\x81"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(bytes_0)
    var_1 = validation_1.to_try()
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_2.__eq__(validation_1)
    var_3 = validation_0.__str__()
    var_2.to_try()


def test_case_19():
    bytes_0 = b"\xa9\xf0\xbd{\xf7\x1e\x19\xc4\x82)7\xee\x81"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_0.to_try()
    validation_2 = module_0.Validation(var_1, var_0)
    var_3 = validation_2.__eq__(validation_0)
    validation_2.__str__()
