# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    str_0 = "Z0h=jpf~f"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__str__()
    var_1.to_either()


def test_case_1():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_maybe()
    var_5 = var_4.to_try()
    var_6 = var_3.to_box()
    var_6.is_fail()


def test_case_2():
    none_type_0 = None
    str_0 = "xik8#C7`ElB<%{F"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, none_type_0)
    var_2 = validation_0.to_either()


def test_case_3():
    int_0 = 1
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.map(int_0)


def test_case_4():
    bytes_0 = b"\x1bd/\x06\x9c\xba\xedg\xa8P\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\x1bd/\x06\x9c\xba\xedg\xa8P\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    bytes_0 = b"\x1bd/\x06\x9c\xbaP\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    str_0 = "\x0bc01%W"
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_box()
    list_0 = [str_0, str_0, str_0, str_0]
    bytes_0 = b"=r\x97\x06\xfb'\x97\xf7\x94w"
    validation_1 = module_0.Validation(list_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = var_1.to_try()
    validation_1.map(none_type_0)


def test_case_8():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0}
    none_type_0 = None
    list_0 = [object_0, dict_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "xik8#C7`ElB<%{F"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    validation_1 = module_0.Validation(var_2, none_type_0)
    var_3 = validation_1.to_box()


def test_case_11():
    object_0 = module_1.object()
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(object_0)
    var_2.is_fail()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    str_0 = "Z0h=jpf~f"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_3 = validation_0.is_success()
    validation_1.to_either()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    bool_1 = False
    str_0 = "Z0h=jpf~f"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(bool_1)
    validation_2 = module_0.Validation(validation_0, validation_1)
    var_1 = validation_1.__eq__(validation_2)
    var_0.to_either()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()
