# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.is_success()


def test_case_1():
    none_type_0 = None
    str_0 = "\n        Take function, store it and call with Task value during calling fork function.\n        Return new Task with result of called.\n\n        :param fn: mapper function\n        :type fn: Function(value) -> B\n        :returns: new Task with mapped resolve attribute\n        :rtype: Task[Function(resolve, reject -> A | B]\n        "
    int_0 = 1144
    tuple_0 = (str_0, int_0, int_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.bind(none_type_0)


def test_case_2():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.map(var_0)


def test_case_3():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_success()


def test_case_4():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    int_0 = 5652
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_6():
    float_0 = -450.624671
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"Q\xd5/\xc7\x0fm"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.to_try()
    validation_1 = module_0.Validation(var_2, validation_0)
    var_4 = module_0.Validation(var_1, bytes_0)
    var_5 = validation_0.to_try()
    validation_2 = module_0.Validation(validation_0, var_1)
    validation_2.map(var_1)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.bind(tuple_0)


def test_case_9():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    validation_0.ap(validation_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_try()
    var_4 = var_3.__str__()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_5 = validation_0.to_try()
    var_6 = validation_1.to_lazy()
    var_3.to_box()


def test_case_12():
    bytes_0 = b"iTf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.map(var_0)
    var_3 = validation_0.to_try()
    var_4 = validation_0.to_box()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_0.is_success()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    str_0 = '!`0"d'
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_2.ap(str_0)


def test_case_16():
    bytes_0 = b"Tf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(bytes_0, validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_1.to_maybe()


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.is_fail()
