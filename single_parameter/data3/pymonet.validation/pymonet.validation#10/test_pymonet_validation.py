# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = ""
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__str__()
    var_0.to_either()


def test_case_2():
    bool_0 = True
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(bool_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    var_4.to_maybe()


def test_case_3():
    str_0 = '\t\\t){M6w(A^$D"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bool_0 = False
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(bool_0)
    var_2 = var_0.map(var_0)
    bool_0.to_try()


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_6():
    bytes_0 = b"F\x90\x0c4a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.map(var_0)


def test_case_8():
    str_0 = "y\th\r5>)|/%j2,5{"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_9():
    str_0 = "I%Iz1^5(GJ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(str_0, none_type_0)
    validation_1.ap(validation_1)


def test_case_10():
    bytes_0 = b"O\xb9C\xbab\x1c\x10\xab\x8f\xd5\xa4@"
    str_0 = "E1~3**.OzkK~A*"
    float_0 = -318.132
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(str_0)
    var_2 = var_1.ap(bytes_0)
    var_2.to_either()


def test_case_11():
    int_0 = -315
    tuple_0 = ()
    bytes_0 = b")\xbf\xed\xa6\xa9f\x7f\x99\xfc\xa1"
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(int_0)
    none_type_0 = None
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.bind(none_type_0)


def test_case_12():
    str_0 = '\t\\t){M6w(A^$D"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()


def test_case_13():
    str_0 = "I%Iz1^5(GJ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_1.to_maybe()
    var_2.to_maybe()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    str_0 = "I%Iz1^5(GJ"
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.to_lazy()
    var_4 = validation_1.__eq__(var_3)
    var_5 = var_3.to_maybe()
    var_6 = var_3.map(validation_1)
    var_7 = validation_1.to_either()
    var_8 = validation_1.__eq__(var_6)
    var_8.to_maybe()


def test_case_16():
    str_0 = "I%Iz1^5(GJ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    var_1.to_maybe()


def test_case_17():
    int_0 = 3414
    set_0 = set()
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.to_either()
    var_0.ap(set_0)
