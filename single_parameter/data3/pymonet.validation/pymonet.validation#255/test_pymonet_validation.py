# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.__eq__(var_2)


def test_case_1():
    bytes_0 = b"\x86\xd3\xb5q\x0f\xe6w\xe5\x9aW!\xee\xda\x9b|8\xe4("
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_2():
    bytes_0 = b"\xf5\xb0\x17p"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.map(none_type_0)


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    float_0 = 829.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_either()


def test_case_5():
    bytes_0 = b"\xf8r\x8e\x1d\xe5l\xfaT$\x90"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    list_0 = []
    str_0 = "G*7?"
    validation_0 = module_0.Validation(str_0, list_0)
    validation_0.map(list_0)


def test_case_7():
    float_0 = 213.420513
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(float_0, float_0)
    validation_2 = module_0.Validation(float_0, float_0)
    validation_2.bind(float_0)


def test_case_8():
    int_0 = 3363
    bytes_0 = b"P\x0b\xfc'RN$\xfc=\xab?"
    tuple_0 = (int_0, bytes_0)
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(tuple_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_1.to_lazy()


def test_case_10():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(var_1)
    var_3 = var_1.to_try()
    var_3.to_either()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    bytes_0 = b"\xf8r\x8e\x1d\xe5l\xfaT$\x90"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.is_success()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    var_4 = var_3.__eq__(var_2)
    bool_0 = False
    validation_1 = module_0.Validation(var_3, bool_0)
    var_5 = validation_0.__eq__(var_2)
    var_6 = var_3.to_lazy()
    var_7 = validation_0.to_try()
    var_8 = validation_0.to_either()
    var_9 = validation_0.__str__()
    var_10 = var_3.__eq__(var_4)
    validation_2 = module_0.Validation(var_5, var_10)
    var_11 = var_7.__str__()
    var_10.to_maybe()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(list_0)
    none_type_0 = None
    var_2 = var_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_3 = validation_0.__eq__(validation_1)
    var_4 = var_0.to_lazy()
    var_5 = var_4.to_try()
    var_6 = var_0.to_either()
    var_7 = validation_0.to_maybe()
    var_8 = var_7.__str__()
    var_9 = var_5.__eq__(var_2)
    validation_2 = module_0.Validation(var_7, var_8)
    validation_3 = module_0.Validation(var_1, var_1)
    validation_3.__str__()
