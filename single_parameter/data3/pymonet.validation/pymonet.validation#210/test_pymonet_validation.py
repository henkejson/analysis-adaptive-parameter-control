# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    complex_0 = 154.468 - 2161.20657j
    int_0 = -867
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(complex_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = "=/@.Tv9MI*+%]K"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_0.bind(str_0)


def test_case_2():
    int_0 = 1065
    list_0 = [int_0, int_0]
    str_0 = "-\x0bzt'Z4c28G8CvJ*>"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    list_0.to_try()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    str_0 = "=/@.Tv9MI*+%]K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_0.ap(var_1)


def test_case_6():
    str_0 = "=/@.Tv9MI*+%]K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_3.__eq__(var_3)
    validation_0.map(str_0)


def test_case_7():
    int_0 = 1310
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.to_lazy()
    validation_1.bind(var_1)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_1: bool_0}
    list_0 = [dict_0, bool_1]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_0.to_try()


def test_case_10():
    str_0 = "=/@.Tv9MI*+%]K"
    var_0 = module_0.Validation(str_0, str_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_either()
    var_3 = var_2.to_lazy()
    module_1.object(**var_3)


def test_case_11():
    str_0 = "=/@.Tv9MI*+%]K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = validation_0.__eq__(validation_0)
    var_4.ap(var_1)


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = var_0.__eq__(set_0)
    var_3 = var_1.to_either()
    var_4 = var_3.to_maybe()
    var_5 = validation_0.to_try()
    var_6 = var_4.to_box()
    var_7 = var_4.to_box()
    var_8 = validation_0.__str__()
    var_9 = var_1.to_try()
    var_10 = var_3.__str__()
    var_10.to_try()


def test_case_13():
    int_0 = 46
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_try()
    var_1.bind(int_0)


def test_case_14():
    str_0 = "=/@.Tv9MI*+%]K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(str_0, validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(var_0)
    var_4 = validation_0.to_maybe()
    var_5 = var_4.to_lazy()
    validation_0.map(var_5)
