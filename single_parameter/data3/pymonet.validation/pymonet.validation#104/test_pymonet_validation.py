# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bytes_0 = b"\xd5HI\xf1"
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.bind(none_type_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    int_0 = -2220
    tuple_0 = (set_0, int_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    list_0 = []
    float_0 = -1318.5
    set_0 = {float_0, float_0, float_0, float_0}
    validation_0 = module_0.Validation(set_0, list_0)
    var_0 = validation_0.to_either()
    validation_0.map(set_0)


def test_case_4():
    str_0 = "\x0cvG3Yj!5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bytes_0 = b"M\x81\x9e\xc9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_0.to_lazy()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_9():
    int_0 = -1156
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_11():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bool_0 = False
    bool_1 = True
    set_0 = {bool_1}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(bool_0)
    var_1.to_either()


def test_case_13():
    str_0 = "\x0cvG3Yj!5"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_box()
    var_3.bind(dict_0)


def test_case_14():
    str_0 = "\x0cvG3Yj!5"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_0.map(none_type_0)


def test_case_15():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_1.__eq__(var_0)
    var_0.to_lazy()


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.to_box()
    list_1 = [bool_0]
    validation_1 = module_0.Validation(list_1, list_1)
    var_1 = validation_1.to_maybe()
    dict_0 = {}
    validation_2 = module_0.Validation(var_1, dict_0)
    var_2 = var_1.to_lazy()
    var_3 = validation_0.__eq__(validation_1)
    var_4 = var_2.to_either()
    var_4.is_fail()


def test_case_17():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    int_0 = 1
    validation_0 = module_0.Validation(list_0, int_0)
    var_0 = validation_0.to_box()
    list_1 = []
    validation_1 = module_0.Validation(list_1, list_1)
    var_1 = validation_1.to_maybe()
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_2.to_lazy()
    var_3 = validation_2.__eq__(list_1)
    var_4 = validation_1.is_fail()
    var_4.map(list_0)
