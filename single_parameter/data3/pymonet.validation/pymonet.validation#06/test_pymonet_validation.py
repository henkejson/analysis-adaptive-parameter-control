# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    str_0 = "hxJuX1RCN.7e7\\P"
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(str_0)
    var_1.map(none_type_0)


def test_case_1():
    float_0 = -1792.4
    validation_0 = module_0.Validation(float_0, float_0)
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.__str__()
    var_0.is_success()


def test_case_2():
    bytes_0 = b"$\x99e\x11\xf6\xe1\x9d\xc3\x98\x1b2\xc5\xd5\x0b\x13i\xf4\xa4\xb7>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bytes_1 = b"\x11\xc9\xce\xe6XJ\xc1M\xd9J'j~BP\x01\xb8\xa1"
    none_type_0 = None
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    validation_1 = module_0.Validation(bytes_1, none_type_0)
    validation_1.__str__()


def test_case_3():
    str_0 = ">"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, validation_0)
    validation_1.to_try()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = ">"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.map(var_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.to_maybe()


def test_case_10():
    list_0 = []
    list_1 = [list_0]
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.ap(list_1)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(set_0)
    var_2 = validation_0.to_box()
    var_2.to_box()


def test_case_13():
    none_type_0 = None
    str_0 = "hxJuX1RCN.7e7\\P"
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(str_0)
    var_2 = validation_0.to_maybe()
    var_1.map(none_type_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_0)
    var_2.bind(none_type_0)
