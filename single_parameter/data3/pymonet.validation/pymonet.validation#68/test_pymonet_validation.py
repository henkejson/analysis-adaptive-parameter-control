# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = -2205
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_box()


def test_case_1():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_2.to_maybe()


def test_case_2():
    bytes_0 = b"\xd9\x18aI:+8JZ\xe0!B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.is_fail()
    var_2.is_success()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    int_0 = 2738
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_success()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = ""
    int_0 = 2779
    list_0 = [str_0, str_0, str_0, int_0]
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(list_0)


def test_case_8():
    str_0 = "UWDZBn3w6*#!"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.bind(str_0)


def test_case_9():
    object_0 = module_1.object()
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    validation_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_box()
    var_0.bind(none_type_0)


def test_case_11():
    bytes_0 = b"\xd9\x18aI:+8JZ\xe0!B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.__str__()
    var_2.to_lazy()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.to_maybe()


def test_case_13():
    bytes_0 = b"@\xd9\x03\xed<\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_0.__str__()
    var_4 = var_1.__eq__(var_2)
    var_5 = var_1.to_lazy()
    var_6 = validation_0.is_fail()
    var_7 = validation_0.__eq__(validation_0)
    var_6.to_box()


def test_case_14():
    bytes_0 = b"@\xd9\x03\xed<\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_box()
    var_3 = var_0.__eq__(var_2)
    var_4 = module_0.Validation(var_3, validation_0)
    var_5 = var_4.__eq__(validation_0)
    var_3.to_lazy()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = validation_0.__str__()
    var_5 = var_2.__eq__(var_3)
    var_6 = var_2.to_lazy()
    var_7 = validation_0.is_fail()
    var_8 = validation_0.__eq__(validation_0)
    var_7.to_box()
