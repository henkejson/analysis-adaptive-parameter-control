# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    none_type_0 = None
    str_0 = "!d4`W1E;hrH,"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.__str__()


def test_case_2():
    str_0 = "o"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    str_1 = "/\x0cybg"
    validation_1 = module_0.Validation(str_1, str_1)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_2.__eq__(none_type_0)
    var_2 = validation_1.to_maybe()
    var_2.is_success()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()


def test_case_5():
    complex_0 = 1658.19 + 1749.39j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(complex_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "C6O)u ('C+Rv-)nLJF"
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_0.map(str_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    complex_0 = 1843 - 434j
    int_0 = 235
    str_0 = "zZZ"
    bytes_0 = b"Qb\xa0\x8f\xfe`\xd2"
    tuple_0 = (complex_0, int_0, str_0, bytes_0)
    validation_0.bind(tuple_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_9():
    str_0 = "o"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, str_0)
    str_1 = "/\x0cyq\r"
    validation_2 = module_0.Validation(str_1, str_1)
    none_type_0 = None
    validation_3 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_2.__eq__(none_type_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.to_box()
    var_1.ap(validation_3)


def test_case_10():
    bool_0 = False
    bool_1 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(bool_0, bool_1)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_either()
    var_1.map(bool_1)


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()


def test_case_12():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.ap(validation_0)


def test_case_13():
    str_0 = "/\x0cybg"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_14():
    str_0 = "o"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.ap(validation_1)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_16():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()
