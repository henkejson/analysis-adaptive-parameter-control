# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(var_0)
    var_0.to_either()


def test_case_1():
    bytes_0 = b"\xd1\xb5\xae\\\x9d"
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = var_0.__str__()


def test_case_2():
    float_0 = -285.0
    tuple_0 = (float_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_3():
    str_0 = "YhsD3qPje{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.__str__()


def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    validation_0.map(set_0)


def test_case_5():
    bytes_0 = b".rdXhz\xc6\xe0/\x9c\xda\xe1\xd6/\xe6\xa4r\x9f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_8():
    str_0 = "rV&gJ}u"
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(str_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_10():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    str_0 = "~"
    validation_0 = module_0.Validation(set_0, str_0)
    none_type_0 = None
    float_0 = -740.0
    validation_1 = module_0.Validation(float_0, float_0)
    validation_2 = module_0.Validation(validation_1, str_0)
    validation_1.ap(none_type_0)


def test_case_11():
    bytes_0 = b"\x0b\xed_\x19\xd4s\x14\xe2xc\xbc\x92!\xfa\xe0"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.ap(bytes_0)


def test_case_12():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.map(set_0)
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.is_fail()
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_5 = var_3.__eq__(var_1)
    bool_1 = False
    validation_1.map(bool_1)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_box()
    var_4.to_box()


def test_case_14():
    bytes_0 = b"\xd1\xb5\xae\\\x9d"
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.to_try()
    var_3 = var_1.to_lazy()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = var_1.__str__()
    var_3 = var_1.__eq__(bytes_0)
    var_4 = validation_0.__str__()
    var_5 = var_4.__eq__(bytes_0)
    var_6 = validation_0.to_box()
    var_3.to_either()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.bind(var_0)


def test_case_17():
    int_0 = 1531
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.map(bool_0)
