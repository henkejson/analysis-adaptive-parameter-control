# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "=Gx'd#EJLRF\rvX"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    object_0 = module_1.object()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.to_maybe()
    var_1.is_fail()


def test_case_2():
    str_0 = "=Gx'd#EJLRF\rvX"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.to_maybe()
    object_0 = var_0.to_box()


def test_case_3():
    none_type_0 = None
    none_type_0.to_try()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_6():
    complex_0 = 1216.311 - 1627j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_fail()


def test_case_7():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_0.map(validation_0)


def test_case_8():
    none_type_0 = None
    str_0 = "W2A"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "=Gx'd|.#EJPR\rvX"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = module_0.Validation(var_0, var_2)
    var_3.ap(var_1)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_1.is_success()


def test_case_12():
    int_0 = 1
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_1.is_fail()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.__str__()
    var_5 = var_4.__eq__(none_type_0)
    var_5.to_box()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "=Gx'd#EJLRF\rvX"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.to_either()
    var_2 = validation_0.__eq__(validation_1)
    var_2.is_fail()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = ""
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_1.to_maybe()
    module_1.object(**validation_0)
