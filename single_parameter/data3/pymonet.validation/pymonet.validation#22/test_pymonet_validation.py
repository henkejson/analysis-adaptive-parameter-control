# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.__str__()
    var_0.to_either()


def test_case_1():
    bytes_0 = b"\xb9,\x8fnR\xf1vZA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xb9,{nR\xf1vZA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.__str__()
    validation_1.map(none_type_0)


def test_case_6():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    validation_0.bind(tuple_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_8():
    str_0 = "kzuw[5X-e J9&D[98"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.to_lazy()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)


def test_case_10():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = validation_0.is_success()


def test_case_11():
    bytes_0 = b"\xb9,\x8fnR\xf1vZA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()


def test_case_12():
    bytes_0 = b"\xb9,\x8fnR\xf1vZA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()


def test_case_13():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_14():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0, str_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, list_0)
    var_3 = validation_1.__str__()
    var_4 = var_1.to_try()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_5 = validation_1.__eq__(validation_2)
    var_6 = var_2.to_lazy()
    validation_3 = module_0.Validation(var_5, tuple_0)


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_16():
    str_0 = "Box[value={}]"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0,)
    list_0 = []
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_box()
    var_4 = var_2.to_box()
    var_5 = validation_0.to_either()
    validation_1 = module_0.Validation(var_1, list_0)
    var_6 = validation_1.__eq__(var_0)
    var_7 = validation_1.__str__()
    var_7.bind(var_2)


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.to_maybe()
