# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_1():
    bytes_0 = b"\xae\x86\x83\xdc"
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_0.to_lazy()


def test_case_3():
    bytes_0 = b"\xae\x86\x83\xdc"
    list_0 = []
    str_0 = "vIK#`Y^j*y\\mYN]\tB\r"
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(list_0, str_0)
    var_1 = validation_1.__eq__(bytes_0)
    var_2 = validation_1.is_fail()


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(none_type_0)
    var_2.is_success()


def test_case_5():
    str_0 = "yI)BE"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(none_type_0)
    var_1 = validation_0.to_box()
    validation_2 = module_0.Validation(str_0, none_type_0)
    var_2 = validation_1.to_either()
    var_3 = validation_2.__eq__(str_0)
    var_3.is_success()


def test_case_6():
    str_0 = '6[W"'
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_7():
    int_0 = 1341
    set_0 = {int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    validation_0.to_maybe()


def test_case_8():
    bytes_0 = b""
    str_0 = '">6[W\t"'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bytes_0)


def test_case_9():
    bytes_0 = b"~E\xb1\xa4o@0\x85\xcb`K\xf3\xf7\xf5"
    none_type_0 = None
    bytes_1 = b"\x06a\x7f\xebz=mk\tL"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.to_lazy()
    validation_1.ap(bool_0)


def test_case_11():
    bytes_0 = b"\xae\x86\x83\xdc"
    list_0 = []
    str_0 = "vIK#`Y^j*y\\mYN]\tB\r"
    validation_0 = module_0.Validation(list_0, str_0)
    validation_1 = module_0.Validation(list_0, str_0)
    var_0 = validation_1.__eq__(bytes_0)
    var_1 = validation_0.is_success()
    var_2 = validation_1.to_box()
    var_3 = var_2.to_either()


def test_case_12():
    str_0 = ">`Xq=+"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    str_0 = "zapdH:"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_0.to_maybe()


def test_case_14():
    bytes_0 = b"7mFY\xa7\x96\xb4=\xae\x08\xb0\xa06%h\xb2\xa0Sg\xcb"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 1
    tuple_0 = (dict_0, int_0, bytes_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_1.to_box()
    var_0.to_try()
