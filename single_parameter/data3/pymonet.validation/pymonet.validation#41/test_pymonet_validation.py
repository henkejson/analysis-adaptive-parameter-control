# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    tuple_0.to_try()


def test_case_1():
    int_0 = 0
    str_0 = "\n"
    tuple_0 = (str_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_maybe()


def test_case_2():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    complex_0 = 678.57642 - 1052.8458j
    bool_0 = False
    str_0 = ";*"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.ap(complex_0)
    var_2.is_fail()


def test_case_4():
    tuple_0 = ()
    tuple_0.to_box()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(validation_0)


def test_case_9():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_1.is_success()
    var_4 = validation_1.to_either()
    var_5 = var_0.__str__()
    validation_1.bind(var_2)


def test_case_10():
    int_0 = -1121
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.ap(int_0)


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.to_box()
    var_3.to_box()


def test_case_12():
    float_0 = -595.7
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(float_0)


def test_case_13():
    bytes_0 = b"\xabw\xe1!P\x80fAm\xc5\xac\xbe\xc0\xa9\x9b\x82H"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.to_either()
    var_5 = var_4.to_try()
    var_6 = validation_0.to_maybe()
    var_7 = var_3.__str__()
    var_8 = validation_0.to_box()
    var_9 = var_8.to_lazy()
    var_8.to_box()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(tuple_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.to_either()
    var_1.to_try()


def test_case_16():
    bytes_0 = b"\xd5y\x01\xfb\x0c^M"
    str_0 = "*LC"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_either()
