# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_maybe()


def test_case_1():
    bytes_0 = b"{-\x1b6\x00~\xe8lf\x9b\xd9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()
    var_2.to_maybe()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_2 = var_1.to_maybe()
    validation_1.bind(validation_0)


def test_case_3():
    str_0 = "e8Kk7jul4A4EH3K$N@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_either()
    var_1.to_try()


def test_case_4():
    none_type_0 = None
    none_type_0.to_box()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    int_0 = -1851
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_7():
    int_0 = -649
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    str_0 = " b/mU$av\nV0}"
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(str_0)


def test_case_9():
    bytes_0 = b"a\xc3\x8f\x7f:me\xf5l\x0e<"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_10():
    float_0 = 1529.7
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(validation_0, validation_0)
    validation_0.ap(float_0)


def test_case_11():
    none_type_0 = None
    int_0 = 1091
    none_type_1 = None
    validation_0 = module_0.Validation(int_0, none_type_1)
    var_0 = validation_0.to_box()
    var_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b"y}Y!\xe1"
    bool_0 = True
    set_0 = set()
    tuple_0 = (bool_0, bool_0, set_0, set_0)
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(bytes_0)


def test_case_13():
    bytes_0 = b"\x89\xf7\x9e\x1c\xf76,\xd4\xfb\x94\xbd\xa0;\xc9r\xc6"
    complex_0 = 2045.366271 - 787j
    dict_0 = {complex_0: complex_0}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(complex_0, dict_0)
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    var_3 = var_2.to_lazy()
    var_1.map(var_2)


def test_case_14():
    int_0 = -1851
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(int_0, int_0)


def test_case_15():
    float_0 = 1465.869
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_3.to_maybe()


def test_case_16():
    bytes_0 = b"!\x85\xb6pq\xc1c<"
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.map(bytes_0)


def test_case_17():
    bytes_0 = b"!\x85\xb6pq\xc1c<"
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_0.map(bytes_0)
