# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "5CA'$&+\r\x0bw;"
    bytes_0 = b"d\x9d?\xb5k\xf1"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.bind(bytes_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    validation_0.ap(var_0)


def test_case_2():
    bytes_0 = b"\x8c>>\xd6*\xe4\x16G\x0c-\x84\xde"
    bytes_0.ap(bytes_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    float_0 = -2437.1
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_5():
    float_0 = 2896.241878
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_8():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    int_0 = -2100
    validation_0.ap(int_0)


def test_case_9():
    str_0 = "KD@i;I\x0c[\nFbI"
    bool_0 = True
    tuple_0 = (str_0, str_0, bool_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_10():
    float_0 = -4210.225582
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(float_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    bytes_0 = b""
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_fail()


def test_case_13():
    float_0 = -4210.225582
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(float_0)
    bytes_0 = b"\n"
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.map(bytes_0)
    var_4 = var_2.__str__()
    var_5 = var_0.to_maybe()
    var_6 = var_0.to_box()
    var_4.to_maybe()


def test_case_14():
    bytes_0 = b""
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_maybe()
    var_0.to_lazy()


def test_case_15():
    dict_0 = {}
    bytes_0 = b"\x8c>>\xd6*\xe4\x16G\x0c-\x84\xde"
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__eq__(validation_0)
    bool_0 = True
    var_3 = var_0.__eq__(bool_0)
    var_4 = var_0.bind(validation_0)
    var_5 = var_4.to_try()
    var_5.to_box()


def test_case_16():
    dict_0 = {}
    none_type_0 = None
    bytes_0 = b"\x8c>>\xd6*\xe4\x16G\x0c-\x84\xde"
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = validation_0.__eq__(var_0)
    var_1.bind(var_4)


def test_case_17():
    bytes_0 = b"\xbf"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_fail()


def test_case_18():
    bytes_0 = b""
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    validation_1 = module_0.Validation(dict_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.is_fail()
    var_1.to_maybe()
