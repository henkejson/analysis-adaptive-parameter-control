# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    float_0 = -1791.426
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_lazy()


def test_case_1():
    bytes_0 = b"\x8d\x05\xfaE\xd4a\xb9\xf4+"
    list_0 = [bytes_0, bytes_0]
    list_1 = []
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = list_0.__eq__(list_0)
    validation_1 = module_0.Validation(list_1, list_1)
    var_2 = validation_1.is_fail()
    var_2.to_either()


def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bytes_0 = b"Z!2\xca\xac\x08z9\xc4\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(set_0)


def test_case_3():
    int_0 = 1622
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    float_0 = -1791.426
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_7():
    float_0 = -2115.705267
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(float_0)


def test_case_8():
    str_0 = "YT{Y6"
    bytes_0 = b"\x9b]\xcf\xd7u\x13h2\xb9H\x93\n\xdb\xba\\\xc7\xe0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(str_0)


def test_case_9():
    bytes_0 = b"\xbb\xee\x81!\x7f\xeb\x96=\x9c\x8f\x18/\n\xad\xe9\x8f\xae"
    list_0 = []
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__eq__(var_1)
    var_1.is_fail()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    tuple_0 = (bool_0, bool_0, bool_0, list_0)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.is_fail()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"\x8d\x05\xfaE\xd4a\xb9\xf4+"
    list_0 = [bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_14():
    bytes_0 = b"\x1c\xf6\xa6[]\xc7\x12\xf2\x1a\xad\x03}\xb64\x8d\xbd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_15():
    bytes_0 = b"\x8d\x05\xfaE\xd4a\xb9\xf4+"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    bytes_1 = b"6!\xa2\xb7K\xbe"
    list_1 = []
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = module_0.Validation(none_type_0, bytes_1)
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.is_fail()
    validation_1 = module_0.Validation(none_type_0, list_1)
    validation_2 = module_0.Validation(bytes_1, list_1)
    var_3 = validation_2.is_fail()
    var_4 = validation_1.to_try()
    var_3.to_maybe()


def test_case_16():
    bytes_0 = b"\x9e\x1d_\xaa\xe5\xd2\x88\x1by\xf2\xc4"
    bytes_1 = b"6!\xa2\xb7K\xbe"
    list_0 = []
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_maybe()
    object_0 = module_1.object()
    validation_1 = module_0.Validation(validation_0, list_0)
    validation_2 = module_0.Validation(bytes_1, list_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.to_maybe()
    var_3 = var_2.__eq__(validation_0)
    var_3.to_maybe()


def test_case_17():
    bytes_0 = b"\x8d\x05\xfaE\xd4a\xb9\xf4+"
    list_0 = [bytes_0, bytes_0]
    list_1 = []
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(var_0)
    var_2.ap(var_0)


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_1.is_fail()
