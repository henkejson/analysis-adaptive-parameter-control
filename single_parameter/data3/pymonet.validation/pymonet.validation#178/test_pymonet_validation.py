# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xcfL\x1bg\x94\x12Y\x85\xff\x0c\x0e\xd2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_1.ap(list_0)


def test_case_2():
    bytes_0 = b"\\$_\xb4\xb9\xd9\xac\xa2{\x1b\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    float_0 = 750.66843
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()


def test_case_5():
    bytes_0 = b"$\x9a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_6():
    bytes_0 = b"\\_\xb4\xb9\xd9\xac\xa2V\x1b\x14"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_7():
    float_0 = 750.66843
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(validation_0)


def test_case_8():
    bytes_0 = b"Q\xc7E\xbdki\x1c{\x01\x88\x8c:"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    complex_0 = -3367.07097 - 909.865606558987j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    tuple_0 = (dict_0,)
    bytes_0 = b"L\xcf\xc3^zLD\xdf\xdf\xcbO\x11\xc6\x9bs\xb4\\\xa0\x9f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(tuple_0)
    var_2 = var_1.to_try()


def test_case_11():
    str_0 = "KrKJCo\t\x0bJ!|\nuY"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = list_0.__str__()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_2, none_type_0)


def test_case_13():
    bytes_0 = b"\xca\x02\xff\x91\x7f\xcc\xa5\xf6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"\\$_\xb4\xb9\xd9\xac\xa2{\x1b\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_16():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = module_1.object()
    validation_1 = module_0.Validation(var_1, var_0)


def test_case_17():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_success()
    validation_1 = module_0.Validation(dict_0, none_type_0)


def test_case_18():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.__eq__(validation_0)
    var_4 = var_2.ap(var_1)
    var_1.to_box()
