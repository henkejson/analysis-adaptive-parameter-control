# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    var_1.to_box()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    str_0 = "&Y>AN"
    validation_0 = module_0.Validation(str_0, str_0)
    object_0 = validation_0.to_try()


def test_case_5():
    bytes_0 = b"\xe4=\x14`"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_fail()
    var_4 = var_1.bind(var_3)


def test_case_6():
    bytes_0 = b"\xe4=\x14`"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    validation_0.map(bytes_0)


def test_case_7():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(list_0)


def test_case_8():
    int_0 = 0
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    validation_0.ap(int_0)


def test_case_9():
    str_0 = "&Y>AN"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = str_0.__eq__(var_0)
    var_3 = validation_0.is_fail()
    validation_1 = module_0.Validation(var_3, validation_0)
    var_4 = validation_0.to_either()
    var_5 = validation_0.__eq__(validation_1)
    var_6 = var_4.ap(validation_0)
    var_7 = validation_1.to_lazy()
    var_8 = var_7.__eq__(str_0)


def test_case_10():
    str_0 = "&YAN"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = var_2.__eq__(var_2)
    var_4 = var_2.map(var_1)
    var_5 = validation_0.to_lazy()
    var_5.to_lazy()


def test_case_11():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_12():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()
