# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    str_0 = "P;zYGdDey/\x0b3yc~X:vbZ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_lazy()
    var_2.is_success()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_4():
    str_0 = "s\\#:;F!g8ifVqXn$]fr"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_1, none_type_0)
    var_1 = validation_0.__eq__(none_type_1)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_maybe()
    validation_1.map(none_type_1)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    int_0 = 1861
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.ap(validation_0)


def test_case_10():
    float_0 = 23.85
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "W7&"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(str_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_0.map(validation_0)


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_try()
    var_1.ap(dict_0)


def test_case_14():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    bytes_0 = b"z\x8cG\xdf.f\xe8\xe3Q<\xb1B\xa5\x95%\x90\xd4\x9f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_1.to_either()


def test_case_16():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_1.to_maybe()
    var_3 = var_2.__eq__(var_0)
    var_0.bind(none_type_0)


def test_case_17():
    none_type_0 = None
    list_0 = [none_type_0]
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_1, list_0)
    var_1 = var_0.__eq__(none_type_0)
    var_2 = validation_1.to_maybe()
    var_3 = validation_0.__eq__(none_type_1)
    bool_0 = False
    var_4 = var_2.bind(var_0)
    var_5 = var_4.ap(bool_0)


def test_case_18():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.bind(var_0)
