# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = 1479 - 1821.216j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)


def test_case_1():
    bytes_0 = b"\xc6\x80\xdec\xc7"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    bytes_1 = b"r<\x06\x86\xc9o"
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(bytes_1)
    var_2.is_success()


def test_case_2():
    str_0 = "Maybe[None]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_0.is_fail()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_success()
    var_0.bind(none_type_0)


def test_case_5():
    complex_0 = 1479 - 1821.216j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = True
    complex_0 = 380.74653 + 149j
    bytes_0 = b"V\xc0.s\xa1\xe2\x15\xcf\xf4P"
    str_0 = "2y("
    dict_0 = {
        complex_0: complex_0,
        bytes_0: bytes_0,
        complex_0: bytes_0,
        str_0: complex_0,
    }
    validation_0 = module_0.Validation(dict_0, str_0)
    validation_0.map(bool_0)


def test_case_7():
    bool_0 = False
    str_0 = "bUT\x0b}FfYc2X-wl'1RH"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bool_0)


def test_case_8():
    dict_0 = {}
    bytes_0 = b"\x14\xc9\x9a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(dict_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_3.is_success()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(none_type_0)


def test_case_11():
    int_0 = 1
    bool_0 = False
    validation_0 = module_0.Validation(int_0, bool_0)
    validation_0.to_try()


def test_case_12():
    str_0 = "K?R:X*Shso=eE3Mq0"
    list_0 = [str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    none_type_0.to_lazy()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.ap(tuple_0)


def test_case_16():
    bytes_0 = b"^\xdb\x85"
    list_0 = [bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_1 = validation_0.to_maybe()
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.__str__()
    var_2.is_success()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = module_0.Validation(none_type_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_18():
    int_0 = -151
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.map(int_0)
