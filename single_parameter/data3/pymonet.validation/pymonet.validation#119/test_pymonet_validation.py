# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b";g=N\xd6\x8f\xc8F\n"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.is_success()


def test_case_1():
    bytes_0 = b"\xed9@\xbc\xaa\x9bV\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()


def test_case_2():
    bytes_0 = b";g=N\xd6\x8f\xc8F\n"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()


def test_case_3():
    bytes_0 = b";g=N\xd6\x8f\xc8F\n"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_either()


def test_case_4():
    bytes_0 = b"\xfbt\xfd\xb7\xe9BV\x04\xf0\x9e\xb0d\xf9\xb0o\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    int_0 = 1512
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.map(var_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    float_0 = 2251.2
    tuple_0 = (var_0, var_0, float_0)
    validation_0.ap(tuple_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_box()
    var_0.ap(bool_0)


def test_case_10():
    str_0 = "H"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.map(str_0)


def test_case_11():
    none_type_0 = None
    str_0 = "PkM5m1.\x0c{9E_"
    tuple_0 = (str_0, str_0)
    set_0 = {tuple_0, tuple_0, tuple_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    validation_1.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    int_0 = 65
    validation_1 = module_0.Validation(int_0, none_type_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_maybe()
    var_2.ap(none_type_0)


def test_case_13():
    bytes_0 = b";g=N\xd6\x8f\xc8F\n"
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_0.to_either()


def test_case_14():
    bytes_0 = b";g=N\xd6\x8f\xc8F\n"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_0.map(none_type_0)


def test_case_15():
    bytes_0 = b";1=N\xd1\x8f\xc8F\n"
    float_0 = -435.617
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    bool_0 = True
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(bool_0, var_0)
    none_type_1 = None
    validation_2 = module_0.Validation(none_type_1, bytes_0)
    var_2 = validation_2.to_either()
    var_3 = validation_1.to_lazy()
    var_4 = validation_0.__eq__(validation_1)
    var_4.ap(var_1)


def test_case_16():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_1 = validation_0.to_either()
    var_2 = validation_1.to_maybe()
    var_0.to_either()
