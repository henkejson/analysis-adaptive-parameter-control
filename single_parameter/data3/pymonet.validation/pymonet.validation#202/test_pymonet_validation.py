# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_1.is_success()


def test_case_1():
    int_0 = 3308
    set_0 = {int_0, int_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"\xae\xcc\xaf\x89\xc2\x98V\xbc,#\xcf\xa8\x91RL\x0c\x17'"
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.map(bytes_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\xbd\x11\xfb"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(bytes_0, var_1)
    validation_1.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b""
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_7():
    str_0 = "&\x0cg+n=L^Qx0SEzZ!"
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, list_0)
    validation_0.bind(none_type_0)


def test_case_8():
    complex_0 = -1210.6724 + 1811.4j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    int_0 = 230
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(list_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    str_0 = 'Y6nOXQ\\"\tlq7\t'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    none_type_0 = None
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = var_1.to_maybe()
    var_4 = var_3.to_try()
    var_5 = validation_0.__str__()
    var_4.to_box()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_13():
    str_0 = 'Y6nOXQ\\"\tlq7\t'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(var_1)
    var_2.to_either()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_box()
    validation_1 = module_0.Validation(var_1, var_1)
    var_3 = validation_0.__eq__(validation_0)
    var_3.map(list_0)


def test_case_15():
    str_0 = 'Y6nOXQ\\"\tlq7\t'
    bytes_0 = b"1YC\xa8\xd2\xfbN\xaem\xcc\x1b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    complex_0 = -385.366893 + 857j
    validation_1 = module_0.Validation(var_1, var_0)
    var_2 = var_1.to_try()
    var_3 = validation_1.__eq__(bytes_0)
    var_4 = validation_0.to_maybe()
    var_5 = var_4.map(complex_0)
    int_0 = 0
    validation_2 = module_0.Validation(bytes_0, var_4)
    validation_3 = module_0.Validation(var_3, int_0)
    var_6 = validation_2.__eq__(var_1)
    var_7 = validation_0.__eq__(validation_1)
    var_8 = var_5.to_box()
    var_8.is_fail()
