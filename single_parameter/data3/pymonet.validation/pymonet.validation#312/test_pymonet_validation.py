# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_1 = validation_0.to_try()
    var_2 = var_1.__eq__(var_0)
    validation_1.to_maybe()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    bytes_0 = b"\xf9]\xd8\x01\x85\xd8\xdfZ\xd9\xbapI\xc2\x90r\n\x82\xb6"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_4():
    bytes_0 = b"\x07Fm\xbeS"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    bytes_0 = b'3\x06`\xd4\x04l^"\x8a\xc4\x85JkX,{\x85\x9a*'
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_0.bind(bytes_0)


def test_case_6():
    none_type_0 = None
    str_0 = "[\\XBM "
    validation_0 = module_0.Validation(none_type_0, str_0)
    validation_0.map(none_type_0)


def test_case_7():
    int_0 = 3060
    list_0 = [int_0]
    float_0 = -205.106763
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(list_0)


def test_case_8():
    float_0 = 1120.2299
    bytes_0 = b"\xed\x00\xe6"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    validation_0.ap(float_0)


def test_case_9():
    complex_0 = 323 + 276j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    str_0 = "o33B041\x0cVG)Hh"
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_1.to_try()
    var_2.to_lazy()


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(var_0, tuple_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = validation_1.to_box()
    var_3.map(var_4)


def test_case_11():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.is_success()
    var_4 = var_2.to_try()
    var_1.map(var_0)


def test_case_12():
    int_0 = 254
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.to_box()
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_5.to_lazy()
    var_7 = var_1.to_lazy()
    var_8 = var_6.to_either()
    var_2.is_success()


def test_case_14():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_1.ap(var_0)


def test_case_15():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.is_success()
    var_2.map(var_0)
