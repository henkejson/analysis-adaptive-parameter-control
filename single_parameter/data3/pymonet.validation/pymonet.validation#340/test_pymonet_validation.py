# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    int_0 = 5423
    list_0 = []
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.__str__()
    var_0.map(list_0)


def test_case_2():
    str_0 = ".yMq_dF#)\ruwkc)Y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_0.to_box()


def test_case_3():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_4():
    str_0 = ".yMq_dF#)\ruwkc)Y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(str_0)
    var_2 = var_1.to_either()
    int_0 = -653
    var_3 = validation_0.__eq__(int_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(dict_0)


def test_case_9():
    str_0 = "{dAO`9We[K^\x0bll@'ah"
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.bind(str_0)


def test_case_10():
    complex_0 = 1335.651 + 923.4j
    bytes_0 = b"\x81!\x0f\x12n\x16\x8c "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(complex_0)


def test_case_11():
    str_0 = '0J"F'
    list_0 = [str_0, str_0]
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.bind(list_0)


def test_case_12():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    int_0 = 2006
    validation_1 = module_0.Validation(int_0, int_0)
    var_0 = validation_1.__eq__(int_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_box()
    validation_0.ap(bool_0)


def test_case_13():
    bytes_0 = b'\x7f"\xa5\x9d\x94\xca\x81\x8e\xc6*'
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = var_0.__str__()
    validation_0.to_try()


def test_case_14():
    str_0 = ".yMq_dF#uwk)Y"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_1.__eq__(validation_1)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.to_either()


def test_case_16():
    str_0 = ".yMq_dF#uwk)Y"
    dict_0 = {}
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    bool_0 = False
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.is_fail()
