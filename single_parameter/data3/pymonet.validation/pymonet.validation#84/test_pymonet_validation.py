# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.to_try()


def test_case_1():
    bytes_0 = b"\x1b\x0f\xce8\xd0\xb5\xb6X\xd4\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_0.to_try()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    tuple_0 = (var_0, set_0)
    validation_1 = module_0.Validation(set_0, tuple_0)
    var_1 = validation_1.to_try()
    var_2 = var_0.to_box()
    none_type_0 = None
    var_3 = var_2.to_lazy()
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    validation_3 = module_0.Validation(none_type_0, none_type_0)
    var_4 = var_0.to_try()


def test_case_3():
    bytes_0 = b"\x1b\x0f\xce8\xd0\xb5\xb6X\xd4\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bytes_0 = b"6\x8b\xa7\x1e\xd4o(lWj'N\xf2\xab_;"
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bool_0)
    validation_0.to_try()


def test_case_6():
    str_0 = "T,>$C"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = 'm";c 6@3XOG'
    set_0 = {str_0}
    complex_0 = 1248.20112 - 332.32409j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.map(set_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_1)


def test_case_9():
    float_0 = 2557.093024
    set_0 = {float_0, float_0, float_0, float_0}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, set_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_0, bool_0)
    var_2 = validation_1.is_success()
    validation_2.ap(validation_1)


def test_case_10():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bool_0)
    var_1.to_maybe()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = module_0.Validation(validation_0, var_0)
    var_2 = validation_0.to_lazy()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_fail()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_either()


def test_case_14():
    float_0 = 2557.093024
    set_0 = {float_0, float_0, float_0, float_0}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, float_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(set_0, validation_0)
    validation_1.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, set_0)
    set_0.bind(validation_1)


def test_case_16():
    float_0 = 2557.093024
    set_0 = {float_0, float_0, float_0, float_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = var_0.__str__()
    set_1 = set()
    validation_1 = module_0.Validation(var_1, set_1)
    var_2 = validation_1.to_maybe()
    var_3 = var_1.__eq__(var_2)
    var_0.to_either()
