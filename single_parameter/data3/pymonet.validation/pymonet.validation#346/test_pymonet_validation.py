# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_0.map(var_1)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_either()
    var_1.to_either()


def test_case_2():
    bytes_0 = b"\xfc\xe9(\xd0;\xe6\xcc\xebx"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    float_0 = 1326.41247
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_maybe()
    bool_1 = True
    var_2 = validation_0.to_either()
    var_3 = var_0.__eq__(bool_1)
    var_3.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.is_fail()


def test_case_7():
    int_0 = 3918
    list_0 = [int_0, int_0, int_0, int_0]
    bytes_0 = b"t\x91\xcf\xe7k#~\x12HOa\x0e\xc67\xef\xa5j\xca\x9e\x1f"
    bool_0 = True
    validation_0 = module_0.Validation(bytes_0, bool_0)
    validation_0.map(list_0)


def test_case_8():
    float_0 = 1326.41247
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    validation_0 = module_0.Validation(float_0, list_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.is_success()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_success()
    validation_1 = module_0.Validation(var_3, bool_1)
    validation_1.bind(var_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.to_box()
    var_0.is_fail()


def test_case_11():
    int_0 = 1481
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.is_success()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_13():
    float_0 = 1326.41247
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = True
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(var_1)
    var_3 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bool_1, bool_1)
    var_4 = validation_0.__eq__(validation_1)
    var_4.is_success()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_1.map(dict_0)
