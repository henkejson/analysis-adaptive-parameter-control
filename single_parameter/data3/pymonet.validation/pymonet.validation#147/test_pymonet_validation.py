# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    none_type_1 = None
    var_0 = validation_0.__eq__(none_type_1)
    var_0.ap(none_type_0)


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"M"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.to_either()
    var_5.is_fail()


def test_case_3():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "\n        Transform Lazy into successful Validation with constructor_fn result.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    validation_0.map(str_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    bool_0 = False
    int_0 = 3094
    set_0 = {int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.map(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_1.is_fail()


def test_case_11():
    str_0 = "sH\x0c.Z"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__str__()
    var_1.to_maybe()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    str_0 = "3qd\x0cfDHZq-*;E"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    int_0 = 1
    var_2 = var_1.__eq__(int_0)
    var_3 = validation_0.to_try()
    var_0.to_try()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    bool_0 = True
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_4 = validation_0.is_fail()
    validation_1.to_either()


def test_case_15():
    bytes_0 = b"M"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = var_0.to_maybe()
    var_0.is_fail()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_17():
    bytes_0 = b"M"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_2 = validation_1.__eq__(validation_0)
    validation_1.to_either()
