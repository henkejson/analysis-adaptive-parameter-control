# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 1507
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_try()


def test_case_1():
    float_0 = -2692.52372
    tuple_0 = (float_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_1.bind(dict_0)


def test_case_3():
    bytes_0 = b"\xd7&vD\xa7"
    list_0 = [bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.bind(bytes_0)
    var_2.is_success()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    set_0 = set()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(set_0)


def test_case_7():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = True
    validation_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)


def test_case_10():
    int_0 = -1191
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)


def test_case_11():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    bytes_0 = b"\xe5\xad\x92v\xf2\r\xfdw\x1d&\xab\x00\tP\xe4ve`\t\xee"
    validation_1 = module_0.Validation(var_1, bytes_0)
    var_2 = validation_1.__str__()
    var_3 = validation_0.to_try()
    int_0 = 497
    var_1.map(int_0)


def test_case_12():
    bool_0 = False
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(bool_0)
    var_2 = var_0.to_maybe()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_13():
    list_0 = []
    list_1 = [list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_14():
    bool_0 = False
    int_0 = 1
    validation_0 = module_0.Validation(int_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.to_either()
    validation_1 = module_0.Validation(validation_0, bool_0)
    validation_2 = module_0.Validation(int_0, var_1)
    validation_0.bind(var_2)


def test_case_15():
    bool_0 = True
    int_0 = -24
    bytes_0 = b"\xa2\xe5V\xe6e\x95b|\xaaw\x0c\x1d\x9e]\n@\x11\x81"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, int_0)
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    dict_0 = {}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.to_either()
    none_type_1 = None
    validation_2 = module_0.Validation(none_type_1, none_type_1)
    validation_2.map(validation_2)
