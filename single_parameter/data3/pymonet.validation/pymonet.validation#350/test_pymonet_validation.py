# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    set_0 = set()
    var_0 = validation_0.__eq__(set_0)
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0.to_try()


def test_case_1():
    bytes_0 = b"{\xe9P`\xd5"
    bool_0 = True
    str_0 = ">Mfq9ffz"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(bool_0)


def test_case_2():
    bytes_0 = b"<mz\xa0;z\xb6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.to_box()
    var_2.is_success()


def test_case_3():
    bytes_0 = b"<mz\xa0;z\xb6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    int_0 = 2720
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_5():
    bytes_0 = b"\x16k\xfb\xe2*'\xea\xbf\xb51\xb7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_fail()
    var_1.bind(var_0)


def test_case_6():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    validation_0.map(bool_0)


def test_case_7():
    int_0 = 1796
    str_0 = "\n        Transform Box into successfull Try.\n\n        :returns: successfull Try monad with previous value\n        :rtype: Try[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(int_0)


def test_case_8():
    none_type_0 = None
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    validation_0.ap(var_1)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(none_type_0)
    var_2.to_lazy()


def test_case_10():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_fail()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_lazy()


def test_case_13():
    bytes_0 = b"\xdec\xe7i(N\x1b\xe9\x9a\xda\xde\xb1@\xffZ\xc3*"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_box()
    var_3 = var_1.to_lazy()
    validation_0.bind(bytes_0)


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    set_0 = set()
    var_0 = validation_0.__eq__(set_0)
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_1.to_try()
    validation_2 = module_0.Validation(set_0, var_0)
    var_3 = validation_2.__eq__(validation_0)
    var_3.to_try()
