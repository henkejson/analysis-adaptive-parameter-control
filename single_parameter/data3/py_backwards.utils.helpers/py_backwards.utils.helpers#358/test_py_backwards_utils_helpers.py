# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\x97\x15\x13\xbfoQ\xc3[\xc8g=\xf8\x8b[\xd6(\xa3\xd6\xde\x98"
    callable_0 = module_0.eager(bytes_0)


def test_case_3():
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(callable_0)
    variables_generator_1 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    bytes_0 = b"\xa3\x07\xf4\x1d\xcf%iU\xdd"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    str_0 = "?tRo8j^3'*_ Ak"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(set_0)
    variables_generator_1 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_1)
    callable_0.__call__(callable_0, none_type_0, module=none_type_1)
