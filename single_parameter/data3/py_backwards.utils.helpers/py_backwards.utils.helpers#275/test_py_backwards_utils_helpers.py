# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    auto_0 = module_1.auto()
    callable_0 = module_0.eager(auto_0)
    str_0 = "{t*g0nz<(p"
    none_type_0 = None
    str_1 = ")^w{"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_0.VariablesGenerator(**dict_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(variables_generator_0)
    none_type_1 = module_0.debug(variables_generator_0)
    var_0 = module_2.purge()
    callable_0 = module_0.eager(var_0)
    callable_0.__call__(none_type_0, variables_generator_0, start=none_type_0)
