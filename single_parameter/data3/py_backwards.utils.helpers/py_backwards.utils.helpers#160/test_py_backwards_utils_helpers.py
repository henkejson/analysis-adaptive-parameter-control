# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    callable_0 = module_0.eager(none_type_1)


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = module_0.warn(none_type_1)
    callable_0 = module_0.eager(none_type_2)
    none_type_3 = module_0.debug(none_type_0)
    module_0.get_source(none_type_0)


def test_case_4():
    complex_0 = 822.7 + 341.0999j
    none_type_0 = module_0.warn(complex_0)
    none_type_1 = None
    none_type_2 = module_0.warn(none_type_1)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    float_0 = -1807.08
    callable_0 = module_0.eager(float_0)
    none_type_0 = module_0.warn(float_0)
    none_type_1 = None
    bool_0 = False
    dict_0 = {variables_generator_0: bool_0}
    callable_1 = module_0.eager(dict_0)
    callable_1.__call__(bool_0, none_type_1, qualname=variables_generator_0)
