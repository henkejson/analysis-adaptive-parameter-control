# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import py_backwards.exceptions as module_1
import re as module_2


def test_case_0():
    str_0 = "Hju\rfK"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    str_0 = "dZE"
    str_1 = "{>@F}RXHh<\r#,0B0"
    compilation_error_0 = module_1.CompilationError(str_0, str_1, str_1, str_1)
    callable_1 = module_0.eager(str_0)
    none_type_1 = module_0.debug(compilation_error_0)
    variables_generator_0 = module_0.VariablesGenerator()
    var_0 = module_2.purge()
    var_0.__iter__(str_1)


def test_case_3():
    str_0 = "ydzC&\\^PY7/PR{;$#"
    module_0.get_source(str_0)


def test_case_4():
    float_0 = -1401.22
    none_type_0 = module_0.warn(float_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_0.__call__(callable_0, callable_0, module=none_type_0)
