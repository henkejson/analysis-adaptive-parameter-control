# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import py_backwards.exceptions as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "ue\x0bXKT\rL>b)!<yg?]q"
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    compilation_error_0 = module_1.CompilationError(str_0, none_type_0, bool_0, bool_1)
    callable_0 = module_0.eager(compilation_error_0)
    list_0 = [none_type_0, none_type_0]
    module_0.get_source(list_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "B1U:bFn"
    str_1 = "UZ<Aj$<v/XIjBy:3g"
    str_2 = "asname"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_1: str_2}
    none_type_0 = module_0.warn(dict_0)
    module_0.VariablesGenerator(**dict_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.debug(callable_0)
    callable_1 = module_0.eager(callable_0)
    callable_1.__call__(variables_generator_0, callable_1, start=none_type_0)
