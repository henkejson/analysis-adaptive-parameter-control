# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    complex_0 = 3965.8 - 1089.16787j
    none_type_0 = module_0.debug(complex_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    complex_0 = 653.62634 + 434.7358j
    set_0 = {complex_0, complex_0, complex_0}
    tuple_0 = (set_0, set_0, set_0)
    callable_0 = module_0.eager(tuple_0)


def test_case_3():
    var_0 = module_1.purge()
    callable_0 = module_0.eager(var_0)
    module_0.get_source(var_0)


def test_case_4():
    bytes_0 = b'`K\xa6"/\xdd\x80\xdd\x89\xf9\x01\xecn\x8e\xc5\xcd\xefU\x01_'
    callable_0 = module_0.eager(bytes_0)
    callable_1 = module_0.eager(callable_0)
    dict_0 = {}
    variables_generator_0 = module_0.VariablesGenerator(**dict_0)
    str_0 = ")cd"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    int_0 = -400
    callable_0 = module_0.eager(int_0)
    none_type_0 = module_0.debug(int_0)
    variables_generator_0 = module_0.VariablesGenerator()
    callable_1 = module_0.eager(none_type_0)
    callable_1.__call__(
        callable_0, variables_generator_0, none_type_0, start=callable_1
    )
