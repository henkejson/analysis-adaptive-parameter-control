# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\xd3\xa2"
    callable_0 = module_0.eager(bytes_0)
    bytes_1 = b"\xe2\x84\xe0"
    list_0 = [bytes_1]
    none_type_0 = None
    module_0.VariablesGenerator(*list_0, **none_type_0)


def test_case_3():
    var_0 = module_1.purge()
    callable_0 = module_0.eager(var_0)
    none_type_0 = module_0.debug(callable_0)
    none_type_1 = module_0.warn(var_0)
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "8[Gzox\tu-'/f"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)


def test_case_5():
    str_0 = "2+CCQ2_yMI~7t9"
    callable_0 = module_0.eager(str_0)
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(str_0)
    callable_0.__call__(str_0, str_0, module=none_type_0)
