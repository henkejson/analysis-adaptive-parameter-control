# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_0 = module_1.debug(variables_generator_0)
    none_type_1 = module_1.debug(none_type_0)
    none_type_2 = None
    var_0 = module_0.purge()
    none_type_3 = module_1.debug(var_0)
    variables_generator_1 = module_1.VariablesGenerator()
    var_1 = none_type_3.__bool__()
    callable_0 = module_1.eager(var_1)
    none_type_4 = module_1.warn(none_type_2)


def test_case_3():
    variables_generator_0 = module_1.VariablesGenerator()
    module_1.get_source(variables_generator_0)


def test_case_4():
    variables_generator_0 = module_1.VariablesGenerator()
    str_0 = '`xN6/27N"xjsnsec5!\\B'
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    str_0 = "%ZO\x0c:gD\\j"
    none_type_0 = module_1.warn(str_0)
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_1 = None
    callable_0 = module_1.eager(none_type_1)
    none_type_2 = module_1.debug(none_type_1)
    none_type_3 = module_1.warn(none_type_1)
    callable_1 = module_1.eager(variables_generator_0)
    str_1 = "addinfourl"
    callable_0.__call__(str_1, callable_0, str_0, qualname=callable_1)
