# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    str_0 = "aRI5XIQsgX\x0bF5=!e"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_0)
    none_type_1 = module_0.debug(callable_0)
    callable_1 = module_0.eager(none_type_0)
    str_0 = "Replaces import from with try/except with old and new \n        import module and names.\n        \n        "
    dict_0 = {str_0: str_0}
    module_0.VariablesGenerator(**dict_0)


def test_case_3():
    str_0 = "cookielib"
    list_0 = [str_0, str_0, str_0]
    module_0.get_source(list_0)


def test_case_4():
    str_0 = "d$FN"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    callable_0 = module_0.eager(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0.__call__(callable_0, callable_0, module=variables_generator_0)
