# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    str_0 = "\n        Take function (A) -> B and applied this function on current Validation value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new Validation with mapped value and previous errors\n        :rtype: Validation[B, List[E]]\n        "
    immutable_list_0 = module_0.ImmutableList(str_0)
    str_1 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    bytes_0 = b"M\xec\xca\x08i\xc5\xfau_B\x1e\x88\x8f\x97h\xc2\xa8"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_1.__eq__(bytes_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)


def test_case_3():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(bool_0)


def test_case_4():
    bytes_0 = b"M\xec\xca\x08i\xc5\xfau_B\x1e\x88\x8f\x97h\xc2\xa8"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_1.__len__()


def test_case_5():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = False
    dict_0 = {}
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList(dict_0, is_empty=bool_1)
    immutable_list_0.map(bool_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bytes_0 = b"M\xec\xca\x08i\xc5\xfau_B\x1e\x88\x8f\x97h\xc2\xa8"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_1.__eq__(bytes_0)
    immutable_list_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = module_0.ImmutableList()


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(bool_0, none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_3 = immutable_list_2.unshift(bool_0)
    var_1 = immutable_list_1.__add__(immutable_list_2)
    immutable_list_1.reduce(var_1, var_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    var_1 = immutable_list_0.find(str_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(var_0)


def test_case_16():
    int_0 = -1045
    list_0 = []
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tail=tuple_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_1.find(int_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.reduce(bool_0, bool_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.map(immutable_list_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_2)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)
