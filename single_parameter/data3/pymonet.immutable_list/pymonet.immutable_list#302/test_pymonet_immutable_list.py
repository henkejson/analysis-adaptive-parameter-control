# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.__len__()


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    tuple_0 = ()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(tuple_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.map(var_0)


def test_case_7():
    float_0 = 269.843
    float_1 = -1378.0
    dict_0 = {float_0: float_0, float_0: float_1}
    list_0 = [dict_0]
    set_0 = set()
    list_1 = [set_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(list_1)
    immutable_list_1.map(list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_0.append(bool_0)
    immutable_list_3 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_4 = immutable_list_2.__add__(immutable_list_0)
    var_0 = immutable_list_2.find(immutable_list_3)
    immutable_list_5 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_6 = immutable_list_3.append(immutable_list_4)
    immutable_list_7 = immutable_list_2.unshift(immutable_list_4)
    var_1 = immutable_list_5.reduce(immutable_list_6, immutable_list_7)
    var_2 = immutable_list_2.find(immutable_list_1)
    var_3 = var_1.__len__()
    immutable_list_6.filter(var_3)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.to_list()
    var_2.reduce(var_1, none_type_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.reduce(bool_0, bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xa3\xb5\x95\xe7\xb1<\x13\xc7~\x89\xd8"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.__str__()


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_0.find(immutable_list_1)


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_0.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    str_0 = immutable_list_0.__str__()
    immutable_list_2.find(str_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_1)
    bool_1 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_0)
    none_type_0 = None
    immutable_list_1.find(none_type_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    var_0.reduce(immutable_list_0, var_0)


def test_case_20():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    bool_2 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = var_0.to_list()
    immutable_list_1 = immutable_list_0.__add__(var_0)
    var_0.__add__(str_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_23():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)
