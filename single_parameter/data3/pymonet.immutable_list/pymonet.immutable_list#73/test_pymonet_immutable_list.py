# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = module_0.ImmutableList(is_empty=var_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.to_list()
    var_2 = immutable_list_0.to_list()
    immutable_list_1 = var_2.__add__(var_2)
    object_0 = module_1.object()
    bool_0 = immutable_list_0.__eq__(object_0)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_3():
    str_0 = "\n        Take function and applied this function on current box value and returns mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: B\n        "
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_0.__add__(str_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(none_type_0)


def test_case_5():
    bytes_0 = b"\xe3O\xd1[\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_6():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(bool_0)


def test_case_9():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_1, is_empty=bool_0)
    str_0 = immutable_list_1.__str__()
    none_type_0 = None
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.filter(none_type_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.to_list()
    var_1.map(var_1)


def test_case_13():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, bool_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    none_type_0 = None
    str_0 = "kk2*b?V4%n]e"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    bytes_0 = b"\xe3O\xd1[\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_3 = immutable_list_2.append(none_type_0)
    var_0 = immutable_list_1.unshift(immutable_list_3)
    var_1 = immutable_list_0.to_list()
    var_2 = immutable_list_0.find(immutable_list_3)
    str_0 = "bKh#W"
    immutable_list_4 = var_1.append(str_0)
    list_0 = [var_2]
    immutable_list_2.reduce(var_2, list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_1.reduce(bool_0, immutable_list_0)


def test_case_22():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = True
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    none_type_0 = None
    bool_2 = immutable_list_2.__eq__(none_type_0)
    var_0 = immutable_list_2.reduce(immutable_list_2, bool_1)
    bool_3 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_0.filter(var_0)


def test_case_23():
    bytes_0 = b"\xe3O\xd1[\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(var_0)


def test_case_24():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    none_type_0 = None
    bool_2 = immutable_list_0.__eq__(none_type_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)
