# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    str_0 = "gM9IK3>e9Pza6fA=tTBn"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(str_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    none_type_0 = None
    int_0 = -688
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(none_type_0)


def test_case_5():
    str_0 = "gM9IK3>e9Pza6fA=tTBn"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(str_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(immutable_list_1)
    immutable_list_3 = immutable_list_1.append(immutable_list_1)
    immutable_list_3.map(immutable_list_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0, immutable_list_0)
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0, immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_2)
    var_0 = immutable_list_3.__len__()
    var_1 = immutable_list_1.find(var_0)
    immutable_list_4 = immutable_list_0.__add__(immutable_list_3)
    var_2 = immutable_list_0.reduce(var_1, immutable_list_4)
    var_3 = immutable_list_0.reduce(bool_0, bool_0)
    immutable_list_5 = immutable_list_0.unshift(immutable_list_2)
    immutable_list_3.reduce(immutable_list_3, var_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    str_0 = "gM9IK3>e9Pza6fA=tTBn"
    immutable_list_0 = module_0.ImmutableList(str_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_16():
    str_0 = "gM9IK3>e9Pza6fA=tTBn"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_0.find(str_0)


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.append(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_19():
    str_0 = "gM9IK3>e9Pza6fA=tTBn"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(str_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = module_0.ImmutableList()
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(immutable_list_2)
    immutable_list_0.filter(var_0)


def test_case_21():
    str_0 = "\n        Transform Lazy into successful Validation with constructor_fn result.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    str_1 = "1b5?QWg&eD,ct=."
    str_2 = "6mCo>\rWZzIF\x0bqC}=V\x0c"
    list_0 = []
    immutable_list_0 = list_0.__add__(list_0)
    dict_0 = {}
    tuple_0 = (str_2, list_0, dict_0)
    immutable_list_1 = module_0.ImmutableList(tuple_0)
    immutable_list_1.reduce(str_0, str_1)
