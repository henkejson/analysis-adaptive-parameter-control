# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    bool_0 = immutable_list_1.__eq__(var_0)
    immutable_list_1.find(var_0)


def test_case_2():
    int_0 = -1801
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)


def test_case_3():
    generic_0 = module_1.Generic()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.to_list()
    immutable_list_1.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_8():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Sum[B]\n        :returns: new Sum with sum of concat semigroups values\n        :rtype: Sum[A]\n        "
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_0.filter(bool_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.find(immutable_list_1)
    immutable_list_1.find(bool_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_14():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(set_0)
    immutable_list_2 = immutable_list_0.unshift(set_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    var_0 = immutable_list_1.to_list()
    bool_1 = True
    var_1 = immutable_list_0.reduce(var_0, bool_1)
    immutable_list_3 = immutable_list_2.append(none_type_0)
    immutable_list_3.reduce(none_type_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    bytes_0 = b" \xc2\xe4sR>p\x8c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_0.to_list()
    immutable_list_1.find(var_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_1.find(immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(str_0)
