# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_1)
    immutable_list_1.find(bool_1)


def test_case_1():
    bool_0 = True
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    bool_2 = immutable_list_0.__eq__(bool_0)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    str_0 = ""
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.__add__(str_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()


def test_case_5():
    complex_0 = 1628.85635 - 2816j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    var_0 = immutable_list_0.__len__()
    var_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1, is_empty=none_type_1)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    str_0 = "Min[value={}]"
    immutable_list_0 = module_0.ImmutableList(tail=str_0, is_empty=str_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_0.find(bool_0)


def test_case_14():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(immutable_list_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_1 = immutable_list_1.reduce(var_0, none_type_0)
    immutable_list_0.map(var_1)


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    str_0 = immutable_list_0.__str__()
    bool_1 = True
    set_0 = {bool_1}
    bool_2 = True
    none_type_0 = None
    var_1 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList(set_0, is_empty=bool_2)
    immutable_list_1.reduce(bool_0, var_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bytes_0 = b"\x11\x00%H\x84\x81\xad\x013\x14\xaf"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(bytes_0)


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)


def test_case_19():
    bytes_0 = b"\x11\x00%H\x84\x81\xad\x013\x14\xaf"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = True
    immutable_list_1 = immutable_list_0.unshift(bool_1)
    var_0 = immutable_list_1.append(bool_0)
    immutable_list_1.find(bool_1)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = True
    immutable_list_1 = immutable_list_0.unshift(bool_1)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(bool_1)


def test_case_22():
    none_type_0 = None
    str_0 = "Min[vaVlue={}]"
    float_0 = 1623.0
    immutable_list_0 = module_0.ImmutableList(str_0, float_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.reduce(str_0, none_type_0)


def test_case_23():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = True
    immutable_list_1 = immutable_list_0.unshift(bool_1)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_1)
