# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_1():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    bool_0 = immutable_list_0.__eq__(int_0)
    immutable_list_0.__str__()


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(
        tail=immutable_list_0, is_empty=immutable_list_0
    )
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_1 = immutable_list_1.__len__()
    var_2 = immutable_list_0.to_list()
    var_3 = immutable_list_1.find(var_1)
    var_4 = immutable_list_0.__len__()
    immutable_list_0.__add__(var_1)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    str_0 = "\x0b*ybGl[FOB"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    str_0 = "\n        Take filterer function, when monad is successfully call filterer with monad value.\n        When filterer returns True method returns copy of monad, othercase\n        not successfully Try with previous value.\n\n        :params filterer: function to apply on monad value\n        :type filterer: Function(A) -> Boolean\n        :returns: Try with previous value\n        :rtype: Try[A]\n        "
    immutable_list_0 = module_0.ImmutableList(is_empty=str_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.map(var_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    tuple_0 = ()
    bytes_0 = b"\xd6\x89\xde\xc0[\x92N\x03\xb2T`"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=bytes_0)
    immutable_list_0.map(tuple_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    str_0 = "\x0b*ybGl[FOB"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_3 = immutable_list_0.unshift(var_0)
    immutable_list_4 = module_0.ImmutableList(
        tail=immutable_list_2, is_empty=immutable_list_2
    )
    bool_1 = immutable_list_0.__eq__(immutable_list_4)
    bool_2 = immutable_list_2.__eq__(immutable_list_4)
    immutable_list_5 = immutable_list_3.unshift(immutable_list_4)
    immutable_list_6 = immutable_list_3.unshift(immutable_list_0)
    immutable_list_7 = immutable_list_4.unshift(bool_2)
    var_1 = immutable_list_5.to_list()
    var_2 = immutable_list_1.find(var_1)
    var_3 = immutable_list_4.__len__()
    immutable_list_7.reduce(var_2, immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)


def test_case_16():
    str_0 = "\x0b*ybGl[FOB"
    immutable_list_0 = module_0.ImmutableList(str_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.find(immutable_list_0)


def test_case_17():
    str_0 = "\x0b*ybGl[FOB"
    immutable_list_0 = module_0.ImmutableList(str_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_1.append(str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.reduce(immutable_list_0, bool_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_2.filter(none_type_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_2.__eq__(immutable_list_2)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    bool_3 = immutable_list_1.__eq__(immutable_list_1)
    var_0 = immutable_list_2.to_list()
    immutable_list_1.find(var_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(
        tail=immutable_list_0, is_empty=immutable_list_0
    )
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    bool_2 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_1.__len__()
    var_2 = var_0.__len__()
    bool_3 = True
    list_0 = [bool_3]
    immutable_list_2.find(list_0)
