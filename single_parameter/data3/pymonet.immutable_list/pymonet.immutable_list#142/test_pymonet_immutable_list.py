# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    str_0 = "\n        Returns new ImmutableList with argument value on the begin of list\n        and other list elements after it\n\n        :param new_element: element to append on the begin of list\n        :type fn: A\n        :returns: ImmutableList[A]\n        "
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.find(str_0)


def test_case_1():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    str_0 = immutable_list_0.__str__()
    bool_2 = immutable_list_0.__eq__(bool_1)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_0.__len__()


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    var_1 = immutable_list_0.to_list()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_7():
    int_0 = 402
    bool_0 = False
    list_0 = [int_0, int_0, int_0, bool_0]
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_1.to_list()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1)
    immutable_list_0.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_11():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    float_0 = 363.698
    object_0 = module_1.object()
    list_0 = [object_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_0.reduce(immutable_list_0, float_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bytes_0 = b"\nl~\x1d\xd2\xc0\x0c<"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    none_type_0 = None
    var_0 = immutable_list_1.find(none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    var_1 = immutable_list_1.reduce(immutable_list_0, immutable_list_1)
    var_2 = var_1.reduce(var_1, immutable_list_1)
    var_3 = var_1.find(var_1)
    bool_0 = True
    immutable_list_3 = module_0.ImmutableList(is_empty=bool_0)
    var_4 = immutable_list_3.__len__()
    var_1.map(var_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.find(immutable_list_1)
    immutable_list_0.filter(immutable_list_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    bool_1 = immutable_list_1.__eq__(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    str_0 = "V4gS%z|0fLC2R]\\?"
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = immutable_list_2.unshift(str_0)
    var_0 = immutable_list_0.reduce(immutable_list_2, bool_0)
    immutable_list_4.reduce(var_0, immutable_list_4)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    str_0 = immutable_list_1.__str__()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_0.find(immutable_list_1)
    str_0 = "sAcCLc20AiK'v/1jI'"
    immutable_list_2 = module_0.ImmutableList()
    bool_1 = immutable_list_2.__eq__(str_0)
    bool_2 = immutable_list_2.__eq__(immutable_list_1)
    immutable_list_3 = immutable_list_0.unshift(immutable_list_2)
    var_1 = immutable_list_0.to_list()
    var_2 = immutable_list_0.__len__()
    immutable_list_0.filter(var_1)
