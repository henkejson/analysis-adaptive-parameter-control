# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.find(var_1)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_3():
    none_type_0 = None
    float_0 = 2629.5137
    immutable_list_0 = module_0.ImmutableList(float_0, none_type_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__len__()


def test_case_5():
    none_type_0 = None
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = var_0.__add__(none_type_0)
    immutable_list_1.__len__()


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.find(immutable_list_0)


def test_case_8():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_1 = immutable_list_0.__len__()
    str_0 = immutable_list_0.__str__()
    var_2 = immutable_list_0.reduce(var_0, var_1)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_3 = immutable_list_0.append(bool_0)
    var_3.map(var_3)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_1.filter(bool_0)


def test_case_12():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    object_0 = module_1.object()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_2 = immutable_list_1.unshift(object_0)
    bool_1 = True
    var_0 = immutable_list_2.to_list()
    set_0 = {bool_1, bool_1, bool_1}
    immutable_list_3 = module_0.ImmutableList(set_0)
    bool_2 = immutable_list_1.__eq__(immutable_list_2)
    str_0 = immutable_list_3.__str__()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\x88\x9c\xc0\xa9\xd7\x84"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_2)
    immutable_list_2.find(none_type_0)


def test_case_18():
    tuple_0 = ()
    set_0 = {tuple_0}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(set_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList(tuple_0, immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(set_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"j\x9c\xc0\xa9\xd7\x84"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.find(none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    int_0 = 2285
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(int_0, none_type_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    str_0 = immutable_list_2.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = var_0.unshift(var_0)
    var_1.reduce(var_1, var_1)
