# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_0.append(bool_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(is_empty=tuple_0)
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_2.to_list()
    immutable_list_0.filter(var_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(none_type_0)
    immutable_list_2.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.find(immutable_list_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"A{\xf7\x9fC*\x95\xfa\xd6f\xf7\x90\xe1y\x1a"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(none_type_0)


def test_case_12():
    bool_0 = False
    bool_1 = bool_0.__eq__(bool_0)
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_3 = immutable_list_2.append(bool_0)
    bool_2 = immutable_list_3.__eq__(generic_0)
    immutable_list_4 = module_0.ImmutableList()
    var_0 = immutable_list_3.find(immutable_list_2)
    set_0 = {bool_2, bool_2, bool_2}
    immutable_list_5 = module_0.ImmutableList(bool_0)
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    var_2 = var_1.to_list()
    var_3 = immutable_list_1.__add__(immutable_list_5)
    str_0 = immutable_list_0.__str__()
    immutable_list_5.reduce(set_0, bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(var_0)


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    immutable_list_3 = module_0.ImmutableList(immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.filter(none_type_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_0.find(var_0)


def test_case_18():
    bool_0 = False
    bool_1 = bool_0.__eq__(bool_0)
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_2.append(immutable_list_2)
    immutable_list_4 = immutable_list_3.append(bool_0)
    bool_2 = immutable_list_4.__eq__(generic_0)
    immutable_list_5 = module_0.ImmutableList()
    var_0 = immutable_list_4.find(immutable_list_3)
    immutable_list_6 = module_0.ImmutableList(bool_0)
    immutable_list_3.map(var_0)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_0.append(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.reduce(bool_0, bool_0)


def test_case_21():
    bool_0 = False
    bool_1 = bool_0.__eq__(bool_0)
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_2 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(bool_0)
    immutable_list_2.find(bool_0)
