# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    none_type_0 = None
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_1)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_1.find(var_0)
    bool_0 = var_0.__eq__(immutable_list_1)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    bool_0 = True
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1.map(bool_0)


def test_case_8():
    complex_0 = 1449.00223 - 2855j
    bytes_0 = b"\xad\x0e\xfc\xd1\x93"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_0.map(complex_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    str_0 = "sB^yQOmwn|lz:hh=Ay^a"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    immutable_list_0.filter(str_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_1.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"\x86\x8c\xff\xbb\x84k\xf2\xd4S9#!\xa2"
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(bytes_0, immutable_list_0, bool_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_2.reduce(immutable_list_0, immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    none_type_0 = None
    str_0 = "\n        Transform Box into successfull Try.\n\n        :returns: successfull Try monad with previous value\n        :rtype: Try[A]\n        "
    immutable_list_0 = module_0.ImmutableList(str_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_0.reduce(str_1, none_type_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    var_0 = immutable_list_2.find(immutable_list_2)
    immutable_list_1.filter(var_0)


def test_case_17():
    str_0 = "sB^yQOmwn|lz:hh=Ay^a"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    str_0 = "sB^yQOmwn|lz:hh=Ay^a"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_19():
    str_0 = " :3aYY/2,"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(int_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)
