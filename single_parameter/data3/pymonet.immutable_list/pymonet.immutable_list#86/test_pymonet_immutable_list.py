# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    int_0 = 693
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    bool_0 = immutable_list_0.__eq__(int_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    int_0 = 693
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    bool_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    var_0 = immutable_list_1.to_list()
    var_0.to_list()


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.append(var_0)
    immutable_list_0.map(var_0)


def test_case_9():
    int_0 = 480
    int_1 = -3020
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    immutable_list_0.map(int_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = False
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(tail=set_0)
    immutable_list_0.filter(bool_0)


def test_case_12():
    int_0 = 693
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    int_0 = 3199
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(int_0)


def test_case_14():
    int_0 = 721
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    bool_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    str_0 = "\n        Call argument function with args in try-catch.\n        when function don't raise exception, not successfully when raise.\n\n        :params fn: function to call and store in monad\n        :type fn: Function(*args) -> A\n        :params *args:\n        :type fn: List\n        :retruns: Successfully monad Try when function don't raise exception, not successfully when raise\n        :rtype: Try[A]\n        "
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    none_type_0 = None
    int_0 = 1
    list_0 = [int_0, int_0]
    immutable_list_1 = module_0.ImmutableList(list_0)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    bool_1 = True
    immutable_list_3 = module_0.ImmutableList(
        immutable_list_2, immutable_list_2, bool_1
    )
    immutable_list_4 = immutable_list_3.unshift(var_0)
    immutable_list_5 = immutable_list_4.unshift(bool_0)
    immutable_list_5.reduce(str_0, str_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_1)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_19():
    float_0 = -28.646
    immutable_list_0 = module_0.ImmutableList(float_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_20():
    int_0 = 693
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(int_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(int_0)
    immutable_list_2.find(immutable_list_1)


def test_case_21():
    int_0 = 721
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    int_0 = 693
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_1)
    var_0 = immutable_list_2.__len__()
    immutable_list_3 = module_0.ImmutableList(int_0)
    var_1 = immutable_list_0.to_list()
    immutable_list_3.reduce(var_1, immutable_list_3)
