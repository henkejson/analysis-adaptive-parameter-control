# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    bytes_0 = b"\x99\x00\xf3V\xd4m\xdd\xc4'\n"
    int_0 = 703
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_1)
    var_1 = immutable_list_0.__len__()
    immutable_list_0.filter(var_1)


def test_case_5():
    bytes_0 = b"t\t\x8ff\xf7\xfc\xf2\x15\x1bf>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    bytes_0 = b"\xf2\xe11\xc7"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    int_0 = 777
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(none_type_0, bool_0, none_type_0)
    var_0 = immutable_list_0.reduce(int_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_1.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_1 = immutable_list_1.to_list()
    var_2 = immutable_list_1.reduce(var_1, immutable_list_0)
    var_2.filter(var_2)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bytes_0 = b"t\x8ff\xf7\xfc\xf2\x15o>c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_17():
    bytes_0 = b"t\x8ff\xf7\xfc\xf2\x15o>c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_19():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    var_0 = immutable_list_0.reduce(none_type_0, bool_0)
    immutable_list_1 = immutable_list_0.append(var_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(var_1)
    immutable_list_1.filter(immutable_list_2)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = module_0.ImmutableList(str_0)
    immutable_list_3 = module_0.ImmutableList()
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    var_0 = immutable_list_1.to_list()
    immutable_list_4 = module_0.ImmutableList()
    immutable_list_5 = immutable_list_4.append(none_type_0)
    immutable_list_6 = immutable_list_1.unshift(immutable_list_0)


def test_case_21():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    none_type_0 = None
    str_0 = "pgh*mC#ib\\g6$aVr"
    immutable_list_0 = module_0.ImmutableList(bytes_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_2.find(str_0)


def test_case_22():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bytes_1 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    immutable_list_1 = immutable_list_0.append(bytes_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    var_0 = immutable_list_1.__len__()
    list_0 = [var_0, none_type_0, none_type_0]
    immutable_list_2 = module_0.ImmutableList(is_empty=list_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_0)
    set_0 = set()
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = immutable_list_3.append(set_0)
    str_0 = set_0.__str__()
    immutable_list_5 = immutable_list_3.unshift(set_0)
    immutable_list_5.reduce(immutable_list_3, immutable_list_3)


def test_case_24():
    bytes_0 = b"t\x13\x8ff\xf7\xfc\xf2\x15of>"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bytes_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.reduce(none_type_0, bool_0)
