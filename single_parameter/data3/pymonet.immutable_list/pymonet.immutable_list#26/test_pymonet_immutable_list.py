# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    bool_0 = var_0.__eq__(var_0)
    immutable_list_0.__add__(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_5():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(immutable_list_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.to_list()
    complex_0 = 1747.59062 + 224.463j
    var_1 = immutable_list_0.reduce(var_0, complex_0)
    var_2 = immutable_list_0.reduce(none_type_0, var_1)
    immutable_list_0.map(var_2)


def test_case_9():
    bytes_0 = b")\xdaO\xa1f{\x08\x1d\x13\x943\x198\x1e~"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    var_0 = immutable_list_1.__len__()
    complex_0 = 687.12955 + 812j
    immutable_list_2 = module_0.ImmutableList(tail=complex_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_2)
    immutable_list_3.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    str_0 = immutable_list_0.__len__()
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_13():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    none_type_0 = None
    var_1 = immutable_list_0.reduce(var_0, none_type_0)


def test_case_15():
    float_0 = 1089.67
    set_0 = {float_0}
    bool_0 = False
    int_0 = 1543
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=int_0)
    immutable_list_0.reduce(set_0, set_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_20():
    bytes_0 = b"l\xef\x8a-E\xe9Y"
    tuple_0 = (bytes_0,)
    bytes_1 = b"\xddJ\x913\x14\xcd\xa3"
    immutable_list_0 = module_0.ImmutableList(tail=tuple_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(bytes_1, var_0)
    immutable_list_1.reduce(bytes_1, bytes_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    float_0 = -574.0
    immutable_list_1 = immutable_list_0.unshift(float_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_2.find(var_0)
