# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    complex_0 = 174.24863469958328 - 1757.1j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    bool_0 = immutable_list_0.__eq__(complex_0)
    immutable_list_0.find(complex_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_0.__add__(none_type_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_5():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_0.map(none_type_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.__len__()
    bool_0 = immutable_list_0.__eq__(none_type_0)
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.map(var_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bytes_0 = b"\xc2\xf5`Q\xb7\xea\xbb"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    complex_0 = 164.6898 - 1757.1j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    var_2 = immutable_list_0.find(var_1)
    immutable_list_0.filter(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    none_type_0 = None
    immutable_list_2 = immutable_list_0.append(none_type_0)
    immutable_list_1.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(set_0)


def test_case_16():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_2.find(bool_0)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_19():
    complex_0 = 164.6898 - 1757.1j
    str_0 = 'K4"Re<[vdDX_"'
    immutable_list_0 = module_0.ImmutableList(complex_0)
    immutable_list_0.reduce(complex_0, str_0)


def test_case_20():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_21():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_22():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_23():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_2.find(bool_0)


def test_case_24():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)
