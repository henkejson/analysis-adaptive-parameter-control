# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    none_type_0 = None
    float_0 = 253.571367
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(float_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_1():
    bytes_0 = b"\x87\xae\xb8J\xabJ\x94r+D\xe9\xbb"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_2():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(set_0)


def test_case_3():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = module_0.ImmutableList(bool_0)
    immutable_list_1.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_0.unshift(var_0)


def test_case_5():
    bytes_0 = b"\x87\xae\xb8J\xabJ\x94r+D\xe9\xbb"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    str_0 = "\n    In mathematics and computer science, currying is the technique of translating the evaluation of a function.\n    It that takes multiple arguments (or a tuple of arguments) into evaluating a sequence of functions.\n    each with a single argument.\n    "
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(is_empty=set_0)
    immutable_list_1 = module_0.ImmutableList(str_0, immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    bytes_0 = b"}\x04\x00J\xdc\x11\x05\xca\xb7!\xbc"
    immutable_list_0.map(bytes_0)


def test_case_9():
    bool_0 = True
    list_0 = [bool_0]
    float_0 = -1459.9
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(list_0)
    immutable_list_2 = immutable_list_0.unshift(float_0)
    immutable_list_2.map(list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    int_0 = -1547
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    immutable_list_0.filter(int_0)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)


def test_case_13():
    int_0 = -1565
    int_1 = 354
    immutable_list_0 = module_0.ImmutableList(tail=int_1)
    var_0 = immutable_list_0.reduce(int_0, int_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    float_0 = 253.571367
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(float_0)
    immutable_list_1.find(float_0)


def test_case_16():
    none_type_0 = None
    float_0 = 239.9975967689749
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(float_0)
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_1)
    immutable_list_2 = var_0.append(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_17():
    none_type_0 = None
    float_0 = 253.6
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(float_0)
    bool_0 = immutable_list_1.__eq__(none_type_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(none_type_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    int_0 = 1176
    var_0 = immutable_list_0.reduce(int_0, int_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.reduce(var_0, int_0)


def test_case_19():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = module_0.ImmutableList(var_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_2.find(immutable_list_1)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = module_0.ImmutableList(bool_0)
    immutable_list_1.reduce(none_type_0, immutable_list_1)
