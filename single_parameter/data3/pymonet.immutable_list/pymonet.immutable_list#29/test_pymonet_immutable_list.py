# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    bytes_0 = b"\xbb\x95Y\x86\\\xf8%\x8f\xb3\xa2\x9c\xd9\xe5B_\xb5\xe1\xaaZ\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    bytes_0 = b"_XD\xd3\x1b"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    bytes_0 = b"\xbb\x95Y\x86\\\xc8%\x8f\xb3\xa2\x9c\xd9\xe5B\xb5\xe1\xaaZ\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.find(immutable_list_0)


def test_case_8():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_0.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.filter(none_type_0)


def test_case_11():
    bytes_0 = b"\xbb\x95Y\x86\\\xf8%\x8f\xb3\xa2\x9c\xd9\xe5B_\xb5\xe1\xaaZ\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_13():
    int_0 = 2068
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bytes_0 = b"\xbb\x95Y\x86\\\xc8%\x8f\xb3\xa2\x9c\xd9\xe5B_\xb5\xe1\xaaZ\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    bytes_0 = b"_XD\x89\x1b"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    int_0 = 810
    bool_0 = True
    generic_0 = module_2.Generic()
    str_0 = "2z)ro"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_2 = immutable_list_1.unshift(generic_0)
    immutable_list_3 = immutable_list_2.append(bool_0)
    immutable_list_3.reduce(int_0, int_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_1.unshift(immutable_list_0)
    var_0.find(var_0)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    immutable_list_1.find(bool_1)


def test_case_22():
    bytes_0 = b"\xbb\x95Y\x86\\\xc8%\x8f\xb3\xa2\x9c\xd9\xe5B\xb5\xe1\xaaZ\x19"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_23():
    bytes_0 = b"J4\xeb"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.map(bytes_0)
