# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = '+>;o"|?"u:v#!k0w'
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_0.map(bool_0)


def test_case_3():
    float_0 = 4741.49
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.map(maybe_0)
    var_4 = var_3.filter(var_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_0.to_try()
    var_3 = var_2.get_or_else(var_1)
    var_4 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_5 = var_0.filter(var_1)
    maybe_1.filter(var_5)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.get_or_else(bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = var_1.get_or_else(bool_0)
    maybe_0.bind(var_2)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = var_0.filter(var_0)
    maybe_1.filter(var_1)


def test_case_7():
    str_0 = "Z^*vvKQO5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.ap(maybe_0)
    maybe_2 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_2.to_lazy()
    maybe_3 = module_0.Maybe(bool_0, maybe_2)
    var_3 = maybe_2.to_either()
    var_3.get_or_else(maybe_2)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1.filter(var_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_3 = var_0.filter(var_0)
    maybe_1.filter(var_3)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_13():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_try()
    var_3 = var_1.to_lazy()
    var_4 = var_1.to_lazy()
    bool_2 = False
    bool_3 = var_2.__eq__(var_3)
    var_5 = var_3.map(var_2)
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_6 = var_1.filter(var_2)


def test_case_14():
    float_0 = -1294.2613
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_0.bind(var_0)


def test_case_15():
    bytes_0 = b"\xa7\x07G\xb4"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_3 = var_0.filter(var_1)
    var_4 = var_1.to_validation()
    maybe_1.filter(var_3)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()


def test_case_18():
    int_0 = 1176
    bool_0 = int_0.__eq__(int_0)


def test_case_19():
    str_0 = "T<3<`:"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_0 = True
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = maybe_1.bind(bool_0)
    var_4 = var_3.ap(var_3)
    var_5 = var_3.bind(var_4)
    none_type_0 = None
    var_6 = var_5.ap(none_type_0)
    var_7 = var_4.to_try()
    var_8 = var_3.to_lazy()
    var_9 = var_4.get_or_else(bool_1)
    var_9.map(var_8)


def test_case_20():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.to_try()
    var_2.filter(bool_1)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_1, var_1)
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_1, maybe_0)
    bool_2 = var_0.__eq__(var_0)
    var_2 = var_0.to_try()
    var_3 = var_2.map(none_type_0)


def test_case_22():
    none_type_0 = None
    int_0 = 1179
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(int_0)
    var_2 = var_1.ap(var_1)
    bool_1 = maybe_0.__eq__(int_0)
    var_3 = maybe_0.bind(maybe_0)
    var_4 = module_0.Maybe(var_1, bool_1)
    var_5 = var_1.to_try()
    var_6 = maybe_0.to_either()
    var_7 = maybe_0.map(bool_1)
    var_8 = var_1.filter(none_type_0)
    var_9 = var_3.filter(var_3)
    var_10 = var_3.to_validation()
    bool_2 = var_1.__eq__(var_4)
    var_11 = maybe_0.bind(int_0)
    var_12 = var_7.to_box()
    var_13 = var_6.to_try()
    var_14 = var_12.to_try()
    var_14.filter(var_5)
