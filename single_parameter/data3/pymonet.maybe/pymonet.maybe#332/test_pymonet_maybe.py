# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(var_1)
    maybe_1.bind(maybe_1)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.get_or_else(none_type_0)
    str_0 = "\n    In mathematics, a semigroup is an algebraic structure\n    consisting of a set together with an associative binary operation.\n    A semigroup generalizes a monoid in that there might not exist an identity element.\n    It also (originally) generalized a group (a monoid with all inverses)\n    to a type where every element did not have to have an inverse, this the name semigroup.\n    "
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_5 = var_0.to_validation()
    bool_1 = maybe_0.__eq__(str_0)
    var_6 = var_3.map(var_4)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    complex_0 = 1355.2 + 129.3j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(none_type_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_0.bind(var_3)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_box()
    maybe_1.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_1.to_box()
    maybe_1.bind(none_type_0)


def test_case_8():
    complex_0 = 1355.2 + 129.3j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_try()


def test_case_10():
    bool_0 = False
    int_0 = 1
    int_1 = -1070
    bool_1 = False
    maybe_0 = module_0.Maybe(int_1, bool_1)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.get_or_else(bool_0)


def test_case_11():
    complex_0 = 316.07591 + 600j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_box()
    maybe_1.filter(var_0)


def test_case_13():
    complex_0 = 1355.2 + 129.3j
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_14():
    object_0 = module_1.object()
    bytes_0 = b"\x02rG\xe8\x92;\xf2ny\x19"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(bytes_0)


def test_case_15():
    bool_0 = False
    str_0 = "\t"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.bind(bool_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = var_0.map(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.to_either()
    var_5 = var_3.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_6 = var_4.map(none_type_0)


def test_case_17():
    complex_0 = 1355.2 + 129.3j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.to_validation()
    bool_1 = var_0.__eq__(var_0)
    var_1.bind(none_type_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.get_or_else(none_type_0)
    var_3 = var_1.map(var_2)
    var_4 = var_0.to_lazy()
    var_5 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_2, var_0)
    bool_1 = var_3.__eq__(maybe_1)
    var_2.to_try()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()
