# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xfb\xfa\xe9Q\xde\xb9\xf2eRr[\x1c\xc0r\xdb\xbf-\xc8\xde\x91"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"D#\xa4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(dict_0, bytes_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    none_type_0 = None
    var_1 = maybe_1.get_or_else(maybe_0)
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, var_2)
    var_4 = maybe_1.map(none_type_0)
    var_5 = var_4.map(var_0)
    var_6 = var_4.to_try()
    var_7 = maybe_0.to_box()
    var_8 = maybe_1.to_validation()
    var_9 = var_4.to_either()
    var_7.filter(var_6)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    var_0 = maybe_1.to_validation()


def test_case_4():
    bytes_0 = b"\x01\x11\x152\x89a\xda\xde5\xe5\xa9\x01\t"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_try()
    var_2 = var_0.get_or_else(bytes_0)
    var_3 = var_0.bind(var_2)
    var_4 = var_0.map(var_2)
    set_0 = set()
    var_5 = var_0.get_or_else(var_2)
    var_5.get_or_else(set_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_6():
    str_0 = "9\\Q FU)zW~FA6"
    set_0 = {str_0, str_0, str_0}
    bytes_0 = b"\xaa|\xcb\xf9\x7f\xbf3f\xe1ox\x0c0\xcf\xb8\xc9Z"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.to_lazy()
    var_4 = var_1.to_validation()
    var_5 = var_2.to_try()
    bool_2 = maybe_0.ap(var_1)
    var_5.map(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    dict_0 = {}
    maybe_0 = module_0.Maybe(none_type_1, dict_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b"\xaa|\xcb\xf9\x7f\xbf3f\xe1ox\x0c0\xcf\xb8\xc9Z"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.get_or_else(maybe_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_11():
    complex_0 = -641.44 + 2447.4174j
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.filter(complex_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_validation()
    bool_0 = True
    bool_1 = maybe_1.__eq__(bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_3 = maybe_2.to_lazy()
    var_4 = maybe_2.to_lazy()
    maybe_3 = module_0.Maybe(maybe_2, var_3)
    var_5 = maybe_1.get_or_else(maybe_1)
    var_6 = maybe_1.to_try()
    var_7 = maybe_2.get_or_else(none_type_0)
    var_8 = maybe_3.to_try()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_box()
    var_4 = maybe_1.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(maybe_1)


def test_case_15():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bytes_0 = b"fJ\xdc\xde\x8b"
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.bind(var_3)
    var_5 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    set_0 = set()
    maybe_3 = module_0.Maybe(var_5, set_0)


def test_case_16():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    bool_0 = var_1.__eq__(var_2)
    bool_1 = False
    bool_2 = var_1.__eq__(bool_1)
    bool_3 = var_3.__eq__(set_0)
    var_4 = var_1.map(var_1)
    var_5 = var_0.to_either()


def test_case_17():
    float_0 = -4071.5667
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)


def test_case_18():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(int_0)


def test_case_19():
    bytes_0 = b"\x19=Q7uR\x9e&}R\xd6\x93\x8e \x8e\x99I"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bytes_0 = b"\xa9\xf4\xc4\x0c\xde\xab\xc4`\xfc\x89\xcar\xb4!N)"
    bool_0 = bytes_0.__eq__(bytes_0)


def test_case_21():
    bool_0 = False
    str_0 = "Jl&7_2"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(bool_0)


def test_case_22():
    bytes_0 = b"\xa9\xf4\xc4\x0c\xde\xab\xc4`\xfc\x89\xcar\xb4!N)"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_validation()


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)
