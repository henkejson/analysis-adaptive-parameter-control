# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_3():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_2 = module_0.Maybe(generic_0, generic_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.map(maybe_0)


def test_case_5():
    none_type_0 = None
    int_0 = -3524
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.bind(var_0)
    var_4 = maybe_0.get_or_else(none_type_0)
    var_4.to_try()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_validation()
    var_3 = var_0.to_box()
    var_4 = maybe_0.bind(bool_0)
    var_5 = var_4.to_try()
    var_6 = var_5.map(var_4)
    var_7 = var_6.map(var_5)
    bool_1 = True
    var_8 = maybe_0.ap(bool_1)
    var_5.to_lazy()


def test_case_8():
    complex_0 = 1836 - 2749j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_0.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_1.map(var_3)
    var_5 = var_4.get_or_else(var_3)
    var_6 = var_3.to_either()
    var_7 = maybe_0.bind(var_6)
    bool_2 = False
    var_8 = var_3.to_validation()
    float_0 = 783.56721
    maybe_2 = module_0.Maybe(bool_2, float_0)
    var_9 = maybe_2.to_box()
    var_9.to_box()


def test_case_9():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_2.filter(maybe_0)
    maybe_1.filter(bool_1)


def test_case_10():
    float_0 = -3071.33
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_validation()


def test_case_11():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    maybe_1 = maybe_0.bind(none_type_0)
    bool_0 = maybe_1.__eq__(none_type_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.to_either()
    var_2 = var_1.ap(var_0)
    maybe_3 = module_0.Maybe(bool_1, bool_0)
    var_3 = maybe_3.to_try()
    var_4 = var_1.ap(var_3)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_0.to_try()
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_1.get_or_else(bool_0)


def test_case_14():
    bytes_0 = b"\x15\xfd\x88\xea/\x82\x08\xf3t\x87C\x12#"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"\x96b\x1e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_0.map(bool_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_box()
    none_type_1 = None
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_either()
    var_2.ap(none_type_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.ap(maybe_0)
    var_4 = var_3.to_lazy()
    var_5 = maybe_0.to_box()
    var_6 = maybe_0.map(var_5)
    bool_1 = maybe_0.__eq__(bool_0)
    var_7 = maybe_0.to_lazy()
    var_8 = var_7.to_validation()
    var_9 = maybe_0.map(var_8)
    var_10 = var_6.filter(var_5)
    var_11 = maybe_0.map(var_8)
    var_12 = var_8.to_lazy()
    var_13 = var_11.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    maybe_1.filter(var_12)


def test_case_20():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_try()
    var_3 = var_1.get_or_else(bool_1)
    var_2.to_try()


def test_case_21():
    str_0 = "`hH9*6/"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.bind(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.to_try()
    var_5 = module_0.Maybe(maybe_0, var_0)
    var_6 = var_4.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(var_5)
    var_6.to_lazy()
