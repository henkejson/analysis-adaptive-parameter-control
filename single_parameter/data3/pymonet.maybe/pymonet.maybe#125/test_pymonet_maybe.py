# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "N"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_2.filter(var_0)
    var_2 = maybe_2.map(var_0)


def test_case_3():
    bool_0 = False
    bytes_0 = b"\xcb\x14^\x80\xd9\xea\n"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    float_0 = -4264.703863
    maybe_1 = module_0.Maybe(float_0, bytes_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.get_or_else(maybe_0)
    maybe_2 = module_0.Maybe(var_1, var_0)
    var_2 = maybe_2.filter(var_1)
    var_1.map(var_1)


def test_case_4():
    str_0 = "w&"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.filter(var_0)
    var_3 = var_0.ap(var_0)
    var_4 = var_2.bind(var_2)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    var_1.map(var_1)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    maybe_0.bind(var_1)


def test_case_6():
    str_0 = '"\\o'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(var_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = maybe_0.to_validation()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_2.filter(bool_1)
    var_1 = maybe_0.to_try()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    str_0 = "Z P"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_validation()
    bool_0 = True
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.get_or_else(var_2)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(list_0, bool_2)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    var_2 = maybe_0.get_or_else(bool_2)
    var_0.filter(bool_1)


def test_case_12():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_13():
    int_0 = 447
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(maybe_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    str_0 = "b-s\x0clI%IdJ.6\x0b}.$iM"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.map(str_0)
    var_4 = var_3.to_try()
    var_5 = var_3.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_either()
    list_0 = []
    bool_0 = maybe_1.__eq__(maybe_1)
    var_8 = var_7.to_validation()
    bool_1 = maybe_0.__eq__(var_6)
    maybe_1.bind(list_0)


def test_case_17():
    str_0 = '"\\o'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    bool_2 = maybe_0.__eq__(var_2)
    var_0.to_try()


def test_case_18():
    complex_0 = 591.892 - 279.4j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.to_try()
    var_3 = maybe_0.map(complex_0)
    var_4 = var_0.ap(maybe_0)
    var_5 = maybe_0.to_box()
    var_6 = var_5.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_7 = maybe_0.to_try()
    var_8 = var_7.filter(var_7)
    var_9 = maybe_0.filter(var_7)
    bool_1 = var_6.__eq__(var_5)
    bool_2 = var_8.__eq__(complex_0)
    dict_0 = {}
    var_6.filter(dict_0)


def test_case_19():
    str_0 = '"\\o'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.ap(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = var_0.to_try()
    var_4 = var_0.to_validation()
    object_0 = module_1.object()
    bool_2 = var_2.__eq__(var_0)
    var_5 = var_0.bind(var_3)
    var_6 = var_1.to_validation()
    var_7 = var_6.to_lazy()
    var_8 = var_5.bind(var_6)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.bind(var_3)
    var_5 = var_3.ap(var_3)
    var_6 = var_4.map(none_type_0)
    var_7 = maybe_0.filter(var_6)
    var_8 = var_0.to_validation()
    bool_1 = var_8.__eq__(var_2)
    var_9 = var_7.map(var_2)
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_10 = var_6.to_try()
    var_11 = var_7.to_either()
    var_12 = var_1.to_either()
    bool_2 = var_0.__eq__(maybe_1)
