# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    complex_0 = -2129.4 + 4122.8j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -618
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    var_2 = var_0.to_box()
    var_3 = var_2.to_try()
    bool_0.to_lazy()


def test_case_3():
    int_0 = -618
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.map(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_validation()
    var_5 = var_0.filter(var_4)
    var_6 = var_1.bind(var_0)
    var_7 = maybe_2.to_either()
    maybe_0.filter(bool_0)


def test_case_5():
    generic_0 = module_1.Generic()
    str_0 = 'l"UW\nF'
    tuple_0 = (str_0,)
    set_0 = {str_0, str_0, str_0, tuple_0}
    bool_0 = True
    tuple_1 = (str_0, tuple_0, set_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.bind(tuple_1)


def test_case_6():
    int_0 = -618
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = maybe_0.ap(bool_1)
    var_4 = var_3.to_lazy()
    maybe_2 = module_0.Maybe(var_3, bool_0)
    maybe_3 = module_0.Maybe(int_0, var_4)
    var_5 = var_3.to_try()
    var_6 = var_2.get_or_else(maybe_2)
    var_7 = var_4.ap(var_5)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_8():
    int_0 = 1802
    str_0 = "\n    All is a Monoid that will combine 2 values of any type using logical conjunction on their coerced Boolean values.\n    "
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_either()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_0.filter(var_2)
    var_4 = maybe_2.to_either()
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.get_or_else(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(var_1)
    var_3 = maybe_1.to_box()
    var_4 = var_1.to_try()
    var_5 = var_0.to_lazy()


def test_case_12():
    bytes_0 = b"gL^\xb7!6Y\xe1{\x0c"
    bytes_1 = b"\x1aT23\xe6RF\xf58/\xf4#\xe77+"
    maybe_0 = module_0.Maybe(bytes_0, bytes_1)
    bool_0 = False
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_either()
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(var_0)
    var_3 = maybe_1.to_box()
    var_4 = var_2.to_try()
    var_5 = var_3.to_lazy()


def test_case_13():
    int_0 = 1119
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_14():
    int_0 = -647
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = maybe_1.to_try()
    var_4 = var_2.to_lazy()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    int_0 = 156
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_19():
    int_0 = -618
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_0.ap(int_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(bool_0)
    var_1 = maybe_1.to_box()
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(var_0, none_type_0)
    var_1.filter(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(bool_0)
    var_1 = maybe_1.get_or_else(maybe_1)
    bool_1 = True
    maybe_2 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_2.to_box()
    var_3 = var_1.map(var_1)
    bool_2 = True
    maybe_3 = module_0.Maybe(bool_0, bool_2)
    var_4 = maybe_1.bind(var_3)
    var_5 = maybe_1.to_box()
    var_6 = var_4.to_lazy()
    var_7 = var_6.to_validation()
    var_8 = var_1.to_lazy()
    var_9 = var_8.to_box()
    var_10 = var_4.filter(var_7)
    var_11 = var_10.filter(var_9)
    var_12 = var_3.to_try()
    var_13 = maybe_2.to_either()
    var_14 = var_4.map(var_13)
    maybe_0.filter(bool_1)
