# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 943.28353
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = var_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_0.ap(bool_1)


def test_case_3():
    none_type_0 = None
    str_0 = "mRjw^#pbJS4(0y\\6[Me"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = var_0.ap(maybe_0)
    var_2 = var_1.get_or_else(var_0)
    var_3 = var_0.to_try()
    var_4 = var_1.bind(var_3)
    var_5 = var_4.map(var_2)
    var_6 = var_1.to_validation()


def test_case_4():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(bool_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.bind(none_type_0)
    var_4 = var_3.to_either()
    var_5 = var_4.to_box()


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_1)
    bool_1 = maybe_0.to_try()
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    bytes_0 = b'j\xd8\x89\xe7\xb3\x01:w\x15{d"\xb4\x01+>\x83'
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_8():
    float_0 = -2339.378525
    bytes_0 = b"\x11$"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_lazy()


def test_case_9():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_10():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, bool_0, bool_0]
    str_0 = "}\t5HS"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.filter(list_1)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = var_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    var_1.map(maybe_0)


def test_case_13():
    bool_0 = True
    tuple_0 = (bool_0,)
    int_0 = 2061
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(tuple_0)
    var_2.to_either()


def test_case_14():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(int_0)


def test_case_15():
    bytes_0 = b"viz\xdcm"
    none_type_0 = None
    str_0 = "mRjw^#pbJS4(0y\\6[Me"
    str_1 = "3mMD]p+u?&-"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    var_2.map(bytes_0)


def test_case_16():
    str_0 = "{4\x0cz3za.\r"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    float_0 = 943.28353
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = none_type_1.__eq__(bool_1)
    bool_0.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(bool_0)


def test_case_22():
    bytes_0 = b"\xae\xcd\x0foC\xec\x0c\x85x\xe9\xc0P8\xa7^\x15n\xb0\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.get_or_else(bytes_0)
    var_2 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(var_3, var_3)
    var_4 = maybe_2.map(bytes_0)
    var_5 = var_4.filter(bytes_0)
    var_6 = var_5.filter(bytes_0)
    var_7 = var_6.map(var_2)
    bool_0 = var_7.__eq__(var_6)
    var_8 = var_4.get_or_else(var_2)
    var_9 = var_5.bind(var_2)
    bool_1 = maybe_0.__eq__(var_5)
    var_10 = var_2.to_lazy()
    var_8.get_or_else(var_7)
