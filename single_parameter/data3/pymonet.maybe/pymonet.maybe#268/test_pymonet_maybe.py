# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = var_2.to_validation()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    none_type_0 = None
    var_1 = var_0.filter(var_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = var_2.to_validation()
    var_4 = var_0.map(var_3)
    bool_2 = var_1.__eq__(none_type_0)
    var_5 = var_1.to_try()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = var_2.to_validation()
    var_4 = var_0.map(var_3)
    var_5 = var_1.to_try()


def test_case_5():
    object_0 = module_1.object()
    int_0 = 1
    dict_0 = {object_0: int_0, object_0: object_0}
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_0.map(dict_0)


def test_case_6():
    bool_0 = True
    str_0 = 'e \x0c\x0cEQQ"lWmls'
    int_0 = 2673
    list_0 = [int_0, int_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_box()
    var_1.bind(bool_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    bool_1 = var_0.__eq__(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, bool_2)
    maybe_2 = module_0.Maybe(maybe_0, var_1)
    var_2 = var_1.to_try()
    var_3 = var_1.bind(bool_0)
    var_4 = var_3.to_lazy()
    maybe_1.bind(bool_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    bool_1 = var_0.__eq__(var_0)
    var_2 = var_0.filter(var_0)
    var_3 = var_0.ap(maybe_0)
    var_4 = var_3.to_lazy()
    var_5 = var_0.bind(var_4)
    var_6 = var_5.to_validation()
    var_7 = var_2.map(var_6)
    var_8 = var_3.to_try()


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    maybe_1.ap(bool_0)


def test_case_10():
    complex_0 = -252.06952 + 19j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.get_or_else(set_0)
    complex_0 = 54.549357 + 2521.1653j
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.get_or_else(complex_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    none_type_0 = None
    var_1 = var_0.filter(var_0)
    var_2 = var_0.filter(var_0)
    var_3 = var_0.bind(var_1)
    var_4 = var_3.to_validation()
    var_5 = module_0.Maybe(none_type_0, var_0)
    var_6 = var_0.to_either()


def test_case_13():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(dict_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()


def test_case_15():
    bytes_0 = b"os&G\x9f\xf1\xe7\xe10\x84\x80e\x91FO\xaen\xc4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    bool_1 = var_2.__eq__(var_0)
    var_4 = maybe_0.to_lazy()
    var_0.bind(bool_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.map(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.filter(var_0)
    var_3 = var_1.filter(var_0)
    var_4 = var_0.to_lazy()
    var_5 = var_4.bind(maybe_1)
    var_6 = var_0.map(bool_0)
    var_7 = var_5.to_try()


def test_case_19():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.map(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_4 = var_2.map(none_type_0)
    var_5 = var_0.filter(var_0)
    var_6 = var_0.filter(var_0)
    var_7 = var_6.ap(var_0)
    var_8 = var_7.to_lazy()
    var_9 = maybe_0.ap(var_7)
    var_10 = var_0.to_validation()
    bool_2 = var_5.__eq__(maybe_1)
    var_11 = var_3.map(var_9)
    var_12 = var_0.to_lazy()
    var_13 = var_0.to_try()
    var_14 = var_2.filter(var_1)


def test_case_20():
    str_0 = "] P;C\\aA&xen\\7]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(var_1, object_0)
    var_2 = maybe_1.filter(maybe_1)
    none_type_1 = None
    var_3 = var_2.to_lazy()
    var_4 = maybe_1.ap(str_0)
    var_5 = var_2.ap(object_0)
    var_6 = maybe_1.ap(none_type_1)
    var_7 = maybe_1.to_validation()
    bool_0 = var_4.__eq__(var_5)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_8 = var_5.bind(var_7)
    var_9 = var_7.to_lazy()
    maybe_0.filter(bool_0)
