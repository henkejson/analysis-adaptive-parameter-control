# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -1411.18
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_2)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_3 = maybe_1.to_box()
    maybe_1.filter(maybe_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = var_0.map(bool_0)
    maybe_1.filter(maybe_1)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_1.bind(var_3)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_5 = maybe_2.to_validation()
    maybe_2.map(maybe_1)


def test_case_6():
    bool_0 = True
    str_0 = "\tRC\\I5\rR&O("
    complex_0 = 29.31 + 1716.595556j
    maybe_0 = module_0.Maybe(str_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.map(bool_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.bind(bool_0)
    var_5 = var_0.to_box()
    var_6 = maybe_0.ap(bool_0)
    bool_1 = var_6.__eq__(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = maybe_0.to_try()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(var_2)
    var_3 = var_2.bind(none_type_0)
    maybe_1.bind(maybe_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = var_0.ap(var_1)
    maybe_1.filter(maybe_1)


def test_case_9():
    bytes_0 = b"\x06NLa\xf0\xdc>62\x85\x18\x9e\t3\x06\x1d2j"
    int_0 = 2342
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    maybe_1.filter(maybe_1)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_box()
    maybe_1.filter(maybe_1)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_13():
    int_0 = 5890
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    bool_1 = True
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_2.__eq__(maybe_2)
    var_2 = maybe_2.get_or_else(none_type_0)
    var_3 = maybe_2.to_either()
    var_3.ap(int_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()


def test_case_15():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = 2446
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.map(dict_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"N\x08"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_18():
    complex_0 = 2347 + 2337.3322j
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, complex_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    var_4 = var_3.to_validation()
    var_5 = var_4.to_lazy()
    var_5.get_or_else(none_type_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    bool_1 = False
    bool_2 = maybe_0.__eq__(var_2)
    var_3 = var_1.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_1.to_box()
    maybe_1.filter(maybe_1)


def test_case_20():
    bool_0 = False
    str_0 = "\tRC\\I5\rR&O("
    complex_0 = 29.31 + 1716.595556j
    maybe_0 = module_0.Maybe(str_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.bind(bool_0)
    var_5 = var_4.to_validation()
    var_6 = var_1.ap(complex_0)
    var_7 = var_4.to_try()
    var_8 = var_1.bind(var_1)
    maybe_1 = module_0.Maybe(var_6, var_8)
    bool_1 = maybe_1.__eq__(maybe_0)
