# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"$\xc2\xd2\xdc\xec_Z_"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_try()
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    float_0 = -229.4
    bool_1 = maybe_1.__eq__(maybe_1)
    var_5 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(var_0, float_0)
    var_6 = maybe_2.to_lazy()
    var_6.filter(bytes_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    str_0 = "^J.E8Gi7\x0b"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.map(var_2)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_4 = maybe_1.get_or_else(var_2)
    var_5 = var_3.to_box()
    var_6 = maybe_1.map(str_0)
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_7 = maybe_2.get_or_else(var_3)
    var_8 = maybe_1.bind(maybe_1)


def test_case_5():
    bool_0 = False
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    bool_1 = False
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_4 = maybe_2.get_or_else(bool_0)


def test_case_7():
    float_0 = -834.2083
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    maybe_1.bind(var_1)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.filter(var_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_3 = maybe_1.to_try()
    maybe_1.filter(var_3)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.to_lazy()


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    bytes_0 = b"\t\xf7"
    bytes_1 = b"C}uJ\xf1\x88\x03\xf1\x1b"
    bool_0 = False
    list_0 = [bytes_1, bytes_1, bytes_1, bool_0]
    tuple_0 = (bytes_1, list_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_0.filter(none_type_0)


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.filter(bool_0)
    var_4 = maybe_0.to_lazy()


def test_case_15():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_16():
    int_0 = 1528
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_1.get_or_else(var_0)


def test_case_17():
    str_0 = '@|W"'
    set_0 = {str_0, str_0, str_0, str_0}
    maybe_0 = module_0.Maybe(str_0, set_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_19():
    int_0 = 1899
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    dict_0 = {int_0: int_0, int_0: int_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_validation()
    var_2.to_validation()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_1.bind(var_0)
    var_4 = maybe_0.filter(bool_0)
    var_5 = maybe_0.to_lazy()
    var_5.to_lazy()


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_try()
    list_0 = []
    none_type_2 = None
    none_type_3 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_3, bool_1)
    var_3 = maybe_1.get_or_else(none_type_2)
    var_3.map(list_0)


def test_case_22():
    str_0 = "^J.E8Gi7\x0b"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    float_0 = -257.86152780703515
    bool_0 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(float_0, var_0)
    var_0.to_lazy()


def test_case_23():
    int_0 = 1899
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, maybe_0)
    var_0 = maybe_1.to_try()
    bool_2 = maybe_1.__eq__(maybe_0)
    bool_3 = maybe_0.__eq__(bool_1)
    var_1 = maybe_1.filter(bool_2)
    maybe_2 = module_0.Maybe(maybe_1, int_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_either()
    dict_0 = {}
    var_2.ap(dict_0)
