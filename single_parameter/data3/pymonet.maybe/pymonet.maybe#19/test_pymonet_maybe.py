# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -3825
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xa5K\xc1QF\xec"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(bytes_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_4():
    str_0 = "All"
    float_0 = 939.37
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.map(str_0)
    var_2 = var_1.to_try()


def test_case_5():
    int_0 = 0
    complex_0 = 4918.838 - 606.997111j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.map(int_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_either()
    var_1 = maybe_0.bind(var_0)
    maybe_1.map(none_type_0)


def test_case_7():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.bind(list_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = maybe_0.ap(var_0)
    var_4 = var_0.bind(maybe_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = var_0.to_validation()


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.get_or_else(maybe_0)
    maybe_0.map(maybe_1)


def test_case_13():
    bytes_0 = b"\xa5K\xc1QF\xec"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(bytes_0)


def test_case_14():
    int_0 = -3780
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    complex_0 = -2653 - 2515.45125j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(var_0)
    bytes_0 = b"\xc2\xab\xad\x16s\xc8.:%\x03\xaf\xc3\xab"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_1 = module_0.Maybe(bytes_0, dict_0)
    var_0.map(var_2)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)


def test_case_17():
    str_0 = "055f6\x0bC|qxt'"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    str_0 = "=.aNv<XO\\y]\n4x 5"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_1.to_either()


def test_case_19():
    int_0 = -3780
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [bool_0, bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(list_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(maybe_0)


def test_case_22():
    bytes_0 = b"\xa5K\xc1QF\xec"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = maybe_0.bind(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, maybe_1)
    var_0 = maybe_1.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_2.to_validation()
    var_4 = maybe_1.map(var_3)
    bool_1 = True
    maybe_3 = module_0.Maybe(bool_1, bool_1)
    var_5 = maybe_0.map(var_2)
    var_6 = maybe_2.map(var_2)
    var_7 = maybe_1.to_either()
    var_8 = var_2.filter(var_2)
    var_9 = var_6.to_validation()
    var_10 = var_5.to_validation()
    var_1.to_try()
