# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"2i\xeb\xf2WPT\x05\x86y\xcb\xd1\xea\xfe2\xf0\xeblJ_"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "Try[value={}, is_success={}]"
    str_1 = "Dz\tJNtSp\n\t"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_1, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.to_box()
    bool_3 = var_2.__eq__(str_0)
    var_3 = var_2.to_validation()
    var_4 = module_1.object()


def test_case_3():
    str_0 = "Dz\tJNtSp\n\t"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(bool_1)
    var_1 = maybe_0.to_box()
    bool_2 = var_0.__eq__(var_1)
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_2 = var_0.filter(var_1)
    var_3 = maybe_2.to_box()
    var_4 = maybe_0.to_either()
    bool_3 = var_4.__eq__(maybe_0)
    var_5 = var_1.to_validation()
    module_1.object(*var_3)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.to_either()


def test_case_5():
    object_0 = module_1.object()
    str_0 = "7_<;`T\t)?@"
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, str_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_2 = module_0.Maybe(maybe_1, dict_0)
    maybe_2.map(str_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_0)


def test_case_7():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(dict_0)


def test_case_8():
    bytes_0 = b"\x8c\xd4I\x0e\x94A\x08%\x1e\x8e0\x85& \x1d\xd7\xc1\x1cM"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.ap(bytes_0)
    var_1 = var_0.to_either()


def test_case_9():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_1)


def test_case_10():
    str_0 = '=6A0QO_"l$gz'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    str_0 = "Dz\tJNtSp\n\t"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(bool_1)
    var_1 = maybe_1.to_either()
    var_2 = maybe_0.to_box()
    bool_2 = maybe_1.get_or_else(var_2)
    var_3 = var_0.get_or_else(bool_2)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_2, bool_3)
    bool_3.ap(maybe_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_13():
    none_type_0 = None
    float_0 = -2126.42
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_1.get_or_else(none_type_0)


def test_case_15():
    bytes_0 = b"\x9fy&Ts\x1c\xb2J\x84\x9d\xc7Q\x92\xdd\x07\xf7\x17}"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()


def test_case_16():
    generic_0 = module_2.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    int_0 = 1
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_1.get_or_else(bool_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_19():
    str_0 = "Dz\tJNtSp\n\t"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(str_0, var_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_2.bind(var_0)
    var_5 = var_4.to_either()
    var_6 = maybe_1.bind(var_3)
    bool_3 = var_6.__eq__(maybe_0)
    var_7 = maybe_1.filter(var_2)
    bool_4 = var_3.__eq__(var_2)
    var_0.get_or_else(var_5)


def test_case_20():
    dict_0 = {}
    str_0 = "\n        Transform Validation to Maybe.\n\n        :returns: Maybe with Validation Value when Validation has no errors, in other case empty Maybe\n        :rtype: Maybe[A | None]\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_try()
    var_3 = var_2.get_or_else(dict_0)
    var_2.to_validation()
