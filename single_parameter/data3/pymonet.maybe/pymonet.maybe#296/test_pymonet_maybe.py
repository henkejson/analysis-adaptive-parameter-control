# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.map(var_0)


def test_case_3():
    int_0 = 704
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    maybe_1 = module_0.Maybe(bool_0, object_0)
    bool_2 = maybe_1.__eq__(int_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    maybe_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_try()
    var_4 = var_2.to_lazy()
    var_5 = maybe_1.map(var_4)
    var_4.to_lazy()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_try()
    var_4 = var_2.to_lazy()
    maybe_1.map(var_4)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"l%T\xf1t"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = maybe_1.bind(bytes_0)
    var_4 = var_3.get_or_else(bytes_0)
    maybe_0.filter(maybe_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"l%T\xf1t"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_try()
    maybe_0.filter(maybe_1)


def test_case_10():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_1 = module_1.object(*var_0)
    int_0 = 0
    maybe_1 = module_0.Maybe(int_0, int_0)
    maybe_1.filter(var_1)


def test_case_11():
    str_0 = "UHR/ry6k`o\\lHdv"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    float_0 = 2178.59
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_13():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = module_0.Maybe(maybe_0, dict_0)
    var_1 = var_0.to_box()
    int_0 = 0
    maybe_1 = module_0.Maybe(int_0, int_0)
    maybe_1.filter(var_1)


def test_case_14():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.to_lazy()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_16():
    int_0 = 352
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    int_0 = -2902
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_21():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_try()
    var_2 = var_0.get_or_else(var_1)
    var_3 = module_0.Maybe(bool_2, bool_2)
    var_4 = var_3.to_try()
    var_4.to_either()


def test_case_22():
    bool_0 = True
    str_0 = "@enB\\6O0UJk|V8sWnH"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()
    str_1 = "UHR/JN6k`o\\lHdv"
    bool_2 = maybe_0.__eq__(str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_1, str_1)
    var_2 = maybe_1.bind(none_type_0)
    var_3 = var_2.to_box()
    set_0 = set()
    int_0 = 154
    bool_3 = var_2.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(set_0, int_0)
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_2.filter(var_5)
    var_7 = maybe_2.map(str_1)
    var_8 = var_4.ap(var_4)
    var_9 = var_5.to_try()
    module_1.object(**var_0)
