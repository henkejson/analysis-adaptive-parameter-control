# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    generic_0 = module_1.Generic()
    var_0 = maybe_0.get_or_else(generic_0)
    var_0.bind(var_0)


def test_case_3():
    int_0 = -300
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_lazy()
    bool_0 = var_0.__eq__(var_2)
    var_2.to_lazy()


def test_case_4():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    bool_1 = var_0.__eq__(bool_0)
    generic_0 = module_1.Generic()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.get_or_else(var_2)
    var_4 = maybe_1.bind(generic_0)
    var_5 = var_2.to_try()
    var_6 = maybe_1.get_or_else(set_0)
    var_7 = maybe_1.to_validation()
    var_8 = maybe_1.filter(var_5)
    var_9 = var_4.to_try()
    var_10 = var_0.map(var_4)


def test_case_5():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_0.map(none_type_0)


def test_case_6():
    int_0 = -300
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    none_type_0 = None
    var_1 = var_0.filter(none_type_0)
    var_2 = maybe_0.to_validation()
    var_3 = module_0.Maybe(var_2, maybe_0)
    var_4 = var_3.to_lazy()
    bool_0 = var_0.__eq__(none_type_0)
    var_5 = var_3.bind(var_4)
    var_2.filter(bool_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_0.bind(maybe_0)


def test_case_8():
    int_0 = -300
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    none_type_0 = None
    var_1 = var_0.filter(none_type_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.filter(var_2)
    var_4 = var_2.to_lazy()
    var_5 = var_3.to_lazy()
    bool_0 = var_0.__eq__(var_5)
    var_6 = maybe_0.to_lazy()
    var_7 = var_3.ap(var_0)
    var_8 = var_7.filter(var_4)
    maybe_1 = module_0.Maybe(var_4, var_4)
    var_9 = maybe_1.filter(var_5)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = var_0.__eq__(none_type_0)
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_validation()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_0, bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    generic_0 = module_1.Generic()
    var_0 = maybe_0.get_or_else(generic_0)
    var_1 = maybe_0.to_either()
    var_0.to_try()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(none_type_0)


def test_case_16():
    int_0 = 367
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(int_0)
    maybe_0.filter(var_1)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    none_type_0.to_lazy()


def test_case_20():
    str_0 = "Jc"
    int_0 = -300
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    tuple_0 = (str_0, str_0, str_0)
    maybe_2 = module_0.Maybe(bool_0, tuple_0)
    var_0 = maybe_2.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_2.filter(maybe_1)
    var_3 = maybe_2.to_either()
    var_4 = var_1.to_try()
    maybe_1.filter(var_0)


def test_case_21():
    bool_0 = False
    complex_0 = 166.4268 - 104.67946j
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_2.filter(var_1)


def test_case_22():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    bool_1 = var_0.__eq__(bool_0)
    generic_0 = module_1.Generic()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.get_or_else(var_2)
    var_4 = maybe_1.bind(generic_0)
    maybe_2 = module_0.Maybe(var_3, bool_1)
    var_5 = maybe_0.to_either()
    var_6 = maybe_1.bind(var_1)
    var_7 = maybe_2.to_validation()
    bool_2 = var_6.__eq__(maybe_2)
    var_8 = var_0.get_or_else(var_3)
    var_9 = var_6.filter(var_2)
    var_10 = var_3.to_either()
    var_11 = var_5.ap(maybe_1)
    var_12 = var_11.bind(var_9)
    var_13 = maybe_0.map(var_0)
