# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(set_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.to_lazy()
    bool_1 = False
    var_4 = maybe_0.filter(bool_1)
    var_5 = var_4.to_lazy()
    var_6 = var_3.bind(var_3)
    var_7 = maybe_0.to_box()
    var_8 = var_4.to_try()
    var_9 = var_4.to_box()
    bool_2 = var_2.__eq__(bool_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.ap(bool_0)
    var_0.to_try()


def test_case_4():
    int_0 = -3152
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_5():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(set_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.to_lazy()
    bool_1 = False
    var_4 = maybe_0.filter(bool_1)
    var_5 = var_4.to_lazy()
    var_6 = var_3.bind(var_3)
    var_7 = maybe_0.to_box()
    var_8 = var_0.bind(maybe_0)
    var_9 = var_2.to_try()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    tuple_0 = ()
    str_0 = "=p#8eY[F\rd/-"
    set_0 = {str_0, str_0, str_0, str_0}
    maybe_0 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.to_box()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    float_0 = -1242.8
    bytes_0 = b"\x98\xc6\x97{\x84\xaf\xbc/e\xda\xabL\x03jG\xdd3k\\"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(float_0)
    var_1 = var_0.to_box()
    int_0 = 2345
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_0.to_validation()


def test_case_10():
    str_0 = "0@cA"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(var_1)


def test_case_11():
    float_0 = 2159.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    bool_0 = True
    none_type_0 = None
    var_2 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_3 = maybe_2.to_lazy()
    bool_1 = var_2.__eq__(var_3)
    var_2.get_or_else(maybe_1)


def test_case_12():
    float_0 = -143.698508
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(float_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    var_1 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.to_try()
    var_2.filter(none_type_0)


def test_case_17():
    bool_0 = False
    float_0 = -2811.24562
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(maybe_0, float_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_either()
    bool_1 = var_1.__eq__(bool_0)
    int_0 = -223
    bool_2 = False
    maybe_2 = module_0.Maybe(int_0, bool_2)


def test_case_18():
    complex_0 = 3196.8 + 617.7375j
    bool_0 = True
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: bool_0,
    }
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_3.to_lazy()


def test_case_19():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    var_1.get_or_else(none_type_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.ap(bool_0)
    bool_1 = var_2.__eq__(var_2)
    var_3 = var_0.to_either()
    var_4 = maybe_0.get_or_else(var_0)
    var_5 = maybe_0.to_try()
    var_6 = var_0.to_lazy()
    var_7 = var_0.to_try()
    var_8 = var_1.to_box()
    var_9 = var_7.filter(var_4)
    var_10 = var_8.to_validation()
    var_11 = var_0.to_validation()
    var_12 = var_1.to_box()
    var_13 = var_4.to_validation()
    var_14 = var_6.to_validation()
    var_11.to_validation()


def test_case_21():
    bytes_0 = b"\x98\xc6\x97{\x84\xaf\xbc/e\xda\xabL\x03jG\xdd3k\\"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = module_0.Maybe(maybe_0, var_0)
    var_3 = maybe_0.get_or_else(var_2)
    var_4 = var_3.to_try()
    var_5 = var_3.map(bool_1)
    var_6 = var_5.to_lazy()
    var_7 = var_2.to_lazy()
    var_4.to_try()


def test_case_22():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(set_0)
    var_1 = maybe_0.filter(set_0)
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.ap(bool_0)
    var_4 = var_3.to_lazy()
    var_5 = var_0.get_or_else(var_0)
    bool_1 = False
    var_6 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_7 = maybe_1.to_lazy()
    int_0 = -904
    tuple_0 = (int_0, var_2, bool_1)
    var_8 = var_2.filter(tuple_0)
    maybe_2 = module_0.Maybe(set_0, set_0)
    bool_2 = True
    var_9 = var_5.to_lazy()
    maybe_3 = module_0.Maybe(none_type_0, var_2)
    var_10 = var_0.bind(bool_2)
    var_11 = var_10.to_try()
    var_12 = var_9.to_try()
    bool_3 = maybe_2.__eq__(maybe_2)
