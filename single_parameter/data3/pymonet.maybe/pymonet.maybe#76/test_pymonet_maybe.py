# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.ap(object_0)
    var_3 = var_2.filter(var_2)
    var_4 = var_3.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(object_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_5 = maybe_1.to_either()
    var_0.to_lazy()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_0.filter(bool_1)


def test_case_4():
    none_type_0 = None
    object_0 = module_1.object()
    int_0 = 249
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(object_0)
    var_1 = var_0.filter(none_type_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\xb9O:\n\xd6n\x10\xfc\x1aX\xdc\xc8\x95\x80'"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_either()
    var_4 = var_3.to_box()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(bool_1, var_1)
    var_2 = maybe_0.to_try()
    var_3 = maybe_1.get_or_else(bool_0)
    maybe_0.bind(var_2)


def test_case_8():
    int_0 = -2274
    bytes_0 = b"{i\x9a\xfa\xd2\x13~E\xb3\x8dq\xe0\xf0NL\x86%b\x0e"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(int_0)


def test_case_9():
    float_0 = 2627.46014
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.get_or_else(float_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    bool_1 = var_1.ap(var_0)
    var_2 = maybe_0.filter(var_1)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_1)
    maybe_0.filter(var_1)


def test_case_13():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.ap(object_0)
    var_3 = var_2.filter(none_type_0)
    var_4 = var_3.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(object_0, none_type_1)
    var_5 = var_2.ap(maybe_1)
    maybe_2 = module_0.Maybe(var_4, var_5)
    var_6 = maybe_0.bind(var_5)
    var_7 = maybe_2.bind(var_2)
    var_8 = var_7.to_lazy()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = var_0.ap(var_0)
    list_0 = [none_type_0, maybe_1, bool_0]
    maybe_2 = module_0.Maybe(list_0, bool_0)


def test_case_15():
    str_0 = "iIY\tMMK{^y"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    float_0 = -864.4
    bytes_0 = b"\xa7J_-^\x05\xc0\xf4\xbe"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_3, var_3)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_4 = maybe_1.ap(float_0)
    var_5 = var_4.to_validation()
    var_6 = var_4.to_either()
    var_3.filter(var_5)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bytes_0 = b"\x91\xcc\x8e\x02E\x16"
    bool_2 = False
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    var_1 = maybe_2.to_validation()


def test_case_18():
    object_0 = module_1.object()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, object_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_0 = maybe_0.__eq__(object_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.ap(var_2)
    bytes_0 = b"o\x1e\xd5}\xc9\x06\x08-`\x0f"
    bool_1 = var_1.__eq__(bool_0)
    bool_2 = False
    var_4 = maybe_0.to_try()
    list_0 = [bytes_0, bool_2, bytes_0]
    maybe_1 = module_0.Maybe(none_type_0, list_0)
    var_5 = maybe_0.ap(none_type_0)
    dict_0 = {}
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    bool_3 = var_4.__eq__(var_3)
    var_1.filter(var_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()
