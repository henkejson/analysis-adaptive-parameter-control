# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "wvL#N9+AVg\x0c22"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(none_type_0)
    bool_1 = var_1.__eq__(var_1)
    bool_2 = var_0.__eq__(maybe_0)
    var_2 = var_1.to_validation()
    bool_3 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.filter(var_0)
    var_5 = var_0.to_validation()
    var_6 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_4, bool_3)
    var_7 = maybe_1.ap(var_3)
    maybe_1.filter(var_7)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_1.ap(var_0)
    maybe_1.filter(var_2)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = var_2.ap(none_type_0)


def test_case_5():
    bool_0 = False
    generic_0 = module_1.Generic()
    bool_1 = False
    maybe_0 = module_0.Maybe(generic_0, bool_1)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = False
    bytes_0 = b"A\xb6\xb3\x11"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.to_box()
    generic_0 = module_1.Generic()


def test_case_7():
    bytes_0 = b"\xe3\xca\xb0\x9f\xb2\xad\xfcp\xfd\xc9\xf1\xe0\xde\x0e\xe2\xc3;\x87"
    bytes_1 = b"4-\x03\xa0\xbd&y\xa0\x9a\xb8\n$]\x89\x0e\xcd"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_1, none_type_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(maybe_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    tuple_0 = ()
    str_0 = "Jy@I5QG<R[ o\x0b"
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.get_or_else(tuple_0)
    var_1.bind(none_type_0)


def test_case_10():
    bytes_0 = b"\xb5Cz\xa4F8\x00\xc5+\xff!B\xc3v\xe3q^\xc7PM"
    set_0 = set()
    list_0 = [set_0, set_0]
    list_1 = [list_0, set_0, set_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.get_or_else(list_1)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    bytes_0 = b"\xb6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.to_box()
    var_3 = var_1.to_lazy()
    var_4 = var_1.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 1
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, none_type_1)
    var_0 = maybe_1.to_either()
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    dict_0 = {}
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_4 = maybe_1.ap(var_1)
    maybe_1.filter(var_4)


def test_case_17():
    int_0 = -56
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_1.to_validation()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(none_type_0)
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.filter(var_0)
    var_4 = var_1.to_validation()
    var_5 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_3, bool_2)
    var_6 = maybe_1.ap(var_2)
    maybe_1.filter(var_6)


def test_case_19():
    none_type_0 = None
    none_type_0.to_either()


def test_case_20():
    str_0 = "wvL#)9+AFg\x0c22"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.ap(str_0)
    var_2 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.to_either()
    var_0.to_validation()


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(bool_1)


def test_case_22():
    str_0 = "wvL#)9+AFg\x0c22"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.ap(str_0)
    bool_0 = maybe_0.__eq__(var_1)
    bool_0.to_lazy()


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_1.to_try()
    var_5 = var_4.get_or_else(none_type_0)
    var_5.to_either()
