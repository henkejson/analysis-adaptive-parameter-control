# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = var_2.map(var_3)
    var_6 = var_4.to_either()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.to_either()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_5 = var_4.to_lazy()
    bool_2 = var_4.__eq__(bool_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.map(bool_0)
    var_2 = maybe_0.to_try()
    var_2.to_lazy()


def test_case_5():
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, bool_0)
    dict_0 = {tuple_1: tuple_1, tuple_1: tuple_1}
    int_0 = 51
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.map(dict_0)


def test_case_6():
    float_0 = 3320.218562
    bytes_0 = b"d\x17d1\xfd\x95"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    int_0 = -845
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.get_or_else(float_0)


def test_case_7():
    bytes_0 = b"\xd5\xfdf\xcd9E"
    float_0 = -2889.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    bool_1 = var_1.__eq__(float_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    float_0 = 2059.8054
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_0.ap(float_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_10():
    int_0 = -1412
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.get_or_else(var_4)
    var_6 = var_4.to_lazy()
    var_7 = maybe_1.to_try()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(bool_1)


def test_case_15():
    bool_0 = False
    str_0 = "i1}5NZSi"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.to_try()
    var_0.filter(var_1)
