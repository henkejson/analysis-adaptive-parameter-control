# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = -1429
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    int_0 = -60
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0.to_lazy()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1078
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_0.to_lazy()


def test_case_4():
    bool_0 = True
    generic_0 = module_1.Generic()
    bool_1 = True
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.map(var_1)
    var_3 = var_0.map(generic_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = var_3.map(bool_0)


def test_case_5():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_0.ap(maybe_0)


def test_case_6():
    int_0 = 947
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.to_box()
    bool_1 = var_2.__eq__(var_0)
    var_3 = var_0.bind(maybe_0)
    var_4 = var_2.to_validation()
    var_4.get_or_else(var_3)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1078
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_0.ap(maybe_1)


def test_case_9():
    str_0 = "\tO\t} Sh\tE{/XJ$3'=Z"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = module_0.Maybe(str_0, var_0)
    var_4 = var_3.to_try()
    var_4.to_lazy()


def test_case_10():
    int_0 = 1301
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(generic_0)


def test_case_12():
    int_0 = -754
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.get_or_else(var_0)
    var_2.to_validation()


def test_case_13():
    none_type_0 = None
    int_0 = -5148
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.filter(none_type_0)
    var_2.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    str_0 = "\n        Take function and applied this function on current Validation value and returns folder result.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> Validation[B, E]\n        :returns: new Validation with mapped value\n        :rtype: Validation[B, E]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    float_0 = 591.6819
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_0.ap(float_0)


def test_case_17():
    float_0 = -251.35
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    bool_0 = False
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_box()
    var_2.bind(var_2)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1078
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_try()
    var_0.to_lazy()


def test_case_21():
    str_0 = ">b \x0boQnw"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_1 = var_0.ap(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_validation()
    var_4 = var_0.to_box()
    var_5 = var_1.to_box()
    maybe_1 = module_0.Maybe(str_0, var_4)
    var_6 = maybe_1.bind(var_2)
    var_7 = var_2.to_box()
    bool_2 = var_0.__eq__(bool_0)
    var_3.map(none_type_0)


def test_case_22():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(list_0)


def test_case_23():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.get_or_else(var_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.to_either()
    var_5 = var_3.bind(var_3)
    var_6 = maybe_0.to_try()
    var_7 = var_5.to_try()
    var_8 = var_6.filter(var_3)
    var_9 = var_6.bind(bool_0)
    maybe_1.filter(maybe_1)


def test_case_24():
    object_0 = module_2.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_25():
    none_type_0 = None
    bool_0 = False
    object_0 = module_2.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.to_box()
    bool_1.ap(none_type_0)


def test_case_26():
    str_0 = ">b \x0boQnw"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_1 = var_0.ap(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.map(var_2)
    var_4 = var_3.to_lazy()
    var_5 = var_0.to_box()
    var_6 = var_1.to_box()
    maybe_1 = module_0.Maybe(str_0, var_5)
    var_7 = maybe_1.bind(var_2)
    var_8 = var_2.to_box()
    bool_1 = var_0.__eq__(var_3)
    str_0.map(var_4)
