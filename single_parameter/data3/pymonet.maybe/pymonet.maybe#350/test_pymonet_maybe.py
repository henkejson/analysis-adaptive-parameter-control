# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -3584
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(maybe_0)


def test_case_3():
    int_0 = -3584
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_0.to_either()
    var_3 = var_1.to_box()
    var_4 = var_0.ap(maybe_0)
    var_5 = maybe_0.filter(var_2)
    bool_0 = var_0.__eq__(int_0)
    var_6 = var_1.to_try()
    var_7 = var_5.filter(var_1)
    var_6.to_lazy()


def test_case_4():
    complex_0 = 894 - 980.974776j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.to_either()
    var_2 = var_0.bind(var_0)
    var_1.get_or_else(complex_0)


def test_case_5():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_8():
    bool_0 = False
    set_0 = set()
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_1.to_try()
    var_1.filter(var_3)


def test_case_11():
    bytes_0 = b"h\xb5m5\xae,\xf9\xf9\xbf\x1ap\xe2!\xd6\x16\xe8"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    none_type_1 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_1.to_try()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    int_0 = -102
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.ap(int_0)
    var_2 = var_1.to_either()
    var_3 = var_2.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_3)


def test_case_13():
    int_0 = 2638
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    str_0 = "4- "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_box()
    var_3.filter(var_1)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_validation()
    bool_2 = True
    maybe_2 = module_0.Maybe(var_1, bool_2)
    var_3 = maybe_2.to_lazy()
    var_4 = var_0.ap(maybe_1)
    var_5 = var_0.to_validation()
    var_6 = maybe_0.bind(none_type_0)
    maybe_3 = module_0.Maybe(none_type_0, bool_0)
    var_7 = maybe_3.to_try()
    var_8 = var_6.to_validation()
    var_9 = var_8.to_try()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()
    str_0 = "p"
    bytes_0 = b"7~\x90\xc17\xe97U\xa3jy"
    bool_1 = True
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_4 = maybe_1.get_or_else(maybe_1)
    var_5 = maybe_1.ap(str_0)
    var_6 = maybe_1.to_box()
    var_7 = var_5.to_try()
    bool_2 = var_7.__eq__(var_4)
    var_2.bind(var_7)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    float_0 = 1459.0
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.map(float_0)


def test_case_20():
    int_0 = 707
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_box()
    var_3 = var_2.ap(var_1)
    var_4 = maybe_0.filter(var_3)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_5 = var_1.to_try()
    var_5.to_lazy()


def test_case_21():
    int_0 = -3584
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(maybe_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(int_0, bool_1)
    bool_2 = var_2.__eq__(var_1)
    bool_3 = maybe_0.__eq__(var_1)
    var_3 = maybe_2.to_either()
    var_4 = maybe_2.filter(var_2)
    bool_4 = var_4.__eq__(maybe_0)
    var_5 = maybe_0.ap(bool_3)
    var_6 = var_4.to_try()
    maybe_1.filter(var_1)
