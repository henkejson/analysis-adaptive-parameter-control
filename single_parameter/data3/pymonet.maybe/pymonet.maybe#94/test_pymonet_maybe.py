# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    none_type_0 = None
    str_0 = "Q"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_1.ap(maybe_1)
    bool_1 = maybe_1.__eq__(none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xbb\xa5\x98"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)


def test_case_5():
    set_0 = set()
    bytes_0 = b">\xe1\xc5\x7f\xb3\xc3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    maybe_0.map(set_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_3 = var_0.bind(var_1)
    var_4 = maybe_2.to_validation()
    var_5 = maybe_0.to_try()
    var_6 = maybe_2.get_or_else(var_0)
    var_7 = var_6.to_either()
    var_8 = var_6.ap(maybe_2)
    var_9 = var_3.to_try()
    maybe_1.filter(var_8)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_try()
    maybe_1.filter(maybe_1)


def test_case_10():
    bytes_0 = b"y"
    int_0 = 277
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.get_or_else(bytes_0)
    var_0.filter(bytes_0)


def test_case_11():
    str_0 = "U"
    str_1 = "*HhwMY"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.filter(str_1)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_3 = maybe_1.get_or_else(str_1)
    var_3.bind(var_2)


def test_case_12():
    none_type_0 = None
    bytes_0 = b"\xbb\xa5\x98"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_1.filter(var_2)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_1.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_2 = maybe_0.to_try()
    maybe_1.filter(maybe_1)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    bytes_0 = b"\xfa\xe1\xd5D\xbeC\xaa\x1d\xf6"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0, set_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(list_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_2.to_validation()
    var_3 = maybe_0.to_try()
    var_4 = maybe_2.get_or_else(var_0)
    var_5 = var_4.to_either()
    var_6 = var_4.ap(maybe_2)
    maybe_1.filter(var_6)


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_20():
    none_type_0 = None
    str_0 = "Q"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_1.ap(maybe_1)
    bool_1 = maybe_0.__eq__(var_0)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_1 = maybe_1.get_or_else(bool_0)


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_1.bind(var_4)
    var_6 = var_1.to_either()
    var_7 = maybe_2.bind(var_6)
    var_8 = maybe_0.to_try()
    var_9 = var_7.get_or_else(var_1)
    var_10 = var_9.to_either()
    maybe_3 = module_0.Maybe(var_6, bool_1)
    var_11 = maybe_3.ap(maybe_2)
    var_12 = var_5.to_try()
    maybe_1.filter(var_11)


def test_case_22():
    str_0 = "Q"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_1.ap(maybe_1)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_try()
    var_2 = var_0.to_lazy()
    var_3 = maybe_1.ap(object_0)
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.to_lazy()
    var_6 = var_2.to_try()
    var_6.to_try()


def test_case_23():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(var_1, none_type_1)
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.to_lazy()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = var_0.to_lazy()
    var_5 = maybe_1.to_validation()
    var_6 = var_0.map(var_0)
    var_7 = var_6.bind(var_3)
    var_8 = maybe_1.to_lazy()
    var_9 = var_1.to_validation()
    var_10 = var_7.to_try()
    maybe_3 = module_0.Maybe(var_2, var_3)
    var_10.ap(var_6)
