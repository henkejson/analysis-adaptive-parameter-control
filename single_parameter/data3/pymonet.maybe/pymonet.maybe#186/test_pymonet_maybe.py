# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x91\x9d\xf6\xdaj\n\xb8\xbem\x8c\xac\xe5\x19\xd5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = 1975.73
    list_0 = [float_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_box()
    var_0.to_box()


def test_case_3():
    bytes_0 = b"\xfa\xa8Lf"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_either()
    maybe_1 = maybe_0.to_try()
    var_1 = var_0.to_box()
    maybe_0.ap(bool_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.map(var_0)
    var_4 = var_2.filter(bool_0)
    var_5 = maybe_0.to_box()
    var_6 = var_2.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    bool_2 = var_0.__eq__(var_0)
    var_7 = maybe_1.to_validation()
    maybe_1.filter(var_5)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_box()
    maybe_1.map(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.bind(var_2)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    str_0 = "*<"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    bool_0 = var_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(var_2, str_0)
    bool_1 = var_3.__eq__(str_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.ap(var_2)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_2)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)


def test_case_11():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_3)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_3)


def test_case_15():
    bytes_0 = b"\xfa\xa8Lf"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    none_type_1 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_2)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_0.get_or_else(bytes_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.map(var_0)
    var_3 = var_2.to_try()
    var_4 = maybe_0.get_or_else(var_1)
    var_5 = var_4.map(var_0)
    var_6 = var_2.map(var_1)
    var_7 = maybe_0.filter(bool_0)
    var_8 = var_4.to_box()
    var_9 = maybe_0.bind(var_8)
    var_10 = var_8.to_validation()
    var_11 = var_4.to_box()
    var_12 = var_3.bind(var_4)
    var_13 = var_1.to_lazy()
    int_0 = 2836
    maybe_1 = module_0.Maybe(var_13, int_0)
    bool_1 = var_7.__eq__(maybe_1)
    var_14 = var_11.to_validation()
    var_15 = var_13.bind(var_0)
    var_16 = var_7.to_lazy()
    var_17 = var_16.bind(var_10)
    var_18 = var_17.to_try()
    var_18.to_box()
