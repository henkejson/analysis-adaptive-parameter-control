# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    float_0 = 3571.3696
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    bool_3 = var_1.__eq__(var_0)
    var_3 = var_0.to_box()
    var_1.bind(var_3)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.bind(maybe_0)


def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.filter(maybe_1)
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_1.to_validation()
    bool_3 = maybe_0.__eq__(var_0)
    bool_2.bind(var_3)


def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.to_box()
    none_type_1 = None
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_1, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_1 = maybe_2.filter(var_0)
    var_2 = maybe_2.to_try()
    maybe_0.map(var_2)


def test_case_6():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.bind(var_2)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    tuple_0 = (maybe_0, bool_0)
    maybe_0.ap(tuple_0)


def test_case_8():
    bytes_0 = b"\xa065\xb5\x8b``\xb0I\xc7\xe0\x8b\x87\xd4 ?\x87"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    set_0 = set()
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    str_0 = "ImmutableList: you can not add any other instace than ImmutableList"
    str_1 = "v#"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.get_or_else(str_0)
    bool_0 = False
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_10():
    int_0 = -494
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_box()


def test_case_11():
    str_0 = "}|\x0bBv8e15Ni}y"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_either()


def test_case_12():
    bytes_0 = b"'\x83\x80\xcen\xb0O:F\x9d\xfeX\xfe?\xe7\x1d"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_2 = maybe_1.to_try()
    maybe_1.bind(var_2)


def test_case_13():
    int_0 = 2280
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(int_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    tuple_0 = ()
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(tuple_0, generic_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.get_or_else(bool_0)


def test_case_15():
    dict_0 = {}
    object_0 = module_2.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.ap(dict_0)


def test_case_16():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.ap(bool_0)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    maybe_2 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_1.to_either()
    maybe_3 = module_0.Maybe(bool_0, var_0)
    bool_2 = maybe_2.__eq__(maybe_3)
    maybe_4 = module_0.Maybe(bool_1, var_1)
    maybe_1.filter(var_2)


def test_case_19():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.bind(var_0)
    var_2 = var_0.to_validation()
    none_type_0 = None
    var_3 = maybe_1.ap(none_type_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_0.filter(bool_0)
    var_7 = maybe_1.map(none_type_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_8 = var_5.to_box()
    int_0 = -3204
    var_4.filter(int_0)
