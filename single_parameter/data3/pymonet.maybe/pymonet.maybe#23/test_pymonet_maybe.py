# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 946
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_try()
    bytes_0 = b"\xf5\x8b\xdf\xdd5&l\x9e"
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_2.get_or_else(maybe_2)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_2.to_box()
    var_4 = maybe_2.filter(int_0)
    var_5 = var_4.to_try()


def test_case_3():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(tuple_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.ap(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_3 = maybe_0.to_try()
    var_4 = var_0.get_or_else(var_2)
    var_5 = var_0.ap(maybe_1)
    var_6 = var_2.filter(var_3)
    var_7 = maybe_1.to_lazy()
    var_8 = var_5.to_either()
    maybe_1.filter(var_8)


def test_case_4():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_0.to_try()
    var_3 = var_1.filter(var_2)
    var_4 = maybe_1.to_lazy()
    maybe_1.filter(tuple_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    str_0 = "AC$Wf-Zd"
    maybe_0 = module_0.Maybe(bool_1, str_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_7():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_either()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.bind(var_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(tuple_0)
    var_3 = maybe_1.to_lazy()
    maybe_1.filter(tuple_0)


def test_case_9():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, set_0)
    maybe_0.ap(set_0)


def test_case_10():
    bool_0 = True
    bool_1 = True
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.to_try()
    bool_1 = var_1.__eq__(bool_0)
    maybe_3 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_2.to_validation()


def test_case_12():
    set_0 = set()
    list_0 = []
    bool_0 = True
    set_1 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_1, set_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(list_0)
    var_2 = var_1.to_validation()
    bool_1 = var_2.__eq__(set_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    var_3.to_box()


def test_case_15():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.bind(none_type_0)


def test_case_17():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    complex_0 = 1009 + 1405.8j
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(complex_0, generic_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(generic_0)
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.get_or_else(maybe_1)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_2.to_box()
    bool_1 = var_3.__eq__(var_0)
    bool_2 = maybe_2.__eq__(maybe_1)
    var_3.filter(var_3)


def test_case_20():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = module_0.Maybe(maybe_0, bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    bool_1 = var_2.__eq__(maybe_0)
    var_4 = var_2.to_either()
    var_5 = var_2.to_validation()
    var_6 = var_2.bind(var_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_0)
    var_7 = var_4.ap(var_6)
    var_8 = var_0.to_try()
    var_9 = var_0.to_lazy()
    var_7.to_either()
