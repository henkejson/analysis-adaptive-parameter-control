# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -1173
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.filter(maybe_0)
    var_3 = var_1.to_box()
    var_4 = maybe_1.bind(int_0)
    var_5 = var_4.to_box()
    var_6 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(var_1, var_5)
    var_7 = maybe_0.to_lazy()
    var_5.map(var_7)


def test_case_3():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    bool_0 = maybe_0.__eq__(list_0)
    maybe_0.ap(list_0)


def test_case_4():
    tuple_0 = ()
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(object_0)
    var_1 = var_0.bind(tuple_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.map(var_2)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.filter(maybe_0)


def test_case_5():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.map(list_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    tuple_0 = ()
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(object_0)
    var_1 = maybe_0.ap(tuple_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.map(var_2)
    var_4 = var_0.to_lazy()
    var_5 = maybe_0.filter(maybe_0)


def test_case_8():
    none_type_0 = None
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.filter(bool_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_4.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(bool_0)


def test_case_10():
    none_type_0 = None
    str_0 = "66^IoR<4BuD#\x0cp"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    var_0.to_box()


def test_case_12():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_13():
    bytes_0 = b"\x9e\xae\xfa@"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(var_1)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = maybe_0.to_try()
    bool_2 = maybe_1.__eq__(bool_1)
    var_3.to_validation()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.map(none_type_0)


def test_case_17():
    generic_0 = module_2.Generic()
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_3.map(bool_0)


def test_case_18():
    int_0 = -1187
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.get_or_else(int_0)
    bool_0 = False
    var_1 = maybe_0.ap(maybe_0)
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.map(var_2)
    var_4 = maybe_2.to_box()
    var_5 = var_2.to_try()
    var_6 = var_3.bind(var_1)


def test_case_19():
    int_0 = -1173
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    maybe_2.filter(var_0)


def test_case_20():
    int_0 = -489
    tuple_0 = (int_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    list_0 = [int_0, none_type_0]
    maybe_0.ap(list_0)
