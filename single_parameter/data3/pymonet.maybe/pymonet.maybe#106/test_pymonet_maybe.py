# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    complex_0 = 1501.6564 - 1247.4455j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.bind(bool_0)
    bool_1 = var_1.__eq__(none_type_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    bool_3 = True
    list_0 = [bool_3, bool_3, bool_3, bool_3]
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(list_0, list_0)
    list_0.to_validation()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    var_2.to_validation()


def test_case_5():
    str_0 = "u5=2~rD%8N39"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(str_0)


def test_case_6():
    str_0 = "oqLq~\\"
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_0.bind(str_0)


def test_case_7():
    float_0 = 4295.11
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    int_0 = 5763
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.to_lazy()


def test_case_9():
    int_0 = 0
    list_0 = [int_0]
    bool_0 = False
    list_1 = [bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_1, none_type_0)
    maybe_0.filter(list_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    list_0 = [var_0, var_0]
    var_1 = maybe_0.get_or_else(list_0)
    var_2 = maybe_0.filter(var_1)
    maybe_1.filter(maybe_0)


def test_case_11():
    float_0 = 739.79884
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(float_0, bool_1)
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_2.to_try()
    var_1.to_validation()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_1.get_or_else(bool_0)


def test_case_13():
    float_0 = -2878.49
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.bind(float_0)


def test_case_14():
    none_type_0 = None
    float_0 = -455.828
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.ap(none_type_0)


def test_case_15():
    str_0 = "6C<fg</e32"
    dict_0 = {str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_1 = module_0.Maybe(maybe_0, str_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()


def test_case_16():
    int_0 = -3380
    list_0 = [int_0, int_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    int_0 = 1300
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_try()
    var_2 = var_1.filter(var_0)


def test_case_18():
    float_0 = -1803.34063
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    list_0 = [var_1, float_0]
    var_2 = maybe_0.get_or_else(list_0)
    var_3 = maybe_0.filter(var_0)
    maybe_1.filter(var_0)


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_validation()
    list_0 = [tuple_0]
    maybe_0.filter(list_0)


def test_case_20():
    complex_0 = -1039.06 - 5618.4j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()
    bool_0 = False
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_2.bind(var_1)


def test_case_21():
    none_type_0 = None
    int_0 = 90
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.filter(int_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.bind(var_2)
    var_4 = var_3.bind(var_3)
    none_type_1 = None
    var_5 = maybe_1.get_or_else(var_4)
    maybe_2 = module_0.Maybe(int_0, none_type_1)
    var_6 = maybe_2.to_lazy()
    var_7 = var_6.ap(none_type_0)
    var_8 = maybe_1.ap(none_type_0)
    maybe_2.filter(var_5)


def test_case_22():
    none_type_0 = None
    int_0 = 76
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.get_or_else(int_0)
    var_2 = maybe_0.filter(none_type_0)
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_0.ap(none_type_0)
    var_5 = maybe_0.filter(var_4)
    var_6 = var_5.to_lazy()
    bool_2 = var_4.__eq__(var_6)
    var_7 = maybe_0.to_validation()
    var_8 = maybe_0.bind(var_7)
    var_9 = var_4.to_either()
    var_9.filter(int_0)
