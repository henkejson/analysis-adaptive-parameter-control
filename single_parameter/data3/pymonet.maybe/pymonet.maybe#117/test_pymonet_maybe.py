# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    float_0 = 2492.337093126515
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    bool_0 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_0.to_either()


def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, var_2)
    bool_1 = maybe_1.__eq__(none_type_0)


def test_case_4():
    float_0 = 2500.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = True
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_3 = maybe_2.to_box()
    bool_3 = maybe_2.__eq__(none_type_0)
    var_4 = var_3.to_try()
    var_4.bind(var_2)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.map(bool_0)


def test_case_6():
    float_0 = 2492.337093126515
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_either()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    str_0 = "_V>\x0bE5$9`:ju\r^8BRKMX"
    maybe_0 = module_0.Maybe(str_0, str_0)
    list_0 = [maybe_0, str_0]
    var_0 = maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.filter(object_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_0.to_box()
    bool_0 = var_0.__eq__(maybe_1)
    var_2 = var_0.to_try()
    var_3 = maybe_2.bind(var_0)
    var_4 = var_2.filter(object_0)
    var_4.to_either()


def test_case_11():
    float_0 = 2500.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(float_0)


def test_case_12():
    complex_0 = -3604.073786 + 2888.1732j
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(complex_0)
    bool_1 = True
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_1 = maybe_1.ap(bool_1)
    list_0 = []
    generic_0 = module_2.Generic(*list_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_2 = maybe_2.get_or_else(generic_0)
    var_2.to_lazy()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(none_type_0)


def test_case_14():
    bytes_0 = b"\x05;\xed~S\xd9\x0c\x0f"
    tuple_0 = (bytes_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    complex_0 = -339.99 + 2254.26j
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_0.filter(complex_0)


def test_case_16():
    float_0 = 2492.337093126515
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.bind(var_0)
    bool_2 = var_2.__eq__(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.map(var_4)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (list_0,)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_1.to_either()
    str_0 = "$]]=(\tx$Gr"
    bool_2 = False
    maybe_2 = module_0.Maybe(str_0, bool_2)
    maybe_2.filter(var_1)


def test_case_18():
    float_0 = 2500.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.to_either()


def test_case_19():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    bool_0 = True
    var_0 = maybe_0.bind(maybe_0)
    bool_1 = bool_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_2 = maybe_1.to_try()
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_0.to_try()
    var_5 = var_0.filter(bool_0)
    var_6 = var_1.to_try()
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_7 = var_3.to_try()
    var_8 = maybe_2.to_either()
    var_9 = var_3.get_or_else(var_2)
    var_10 = maybe_1.to_box()
    var_11 = var_1.to_either()
    maybe_2.filter(bool_2)


def test_case_20():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.bind(var_0)
    bool_0 = var_0.__eq__(var_1)
    bool_1 = False
    var_2 = var_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_3 = maybe_1.to_try()
    var_4 = maybe_0.filter(var_1)
    var_5 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(bool_2, var_3)
    var_6 = var_1.filter(var_0)
    var_7 = var_0.to_try()
    maybe_3 = module_0.Maybe(var_0, bool_2)
    var_8 = var_4.to_try()
    var_9 = maybe_3.to_either()
    maybe_4 = module_0.Maybe(bool_1, var_7)
    var_10 = maybe_1.to_validation()
    var_11 = var_2.to_either()
    maybe_3.filter(bool_2)


def test_case_21():
    bool_0 = True
    float_0 = -951.9915
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_4 = var_2.to_lazy()
    var_1.filter(var_4)


def test_case_22():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    float_0 = -951.9915
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_1.bind(bool_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_try()
    var_5 = var_3.to_lazy()
    bool_2 = True
    maybe_2 = module_0.Maybe(var_2, bool_2)
    var_6 = maybe_1.to_try()
    var_7 = var_1.to_try()
    var_8 = var_1.to_box()
    bool_3 = var_1.__eq__(bool_0)
    var_9 = var_0.to_either()
    var_10 = var_1.to_box()
    maybe_3 = module_0.Maybe(bool_2, bool_3)
    maybe_3.bind(var_7)
