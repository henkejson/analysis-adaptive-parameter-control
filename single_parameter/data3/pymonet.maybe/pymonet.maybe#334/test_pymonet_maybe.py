# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    tuple_0 = (none_type_0, none_type_0, none_type_0)
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.ap(var_0)
    bool_0 = var_0.__eq__(var_1)


def test_case_3():
    bytes_0 = b"\x8f\x92\xd1\x8b\re\xd412Yk\xa1X\xd1\x03ci\x95"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.ap(none_type_0)
    var_4 = var_3.bind(none_type_0)
    bool_0 = var_0.__eq__(none_type_0)
    var_5 = var_2.to_either()


def test_case_4():
    int_0 = 3690
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_7():
    dict_0 = {}
    bytes_0 = b"\x92\x9a\x9e\xe3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(dict_0)
    float_0 = -1514.75949
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(float_0)


def test_case_8():
    complex_0 = 694 + 2780.56j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = var_1.get_or_else(var_2)
    var_4 = var_0.ap(var_0)
    var_5 = var_4.to_lazy()
    var_6 = var_3.to_lazy()
    var_7 = var_4.map(var_4)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(var_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_1.to_box()
    bool_2 = maybe_0.__eq__(var_0)
    var_5 = var_0.to_try()
    var_3.ap(none_type_0)


def test_case_10():
    float_0 = -1039.2963
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_0.to_try()


def test_case_11():
    bytes_0 = b";\xaa\xe9\xa3"
    str_0 = "\n        Return monad value when is successfully.\n        Othercase return default_value argument.\n\n        :params default_value: value to return when monad is not successfully.\n        :type default_value: B\n        :returns: monad value\n        :rtype: A | B\n        "
    float_0 = 247.6
    list_0 = [str_0, bytes_0, float_0]
    tuple_0 = (bytes_0, str_0, list_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_0.get_or_else(list_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_13():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_0.bind(none_type_0)


def test_case_14():
    bytes_0 = b"\x8f\x92\xd1\x8b\re\xd412Yk\xa1X\xd1\x03ci\x95"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(var_1)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.map(var_1)


def test_case_15():
    bytes_0 = b"\x8f\x92\xd1\x8b\re\xd412Yk\xa1X\xd1\x03ci\x95"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.ap(var_2)
    var_4 = maybe_0.ap(var_0)
    var_5 = var_4.bind(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_validation()
    bool_1 = var_5.__eq__(var_5)
    var_8 = var_0.to_either()


def test_case_16():
    bytes_0 = b"\x8f\x92\xd1\x8b\re\xd412Yk\xa1X\xd1\x03ci\x95"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.ap(var_2)
    var_4 = maybe_0.ap(var_0)
    var_5 = var_4.to_either()
    var_6 = var_0.filter(var_5)
    var_7 = var_5.map(var_1)
    var_8 = maybe_0.to_lazy()
    var_9 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_10 = maybe_1.to_try()


def test_case_17():
    str_0 = "vJZ*iWB2D)"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_lazy()
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.ap(maybe_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    bool_2 = True
    maybe_1 = module_0.Maybe(dict_0, bool_2)
    var_2 = maybe_1.bind(var_1)


def test_case_19():
    bytes_0 = b"\x8f\x92\xd1\x8b\re\xd412Yk\xa1X\xd1\x03ci\x95"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.ap(var_2)
    var_4 = maybe_0.ap(var_0)
    var_5 = var_4.bind(var_1)
    bool_0 = var_5.__eq__(var_5)
    var_6 = var_1.to_either()


def test_case_20():
    complex_0 = 694 + 2780.56j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.ap(maybe_0)
    var_4 = maybe_0.bind(var_3)
    bool_0 = maybe_0.__eq__(var_4)
    var_5 = maybe_0.to_either()


def test_case_21():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(var_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_0.map(none_type_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_5 = var_0.to_try()
    maybe_0.map(var_2)


def test_case_22():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bytes_0 = b""
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    var_3 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_4 = maybe_1.to_lazy()
    var_5 = var_3.ap(bool_2)
    bool_3 = maybe_2.__eq__(maybe_1)
    var_5.to_validation()
