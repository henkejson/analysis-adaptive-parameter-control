# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 1607.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_3():
    list_0 = []
    list_1 = []
    str_0 = "DNWR_M5"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_0.ap(list_1)
    var_1 = var_0.map(list_0)


def test_case_4():
    object_0 = module_1.object()
    bytes_0 = b"\xc2`+Q\x06\x19\xcd\xe9#\xb1\xb0\x84\xfcQ\x86<\xe7\xd9\x1e\x0b"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.map(object_0)


def test_case_5():
    dict_0 = {}
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.filter(bool_0)
    var_5 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(var_4, var_1)


def test_case_6():
    str_0 = "\n        Applies the function inside the Maybe[A] structure to another applicative type for notempty Maybe.\n        For empty returns copy of itself\n\n        :param applicative: applicative contains function\n        :type applicative: Maybe[B]\n        :returns: new Maybe with result of contains function\n        :rtype: Maybe[A(B) | None]\n        "
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.bind(str_0)


def test_case_7():
    dict_0 = {}
    int_0 = -1145
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.ap(dict_0)
    var_1 = var_0.to_either()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(var_0)


def test_case_11():
    dict_0 = {}
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.map(var_3)
    var_5 = var_3.to_validation()
    var_6 = var_5.to_box()
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_7 = maybe_1.get_or_else(maybe_1)
    var_8 = maybe_1.ap(dict_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = module_2.Generic()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_lazy()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_3.to_either()
    var_3.ap(bool_1)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_0.bind(var_1)
    var_3 = var_2.to_box()


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_17():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(list_0)


def test_case_18():
    bytes_0 = b"@\x14m?"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_20():
    float_0 = 3093.4
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_lazy()
    var_5 = var_0.to_try()
    var_5.filter(var_2)


def test_case_21():
    float_0 = 3093.4
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    float_0.to_try()


def test_case_22():
    float_0 = 3093.4
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_try()
    var_2.to_lazy()
