# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    int_0 = -1207
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = var_0.__eq__(maybe_0)
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1.filter(bytes_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()


def test_case_4():
    bytes_0 = b"\xf5\xdc\xedG\x14\xd2\xfe\x83\xe6T.|J"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = maybe_0.to_box()
    var_4 = var_0.to_lazy()
    var_5 = var_1.to_box()
    var_6 = maybe_0.to_validation()
    var_7 = maybe_0.get_or_else(bytes_0)
    var_8 = var_6.to_lazy()
    var_9 = var_4.to_box()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    maybe_0.map(var_1)


def test_case_6():
    int_0 = -1207
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.filter(int_0)
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1.filter(bytes_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_1.bind(maybe_1)


def test_case_8():
    int_0 = -1207
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.filter(int_0)
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_0.ap(var_0)
    maybe_1.filter(bytes_0)


def test_case_9():
    float_0 = 2084.4
    bytes_0 = b"\xcc\x17\xe6clX\x90"
    str_0 = "+<[\n8kv(+,c}"
    tuple_0 = (bytes_0, str_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(tuple_0, str_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.ap(float_0)
    var_2 = var_1.to_try()
    maybe_0.ap(str_0)


def test_case_10():
    bytes_0 = b"^H\xbdJ\x89\x86G\xd2"
    str_0 = "*y\tMsJ,diZ&p)\tmERP:"
    dict_0 = {str_0: str_0, str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_11():
    int_0 = -1207
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1.filter(bytes_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(maybe_1, var_3)
    var_5 = maybe_2.ap(var_3)
    var_6 = var_5.to_box()
    var_7 = var_5.to_either()
    var_3.filter(var_3)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()


def test_case_14():
    str_0 = "{qPV!7+R#Lcn5"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(set_0)


def test_case_16():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_try()


def test_case_18():
    float_0 = 4364.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    str_0 = "JH^``:3u$ 4=cbF+=C"
    maybe_1 = module_0.Maybe(str_0, str_0)


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_validation()
    generic_0 = module_1.Generic()
    maybe_1 = module_0.Maybe(generic_0, generic_0)
    var_1 = maybe_1.bind(var_0)
    bytes_0 = b""
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.filter(var_0)
    maybe_2.filter(bytes_0)


def test_case_20():
    bytes_0 = b"\xf5\xdc\xedG\xf8\x14\xd2\xfe\x83\xe6\xd9.|J"
    bool_0 = bytes_0.__eq__(bytes_0)


def test_case_21():
    float_0 = 2084.4
    str_0 = "+<[\n8kv(+,c}"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = maybe_0.to_lazy()
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.ap(float_0)
    var_2 = var_1.to_try()
    module_2.object(*maybe_1)


def test_case_22():
    int_0 = -1847
    int_1 = 48
    int_2 = 1641
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.map(int_2)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_0.filter(var_2)
    var_4 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(int_2, int_0)
    bool_1 = var_3.__eq__(var_0)
    var_5 = var_4.to_box()
    var_6 = var_5.to_either()
    var_7 = var_3.to_box()
