# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_1.map(var_1)
    var_5 = var_4.ap(var_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_6 = var_5.map(var_0)
    var_7 = var_1.to_lazy()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_1.map(var_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_5 = maybe_0.to_box()
    var_6 = var_2.to_box()
    bool_2 = var_1.__eq__(var_6)
    var_7 = var_0.get_or_else(var_2)
    var_8 = var_4.bind(var_4)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    str_0 = ""
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_5():
    str_0 = "i"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_1.map(var_1)
    var_5 = var_1.bind(var_0)
    var_6 = maybe_0.to_try()


def test_case_7():
    float_0 = -3282.1
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_3 = maybe_2.filter(maybe_2)
    maybe_1.bind(maybe_1)


def test_case_8():
    complex_0 = 4387.742978 + 2450j
    set_0 = {complex_0, complex_0, complex_0}
    maybe_0 = module_0.Maybe(complex_0, set_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = maybe_0.to_try()
    bool_0 = False
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.filter(var_0)


def test_case_11():
    str_0 = "QZjZ]wn"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.map(bool_0)
    var_3 = maybe_0.map(bool_0)
    bool_1 = var_3.__eq__(var_2)
    var_4 = var_2.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_1, var_4)
    var_4.to_validation()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = var_1.to_validation()
    var_4 = var_3.to_lazy()
    maybe_0.filter(var_4)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_1.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, tuple_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_1.get_or_else(tuple_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_1.map(var_1)
    var_5 = var_4.to_lazy()
    var_6 = maybe_0.to_try()


def test_case_17():
    float_0 = -2336.428
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)


def test_case_18():
    complex_0 = 1453.388 - 3462.079j
    set_0 = {complex_0}
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    var_0.map(set_0)


def test_case_19():
    int_0 = 7
    int_1 = -3957
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(int_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b""
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_1.ap(bytes_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 2107
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    var_1 = maybe_0.map(var_0)
    tuple_0 = (bool_1,)
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_2 = maybe_1.to_either()
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.to_lazy()
    var_5 = var_3.filter(var_4)
    var_6 = var_4.to_try()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_7 = maybe_0.map(int_0)
    bool_2 = var_3.__eq__(var_3)
    var_8 = var_0.to_either()
    bool_3 = False
    maybe_3 = module_0.Maybe(var_4, bool_3)
    var_9 = module_1.object()
    maybe_4 = module_0.Maybe(bool_1, var_9)
    bool_4 = False
    maybe_5 = module_0.Maybe(none_type_0, bool_4)
    maybe_6 = module_0.Maybe(var_9, var_7)
    maybe_5.filter(bool_2)


def test_case_22():
    set_0 = set()
    bool_0 = False
    none_type_0 = None
    set_1 = {bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.bind(set_0)
    var_2.to_either()


def test_case_23():
    none_type_0 = None
    list_0 = []
    str_0 = "=7Q74I"
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(none_type_0)
    var_3 = var_2.to_try()
    var_4 = var_3.bind(list_0)
    maybe_1 = module_0.Maybe(list_0, str_0)
    var_5 = maybe_1.map(str_0)
    var_6 = maybe_1.ap(var_5)
    bool_0 = maybe_1.__eq__(var_5)
    var_7 = maybe_1.map(none_type_0)
    var_8 = var_7.to_lazy()
