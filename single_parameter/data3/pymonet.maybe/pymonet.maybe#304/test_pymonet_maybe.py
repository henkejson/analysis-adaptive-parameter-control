# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    complex_0 = 1486.879 - 1967.903j
    maybe_2 = module_0.Maybe(bool_0, complex_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)
    var_1 = maybe_0.ap(none_type_0)
    maybe_3 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_2.map(var_1)
    var_4 = var_3.map(var_1)
    var_5 = maybe_1.get_or_else(maybe_1)
    var_6 = maybe_3.filter(maybe_2)
    maybe_1.filter(var_4)


def test_case_4():
    dict_0 = {}
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(dict_0)
    maybe_0.map(bool_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = var_1.map(bool_0)
    var_3 = var_2.bind(var_1)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_6():
    int_0 = -625
    complex_0 = -1059.67448 + 1701j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(complex_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    generic_0 = module_1.Generic()
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.get_or_else(generic_0)
    maybe_1 = module_0.Maybe(set_0, bool_1)
    maybe_2 = module_0.Maybe(var_1, maybe_1)


def test_case_8():
    str_0 = "NT%\x0cJ~g"
    complex_0 = -1387.1 + 1451.1267j
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.ap(complex_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    str_0 = "\tHR+Fy"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    bool_0 = False
    list_0 = [bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_1.map(var_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_13():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(bool_0)


def test_case_14():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.get_or_else(var_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = var_3.to_try()
    var_4.to_box()


def test_case_15():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.filter(var_1)


def test_case_16():
    float_0 = -1579.1427
    set_0 = set()
    list_0 = []
    maybe_0 = module_0.Maybe(set_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(float_0)


def test_case_17():
    float_0 = -2698.0
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.to_try()
    var_1.get_or_else(bool_1)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.to_validation()
    none_type_1 = None
    maybe_2 = module_0.Maybe(var_0, none_type_1)
    bool_1 = False
    maybe_3 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_0.to_validation()
    maybe_2.bind(none_type_0)


def test_case_19():
    str_0 = ":\x0cSpd"
    float_0 = -1394.406
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.filter(str_0)


def test_case_20():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(set_0)
    var_2.to_either()


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_box()
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_0.map(var_0)


def test_case_22():
    int_0 = 264
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)
    bool_1 = maybe_2.__eq__(maybe_0)
    var_1 = maybe_0.ap(none_type_0)
    var_0.to_box()


def test_case_23():
    int_0 = 264
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    bool_2 = True
    var_1 = maybe_0.ap(none_type_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, bool_2)
    bool_3 = True
    maybe_3 = module_0.Maybe(bool_3, maybe_2)
    bool_4 = False
    var_2 = var_1.ap(bool_4)
    var_3 = maybe_2.map(bool_1)
    bytes_0 = b"\x90\x16\x9f\xbb\xc2n1z>-\xdb\x18\xfe\xe9\xf4N:3"
    var_4 = maybe_0.ap(bytes_0)
    var_5 = var_4.filter(var_1)
    var_6 = var_4.to_either()
    bool_5 = var_2.__eq__(var_1)
    var_7 = var_4.to_try()
    var_0.to_box()
