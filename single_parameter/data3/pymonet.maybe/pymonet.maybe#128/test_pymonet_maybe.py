# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"@bQ\x85\xbaM\r\xc2\xc5\xc6=\x83\x7f\xa9\xcf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bytes_0 = b"\x84\xbc\xa2\xf2{\xee\xf5E\x88"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    maybe_1 = module_0.Maybe(object_0, object_0)
    int_0 = 812
    var_0 = maybe_1.to_lazy()
    bool_1 = False
    var_1 = maybe_1.map(int_0)
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_2 = var_1.bind(bool_1)
    bool_2 = False
    maybe_3 = module_0.Maybe(dict_0, bool_2)
    bool_3 = maybe_2.__eq__(object_0)
    var_3 = maybe_1.ap(bool_2)
    var_4 = var_3.to_either()
    bool_4 = maybe_1.__eq__(maybe_2)
    maybe_2.ap(dict_0)


def test_case_4():
    bytes_0 = b"@bQ\x85m\xbaM\r\xc2\xc5\xc6=\x83\x7f\xa9\xd6\xcf"
    bool_0 = True
    dict_0 = {bytes_0: bool_0, bool_0: bytes_0, bool_0: bytes_0}
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_5():
    int_0 = 2542
    int_1 = 3023
    set_0 = {int_0, int_1, int_1}
    list_0 = [set_0, int_1, int_1]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_0.map(int_1)


def test_case_6():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(tuple_0)
    var_2.to_validation()


def test_case_7():
    float_0 = 1775.14521
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    float_0 = 869.065724
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_1.to_either()
    var_3.get_or_else(bool_0)


def test_case_10():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_2.to_lazy()
    var_1 = var_0.map(dict_0)
    object_0 = module_1.object(**dict_0)
    maybe_3 = module_0.Maybe(object_0, object_0)
    var_2 = maybe_2.to_validation()
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_validation()
    var_5 = maybe_3.to_lazy()
    var_6 = var_0.map(var_5)
    maybe_2.filter(dict_0)


def test_case_11():
    bytes_0 = b"\x95\xc7\xc0\xbeW\xd0\x0eRW\xbf\xd1\xd6\xff\xb8\x99\r\x81I'"
    generic_0 = module_2.Generic()
    float_0 = 267.81
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = var_1.to_either()
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.get_or_else(var_4)
    var_7 = var_6.ap(bool_0)
    var_7.filter(var_4)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    bytes_0 = b"\x07\x16\x1d\tJ\x88\xaa\xbcsx\xfd+\xadt\xe8\x85+E"
    bytes_1 = b""
    tuple_0 = (bytes_0, var_0, bytes_1, var_0)
    var_2 = maybe_0.get_or_else(tuple_0)
    maybe_0.bind(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_15():
    bytes_0 = b'\xb9D\xca\xd8\xfb\xb3"\x085Y\xa0(\x000K\xdbe['
    bytes_1 = b"\xab_\xa8\xa5"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_16():
    bytes_0 = b"\x84\xbc\xa2\xf2{\xee\xf5E\x88"
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    maybe_0 = module_0.Maybe(object_0, object_0)
    int_0 = 816
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = maybe_0.map(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = var_1.bind(bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    bool_3 = maybe_1.__eq__(object_0)
    var_3 = maybe_0.ap(bool_1)
    var_4 = maybe_0.filter(maybe_0)
    var_5 = var_1.bind(var_3)
    maybe_3 = module_0.Maybe(bytes_0, bool_0)
    var_6 = maybe_2.to_box()
    var_7 = var_0.ap(maybe_2)
    maybe_1.ap(bool_3)


def test_case_17():
    generic_0 = module_2.Generic()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(generic_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    bytes_0 = b"\xec"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_3.filter(bytes_0)


def test_case_21():
    int_0 = -377
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    str_0 = "{"
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_2.filter(var_0)


def test_case_22():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bool_0)
