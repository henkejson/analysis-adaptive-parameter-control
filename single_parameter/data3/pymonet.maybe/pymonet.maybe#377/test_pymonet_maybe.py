# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    tuple_0 = (maybe_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(tuple_0)


def test_case_3():
    none_type_0 = None
    int_0 = 2523
    complex_0 = -808.5 - 2048.7962j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.bind(var_1)
    var_4 = var_3.to_try()
    maybe_1 = module_0.Maybe(complex_0, var_4)
    var_5 = var_0.filter(var_2)
    none_type_1 = None
    var_6 = var_5.get_or_else(none_type_1)
    maybe_2 = module_0.Maybe(int_0, var_4)
    var_7 = var_3.to_lazy()
    var_8 = maybe_0.to_try()
    var_9 = maybe_2.to_validation()
    object_0 = module_1.object()
    var_10 = maybe_1.ap(none_type_0)
    bool_0 = var_10.__eq__(object_0)
    var_11 = var_1.ap(none_type_1)
    var_9.ap(var_5)


def test_case_4():
    int_0 = 29
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_2.to_box()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.bind(var_0)
    var_0.get_or_else(var_2)


def test_case_7():
    complex_0 = -1371.02643 - 1900.29j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.get_or_else(maybe_1)
    var_2 = var_0.to_either()
    var_3 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_1)


def test_case_10():
    str_0 = "D#^7pfB"
    str_1 = "BqiwJnsai2A!A?9no"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.to_either()
    bool_0 = var_0.__eq__(str_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    tuple_0 = (maybe_0, maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(tuple_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_2.to_box()
    var_2 = maybe_2.to_try()


def test_case_13():
    float_0 = -2162.9549
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(float_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_4 = maybe_1.to_try()
    var_4.to_either()


def test_case_17():
    none_type_0 = None
    int_0 = 2523
    complex_0 = -808.5 - 2048.7962j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_0.bind(var_1)
    var_3 = var_2.to_try()
    maybe_1 = module_0.Maybe(complex_0, var_3)
    var_4 = var_0.filter(maybe_1)
    maybe_2 = module_0.Maybe(int_0, var_3)
    var_5 = var_2.to_lazy()
    var_6 = maybe_0.to_try()
    var_7 = maybe_2.to_validation()
    object_0 = module_1.object()
    var_8 = maybe_1.ap(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_3.ap(maybe_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_validation()
    object_0 = module_1.object()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_box()
    var_4 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_3, var_3)
    var_5 = var_3.to_either()
    bool_0 = var_0.__eq__(var_0)
    bool_1 = maybe_2.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(bool_0, maybe_2)
    var_0.to_box()
