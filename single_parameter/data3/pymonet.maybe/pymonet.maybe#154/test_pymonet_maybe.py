# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    generic_0 = module_1.Generic()
    bytes_0 = b'~\xc2\x8d&R\xeb;\x90\xec\xbd\xd9"\xe8 E'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(generic_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.map(bool_0)
    var_1 = maybe_1.to_box()
    var_2 = var_0.bind(bool_0)
    int_0 = -5267
    var_3 = maybe_1.map(var_2)
    var_4 = maybe_1.filter(var_3)
    bool_1 = var_3.__eq__(int_0)
    maybe_2 = module_0.Maybe(int_0, var_4)
    var_5 = var_2.to_either()


def test_case_4():
    str_0 = ":\r4M{\tpUX*7Ut2;"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.filter(str_0)
    var_3 = var_2.to_box()
    int_0 = 1565
    var_4 = var_2.ap(var_3)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.map(str_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.bind(bool_0)
    var_2 = var_0.to_try()
    var_3 = var_1.ap(maybe_0)
    var_4 = var_3.to_box()
    bool_1 = var_1.__eq__(var_0)
    var_5 = var_0.to_lazy()
    var_2.to_validation()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_7():
    generic_0 = module_1.Generic()
    bytes_0 = b'~\xc2\x8d&R\xeb;\x90\xec\xbd\xd9"\xe8 E'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(generic_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_1, var_2)
    list_0 = []
    maybe_2 = module_0.Maybe(bool_0, list_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.filter(var_1)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_12():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_13():
    bytes_0 = b"x\xbe\xa6\xed\x8dm\x84\xb0\xef\x05x\xedqD! "
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(maybe_0)


def test_case_14():
    bytes_0 = b"\xf2}\x1f\x92\xc9\xe3\xa2\xe7\xf5\xa8\xbdg\x08\x91Z\xb9"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(var_1)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_try()
    var_1.to_validation()


def test_case_17():
    bytes_0 = b"\xa69\x05\xe8r\xff}\xa7\xb7\xe1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_20():
    bool_0 = True
    generic_0 = module_1.Generic()
    dict_0 = {generic_0: generic_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(dict_0, var_1)
    var_2 = maybe_0.filter(generic_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.ap(var_2)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_5 = var_2.get_or_else(var_1)
    maybe_3 = module_0.Maybe(var_1, bool_0)
    var_6 = maybe_0.map(var_5)
    var_7 = maybe_2.filter(var_5)
    var_8 = maybe_2.to_try()
    var_9 = maybe_1.to_either()
    var_10 = var_7.get_or_else(maybe_1)
    var_11 = var_10.bind(var_8)
    var_12 = var_11.to_box()
    bool_1 = maybe_1.__eq__(var_3)
    var_13 = maybe_2.to_lazy()
    var_14 = var_9.to_box()


def test_case_21():
    str_0 = "L:2\r5pIh)\x0bS0h~\nL%jS"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = False
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_box()
    var_2 = maybe_0.to_try()
    var_0.ap(str_0)
