# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xe5\x1e\xf6\xe9\xafj]\xd0:Oa\x062\xdc\x0f\xacsA"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -2472.032
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = maybe_0.filter(float_0)
    bool_1 = var_3.__eq__(maybe_0)
    var_5 = var_2.ap(var_3)
    var_6 = var_3.to_lazy()


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_2.to_lazy()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_0.filter(bool_1)
    var_2 = maybe_1.ap(var_0)
    maybe_1.filter(bool_1)


def test_case_5():
    str_0 = "\n        Transform Validation to Maybe.\n\n        :returns: Maybe with Validation Value when Validation has no errors, in other case empty Maybe\n        :rtype: Maybe[A | None]\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(maybe_1)


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(bool_1)
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_2 = var_2.__eq__(maybe_0)
    var_3 = var_1.bind(var_1)
    var_0.map(var_2)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bytes_0 = b'\x01\xfe\xce\xb9\xaf\xd3\xe2\\\x07"\xb7s9Q\xff\xe0\x08\xfa'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(bytes_0)
    var_2.get_or_else(bytes_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.filter(bool_1)
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1.filter(bool_1)


def test_case_10():
    int_0 = -1072
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.get_or_else(var_0)
    bool_0 = var_2.__eq__(var_2)
    var_0.get_or_else(none_type_0)


def test_case_12():
    complex_0 = -1688.9536 - 279j
    bool_0 = True
    str_0 = "]4D1ggrZLUL8<t}pK"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(complex_0)


def test_case_13():
    complex_0 = -790.2396 - 1915.284918j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_0.filter(bool_1)
    maybe_1.filter(var_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_0.filter(bool_1)
    maybe_1.filter(var_1)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    int_0 = 1
    tuple_0 = (int_0, int_0)
    set_0 = {tuple_0, int_0, int_0, int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = False
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_2 = maybe_0.get_or_else(bool_1)
    var_2.to_try()


def test_case_20():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_either()
    maybe_1 = module_0.Maybe(var_2, var_2)
    bool_2 = maybe_1.__eq__(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_0.ap(var_2)
    var_5 = var_3.map(var_4)
    var_6 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_7 = maybe_2.to_try()
    var_8 = var_0.ap(var_7)
    var_9 = var_5.bind(var_2)
    var_10 = maybe_0.to_box()


def test_case_21():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_box()
    maybe_0.map(var_3)
