# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    complex_0 = 2245.05695912961 - 553.4j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.bind(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_4.to_try()
    var_6 = var_0.map(var_2)


def test_case_3():
    complex_0 = 2237.7665497039497 - 553j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(maybe_1)
    bool_1 = maybe_1.__eq__(var_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.map(var_0)
    var_3 = var_2.to_either()
    var_4 = var_1.filter(var_3)
    maybe_0.filter(var_3)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.to_validation()


def test_case_5():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(maybe_0)


def test_case_6():
    str_0 = '"m19Ax.T10O"'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_validation()


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.bind(var_1)


def test_case_8():
    bool_0 = False
    float_0 = -1305.1
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.to_lazy()
    var_3 = var_2.to_validation()
    bool_1 = var_3.__eq__(var_2)


def test_case_9():
    complex_0 = 2237.7665497039497 - 553j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(maybe_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_validation()
    var_4 = var_2.ap(bool_0)


def test_case_11():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(list_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(list_0, none_type_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.to_try()
    maybe_1.filter(var_5)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    var_3.get_or_else(none_type_0)


def test_case_13():
    int_0 = -3158
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.bind(bool_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    module_1.Generic(*none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(bool_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.to_either()
    var_5 = var_0.to_either()
    var_6 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, var_4)
    str_0 = "}YRB;RYO"
    var_4.bind(str_0)


def test_case_18():
    complex_0 = 2234.372 - 553.4j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = module_0.Maybe(complex_0, var_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.to_either()
    var_5 = var_1.get_or_else(bool_0)
    var_6 = maybe_1.bind(var_5)
    var_7 = var_3.to_box()
    var_7.filter(maybe_0)
