# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_3():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(none_type_0)
    bool_0 = var_1.__eq__(int_0)
    var_2 = var_1.filter(none_type_0)
    bool_1 = False
    tuple_0 = (bool_1, int_0)
    var_3 = var_1.get_or_else(none_type_0)
    var_3.bind(tuple_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    var_2 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_3 = maybe_0.to_validation()
    maybe_1.filter(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_7():
    bool_0 = True
    bytes_0 = b"\xd9\x11O\xd9\xaa\xd8)\x91\x18b"
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_2 = maybe_1.to_lazy()
    maybe_1.bind(bool_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_validation()
    bool_2 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_0.map(var_1)
    var_3 = var_2.ap(var_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_1, bool_3)
    var_4 = maybe_1.to_lazy()
    var_4.to_lazy()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_2 = maybe_1.bind(var_1)
    none_type_1 = None
    maybe_2 = module_0.Maybe(bool_0, none_type_1)
    maybe_2.ap(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    complex_0 = -3299.709 + 546.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    none_type_0 = None
    var_3 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.get_or_else(bool_0)
    maybe_1.filter(var_4)


def test_case_13():
    bool_0 = False
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_lazy()


def test_case_14():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_15():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_16():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(bool_0)
    var_2 = var_0.bind(var_0)
    var_3 = var_1.filter(var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_1.__eq__(var_3)
    var_4 = var_1.to_lazy()
    var_5 = var_3.to_box()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_3 = maybe_1.to_box()
    var_4 = var_0.to_try()
    maybe_1.filter(bool_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_19():
    str_0 = "KO,K,<{)t7\nLCnZw)Y'"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_20():
    int_0 = 1
    bytes_0 = b"\x8d\xecq\xca?^\xe06y77\xcc\xab \xb1\xa0^9\xa2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(int_0)
    var_1.to_try()


def test_case_21():
    bytes_0 = b"py\x97\x11\xa5\xb6P\xff\xfb2\x1f"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_23():
    complex_0 = -3299.709 + 546.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()
    var_4 = maybe_0.filter(var_2)
    none_type_0 = None
    var_5 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_6 = maybe_1.to_box()
    var_7 = maybe_0.to_validation()
    var_8 = var_0.to_try()
    maybe_1.filter(var_7)


def test_case_24():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(maybe_0)


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    float_0 = 810.218827
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_validation()
    var_2.get_or_else(float_0)
