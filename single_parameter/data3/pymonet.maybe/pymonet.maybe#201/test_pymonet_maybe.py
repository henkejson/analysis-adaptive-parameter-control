# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_either()
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.to_box()
    var_3.get_or_else(var_1)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(var_1, maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.ap(var_2)
    var_4 = var_0.to_either()
    var_5 = var_2.to_try()


def test_case_4():
    int_0 = -4336
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_validation()
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.filter(var_4)
    var_6 = maybe_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_6, bool_1)
    var_7 = var_3.to_either()
    var_8 = var_4.map(var_1)
    var_9 = var_2.to_validation()
    var_10 = var_1.to_lazy()
    var_11 = var_10.to_validation()
    bool_2 = var_8.__eq__(maybe_0)
    var_12 = var_2.to_try()
    maybe_1.ap(maybe_1)


def test_case_5():
    str_0 = "=b.\x0cP_3&qvt%["
    set_0 = {str_0, str_0}
    bool_0 = True
    set_1 = {bool_0, bool_0, bool_0, bool_0}
    generic_0 = module_1.Generic()
    int_0 = 1
    tuple_0 = (set_1, generic_0, int_0)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.bind(set_0)
    var_1 = var_0.to_lazy()
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_2 = maybe_1.to_either()


def test_case_6():
    float_0 = -2976.17
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(maybe_0)


def test_case_8():
    bytes_0 = b"\xae\x8e\xf7\xb4j\xb2{HjV\xf9\x15\xa2\xa3"
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(bytes_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_11():
    bytes_0 = b"9\xf4\xfe\xda0|\xb8\xb64\xddq\x7f\xa1\xea\xa5E\xb2E"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_box()


def test_case_12():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(dict_0)
    maybe_1 = module_0.Maybe(dict_0, bool_1)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    str_0 = "bhJ"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_2 = maybe_1.map(var_1)
    var_3 = var_2.to_either()
    var_4 = var_3.to_box()


def test_case_16():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    str_0 = ";^88REo5b:0BYYA"
    float_0 = -2811.9111
    dict_0 = {str_0: float_0}
    maybe_1 = module_0.Maybe(str_0, dict_0)
    var_2 = var_0.map(maybe_0)
    var_2.to_either()


def test_case_17():
    str_0 = "\n        Returns successful Validation with value and empty errors list.\n\n        :params value: value to store in Validation\n        :type value: A\n        :returns: Successful Validation\n        :rtype: Validation[A, []]\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_try()
    var_0.filter(none_type_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.ap(maybe_0)


def test_case_20():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_21():
    int_0 = -4336
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_validation()
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.filter(var_4)
    var_6 = maybe_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_6, bool_1)
    var_7 = var_3.to_either()
    var_8 = var_4.map(var_1)
    var_9 = var_2.to_validation()
    bool_2 = var_8.__eq__(bool_0)
    var_10 = var_3.to_try()
    var_11 = var_4.to_either()
    var_12 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_8, var_1)
    var_13 = maybe_2.ap(maybe_1)
    var_14 = var_13.bind(var_11)
    var_15 = maybe_2.to_box()
    maybe_1.filter(var_13)


def test_case_22():
    bool_0 = False
    bool_1 = True
    tuple_0 = ()
    maybe_0 = module_0.Maybe(bool_1, tuple_0)
    var_0 = maybe_0.to_box()
    bool_2 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.ap(bool_0)
    var_2 = var_1.to_either()
    bool_3 = maybe_1.__eq__(maybe_1)
    bool_4 = var_1.__eq__(maybe_0)
    var_3 = var_0.to_try()
    var_4 = var_2.map(var_3)
    var_4.filter(var_1)


def test_case_23():
    int_0 = 2518
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.filter(var_4)
    var_6 = maybe_0.bind(bool_0)
    var_7 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_8 = var_3.to_either()
    var_9 = var_4.map(var_1)
    var_10 = var_5.to_lazy()
    var_11 = var_2.to_validation()
    var_12 = var_9.to_lazy()
    bool_2 = var_11.__eq__(maybe_0)
    var_13 = var_8.to_try()
    var_14 = maybe_0.ap(int_0)
    var_15 = var_12.to_either()
    var_16 = var_12.to_try()
    var_17 = var_4.get_or_else(var_16)
    maybe_2 = module_0.Maybe(var_12, var_5)
    var_18 = var_2.ap(var_8)
    var_19 = var_9.get_or_else(maybe_1)
    bool_3 = var_19.__eq__(maybe_1)
    bool_4 = var_13.__eq__(var_9)
    var_20 = maybe_2.bind(bool_1)
    var_21 = var_4.ap(var_7)
    var_22 = var_8.to_box()
    var_3.filter(var_6)
