# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xcb\xb8g.m\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_3():
    float_0 = 418.827
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    bool_0 = False
    var_1 = maybe_0.ap(bool_0)
    bool_1 = False
    var_2 = var_1.ap(float_0)
    bool_2 = maybe_0.__eq__(bool_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_1, bool_3)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_3 = maybe_1.ap(var_1)
    bool_4 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_4)


def test_case_4():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_2.get_or_else(var_0)
    var_4 = var_2.to_validation()
    var_5 = maybe_0.to_either()
    var_6 = var_4.to_try()


def test_case_5():
    str_0 = "]\n(zs6N&ZGaF?{c#:9"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.map(str_0)


def test_case_6():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.bind(var_1)
    var_3 = maybe_0.to_either()
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    complex_0 = 2260.36764 - 848j
    tuple_0 = (var_0, none_type_0, var_0, complex_0)
    int_0 = 80
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.bind(tuple_0)


def test_case_8():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.ap(var_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_9():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(tuple_0)


def test_case_10():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_either()
    maybe_0.filter(var_2)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.filter(var_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_0: bool_1, bool_1: bool_0}
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_2, bool_1)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    dict_0.ap(none_type_0)


def test_case_13():
    bool_0 = True
    str_0 = "DPC'*ZL`=!(Br9\nG,"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()


def test_case_15():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.map(bytes_0)
    var_3 = var_2.filter(maybe_1)
    var_4 = var_2.bind(var_2)
    bytes_0.get_or_else(bytes_0)


def test_case_16():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = var_0.get_or_else(var_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = var_1.to_box()
    var_4 = var_0.to_either()
    var_5 = var_2.to_try()


def test_case_17():
    bytes_0 = b"\xe3\x91\xa1\xf1"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    int_0 = 1135
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_19():
    float_0 = 418.827
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.to_either()
    bool_1 = False
    var_3 = var_1.ap(float_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    bool_3 = var_3.__eq__(float_0)
    var_4 = var_1.map(var_3)
    var_5 = var_0.to_box()
    var_6 = var_1.get_or_else(var_1)
    var_7 = maybe_0.to_lazy()


def test_case_20():
    bytes_0 = b"\xcb\xb8g\x90\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.map(bytes_0)
    var_3 = var_2.filter(maybe_1)
    var_4 = var_2.get_or_else(var_2)
    var_5 = var_2.bind(var_4)
    var_6 = maybe_1.ap(var_2)
    var_7 = var_6.get_or_else(var_6)
    maybe_2 = module_0.Maybe(var_6, var_6)
    bool_0 = var_2.__eq__(var_2)
    var_8 = var_2.map(var_7)
    var_9 = var_6.to_box()
    var_10 = maybe_1.get_or_else(bool_0)
    var_11 = var_7.to_lazy()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(none_type_0)
