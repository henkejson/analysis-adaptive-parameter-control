# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xbe\x9dn\xaa[\xe2\xae\xb9"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.to_try()
    none_type_0 = None
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    bool_2 = maybe_1.__eq__(maybe_0)


def test_case_3():
    int_0 = -35
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    int_0.to_either()


def test_case_4():
    str_0 = "Gyd3{\r0$e\n|H:\x0bn"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.to_try()
    var_3.to_lazy()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    bool_0 = False
    bytes_0 = b"\xe2\xce42\x9dO"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    int_0 = -35
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_either()


def test_case_7():
    bytes_0 = b"dhi\x83?\x11\xdaj\x91\x8eS\xe7TY=\x93N"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    maybe_0.bind(var_1)


def test_case_8():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)


def test_case_9():
    str_0 = "cXa1I!CTK\\io DaHW$"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    set_0 = {str_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(set_0, none_type_0)
    maybe_1.ap(str_0)


def test_case_10():
    bool_0 = False
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    bytes_0 = b"\xbe\x9dn\xaa[\xe2\xae\xb9"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.to_try()
    none_type_0 = None
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    maybe_3 = module_0.Maybe(bool_1, none_type_0)


def test_case_12():
    bytes_0 = b"\xc0\xacl\xa7\xfd\xf9\xc9\xce\x17P\xb8\x933\xb4"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_2 = maybe_1.ap(none_type_0)
    var_3 = maybe_1.to_try()
    var_4 = var_3.get_or_else(maybe_1)
    var_5 = maybe_1.bind(var_3)
    float_0 = 4778.1143
    maybe_3 = module_0.Maybe(maybe_1, var_5)
    var_6 = maybe_3.filter(var_2)
    var_7 = var_5.map(float_0)
    var_8 = maybe_0.to_either()
    var_9 = maybe_0.get_or_else(float_0)
    var_10 = var_3.bind(var_3)
    var_11 = var_4.to_box()
    bool_1 = maybe_1.__eq__(var_9)
    bool_2 = maybe_2.__eq__(var_8)


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bytes_0 = b"\xe5\xf4=SOR\xe9d\xbd\n\x0f\xe7[\xab\xb4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_17():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_0.map(bool_0)


def test_case_18():
    object_0 = module_2.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_try()
    object_1 = module_2.object()
    bool_0 = True
    maybe_1 = module_0.Maybe(object_1, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_box()
    int_0 = 1
    maybe_2 = module_0.Maybe(int_0, object_0)
    var_4 = maybe_0.to_box()


def test_case_19():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    bool_2 = True
    maybe_0.map(bool_2)


def test_case_20():
    bytes_0 = b"\xc0\xacl\xa7\xfd\xf9\xc9\xce\x17P\xb8\x933\xb4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    none_type_0 = None
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = var_0.get_or_else(maybe_1)
    var_4 = maybe_0.map(var_1)
    var_5 = var_0.filter(var_1)
    var_6 = var_0.to_either()
    var_7 = var_6.bind(none_type_0)
    var_8 = maybe_0.to_box()
    bool_0 = var_7.__eq__(maybe_1)
    bool_1 = var_0.__eq__(var_0)
