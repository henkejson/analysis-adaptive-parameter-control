# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x16\xe8\x81\xbe\x8c\x1df40\xd7l"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    none_type_0 = None
    var_1 = maybe_0.ap(bool_1)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_0.map(none_type_0)


def test_case_3():
    list_0 = []
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.map(list_0)


def test_case_4():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_lazy()
    var_3 = var_0.map(maybe_1)
    maybe_1.map(var_1)


def test_case_5():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_0.ap(bool_1)
    var_3 = maybe_1.to_box()
    maybe_1.filter(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    bytes_0 = b"U\xd6"
    bytes_1 = b"\x1b\xf1\xc6\x88x\xedx)\xb8\xeb\xf9\x17\xdd\xa2\xb2"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.to_try()
    var_4 = var_2.to_either()
    var_5 = var_2.to_either()
    var_6 = var_2.to_box()


def test_case_8():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    var_1 = var_0.ap(var_0)
    maybe_1 = module_0.Maybe(set_0, none_type_0)
    bool_2 = maybe_1.__eq__(bool_1)
    var_2 = maybe_1.ap(var_1)
    var_3 = maybe_1.to_box()
    var_4 = var_2.to_lazy()
    var_5 = var_1.map(var_1)
    var_6 = var_1.map(set_0)


def test_case_9():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_1)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_box()
    var_4 = var_3.to_either()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    var_1 = maybe_1.to_either()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_1.to_validation()
    var_4 = var_0.to_validation()
    var_5 = var_0.to_validation()
    var_6 = var_1.to_try()
    var_7 = maybe_0.filter(bool_0)
    var_8 = var_2.bind(var_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    complex_0 = -1775 - 132.215j
    tuple_0 = (complex_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_1.get_or_else(var_1)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_16():
    complex_0 = -619 - 740.1881j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    dict_0 = {}
    dict_1 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_1.bind(var_0)


def test_case_18():
    complex_0 = 1638 - 322.04274j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = var_0.ap(complex_0)
    var_2 = var_1.filter(complex_0)
    var_3 = maybe_0.ap(var_1)
    maybe_1 = module_0.Maybe(var_2, maybe_0)
    var_4 = var_1.ap(var_1)
    var_5 = maybe_0.filter(var_4)
    bool_0 = var_5.__eq__(complex_0)
    var_6 = maybe_0.to_lazy()
    var_7 = maybe_0.to_box()
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = var_5.__eq__(maybe_1)
    var_8 = var_0.to_box()
    var_9 = var_3.to_lazy()
    var_10 = var_9.to_try()
    var_8.map(var_3)


def test_case_19():
    bool_0 = True
    bytes_0 = b"\xea\x8d\xfc\x88\xceIl"
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)


def test_case_20():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    var_1 = var_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    none_type_1 = None
    var_2 = var_1.ap(none_type_1)
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_lazy()
    var_3.map(var_1)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    none_type_1 = None
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_0.get_or_else(none_type_1)
    var_4 = var_0.to_lazy()
    var_5 = var_4.to_box()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_3.filter(var_4)
