# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "<U8\x0bzCk NPmm<"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    int_0 = 0
    bool_0 = True
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_1.to_try()
    var_3.to_try()


def test_case_3():
    float_0 = 413.45
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(float_0)
    str_0 = "u'SxXQ/!b4JQpePeYmf*"
    bool_2 = True
    maybe_1 = module_0.Maybe(str_0, bool_2)
    var_1 = maybe_1.to_try()
    bool_3 = maybe_1.__eq__(var_1)


def test_case_4():
    int_0 = -3120
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(none_type_0)
    bool_0 = maybe_1.to_try()
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_2 = var_1.map(var_0)
    var_3 = var_2.to_try()
    bool_2 = var_2.__eq__(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = -2903
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.bind(none_type_0)
    object_0 = module_1.object()
    bool_0 = var_2.__eq__(maybe_0)
    var_4 = var_1.to_validation()
    var_5 = var_3.to_box()


def test_case_7():
    int_0 = -2903
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.to_validation()
    bool_0 = maybe_1.__eq__(var_2)
    maybe_0.bind(var_2)


def test_case_8():
    none_type_0 = None
    dict_0 = {}
    bytes_0 = b"DD\xde\x06\x18\x1aw."
    set_0 = {bytes_0, bytes_0}
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.map(dict_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(none_type_0)
    var_4.to_either()


def test_case_9():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_10():
    int_0 = 3274
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)


def test_case_11():
    float_0 = 413.45
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(float_0)
    str_0 = "u'SxXQ/!b4JQpePeYmf*"
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(var_0)


def test_case_12():
    int_0 = -3120
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_try()
    str_0 = "u'SxXQ/!b4JQpePeYmf*"
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_0)
    var_3 = var_1.map(var_0)
    var_4 = var_3.to_try()
    var_5 = var_1.filter(str_0)
    var_6 = var_5.get_or_else(maybe_2)


def test_case_13():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    bool_2 = False
    maybe_1 = module_0.Maybe(str_0, bool_2)
    var_1 = maybe_1.get_or_else(list_0)
    var_1.to_validation()


def test_case_14():
    float_0 = 564.8
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_either()
    var_1.to_box()


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    var_0.to_either()


def test_case_16():
    int_0 = -2903
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.to_validation()
    bool_0 = maybe_1.__eq__(var_2)
    var_4 = var_1.to_box()
    var_5 = var_3.to_either()
    var_6 = maybe_1.to_lazy()
    var_3.map(var_1)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(bool_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_1.get_or_else(var_2)


def test_case_19():
    str_0 = "Y;R!4w"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(str_0)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()


def test_case_21():
    bytes_0 = b"\xd8\xa1\xf79\x9e"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    int_0 = -3901
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_2.map(var_0)


def test_case_22():
    bytes_0 = b"\xa1t\x01\x9b\x9cH\x7f\x12\\\x01"
    bytes_1 = b"\xc6\xfe\xa0S"
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    maybe_1 = module_0.Maybe(bytes_1, bytes_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.get_or_else(maybe_1)
    int_0 = 3274
    bool_1 = True
    var_4 = var_3.map(var_3)
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_5 = var_1.to_either()
    var_6 = var_2.bind(var_1)
    var_7 = maybe_1.map(var_1)
    var_8 = var_1.to_lazy()
    bool_2 = var_1.__eq__(var_2)
    bool_3 = var_2.__eq__(bytes_0)
    var_9 = var_8.map(var_8)
    bool_4 = maybe_2.__eq__(var_3)
    var_10 = maybe_1.to_try()
    var_11 = var_10.filter(var_1)
    var_1.get_or_else(var_0)


def test_case_23():
    bytes_0 = b"\xa1t\x01\x9b\x9cH\x7f\x12\\\x01"
    bytes_1 = b"\xc6\xfe\xa0S"
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    var_0 = maybe_0.ap(bytes_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.to_box()
    bool_1 = maybe_0.__eq__(bytes_1)
    var_3 = var_0.filter(var_2)
    var_4 = var_0.get_or_else(var_0)
    int_0 = 3274
    bool_2 = True
    var_5 = var_4.map(var_4)
    maybe_1 = module_0.Maybe(int_0, bool_2)
    var_6 = var_5.to_box()
    bool_3 = var_6.__eq__(bytes_1)
    var_1.bind(var_6)
