# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -506
    set_0 = {int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    int_1 = 2580
    str_0 = "DP,"
    list_0 = [str_0]
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_1)
    bool_1 = True
    var_0 = maybe_1.map(bool_1)
    bool_2 = maybe_1.__eq__(list_0)
    maybe_2 = module_0.Maybe(list_0, str_0)
    var_1 = maybe_2.ap(int_1)
    var_2 = var_1.to_either()
    var_3 = var_1.map(maybe_2)
    bool_3 = var_1.__eq__(var_3)
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_1.to_box()
    var_6 = var_1.map(bool_2)
    var_7 = var_6.get_or_else(bool_3)


def test_case_3():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = True
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_1 = maybe_1.__eq__(var_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_2.filter(var_2)
    maybe_0.filter(var_1)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    int_0 = 545
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_0.ap(maybe_1)
    var_2 = var_1.bind(maybe_1)
    maybe_0.filter(var_1)


def test_case_5():
    str_0 = "tC"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(str_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_7():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(var_1)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    bool_0 = var_0.__eq__(var_1)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    generic_0 = module_1.Generic()
    var_2 = maybe_1.filter(maybe_0)
    maybe_0.bind(generic_0)


def test_case_9():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_box()


def test_case_11():
    float_0 = -2461.63739
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(float_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_box()
    maybe_1 = module_0.Maybe(float_0, float_0)


def test_case_12():
    bytes_0 = b"\r!"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_0.get_or_else(var_1)


def test_case_13():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    bool_0 = True
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.ap(var_1)
    var_4 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(bool_0, var_1)
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_1.to_box()
    var_7 = maybe_2.map(var_4)
    var_8 = maybe_0.get_or_else(var_7)


def test_case_14():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)


def test_case_15():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_16():
    complex_0 = -212 + 1943.237j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_3 = maybe_1.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_2.to_either()
    var_5 = maybe_2.to_box()
    maybe_2.map(bool_1)


def test_case_17():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_validation()
    maybe_0.filter(maybe_0)


def test_case_18():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    bool_0 = True
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.ap(var_1)
    var_4 = maybe_1.to_validation()
    bool_2 = var_4.__eq__(bool_0)
    var_5 = var_1.to_try()
    var_6 = var_0.to_box()
    maybe_2 = var_3.to_either()
    maybe_2.to_either()


def test_case_19():
    int_0 = -506
    set_0 = {int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    int_1 = 2580
    str_0 = "DP,"
    list_0 = [str_0]
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_1)
    bool_1 = True
    var_0 = maybe_1.map(bool_1)
    bool_2 = maybe_1.__eq__(list_0)
    maybe_2 = module_0.Maybe(list_0, str_0)
    maybe_3 = module_0.Maybe(bool_0, int_1)
    var_1 = var_0.to_try()
    maybe_4 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_4.to_lazy()
    var_3 = maybe_3.to_lazy()
    var_4 = var_3.to_try()
    var_4.bind(var_4)


def test_case_20():
    int_0 = -506
    set_0 = {int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    int_1 = 2580
    str_0 = "DP,"
    list_0 = [str_0]
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_1)
    bool_1 = True
    var_0 = maybe_1.map(bool_1)
    bool_2 = maybe_1.__eq__(list_0)
    maybe_2 = module_0.Maybe(list_0, str_0)
    var_1 = maybe_2.ap(int_1)
    bool_3 = maybe_1.__eq__(var_1)
    maybe_3 = module_0.Maybe(maybe_1, bool_2)
    generic_0 = module_1.Generic()
    var_2 = var_0.filter(maybe_0)
    var_3 = maybe_0.to_try()


def test_case_21():
    complex_0 = -212 + 1943.237j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_3 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = var_2.to_box()
    var_2.get_or_else(bool_1)
