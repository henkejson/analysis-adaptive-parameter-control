# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"iQ\xe0#\xf8\xa20\x07LV\xf4&\x1f\xf7\xa2u"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    int_0 = 285
    bool_1 = maybe_0.__eq__(int_0)
    var_2 = maybe_0.ap(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_0.get_or_else(maybe_1)
    var_3 = maybe_1.map(var_2)
    var_4 = maybe_1.to_box()
    var_4.map(var_4)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(bool_0)


def test_case_6():
    float_0 = 2660.5
    none_type_0 = None
    bytes_0 = b"\x90\x97\x91\xadX\xb9\xcb\x16\xd1\xc8\xb2\xb5\xf1\xee"
    set_0 = {bytes_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_try()
    var_1.ap(float_0)


def test_case_7():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.to_try()
    maybe_0.filter(maybe_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_either()
    bool_2 = var_0.__eq__(bool_0)


def test_case_12():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.map(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(maybe_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_validation()
    maybe_0.filter(maybe_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_validation()
    bool_1 = var_1.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_try()
    var_4.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_validation()
    maybe_0.filter(maybe_0)


def test_case_18():
    bytes_0 = b"[i~\x02Rc\x1c="
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    str_0 = "vVI)uFpaG6R"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_0.bind(bool_0)


def test_case_20():
    none_type_0 = None
    bytes_0 = b"\x8eL,\xab\x07>Z\xfc\x06Y"
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_try()
    var_2 = var_1.map(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.map(var_1)
    var_5 = var_0.filter(var_3)
    var_6 = var_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = var_4.__eq__(var_3)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_7 = var_1.bind(maybe_1)
    var_8 = var_4.to_lazy()
    var_9 = maybe_1.ap(none_type_0)
    var_10 = maybe_1.ap(var_3)
    var_11 = var_7.filter(maybe_0)
    var_12 = var_6.to_lazy()
    bool_2 = var_5.__eq__(maybe_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_12, bool_3)
    var_13 = var_2.map(var_6)
    var_14 = maybe_0.to_box()
    var_2.to_try()


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    int_0 = 285
    bool_2 = maybe_0.__eq__(int_0)
    var_2 = maybe_0.ap(none_type_0)
