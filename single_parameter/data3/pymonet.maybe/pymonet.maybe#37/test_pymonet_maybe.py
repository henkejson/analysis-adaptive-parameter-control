# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    int_0 = -5070
    bytes_0 = b"'\xbf"
    bool_0 = maybe_0.__eq__(bytes_0)
    none_type_0.ap(int_0)


def test_case_3():
    bytes_0 = b"D\xd6\xfceV\x88S\xf7\xe5\xfdi\xc5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    complex_0 = 1018.2045 - 1919.4j
    none_type_0 = None
    var_1 = maybe_0.map(var_0)
    maybe_2 = module_0.Maybe(complex_0, none_type_0)


def test_case_4():
    none_type_0 = None
    str_0 = "v$RE,$X^dGKq*vbO"
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_1)
    var_1 = var_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_1)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bytes_0 = b"\x06:5\x18\x18\xde\x8b\xbd\xf6l\xec"
    str_0 = "["
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    none_type_0 = None
    var_3 = var_0.map(var_2)
    var_4 = var_0.get_or_else(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    bool_0 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_5 = maybe_0.map(str_0)
    var_6 = maybe_2.to_box()
    var_6.ap(none_type_0)


def test_case_8():
    bytes_0 = b"\xffN\x91"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, set_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(none_type_0)
    var_4 = maybe_0.bind(var_1)
    var_3.to_lazy()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    int_0 = -509
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_12():
    int_0 = 3806
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    list_0 = [var_0, int_0, var_0, var_0]
    bool_0 = True
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_1 = maybe_1.to_box()


def test_case_13():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_either()


def test_case_14():
    float_0 = 611.6787
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.bind(none_type_1)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_lazy()
    maybe_1.filter(var_4)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    bool_0 = False
    none_type_0 = None
    str_0 = "pRTleq\x0c-Y0k5K\\"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.get_or_else(bool_0)
    var_2.to_box()


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    int_0 = 2111
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    int_0 = -1552
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(int_0)


def test_case_20():
    str_0 = "Box[value={}]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    int_0 = -2209
    list_0 = [var_0, maybe_0, int_0]
    var_1 = maybe_0.filter(list_0)
    var_2 = maybe_0.filter(var_0)
    bool_0 = var_1.__eq__(var_2)
    var_3 = var_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    var_4 = var_1.ap(maybe_0)
    maybe_1 = module_0.Maybe(var_4, var_3)
    var_5 = maybe_1.to_validation()
    var_3.filter(bool_1)


def test_case_21():
    str_0 = "xhg3++\n?p\\t][=#2_4}"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.ap(bool_0)
    bool_1 = maybe_2.__eq__(maybe_0)
    var_1 = maybe_2.to_validation()
    maybe_2.filter(bool_0)
