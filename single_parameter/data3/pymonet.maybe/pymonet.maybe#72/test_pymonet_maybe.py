# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "fy)w{"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "CR"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.to_try()
    var_3.to_box()


def test_case_3():
    int_0 = 1283
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.map(none_type_1)
    bool_0.bind(int_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(none_type_0)


def test_case_5():
    int_0 = 429
    dict_0 = {int_0: int_0, int_0: int_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    var_0 = maybe_0.to_validation()
    int_1 = 2419
    maybe_1 = module_0.Maybe(none_type_0, dict_0)
    var_1 = maybe_1.ap(int_1)
    bool_0 = maybe_1.__eq__(int_1)
    var_2 = maybe_1.to_box()
    var_3 = var_1.filter(var_1)
    var_4 = var_1.bind(none_type_0)
    bool_1 = var_3.__eq__(var_2)
    int_1.get_or_else(int_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bytes_0 = b"\x0c\xe4\x93p\xc8\xff\xf1#\xeb~\xdchbM8\xe0\xa7"
    set_0 = {bytes_0}
    str_0 = "<}T0|<*|(0tw@Q {u"
    tuple_0 = (set_0, str_0, bytes_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_0.to_validation()
    var_5 = var_0.ap(none_type_0)
    var_6 = maybe_1.get_or_else(none_type_0)
    var_3.ap(var_3)


def test_case_8():
    bytes_0 = b"\xc3R\xe0\x1c\xe2\x82g\xfbX\xa1\x8a35K"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bytes_0 = b"\x0c\xe4\x93p\xc8\xff\xf1#\xeb~\xdchbM8\xe0\xa7"
    set_0 = {bytes_0}
    str_0 = "<}T0|<*|(0tw@Q {u"
    tuple_0 = (set_0, str_0, bytes_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(bytes_0)


def test_case_10():
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    str_1 = "U "
    bool_1 = False
    maybe_1 = module_0.Maybe(str_1, bool_1)
    maybe_1.filter(str_1)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.ap(bool_0)
    var_2.to_either()


def test_case_13():
    int_0 = -2293
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    bytes_0 = b"mr\xc2<."
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    bytes_1 = b"\x17ia|@\xcc"
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_1, bool_1)
    var_0.bind(bytes_1)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_16():
    bytes_0 = b"\x80}\x80\x17"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_1.to_lazy()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_1.to_either()


def test_case_18():
    str_0 = "Pjz@ "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -3437.7
    bool_0 = True
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_4 = maybe_2.to_try()
    var_4.bind(float_0)


def test_case_19():
    int_0 = 1283
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.map(none_type_1)
    var_0.bind(int_0)


def test_case_20():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_try()
    maybe_1.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    maybe_0.ap(bool_0)


def test_case_22():
    str_0 = "CR"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_1.map(str_0)
    var_3 = var_2.map(var_2)
    var_4 = var_2.map(str_0)
    var_5 = var_3.to_either()
    var_6 = var_2.ap(none_type_0)
    var_7 = var_6.to_try()
    var_8 = maybe_0.to_box()
    none_type_1 = None
    maybe_2 = module_0.Maybe(var_7, var_5)
    var_9 = var_3.bind(maybe_0)
    maybe_3 = module_0.Maybe(none_type_1, none_type_1)
    var_10 = var_7.get_or_else(str_0)
    var_11 = var_7.bind(maybe_2)
    var_12 = maybe_3.to_validation()
    bool_0 = maybe_2.__eq__(var_9)
    none_type_0.to_lazy()


def test_case_23():
    str_0 = "CR"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    none_type_1 = None
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.map(str_0)
    var_3 = var_2.map(var_2)
    var_4 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_5 = var_4.to_box()
    var_6 = maybe_1.filter(var_4)
    var_7 = var_2.bind(none_type_1)
    var_8 = maybe_0.to_lazy()
    bool_1 = var_7.__eq__(var_1)
    var_9 = var_2.get_or_else(var_5)
    none_type_2 = None
    bool_2 = True
    maybe_2 = module_0.Maybe(var_7, bool_2)
    var_0.bind(none_type_2)
