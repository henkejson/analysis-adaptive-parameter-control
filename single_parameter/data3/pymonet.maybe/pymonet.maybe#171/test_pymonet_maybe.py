# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"h\x1778\xccS"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xb4\xf0\xaa./;\xda0\xcb\xcc\x10\x80toc"
    bytes_1 = b"\x03"
    bytes_2 = b"\xd1zQ\xeb"
    maybe_0 = module_0.Maybe(bytes_2, bytes_2)
    bool_0 = False
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = module_0.Maybe(bytes_1, bytes_1)
    var_3 = var_2.get_or_else(bytes_0)


def test_case_3():
    float_0 = 333.2851
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(float_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.bind(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_0.filter(float_0)
    var_4 = var_3.get_or_else(maybe_1)
    var_5 = var_3.map(var_1)
    var_1.get_or_else(float_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    str_0 = "V7#"
    maybe_0.map(str_0)


def test_case_5():
    float_0 = 333.2851
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(float_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.bind(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_0.filter(float_0)
    var_4 = maybe_0.ap(float_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    float_0 = 501.02661
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    str_0 = "q*pBJ,'<\r|@CFZ\"7V"
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.filter(str_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\x1egr\xbe!{\xd3\xc8!\x00\x08\xed{t9C"
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bytes_0)
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_try()
    maybe_0.map(var_2)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    float_0 = 913.695343
    maybe_1 = module_0.Maybe(maybe_0, float_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.get_or_else(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_0.ap(none_type_0)


def test_case_13():
    int_0 = -397
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_lazy()
    bool_1 = False
    var_4 = var_2.to_lazy()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.map(bool_1)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)


def test_case_15():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_try()
    var_0.ap(maybe_0)


def test_case_16():
    str_0 = "`*jv#:/\x0bC9w"
    list_0 = [str_0, str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    int_0 = -1870
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.to_try()
    var_3 = var_2.get_or_else(var_1)


def test_case_17():
    bytes_0 = b"\xd3\xa1\xd5'\x18J'S\xed\xec4\x16\xc2\xd5\x8abi"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bytes_0 = b't"\x17\x07Z09\xf5\xc8y'
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_0.map(var_1)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.get_or_else(var_3)
    var_5 = maybe_0.filter(maybe_0)
    var_6 = var_4.map(var_4)
    var_7 = var_0.map(var_4)
    var_8 = maybe_0.get_or_else(none_type_0)
    var_9 = var_4.to_either()
    var_10 = var_0.map(bytes_0)
    var_9.bind(var_9)


def test_case_19():
    bytes_0 = b"$-)\xd9\x95#Jn"
    float_0 = 1639.58456
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(float_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = True
    bool_4 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_4)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()
    module_1.Generic(*var_1, **bool_3)


def test_case_20():
    float_0 = -459.49
    bytes_0 = b"$-)\xd9\x95#Jn"
    float_1 = 1639.58456
    maybe_0 = module_0.Maybe(bytes_0, float_1)
    bool_0 = maybe_0.__eq__(float_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.to_try()
    var_4 = var_3.map(bool_2)
    var_5 = var_0.to_either()
    var_6 = var_4.bind(var_3)
    bool_3 = var_4.__eq__(maybe_0)
    var_7 = var_5.to_try()
    var_6.to_box()


def test_case_21():
    bytes_0 = b"$-)\xd9\x95#Jn"
    float_0 = 1639.58456
    maybe_0 = module_0.Maybe(bytes_0, float_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bool_0, maybe_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_2.to_try()
    var_3 = var_1.to_either()
    var_3.bind(var_3)


def test_case_22():
    int_0 = 0
    int_1 = 1
    str_0 = "{lmWb]r?A^"
    maybe_0 = module_0.Maybe(str_0, int_1)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_2 = var_1.to_box()
    maybe_3 = module_0.Maybe(int_0, int_0)
    var_3 = var_1.ap(int_0)
    var_4 = maybe_3.to_lazy()
    var_4.filter(maybe_0)
