# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -974
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    list_0 = [maybe_2, bool_0, maybe_0, none_type_0]
    maybe_2.filter(list_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = var_0.to_box()
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = maybe_0.bind(var_2)
    var_5 = var_0.ap(none_type_0)
    bool_3 = True
    maybe_1 = module_0.Maybe(var_2, bool_3)
    var_6 = var_4.filter(none_type_0)
    var_7 = maybe_1.to_either()
    var_8 = var_6.to_lazy()
    var_9 = var_6.to_either()
    var_10 = var_5.map(var_3)
    var_11 = var_2.ap(var_2)
    var_12 = var_0.filter(var_3)
    bytes_0 = b"c\x91A\xc8?\xe3\xcdL\xcb2\xfd%\xe3\x83\x15\xd61N\xf8"
    bool_4 = var_5.__eq__(var_5)
    var_13 = var_2.map(var_3)
    var_14 = var_2.map(var_10)
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    maybe_2.filter(var_11)


def test_case_5():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: First[B]\n        :returns: new First with first value\n        :rtype: First[A]\n        "
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.map(str_0)


def test_case_6():
    none_type_0 = None
    float_0 = 397.795677
    float_1 = -411.30379
    tuple_0 = (float_0, float_1)
    str_0 = "w\x0b'4X~3FTZ+U`O\"x"
    dict_0 = {tuple_0: tuple_0, float_1: float_0, str_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, str_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_validation()


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_box()
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(maybe_1)
    list_0 = [maybe_2, bool_0, maybe_0, none_type_0]
    maybe_2.filter(list_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "bB[DJhCBB("
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    str_0 = "bB[DJhCBB("
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_2.filter(var_1)


def test_case_13():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.ap(int_0)


def test_case_14():
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_15():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_either()


def test_case_16():
    str_0 = "ki~[q\x0b\tF'uu\tE["
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_1.filter(var_1)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(maybe_1)
    var_2 = var_0.to_lazy()
    maybe_2.filter(var_1)


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(none_type_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.bind(bool_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, bool_3)
    var_3 = maybe_0.ap(bool_2)
    var_4 = maybe_0.get_or_else(var_3)
    maybe_1.filter(var_4)


def test_case_20():
    none_type_0 = None
    str_0 = "\t=qku^P"
    set_0 = {str_0, str_0, none_type_0}
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(var_0)
    var_2.to_lazy()


def test_case_21():
    float_0 = 85.51702
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_22():
    str_0 = "8y"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = maybe_0.bind(var_1)
    var_4 = var_0.ap(none_type_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(var_1, bool_3)
    var_5 = var_3.filter(none_type_0)
    var_6 = var_5.ap(var_4)
    var_7 = maybe_0.get_or_else(var_6)
    maybe_1.filter(var_7)


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.ap(none_type_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(var_0, bool_3)
    var_3 = var_1.filter(none_type_0)
    var_4 = var_3.ap(var_2)
    maybe_1.filter(var_4)


def test_case_25():
    bytes_0 = b"\xec\xb6z\x8e\xe2\xfc\xa1R+\xb3\xf51\xe7\x81\xa6\xa1n~\x1c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(var_0)
    var_2 = maybe_0.ap(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.to_lazy()
    bool_1 = var_2.__eq__(maybe_0)
    bool_2 = True
    bool_3 = maybe_0.__eq__(bool_2)
    var_4 = var_0.bind(bytes_0)
    var_5 = maybe_0.to_lazy()
    var_1.to_validation()
