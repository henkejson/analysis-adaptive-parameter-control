# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -1308
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.filter(var_1)
    bool_0 = var_2.__eq__(var_1)
    var_3 = var_2.to_validation()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.ap(maybe_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.map(var_0)
    var_5 = var_3.bind(maybe_1)
    var_6 = maybe_1.to_lazy()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_6():
    none_type_0 = None
    str_0 = "\n    Task are data-type for handle execution of functions (in lazy way)\n    transform results of this function and handle errors.\n    "
    set_0 = {str_0, str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.filter(none_type_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_3.get_or_else(var_3)
    var_5 = var_3.bind(var_3)
    var_6 = maybe_0.get_or_else(var_3)
    var_7 = maybe_0.to_either()
    var_8 = var_5.to_box()
    maybe_1.filter(var_8)


def test_case_9():
    int_0 = 788
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_try()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    var_4 = maybe_0.map(var_0)
    var_5 = var_4.bind(var_4)
    var_6 = maybe_0.to_either()
    var_7 = var_5.to_box()
    maybe_1.filter(var_7)


def test_case_11():
    float_0 = -396.928446
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    var_4 = var_2.to_box()
    maybe_1.filter(var_4)


def test_case_13():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    bool_0 = True
    bool_0.to_box()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.map(var_0)
    var_5 = var_3.bind(maybe_1)
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.bind(var_6)
    var_8 = maybe_0.get_or_else(var_0)
    var_9 = maybe_0.to_either()
    bool_1 = var_7.__eq__(maybe_0)
    var_7.to_box()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_try()
    var_5 = maybe_0.to_lazy()
    maybe_0.ap(maybe_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.to_try()
    var_4 = var_2.to_box()
    var_5 = maybe_0.map(var_0)
    var_6 = var_3.bind(maybe_1)
    maybe_2 = module_0.Maybe(var_3, var_3)
    var_7 = var_2.to_either()
    bool_1 = maybe_0.__eq__(var_4)
    var_3.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_1 = var_0.bind(bool_0)
    var_2 = maybe_0.to_either()
    var_3 = var_1.map(var_2)
    var_4 = var_1.bind(var_2)
    var_5 = maybe_0.get_or_else(maybe_0)
    var_6 = maybe_1.bind(var_2)
    bool_1 = var_2.__eq__(generic_0)
    var_7 = var_6.to_box()
    var_8 = maybe_1.filter(var_7)
    var_9 = var_8.to_either()
    var_10 = var_3.map(var_3)
    bool_2 = var_3.__eq__(maybe_0)
    var_7.get_or_else(var_4)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(var_2, none_type_0)
    var_4 = maybe_1.filter(var_1)
    var_5 = maybe_0.map(bool_0)
    bool_1 = maybe_2.__eq__(maybe_2)
    var_1.get_or_else(bool_0)
