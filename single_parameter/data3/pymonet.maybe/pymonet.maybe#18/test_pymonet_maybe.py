# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 832.7171426744069
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -1487.872
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(float_0)
    bool_0 = False
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.map(var_1)
    bool_1 = var_3.__eq__(var_3)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_1.to_try()
    var_6 = var_4.to_lazy()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_either()
    dict_0 = {}
    var_2 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    var_3 = maybe_0.map(maybe_2)
    var_4 = var_2.to_try()
    bool_1 = maybe_1.__eq__(var_4)
    maybe_2.filter(maybe_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    dict_0 = {}
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_0.map(maybe_1)
    var_2 = var_0.to_try()
    bool_1 = var_2.__eq__(var_2)
    maybe_1.filter(maybe_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_0)


def test_case_6():
    dict_0 = {}
    list_0 = []
    int_0 = -594
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.bind(dict_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()


def test_case_7():
    bytes_0 = b"W\xf0p,\xfdU\x1d\x86\x0fv\xbe"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_0.bind(bool_0)


def test_case_8():
    bytes_0 = b"\xdb\xdf\x96=e=\xae:\x1e\xe3\x06\x80\x8d"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_0.ap(var_1)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    dict_0 = {}
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_1.filter(maybe_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    dict_0 = {}
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_2 = maybe_0.map(maybe_1)
    var_3 = var_1.to_try()
    maybe_1.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = var_1.to_try()
    var_3.filter(var_3)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(bool_0)


def test_case_14():
    int_0 = -640
    set_0 = {int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    dict_0 = {}
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_0.map(bool_0)
    var_2 = maybe_1.to_try()
    bool_1 = var_2.__eq__(var_2)
    maybe_1.filter(maybe_0)


def test_case_16():
    str_0 = "cTteb~t7"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = var_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_1 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(str_0, none_type_0)
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.to_validation()


def test_case_17():
    str_0 = "\n        Return monad value when is successfully.\n        Othercase return default_value argument.\n\n        :params default_value: value to return when monad is not successfully.\n        :type default_value: B\n        :returns: monad value\n        :rtype: A | B\n        "
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_2, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.bind(str_0)
    var_2 = var_1.map(none_type_1)
    var_3 = var_2.to_lazy()
    var_4 = var_3.map(none_type_0)
    var_4.to_either()


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_either()
    tuple_0 = ()
    dict_0 = {}
    var_2 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    var_3 = maybe_1.get_or_else(tuple_0)
    bool_2 = maybe_1.__eq__(var_2)
    maybe_1.ap(var_3)
