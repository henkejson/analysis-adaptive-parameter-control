# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -152
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_lazy()
    var_0.bind(var_1)


def test_case_3():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, dict_0)
    var_1 = maybe_1.map(none_type_0)
    var_2 = maybe_1.bind(var_1)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.map(maybe_0)


def test_case_5():
    none_type_0 = None
    str_0 = ".3\r/#Wsme(^i"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(none_type_0)
    var_3 = maybe_0.to_lazy()


def test_case_6():
    int_0 = -663
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_2.to_box()
    bool_2 = maybe_2.__eq__(maybe_2)
    bool_3 = True
    maybe_3 = module_0.Maybe(var_0, bool_3)
    maybe_1.bind(none_type_0)


def test_case_7():
    complex_0 = -1545.015 + 2869.192148j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(complex_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    set_0 = set()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_2 = maybe_0.filter(maybe_1)
    maybe_1.filter(set_0)


def test_case_9():
    bytes_0 = b"h\xe9\xf2\x9d\xf7E\x8fG"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    set_0 = {bytes_0, bytes_0, bytes_0}
    maybe_1 = module_0.Maybe(set_0, bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, set_0)
    var_1 = maybe_2.filter(bytes_0)


def test_case_10():
    list_0 = []
    bool_0 = False
    tuple_0 = (list_0, bool_0)
    str_0 = "U}z"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_4 = var_3.get_or_else(tuple_0)


def test_case_11():
    bytes_0 = b"\xb1\xc1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    float_0 = -653.018
    bool_0 = maybe_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_1.to_try()
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = maybe_0.bind(none_type_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.filter(bytes_0)
    var_5 = var_1.get_or_else(var_3)
    var_6 = maybe_1.filter(float_0)
    var_7 = var_1.to_lazy()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_validation()
    bool_1 = var_2.__eq__(var_1)


def test_case_13():
    bool_0 = True
    int_0 = 1
    tuple_0 = (int_0, int_0)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    str_0 = "<2np~?"
    maybe_1 = module_0.Maybe(str_0, str_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_lazy()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_15():
    bytes_0 = b"0y\x1b^}"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    float_0 = -653.018
    bool_0 = maybe_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.get_or_else(none_type_0)
    var_2 = maybe_1.to_box()
    var_1.to_lazy()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_try()
    maybe_1.map(var_0)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(bool_0)


def test_case_18():
    int_0 = -72
    set_0 = {int_0, int_0, int_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(none_type_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.ap(none_type_0)
    var_5 = maybe_0.get_or_else(set_0)
    var_5.ap(none_type_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(var_1)
    set_0 = set()
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_3 = maybe_0.get_or_else(maybe_1)
    var_4 = maybe_0.map(var_2)
    bool_1 = var_2.__eq__(var_2)
    bool_2 = maybe_1.__eq__(var_0)
    var_5 = maybe_1.ap(bool_2)
    var_6 = var_5.get_or_else(var_3)
    maybe_2 = module_0.Maybe(set_0, set_0)
    maybe_3 = module_0.Maybe(maybe_2, maybe_1)
    var_7 = maybe_0.filter(maybe_1)
    var_8 = var_7.to_lazy()
    var_9 = var_7.to_validation()
    maybe_2.filter(maybe_1)
