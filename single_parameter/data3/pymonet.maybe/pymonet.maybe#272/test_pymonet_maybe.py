# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b";\xebC\xdb\x82R\xfc\xc5l\xa2tV;h\xcf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "$Hv?A ?pbH{c0!pJ\x0b/"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    bool_2 = maybe_0.__eq__(str_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    maybe_3 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_3.to_box()
    var_1 = maybe_0.to_validation()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_4 = maybe_0.filter(var_2)
    maybe_1.filter(var_4)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_lazy()
    var_3 = var_1.to_either()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    maybe_0.bind(var_1)


def test_case_7():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_2)
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.to_box()
    var_4 = var_3.to_either()
    var_5 = var_4.to_try()
    var_5.filter(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(var_1)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_5 = maybe_0.filter(var_2)
    maybe_1.filter(var_5)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_13():
    complex_0 = -204.22 + 3165.87637j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_try()
    var_2.to_try()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    maybe_0.bind(var_1)


def test_case_17():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    float_0 = 36.7751
    bool_1 = False
    tuple_0 = (bool_1, bool_1)
    list_1 = [tuple_0]
    maybe_1 = module_0.Maybe(list_1, bool_1)
    var_0 = maybe_1.to_validation()
    var_0.ap(float_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "$Hv?A ?pbH{c0!pJ\x0b/"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    bool_2 = maybe_0.__eq__(str_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    bool_3 = True
    maybe_3 = module_0.Maybe(bool_1, bool_3)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_1.to_validation()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    var_4 = maybe_0.to_validation()
    bool_1 = var_3.__eq__(var_1)
    var_5 = var_4.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_6 = maybe_0.filter(bool_1)
    maybe_1.filter(var_6)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(var_1, maybe_1)
    var_2 = var_0.map(var_0)
    var_3 = maybe_2.bind(var_0)
    maybe_3 = module_0.Maybe(maybe_2, var_3)
    bool_1 = var_3.__eq__(maybe_3)
    var_4 = maybe_0.filter(var_0)
    var_5 = var_3.to_lazy()
    var_6 = var_4.get_or_else(var_0)
    var_7 = var_6.to_try()
    none_type_0 = None
    maybe_4 = module_0.Maybe(none_type_0, var_4)
    var_8 = maybe_3.get_or_else(maybe_4)
    var_9 = maybe_0.to_try()
    var_0.filter(var_9)


def test_case_21():
    str_0 = "N@"
    bytes_0 = b"\x11\xaa\x10o\x13WC\xb7\x199\xffk\xafDC\xb2\xdf\xed6"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.to_try()
    maybe_1.map(var_0)
