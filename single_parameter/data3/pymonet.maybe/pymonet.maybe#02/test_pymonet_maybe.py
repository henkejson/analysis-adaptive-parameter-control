# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "4a0D5`\\v"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.get_or_else(var_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_either()
    str_0.to_either()


def test_case_3():
    bytes_0 = b"\xca\xa5\xef*\x9e\xcf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_5():
    bool_0 = True
    complex_0 = -2802.88161 - 395j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(complex_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.get_or_else(bool_0)
    maybe_1.filter(var_2)


def test_case_6():
    bytes_0 = b"8\xb8\x93`\xed\xdei\x7f\xa2\xa0%\xb1f*\xf5\x02s\x17"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.bind(bytes_0)


def test_case_7():
    bool_0 = True
    complex_0 = -2802.88161 - 395j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = var_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.get_or_else(bool_0)
    var_3.to_lazy()


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.get_or_else(none_type_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    bool_0 = True
    complex_0 = -2802.88161 - 395j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(complex_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.get_or_else(bool_0)
    maybe_1.filter(var_1)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.bind(none_type_0)


def test_case_14():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()


def test_case_15():
    list_0 = []
    float_0 = -2006.79119
    list_1 = [float_0, float_0, float_0, float_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(list_0)


def test_case_16():
    bytes_0 = b"\xca\xa5\xef*\x9e\xcf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    bool_0 = True
    complex_0 = -2802.88161 - 395j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.filter(complex_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.to_validation()
    maybe_1.filter(var_1)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -1754.79693
    none_type_1 = None
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(float_0, none_type_1)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.to_try()
    var_1.to_try()


def test_case_20():
    bytes_0 = b"\xca\xa5\xef*\x9e\xcf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.map(maybe_0)


def test_case_21():
    int_0 = -1958
    bytes_0 = b"\xada\xa5\x03~2\xf6\x9e\xff\x03\x80\r\xdc\xc2\x02\x01\x0c\x89\xa0"
    dict_0 = {int_0: int_0, int_0: bytes_0, int_0: bytes_0, int_0: int_0}
    bytes_1 = b'\xb4!\x06\xffO\xcd!\xfb\x14\xb0,k\xbc6\xac\x82"\xd5\xec\xd1'
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(dict_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -1754.79693
    none_type_1 = None
    maybe_1 = module_0.Maybe(float_0, none_type_1)
    dict_0 = {none_type_0: none_type_0, none_type_1: none_type_1, none_type_0: maybe_0}
    maybe_2 = module_0.Maybe(none_type_0, dict_0)
    bool_0 = maybe_0.__eq__(maybe_2)
    var_0 = maybe_1.to_try()
    maybe_1.map(var_0)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.to_validation()
