# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -2249
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -3011.6897
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(float_0)
    bytes_0 = b">;\xa8\xe6\xca\xd3"
    var_2 = maybe_0.ap(bytes_0)
    bool_0 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_3():
    none_type_0 = None
    float_0 = 2837.025
    bool_0 = True
    bytes_0 = b"\x00n\x8e\xbf\xdcN\xe5\xc3KF\xf7\xf9\x9c\x94"
    tuple_0 = (float_0, bool_0, bytes_0, bytes_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    tuple_0.filter(var_0)


def test_case_4():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.filter(var_1)
    var_4 = var_3.get_or_else(var_2)
    none_type_0 = None
    var_5 = maybe_0.to_either()
    int_0 = 99
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_6 = maybe_1.get_or_else(bool_0)
    var_7 = maybe_1.map(none_type_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_8 = maybe_2.map(bool_0)
    var_9 = var_0.bind(bool_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.map(maybe_0)


def test_case_6():
    int_0 = 2052
    list_0 = [int_0, int_0]
    bytes_0 = b"\xd3Vz"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(list_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    float_0 = -3012.460891191837
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    bool_0 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bool_0)


def test_case_10():
    complex_0 = 1824.465567 - 3105j
    int_0 = 1282
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.get_or_else(complex_0)
    var_1.to_box()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_12():
    float_0 = -3011.6897
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    bytes_0 = b">;\xa8\xe6\xca\xd3"
    var_1 = maybe_0.ap(bytes_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_2 = var_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    tuple_0 = ()
    bytes_0 = b"o\xe398\x9a\x03;\xbb:\x1a9k\xd5\xf8\xca\xf0_\x08\xbf"
    complex_0 = 381.65 + 1695.9507j
    set_0 = {bytes_0, bytes_0, complex_0, complex_0}
    none_type_1 = None
    maybe_1 = module_0.Maybe(set_0, none_type_1)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.get_or_else(tuple_0)


def test_case_14():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, set_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_box()
    var_1.ap(set_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    int_0 = -1305
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(int_0)


def test_case_18():
    bytes_0 = b"r/\xb2\x86*g!\x96,@U"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_19():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(var_0)
    var_3.to_validation()


def test_case_20():
    float_0 = -3010.691396914918
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(float_0)
    bytes_0 = b">;\xa8\xe6\xca\xd3"
    var_2 = maybe_0.ap(var_0)
    var_3 = var_0.ap(var_2)
    bool_0 = var_1.__eq__(var_2)
    bool_1 = False
    var_4 = var_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_5 = maybe_1.to_try()
    var_6 = var_2.to_lazy()
    maybe_1.filter(var_6)


def test_case_21():
    int_0 = 1812
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_4 = var_2.to_validation()
    var_5 = var_1.to_try()
    var_6 = maybe_1.ap(var_0)
    var_3.to_box()


def test_case_22():
    float_0 = -3011.6897
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.filter(bool_1)
    var_1 = maybe_0.bind(float_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.ap(var_2)
    var_4 = var_0.to_lazy()
    bool_2 = var_1.__eq__(maybe_0)
    bool_3 = False
    var_5 = var_3.to_try()
    var_6 = var_4.to_either()
    var_7 = var_6.to_try()
    var_8 = var_3.to_try()
    maybe_1 = module_0.Maybe(var_6, bool_3)
    var_7.to_lazy()


def test_case_23():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.bind(bool_0)
