# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "=wsQ\n7H--`l"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.bind(bool_0)
    bool_3 = var_2.__eq__(bool_0)
    var_3 = maybe_0.filter(var_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = maybe_1.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_1.to_either()


def test_case_3():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_either()
    var_4 = var_3.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_5 = maybe_1.get_or_else(var_1)
    var_6 = maybe_1.get_or_else(none_type_0)
    var_6.to_lazy()


def test_case_4():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = bool_1.__eq__(maybe_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_3 = var_2.__eq__(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.to_either()


def test_case_5():
    none_type_0 = None
    bool_0 = True
    int_0 = -3023
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, none_type_1)
    maybe_1.bind(none_type_0)


def test_case_6():
    complex_0 = 2058.4 + 1794.7489j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    var_0 = maybe_0.filter(complex_0)
    var_1 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_7():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1]
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_8():
    complex_0 = 2058.4 + 1794.7489j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    var_0 = maybe_0.filter(complex_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_1 = maybe_1.to_lazy()
    bool_1 = var_1.__eq__(maybe_1)
    var_2 = maybe_0.to_either()
    var_3 = var_1.ap(var_0)
    var_4 = maybe_1.bind(bool_0)
    var_5 = maybe_0.to_box()
    bool_2 = var_4.__eq__(bool_0)
    maybe_0.ap(var_2)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_either()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.filter(bool_0)


def test_case_14():
    complex_0 = 2058.4 + 1794.7489j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()
    str_0 = "}.mv"
    none_type_0 = None
    var_1 = maybe_0.filter(str_0)
    var_2 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_16():
    bytes_0 = b"\xb8\xb3\x01\xfc\xe5"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.bind(var_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_0.bind(none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)
