# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\x83R=\xb3I'\xc8y\n\x81\x07\x8a\xd7ID\x19\xc9"
    float_0 = 229.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_box()


def test_case_3():
    none_type_0 = None
    float_0 = 2185.65503
    none_type_1 = None
    maybe_0 = module_0.Maybe(float_0, none_type_1)
    maybe_0.map(none_type_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_try()
    var_3.to_either()


def test_case_5():
    bool_0 = False
    bool_1 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.bind(maybe_1)


def test_case_6():
    int_0 = 1497
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(int_0, var_3)
    bool_1 = var_3.__eq__(int_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.bind(var_4)
    var_5.to_lazy()


def test_case_7():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_8():
    int_0 = -2136
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_9():
    int_0 = -2136
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.filter(int_0)
    var_2 = var_1.get_or_else(int_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(var_2)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    bytes_0 = b'v\xfc2\xec\x86\x98l\x96\xbe"\x7f\xb0\xd9\xf6'
    var_2 = maybe_0.get_or_else(bytes_0)
    var_2.filter(var_2)


def test_case_11():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    str_0 = "A-'#|ED"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(none_type_0, set_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_14():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(set_0)


def test_case_15():
    str_0 = "Callable[[U], Lazy[U, W]]"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_16():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    set_0.to_box()


def test_case_17():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.get_or_else(var_0)
    none_type_0 = None
    var_4 = var_0.to_box()
    var_5 = maybe_1.bind(var_4)
    var_6 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(var_1, var_6)
    bool_3 = var_6.__eq__(bool_2)
    var_7 = maybe_2.bind(maybe_2)
    maybe_3 = module_0.Maybe(maybe_2, var_0)
    var_8 = maybe_1.to_lazy()
    var_9 = var_0.to_try()
    maybe_0.filter(maybe_1)


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(bool_0)
    var_3 = maybe_0.to_box()
    var_4 = var_1.bind(var_3)
    var_5 = var_4.map(var_4)
    var_6 = maybe_0.map(var_4)
    bool_2 = var_0.__eq__(var_3)
    var_7 = var_1.map(var_3)
    bool_3 = var_7.__eq__(var_2)
    bool_4 = var_5.__eq__(var_0)
    var_8 = var_4.to_try()
    var_9 = var_0.filter(var_0)
    var_10 = var_7.ap(var_4)
    var_11 = var_6.to_box()
    var_12 = var_11.to_validation()
    var_11.get_or_else(var_11)


def test_case_19():
    int_0 = 1497
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(int_0, var_2)
    bool_1 = var_0.__eq__(maybe_1)
    bool_2 = var_2.__eq__(int_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.bind(var_3)
    var_4.to_lazy()


def test_case_20():
    int_0 = 1497
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(int_0, bool_2)
    none_type_0 = None
    var_2 = maybe_1.ap(int_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(int_0, var_4)
    bool_3 = var_4.__eq__(int_0)
    var_5 = maybe_1.to_lazy()
    var_6 = var_5.bind(var_5)
    var_6.to_lazy()
