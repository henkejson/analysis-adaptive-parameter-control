# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"f\x99\x19\x06\xc5K\x19\xbb \xbe\x05\xbad"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    str_0 = 'D1g\rACY"&*o+9G!G'
    bool_0 = True
    list_0 = [str_0, none_type_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    none_type_1 = None
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.ap(none_type_1)
    var_2 = var_0.ap(var_1)
    var_3 = var_0.filter(var_1)
    var_4 = var_2.map(var_0)
    var_5 = var_0.to_try()
    var_6 = var_2.to_try()
    var_5.to_lazy()


def test_case_3():
    bytes_0 = b"\xb7\x8a8=%6\xc9\xdemU=\xf7r\xb9\xb8\x1e}\xca"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_validation()
    var_0.get_or_else(var_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.ap(bool_1)
    var_3 = maybe_0.ap(none_type_0)
    var_4 = maybe_0.filter(var_3)
    var_5 = maybe_0.map(none_type_0)
    var_6 = maybe_0.to_try()
    var_7 = maybe_0.to_try()
    var_8 = maybe_0.to_lazy()
    var_9 = var_5.ap(var_6)
    var_10 = var_3.ap(bool_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\xedU\x81\xb1]\xa3\xd9\xaa>9\x7f\xae\x8c\xc2\x01\xf4\xb5'"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, dict_0, dict_0]
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_lazy()


def test_case_7():
    tuple_0 = ()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    maybe_0.bind(bool_0)


def test_case_8():
    int_0 = -1640
    int_1 = 548
    maybe_0 = module_0.Maybe(int_0, int_1)
    var_0 = maybe_0.to_either()
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.ap(bool_0)
    var_3 = maybe_0.ap(var_0)
    var_4 = var_0.to_try()
    var_5 = var_1.get_or_else(bool_0)


def test_case_9():
    bytes_0 = b"\x9d9E\xa2s\xb4\xe4\xc1\xf7\xea"
    bytes_1 = b"s\xe1\xe3{\xb3\x05\x11\xa2\xc1\xbb\x99s\xcb8\xc6j\x87C\xe2("
    tuple_0 = (bytes_0, bytes_1)
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.ap(tuple_0)


def test_case_10():
    str_0 = 'D1g\rACY"&*o+9G!G'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.filter(set_0)


def test_case_12():
    bytes_0 = b"\xb7\x8a8=%6\xc9\xdemU=\xf7r\xb9\xb8\x1e}\xca"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    bool_1 = False
    var_0 = maybe_0.to_either()
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.get_or_else(maybe_1)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_1.to_lazy()
    var_5 = var_1.to_try()
    var_5.filter(maybe_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()


def test_case_15():
    int_0 = 1143
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    bool_0 = var_2.__eq__(int_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    int_0 = -1640
    int_1 = 548
    maybe_0 = module_0.Maybe(int_0, int_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.get_or_else(int_1)
    var_3 = var_0.to_lazy()
    var_0.filter(var_3)


def test_case_18():
    bytes_0 = b"f\x99\x19\x06\xc5K\x19\xbb \xbe\x05\xbad"
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    int_0 = 864
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_box()
    var_1.ap(int_0)


def test_case_20():
    str_0 = "5\x0b7_r|$\nw78H~J?p}R`'"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(none_type_0)
    var_4 = maybe_0.get_or_else(var_3)
    var_5 = var_4.filter(var_2)
    var_6 = maybe_0.to_either()
    var_7 = var_2.ap(var_2)
    var_7.to_box()


def test_case_21():
    bool_0 = True
    tuple_0 = (bool_0,)
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    bool_2 = var_0.__eq__(tuple_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, bool_3)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.to_either()
    var_2.to_lazy()


def test_case_22():
    none_type_0 = None
    str_0 = 'D1g\rACY"&*o+9G!G'
    bool_0 = True
    list_0 = [str_0, none_type_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.bind(none_type_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(var_0, maybe_1)
    var_2 = var_0.get_or_else(maybe_2)
    var_3 = var_1.map(none_type_0)
    bool_2 = var_3.__eq__(var_2)
    var_4 = maybe_0.ap(maybe_0)
    var_5 = var_1.to_box()
    var_6 = maybe_0.get_or_else(maybe_2)
    bool_3 = maybe_2.__eq__(bool_0)
    var_7 = maybe_1.to_validation()
    var_8 = var_2.to_try()
    var_7.to_validation()


def test_case_23():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_3 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_4 = maybe_1.to_either()
    bool_1 = maybe_2.__eq__(maybe_2)
    none_type_0 = None
    maybe_0.ap(none_type_0)
