# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_3():
    none_type_0 = None
    str_0 = "#2dc#[?XmN?gh(E"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(str_0)
    var_3 = maybe_0.ap(str_0)
    var_4 = var_3.to_box()
    var_5 = maybe_0.to_either()
    var_6 = var_3.to_lazy()
    var_7 = var_5.to_try()
    var_8 = var_5.ap(str_0)
    bool_1 = var_5.__eq__(none_type_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_0, maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_1.map(maybe_2)
    maybe_0.filter(var_2)


def test_case_5():
    str_0 = "\n    Perform left-to-right function composition.\n\n    :param value: argument of first applied function\n    :type value: Any\n    :param functions: list of functions to applied from left-to-right\n    :type functions: List[Function]\n    :returns: result of all functions\n    :rtype: Any\n    "
    int_0 = 601
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.map(none_type_0)


def test_case_6():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(tuple_0)
    var_3 = var_2.to_either()


def test_case_7():
    str_0 = '}P1"\x0bXI]Q,KL'
    str_1 = "BY8)%m,X<Kd8"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_1, bool_0)
    maybe_0.bind(str_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_9():
    str_0 = ""
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.map(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.ap(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_0.map(var_2)
    var_5 = maybe_0.to_box()
    bool_1 = var_0.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, var_2)
    var_6 = maybe_2.bind(var_2)
    maybe_0.ap(var_5)


def test_case_10():
    float_0 = 1925.053
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1.filter(var_0)


def test_case_11():
    float_0 = 1925.0532
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(float_0)
    var_3 = var_2.get_or_else(var_1)
    var_4 = var_1.map(var_0)
    maybe_1 = module_0.Maybe(var_3, var_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    maybe_2.filter(var_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = var_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    int_0 = 1835
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    str_0 = "&Kh"
    set_0 = {str_0}
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_2.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_2.to_lazy()
    var_2 = var_0.bind(var_1)
    var_3 = maybe_0.to_try()
    var_3.ap(maybe_2)


def test_case_17():
    object_0 = module_1.object()
    set_0 = {object_0, object_0, object_0, object_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bool_0 = False
    list_0 = []
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(list_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.bind(var_0)
    var_4 = maybe_0.to_try()
    var_5 = var_2.map(maybe_0)
    var_6 = var_2.to_try()
    var_4.to_lazy()


def test_case_20():
    str_0 = "G5; {#+~^)"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(str_0)
    var_2 = var_0.to_validation()
    var_3 = var_2.to_try()
    float_0 = -1295.144026
    bool_1 = var_0.__eq__(var_3)
    set_0 = {float_0, float_0, float_0, float_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(set_0)


def test_case_21():
    str_0 = ""
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.map(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.ap(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_0.map(var_2)
    var_5 = maybe_0.to_box()
    bool_1 = var_0.__eq__(none_type_0)
    var_6 = var_0.to_box()
    var_7 = var_2.to_either()
    var_8 = var_3.to_lazy()
    var_9 = var_4.to_try()
    var_10 = var_1.ap(var_2)
    bool_2 = var_4.__eq__(maybe_1)
