# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    complex_0 = 2649 + 3319.26865j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    maybe_1.map(var_0)


def test_case_3():
    bytes_0 = b"]\x91\xaaA\xc4?^v({\xec\xdd\xd0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_1 = maybe_0.bind(maybe_0)
    int_0 = -3701
    var_2 = maybe_0.ap(int_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)


def test_case_4():
    bytes_0 = b"\xd4\x0f]\x85\xc9k\x8a\xbd\xb1J*\xb7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.ap(var_0)
    maybe_1.filter(var_1)


def test_case_5():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    tuple_0 = ()
    tuple_1 = (bool_1, maybe_0, bool_1, tuple_0)
    tuple_2 = (tuple_1, maybe_0, tuple_1)
    maybe_1 = module_0.Maybe(maybe_0, tuple_2)
    var_0 = maybe_1.bind(tuple_1)
    maybe_2 = module_0.Maybe(tuple_2, tuple_2)


def test_case_6():
    bytes_0 = b"KxQ\xff\xa6f\x9bJ\xa4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    str_0 = "S!\t'\"w"
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(str_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.get_or_else(none_type_0)
    var_5 = var_3.to_lazy()
    var_4.to_box()


def test_case_8():
    float_0 = 1346.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_9():
    int_0 = 871
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_10():
    int_0 = 1
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(int_0, int_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    bytes_0 = b"\xcdE\xba\xa3\x8a\xe5\x14\x1a\x19\x8e\xd3G"
    maybe_2 = module_0.Maybe(var_0, bytes_0)
    maybe_0.map(bytes_0)


def test_case_12():
    bytes_0 = b"\x94Bb\xde"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_13():
    bytes_0 = b"\xd4\x0f]\xc9k\x8a\xe3\xb1J*\xb7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.ap(var_0)
    maybe_1.filter(var_2)


def test_case_14():
    none_type_0 = None
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.map(none_type_0)
    var_3 = var_0.to_box()
    var_1.filter(var_3)


def test_case_15():
    str_0 = "!}u\x0ci_O:\x0bX"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.bind(str_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.to_box()
    var_5 = var_2.get_or_else(var_4)
    var_6 = var_1.bind(bool_0)


def test_case_16():
    bytes_0 = b"\xe3\xee\xcd"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_1.__eq__(bytes_0)
    var_2 = maybe_1.to_validation()
    maybe_1.map(var_2)


def test_case_17():
    float_0 = -2462.669773
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(float_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    bytes_0 = b"\x86\xd7\xe3"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.map(var_2)
