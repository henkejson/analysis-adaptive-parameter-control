# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.map(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(var_0)
    bool_1 = var_0.__eq__(none_type_0)
    var_2 = maybe_0.to_try()
    bool_2 = var_2.__eq__(var_2)
    var_3 = maybe_0.map(var_2)
    var_4 = var_2.get_or_else(none_type_0)
    bool_3 = maybe_0.__eq__(var_4)
    var_5 = maybe_0.to_validation()
    var_4.to_box()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.map(var_0)


def test_case_5():
    float_0 = 2348.2395
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = var_0.to_try()
    var_4 = maybe_0.filter(bool_0)
    maybe_1.filter(var_2)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)


def test_case_7():
    float_0 = 2348.2395
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(bool_0)
    maybe_1.filter(var_1)


def test_case_8():
    bytes_0 = b"z9/\x15\x80\x15\xcc-\xd6"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_9():
    bytes_0 = b"4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_validation()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_11():
    float_0 = 323.48
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.get_or_else(float_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.get_or_else(bool_0)
    var_2.to_validation()


def test_case_12():
    str_0 = '#3x* \x0b_."@w'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_14():
    bool_0 = True
    float_0 = 653.01
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(float_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.ap(float_0)
    var_2.ap(bool_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.get_or_else(bool_0)


def test_case_16():
    float_0 = 2348.2395
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(bool_1)
    maybe_1.filter(bool_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_19():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(list_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_2.filter(bool_0)


def test_case_20():
    generic_0 = module_1.Generic()
    tuple_0 = (generic_0, generic_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(tuple_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(var_0)
    bool_1 = var_0.__eq__(none_type_0)
    var_2 = maybe_0.to_try()
    bool_2 = var_2.__eq__(var_2)
    var_3 = maybe_0.map(var_2)
    var_4 = var_1.to_box()
    bool_3 = var_3.__eq__(var_1)
    var_5 = var_3.to_lazy()
    var_6 = maybe_0.to_box()
    var_0.bind(none_type_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = var_0.ap(maybe_1)
    var_2 = var_1.bind(var_1)
    var_3 = var_2.to_either()
    var_4 = var_2.to_try()
    maybe_2 = module_0.Maybe(var_1, var_3)
    var_5 = maybe_2.get_or_else(bool_0)
    bool_1 = var_1.__eq__(var_1)
    maybe_3 = module_0.Maybe(var_3, var_3)
    bool_2 = True
    float_0 = 1871.311
    var_6 = maybe_1.map(float_0)
    maybe_4 = module_0.Maybe(bool_2, var_0)
    bool_3 = var_1.__eq__(maybe_0)
    var_7 = maybe_4.to_either()
    var_8 = maybe_1.to_either()
    bool_4 = True
    maybe_5 = module_0.Maybe(var_7, var_4)
    var_9 = maybe_3.ap(maybe_1)
    var_10 = maybe_5.to_lazy()
    var_11 = maybe_2.ap(var_9)
    var_12 = var_2.bind(bool_4)
    var_13 = var_3.map(var_8)
    var_14 = var_13.bind(var_3)
