# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 3926
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = ":+z*op%|+a\x0bVud"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_0.map(bool_0)


def test_case_3():
    str_0 = ":+z*op%|+a\x0bVud"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_try()


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    list_0 = [none_type_2, none_type_2]
    maybe_0 = module_0.Maybe(none_type_2, list_0)
    var_0 = maybe_0.map(none_type_1)
    var_1 = var_0.ap(none_type_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = ":+z*op%|+a\x0bVud"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.bind(var_2)
    var_4 = var_1.filter(var_0)
    var_5 = var_1.get_or_else(str_0)


def test_case_7():
    complex_0 = -767.549 - 1257.934j
    int_0 = 832
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.bind(complex_0)


def test_case_8():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_0.ap(set_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b'\xe27\xc0\x04u~\xde\xce"\x05\xca'
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(none_type_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_0.ap(maybe_0)
    var_4 = var_2.to_try()
    var_5 = var_0.map(var_2)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_0.to_try()


def test_case_12():
    int_0 = 3926
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    str_0 = ":+z*op%|+a\x0bVud"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_2 = maybe_1.to_box()
    var_2.filter(bool_1)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    bool_1 = var_1.__eq__(none_type_0)
    var_2 = var_0.to_box()
    var_0.filter(var_0)


def test_case_15():
    float_0 = -3357.0
    none_type_0 = None
    float_1 = 2039.789653
    bool_0 = False
    maybe_0 = module_0.Maybe(float_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(float_0)
    var_2 = var_0.to_box()
    var_3 = var_1.bind(var_0)
    var_4 = var_2.to_validation()
    var_4.filter(none_type_0)


def test_case_16():
    bool_0 = False
    bytes_0 = b'\xe27\xc0\x04u~\xde\xce"\x05\xca'
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)


def test_case_17():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    complex_0 = -2087.76 - 2989.605222j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_19():
    bool_0 = True
    bool_0.to_box()


def test_case_20():
    str_0 = ":+z*op%|+a\x0bVud"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_2, bool_1)
    bool_3 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_0.ap(bool_3)
    bool_4 = var_0.__eq__(bool_0)
    bool_5 = var_0.__eq__(maybe_0)
    var_1 = maybe_1.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.to_validation()
    var_4 = var_0.to_validation()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_validation()
    bool_0 = maybe_1.__eq__(maybe_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = var_3.to_either()
    var_6 = var_5.to_box()
    var_1.filter(var_6)
