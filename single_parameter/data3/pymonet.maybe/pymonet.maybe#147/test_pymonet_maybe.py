# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_3():
    complex_0 = 326.935958 + 128.22j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(complex_0)


def test_case_4():
    str_0 = "Try[value={}, is_success={}]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_either()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()
    maybe_0.map(var_2)


def test_case_6():
    int_0 = -897
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_try()
    bool_0 = maybe_0.__eq__(var_1)
    bool_1 = var_0.__eq__(var_1)
    var_2 = maybe_0.to_try()
    var_3 = var_0.to_lazy()


def test_case_7():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_8():
    float_0 = -837.0997
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(bool_0)
    var_3 = maybe_1.bind(var_1)
    var_4 = var_2.to_either()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_lazy()
    var_7 = maybe_1.to_try()
    var_8 = var_3.ap(none_type_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_0.ap(bool_1)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_0)
    var_0.filter(var_1)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_12():
    bytes_0 = b"F\xda\x91\xf4\xe5\xb2\xdc\x00j\x05\xde\x11\xd9"
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.to_lazy()


def test_case_13():
    float_0 = -1207.95186
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_lazy()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    bool_1 = var_1.__eq__(var_1)
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    maybe_1.filter(var_1)


def test_case_15():
    bytes_0 = b"Z\x9e\x7f\xa4\xbe\x9aD$\xf6i\xcb\x00"
    str_0 = "3twrup_BilY]1;jBRR"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -2527.9324
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_0.filter(var_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_lazy()


def test_case_18():
    int_0 = 1075
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_try()
    var_1.ap(none_type_0)


def test_case_19():
    bytes_0 = b"kGy\xdf\x90"
    str_0 = "1$d,(2Qv\"(F'&9a q&"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bytes_0)
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_20():
    float_0 = -837.0997
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, float_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = module_0.Maybe(maybe_0, var_1)
    bool_1 = var_1.__eq__(bool_0)
    bool_2 = maybe_1.__eq__(var_2)
    var_3 = maybe_1.bind(var_1)
    var_4 = var_2.to_either()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_lazy()
    var_7 = maybe_1.to_try()
    var_8 = var_3.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(none_type_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_1.to_either()
    var_4 = var_1.to_validation()
    var_5 = maybe_0.to_lazy()
    var_4.bind(var_0)
