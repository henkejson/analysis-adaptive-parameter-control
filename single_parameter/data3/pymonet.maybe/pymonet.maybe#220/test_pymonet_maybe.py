# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(bool_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.bind(var_0)
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_0.to_box()
    var_6 = maybe_0.to_try()
    float_0 = -650.0
    tuple_0 = (var_1, float_0)
    maybe_2 = module_0.Maybe(tuple_0, bool_1)
    var_7 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(var_5)
    bool_3 = maybe_0.__eq__(none_type_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_8 = maybe_3.get_or_else(var_0)


def test_case_4():
    int_0 = 3192
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_1.map(none_type_0)
    var_1 = var_0.to_try()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_0.filter(none_type_0)
    var_4 = var_3.bind(var_0)
    var_5 = maybe_1.to_try()
    var_6 = var_3.get_or_else(var_5)
    maybe_2.filter(var_1)


def test_case_5():
    int_0 = -251
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = True
    bytes_0 = b"\rY\x98\xf1\xf4O\x14\xc1\x1c8\xeaB\xa5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_9():
    bytes_0 = b"\x9c\x15\xd8\xdf\x14\x0f\x89\xbaWY1\xba\xef\x82\xe4F\xcc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    bytes_0 = b"\x8eL\xc3\x1dM\xbd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_13():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_14():
    int_0 = -3504
    float_0 = 1189.0
    list_0 = [int_0, float_0, float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_0.bind(var_1)


def test_case_16():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()


def test_case_17():
    int_0 = -575
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(int_0)


def test_case_18():
    str_0 = "H7U\nG>a~d7)s@"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(str_0)
    var_3 = var_2.ap(none_type_0)
    var_4 = maybe_0.to_box()
    var_5 = var_3.to_try()
    var_6 = var_3.to_lazy()
    var_7 = var_6.bind(var_5)
    var_8 = var_7.to_try()
    maybe_1 = module_0.Maybe(var_0, var_2)
    var_9 = var_2.ap(bool_0)
    bool_1 = maybe_0.__eq__(var_3)
    var_10 = var_6.ap(var_4)
    var_11 = var_5.filter(var_10)
    var_12 = var_9.ap(var_2)
    var_13 = maybe_1.to_either()
    var_14 = var_8.get_or_else(var_10)


def test_case_19():
    int_0 = 3192
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.map(int_0)
    var_3 = var_1.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = var_2.to_try()
    var_5 = maybe_1.to_either()
    var_6 = var_2.to_lazy()
    var_7 = var_4.filter(var_6)
    maybe_2 = module_0.Maybe(none_type_0, var_7)
    var_8 = maybe_0.ap(maybe_1)
    var_9 = var_1.bind(var_2)
    var_10 = var_5.ap(var_6)
    var_11 = maybe_0.to_try()
    var_12 = var_7.get_or_else(var_8)
    var_13 = var_3.filter(var_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = var_8.__eq__(maybe_2)
    var_14 = var_13.map(var_12)
    maybe_1.filter(var_8)
