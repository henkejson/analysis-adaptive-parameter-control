# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 640
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    complex_0 = 1039.425952 - 2397.3j
    tuple_0 = ()
    list_0 = [tuple_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    bytes_0 = b"\x8cB\xca\x1cf\x1d\x19\xa6\xdb\xa0\xbbn\x1f\xf2\xfa\x8e\xb9"
    var_0.filter(bytes_0)


def test_case_3():
    float_0 = -2253.5
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.ap(float_0)
    var_2 = var_1.ap(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_3 = var_0.map(var_2)


def test_case_4():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(dict_0)


def test_case_5():
    bytes_0 = b"w\t\x13\n\xa5\xfa\xd6\xe3\xdb\xf6\xe7\xb8\x18"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    str_0 = "5V*"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.ap(str_0)
    var_5 = var_4.bind(str_0)
    bool_0 = True
    var_6 = var_5.ap(var_2)
    maybe_2 = module_0.Maybe(str_0, bool_0)


def test_case_6():
    complex_0 = 1039.425952 - 2397.3j
    tuple_0 = ()
    list_0 = [tuple_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_lazy()
    maybe_1.bind(var_0)


def test_case_7():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    int_0 = -4620
    bool_0 = False
    none_type_1 = None
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.get_or_else(none_type_1)
    maybe_1.ap(bool_0)


def test_case_8():
    bytes_0 = b"w\t\x13\n\xa5\xfa\xd6\xe3\xdb\xf6\xe7\xb8\x18"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    str_0 = "5V*"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.ap(str_0)
    var_5 = var_1.ap(var_1)
    var_6 = maybe_1.filter(var_0)
    var_7 = var_4.map(var_4)
    var_0.to_try()


def test_case_9():
    none_type_0 = None
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    dict_0 = {}
    float_0 = -169.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)


def test_case_11():
    str_0 = "R\tr@Ls.C0y/?2G{-bh?s"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    bool_1 = var_2.__eq__(str_0)
    bool_2 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_3 = maybe_1.get_or_else(str_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    maybe_3 = module_0.Maybe(str_0, bool_2)
    bool_3 = maybe_3.__eq__(maybe_3)
    var_4 = maybe_2.to_try()


def test_case_12():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    var_1.filter(var_1)


def test_case_14():
    bytes_0 = b"\xf5\x04\x8ed\xca\xf2t\x14aBT"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(bytes_0, list_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_1.get_or_else(maybe_0)
    bool_0 = var_0.__eq__(var_0)
    dict_0 = {bytes_0: bool_0}
    maybe_2 = module_0.Maybe(var_0, dict_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.ap(maybe_2)
    var_3 = maybe_2.get_or_else(maybe_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_2.get_or_else(dict_0)
    var_6 = var_3.map(dict_0)
    var_7 = var_0.to_either()


def test_case_15():
    bytes_0 = b"\xd3za\x96\x82\xa7\xe2`"
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_validation()
    bool_1 = var_1.__eq__(maybe_1)
    none_type_2 = None
    var_2 = var_1.to_try()
    var_3 = maybe_1.ap(none_type_2)
    var_4 = maybe_0.to_try()
    var_5 = var_3.ap(none_type_2)
    var_6 = var_3.filter(var_0)
    var_7 = maybe_1.map(var_5)
    var_8 = var_2.get_or_else(maybe_0)
    var_0.to_box()


def test_case_16():
    bytes_0 = b"\x8e\xa5\xab\xdc0\x91\x97\xb5T\x9bD\xdahpT\x19\xa5\xb0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(var_0)


def test_case_17():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    int_0 = 1
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_box()
    var_3.to_box()


def test_case_18():
    bool_0 = False
    int_0 = -683
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    var_1.to_validation()


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(tuple_0)


def test_case_20():
    bytes_0 = b"\xf5\x04\x8ed\xca\xf2t\x14aBT"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(maybe_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_2.get_or_else(maybe_0)
    tuple_0 = (var_0,)
    bool_1 = maybe_2.__eq__(maybe_1)
    bool_2 = var_2.__eq__(var_2)
    dict_0 = {bytes_0: bool_2}
    maybe_3 = module_0.Maybe(bool_0, dict_0)
    var_3 = var_0.bind(tuple_0)
    var_4 = maybe_3.to_box()
    var_5 = var_2.ap(maybe_3)
    var_6 = maybe_3.get_or_else(maybe_0)
    var_7 = var_2.get_or_else(none_type_0)
    maybe_4 = module_0.Maybe(bool_2, var_6)
    var_8 = maybe_0.bind(var_5)
    var_9 = maybe_3.to_try()
    var_10 = maybe_3.map(var_9)
    var_11 = var_0.bind(dict_0)
    var_9.ap(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)
