# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_0.ap(none_type_0)


def test_case_3():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.bind(bool_1)
    var_1 = var_0.map(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(dict_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.get_or_else(dict_0)
    var_3 = maybe_0.to_box()
    var_4 = var_3.to_lazy()
    maybe_3 = module_0.Maybe(maybe_2, bool_1)
    var_5 = var_4.to_either()
    var_6 = maybe_0.bind(var_4)
    var_7 = maybe_3.to_box()
    var_8 = var_5.to_lazy()
    tuple_0 = (bool_0, dict_0, dict_0, var_8)
    maybe_4 = module_0.Maybe(bool_0, tuple_0)
    var_9 = maybe_4.to_try()
    complex_0 = -2073.24793 + 1563.3129j
    var_10 = var_5.to_try()
    none_type_1 = None
    var_11 = var_4.to_either()
    var_12 = maybe_0.to_lazy()
    maybe_5 = module_0.Maybe(none_type_1, none_type_1)
    maybe_5.map(complex_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.ap(maybe_0)
    var_1.get_or_else(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    bytes_0 = b""
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.filter(bytes_0)


def test_case_9():
    bool_0 = True
    int_0 = -882
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_2 = var_0.bind(var_1)
    var_3 = var_0.to_lazy()
    var_4 = var_2.to_box()
    var_5 = var_0.ap(var_4)
    var_1.to_lazy()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    int_0 = 1
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    var_4 = maybe_1.to_lazy()
    var_3.to_try()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_14():
    int_0 = -393
    tuple_0 = (int_0, int_0)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(int_0)
    var_4 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, tuple_0)
    var_5 = maybe_0.to_try()
    bool_0 = False
    maybe_2 = module_0.Maybe(var_5, bool_0)
    var_6 = maybe_0.bind(var_5)
    var_7 = var_5.get_or_else(var_5)


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_16():
    int_0 = -382
    tuple_0 = (int_0, int_0)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.filter(var_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_4 = var_3.ap(var_1)
    var_5 = var_3.get_or_else(var_3)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    maybe_1.filter(var_0)


def test_case_17():
    int_0 = -382
    tuple_0 = (int_0, int_0)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_lazy()
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_validation()
    var_5 = var_0.filter(var_0)
    var_6 = var_2.to_validation()
    bool_0 = var_0.to_box()
    var_7 = var_0.to_lazy()
    bool_1 = var_0.__eq__(var_4)
    var_8 = var_0.bind(var_3)
    var_9 = var_8.filter(var_3)
    var_10 = var_5.to_box()
    var_11 = var_5.ap(bool_1)
    bool_2 = var_6.__eq__(var_5)
    var_12 = var_11.ap(var_7)
    var_13 = var_5.get_or_else(var_9)
    bool_3 = False
    maybe_1 = module_0.Maybe(var_3, bool_3)
    maybe_1.filter(var_2)


def test_case_18():
    bytes_0 = b"\x9d\xcf$\x10\xf6>,\x1d\x86\xdd\xff\xb4\x9c"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(set_0)


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.ap(var_0)
