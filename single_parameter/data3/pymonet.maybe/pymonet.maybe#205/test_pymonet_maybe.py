# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    str_0 = "YskvwB6\x0b6uwj;3ZS"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x17g\x9c\xf6\xb0xiA"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.to_validation()
    var_1.to_validation()


def test_case_3():
    int_0 = 1828
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_1.to_box()
    bool_2.get_or_else(none_type_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = var_2.bind(bool_0)
    maybe_1.filter(var_1)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_either()
    maybe_1.bind(var_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    list_0 = [maybe_0, maybe_0, none_type_0]
    var_0 = maybe_0.get_or_else(list_0)
    maybe_0.filter(var_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(maybe_0)
    var_3 = maybe_0.filter(bool_0)
    var_4 = maybe_0.to_validation()
    bool_1 = var_4.__eq__(var_4)
    var_5 = var_1.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    maybe_1.filter(bool_0)


def test_case_10():
    bytes_0 = b"\xeb\xe3\xcd"
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    int_0 = 856
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(var_1)


def test_case_13():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_1.get_or_else(var_1)


def test_case_14():
    generic_0 = module_2.Generic()
    bytes_0 = b"\xcf0"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.map(var_0)


def test_case_15():
    int_0 = 239
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)


def test_case_16():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_0, bool_1}
    bool_2 = False
    maybe_0 = module_0.Maybe(set_0, bool_2)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_lazy()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"|>\xbe\x1bc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_box()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(maybe_0)


def test_case_19():
    bytes_0 = b"\xf8\x8c\xfe \xff\xbcH\xf3\xc4!U!\x15\x8b\x8d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_validation()
    var_5 = var_3.to_either()
    var_4.bind(var_1)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_validation()
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = var_0.bind(var_0)
    maybe_0.bind(maybe_0)


def test_case_21():
    str_0 = "qre&,td<tY7U"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.to_validation()
    int_0 = 627
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_2.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(maybe_2, bool_1)
    maybe_2.bind(int_0)
