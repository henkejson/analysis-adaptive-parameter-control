# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xea\xa2\xcf\xb5\x99\x1c\x13"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = var_1.bind(none_type_0)
    bool_1 = var_1.__eq__(maybe_0)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_0.map(bool_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1278
    set_0 = {int_0, int_0}
    var_0 = maybe_0.to_either()
    int_1 = -1138
    maybe_1 = module_0.Maybe(set_0, int_1)
    var_1 = maybe_1.bind(none_type_0)
    bool_0 = True
    bool_1 = var_0.__eq__(bool_0)
    var_2 = maybe_1.to_box()
    maybe_0.map(var_2)


def test_case_5():
    float_0 = 3290.943288
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.bind(none_type_0)
    var_1 = var_0.filter(maybe_0)


def test_case_6():
    bool_0 = False
    bytes_0 = b"_u\x1e\xd5\x13\xac\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_8():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    int_0 = 0
    str_0 = "\"p=,'7d\\"
    list_0 = [str_0]
    tuple_0 = (int_0, int_0, int_0, list_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(none_type_1)


def test_case_11():
    float_0 = -1266.092
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    none_type_0 = None
    str_0 = "lJ,jx\rO\n5ig+eI"
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.filter(none_type_0)


def test_case_12():
    int_0 = 913
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_13():
    str_0 = "U|M`"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_0.map(var_0)


def test_case_14():
    float_0 = 80.138965
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    str_0 = "Box[U]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_1, bool_0)
    maybe_3 = module_0.Maybe(maybe_2, none_type_1)
    maybe_3.filter(str_0)


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    int_0 = -1278
    set_0 = {int_0, int_0}
    var_1 = maybe_0.to_either()
    int_1 = -1138
    maybe_1 = module_0.Maybe(set_0, int_1)
    var_2 = maybe_1.bind(none_type_0)
    bool_0 = True
    bool_1 = var_1.__eq__(bool_0)
    var_3 = maybe_1.to_box()
    maybe_0.map(var_3)


def test_case_20():
    str_0 = "\n/,x<CRE^s}da?/k\x0b~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()


def test_case_21():
    none_type_0 = None
    bytes_0 = b"$\xc1\x98\xa5NuI\x81a\xad\xc1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = maybe_0.get_or_else(none_type_0)
    var_5 = maybe_0.get_or_else(bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_6 = var_1.to_lazy()
    var_7 = var_1.to_validation()
    var_8 = var_1.filter(maybe_0)
    var_9 = var_2.ap(var_1)
    var_10 = maybe_0.map(var_6)


def test_case_22():
    none_type_0 = None
    bytes_0 = b"$\xc1\x98\xa5NuI\x81a\xad\xc1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_0.to_either()
    var_4 = maybe_0.get_or_else(var_2)
    var_5 = maybe_0.get_or_else(none_type_0)
    var_6 = maybe_0.get_or_else(var_0)
    var_7 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_5, var_6)
    var_8 = var_3.to_try()
    var_9 = var_3.to_validation()
    var_3.filter(var_7)


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.ap(bool_1)
    float_0 = 2081.51184
    var_1 = var_0.ap(float_0)
    var_2 = var_1.get_or_else(maybe_1)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.to_try()
    var_5 = maybe_1.filter(var_3)
    var_6 = var_2.ap(var_0)
    var_3.to_validation()
