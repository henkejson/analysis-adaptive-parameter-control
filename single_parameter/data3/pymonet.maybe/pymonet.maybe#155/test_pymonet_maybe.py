# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xe2\xa6\xc7\xff4\x0eZg"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    bool_1 = var_0.to_either()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_1.bind(var_0)
    maybe_2 = maybe_1.to_either()
    bool_3 = var_0.__eq__(none_type_0)
    maybe_3 = module_0.Maybe(none_type_0, maybe_2)
    var_2 = maybe_3.to_lazy()
    var_2.get_or_else(bool_1)


def test_case_3():
    bytes_0 = b"\xe2\xb3\xc7\xff4\x0eZ"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(dict_0)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.filter(bytes_0)


def test_case_4():
    bytes_0 = b"\xe2\xb3\xc7\xff4\x0eZ"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.filter(bytes_0)


def test_case_5():
    bytes_0 = b"\xe2\xa6\xc7\xff4\x0eZg"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(bool_0)
    bool_1 = var_1.__eq__(bytes_0)
    var_2 = maybe_0.ap(dict_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    bool_2 = var_0.__eq__(dict_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_2.to_lazy()
    var_4 = var_1.get_or_else(var_0)
    maybe_2.map(var_3)


def test_case_6():
    bool_0 = True
    set_0 = {bool_0}
    bytes_0 = b"\x8b\xd8g\x8f\xa5\x19\x04\xa0\x83\x13\xff\xb4\x19\xbe#"
    set_1 = set()
    bool_1 = True
    maybe_0 = module_0.Maybe(set_1, bool_1)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(set_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    bytes_0 = b"\xe2\xb3\xc7\xff4\x0eZ"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(dict_0)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.filter(var_2)


def test_case_9():
    object_0 = module_1.object()
    none_type_0 = None
    maybe_0 = module_0.Maybe(object_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    float_0 = 2812.20823
    bool_0 = True
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_2 = maybe_1.filter(float_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_0.filter(none_type_1)


def test_case_12():
    complex_0 = 2 - 1093.862j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(complex_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(var_1)
    var_3 = maybe_0.get_or_else(complex_0)
    var_4 = maybe_0.ap(complex_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_5 = maybe_1.map(var_4)
    var_6 = maybe_1.map(var_1)
    var_7 = maybe_0.to_validation()
    var_3.to_box()


def test_case_13():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(set_0)
    var_0.get_or_else(maybe_0)


def test_case_14():
    bytes_0 = b"\xc3gMZ\xd6"
    bool_0 = True
    bytes_1 = b"\xa8\xe2\xf1\xefo\xc9\x8b\xcf<"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(bytes_1)
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_3 = maybe_2.to_validation()


def test_case_15():
    str_0 = "P=_sT!)mDTq{M\n\x0c\x0bj1"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_16():
    int_0 = 3778
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    bytes_0 = b"\xe2\xa6\xc7\xff4\x0eZg"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(bool_0)
    bool_1 = var_1.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    bool_2 = var_0.__eq__(dict_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.ap(dict_0)
    var_4 = maybe_0.to_lazy()


def test_case_18():
    bytes_0 = b"\x90\xa3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = maybe_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_19():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_21():
    bytes_0 = b"\xe2\xb3\xc7\xff4\x0eZ"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    bool_1 = maybe_0.__eq__(dict_0)
    var_4 = var_0.to_box()
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.filter(bool_1)


def test_case_22():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_23():
    str_0 = 'i"@kdw =inefBV\x0b'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(str_0)
    var_2 = var_1.to_lazy()
    bool_0 = maybe_0.__eq__(var_1)
    var_3 = var_2.to_box()
    var_2.get_or_else(var_2)


def test_case_24():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    generic_0 = module_2.Generic()
    bool_2 = maybe_0.__eq__(generic_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    maybe_0.bind(maybe_0)
