# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_1.Maybe(dict_0, dict_0)


def test_case_2():
    str_0 = '^(tfLm\r#XO.P^"r\tF4'
    bool_0 = True
    int_0 = -2231
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, str_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(int_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_1 = module_1.Maybe(int_0, int_0)
    var_2 = maybe_1.map(bool_1)
    var_3 = var_2.get_or_else(bool_0)
    var_3.to_validation()


def test_case_3():
    str_0 = "Try[value={}, is_success={}]"
    maybe_0 = module_1.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(var_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_validation()
    var_5 = var_0.to_either()
    var_6 = var_4.to_try()
    var_7 = var_2.to_try()
    var_7.to_lazy()


def test_case_4():
    bool_0 = True
    dict_0 = {}
    generic_0 = module_0.Generic(**dict_0)
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.to_box()
    bool_1 = False
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.bind(bool_0)
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    bool_1 = var_2.__eq__(maybe_1)
    var_3 = maybe_1.bind(dict_0)
    var_4 = var_3.to_either()
    var_4.get_or_else(none_type_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)


def test_case_8():
    generic_0 = module_0.Generic()
    set_0 = {generic_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_1.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.ap(set_0)
    var_1 = var_0.to_either()


def test_case_9():
    str_0 = "=2:F^9U~pv2\r8HAZJ"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(str_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_11():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    maybe_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_box()
    var_3 = var_2.to_lazy()
    bool_1 = False
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(bool_0)


def test_case_17():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    bool_2 = True
    maybe_2 = module_1.Maybe(bool_0, bool_2)
    none_type_0 = None
    maybe_3 = module_1.Maybe(none_type_0, none_type_0)
    var_3 = maybe_3.to_lazy()
    maybe_4 = module_1.Maybe(none_type_0, none_type_0)
    maybe_4.ap(list_0)


def test_case_18():
    float_0 = 1940.0
    list_0 = [float_0]
    bool_0 = True
    maybe_0 = module_1.Maybe(list_0, bool_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.to_try()
    dict_0 = {}
    module_0.Generic(*list_0, **dict_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    float_0 = 2246.0
    maybe_0 = module_1.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(var_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()


def test_case_22():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_0.to_box()
    bool_1 = False
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_23():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    dict_0 = {}
    generic_0 = module_0.Generic(**dict_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(generic_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    bytes_0 = b"\x81aF\x11\x9a\x13|NX\xdc\xaaO\x1f\x88\xe2|\x01\x0b"
    var_4 = maybe_1.bind(bytes_0)
    var_5 = maybe_1.filter(bool_0)
    var_6 = var_5.to_lazy()
    var_3.get_or_else(var_4)


def test_case_24():
    str_0 = "<4zQnI|g\x0c4}w~~%}\r"
    bool_0 = True
    int_0 = -2231
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, str_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(int_0)
    var_2 = var_0.to_box()
    bool_1 = var_0.__eq__(var_0)
    maybe_1 = module_1.Maybe(int_0, int_0)
    bool_2 = maybe_1.__eq__(var_1)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_2.to_lazy()
    var_4.filter(bool_0)


def test_case_25():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    bytes_0 = b"\x81aF\x11\x9a\x13|NX\xdc\xaaO\x1f\x88\xe2|\x01\x0b"
    var_4 = maybe_1.bind(bytes_0)
    var_5 = maybe_1.filter(bool_0)
    var_6 = var_5.to_lazy()
    var_7 = var_3.to_either()
    none_type_0 = None
    var_8 = var_3.to_validation()
    var_9 = maybe_1.map(maybe_1)
    var_10 = maybe_1.to_lazy()
    var_11 = maybe_1.bind(none_type_0)
    var_12 = var_10.map(var_6)
    var_13 = var_5.to_box()
    var_14 = var_9.to_validation()
    var_15 = var_1.to_either()
    var_16 = maybe_0.to_box()
    maybe_2 = module_1.Maybe(var_9, var_11)
    var_17 = var_13.to_either()
    bool_3 = var_4.__eq__(maybe_2)
    var_18 = var_9.filter(var_7)
    var_19 = var_6.bind(var_13)
    var_20 = maybe_0.to_validation()
    var_21 = var_17.to_box()
