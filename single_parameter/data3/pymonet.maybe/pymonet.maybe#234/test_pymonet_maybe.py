# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -1612.5
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_0)
    maybe_0.filter(var_0)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    float_0 = -1612.5
    maybe_1 = module_0.Maybe(float_0, float_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_2 = maybe_1.filter(maybe_0)
    maybe_0.filter(maybe_1)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.map(none_type_0)
    var_4 = var_3.bind(none_type_0)
    var_5 = var_4.to_box()
    var_6 = var_5.to_validation()
    var_6.filter(none_type_0)


def test_case_5():
    int_0 = 434
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    tuple_0 = ()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    maybe_0.bind(bool_0)


def test_case_7():
    int_0 = -365
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    bool_0 = False
    int_1 = 1
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_1.get_or_else(int_1)
    maybe_2 = module_0.Maybe(int_0, bool_0)
    maybe_2.ap(int_0)


def test_case_8():
    bytes_0 = b"\xe7\xe4\xb0f"
    str_0 = "DR;1n*k\x0bY/b.T"
    maybe_0 = module_0.Maybe(str_0, str_0)
    list_0 = [maybe_0, str_0, maybe_0]
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.get_or_else(list_0)
    maybe_2 = module_0.Maybe(var_2, none_type_0)
    var_3 = maybe_2.get_or_else(bytes_0)
    maybe_3 = module_0.Maybe(none_type_0, var_2)
    var_4 = maybe_2.to_either()
    var_3.to_try()


def test_case_9():
    complex_0 = -3215.230186 + 273.422j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(complex_0)


def test_case_10():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(generic_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.get_or_else(bool_0)


def test_case_12():
    int_0 = -111
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_1.to_lazy()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    float_0 = -1612.5
    maybe_1 = module_0.Maybe(float_0, float_0)
    maybe_2 = module_0.Maybe(bool_0, var_1)
    bool_2 = maybe_2.__eq__(maybe_1)
    bool_3 = var_1.__eq__(maybe_1)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.filter(maybe_0)
    var_5 = maybe_0.to_lazy()
    maybe_0.filter(var_3)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_15():
    float_0 = -1612.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()


def test_case_16():
    float_0 = 2455.639
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_2 = maybe_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_17():
    str_0 = "\x0b4_k2gm"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.filter(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_2.filter(maybe_1)
    var_5 = var_3.to_either()


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_1.to_try()
    maybe_0.ap(none_type_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(bool_0)
    float_0 = -1612.5
    maybe_1 = module_0.Maybe(float_0, float_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.filter(maybe_0)
    maybe_0.filter(bool_0)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    float_0 = -1612.5
    maybe_1 = module_0.Maybe(float_0, float_0)
    maybe_2 = module_0.Maybe(bool_0, var_1)
    bool_2 = maybe_2.__eq__(maybe_1)
    var_2 = maybe_0.to_either()
    var_3 = maybe_1.filter(maybe_0)
    maybe_0.filter(var_2)
