# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "++U8"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 392.51
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(var_2, var_2)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_3 = var_0.to_either()
    var_4 = var_1.to_box()
    var_5 = maybe_2.ap(bool_0)
    var_6 = maybe_2.map(var_1)
    var_7 = var_0.map(var_3)
    var_8 = var_6.to_box()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(var_3)
    var_6 = var_2.to_try()
    var_7 = maybe_0.to_try()
    var_8 = maybe_0.to_lazy()
    var_4.get_or_else(var_3)


def test_case_4():
    int_0 = 1721
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_2.map(var_2)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    maybe_1.filter(var_3)


def test_case_5():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(list_0)


def test_case_6():
    int_0 = 1721
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.filter(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(var_1)


def test_case_7():
    float_0 = 3082.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.bind(float_0)


def test_case_8():
    float_0 = 392.51
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.to_try()
    var_2.to_try()


def test_case_9():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    complex_0 = -3019.72 - 549.8439j
    bool_1 = False
    var_0 = maybe_0.to_either()
    bool_2 = True
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.get_or_else(complex_0)
    var_3 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(complex_0, bool_1)
    none_type_0 = None
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_3.to_either()
    var_5 = maybe_3.to_box()
    var_6 = maybe_2.get_or_else(var_4)
    var_7 = maybe_3.to_try()
    var_8 = var_1.bind(var_0)
    maybe_3.ap(maybe_3)


def test_case_10():
    bytes_0 = b"\xfe"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_12():
    int_0 = 1721
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.filter(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_4 = var_3.to_either()
    maybe_1.filter(var_4)


def test_case_13():
    str_0 = ":EzQ3"
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.bind(str_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_2.filter(var_0)


def test_case_15():
    str_0 = "yl"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(tuple_0)


def test_case_17():
    int_0 = 1739
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_2.map(var_2)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    maybe_1.filter(var_3)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(bool_0)
    var_3 = var_2.to_try()
    var_4 = var_3.filter(none_type_0)
    var_3.to_try()


def test_case_19():
    int_0 = 1721
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_2.map(var_2)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_6 = var_1.to_either()
    maybe_1.filter(var_6)


def test_case_20():
    int_0 = 1721
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = maybe_0.to_validation()
    bool_0 = var_2.__eq__(var_2)
    var_6 = var_2.map(var_2)
    var_7 = var_2.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_5, bool_1)
    var_8 = var_1.to_either()
    var_9 = var_6.ap(bool_1)
    maybe_1.filter(bool_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1.ap(var_0)
