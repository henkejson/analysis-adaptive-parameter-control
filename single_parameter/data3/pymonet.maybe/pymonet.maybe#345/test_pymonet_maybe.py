# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 2389.0
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    float_0 = 2389.0
    none_type_0 = None
    complex_0 = -1654.272178 - 2279j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(float_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_box()
    var_5 = var_2.to_either()
    var_6 = var_5.to_try()
    var_7 = maybe_0.filter(none_type_0)
    bool_0 = var_1.__eq__(var_4)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    str_0 = "o"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(maybe_0, var_1)
    var_2 = var_1.filter(var_1)
    var_3 = maybe_1.ap(maybe_0)
    var_4 = var_3.map(none_type_0)
    var_5 = var_0.ap(bool_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    str_0 = "o"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.to_try()
    maybe_0.map(var_2)


def test_case_5():
    float_0 = 2389.0
    none_type_0 = None
    complex_0 = -1654.272178 - 2279j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.filter(float_0)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.filter(var_1)
    var_6 = var_5.to_box()
    var_7 = var_6.to_try()
    var_8 = var_0.bind(none_type_0)
    bool_0 = var_2.__eq__(var_0)


def test_case_6():
    str_0 = "DgJ[Cl=C8AP\\S"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.filter(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.bind(str_0)


def test_case_7():
    complex_0 = 2067.59707 - 2567j
    bool_0 = False
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(complex_0, set_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    str_0 = "DgJ[Cl=C8AP\\S"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.filter(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"P\xa3\x16<{\x10\xe9*\x1a\xf9yfC\xd0\xa8\xa8=\x90c\xe5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    var_1 = var_0.ap(bytes_0)
    var_2 = var_0.map(none_type_0)
    none_type_1 = None
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_3 = maybe_1.get_or_else(none_type_1)
    var_4 = maybe_1.ap(bool_2)
    var_3.bind(bool_1)


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(dict_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    str_0 = "o"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(maybe_0, var_1)
    var_2 = var_1.filter(var_1)
    var_3 = maybe_1.ap(maybe_0)
    var_4 = var_3.to_box()
    var_5 = maybe_1.filter(var_0)
    var_6 = var_1.filter(maybe_0)


def test_case_14():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    float_0 = 2705.8973
    dict_0 = {float_0: float_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    str_0 = "DgJ[Cl=C8AP\\S"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.filter(str_0)
    var_2 = var_1.filter(str_0)
    maybe_1 = var_1.to_validation()
    maybe_1.bind(str_0)


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_19():
    float_0 = 2389.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(float_0, var_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_1 = maybe_2.to_lazy()
    var_2 = var_0.filter(var_0)
    var_3 = var_0.to_lazy()
    var_4 = maybe_2.to_box()
    var_5 = var_1.to_either()
    var_6 = maybe_2.to_box()
    var_7 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_0)


def test_case_20():
    float_0 = 2389.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_0 = maybe_2.to_lazy()
    float_0.filter(float_0)


def test_case_21():
    float_0 = 2389.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(float_0, var_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_1 = maybe_2.to_lazy()
    var_2 = var_0.filter(var_0)
    var_3 = var_2.map(var_0)
    var_4 = var_3.to_either()
    var_5 = var_1.bind(var_0)
    var_6 = var_0.to_box()
    var_7 = maybe_1.to_try()
    bool_1 = var_2.__eq__(float_0)


def test_case_22():
    float_0 = 2389.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_2.ap(maybe_1)
    var_3 = maybe_2.to_box()
    var_4 = maybe_1.get_or_else(none_type_0)
    var_4.get_or_else(bool_1)
