# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "\rnfRio*]R"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 1980.4
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_3():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1.filter(maybe_1)


def test_case_4():
    str_0 = 'B!/j~i-P"!"69l$'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.map(var_2)
    str_1 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Sum[B]\n        :returns: new Sum with sum of concat semigroups values\n        :rtype: Sum[A]\n        "
    var_0.get_or_else(str_1)


def test_case_5():
    str_0 = 'B!/j~i-P"!"69l$'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(maybe_0)
    var_3 = maybe_0.to_lazy()


def test_case_6():
    str_0 = "B4w7uc;Hh^\\N\x0b?$NTX0"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    int_0 = 1990
    str_0 = "\rnfRio*]R"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.ap(dict_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    str_0 = "\rnfRio*]R"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    int_0 = 1990
    str_0 = "\rnfRio*]R"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(int_0)


def test_case_10():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1.filter(var_0)


def test_case_11():
    none_type_0 = None
    int_0 = -2339
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_12():
    int_0 = 294
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.bind(none_type_0)
    var_3 = maybe_0.bind(var_1)
    var_4 = var_3.bind(var_3)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_try()


def test_case_14():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    list_0 = [bool_0, bool_0]
    var_2 = maybe_0.filter(list_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_3 = maybe_1.to_lazy()
    maybe_2.filter(var_3)


def test_case_15():
    bytes_0 = b"\xba"
    set_0 = {bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(bool_0)


def test_case_16():
    float_0 = 1980.4
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_0.filter(var_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_18():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.bind(none_type_0)
    var_3 = maybe_0.bind(var_1)
    var_4 = maybe_0.to_lazy()
    var_5 = var_3.bind(var_4)
    var_6 = var_0.to_either()
    var_7 = var_0.to_validation()


def test_case_19():
    str_0 = "*s\th\x0b[^:"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(str_0)


def test_case_20():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.bind(none_type_0)
    var_3 = maybe_0.bind(var_1)
    var_4 = maybe_0.to_lazy()
    var_5 = var_3.bind(var_4)
    var_6 = var_4.to_validation()
    var_7 = var_0.to_validation()


def test_case_21():
    int_0 = 294
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(maybe_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    list_0 = [bool_1, bool_1]
    var_1 = maybe_0.filter(list_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_2.filter(var_2)
    var_4 = var_1.ap(var_1)
    var_5 = var_1.ap(maybe_2)
    var_6 = var_4.to_lazy()
    var_7 = var_5.to_either()
    var_8 = var_2.to_validation()


def test_case_22():
    int_0 = 287
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    list_0 = [bool_0, bool_0]
    var_1 = maybe_0.filter(list_0)
    maybe_1.filter(maybe_1)


def test_case_23():
    float_0 = -87.64
    int_0 = 287
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_either()
    var_2 = var_1.map(var_1)
    var_3 = var_1.to_validation()
    var_3.bind(var_1)
