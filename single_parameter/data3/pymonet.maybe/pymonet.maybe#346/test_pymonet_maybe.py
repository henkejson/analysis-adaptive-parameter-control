# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 877
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    module_1.Generic(*bool_1)


def test_case_3():
    int_0 = 2098
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_2 = module_0.Maybe(int_0, var_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_validation()
    float_0 = -1264.0
    maybe_3 = module_0.Maybe(float_0, bool_1)
    maybe_4 = module_0.Maybe(var_1, bool_0)
    var_3 = maybe_2.to_either()
    bool_2 = maybe_3.__eq__(var_1)
    var_4 = maybe_4.filter(var_2)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.ap(maybe_0)
    var_5 = var_0.to_lazy()
    var_6 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    bytes_0 = b"\xae\xc1\xd1\xa7$]\xf9\x9f\x95\xdf\xba\xc4p#^do\x91"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_3 = maybe_1.__eq__(bool_1)
    var_1 = maybe_1.filter(bool_2)
    var_2 = maybe_1.bind(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.get_or_else(var_3)
    var_6 = var_1.to_box()
    bool_4 = var_1.__eq__(bytes_0)
    var_7 = var_1.to_either()
    var_8 = var_2.filter(var_5)
    var_9 = var_4.to_validation()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_0)
    var_3 = var_1.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = maybe_1.to_either()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_0.to_try()
    var_3 = var_1.ap(bool_0)
    var_4 = var_3.filter(bool_0)
    var_5 = var_4.get_or_else(bool_0)
    var_5.to_lazy()


def test_case_12():
    bytes_0 = b"l\xf6o\x8f\xc1\t\xf2m"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_validation()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_lazy()
    var_3 = var_0.to_box()
    var_0.get_or_else(var_2)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    complex_0 = -286.642001 + 635j
    bool_1 = True
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_15():
    complex_0 = -920.149 + 840.397748j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    float_0 = 2787.998
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    float_1 = 1753.9
    bool_1 = True
    maybe_1 = module_0.Maybe(float_1, bool_1)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_either()
    var_2.map(var_0)


def test_case_18():
    bool_0 = True
    str_0 = "U"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.map(bool_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_6 = var_2.to_lazy()
    bool_1 = maybe_1.__eq__(maybe_2)
    var_2.get_or_else(var_3)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_4 = var_2.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_0.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(var_4, bool_1)
    var_7 = maybe_1.to_lazy()
    bool_2 = var_1.__eq__(maybe_0)
    var_4.get_or_else(bool_2)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    int_0 = -21
    bool_2 = False
    bytes_0 = b"\xae\xc1\xd1\xa7$]\xf9\x9f\x95\xdf\xba\xc4p#^do\x91"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_0.get_or_else(maybe_1)
    bool_3 = maybe_1.__eq__(bool_1)
    var_2 = maybe_1.filter(bool_2)
    var_3 = maybe_1.bind(var_0)
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_0.to_box()
    var_6 = var_2.ap(int_0)
    var_7 = maybe_0.to_either()
    bytes_1 = b"\x1fA"
    var_8 = var_6.get_or_else(bytes_1)
    bool_4 = maybe_1.__eq__(maybe_1)
    var_9 = var_7.ap(int_0)
    var_10 = var_2.to_either()
    var_11 = var_10.to_box()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = var_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(var_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.filter(var_0)
    var_5 = var_4.to_box()
    var_6 = maybe_0.bind(var_2)
    var_7 = var_6.to_either()
    var_7.get_or_else(bool_0)
