# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "\x0cVyF*wZ"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bytes_0 = b"\x10\xc9\x19\n\xf7\x10y6\xdcc"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    float_0 = -227.2216
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_1.to_box()
    var_0.get_or_else(bytes_0)


def test_case_4():
    bool_0 = False
    bytes_0 = b"\xfa\x86|\xe1"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    none_type_0 = None
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_5():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    float_0 = 464.296
    none_type_0 = None
    bool_0 = False
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.map(float_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b" \x95\xe7\x99\xb7\xa2\xfaR\xf9\xad\x87\xf7\xb1\x89\xe8$,,\xbd\xf0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_validation()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    int_0 = -1510
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.ap(none_type_0)


def test_case_9():
    int_0 = 2104
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(var_2)
    var_4 = maybe_0.get_or_else(int_0)
    var_5 = maybe_0.to_try()
    maybe_0.ap(int_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_0.filter(var_0)


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(maybe_0)


def test_case_12():
    float_0 = 1779.815
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_14():
    float_0 = -568.6
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    float_0 = 374.150592
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    bool_1 = var_0.__eq__(maybe_0)
    var_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = var_2.to_lazy()
    var_4 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_2)
    var_5 = var_3.map(bool_1)
    var_5.to_validation()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_0.filter(var_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bool_1)
