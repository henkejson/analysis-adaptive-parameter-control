# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x86\x92\x8d\xf5y"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_1 = maybe_1.bind(bool_0)
    bool_2 = var_1.__eq__(bool_1)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_1.get_or_else(none_type_1)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_lazy()
    var_4.filter(var_2)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(maybe_1)


def test_case_4():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.map(dict_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_0.filter(maybe_1)
    object_0 = module_1.object()
    maybe_2 = module_0.Maybe(var_0, dict_0)
    var_2 = maybe_2.to_lazy()
    maybe_2.filter(maybe_1)


def test_case_5():
    int_0 = -1080
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.map(var_0)


def test_case_6():
    dict_0 = {}
    none_type_0 = None
    list_0 = [dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_0.map(dict_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.to_try()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_5 = maybe_0.filter(var_4)
    bool_0 = var_0.__eq__(list_0)
    maybe_2 = module_0.Maybe(var_3, dict_0)
    var_6 = var_2.to_try()
    var_7 = maybe_2.to_lazy()
    maybe_2.filter(var_4)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_1)
    var_1 = maybe_2.to_either()
    maybe_2.bind(bool_0)


def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.ap(dict_0)
    maybe_1 = maybe_0.filter(list_0)
    var_1 = maybe_1.ap(var_0)
    object_0 = module_1.object()
    maybe_2 = module_0.Maybe(var_0, dict_0)
    var_2 = maybe_2.to_lazy()
    maybe_2.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(maybe_1)
    maybe_2 = module_0.Maybe(maybe_1, dict_0)
    maybe_2.filter(maybe_1)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(var_2, var_2)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_2.to_either()
    var_5 = maybe_0.ap(bool_0)
    var_6 = maybe_0.to_box()
    var_7 = maybe_1.to_try()
    maybe_3 = module_0.Maybe(bool_0, var_6)
    bool_1 = var_2.__eq__(var_2)
    maybe_4 = module_0.Maybe(var_4, var_4)


def test_case_13():
    str_0 = "\re\x0c"
    str_1 = "ls/p,\x0bQvP&F8Q{p$L|fd"
    list_0 = []
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    tuple_0 = (list_0, var_0)
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    var_1 = maybe_1.get_or_else(str_1)
    var_1.get_or_else(str_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_2.to_either()
    var_0.filter(var_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    maybe_0.filter(maybe_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    bytes_0 = b"\xc4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_18():
    str_0 = "]2#l"
    none_type_0 = None
    str_1 = "5Ty&zW;*!~]}.\x0c~"
    maybe_0 = module_0.Maybe(str_1, none_type_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_1.to_lazy()


def test_case_19():
    bool_0 = True
    bytes_0 = b"\xd9\x1eK\xa5c \xf9\x05"
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_21():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_0.filter(maybe_1)
    object_0 = module_1.object()
    maybe_2 = module_0.Maybe(var_0, dict_0)
    var_2 = maybe_2.to_lazy()
    maybe_2.filter(maybe_1)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_box()
    maybe_0.map(var_2)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, tuple_0]
    maybe_1 = module_0.Maybe(list_0, tuple_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_2.map(bool_0)


def test_case_24():
    dict_0 = {}
    none_type_0 = None
    list_0 = [dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = module_0.Maybe(var_0, var_1)
    var_5 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(var_5, var_3)
    var_6 = var_0.filter(var_4)
    var_7 = var_4.to_validation()
    bool_0 = var_6.__eq__(var_2)
    var_8 = var_5.to_box()
    var_9 = var_6.to_lazy()
    var_10 = var_2.filter(maybe_0)
    var_11 = var_4.to_either()
    var_12 = var_9.map(var_7)
    var_13 = var_12.map(none_type_0)
    var_14 = var_5.to_try()
    var_14.map(var_1)


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_2.to_either()
    var_3 = var_0.to_try()
    var_3.map(var_2)


def test_case_26():
    dict_0 = {}
    none_type_0 = None
    list_0 = [dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_0.map(dict_0)
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_3, var_1)
    var_4 = var_3.filter(var_0)
    var_5 = var_2.to_validation()
    bool_0 = maybe_0.__eq__(var_2)
    var_6 = var_2.to_box()
    var_3.to_lazy()
