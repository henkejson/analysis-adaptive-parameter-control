# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = '^3sr-g}"NzEQEa&R '
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    dict_0 = {none_type_0: none_type_0, none_type_0: bool_0}
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    bool_1 = True
    var_1 = maybe_0.map(bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_2.filter(var_0)
    var_3 = var_2.to_validation()
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_3.__eq__(maybe_3)
    maybe_3.filter(maybe_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_either()
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_try()
    bool_1 = var_2.__eq__(var_1)
    var_1.to_validation()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = var_0.ap(none_type_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    int_0 = -1087
    bytes_0 = b"\x19\x18\x1a8\x90\xd01\xd0 \xea8\n\xb2\x99\xbd\xe3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    dict_0 = {none_type_0: none_type_0, none_type_0: bool_0}
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    bool_1 = True
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_2.filter(var_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.get_or_else(maybe_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    maybe_3.filter(maybe_3)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_1.to_box()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2.filter(var_1)


def test_case_14():
    float_0 = -1850.570064
    set_0 = {float_0, float_0, float_0, float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = False
    int_0 = -2603
    var_1 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(set_0, bool_1)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    maybe_1.filter(maybe_1)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_2.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(var_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"\xe6{\x05(=<\x08\\\xc7\xa2\x11\xbc5h;\x17 "
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.ap(none_type_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = none_type_0.__eq__(none_type_0)


def test_case_22():
    float_0 = -471.3
    none_type_0 = None
    bytes_0 = b"\xaed\xba\xf2\t\xb7\xdd,#@\xb0|\xe8b\x9b\x08\x13\xb3\xffX"
    dict_0 = {float_0: bytes_0, bytes_0: bytes_0, bytes_0: float_0, bytes_0: float_0}
    maybe_0 = module_0.Maybe(dict_0, float_0)
    var_0 = maybe_0.bind(float_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.bind(none_type_0)


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_validation()
    var_3.ap(var_3)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_2.filter(var_1)
    var_3 = var_2.to_validation()
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_2.__eq__(maybe_0)
    maybe_0.filter(var_1)
