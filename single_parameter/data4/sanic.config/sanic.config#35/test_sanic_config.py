# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.update()
    config_1 = module_0.Config(config_0, bool_0, bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    tuple_0 = ()
    config_0 = module_0.Config()
    config_0.__getattr__(tuple_0)


def test_case_4():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_5():
    str_0 = ";"
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, str_0)
    var_0 = config_1.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_10():
    str_0 = ";"
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, str_0)
    str_1 = "G=i'j32W0DyKn"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    var_0 = config_1.update_config(config_0)
    var_1 = config_1.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    int_0 = -431
    dict_0 = {str_0: none_type_0, str_0: str_0, str_0: int_0}
    module_0.Config(dict_0)


def test_case_12():
    bytes_0 = b"\xd1\x8b\x81p\xf2\xf3\xbdnB!03nc\xf3"
    module_0.Config(converters=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = config_0.register_type(str_0)
    config_0.load_environment_vars(str_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "S"
    none_type_0 = config_0.register_type(str_0)
    config_0.load_environment_vars(str_0)
