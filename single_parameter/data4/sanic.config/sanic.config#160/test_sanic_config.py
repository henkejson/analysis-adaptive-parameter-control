# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2
import sanic.helpers as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_2():
    str_0 = ">M(81"
    float_0 = 1332.4991
    config_0 = module_0.Config(keep_alive=float_0)
    module_1.check_error_format(str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = module_2.getmembers(config_0)
    module_1.check_error_format(var_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_1)
    config_1.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_2)
    var_0 = config_1.load_environment_vars()
    config_2 = module_0.Config(converters=none_type_2)
    module_1.check_error_format(none_type_2)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "L\\}g+BZ\\w@~@<"
    none_type_2 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_1)
    var_1 = module_3.Default()
    var_2 = config_1.update_config(var_1)
    var_1.__subclasscheck__(config_1, config_1)


def test_case_9():
    str_0 = "websocket_max_size"
    module_0.Config(converters=str_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_1)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    int_0 = -33
    bool_0 = False
    str_0 = "j@UOK-T"
    none_type_1 = config_0.__setattr__(str_0, bool_0)
    var_0 = config_0.load_environment_vars()
    module_0.Config(env_prefix=int_0, keep_alive=none_type_0, converters=config_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, none_type_0, converters=none_type_0)
    none_type_2 = None
    none_type_3 = config_0.register_type(none_type_2)
    str_0 = "(o3m"
    config_1 = module_0.Config(keep_alive=none_type_3, converters=str_0)
    config_1.update_config(str_0)
