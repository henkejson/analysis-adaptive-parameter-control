# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    bool_0 = False
    str_0 = "-u"
    dict_0 = {str_0: bool_0, str_0: bool_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=bool_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    str_0 = "f`EN(["
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_5():
    set_0 = set()
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    bool_0 = False
    config_1 = module_0.Config(config_0, set_0, bool_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "9n%!\x0b\x0cK\r"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.TRUSTME
    config_0.update_config(var_0)


def test_case_11():
    str_0 = "_]UyaaoJD"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_13():
    local_cert_creator_0 = module_2.LocalCertCreator.AUTO
    config_0 = module_0.Config(
        env_prefix=local_cert_creator_0, converters=local_cert_creator_0
    )
    str_0 = ""
    config_0.load_environment_vars(str_0)
