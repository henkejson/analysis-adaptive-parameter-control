# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.stream as module_1
import builtins as module_2
import sanic.http.http1 as module_3
import inspect as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    stream_0 = module_1.Stream()
    module_0.Config(converters=stream_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    object_0 = module_2.object()
    module_0.Config(object_0, keep_alive=object_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "s)I\n m0G,z"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.__getattr__(config_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    module_0.Config(none_type_0, bool_0)


def test_case_8():
    config_0 = module_0.Config()
    module_3.Http(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "@}H8/PI?FGg"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1 = module_0.Config(config_0, str_0)
    config_1.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "01"
    config_0.update_config(str_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = ',}!"'
    none_type_1 = config_0.__setitem__(str_0, config_0)
    str_1 = "ECDHE-RSA-CHACHA20-POLY1305"
    none_type_2 = config_0.__setitem__(str_1, none_type_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(converters=str_1)


def test_case_15():
    str_0 = "REPONSETIMEOUT"
    var_0 = module_4.isdatadescriptor(str_0)
    none_type_0 = None
    str_1 = "_"
    config_0 = module_0.Config(none_type_0, str_1)
    config_0.respond(var_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_17():
    config_0 = module_0.Config()
    str_0 = "=t.Sf?:!S]ztvQf*xN"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    none_type_1 = None
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, none_type_1)
