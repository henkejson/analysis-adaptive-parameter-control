# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "f_';}8'W'@"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(converters=bool_0)
    str_0 = "f_';}8'W'@"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(keep_alive=str_0)
    config_2 = module_0.Config(config_1, none_type_0, bool_0)
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(bool_0)


def test_case_4():
    int_0 = -5116
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__getattr__(int_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "="
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    module_0.Config(env_prefix=bool_0, keep_alive=none_type_0)


def test_case_7():
    str_0 = "OJ;\np92\x0cN Qv?"
    config_0 = module_0.Config(converters=str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "E"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.update_config(str_0)


def test_case_10():
    str_0 = "noisy_exceptions"
    dict_0 = {}
    module_0.Config(dict_0, converters=str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(dict_0)
