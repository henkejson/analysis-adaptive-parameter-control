# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_3():
    str_0 = "Create an empty request object for error handling use.\n\n        Current error handling code needs a request object that won't exist\n        if an error occurred during before a request was received. Create a\n        bogus response for error handling use.\n        "
    config_0 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, str_0)
    str_1 = "\\T@Hwd&9"
    none_type_1 = config_0.__setattr__(str_1, str_0)
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    var_1 = module_1.getmembers(config_0, none_type_0)


def test_case_4():
    str_0 = "MaT59l|L~J"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "*1x"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    var_0 = module_1.isdatadescriptor(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(bool_0)
    config_0.update_config(var_0)


def test_case_9():
    str_0 = "*x"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    config_1 = module_0.Config(converters=var_0)
    var_0.__getattr__(none_type_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.update()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.update_config(config_0)
    config_0.__setitem__(none_type_1, none_type_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    config_1 = module_0.Config(keep_alive=bool_0)
    var_0 = config_1.update_config(config_1)
    none_type_0 = config_0.register_type(bool_0)
    none_type_1 = config_0.update()
    bool_1 = False
    config_0.register_type(bool_1)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)
