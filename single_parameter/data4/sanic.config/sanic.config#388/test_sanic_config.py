# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "A,#XiA*"
    module_0.Config(converters=str_0)


def test_case_2():
    str_0 = "&~N[R"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_3():
    str_0 = "enduser"
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    list_0 = [var_0, var_0, config_0, var_0]
    str_1 = "Unable to load configuration %s"
    str_2 = "t2"
    dict_0 = {str_1: list_0, str_2: str_1, str_0: str_0}
    var_1 = dict_0.__repr__()
    var_1.init_for_request()


def test_case_4():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.log_response()


def test_case_5():
    str_0 = "y)\\W"
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(var_0)


def test_case_10():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
