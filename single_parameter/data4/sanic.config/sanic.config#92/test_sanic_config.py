# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "INSPECTOR_PORT"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_0.Config(keep_alive=config_0)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    none_type_0 = config_1.register_type(config_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, none_type_0)
    var_0 = module_1.getmembers(config_1)
    var_1 = config_0.update_config(config_0)
    config_1.update_config(var_0)


def test_case_6():
    int_0 = 2163
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=int_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "GO^wk{a\rPF,.*\nr"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.isclass(str_0)
    var_0.update_config(bool_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_10():
    config_0 = module_0.Config()
    tuple_0 = ()
    config_0.update_config(tuple_0)


def test_case_11():
    str_0 = "GO^wk{a\rPF,.*\nr"
    bool_0 = False
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.load_environment_vars(str_0)
    config_1 = module_0.Config()
    var_1 = module_1.isclass(bool_0)
    config_1.load_environment_vars(config_1)


def test_case_12():
    str_0 = "GO^wk{a\rPF,.*\nr"
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    config_0.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_14():
    str_0 = '(AfWf"LVO.|^V`s='
    str_1 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = True
    dict_0 = {str_0: str_0, str_1: bool_0}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=none_type_0, converters=none_type_0)
