# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "\n\r@m(BFl%\\eJd"
    config_0.__getattr__(str_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    default_0 = module_1.Default()
    str_0 = "\n\r@m(BFl%\\eJd"
    config_0.__getattr__(str_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, var_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    module_0.Config(env_prefix=config_0, keep_alive=config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "reload_process_start"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = True
    dict_0 = {str_0: str_0, str_1: str_0, str_1: bool_0, str_1: str_0}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.register_type(bool_0)
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()
    str_0 = "\n\r@m(BFl%\\eJd"
    none_type_3 = config_0.__setitem__(str_0, none_type_1)
    config_0.update_config(str_0)


def test_case_12():
    bool_0 = True
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    module_0.Config(env_prefix=none_type_0, converters=bool_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    int_0 = 307
    config_1 = module_0.Config(keep_alive=int_0)
    config_2 = module_0.Config(config_0)
    bytes_0 = b"\t\xb7\xb3\x19w\x07h\x9azz\t"
    module_0.Config(env_prefix=bytes_0, converters=config_0)


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    config_0 = module_0.Config(none_type_2, keep_alive=none_type_1)
    config_1 = module_0.Config()
    none_type_3 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_1)
