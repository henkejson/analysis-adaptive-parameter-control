# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_2():
    str_0 = "Exception occurred in one of response middleware handlers"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    module_0.Config(env_prefix=dict_0, keep_alive=bool_0)


def test_case_3():
    bytes_0 = b"3\xe3v\x9fy\x1b\x9f\xb79\xd5-Q)^\xe1"
    module_0.Config(converters=bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_0.Config(env_prefix=var_0, converters=var_0)
    var_2 = var_0.__repr__()
    module_1.Default(**var_2)


def test_case_5():
    bool_0 = True
    module_0.Config(bool_0, bool_0, converters=bool_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "#saf#-GLEa"
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "LOCAL_CERT_CREATOR"
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0)
    config_1.__setitem__(str_0, str_0)
