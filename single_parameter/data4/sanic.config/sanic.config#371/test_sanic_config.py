# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = "_"
    config_1 = module_0.Config(config_0, str_0, str_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    bytes_0 = b"\x03\xec\xa1<\xf0\xb7<9\x06["
    config_0.update_config(bytes_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "_"
    config_1 = module_0.Config(config_0, str_0, str_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "f-U"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    module_2.check_error_format(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "_"
    config_1 = module_0.Config(config_0, str_0, str_0)
    none_type_0 = config_0.register_type(config_0)
    var_1 = var_0.__repr__()
    config_2 = module_0.Config(env_prefix=none_type_0, converters=var_1)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "_"
    config_1 = module_0.Config(config_0, str_0, str_0)
    var_0 = config_1.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.update()
    config_0.register_type(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.update()
    none_type_2 = config_0.update(**config_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_1)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "H"
    config_1 = module_0.Config(config_0, str_0, str_0)
    var_1 = var_0.__repr__()
    none_type_0 = config_1.register_type(var_1)
    var_0.update_config(var_0)
