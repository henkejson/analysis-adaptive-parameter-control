# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    config_0.update_config(none_type_0)


def test_case_3():
    str_0 = ")p#OI"
    str_1 = '~O,Ls#h}g[!"!'
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = ']UO"'
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(str_0)
    config_0.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    str_0 = "SkW7I\x0btt"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_1.update_config(var_1)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    str_0 = "\tSjAMfPyowV1"
    config_2 = module_0.Config(none_type_0, str_0, config_1)
    config_2.update_config(none_type_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=bool_0, converters=config_0)
    config_2 = module_0.Config(config_0, converters=bool_0)
    var_0 = config_0.update_config(config_2)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    str_0 = '~O,Ls#h}g[!"!'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(none_type_0)


def test_case_14():
    str_0 = "@ixhAsy\\i"
    str_1 = "I>&\n=V\n~"
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(keep_alive=str_1, converters=str_1)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    str_0 = ""
    config_1.load_environment_vars(str_0)


def test_case_16():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_0)


def test_case_17():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bool_0 = False
    config_1 = module_0.Config()
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "\rb"
    str_2 = "PROXIES_COUNT"
    dict_0 = {str_0: bool_0, str_0: config_1, str_1: str_0, str_2: str_1}
    module_0.Config(dict_0, none_type_0)
