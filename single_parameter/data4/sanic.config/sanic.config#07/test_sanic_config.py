# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    str_0 = "&r[nDf R6\x0b^P^%z-5["
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=bool_0)


def test_case_2():
    int_0 = -952
    module_0.Config(int_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_9():
    str_0 = "|!t76\tL"
    config_0 = module_0.Config(converters=str_0)
    var_0 = module_1.isclass(str_0)
    var_0.load_environment_vars()


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(converters=none_type_0)
    none_type_1 = config_1.register_type(config_1)
    bytes_0 = b"\xd5\xa4\xb0\xf2\xbe\xdf~\xe0\xf9\xb3\x9e8\x87\x00\x16\xd2"
    config_1.update_config(bytes_0)
