# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import sanic.errorpages as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    module_1.load_module_from_file_location(config_1)


def test_case_2():
    str_0 = "\x0cMmK\x0b%"
    str_1 = "48]0}jN\\u_+<TH"
    str_2 = "T\x0b3|\x0cmV"
    dict_0 = {str_0: str_1, str_2: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, none_type_0)
    none_type_1 = None
    module_0.DescriptorMeta(none_type_1)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = module_2.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "K{['B@"
    var_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "-@DWR\t"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"Method Not Allowed"
    module_3.check_error_format(bytes_0)


def test_case_6():
    bool_0 = True
    str_0 = "9\x0c?(-RXOt-AZ5"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    dict_0 = {str_0: bool_0, str_0: none_type_1, str_0: none_type_1}
    config_1 = module_0.Config(dict_0, str_0)
    module_2.getmembers(bool_0, bool_0)


def test_case_7():
    str_0 = "@J\x0c"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    str_0.register_type(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    var_0 = config_1.load_environment_vars()


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "K{['B@"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = None
    str_1 = "(D\x0cZ!mB"
    none_type_2 = config_0.__setitem__(str_1, str_1)
    none_type_3 = config_0.register_type(none_type_2)
    config_0.register_type(none_type_1)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "-@DWR\t"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, str_1)


def test_case_15():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.load_environment_vars(str_0)
