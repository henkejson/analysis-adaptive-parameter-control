# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.__setattr__(bool_0, bool_0)


def test_case_5():
    config_0 = module_0.Config()
    bytes_0 = b"\x91c>\x03\x16\xa2\t/\xf6\xca\xd3\xa0\xe2_\xa6\xf9"
    str_0 = "WEBSOCKET_PING_TIMEOUT"
    config_1 = module_0.Config(config_0, str_0)
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.isclass(bytes_0)
    config_0.update(**var_1)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    str_0 = '4`QneY$*\\Fd".^)$u$D'
    none_type_1 = config_0.__setitem__(str_0, var_0)
    none_type_2 = None
    var_1 = module_1.getmembers(none_type_2)
    config_0.__getattr__(none_type_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = None
    var_1 = module_1.getmembers(none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "MXxC\x0c|0r\tB\ri"
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(str_0)


def test_case_10():
    str_0 = "K0z)\x0c;L\\cA"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=str_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    config_2 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    config_2.__setattr__(none_type_1, none_type_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_12():
    config_0 = module_0.Config()
    bool_0 = True
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, bool_0)
