# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "yMo}X*"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.Config(bool_0, converters=none_type_0)


def test_case_3():
    str_0 = "}X*"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0]
    none_type_0 = config_0.update(*list_0, **config_0)
    var_0.update_config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    float_0 = -583.501
    config_0.update_config(float_0)


def test_case_6():
    str_0 = "yMo}X*"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    str_1 = "WEBSOCKET_MAX_SIZE"
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setattr__(str_1, str_0)
    var_0 = config_0.load_environment_vars()
    config_2 = module_1.getmembers(var_0)
    list_0 = [config_2, config_0]
    none_type_1 = config_0.update(*list_0, **config_0)
    config_0.update_config(config_2)


def test_case_7():
    str_0 = "yMo}X*"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    str_1 = "WEBSgCKET_MAX>SIZE"
    none_type_0 = config_0.__setattr__(str_1, str_0)
    config_1 = module_0.Config()
    list_0 = [config_1, config_0]
    none_type_1 = config_0.update(*list_0, **config_0)
    var_0 = config_1.update_config(config_1)
    config_0.update_config(str_0)


def test_case_8():
    str_0 = "yMo}X*"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    str_1 = "xjH?xbpU3$I>-J].ak~;"
    none_type_0 = config_0.__setitem__(str_1, config_0)
    config_1 = module_0.Config()
    float_0 = -583.50058
    list_0 = [config_1, config_0]
    none_type_1 = config_0.update(*list_0, **config_0)
    config_1.update_config(float_0)


def test_case_9():
    str_0 = "Hc6m.wy7QSG}9E\r75;w"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_10():
    str_0 = '=Bb".'
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.__getattr__(config_0)


def test_case_11():
    str_0 = "yMo}X*"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=str_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config()
    var_1 = config_0.update_config(config_1)
    config_0.update_config(var_1)


def test_case_12():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)
