# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__bool__()
    config_1 = module_0.Config(keep_alive=var_1)


def test_case_2():
    str_0 = 'H\r\r?&"=# \x0c^Gn2%^,1l'
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "L3GzI 5\\a"
    dict_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    module_1.check_error_format(str_1)


def test_case_3():
    config_0 = module_0.Config()
    bytes_0 = b"#\xa2"
    module_0.Config(bytes_0, bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "E7`<vzbZ\n7DD)6Fd"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LAG(IEK\\ago"
    config_1 = module_0.Config()
    config_1.update_config(str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "E7`<vzbZ\n7DD)6Fd"
    none_type_2 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.__getattr__(str_0)
    var_0.__getattr__(none_type_0)


def test_case_7():
    str_0 = 'T-.RBp\r"Y-kP@'
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = 'H\r\r?&"=# \x0c^Gxn2%^,1l'
    none_type_0 = None
    str_1 = "L3GzI 5\\a"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    complex_0 = 1842.2 + 1441.84146j
    config_0 = module_0.Config(keep_alive=none_type_0, converters=dict_0)
    none_type_1 = config_0.register_type(complex_0)
    var_0 = module_2.isclass(none_type_0)
    var_0.__setattr__(dict_0, none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__bool__()
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_12():
    str_0 = 'H\r\r?&"=# \x0c^Gxn2%^,1l'
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(none_type_0)
    none_type_2 = config_1.__setitem__(str_0, str_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    int_0 = 306
    none_type_0 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_14():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = module_2.isclass(none_type_0)
    config_0.__setitem__(str_0, str_0)
