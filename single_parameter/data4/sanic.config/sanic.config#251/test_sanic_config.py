# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    complex_0 = 544 + 1058.755j
    config_0 = module_0.Config(keep_alive=complex_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    complex_0 = 3005.5 + 2167.807016j
    module_0.Config(complex_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    bool_0 = False
    var_0 = module_1.getmembers(bool_0)
    config_0 = module_0.Config(converters=var_0)
    var_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(bool_0)
    str_0 = "][fez\tJpvpU{`"
    none_type_1 = config_0.__setitem__(str_0, config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.MKCERT
    config_1 = module_0.Config(env_prefix=var_0, converters=none_type_0)
    var_0.__getattr__(var_0)


def test_case_11():
    int_0 = -1940
    module_0.Config(converters=int_0)


def test_case_12():
    config_0 = module_0.Config()
    bytes_0 = b"\xb1Z\x99\xa2\x88\xe8\x18"
    config_0.update_config(bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "E~`TcAZS?\nS\\4"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.register_type(config_0)
    str_1 = "WEBSOCKET_MAX_SIZE"
    none_type_2 = config_0.__setitem__(str_1, none_type_0)
    config_0.register_type(config_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
