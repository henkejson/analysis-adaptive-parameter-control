# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2
import sanic.http.stream as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = 'Exception raied in exception handler "%s" for uri: %s'
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    str_0 = "1P9"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_5():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_6():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    local_cert_creator_0 = module_1.LocalCertCreator.TRUSTME
    module_0.Config(local_cert_creator_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=bool_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = 'Exception raised in exception handler "%s" for uri: %s'
    none_type_2 = config_0.__setattr__(str_0, str_0)
    var_0 = module_2.getmembers(config_0, bool_0)
    config_0.register_type(none_type_2)


def test_case_13():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=bool_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.update(**config_0)
    str_0 = "W-8'96~\x0c\x0c5"
    none_type_3 = config_0.__setitem__(str_0, none_type_0)
    var_0 = module_2.isdatadescriptor(str_0)
    config_1 = module_0.Config(
        env_prefix=var_0, keep_alive=none_type_1, converters=none_type_0
    )
    str_1 = "INSPECTOR_PORT"
    str_2 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_2, str_1)


def test_case_15():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = config_0.update(**config_0)
    var_0 = module_2.getmembers(config_0)
    module_3.Stream(**config_0)


def test_case_16():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    tuple_0 = module_2.isclass(str_0)
    config_1 = module_0.Config()
    var_0 = module_2.getmembers(tuple_0)
    module_0.Config(env_prefix=str_0, converters=var_0)
