# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"JO\xe5\xf5\xb2\x8fX\xb9\x19\x13I\xa4\xcc\xe9\x08\x8e6\xb9\xe9\x13"
    str_0 = "aq'|"
    str_1 = "n4YY.%x\x0cJaj)0m"
    config_0 = module_0.Config(env_prefix=str_0)
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    config_1 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)
    config_1.update_config(bytes_0)


def test_case_2():
    str_0 = "aq'|"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = ""
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    bytes_0 = b"JO\xe5\xf5\xb2\x8fX\xb9\x19\x13I\xa4\xcc\xe9\x08\x8e6\xb9\xe9\x13"
    module_0.Config(env_prefix=bytes_0, keep_alive=bytes_0, converters=bytes_0)


def test_case_7():
    str_0 = "aq'|"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(keep_alive=config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "L"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(var_0)
    str_0 = "L"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    str_0 = "_"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    config_1.update_config(var_0)
