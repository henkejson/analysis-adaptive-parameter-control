# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b'Qr"h'
    config_0 = module_0.Config(keep_alive=bytes_0)


def test_case_2():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = "LOCAL_CERT_CREATOR"
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    config_0 = module_0.Config(dict_0)
    config_0.__setitem__(str_0, str_0)


def test_case_4():
    str_0 = "y\x0bW\x0bebw`\n57\x0bO"
    int_0 = -1039
    config_0 = module_0.Config(keep_alive=int_0)
    var_0 = module_1.isdatadescriptor(config_0)
    config_0.respond(str_0)


def test_case_5():
    str_0 = " F$\x0b3zcfBEJ~4>"
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(str_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    none_type_1 = config_1.update(**config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    int_0 = -1040
    var_0 = module_1.getmembers(int_0)
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=int_0, converters=var_0)
    str_0 = "K_|VNuq@"
    none_type_1 = config_0.__setattr__(str_0, config_1)
    var_1 = module_1.isdatadescriptor(none_type_0)
    str_1 = "NQon-graceful Ctrl+C"
    var_0.__setitem__(str_1, none_type_0)


def test_case_10():
    str_0 = "_converters"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_11():
    int_0 = -1039
    var_0 = module_1.getmembers(int_0)
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_1 = module_1.isdatadescriptor(config_0)
    str_0 = "Non-graceful Ctrl+C"
    none_type_1 = config_0.__setitem__(str_0, int_0)
    var_2 = module_1.isdatadescriptor(int_0)
    none_type_2 = config_0.register_type(none_type_0)


def test_case_12():
    int_0 = -1039
    var_0 = module_1.getmembers(int_0)
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_1 = module_1.isdatadescriptor(config_0)
    config_0.__getattr__(config_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "BIg$2*q)WF8\x0c%"
    none_type_0 = None
    tuple_0 = (str_0,)
    none_type_1 = config_0.register_type(tuple_0)
    config_1 = module_0.Config(none_type_0, keep_alive=config_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "S"
    config_0.load_environment_vars(str_1)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    str_0 = "_"
    var_1 = config_0.load_environment_vars(str_0)
    config_0.update_config(none_type_0)
