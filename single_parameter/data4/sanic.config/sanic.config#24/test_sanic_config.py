# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "D?|@XQ]\x0cB4"
    none_type_1 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_0, converters=config_0)
    config_0.__setitem__(config_0, config_0)


def test_case_2():
    int_0 = 1513
    config_0 = module_0.Config()
    str_0 = "X(*I,5U;j_^n5v"
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = None
    bool_0 = False
    config_1 = module_0.Config(none_type_2, none_type_2, bool_0)
    config_0.update_config(int_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "<{u-::H{ }d?"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_0.update_config(var_1)


def test_case_7():
    str_0 = "shared_ctx"
    str_1 = "#_e05-?r\\e\x0b"
    dict_0 = {str_1: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1, dict_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config()
    str_2 = "<{u-::H{ }d?"
    none_type_1 = config_1.__setitem__(str_2, str_2)
    var_0 = config_1.update_config(config_1)
    none_type_2 = config_1.register_type(var_0)
    var_1 = config_1.load_environment_vars()
    config_1.update_config(none_type_2)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "D?|@XQ]\x0cB4"
    config_0.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "<{u-::H{ }d?"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    str_1 = "LOCAL_CERT_CREATOR"
    list_0 = []
    config_0.__setitem__(str_1, list_0)


def test_case_13():
    str_0 = "shared_ctx"
    str_1 = '^`y*|My~B!Rvu?.%"y'
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = "`1['(R"
    bool_0 = True
    dict_0 = {str_1: str_0, str_2: str_0, str_3: bool_0, str_1: str_2}
    module_0.Config(dict_0, str_3)
