# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    config_0.__getattr__(list_0)


def test_case_2():
    set_0 = set()
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=none_type_0)
    config_2.update_config(set_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_4():
    int_0 = 299
    module_0.Config(env_prefix=int_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    list_0 = [config_0]
    config_0.update_config(list_0)


def test_case_7():
    config_0 = module_0.Config()
    bytes_0 = b"\xc1"
    config_0.update_config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0, **config_0)


def test_case_10():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    none_type_0 = config_0.register_type(list_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, converters=none_type_1)
    none_type_1.respond(none_type_1)


def test_case_11():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    str_0 = "y+&gF[XQgWHsG"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = None
    config_1 = module_0.Config(config_0, var_0)
    config_1.update_config(none_type_2)


def test_case_12():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0)
    var_0.respond(var_0)


def test_case_13():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.LocalCertCreator.TRUSTME
    module_0.Config(env_prefix=config_0, converters=var_1)


def test_case_14():
    str_0 = "GFC9cgcOIX];\t"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    list_0 = []
    config_1 = module_0.Config(keep_alive=list_0)
    none_type_2 = config_1.update()
    var_0 = config_1.update_config(config_1)
    config_2 = module_0.Config(env_prefix=str_0, converters=config_0)
    config_2.update_config(list_0)
