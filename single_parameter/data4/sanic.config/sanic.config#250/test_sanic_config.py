# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "7X'f@sb"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__instancecheck__(str_0, config_0)


def test_case_3():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_6():
    str_0 = ""
    str_1 = "=p!"
    int_0 = -366
    str_2 = "d0u"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: str_0, str_0: int_0, str_2: bool_0}
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.__getattr__(str_0)
    var_2 = module_1.isdatadescriptor(int_0)
    var_1.__instancecheck__(var_2, str_2)


def test_case_7():
    str_0 = "7X'f@sb"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_8():
    stream_0 = module_2.Stream()
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_12():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    list_0 = [str_0]
    none_type_0 = config_0.register_type(list_0)
    var_0 = config_0.load_environment_vars()
    config_0.register_type(list_0)


def test_case_13():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = config_0.update(**config_0)
    config_0.load_environment_vars(str_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update(**config_0)
    var_0 = module_1.getmembers(config_0)
    var_1 = config_0.load_environment_vars()
    none_type_1 = config_0.register_type(var_1)
    var_2 = config_0.load_environment_vars()
    config_0.update_config(var_1)


def test_case_15():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, str_0)


def test_case_16():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_1, config_0)
    none_type_1 = config_0.update(**config_0)
    var_0 = module_1.getmembers(config_0)
    module_2.Stream(**config_0)
