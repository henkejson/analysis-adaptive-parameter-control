# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    str_0 = "={"
    var_0 = module_0.Config(converters=str_0)
    none_type_1 = None
    config_0 = module_0.Config(keep_alive=none_type_1, converters=none_type_1)
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    var_1 = config_1.load_environment_vars()
    none_type_2 = None
    module_0.DescriptorMeta(none_type_2, *none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    var_0 = config_1.load_environment_vars()
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_3():
    str_0 = "2X5l7FM(2"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config()


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(converters=none_type_1)
    none_type_2 = config_0.register_type(none_type_0)


def test_case_7():
    none_type_0 = None
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0)


def test_case_9():
    none_type_0 = None
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    config_1 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_1.register_type(config_1)
    var_0 = config_1.load_environment_vars()
    config_1.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_1)
    config_1 = module_0.Config(none_type_0, none_type_0, none_type_1)
    config_1.__getattr__(none_type_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    str_0 = "={"
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_13():
    set_0 = set()
    str_0 = "={"
    var_0 = module_1.isdatadescriptor(str_0)
    none_type_0 = None
    config_0 = module_1.getmembers(set_0, none_type_0)
    str_1 = "REQUEST_MAX_SIZE"
    module_0.Config(none_type_0, converters=str_1)


def test_case_14():
    set_0 = set()
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=set_0)
    str_0 = "S"
    module_0.Config(env_prefix=str_0, converters=config_0)
