# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "vZ42"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "`oKA\\{\rG?-<+jx"
    str_3 = "AUTO_EXTEND"
    dict_0 = {str_0: str_0, str_1: str_2, str_1: str_0, str_3: str_2}
    module_0.Config(dict_0, keep_alive=str_1)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = module_1.getmembers(config_0)
    config_2 = module_0.Config()


def test_case_4():
    config_0 = module_0.Config()
    str_0 = ":n((egO~2PR*]rc95B"
    list_0 = [str_0]
    none_type_0 = config_0.__setitem__(str_0, list_0)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(var_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    str_0 = "&(ng"
    config_2 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    int_0 = 1206
    none_type_0 = None
    module_0.Config(env_prefix=int_0, converters=none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_1)
    var_1 = config_0.load_environment_vars()
    none_type_0 = config_1.register_type(var_0)
    config_1.register_type(var_0)
