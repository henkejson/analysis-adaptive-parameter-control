# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "c(8~T"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    dict_0 = {}
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=bool_0)
    module_0.DescriptorMeta(dict_0, *bool_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_1)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=bool_0)
    config_0.__getattr__(bool_0)


def test_case_6():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    str_0 = "AFw<P"
    config_1 = module_0.Config(converters=str_0)
    none_type_1 = config_1.__setitem__(str_0, str_0)
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "AFw<P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_1)
    var_0.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    str_0 = "AFw<P"
    str_1 = "F:V\x0ctVa&|*CVLJb"
    module_0.Config(keep_alive=str_0, converters=str_1)


def test_case_12():
    str_0 = "AFw<P"
    config_0 = module_0.Config(converters=str_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_1, str_1)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)
