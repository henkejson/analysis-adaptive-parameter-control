# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\x0c8u)@ia\\Uk(=5dg"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    var_0 = config_0.load_environment_vars()


def test_case_3():
    none_type_0 = None
    int_0 = 1025
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__setattr__(none_type_0, int_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    str_0 = "--simple"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    str_1 = "\rVA$|ZY]k5*iA"
    tuple_0 = (str_0, str_1, str_0)
    tuple_1 = (str_0, tuple_0)
    dict_0 = {tuple_1: str_0, none_type_0: config_0}
    module_1.Http(dict_0)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "\x0c8u)@ia\\Uk(=5dg"
    config_1 = module_0.Config(converters=str_0)
    config_1.__getattr__(str_0)


def test_case_7():
    str_0 = "M)FAnQ%\r+MJ7"
    module_0.Config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "--simple"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    str_1 = "\rVA$|ZY]k5*iA"
    tuple_0 = (str_0, str_1, str_0)
    tuple_1 = (str_0, tuple_0)
    dict_0 = {tuple_1: str_0, none_type_0: config_0}
    var_0 = module_2.getmembers(config_0)
    str_2 = "REQUEST_ID_HEADER"
    none_type_1 = config_0.__setitem__(str_2, tuple_0)
    str_3 = "vx\r\naXv"
    none_type_2 = config_0.__setattr__(str_3, str_2)
    none_type_3 = config_0.register_type(dict_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    bytes_0 = b"O\x0b\xca\xd7j{e\x11\x95\xf7j\x0b!7\xbb\x8c\x05\xcf"
    config_0.update_config(bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_3.LocalCertCreator.TRUSTME
    module_0.Config(env_prefix=var_0, converters=var_0)
