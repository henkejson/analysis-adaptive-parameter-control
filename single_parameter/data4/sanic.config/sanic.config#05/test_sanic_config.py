# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "W9N"
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_2():
    str_0 = "G"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    module_1.check_error_format(bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)
    var_0 = config_1.load_environment_vars()
    var_0.load_environment_vars(none_type_0)


def test_case_4():
    int_0 = 1630
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(int_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "G$ "
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    complex_0 = 504.46173 - 668.819j
    none_type_0 = config_0.register_type(complex_0)


def test_case_8():
    int_0 = 1630
    module_0.Config(converters=int_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    dict_0 = {}
    bytes_0 = b"\xa9\xd7\xfb@#\xcd-"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.update(**dict_0)
    config_0.update_config(bytes_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    int_0 = 1630
    none_type_1 = None
    config_1 = module_0.Config(converters=none_type_1)
    none_type_2 = config_1.register_type(int_0)
    str_0 = "P];\x0b\x0b^ 0V#'F"
    none_type_3 = config_1.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_1)
    module_0.Config(env_prefix=config_1, converters=config_0)


def test_case_13():
    int_0 = 1630
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_15():
    none_type_0 = None
    str_0 = "JV2uyYh#}R"
    str_1 = "F0k6'|wWX\x0c7BAy"
    str_2 = "websocket_max_size"
    str_3 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: none_type_0, str_1: str_0, str_2: str_0, str_3: none_type_0}
    module_0.Config(dict_0)


def test_case_16():
    str_0 = "G"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.load_environment_vars(str_0)
