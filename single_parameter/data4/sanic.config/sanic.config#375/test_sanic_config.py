# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_3():
    str_0 = "z"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_4():
    str_0 = "P"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(var_0)


def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0,)
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    var_1 = var_0.__repr__()
    var_1.update_config(tuple_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(config_0, str_0, converters=config_0)


def test_case_9():
    bytes_0 = b"\x924M\x7fV\xfc\x02\x19}A\x0b\x19\xb9>\x89\x93\x95"
    module_0.Config(converters=bytes_0)


def test_case_10():
    str_0 = ">'qrzO"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "_converters"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_2.LocalCertCreator.MKCERT
    config_0.update_config(var_0)
