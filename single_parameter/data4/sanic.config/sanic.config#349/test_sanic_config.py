# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "MM.'"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.register_type(config_0)


def test_case_2():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = '"69KF'
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    str_0 = "FORWARDED_FOR_HEADER"
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = module_1.isclass(none_type_0)
    var_0.update(**bool_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "MM.'"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    dict_0 = {}
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(keep_alive=dict_0, converters=config_0)


def test_case_9():
    str_0 = "IH>$4~]rI&"
    config_0 = module_0.Config()
    str_1 = config_0.__str__()
    var_0 = config_0.load_environment_vars()
    str_2 = "W@*SAF"
    dict_0 = {str_2: str_0}
    module_0.Config(dict_0, dict_0, str_0)


def test_case_10():
    config_0 = module_0.Config()
    module_2.Http(config_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    local_cert_creator_0 = module_3.LocalCertCreator.MKCERT
    none_type_0 = config_0.register_type(local_cert_creator_0)
    list_0 = []
    none_type_1 = config_0.register_type(list_0)
    config_0.register_type(list_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(str_0, var_0)
