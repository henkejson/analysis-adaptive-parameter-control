# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_2():
    str_0 = "2M~br_Yg2"
    str_1 = "),;Hda9\\"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_1)
    config_0.__getattr__(var_0)


def test_case_4():
    float_0 = 4053.0
    dict_0 = {float_0: float_0, float_0: float_0}
    config_0 = module_0.Config()
    config_0.__getattr__(dict_0)


def test_case_5():
    str_0 = "),;Hda9\\"
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(str_0)
    config_0.update_config(str_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "&HDS\\#U:+"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.update_config(none_type_1)


def test_case_7():
    str_0 = "Connection received with no asyncio loop."
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_2 = module_0.Config()
    none_type_1 = config_2.register_type(config_2)
    config_2.__getattr__(config_2)


def test_case_8():
    str_0 = "),;Hda9\\"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "Connection received with no asyncio loop."
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    module_0.Config(converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(converters=none_type_0)
    config_2 = module_0.Config(converters=none_type_0)
    config_3 = module_0.Config(config_1, keep_alive=config_2)
    none_type_1 = config_1.register_type(config_0)
    config_0.__getattr__(config_3)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    config_2 = config_1.update_config(config_1)
    config_3 = module_0.Config(converters=config_1)
    none_type_0 = config_1.register_type(config_1)
    module_1.check_error_format(config_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0)
    config_2 = module_0.Config(config_0, none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, none_type_0)
