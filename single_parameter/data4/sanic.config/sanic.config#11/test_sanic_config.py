# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)


def test_case_2():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = module_1.getmembers(str_0)


def test_case_3():
    str_0 = "Kc%'{AoE\x0cOj^{K"
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.__setattr__(str_0, config_0)
    none_type_2 = config_0.register_type(str_0)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_1)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(str_0)
    none_type_3 = None
    config_1.update_config(none_type_3)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "HaM&@"
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "mode"
    config_1 = module_0.Config(keep_alive=str_0)
    config_0.__getattr__(config_0)


def test_case_7():
    str_0 = "Kc%'{AoOj^{K"
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.__setattr__(str_0, config_0)
    none_type_2 = config_0.register_type(str_0)
    none_type_3 = None
    var_0 = config_0.load_environment_vars(str_0)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_3)
    none_type_4 = config_0.__setattr__(str_0, none_type_3)
    var_1 = module_1.getmembers(str_0)
    config_2 = module_0.Config(env_prefix=none_type_2, keep_alive=str_0)
    config_1.update_config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "REAL_IP_HEADER"
    str_1 = "NOISY_EXCEPTIONS"
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    var_1 = module_1.getmembers(bool_0)
    module_1.getmembers(var_1, var_1)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    str_0 = "G"
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.register_type(var_0)
    config_0.register_type(none_type_0)


def test_case_12():
    str_0 = "G"
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=config_0)
    str_0.respond(str_0)


def test_case_13():
    str_0 = "G"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_1 = module_1.getmembers(str_0)
    config_0.load_environment_vars(str_0)
