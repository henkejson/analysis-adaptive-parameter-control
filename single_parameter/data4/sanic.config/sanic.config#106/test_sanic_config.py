# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x8b\xb8\xf7\x179y5\x16~\xa6[\x07\xe7\x03"
    module_0.Config(env_prefix=bytes_0, converters=bytes_0)


def test_case_2():
    str_0 = "iA|e8nkNg|]p)x\nlK}.V"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = config_0.update(**config_0)
    module_0.DescriptorMeta(str_0)


def test_case_3():
    str_0 = 'hk_P^4.~lXX!b-gI"NX`'
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)


def test_case_4():
    str_0 = "iA|e8nkNg|]p)x\nlK}.V"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=str_0)
    none_type_1 = config_0.register_type(str_0)
    none_type_2 = config_0.update(**config_0)
    config_0.update_config(none_type_1)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    none_type_1 = config_0.register_type(var_0)
    config_1 = module_0.Config()
    none_type_2 = None
    config_0.head_response_ignored(none_type_2, none_type_1)


def test_case_6():
    str_0 = "iA|e8nkNg|]p)x\nlK}.V"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_1.load_environment_vars()
    var_0.load_environment_vars()


def test_case_7():
    str_0 = "iA|e8nkNg|]p)x\nlK}.V"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    config_0.__getattr__(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = "iA|e8nkNg|]p)x\nlK}.V"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = '%ot$oK3-gNk&o}"PRJ'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    config_0 = module_0.Config(dict_0, keep_alive=bool_0, converters=dict_0)
    config_0.register_type(str_0)


def test_case_12():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = '%t$K3-gN&o}"PRJ'
    str_2 = "Run Sanic server using HTTP/3"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    bool_0 = True
    module_0.Config(dict_0, keep_alive=bool_0, converters=dict_0)


def test_case_13():
    str_0 = "=$*c#CSz8\\V9s]"
    str_1 = '%t$K3-gN&o}"PRJ'
    str_2 = "Run Sanic server using HTTP/3"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    bool_0 = True
    config_0 = module_0.Config(dict_0, keep_alive=bool_0, converters=dict_0)
    str_3 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_3, str_3)
