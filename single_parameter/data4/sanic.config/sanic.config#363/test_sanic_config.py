# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"u\xe6U\x14\xb4C"
    config_0 = module_0.Config(keep_alive=bytes_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.__repr__()


def test_case_2():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "G"
    module_0.Config(config_0, str_0, converters=str_0)


def test_case_4():
    str_0 = "x-scheme"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.__getattr__(config_0)


def test_case_5():
    str_0 = "G"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_6():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0)
    bytes_0 = b"\x17C"
    config_0.__getattr__(bytes_0)


def test_case_7():
    str_0 = "x-scheme"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_8():
    none_type_0 = None
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = "x-scheme"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = ")"
    config_0.update_config(str_1)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)
