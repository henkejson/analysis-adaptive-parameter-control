# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 410
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=int_0, converters=none_type_0)


def test_case_2():
    float_0 = 3798.1
    module_0.Config(env_prefix=float_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "G"
    module_0.Config(config_0, str_0, converters=config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = module_1.getmembers(config_0)
    str_0 = "_"
    config_1 = module_0.Config(env_prefix=str_0, converters=var_0)
    config_2 = module_0.Config()
    var_1 = config_0.load_environment_vars()
    var_2 = config_2.update_config(config_1)
    config_0.update_config(none_type_0)


def test_case_5():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    dict_0 = {none_type_0: bool_0, none_type_0: none_type_0}
    config_0 = module_0.Config(keep_alive=dict_0)
    config_0.__getattr__(dict_0)


def test_case_9():
    none_type_0 = None
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"\x01\x02\xda%\xa9\x0e\x95q\xec\x03\xfa\xbdgQ"
    config_0 = module_0.Config(converters=bytes_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_0, none_type_0)
    str_0 = "G"
    config_2 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    var_1 = config_2.load_environment_vars()
    config_0.update_config(bytes_0)


def test_case_11():
    str_0 = 'p3V "u\t\x0bAQl3mwW5Xs'
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)
