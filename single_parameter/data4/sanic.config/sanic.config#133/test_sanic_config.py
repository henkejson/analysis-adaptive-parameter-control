# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "UNKNOWN"
    module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_0.__setattr__(var_0, var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__repr__()
    var_1.register_type(config_0)


def test_case_4():
    int_0 = 734
    module_0.Config(int_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_8():
    str_0 = "UNKNOWN"
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    config_0 = module_0.Config(converters=set_0)
    var_0 = module_1.isclass(config_0)
    var_0.update_config(str_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(var_0)


def test_case_10():
    config_0 = module_0.Config()
    bytes_0 = b"V\xa6r\xa5\x17zD\xbb m\x93\x7f\xa3\xb7\xcf\xc0G"
    str_0 = "/4"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    var_0 = config_0.__getattr__(str_0)
    config_0.update_config(bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    bytes_0 = b"bE\xf6\xe3pAx\x11\x8c\x7f\x1e\xe4F\x88\x1f"
    str_0 = "k/4"
    config_1 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    var_0 = config_0.__getattr__(str_0)
    set_0 = set()
    none_type_1 = config_1.__setitem__(var_0, none_type_0)
    none_type_2 = config_0.register_type(bytes_0)
    config_0.update_config(set_0)


def test_case_12():
    default_0 = module_2.Default()
    str_0 = "F:L"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    var_0.register_type(default_0)


def test_case_13():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = config_0.update(**config_0)
    config_0.__setattr__(str_0, str_0)
