# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_3():
    bytes_0 = b"{\x1b;o+\x8a\xb9\xc8v\xf5\x04<L\xa7\xc4\xa6x\xf7\xbe"
    module_0.Config(env_prefix=bytes_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_1 = module_0.Config(config_0, keep_alive=config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = None
    config_0.__getattr__(none_type_1)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    str_0 = "Start method '"
    bytes_0 = b".`\xd6\xfb\x88\x06P\xb9q}$\x8e\x01R\x17\xf7\xec"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, str_0, converters=none_type_0)
    config_0.update_config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "&T,J4"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    config_0.update_config(none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = None
    var_0 = config_0.load_environment_vars()
    none_type_2 = config_0.register_type(config_0)
    str_0 = "1RM"
    none_type_0.__setitem__(str_0, none_type_1)


def test_case_10():
    bytes_0 = b"\xb5\x95\x1f\xeeyh\x1e\x81\xfd+\xcb\xe6z*\xdcC"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, converters=none_type_1)
    config_1.__setitem__(bytes_0, none_type_1)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_0.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    var_0.update()


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_1)
    str_0 = "&T,J4"
    none_type_1 = config_0.__setattr__(str_0, var_1)
    config_0.register_type(var_0)


def test_case_15():
    str_0 = "4t>"
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    none_type_1 = None
    set_0 = {none_type_1}
    config_0 = module_0.Config(keep_alive=none_type_1, converters=set_0)
    module_0.DescriptorMeta(str_0, *var_0)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_0)
