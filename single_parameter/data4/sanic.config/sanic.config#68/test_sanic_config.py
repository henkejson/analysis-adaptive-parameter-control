# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    module_1.load_module_from_file_location(config_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_0 = "~SRHu~zahG`#g"
    config_1.update_config(str_0)


def test_case_4():
    str_0 = "@ZMHc{"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    list_0 = [str_0]
    module_0.DescriptorMeta(str_0, *list_0)


def test_case_5():
    str_0 = ";$gRf8|\x0bU*^\x0b\\/"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(config_0, config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    var_0 = config_1.update_config(config_1)


def test_case_7():
    str_0 = "Reset the response object.\n\n        This clears much of the state of the object. It should\n        generally not be called directly, but is called automatically as\n        part of the request lifecycle.\n\n        Raises:\n            sanic.exceptions.ServerError: If the response has already been\n                sent.\n        "
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    none_type_1 = None
    none_type_2 = config_1.register_type(none_type_1)
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "@ZMH6c{"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_0.__setitem__(config_1, config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    list_0 = [config_0]
    none_type_1 = config_0.update(*list_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
