# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_4():
    str_0 = "lJ6=hT}"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_0.__getattr__(str_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    bytes_0 = b"\x0bH)\xed\xc6\xe5\x86\x81RS\xac\xe1\xa0$\xd3\xda"
    config_0.update_config(bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_8():
    str_0 = '"lJ6=hT}'
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    bytes_0 = b"\x0bH)\xed\xc6\xe5\x86\x81RS\xac\xe1\xa0$\xd3\xda"
    var_0 = config_0.update_config(config_0)
    module_0.Config(bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "l=\t=hbD"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_12():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_0, bool_0: bool_1}
    str_0 = "XN8d\nKZ:Us"
    bool_2 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_2)
    config_0.update_config(dict_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = ""
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_0.load_environment_vars(str_0)
