# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=var_0)
    bytes_0 = b"\xb9"
    config_1.update_config(bytes_0)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = 'T$\'"\nj_"-m#ct{J'
    config_0.update_config(str_0)


def test_case_7():
    complex_0 = -2199.2112 - 1592j
    list_0 = [complex_0, complex_0, complex_0]
    none_type_0 = None
    module_0.Config(env_prefix=none_type_0, converters=list_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = 'T$\'"\nj_"-m#ct{J'
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=var_0, converters=config_0)
    var_0.respond(var_0)
