# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    str_0 = "strict_slashes"
    str_1 = "By4++Lx"
    dict_0 = {str_0: str_0, str_1: str_1}
    bool_0 = False
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(config_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "--repl"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    var_0 = module_1.getmembers(bool_0, none_type_0)
    config_2 = module_0.Config()


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_0 = None
    config_2 = module_0.Config(converters=none_type_0)
    var_0 = module_1.getmembers(config_2, bool_0)
    config_3 = module_0.Config(converters=config_2)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = ";#9OSDQG?~Q-HL0"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "C2S]zKb^D-cmAOKQ1"
    none_type_1 = config_0.__setitem__(str_0, bool_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1.__getattr__(bool_0)


def test_case_12():
    bytes_0 = b"\xac8\xc9z"
    var_0 = bytes_0.__repr__()
    module_0.Config(keep_alive=bytes_0, converters=var_0)


def test_case_13():
    bool_0 = False
    str_0 = "L"
    str_1 = "-L@UPls#%k1oLE12"
    dict_0 = {str_0: str_0, str_1: bool_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = None
    config_1 = module_0.Config(converters=none_type_0)
    var_0 = module_1.isclass(none_type_0)
    var_1 = module_1.isclass(none_type_1)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_0, none_type_0)
