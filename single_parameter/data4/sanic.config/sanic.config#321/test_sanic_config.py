# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    bool_0 = False
    config_2 = module_0.Config(config_1, keep_alive=bool_0, converters=bool_0)
    config_2.update_config(var_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    int_0 = 1344
    module_0.Config(int_0)


def test_case_4():
    int_0 = 2053
    dict_0 = {int_0: int_0, int_0: int_0}
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    none_type_1 = None
    str_0 = "M"
    none_type_2 = config_1.__setitem__(str_0, none_type_1)
    config_2 = module_0.Config(dict_0, none_type_1)
    config_2.update_config(none_type_1)


def test_case_5():
    int_0 = 2053
    dict_0 = {int_0: int_0, int_0: int_0}
    config_0 = module_0.Config()
    str_0 = "0jc_4$e],-RS3"
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, str_0, none_type_0)
    none_type_1 = config_0.register_type(int_0)
    var_0 = config_0.update_config(config_0)
    config_2 = module_0.Config(dict_0, none_type_0)
    config_3 = module_0.Config()
    list_0 = []
    none_type_2 = config_2.update(*list_0, **config_3)
    config_2.update_config(var_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    str_0 = "REAL_IP_HEADER"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.register_type(str_0)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    int_0 = 2053
    config_0 = module_0.Config()
    config_0.update_config(int_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    int_0 = 2053
    dict_0 = {int_0: int_0, int_0: int_0}
    config_1 = module_0.Config()
    none_type_1 = None
    config_2 = module_0.Config(keep_alive=dict_0, converters=none_type_1)
    str_0 = "YnJYrYsr[ln_~}$ZI"
    none_type_2 = config_2.__setattr__(str_0, dict_0)
    none_type_3 = None
    none_type_4 = config_2.register_type(none_type_2)
    config_3 = module_0.Config(keep_alive=none_type_3, converters=dict_0)
    config_1.update_config(none_type_4)


def test_case_11():
    int_0 = 2053
    dict_0 = {int_0: int_0, int_0: int_0}
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(dict_0, none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_1.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "0jc_4$e],-RS3"
    none_type_0 = None
    config_1 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    config_2 = module_0.Config()
    var_0 = module_1.getmembers(none_type_1)
    none_type_2 = config_1.register_type(var_0)
    config_0.update_config(str_0)


def test_case_13():
    int_0 = 2053
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "0jc_4$e],-RS3"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
