# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update(**config_0)


def test_case_2():
    list_0 = []
    config_0 = module_0.Config(list_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(config_0)
    config_0.update_config(none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.update_config(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__setitem__(config_0, none_type_0)


def test_case_7():
    bool_0 = False
    int_0 = -1664
    module_0.Config(env_prefix=int_0, converters=bool_0)


def test_case_8():
    int_0 = 6457
    str_0 = "YS7JGtgd\t};lFz)W"
    config_0 = module_0.Config(keep_alive=int_0)
    config_0.update_config(str_0)


def test_case_9():
    int_0 = 6457
    module_0.Config(converters=int_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = []
    config_1 = module_0.Config(list_0)
    config_0.__getattr__(config_1)


def test_case_12():
    list_0 = []
    config_0 = module_0.Config(list_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = "L"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    config_0.register_type(var_0)


def test_case_13():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(list_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_1 = module_0.Config(none_type_0, none_type_1, converters=config_0)
    var_0.init_for_request()


def test_case_14():
    list_0 = []
    config_0 = module_0.Config(list_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, list_0)
    none_type_1 = config_0.register_type(var_0)
    module_0.Config(config_0)
