# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "auto-reload"
    dict_0 = {str_0: str_0}
    bool_0 = True
    config_0 = module_0.Config(dict_0, str_0, bool_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = "z|p-~S@D"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "Htj{7ig(zJAJfs"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(config_0)
    str_0 = "Htj{7ig(zJ4AJfs"
    config_1 = module_0.Config(config_0, none_type_0, none_type_0)
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    config_0 = module_0.Config()
    bytes_0 = b"\xe9"
    config_1 = module_0.Config()
    module_0.Config(env_prefix=bytes_0, keep_alive=bytes_0, converters=bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, config_1)
