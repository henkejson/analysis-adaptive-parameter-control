# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "R9m08>V<rIFGK"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=str_0)
    str_1 = "FORWARDED_SECRET"
    none_type_1 = config_0.__setattr__(str_1, str_0)
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_1)
    config_1.update_config(none_type_1)


def test_case_2():
    str_0 = "R9m08>V<rIFGK"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_3():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    str_0 = "V918VrIFGK"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_0.Config(config_0)
    var_2 = var_1.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    module_1.Http(config_0)


def test_case_6():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_7():
    str_0 = "R9m08>V<rIFGK"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_0.__setattr__(str_0, config_0)
    none_type_2 = config_0.register_type(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_0.respond(var_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "\nR9m8>V<rIK"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_12():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = module_2.getmembers(config_0)
    config_1 = module_0.Config()
    config_1.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_14():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_15():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(keep_alive=str_0)
    none_type_1 = module_2.isdatadescriptor(config_1)
    tuple_0 = ()
    none_type_2 = config_0.register_type(tuple_0)
    config_2 = module_0.Config(env_prefix=none_type_2, converters=none_type_0)
    var_0.update_config(none_type_2)
