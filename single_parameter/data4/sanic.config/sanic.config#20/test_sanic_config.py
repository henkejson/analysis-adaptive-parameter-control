# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "8$1G0"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_3():
    list_0 = []
    object_0 = module_1.object(*list_0)
    bytes_0 = b'\x8ccJ\xe4j\xce\xfc\xc50"W.U\xd0\xb2\x08'
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_6():
    str_0 = "Jwi=B:"
    none_type_0 = None
    module_0.Config(str_0, keep_alive=none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.init_for_request()


def test_case_8():
    str_0 = "8$1G0"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = config_0.register_type(none_type_1)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = module_2.isclass(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.Config(converters=list_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    module_0.Config(env_prefix=config_0, keep_alive=none_type_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0, converters=bool_0)
    str_0 = "REAL_IP_HEADER"
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    config_0 = module_0.Config(
        env_prefix=bool_0, keep_alive=bool_1, converters=none_type_0
    )
    str_0 = "SANIC_"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    config_1 = module_0.Config(converters=config_0)
    config_1.update_config(none_type_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(
        env_prefix=bool_0, keep_alive=bool_0, converters=none_type_0
    )
    str_0 = "<-"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    str_1 = "SANIC_"
    none_type_2 = config_0.__setattr__(str_1, none_type_0)
    none_type_3 = config_0.__setattr__(str_0, none_type_1)
    str_2 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_2, bool_0)
