# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=var_0, converters=var_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.isdatadescriptor(config_0)
    var_1 = var_0.__bool__()
    config_1 = module_0.Config(env_prefix=var_1, keep_alive=var_1, converters=var_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    config_1 = module_0.Config(config_0)
    var_0.__subclasscheck__(bool_0, bool_0)


def test_case_5():
    int_0 = 64
    tuple_0 = (int_0, int_0)
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(tuple_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "Xn/S>o"
    none_type_1 = config_0.register_type(str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "Rf\x0cmpyeF?Y.]\x0b 'k=\"LF"
    none_type_2 = config_0.__setitem__(str_1, none_type_1)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = False
    module_0.Config(env_prefix=config_0, keep_alive=bool_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "Xn/S>o"
    none_type_0 = config_0.register_type(str_0)
    str_1 = "\r\n|(\x0c\nL&~uI5mO0@o"
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    var_0 = config_2.load_environment_vars()
    var_1 = var_0.__repr__()
    config_2.update_config(str_1)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "Xn/S>o"
    none_type_0 = config_0.register_type(str_0)
    config_0.__getattr__(config_0)


def test_case_13():
    str_0 = ">}@\tX$t8_dXQ5jsmlE\\Y"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "Xn/S>o"
    none_type_0 = config_0.register_type(str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, var_0)
