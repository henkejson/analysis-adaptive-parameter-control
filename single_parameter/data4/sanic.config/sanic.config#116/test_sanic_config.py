# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\r.xVJAxmV0Z<@oh"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.update()


def test_case_2():
    bytes_0 = b"I'm a teapot"
    module_0.Config(env_prefix=bytes_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    module_1.Http(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "\r.xVJAxmV0Z<@oh"
    module_0.Config(converters=str_0)


def test_case_7():
    str_0 = "LOCAL_CERT_CREATOR"
    config_0 = module_0.Config()
    config_0.__setitem__(str_0, str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = config_0.update_config(config_0)
    var_0.__getattr__(var_0)


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    config_0 = module_0.Config(converters=dict_0)
    str_0 = "\r.xVJAxmV0Z<@oh"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_1.update()


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(config_0, converters=none_type_0)
    module_2.check_error_format(none_type_0)


def test_case_11():
    dict_0 = {}
    config_0 = module_0.Config(converters=dict_0)
    config_0.__getattr__(dict_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = "@ a.xp{&"
    config_0.update_config(str_0)


def test_case_13():
    none_type_0 = None
    str_0 = ")OH})triaMyvvW!"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "An instance of Inspector for accessing the application's state.\n\n        This can only be accessed from a worker process, and only if the\n        inspector has been enabled.\n\n        See [Inspector](/en/guide/deployment/inspector) for details.\n\n        Returns:\n            Inspector: An instance of Inspector.\n        "
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_0.Config(dict_0, keep_alive=none_type_0)
