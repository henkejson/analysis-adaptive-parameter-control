# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(env_prefix=bool_0, keep_alive=bool_0, converters=bool_0)


def test_case_2():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "H"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_1.getmembers(none_type_0)
    config_2 = module_0.Config(config_1)
    var_1 = config_2.update_config(config_1)


def test_case_4():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "+'q>"
    none_type_0 = config_0.__setitem__(str_1, var_0)
    none_type_1 = config_0.update()
    var_1 = module_1.getmembers(var_0)
    module_0.Config(env_prefix=str_0, converters=var_1)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "H"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_1.update_config(config_1)
    str_1 = "+'q>"
    none_type_1 = config_1.__setitem__(str_1, var_0)
    var_1 = module_1.getmembers(config_1)
    config_2 = module_0.Config()


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_1.isclass(config_0)
    config_0.update_config(var_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "H"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_1.update_config(config_1)
    str_1 = "+'q>"
    none_type_1 = config_1.__setitem__(str_1, var_0)
    config_2 = module_0.Config()
    config_1.update_config(str_1)


def test_case_9():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_12():
    str_0 = "2ik("
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, str_0)
