# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)


def test_case_2():
    bytes_0 = b"*"
    module_0.Config(bytes_0, converters=bytes_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__instancecheck__(config_0, config_0)


def test_case_4():
    bytes_0 = b"&\xb3\xb0\xe9\xd7\x85"
    str_0 = "WEBSOCKET_MAX_SIZE"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(keep_alive=dict_0)
    config_0.update_config(bytes_0)


def test_case_5():
    str_0 = ""
    bytes_0 = b"eC\xdb\x8e\xdfaU\xb6\xb2hE^\xb7\x8a\xa1"
    none_type_0 = None
    config_0 = module_0.Config(str_0, str_0, none_type_0)
    module_1.Http(bytes_0)


def test_case_6():
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "G"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.register_type(config_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "RMDEJ#lQf^m@J!V`vZEG"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.update()
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.register_type(var_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_1)
