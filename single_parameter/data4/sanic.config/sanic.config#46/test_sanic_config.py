# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=config_0)
    var_0 = module_1.getmembers(str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "L4-\x0bS*C+Qo4*)"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    config_0 = module_0.Config()
    int_0 = 740
    config_0.__getattr__(int_0)


def test_case_8():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(keep_alive=str_0, converters=config_0)
    none_type_0 = config_1.register_type(var_0)
    none_type_1 = None
    config_2 = module_0.Config(config_1)
    none_type_2 = config_0.update()
    config_0.update_config(none_type_1)


def test_case_9():
    str_0 = "L4-\x0bS*C+Qo4*)"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = ";mny]]W\nfub*JJQ%Qs+"
    config_0.update_config(str_1)


def test_case_10():
    str_0 = "L4\x0bS*+Qo4V*)"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=config_0)
    config_0.register_type(str_0)


def test_case_11():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(config_0, keep_alive=str_0)
    complex_0 = -318.8858 - 2113j
    none_type_0 = config_0.register_type(complex_0)
    module_0.Config(env_prefix=str_0, converters=config_1)
