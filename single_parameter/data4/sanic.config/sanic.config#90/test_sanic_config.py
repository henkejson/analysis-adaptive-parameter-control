# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = 'HPlDe0-}+H\tCvF"'
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "Ho/"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "'H/"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(str_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    dict_0 = module_1.isclass(bool_0)
    config_0 = module_0.Config(dict_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {}
    str_0 = "Cannot dispatch server event without first running await server.startup()"
    config_0 = module_0.Config(dict_0, str_0)
    none_type_1 = config_0.register_type(str_0)
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "`\ndQZ)UE)<\nqq<w>"
    str_1 = "ylyq]iG`UU(]N8cV4q91"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0)
    none_type_0 = None
    dict_1 = {}
    str_2 = "Cannot disptch server evnt withut first running await server-sartup()"
    config_1 = module_0.Config(dict_1, str_2)
    none_type_1 = config_1.register_type(none_type_0)
    none_type_2 = config_0.register_type(none_type_1)
    str_3 = ""
    none_type_3 = config_1.__setitem__(str_3, config_1)
    var_0 = config_1.update_config(config_1)
    config_2 = module_0.Config(keep_alive=var_0, converters=none_type_1)
    config_1.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    dict_0 = {none_type_0: none_type_0}
    config_0.__getattr__(dict_0)


def test_case_11():
    str_0 = "'H/"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.update_config(str_0)


def test_case_12():
    str_0 = "`\ndQZ)UE:)<\nqq<w>"
    str_1 = "ylyq]iG`UU(]N8cV4q91"
    str_2 = "(&F?e{@}()"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_2}
    config_0 = module_0.Config(dict_0)
    dict_1 = {}
    str_3 = "Cannot disptch server evnt withut first running await server-sartup()"
    config_1 = module_0.Config(dict_1, str_3)
    str_4 = "_cdelayed_tasks"
    none_type_0 = config_0.__setattr__(str_4, str_3)
    str_5 = ""
    none_type_1 = config_1.__setitem__(str_5, config_1)
    var_0 = config_1.update_config(config_1)
    module_0.Config(keep_alive=var_0, converters=str_0)


def test_case_13():
    none_type_0 = None
    dict_0 = {}
    str_0 = "Cannot disptch server evnt withut first running await server-sartup()"
    config_0 = module_0.Config(dict_0, str_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_1)


def test_case_14():
    str_0 = ""
    bytes_0 = b"O\xa9\x06\xb9B3\xf4\xa3\xbe\xf0\x03"
    str_1 = "`\ndQZ)UE)<\nqq<w>"
    str_2 = "ylyq]iG`UU(]N8cV4q91"
    str_3 = "(&F?e{@}()"
    dict_0 = {str_1: str_1, str_2: str_1, str_2: str_1, str_3: str_3}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.__setitem__(str_0, bytes_0)
    none_type_1 = None
    dict_1 = {}
    str_4 = "Cannot disptch server evnt withut first running await server-sartup()"
    config_1 = module_0.Config(dict_1, str_4)
    none_type_2 = module_1.getmembers(str_0, str_0)
    str_5 = "_delayed_tasks"
    none_type_3 = config_0.__setattr__(str_5, str_4)
    str_6 = ""
    none_type_4 = config_1.__setitem__(str_6, config_1)
    var_0 = config_1.update_config(config_1)
    config_2 = module_0.Config(keep_alive=var_0, converters=none_type_2)
    config_1.update_config(none_type_1)


def test_case_15():
    str_0 = ""
    bytes_0 = b"O\xa9\x06\xb9B3\xf4\xa3\xbe\xf0\x03"
    str_1 = "`\ndQZ)UE)<\nqq<w>"
    str_2 = "ylyq]iG`UU(]N8cV4q91"
    str_3 = "(&F?e{@}()"
    dict_0 = {str_1: str_1, str_2: str_1, str_2: str_1, str_3: str_3}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.__setitem__(str_0, bytes_0)
    none_type_1 = None
    dict_1 = {}
    str_4 = "Cannot disptch server evnt withut first running await server-sartup()"
    config_1 = module_0.Config(dict_1, str_4)
    none_type_2 = config_1.register_type(none_type_1)
    str_5 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_5, str_5)


def test_case_16():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.load_environment_vars(str_0)


def test_case_17():
    list_0 = []
    none_type_0 = None
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: list_0}
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(dict_0)
    module_0.Config(dict_0, keep_alive=none_type_0)
