# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_0)


def test_case_1():
    bytes_0 = b"\x98:\x04\xa0o\x8f\x1f\x01\x01\xa8ob\x84Q\xea\xccT"
    module_0.remove_entity_headers(bytes_0)


def test_case_2():
    str_0 = '\n    Removes all the entity headers present in the headers given.\n    According to RFC 2616 Section 10.3.5,\n    Content-Location and Expires are allowed as for the\n    "strong cache validator".\n    https://tools.ietf.org/html/rfc2616#section-10.3.5\n\n    returns the headers without the entity headers\n    '
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_entity_header(var_0)


def test_case_6():
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(default_0)


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_1 = module_1.ismodule(bool_0)
    var_2 = module_0.has_message_body(var_1)
    var_3 = module_0.has_message_body(var_2)
    module_0.import_string(bool_0, var_2)


def test_case_8():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_2 = default_0.__repr__()
    str_0 = default_0.__str__()


def test_case_9():
    str_0 = "content-length"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 100
    var_1 = module_0.has_message_body(int_0)
    var_2 = int_0.__repr__()


def test_case_10():
    str_0 = "content-length"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default(*var_0)


def test_case_11():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    var_0 = str_0.__repr__()
    str_1 = "content-location"
    str_2 = default_0.__str__()
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.is_hop_by_hop_header(var_0)
    var_3 = module_0.has_message_body(var_2)
    int_0 = 100
    var_4 = module_0.has_message_body(int_0)
    module_0.has_message_body(dict_0)
