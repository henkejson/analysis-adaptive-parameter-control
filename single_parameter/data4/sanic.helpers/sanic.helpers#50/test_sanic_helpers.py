# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    dict_0 = {str_0: var_0, bool_0: var_0, bool_0: var_0, bool_0: bool_0, var_0: var_0}
    module_0.remove_entity_headers(dict_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    dict_0 = {
        str_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bool_0 = module_0.is_atty()
    bool_1 = True
    module_0.is_entity_header(bool_1)


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_1)
    var_1 = module_0.has_message_body(var_0)
    int_0 = 331
    var_2 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_2)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {
        str_0: str_0,
        str_0: default_0,
        str_0: default_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_1.ismodule(dict_0)
    object_0 = module_2.object()
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_2 = object_0.__repr__()
    var_3 = module_0.has_message_body(bool_1)
    str_0 = dict_0.__str__()
    str_1 = bool_1.__str__()
    var_4 = module_0.is_entity_header(str_0)
    int_0 = 304
    var_5 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_5)
