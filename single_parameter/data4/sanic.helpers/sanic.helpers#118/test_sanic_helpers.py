# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x8a\t\xf1\x87\xbaf\xc55\x9d\xeb\xfb\xfd\x0f\x05\x01bq\x03\t"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(dict_0)


def test_case_1():
    bytes_0 = b"\x8a\t\xf1\x87\xbaf\xc55\x9d\xeb\xfb\xfd\x0f\x05\x01bq\x03\t"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "{];r"
    var_0 = module_0.is_entity_header(str_0)
    var_1 = var_0.__repr__()


def test_case_4():
    object_0 = module_1.object()
    module_0.is_hop_by_hop_header(object_0)


def test_case_5():
    bool_0 = True
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    str_1 = var_2.__str__()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_6():
    int_0 = 416
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    module_0.remove_entity_headers(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = dict_0.__repr__()
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()
    var_1 = bool_0.__repr__()
    object_0 = module_1.object()
    var_2 = module_0.is_hop_by_hop_header(var_1)
    default_0 = module_0.Default()
    var_3 = module_0.has_message_body(int_0)
    var_4 = object_0.__repr__()
    bytes_0 = b"ZU\xc5\xc9\xdc\x81\xa1\xda\x1a+\xecY  \xf6\xf8\x0c\x04"
    dict_0 = {var_4: bool_1, bytes_0: bytes_0, default_0: int_0}
    str_0 = default_0.__str__()
    module_0.remove_entity_headers(dict_0)
