# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import inspect as module_0
import sanic.helpers as module_1


def test_case_0():
    complex_0 = 545 + 2170.3113j
    var_0 = module_0.ismodule(complex_0)
    var_1 = module_1.has_message_body(var_0)
    str_0 = var_1.__str__()


def test_case_1():
    bool_0 = True
    var_0 = module_1.has_message_body(bool_0)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, var_0: var_0}
    module_1.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    default_0 = module_1.Default()


def test_case_4():
    str_0 = "Hh}cwV4-V>\r>v_;bP*)F"
    list_0 = [str_0]
    var_0 = module_0.ismodule(list_0)
    module_1.is_hop_by_hop_header(var_0)


def test_case_5():
    bool_0 = module_1.is_atty()
    bool_1 = module_1.is_atty()
    module_1.remove_entity_headers(bool_1, bool_1)


def test_case_6():
    dict_0 = {}
    default_0 = module_1.Default(**dict_0)
    bool_0 = module_1.is_atty()
    var_0 = default_0.__repr__()
    var_1 = module_1.is_entity_header(var_0)
    var_2 = module_1.has_message_body(bool_0)
    module_1.remove_entity_headers(default_0)


def test_case_7():
    dict_0 = {}
    default_0 = module_1.Default(**dict_0)
    bool_0 = module_1.is_atty()
    bool_1 = True
    var_0 = module_1.has_message_body(bool_1)
    default_1 = module_1.Default()
    str_0 = default_1.__str__()
    var_1 = default_1.__repr__()
    str_1 = default_1.__str__()
    module_1.has_message_body(dict_0)


def test_case_8():
    float_0 = 3654.379
    var_0 = module_1.has_message_body(float_0)
    module_1.is_entity_header(var_0)


def test_case_9():
    int_0 = 300
    str_0 = int_0.__str__()
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 304
    var_0 = module_1.has_message_body(int_0)
    str_0 = var_0.__str__()
    dict_0 = {str_0: var_0, str_0: var_0}
    var_1 = module_1.remove_entity_headers(dict_0)
    bool_0 = module_1.is_atty()
    str_1 = var_1.__str__()
    var_2 = var_1.__repr__()
    var_3 = var_0.__repr__()
    var_4 = var_3.__repr__()
    module_1.is_hop_by_hop_header(int_0)
