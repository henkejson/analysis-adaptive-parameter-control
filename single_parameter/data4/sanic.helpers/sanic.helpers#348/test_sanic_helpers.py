# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    str_0 = "'%s' is\rinvalid for C;ntent Range"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = False
    var_0 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_7():
    float_0 = 416.30949480833084
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.remove_entity_headers(var_1)


def test_case_8():
    str_0 = "'%s' is\rinvalid for C;ntent Range"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    float_0 = 304.0
    var_0 = module_0.has_message_body(float_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_1 = module_0.is_entity_header(str_0)
    str_2 = var_0.__str__()
    default_0 = module_0.Default()
    var_2 = module_0.is_hop_by_hop_header(str_1)
    default_1 = module_0.Default()
    default_2 = module_0.Default()
    str_3 = default_0.__str__()
    var_3 = default_1.__repr__()
    default_3 = module_0.Default()
    var_4 = module_0.has_message_body(var_1)
    str_4 = "m4LNBm|BZ@6h9F?6\t\x0bHD"
    var_5 = var_1.__repr__()
    dict_0 = {var_3: str_4, str_4: var_2}
    var_6 = module_0.remove_entity_headers(dict_0)
    module_0.is_entity_header(default_3)


def test_case_10():
    str_0 = "Content-Range"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    str_0 = "logging.StreamHandler"
    var_0 = module_0.import_string(str_0)
    bytes_0 = b"\x93\xbfC\x8b;\x92\x83x\x03\x03\xc5W\xd5v\xa7"
    module_0.import_string(bytes_0)
