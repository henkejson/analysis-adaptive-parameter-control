# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    int_0 = -746
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "{EjZx*b4\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    float_0 = -1992.0
    module_0.is_hop_by_hop_header(float_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    object_0 = module_1.object()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_1 = module_1.object()
    var_2 = module_0.has_message_body(var_0)


def test_case_7():
    int_0 = 890
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    module_0.remove_entity_headers(int_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {}
    default_0 = module_0.Default(*dict_0)
    var_1 = default_0.__repr__()
    var_2 = module_0.remove_entity_headers(dict_0, var_1)
    str_0 = var_2.__str__()
    bool_1 = module_0.is_atty()
    var_3 = module_0.is_hop_by_hop_header(var_0)
    bool_2 = module_0.is_atty()
    str_1 = default_0.__str__()
    str_2 = var_0.__str__()
    var_4 = module_0.remove_entity_headers(var_2)
    str_3 = var_2.__str__()
    str_4 = bool_1.__str__()
    default_1 = module_0.Default(**var_2)
    var_5 = module_0.is_hop_by_hop_header(str_3)
    int_0 = 204
    var_6 = module_0.has_message_body(int_0)
    bool_3 = module_0.is_atty()
    str_5 = var_0.__str__()
    str_6 = default_0.__str__()
    var_7 = module_2.ismodule(str_4)
    var_8 = default_1.__repr__()
    var_9 = var_7.__repr__()
    dict_1 = {var_0: var_8, var_8: bool_0, var_0: bool_1, default_1: default_1}
    module_0.remove_entity_headers(dict_1)
