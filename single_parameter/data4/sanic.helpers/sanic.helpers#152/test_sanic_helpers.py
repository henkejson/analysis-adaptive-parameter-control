# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    int_0 = 305
    bool_0 = module_0.has_message_body(int_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xb3\\G'\xc1('\xeb\xe9\xfc"
    var_0 = module_0.is_entity_header(bytes_0)
    module_0.remove_entity_headers(var_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    str_0 = var_1.__str__()
    default_0 = module_0.Default()
    var_2 = default_0.__repr__()
    module_0.remove_entity_headers(bool_0)


def test_case_6():
    object_0 = module_1.object()
    default_0 = module_0.Default()
    int_0 = 205
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(int_0)
    var_1 = default_0.__repr__()
    default_1 = module_0.Default()
    module_0.remove_entity_headers(var_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    str_0 = bool_0.__str__()
    bool_1 = module_0.is_atty()


def test_case_8():
    bytes_0 = b"f\x02:\x910\x10\xa6\x00\xb0?"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    bytes_0 = b"\xa1\x93{K{3\xc9\x01\xab\xd8\xcd\xa6\x1du"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    dict_0 = {var_1: default_0, var_1: var_1, var_1: default_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    default_1 = module_0.Default()
    int_0 = 204
    str_0 = default_1.__str__()
    var_3 = module_0.has_message_body(int_0)
    var_4 = default_1.__repr__()
    var_5 = module_2.ismodule(var_0)
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(var_3)
