# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "/\x0c{\\_&|x"
    var_0 = module_0.is_entity_header(str_0)
    var_1 = module_0.is_entity_header(str_0)


def test_case_5():
    bytes_0 = b"@VG\x16\xa0\x17\r,/"
    float_0 = -84.3432
    tuple_0 = (bytes_0, bytes_0, float_0)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    bytes_0 = b"Unprocessable Entity"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_9():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_0 = True
    var_1 = module_1.ismodule(bool_0)
    var_2 = var_0.__repr__()
    module_0.is_entity_header(var_1)
