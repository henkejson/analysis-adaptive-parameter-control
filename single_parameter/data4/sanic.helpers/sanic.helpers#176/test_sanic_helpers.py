# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"UC\x0e\xdbY\xd4x\x012\x14\x91\xb0\xce|\xdcW^i\xa8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.has_message_body(dict_0)


def test_case_1():
    bytes_0 = b"UC\x0e\xdbY\xd4x\x012\x14\x91\xb0\xce|\xdcW^i\xa8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: default_0, var_0: default_0, var_0: default_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: default_0, var_0: default_0, var_0: default_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()


def test_case_7():
    int_0 = 43
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {
        var_0: default_0,
        var_0: default_0,
        var_0: var_0,
        var_0: default_0,
        var_0: var_0,
    }
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_1.ismodule(dict_0)
    var_3 = var_1.__repr__()
    var_4 = module_1.ismodule(var_1)
    var_5 = var_1.__repr__()
    var_6 = var_4.__repr__()
    float_0 = 4541.1
    var_7 = module_0.has_message_body(float_0)


def test_case_9():
    int_0 = 304
    bytes_0 = b"Switching Protocols"
    var_0 = module_0.is_entity_header(bytes_0)
    set_0 = set()
    var_1 = module_0.has_message_body(int_0)
    var_2 = set_0.__repr__()
