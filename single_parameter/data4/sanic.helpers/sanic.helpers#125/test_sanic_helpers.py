# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    bytes_0 = b"\x10\xa4\xc9\x9fF"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_4():
    float_0 = 20.0
    var_0 = module_0.has_message_body(float_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    int_0 = 298
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    int_0 = 304
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_1.ismodule(int_0)
    str_0 = var_1.__str__()
    bytes_0 = b"\xc3\xa0\xeb\xf7\xd9\x8b\x8c"
    var_3 = module_0.is_hop_by_hop_header(bytes_0)
    module_0.import_string(bool_0)
