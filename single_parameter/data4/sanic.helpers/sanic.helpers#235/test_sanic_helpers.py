# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    str_0 = "__ALL_PROCESSES__"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    int_0 = -273
    var_0 = int_0.__repr__()
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    module_0.has_message_body(dict_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    object_0 = module_1.object()
    var_0 = object_0.__repr__()
    int_0 = 206
    var_1 = module_0.has_message_body(int_0)


def test_case_8():
    dict_0 = {}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    object_0 = module_1.object()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    var_3 = module_0.is_entity_header(var_2)
    var_4 = var_0.__repr__()
    var_5 = object_0.__repr__()
    var_6 = module_0.is_hop_by_hop_header(var_4)
    var_7 = module_0.is_entity_header(var_1)
    int_0 = 204
    str_0 = var_2.__repr__()
    var_8 = module_0.has_message_body(int_0)
    module_0.has_message_body(var_1)


def test_case_9():
    str_0 = "content-location"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_2.ismodule(var_0)
    module_0.has_message_body(str_0)


def test_case_10():
    str_0 = "content-location"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    bool_0 = True
    module_0.remove_entity_headers(bool_0, str_0)
