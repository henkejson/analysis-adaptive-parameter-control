# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    module_0.is_entity_header(list_0)


def test_case_4():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_hop_by_hop_header(dict_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    list_0 = [default_0]
    module_0.Default(*list_0)


def test_case_6():
    bytes_0 = b"P\x04Y\xdc\x9a\xb0w8W\x86\x1d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 496
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()


def test_case_8():
    str_0 = "Y@Wg^GABwz#TR~egr~"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 304
    var_1 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.is_hop_by_hop_header(str_0)
    var_3 = var_1.__repr__()
    var_4 = bool_0.__repr__()
    var_5 = var_3.__repr__()
    str_1 = var_4.__str__()
    var_6 = module_0.has_message_body(var_1)
    var_7 = module_0.has_message_body(var_1)
    module_0.is_entity_header(var_2)


def test_case_9():
    str_0 = "Allow"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(str_0)


def test_case_10():
    str_0 = "Allow"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    var_2 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(dict_0)
