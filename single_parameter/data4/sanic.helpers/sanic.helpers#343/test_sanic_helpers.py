# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    tuple_0 = ()
    module_0.has_message_body(tuple_0)


def test_case_1():
    int_0 = 202
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_4():
    int_0 = 1467
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    module_0.import_string(var_1)


def test_case_5():
    int_0 = 202
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.remove_entity_headers(var_1)


def test_case_6():
    int_0 = 1467
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    module_0.import_string(var_1)


def test_case_7():
    int_0 = 202
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    int_0 = 204
    dict_0 = {
        bool_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        bool_0: int_0,
        bool_0: int_0,
    }
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.has_message_body(var_1)
    module_0.remove_entity_headers(bool_0, dict_0)


def test_case_9():
    str_0 = ""
    int_0 = 202
    dict_0 = {
        str_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        str_0: int_0,
        str_0: int_0,
    }
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    str_0 = "last-modified"
    str_1 = "Es.,D|z-"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()
    module_1.object(**dict_0)


def test_case_11():
    str_0 = "last-modified"
    str_1 = "ET.,D|z-"
    dict_0 = {str_0: str_0, str_0: str_1}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)
