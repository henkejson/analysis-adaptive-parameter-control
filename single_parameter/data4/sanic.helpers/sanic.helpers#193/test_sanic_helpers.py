# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    bytes_0 = b"!\x1b\x9e\xcf"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    default_0 = module_0.Default()
    module_0.is_entity_header(default_0)


def test_case_5():
    bytes_0 = b"!\x1b\x9e\xcf"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    list_0 = [var_0, var_0, dict_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    bool_0 = module_0.is_atty()
    int_0 = 203
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    var_1 = default_0.__repr__()
    object_0 = module_1.object()
    str_0 = default_0.__str__()
    str_1 = object_0.__str__()
    module_0.import_string(str_1)


def test_case_8():
    int_0 = 3
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(int_0)


def test_case_9():
    bytes_0 = b"\x98\x8e\xa0\x00\xc9\xc8\xa9\x16\xfd"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: var_0}
    var_1 = module_2.ismodule(var_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_3 = dict_0.__repr__()
    int_0 = 204
    default_0 = module_0.Default()
    var_4 = module_0.has_message_body(int_0)
    var_5 = module_0.is_hop_by_hop_header(var_3)
    var_6 = default_0.__repr__()
    object_0 = module_1.object()
    str_1 = default_0.__str__()
    var_7 = var_5.__repr__()
    str_2 = object_0.__str__()
    var_8 = module_2.ismodule(var_7)
    str_3 = dict_0.__str__()
    var_9 = var_8.__repr__()
    var_10 = module_0.is_entity_header(var_9)
    var_11 = module_0.has_message_body(var_0)
    module_0.remove_entity_headers(str_3, var_4)
