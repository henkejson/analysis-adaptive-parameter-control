# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.is_entity_header(str_0)


def test_case_5():
    str_0 = ""
    str_1 = "Dispatching signal: "
    var_0 = module_0.is_hop_by_hop_header(str_1)
    dict_0 = {str_0: str_0, str_1: str_1, str_1: var_0}
    module_0.Default(**dict_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    module_0.is_entity_header(var_0)


def test_case_8():
    bytes_0 = b"?"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    bytes_0 = b"\xee\xc7\xc2ug\x02\xc8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    int_0 = 304
    var_1 = module_0.has_message_body(int_0)
    module_0.has_message_body(dict_0)
