# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(var_0)


def test_case_1():
    bytes_0 = b't+%\xaac\xc3@V\xa87"_I'
    module_0.remove_entity_headers(bytes_0, bytes_0)


def test_case_2():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    module_0.remove_entity_headers(var_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.is_entity_header(set_0)


def test_case_6():
    bytes_0 = b"(\x1co\xaf\xfap\xec\x9bv\x14m"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_0.__str__()
    var_1 = module_0.is_entity_header(bytes_0)
    module_0.Default(*var_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__repr__()


def test_case_8():
    default_0 = module_0.Default()
    float_0 = 97.59833232164792
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.has_message_body(float_0)


def test_case_9():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    int_0 = 303
    var_2 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_10():
    str_0 = " pLGw~|CPkE"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = dict_0.__repr__()
    bool_0 = module_0.is_atty()


def test_case_11():
    str_0 = " pLGw~|CPkE"
    var_0 = str_0.__repr__()
    str_1 = var_0.__str__()
    var_1 = module_0.is_entity_header(str_0)
    dict_0 = {str_0: str_0, str_0: var_1}
    default_0 = module_0.Default()
    var_2 = default_0.__repr__()
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = default_0.__repr__()
    var_5 = module_0.is_entity_header(var_4)
    var_6 = module_0.is_entity_header(var_0)
    int_0 = 304
    var_7 = module_0.has_message_body(int_0)
    var_8 = var_7.__repr__()
    var_9 = var_4.__repr__()
    bool_0 = module_0.is_atty()
    int_1 = -557
    module_0.is_hop_by_hop_header(int_1)


def test_case_12():
    str_0 = "content-location"
    var_0 = module_0.is_entity_header(str_0)
    dict_0 = {str_0: str_0, str_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = str_0.__repr__()
    module_0.has_message_body(var_2)


def test_case_13():
    str_0 = "content-location"
    var_0 = module_0.is_entity_header(str_0)
    var_1 = module_0.is_entity_header(str_0)
    dict_0 = {str_0: str_0, str_0: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    str_1 = "Rx^0'@f;"
    default_0 = module_0.remove_entity_headers(var_2, str_1)
    str_2 = default_0.__str__()
    module_1.object(*var_2, **dict_0)
