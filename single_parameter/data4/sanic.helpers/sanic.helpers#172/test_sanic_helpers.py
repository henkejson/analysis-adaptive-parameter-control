# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(default_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    str_0 = '<KH_C7S:"`y-dqV\nM'
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 297
    var_0 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_0)


def test_case_9():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.Default()


def test_case_10():
    bool_0 = True
    str_0 = "Last-Modified"
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: bool_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_1.ismodule(var_0)
    module_0.remove_entity_headers(var_1)


def test_case_11():
    bool_0 = False
    str_0 = "allow"
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    var_1 = var_0.__repr__()
    dict_0 = {str_0: bool_1, str_0: bool_0, var_1: bool_0, str_0: var_0}
    var_2 = module_0.has_message_body(bool_0)
    var_3 = var_1.__repr__()
    object_0 = module_2.object()
    var_4 = module_0.remove_entity_headers(dict_0, str_0)
    str_1 = var_3.__str__()
    tuple_0 = (var_4,)
    var_5 = module_1.ismodule(tuple_0)
    var_6 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    module_0.import_string(dict_0)
