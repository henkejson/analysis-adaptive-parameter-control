# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = var_0.__str__()
    var_2 = module_0.is_entity_header(var_1)


def test_case_6():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()


def test_case_7():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.import_string(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    default_0 = module_0.Default()
    var_2 = var_1.__repr__()
    var_3 = module_0.is_hop_by_hop_header(str_0)
    str_1 = var_3.__str__()
    bool_0 = module_0.is_atty()
    var_4 = module_0.has_message_body(var_3)
    int_0 = 204
    var_5 = module_0.has_message_body(int_0)
    var_6 = module_0.has_message_body(var_5)
    var_7 = module_0.is_entity_header(str_1)
    var_8 = var_2.__repr__()
    str_2 = default_0.__str__()
    bool_1 = module_0.is_atty()
    dict_1 = {var_1: bool_0, var_8: int_0, var_1: var_1, str_2: var_6}
    var_9 = module_0.remove_entity_headers(dict_1)
    int_1 = 1828
    module_0.Default(*int_0, **int_1)


def test_case_9():
    str_0 = "Content-Type"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    dict_1 = {}
    var_1 = module_0.remove_entity_headers(dict_1, dict_1)
    var_2 = var_1.__repr__()
    str_1 = var_1.__str__()
    var_3 = var_2.__repr__()
    var_4 = module_0.is_hop_by_hop_header(str_1)
    str_2 = var_4.__str__()
    bool_0 = module_0.is_atty()
    var_5 = module_0.is_hop_by_hop_header(var_2)
    default_0 = module_0.Default()
    module_0.has_message_body(var_0)


def test_case_10():
    str_0 = "Content-Type"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    var_2 = var_1.__repr__()
    str_1 = var_1.__str__()
    default_0 = module_0.Default()
    var_3 = var_2.__repr__()
    var_4 = module_0.is_hop_by_hop_header(str_1)
    str_2 = var_4.__str__()
    bool_0 = module_0.is_atty()
    int_0 = 205
    var_5 = module_0.is_hop_by_hop_header(var_2)
    var_6 = module_0.has_message_body(int_0)
    var_7 = module_0.has_message_body(var_6)
    var_8 = module_0.is_entity_header(var_3)
    var_9 = module_0.is_entity_header(str_2)
    var_10 = var_3.__repr__()
    str_3 = default_0.__str__()
    var_11 = module_0.remove_entity_headers(var_1)
    dict_1 = {var_2: bool_0, var_10: int_0, var_2: var_2, str_3: var_7}
    var_12 = module_0.remove_entity_headers(dict_1)
    var_13 = default_0.__repr__()
    str_4 = default_0.__str__()
    str_5 = var_10.__str__()
    module_0.Default(**var_6)
