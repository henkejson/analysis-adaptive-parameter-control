# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    float_0 = 313.5
    var_0 = module_0.has_message_body(float_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_2 = default_1.__repr__()
    str_0 = default_0.__str__()
    module_0.import_string(default_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "4m"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_4():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    str_0 = "4m"
    bytes_0 = b":\xb7\xed\x1d\xf8o\r\xdd\x01\x1b\x82"
    dict_0 = {str_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    str_1 = default_0.__str__()
    var_2 = default_0.__repr__()
    str_2 = default_0.__str__()


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = bool_0.__str__()
    default_1 = module_0.Default()
    default_2 = module_0.Default()
    str_1 = var_0.__str__()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    str_2 = var_0.__str__()
    dict_0 = {str_2: var_1, default_2: var_1, default_2: var_0}
    module_0.remove_entity_headers(dict_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_1.ismodule(var_0)
    str_0 = var_1.__str__()
    var_2 = var_1.__repr__()
    default_0 = module_0.Default()
    float_0 = 204.0
    str_1 = var_0.__str__()
    var_3 = module_0.has_message_body(float_0)
    str_2 = default_0.__str__()
    var_4 = module_0.is_hop_by_hop_header(str_2)
    var_5 = var_0.__repr__()
    var_6 = default_0.__repr__()
    var_7 = default_0.__repr__()
    var_8 = var_6.__repr__()
    var_9 = module_0.is_entity_header(str_2)
    var_10 = var_9.__repr__()
    str_3 = default_0.__str__()
    dict_0 = {var_6: var_4, var_3: var_4, var_3: str_2}
    module_0.remove_entity_headers(dict_0)
