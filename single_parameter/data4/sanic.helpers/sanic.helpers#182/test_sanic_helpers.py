# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 410
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    str_0 = "; charset=utf-8"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(bool_0)
    str_0 = var_1.__str__()
    var_2 = default_0.__repr__()
    var_3 = module_0.has_message_body(var_0)
    str_1 = var_3.__str__()
    str_2 = var_0.__str__()
    var_4 = var_3.__repr__()


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = default_0.__repr__()
    var_4 = module_0.has_message_body(var_0)
    var_5 = var_4.__repr__()
    str_0 = var_0.__str__()
    bool_2 = module_0.is_atty()
    str_1 = var_5.__str__()
    var_6 = module_0.is_entity_header(var_5)
    str_2 = var_6.__str__()
    var_7 = module_1.ismodule(var_2)
    var_8 = var_7.__repr__()
    str_3 = var_5.__str__()
    str_4 = default_0.__str__()
    str_5 = var_8.__str__()
    str_6 = var_6.__str__()
    str_7 = var_5.__str__()
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.has_message_body(bool_0)


def test_case_8():
    bytes_0 = b"\xc3\xc5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_0 = var_0.__repr__()
    module_0.has_message_body(bool_0)
