# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"\x98\xb9\xdc\xb1\x1c\x05\xfb\xd3\xf9L\xbai\xa4s\xc3\x90"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = module_0.is_atty()
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.has_message_body(bool_0)
    var_3 = var_0.__repr__()
    var_4 = module_1.ismodule(dict_0)
    str_0 = bytes_0.__str__()


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\x98\xb9\xdc\xb1\x1c\x05\xfb\xd3\xf9L\xbai\xa4s\xc3\x90"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bytes_0 = b"\x98\xb9\xdc\xb1\x1c\x05\xfb\xd3\xf9L\xbai\xa4s\xc3\x90"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    module_2.object(*var_0)


def test_case_5():
    str_0 = "_u>z"
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_1 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.import_string(str_0)


def test_case_6():
    float_0 = 3579.5553
    var_0 = module_0.has_message_body(float_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    var_3 = var_0.__repr__()
    str_0 = var_0.__str__()
    var_4 = module_0.has_message_body(var_0)
    var_5 = module_0.is_entity_header(var_2)
    int_0 = 304
    var_6 = module_0.has_message_body(int_0)
    var_7 = var_5.__repr__()
    module_0.remove_entity_headers(var_4)
