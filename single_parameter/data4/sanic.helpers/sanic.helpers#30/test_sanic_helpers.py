# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "on"
    module_0.has_message_body(str_0)


def test_case_1():
    bytes_0 = b"Not Modified"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "n"
    var_0 = module_0.is_entity_header(str_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, none_type_0)


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    dict_0 = {default_0: default_0, default_0: var_1, default_0: var_1}
    module_0.remove_entity_headers(dict_0)


def test_case_8():
    float_0 = 181.38142128459134
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    dict_0 = module_1.ismodule(var_0)
    str_0 = var_0.__str__()
    module_0.Default(**var_0)


def test_case_9():
    int_0 = 64
    var_0 = module_0.has_message_body(int_0)
    list_0 = [int_0, int_0]
    module_0.is_entity_header(list_0)


def test_case_10():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    float_0 = 204.0
    var_0 = module_0.has_message_body(float_0)
    bytes_0 = b"\xb8\x19\xf3\x02\xccZd\xe4\xcf\xd6b"
    default_1 = module_0.Default()
    var_1 = default_0.__repr__()
    str_1 = var_0.__str__()
    var_2 = var_0.__repr__()
    dict_0 = {bytes_0: bytes_0}
    var_3 = module_0.is_entity_header(var_2)
    str_2 = var_2.__str__()
    var_4 = var_1.__repr__()
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = var_1.__repr__()
    var_7 = module_0.has_message_body(var_0)
    var_8 = default_1.__repr__()
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)
