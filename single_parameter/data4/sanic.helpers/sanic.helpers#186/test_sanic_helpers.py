# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    str_0 = "N&Ioxi@iF=)aL?>Gt"
    module_0.has_message_body(str_0)


def test_case_1():
    bytes_0 = b"\xe4kUGLW\xe0b\xbd(\xf9E"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_4():
    float_0 = -1491.57958
    module_0.is_hop_by_hop_header(float_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    module_0.import_string(int_0)


def test_case_6():
    int_0 = 103
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_1 = module_0.has_message_body(bool_1)
    var_2 = var_1.__repr__()
    module_0.is_entity_header(bool_0)


def test_case_7():
    int_0 = 100
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_8():
    bytes_0 = b"kaG^kW\xe0\xbd\xf9E"
    var_0 = bytes_0.__repr__()
    var_1 = var_0.__repr__()
    object_0 = module_1.object()
    bool_0 = module_0.is_atty()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    int_0 = 204
    var_3 = module_0.is_hop_by_hop_header(var_0)
    var_4 = module_0.has_message_body(int_0)
    var_5 = default_0.__repr__()
    str_1 = default_0.__str__()
    module_0.has_message_body(default_0)
