# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = 'Eo"K%){i{8>S'
    var_0 = module_0.is_entity_header(str_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bytes_0 = b"\xd7;\xc4%\xd7ob\xe9\xd1w\x16\xfc\xbd\x00\x8c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bytes_0 = b"W"
    var_0 = module_0.is_entity_header(bytes_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_6():
    bytes_0 = b"W"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_0.__str__()


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(str_0, default_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    float_0 = 147.3851611670414
    var_0 = module_0.has_message_body(float_0)


def test_case_9():
    bytes_0 = b"\xdd\xc8i\x17\xb0\xff\x8a\xfexL\xa6\xb57\xd7GV\xdc@\x18J"
    bool_0 = module_0.is_atty()
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.has_message_body(var_0)
    var_3 = module_0.has_message_body(var_2)
    int_0 = 304
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_2.__repr__()
    module_0.import_string(dict_0, bool_0)
