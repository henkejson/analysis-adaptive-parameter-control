# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    str_0 = ""
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(str_0)


def test_case_1():
    str_0 = "/m"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = True
    module_0.is_entity_header(bool_1)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: default_0, var_0: var_0}
    str_0 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0)
    str_1 = default_0.__str__()
    module_0.has_message_body(str_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    int_0 = 100
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    str_1 = var_0.__str__()
    bool_2 = False
    module_0.is_hop_by_hop_header(bool_2)


def test_case_7():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    dict_0 = {var_1: default_0, var_1: var_1}
    var_2 = var_0.__repr__()
    default_1 = module_0.Default()
    var_3 = var_1.__repr__()
    var_4 = module_0.is_entity_header(var_1)
    str_0 = var_0.__str__()
    str_1 = var_3.__str__()
    var_5 = module_0.remove_entity_headers(dict_0)
    bool_1 = module_0.is_atty()
    str_2 = default_1.__str__()
    str_3 = default_0.__str__()
    var_6 = module_0.has_message_body(var_4)
    var_7 = module_0.is_hop_by_hop_header(str_1)
    var_8 = var_7.__repr__()
    var_9 = var_1.__repr__()
    str_4 = default_0.__str__()
    module_0.is_entity_header(var_7)
