# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_1():
    bytes_0 = b"quack"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    list_0 = []
    module_0.is_hop_by_hop_header(list_0)


def test_case_5():
    str_0 = "l/3fA4}_.g\tk{L"
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    module_0.Default(*str_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    dict_0 = {var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    default_1 = module_0.Default()
    bool_0 = module_0.is_atty()


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = True
    bool_2 = module_0.is_atty()
    default_0 = module_0.has_message_body(bool_1)


def test_case_8():
    int_0 = 1418
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(int_0)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = "l/3fA4}_.g\tk{L"
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_2.__repr__()
    bool_0 = module_0.is_atty()
    var_4 = module_0.is_hop_by_hop_header(str_0)
    str_1 = default_0.__str__()
    bool_1 = module_0.is_atty()
    dict_0 = {str_0: var_4}
    var_5 = var_4.__repr__()
    var_6 = module_0.remove_entity_headers(dict_0)
    module_0.remove_entity_headers(str_0)
