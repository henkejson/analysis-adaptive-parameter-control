# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_0)


def test_case_1():
    bool_0 = module_0.is_atty()


def test_case_2():
    str_0 = "7S7:2lw+\\{'.#kE%I"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    str_0 = "N\rLAD}30-9<it"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {var_0: str_0, var_0: var_0}
    bytes_0 = b")"
    module_0.import_string(dict_0, bytes_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = var_1.__repr__()
    var_3 = module_0.is_entity_header(var_0)
    str_0 = var_3.__str__()
    var_4 = module_0.is_entity_header(var_0)


def test_case_5():
    bytes_0 = b"+\xd50\xdc7\x08\xc2\x85\xcd\x06\x8b\xb4#^"
    var_0 = module_0.is_entity_header(bytes_0)
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    str_0 = default_0.__str__()
    module_0.remove_entity_headers(default_0)


def test_case_6():
    int_0 = 352
    var_0 = module_0.has_message_body(int_0)


def test_case_7():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    bool_0 = True
    var_1 = var_0.__repr__()
    str_1 = var_1.__str__()
    var_2 = var_0.__repr__()
    var_3 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    var_4 = module_0.is_hop_by_hop_header(var_2)
    bool_2 = module_0.is_atty()
    dict_0 = {str_1: bool_0}
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = var_1.__repr__()


def test_case_8():
    bytes_0 = b'\xe6\\\xed\xae\x14\xdf\x19\xb6\x16"$\xd6\xbb#3w\x1f\xca$\xc3'
    str_0 = "logging.StreamHandler"
    var_0 = module_0.import_string(str_0, bytes_0)
