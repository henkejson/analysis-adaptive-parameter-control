# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    str_0 = "GI}{'m|"
    module_0.has_message_body(str_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    str_0 = "vn#E\n\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    dict_0 = {}
    tuple_0 = (dict_0,)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0}
    bool_0 = module_0.is_atty()
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    var_2 = var_0.__repr__()
    var_3 = var_2.__repr__()
    var_4 = default_0.__repr__()
    str_0 = default_0.__str__()
    var_5 = var_0.__repr__()
    module_0.Default(**var_2)


def test_case_8():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()


def test_case_9():
    float_0 = 438.0
    var_0 = module_0.has_message_body(float_0)
    module_0.remove_entity_headers(var_0, var_0)


def test_case_10():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0}
    bool_0 = module_0.is_atty()
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(var_1)
    object_0 = module_1.object()
    var_4 = object_0.__repr__()
    int_0 = 204
    str_1 = var_0.__str__()
    var_5 = module_0.has_message_body(int_0)
    var_6 = module_0.remove_entity_headers(dict_0)
    str_2 = var_5.__str__()
    var_7 = module_0.is_hop_by_hop_header(var_4)
    var_8 = module_0.is_hop_by_hop_header(var_4)
    var_9 = var_8.__repr__()
    var_10 = var_1.__repr__()
    var_11 = var_1.__repr__()
    object_1 = module_1.object()
    var_12 = var_3.__repr__()
    module_0.remove_entity_headers(str_0)
