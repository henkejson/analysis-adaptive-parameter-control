# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    bytes_0 = b"Use Proxy"
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bytes_0)


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    str_0 = "|X%1g\n0GQMWKqfm6bn"
    var_0 = module_0.is_entity_header(str_0)


def test_case_6():
    default_0 = module_0.Default()
    bytes_0 = b"fx\xd4L\x97\x19B\xc6\x9a\xbbp\xa5(\t\x11\x89u\xd3j"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.is_hop_by_hop_header(set_0)


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_9():
    bytes_0 = b"5\xc8\xce\xd0\xf6\xddH\xffl\x08\xab\x07U\x84\xee\x89\x0f\xf5"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    float_0 = 2182.17
    var_0 = module_0.has_message_body(float_0)
    set_0 = {float_0, float_0}
    module_0.remove_entity_headers(set_0)


def test_case_11():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_12():
    bytes_0 = b"5\xc8\xce\xd0\xf6\xddH\xffl\x08\xab\x07U\x84\xee\x89\x0f\xf5"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    bool_0 = module_0.is_atty()
    str_1 = bytes_0.__str__()
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(bool_0)
    str_2 = str_1.__str__()
    bool_1 = module_0.is_atty()
    str_3 = str_0.__str__()
    str_4 = default_0.__str__()
    var_3 = module_0.has_message_body(var_1)
    int_0 = 304
    var_4 = module_0.has_message_body(int_0)
    var_5 = module_0.has_message_body(var_2)
    str_5 = var_0.__str__()
    var_6 = var_4.__repr__()
    str_6 = "~aSfGuJ~i`(,s.0mIk/2"
    var_7 = module_0.is_hop_by_hop_header(str_6)
