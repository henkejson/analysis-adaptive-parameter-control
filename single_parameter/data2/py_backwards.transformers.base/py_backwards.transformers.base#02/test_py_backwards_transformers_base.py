# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    bool_0 = True
    base_import_rewrite_0 = module_0.BaseImportRewrite(bool_0)
    list_0 = [base_import_rewrite_0, bool_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bool_0 = False
    base_import_rewrite_0 = module_0.BaseImportRewrite(bool_0)
    list_0 = [base_import_rewrite_0, bool_0]
    list_1 = [base_import_rewrite_0, list_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bool_0 = True
    base_node_transformer_0 = module_0.BaseNodeTransformer(bool_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(bool_0)
    list_0 = [base_import_rewrite_0, bool_0]
    none_type_0 = None
    list_1 = [none_type_0, none_type_0, none_type_0]
    str_0 = ")B<1``qW2>(?y\x0b~jh~"
    complex_0 = 2136.743 + 919.179803j
    str_1 = "OJ3X9D\\2VH~ B@Bxup/z"
    dict_0 = {str_0: bool_0, str_0: complex_0, str_1: list_0}
    import_from_0 = module_1.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    bool_0 = False
    base_import_rewrite_0 = module_0.BaseImportRewrite(bool_0)
    list_0 = []
    list_1 = [base_import_rewrite_0, list_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
