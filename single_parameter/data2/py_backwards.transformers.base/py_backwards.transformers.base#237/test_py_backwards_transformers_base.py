# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import typed_ast.ast3 as module_1
import py_backwards.transformers.base as module_2


def test_case_0():
    type_ignore_0 = module_0.TypeIgnore()
    module_1.literal_eval(type_ignore_0)


def test_case_1():
    tuple_0 = module_0.Tuple()
    base_import_rewrite_0 = module_2.BaseImportRewrite(tuple_0)


def test_case_2():
    complex_0 = -2747.9818351949793 - 1414.756j
    base_import_rewrite_0 = module_2.BaseImportRewrite(complex_0)
    dict_0 = {
        base_import_rewrite_0: complex_0,
        base_import_rewrite_0: base_import_rewrite_0,
        base_import_rewrite_0: base_import_rewrite_0,
    }
    import_from_0 = module_0.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    complex_0 = -2747.9818351949793 - 1412.9349764151577j
    base_import_rewrite_0 = module_2.BaseImportRewrite(complex_0)
    str_0 = "Compiles:\n        f\"hello {x}\"\n    To\n        ''.join(['hello ', '{}'.format(x)])\n    \n    "
    dict_0 = {complex_0: complex_0, str_0: str_0, complex_0: str_0}
    import_from_0 = module_0.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    set_0 = set()
    base_import_rewrite_0 = module_2.BaseImportRewrite(set_0)
    none_type_0 = None
    base_import_rewrite_1 = module_2.BaseImportRewrite(set_0)
    list_0 = [none_type_0, base_import_rewrite_1, set_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_1.visit_ImportFrom(import_from_0)


def test_case_5():
    complex_0 = -2747.9818351949793 - 1412.9349764151577j
    base_import_rewrite_0 = module_2.BaseImportRewrite(complex_0)
    str_0 = ""
    dict_0 = {complex_0: complex_0, str_0: str_0, complex_0: str_0}
    import_from_0 = module_0.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
