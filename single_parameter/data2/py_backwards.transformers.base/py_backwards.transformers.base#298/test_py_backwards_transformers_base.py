# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    str_0 = module_0.Str()
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)


def test_case_1():
    pass_0 = module_0.Pass()
    base_import_rewrite_0 = module_1.BaseImportRewrite(pass_0)
    list_0 = [base_import_rewrite_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    pass_0 = module_0.Pass()
    base_import_rewrite_0 = module_1.BaseImportRewrite(pass_0)
    var_0 = module_2.iter_child_nodes(pass_0)
    list_0 = [var_0, var_0, base_import_rewrite_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    pass_0 = module_0.Pass()
    base_node_transformer_0 = module_1.BaseNodeTransformer(pass_0)
    base_node_transformer_1 = module_1.BaseNodeTransformer(pass_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(pass_0)
    base_import_rewrite_1 = module_1.BaseImportRewrite(pass_0)
    var_0 = module_2.dump(pass_0)
    list_0 = [var_0, var_0, base_import_rewrite_1]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_1.visit_ImportFrom(import_from_0)


def test_case_4():
    pass_0 = module_0.Pass()
    base_node_transformer_0 = module_1.BaseNodeTransformer(pass_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(pass_0)
    none_type_0 = None
    base_import_rewrite_1 = module_1.BaseImportRewrite(none_type_0)
    var_0 = module_2.iter_child_nodes(pass_0)
    list_0 = [none_type_0, var_0, base_import_rewrite_1]
    str_0 = "\nhF|>RMl3?S*P$\t;G"
    var_1 = base_node_transformer_0.visit(pass_0)
    str_1 = "Prepends module with:\n        from __future__ import absolute_import\n        from __future__ import division\n        from __future__ import print_function\n        from __future__ import unicode_literals\n            \n    "
    dict_0 = {str_0: base_node_transformer_0, str_1: str_0, str_0: str_0}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    var_2 = base_import_rewrite_1.visit_ImportFrom(import_from_0)
    base_node_transformer_1 = module_1.BaseNodeTransformer(pass_0)
