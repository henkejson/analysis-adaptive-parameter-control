# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import typed_ast._ast3 as module_1
import py_backwards.transformers.base as module_2


def test_case_0():
    none_type_0 = None
    module_0.dump(none_type_0, none_type_0)


def test_case_1():
    pass_0 = module_1.Pass()
    base_import_rewrite_0 = module_2.BaseImportRewrite(pass_0)


def test_case_2():
    except_handler_0 = module_1.ExceptHandler()
    var_0 = module_0.walk(except_handler_0)
    base_import_rewrite_0 = module_2.BaseImportRewrite(except_handler_0)
    import_from_0 = module_1.ImportFrom(*var_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    except_handler_0 = module_1.ExceptHandler()
    list_0 = module_0.walk(except_handler_0)
    base_import_rewrite_0 = module_2.BaseImportRewrite(except_handler_0)
    list_1 = [base_import_rewrite_0, list_0, except_handler_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    list_0 = []
    base_import_rewrite_0 = module_2.BaseImportRewrite(list_0)
    list_1 = [base_import_rewrite_0, list_0, list_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_5():
    in_0 = module_1.In()
    none_type_0 = None
    base_node_transformer_0 = module_2.BaseNodeTransformer(none_type_0)
    base_import_rewrite_0 = module_2.BaseImportRewrite(in_0)
    list_0 = [none_type_0, none_type_0, base_import_rewrite_0]
    str_0 = "q,/-udq1"
    dict_0 = {str_0: none_type_0}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
