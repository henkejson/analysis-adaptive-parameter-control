# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    await_0 = module_1.Await()
    base_import_rewrite_0 = module_0.BaseImportRewrite(await_0)
    list_0 = [base_import_rewrite_0, base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    await_0 = module_1.Await()
    var_0 = module_2.iter_fields(await_0)
    list_0 = [var_0, var_0, var_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(list_0)
    str_0 = "Z0- \t('y^~SQ /icb^+"
    dict_0 = {str_0: base_import_rewrite_0, str_0: list_0, str_0: list_0}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    await_0 = module_1.Await()
    list_0 = [await_0, await_0, await_0]
    list_1 = [list_0, list_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(list_0)
    str_0 = "Z0- \t('y^~SQ /icb^+"
    dict_0 = {str_0: base_import_rewrite_0, str_0: list_0, str_0: list_1}
    import_from_0 = module_1.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
