# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    or_0 = module_0.Or()
    base_node_transformer_0 = module_1.BaseNodeTransformer(or_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = "\n96$b[Dy@oHK_v"
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)
    list_0 = [base_import_rewrite_0, str_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "Q?/GF$Mf\rf/x)W\rhEl["
    str_1 = "J!Wq=P,"
    expression_0 = module_0.Expression()
    base_node_transformer_0 = module_1.BaseNodeTransformer(expression_0)
    if_exp_0 = module_0.IfExp()
    list_0 = [if_exp_0, if_exp_0]
    dict_0 = {str_0: str_0, str_1: list_0, str_1: list_0, str_0: str_1}
    operator_0 = module_0.operator(**dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(operator_0)
    none_type_0 = None
    list_1 = [none_type_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    str_0 = ""
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)
    list_0 = [base_import_rewrite_0, str_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
