# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    bit_xor_0 = module_1.BitXor()
    list_0 = [bit_xor_0, bit_xor_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(bit_xor_0)
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(list_0)
    var_0 = base_import_rewrite_0.visit(import_from_0)


def test_case_3():
    bit_xor_0 = module_1.BitXor()
    base_import_rewrite_0 = module_0.BaseImportRewrite(bit_xor_0)
    dict_0 = module_2.dump(bit_xor_0)
    list_0 = [bit_xor_0, dict_0, dict_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit(import_from_0)


def test_case_4():
    bit_xor_0 = module_1.BitXor()
    base_import_rewrite_0 = module_0.BaseImportRewrite(bit_xor_0)
    list_0 = [bit_xor_0]
    dict_0 = {}
    list_1 = [list_0, dict_0, dict_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    import_from_1 = module_1.ImportFrom(**dict_0)
    none_type_0 = None
    list_2 = [none_type_0]
    import_from_2 = module_1.ImportFrom(*list_2)
    base_import_rewrite_0.visit_ImportFrom(import_from_2)
