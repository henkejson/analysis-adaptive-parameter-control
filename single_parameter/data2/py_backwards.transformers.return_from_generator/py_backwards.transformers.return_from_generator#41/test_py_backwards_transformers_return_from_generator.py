# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    global_0 = module_0.Global()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        global_0
    )


def test_case_1():
    bool_0 = True
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bool_0
    )
    str_0 = "JRJ"
    list_0 = [return_from_generator_transformer_0, str_0, str_0, str_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bool_0 = True
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bool_0
    )
    str_0 = ""
    list_0 = [return_from_generator_transformer_0, str_0, str_0, str_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    function_def_2 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        function_def_1
    )
    none_type_0 = None
    return_from_generator_transformer_0.visit_FunctionDef(none_type_0)


def test_case_3():
    bool_0 = True
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bool_0
    )
    str_0 = "K8"
    function_def_0 = module_2.parse(str_0, feature_version=bool_0)
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    function_def_2 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_2 = module_2.copy_location(
        function_def_1, function_def_0
    )
    none_type_0 = None
    return_from_generator_transformer_3 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    return_from_generator_transformer_0.visit_FunctionDef(none_type_0)
