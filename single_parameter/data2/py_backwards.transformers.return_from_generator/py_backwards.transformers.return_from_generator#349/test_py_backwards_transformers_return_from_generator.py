# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    list_comp_0 = module_0.ListComp()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        list_comp_0
    )


def test_case_1():
    str_0 = "/\x0c_{7BM"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [str_0, str_0, str_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    str_0 = ""
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [str_0, str_0, str_0]
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(str_0)
    function_def_0 = module_0.FunctionDef(*list_0)
    var_0 = return_from_generator_transformer_0.generic_visit(function_def_0)
    var_1 = return_from_generator_transformer_1.generic_visit(function_def_0)
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        return_from_generator_transformer_1
    )
    function_def_1 = return_from_generator_transformer_2.visit_FunctionDef(var_1)
    return_from_generator_transformer_3 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    return_from_generator_transformer_4 = module_1.ReturnFromGeneratorTransformer(
        return_from_generator_transformer_2
    )
    module_0.Return(**var_0)


def test_case_3():
    str_0 = "_M"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [str_0, str_0, str_0]
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(str_0)
    function_def_0 = module_0.FunctionDef(*list_0)
    var_0 = module_2.parse(str_0)
    var_1 = return_from_generator_transformer_1.generic_visit(function_def_0)
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    function_def_1 = return_from_generator_transformer_2.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_3 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    none_type_0 = None
    return_from_generator_transformer_4 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    function_def_2 = return_from_generator_transformer_3.visit_FunctionDef(var_0)
    cmpop_0 = module_0.cmpop()
    list_1 = [cmpop_0, str_0]
    module_0.Return(*list_1)
