# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    lt_e_0 = module_0.LtE()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        lt_e_0
    )


def test_case_1():
    bytes_0 = b"cP5o\xf0\x810\x86\xf0<\x94\x89\xf9\xbb"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    dict_0 = {}
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    var_0 = return_from_generator_transformer_0.visit(function_def_0)


def test_case_2():
    u_add_0 = module_0.UAdd()
    bytes_0 = b"cP5o\xf0\x81a\x86\xf0<\x94\x89\xf9\xbb"
    tuple_0 = module_2.iter_child_nodes(u_add_0)
    list_0 = [tuple_0, tuple_0, tuple_0, bytes_0]
    dict_0 = {}
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    none_type_0.visit_FunctionDef(none_type_0)
