# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import typed_ast._ast3 as module_1
import py_backwards.transformers.return_from_generator as module_2


def test_case_0():
    none_type_0 = None
    module_0.copy_location(none_type_0, none_type_0)


def test_case_1():
    str_0 = "six.moves{}.{}"
    list_0 = [str_0, str_0, str_0, str_0]
    dict_0 = {str_0: str_0, str_0: list_0}
    function_def_0 = module_1.FunctionDef(*list_0, **dict_0)
    return_from_generator_transformer_0 = module_2.ReturnFromGeneratorTransformer(
        dict_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    type_ignore_0 = module_1.TypeIgnore()
    return_from_generator_transformer_0 = module_2.ReturnFromGeneratorTransformer(
        type_ignore_0
    )
    str_0 = ""
    list_0 = [str_0, type_ignore_0, str_0, str_0, str_0]
    none_type_0 = None
    return_from_generator_transformer_1 = module_2.ReturnFromGeneratorTransformer(
        none_type_0
    )
    str_1 = "Yg9.xAy6i1gb#j4i|Q,"
    dict_0 = {str_0: type_ignore_0, str_1: list_0}
    function_def_0 = module_1.FunctionDef(*list_0, **dict_0)
    return_from_generator_transformer_2 = module_2.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_1 = return_from_generator_transformer_2.visit_FunctionDef(
        function_def_0
    )
    sub_0 = module_1.Sub()
    var_0 = module_0.dump(function_def_0)
    return_from_generator_transformer_1.visit_FunctionDef(str_1)


def test_case_3():
    type_ignore_0 = module_1.TypeIgnore()
    return_from_generator_transformer_0 = module_2.ReturnFromGeneratorTransformer(
        type_ignore_0
    )
    str_0 = "}S"
    list_0 = [str_0, type_ignore_0, str_0, str_0, str_0]
    return_from_generator_transformer_1 = module_2.ReturnFromGeneratorTransformer(
        list_0
    )
    str_1 = "4%ev$/f'C!b1\x0c+FrpD]"
    str_2 = "Yg9.xAy6i1gb#j4i|Q,"
    var_0 = module_0.parse(str_2)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    dict_0 = {str_1: type_ignore_0, str_2: list_0}
    function_def_1 = module_1.FunctionDef(*list_0, **dict_0)
    return_from_generator_transformer_2 = module_2.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_2 = return_from_generator_transformer_2.visit_FunctionDef(
        function_def_1
    )
    var_1 = return_from_generator_transformer_2.generic_visit(type_ignore_0)
    str_2.visit_FunctionDef(var_1)
