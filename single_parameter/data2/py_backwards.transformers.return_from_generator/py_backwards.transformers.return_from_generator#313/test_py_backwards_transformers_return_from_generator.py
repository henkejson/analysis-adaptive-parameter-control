# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    expr_0 = module_0.Expr()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        expr_0
    )


def test_case_1():
    bytes_0 = b"\xcc\x0b\xff\xceWb|\x19k\xd4\xf91\x95[\x15\x17\r"
    list_0 = [bytes_0, bytes_0]
    while_0 = module_0.While(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(while_0)


def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    while_0 = module_0.While(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(while_0)
