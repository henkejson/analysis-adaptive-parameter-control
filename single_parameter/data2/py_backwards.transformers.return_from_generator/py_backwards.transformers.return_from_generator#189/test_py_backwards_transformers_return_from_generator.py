# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    comprehension_0 = module_0.comprehension()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        comprehension_0
    )


def test_case_1():
    attribute_0 = module_0.Attribute()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        attribute_0
    )
    set_0 = {attribute_0, attribute_0}
    list_0 = [return_from_generator_transformer_0, set_0, set_0, set_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    attribute_0 = module_0.Attribute()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        attribute_0
    )
    set_0 = {attribute_0, attribute_0, return_from_generator_transformer_0}
    list_0 = [return_from_generator_transformer_0, set_0, set_0, set_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    var_0 = return_from_generator_transformer_0.visit(function_def_0)


def test_case_3():
    attribute_0 = module_0.Attribute()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        attribute_0
    )
    set_0 = module_2.iter_child_nodes(attribute_0)
    list_0 = [return_from_generator_transformer_0, set_0, set_0, set_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
