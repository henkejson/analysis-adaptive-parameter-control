# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    mat_mult_0 = module_0.MatMult()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        mat_mult_0
    )


def test_case_1():
    bytes_0 = b"\xe2[\xe0X\xdf\xa9J*K\x80(\xd3~"
    list_0 = [bytes_0, bytes_0, bytes_0]
    if_exp_0 = module_0.IfExp(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        if_exp_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(if_exp_0)


def test_case_2():
    bytes_0 = b""
    pow_0 = module_0.Pow()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(pow_0)
    list_0 = [bytes_0, bytes_0, bytes_0]
    if_exp_0 = module_0.IfExp(*list_0)
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    comprehension_0 = module_0.comprehension()
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        comprehension_0
    )
    module_0.LtE(*list_0)
