# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    transport_plugin_0 = module_0.TransportPlugin()


def test_case_1():
    transport_plugin_0 = module_0.TransportPlugin()
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth()


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    none_type_0 = None
    converter_plugin_0 = module_0.ConverterPlugin(none_type_0)
    set_0 = {converter_plugin_0}
    module_0.TransportPlugin(*set_0)


def test_case_4():
    transport_plugin_0 = module_0.TransportPlugin()
    str_0 = ""
    bytes_0 = b'C;\xa7")\xf5\xf9\xfd\x88\x9d\xd67\xc4\xd6\x93('
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    converter_plugin_0.convert(bytes_0)


def test_case_5():
    module_0.FormatterPlugin()


def test_case_6():
    transport_plugin_0 = module_0.TransportPlugin()
    str_0 = "\n        Modify `env.stdout` and `env.stdout_isatty` based on args, if needed.\n\n        "
    str_1 = "~>33]%a>}P!.Jy"
    str_2 = "format_options"
    dict_0 = {str_1: transport_plugin_0, str_1: str_1, str_2: str_2}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = formatter_plugin_0.format_body(transport_plugin_0, str_0)
    transport_plugin_0.get_adapter()


def test_case_7():
    transport_plugin_0 = module_0.TransportPlugin()
    str_0 = "\n        Modify `env.stdout` and `env.stdout_isatty` based on args, if needed.\n\n        "
    str_1 = "~>33]%a>}P!.Jy"
    str_2 = "format_options"
    dict_0 = {str_1: transport_plugin_0, str_1: str_1, str_2: str_2}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = formatter_plugin_0.format_headers(str_2)
    str_4 = formatter_plugin_0.format_body(transport_plugin_0, str_0)
    transport_plugin_0.get_adapter()


def test_case_8():
    transport_plugin_0 = module_0.TransportPlugin()
    str_0 = "~>33]%a>}P!.Jy"
    str_1 = "format_options"
    dict_0 = {str_0: transport_plugin_0, str_0: str_0, str_1: str_1}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    base_plugin_0 = module_0.BasePlugin()
    str_2 = "ieX3/}}\t$N0Dsq~"
    str_3 = "{o\x0bsn^h|X?K.\tfo"
    str_4 = formatter_plugin_0.format_metadata(str_2)
    dict_1 = {str_3: str_3, str_3: str_3}
    module_0.TransportPlugin(**dict_1)
