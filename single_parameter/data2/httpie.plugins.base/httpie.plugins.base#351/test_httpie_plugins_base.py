# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    module_0.FormatterPlugin()


def test_case_1():
    int_0 = -1744
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(password=int_0)


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    bool_0 = True
    converter_plugin_0 = module_0.ConverterPlugin(bool_0)
    converter_plugin_1 = module_0.ConverterPlugin(converter_plugin_0)


def test_case_4():
    transport_plugin_0 = module_0.TransportPlugin()
    str_0 = "Eh1e&YvA$lI@n8vsv3S+"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)
    bool_0 = False
    converter_plugin_1.convert(bool_0)


def test_case_5():
    str_0 = "\t.^3kYR,8A@55_~@["
    str_1 = "n@-0dP!g*jBa#\\"
    str_2 = "]Go_x-=%"
    str_3 = "format_options"
    dict_0 = {str_2: str_0, str_3: str_3}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_4 = formatter_plugin_0.format_headers(str_1)
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    none_type_0 = None
    converter_plugin_0.convert(none_type_0)


def test_case_6():
    str_0 = "\t.^3kYR,8A@55_~@["
    str_1 = "n@-0dP!g*jBa#\\"
    str_2 = "]Go_x-=%"
    str_3 = "format_options"
    dict_0 = {str_2: str_0, str_3: str_3}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_4 = formatter_plugin_0.format_headers(str_1)
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    none_type_0 = None
    str_5 = formatter_plugin_0.format_metadata(str_0)
    converter_plugin_0.convert(none_type_0)


def test_case_7():
    str_0 = "\t.^3kYR,8A@55_~@["
    str_1 = "n@-0dP!g*Ba#\\"
    str_2 = "]Go_x-=%"
    str_3 = "format_options"
    dict_0 = {str_2: str_0, str_1: str_2, str_3: str_3}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_4 = formatter_plugin_0.format_headers(str_1)
    converter_plugin_0 = module_0.ConverterPlugin(str_3)
    str_5 = formatter_plugin_0.format_body(converter_plugin_0, converter_plugin_0)
    none_type_0 = None
    converter_plugin_0.convert(none_type_0)
