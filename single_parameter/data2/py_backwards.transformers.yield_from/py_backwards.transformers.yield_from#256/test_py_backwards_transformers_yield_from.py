# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bool_0 = False
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    yield_from_transformer_0.visit(bool_0)


def test_case_1():
    bool_0 = True
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)


def test_case_2():
    dict_0 = module_1.Dict()
    var_0 = module_2.dump(dict_0)
    var_1 = module_2.parse(var_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_1)
    a_s_t_0 = yield_from_transformer_0.visit(var_1)


def test_case_3():
    dict_0 = module_1.Dict()
    var_0 = module_2.dump(dict_0)
    var_1 = module_2.parse(var_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_1)
    a_s_t_0 = yield_from_transformer_0.visit(var_1)
    yield_from_transformer_1 = module_0.YieldFromTransformer(var_0)
    async_function_def_0 = module_1.AsyncFunctionDef(*var_0)
    a_s_t_1 = yield_from_transformer_0.visit(async_function_def_0)
    a_s_t_2 = yield_from_transformer_1.visit(var_1)
    var_2 = module_2.copy_location(dict_0, var_1)
    var_3 = module_2.dump(a_s_t_2, include_attributes=var_1)
    var_2.visit(a_s_t_2)
