# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    dict_0 = {}
    yield_from_transformer_0 = module_0.YieldFromTransformer(dict_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    dict_0 = {}
    yield_from_transformer_0 = module_0.YieldFromTransformer(dict_0)
    list_0 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        dict_0,
        yield_from_transformer_0,
    ]
    async_for_0 = module_1.AsyncFor(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    keyword_0 = module_1.keyword()
    yield_from_transformer_0 = module_0.YieldFromTransformer(keyword_0)
    list_0 = [
        keyword_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    list_1 = [keyword_0, list_0, list_0, keyword_0, keyword_0]
    async_for_0 = module_1.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
