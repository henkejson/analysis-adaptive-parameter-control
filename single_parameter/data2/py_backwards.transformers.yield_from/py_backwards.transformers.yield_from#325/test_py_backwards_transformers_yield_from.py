# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    subscript_0 = module_0.Subscript()
    yield_from_transformer_0 = module_1.YieldFromTransformer(subscript_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    alias_0 = module_0.alias()
    yield_from_transformer_0 = module_1.YieldFromTransformer(alias_0)


def test_case_2():
    subscript_0 = module_0.Subscript()
    list_0 = [subscript_0, subscript_0]
    module_0 = module_0.Module(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(module_0)
    a_s_t_0 = yield_from_transformer_0.visit(module_0)


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    list_1 = [list_0, none_type_0]
    str_0 = "K{; Gw4-~I_.{a)+:"
    dict_0 = {str_0: list_0}
    module_0 = module_0.Module(*list_1, **dict_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(list_1)
    a_s_t_0 = yield_from_transformer_0.visit(module_0)
