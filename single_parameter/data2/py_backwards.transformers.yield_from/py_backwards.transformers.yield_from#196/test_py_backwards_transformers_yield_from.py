# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    slice_0 = module_0.Slice()
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    expression_0 = module_0.Expression()
    yield_from_transformer_0 = module_1.YieldFromTransformer(expression_0)


def test_case_2():
    slice_0 = module_0.Slice()
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    list_0 = [yield_from_transformer_0]
    list_1 = [slice_0, list_0]
    if_0 = module_0.If(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(if_0)


def test_case_3():
    slice_0 = module_0.Slice()
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(slice_0)
    list_0 = []
    expr_0 = module_0.Expr(*list_0)
    list_1 = [expr_0, yield_from_transformer_0]
    if_0 = module_0.If(*list_1)
    a_s_t_0 = yield_from_transformer_1.visit(if_0)
    a_s_t_1 = yield_from_transformer_0.visit(if_0)
    a_s_t_2 = yield_from_transformer_0.visit(if_0)


def test_case_4():
    slice_0 = module_0.Slice()
    var_0 = module_2.walk(slice_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    expr_0 = module_0.Expr(*var_0)
    list_0 = [expr_0, var_0]
    list_1 = [expr_0, var_0, var_0, list_0]
    class_def_0 = module_0.ClassDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(class_def_0)
