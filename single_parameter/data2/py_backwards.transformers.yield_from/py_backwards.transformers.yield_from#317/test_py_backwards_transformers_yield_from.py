# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    set_comp_0 = module_0.SetComp()
    yield_from_transformer_0 = module_1.YieldFromTransformer(set_comp_0)
    a_s_t_0 = yield_from_transformer_0.visit(set_comp_0)


def test_case_1():
    bytes_0 = b"n\xeb\x82\x8f\xc5H\x03\x97\x80\xf2"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)


def test_case_2():
    bytes_0 = b"n\xeb\x82\x8f\xc5H\x03\x97\x80\xf2"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0]
    module_0 = module_0.Module(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(module_0)


def test_case_3():
    bytes_0 = b"n\xeb\x82\x8f\xc4H\x03\x97\x80\xf2"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0]
    list_1 = [list_0, bytes_0]
    module_0 = module_0.Module(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(module_0)
