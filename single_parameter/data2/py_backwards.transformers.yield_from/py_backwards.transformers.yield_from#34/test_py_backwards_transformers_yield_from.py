# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bool_0 = False
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    yield_from_transformer_0.visit(bool_0)


def test_case_1():
    comprehension_0 = module_1.comprehension()
    yield_from_transformer_0 = module_0.YieldFromTransformer(comprehension_0)


def test_case_2():
    comprehension_0 = module_1.comprehension()
    yield_from_transformer_0 = module_0.YieldFromTransformer(comprehension_0)
    list_0 = [comprehension_0, comprehension_0, yield_from_transformer_0]
    dict_0 = {}
    async_function_def_0 = module_1.AsyncFunctionDef(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_3():
    comprehension_0 = module_1.comprehension()
    yield_from_transformer_0 = module_0.YieldFromTransformer(comprehension_0)
    list_0 = [comprehension_0, comprehension_0, yield_from_transformer_0]
    list_1 = [yield_from_transformer_0, list_0, list_0]
    async_function_def_0 = module_1.AsyncFunctionDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)
