# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(none_type_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    invert_0 = module_1.Invert()
    yield_from_transformer_0 = module_0.YieldFromTransformer(invert_0)
    str_0 = "io"
    var_0 = module_2.parse(str_0, str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    invert_0 = module_1.Invert()
    yield_from_transformer_0 = module_0.YieldFromTransformer(invert_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0]
    str_0 = "\n;j\x0br/-AnJ"
    str_1 = "io"
    str_2 = "gK?\\Ux<&l2tS&!#KT"
    dict_0 = {str_0: yield_from_transformer_0, str_1: list_0, str_2: str_2}
    try_0 = module_1.Try(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(try_0)
    var_0 = module_2.iter_child_nodes(yield_from_transformer_0)
    var_1 = module_2.iter_fields(var_0)
    var_0.visit(try_0)
