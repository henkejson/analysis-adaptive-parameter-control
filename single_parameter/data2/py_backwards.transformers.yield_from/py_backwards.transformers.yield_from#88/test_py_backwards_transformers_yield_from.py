# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    load_0 = module_0.Load()
    yield_from_transformer_0 = module_1.YieldFromTransformer(load_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    load_0 = module_0.Load()
    yield_from_transformer_0 = module_1.YieldFromTransformer(load_0)


def test_case_2():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    str_0 = "TPandler"
    var_0 = module_2.parse(str_0, str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = ")>\\YnA?Sd"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    for_0 = module_0.For(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(for_0)
    bin_op_0 = module_0.BinOp()
    arguments_0 = module_0.arguments()
    list_1 = [none_type_0]
    index_0 = module_0.Index(*list_1)
    yield_from_transformer_1 = module_1.YieldFromTransformer(bin_op_0)
    yield_from_transformer_2 = module_1.YieldFromTransformer(arguments_0)
    yield_from_transformer_3 = module_1.YieldFromTransformer(arguments_0)
    yield_from_transformer_4 = module_1.YieldFromTransformer(list_0)
