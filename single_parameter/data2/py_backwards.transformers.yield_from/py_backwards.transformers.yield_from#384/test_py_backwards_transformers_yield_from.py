# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    withitem_0 = module_0.withitem()
    yield_from_transformer_0 = module_1.YieldFromTransformer(withitem_0)
    a_s_t_0 = yield_from_transformer_0.visit(withitem_0)


def test_case_1():
    withitem_0 = module_0.withitem()
    yield_from_transformer_0 = module_1.YieldFromTransformer(withitem_0)


def test_case_2():
    bytes_0 = b"P#?\xe9\xca\x07"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    var_0 = module_2.parse(bytes_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bytes_0 = b"#?\xe9\xca\x07\xd9"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)
