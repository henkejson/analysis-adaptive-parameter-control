# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "CCVH4"
    float_0 = -862.9603796017225
    dict_0 = {str_0: str_0, str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    bytes_0 = b"hyC\xe6"
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_4():
    bytes_0 = b"\x90\xe4n\x07\x80\x91\x7fLHy"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    float_0 = -869.4468
    dict_0 = {float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "CCH4"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "__class__"
    float_0 = -869.4468
    dict_0 = {str_0: str_0, str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bool_0 = True
    list_0 = []
    list_1 = [bool_0, list_0, bool_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)
    dict_0 = {}
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(dict_0)
    var_9 = module_0.to_namedtuple(var_7)
    var_10 = module_0.to_namedtuple(var_4)


def test_case_12():
    int_0 = -160
    str_0 = "t "
    list_0 = [str_0, str_0, str_0, int_0]
    dict_0 = {int_0: str_0, int_0: int_0, int_0: list_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_13():
    int_0 = 1044
    bytes_0 = b"\xbc\x9fX\xb5s\xf3\xfa"
    object_0 = module_2.object()
    dict_0 = {int_0: int_0, int_0: int_0, bytes_0: int_0, object_0: int_0}
    module_0.to_namedtuple(dict_0)
