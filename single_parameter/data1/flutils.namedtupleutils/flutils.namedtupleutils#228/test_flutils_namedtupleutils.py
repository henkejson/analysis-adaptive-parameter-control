# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 384
    list_0 = [int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "addtl_attrs"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    object_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x87"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "st3do"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_1.object()
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_2.OrderedDict()
    dict_1 = {var_1: none_type_0}
    var_5 = module_0.to_namedtuple(dict_1)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "addtl_attrs"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "{fA})"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    bytes_0 = b"\xa4\xdb\xe1\xac"
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_13():
    bool_0 = False
    bytes_0 = b""
    list_0 = [bool_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {bytes_0: list_0, bytes_0: list_0, bytes_0: bytes_0}
    tuple_0 = (list_0, dict_0)
    tuple_1 = (tuple_0, dict_0, bool_0, bool_0)
    module_0.to_namedtuple(tuple_1)


def test_case_14():
    str_0 = "C\x0b"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_1.object()
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    str_1 = 'jG,FXksgACxODf6%"D\t'
    var_5 = module_0.to_namedtuple(var_0)
    dict_1 = {str_1: none_type_0}
    var_6 = module_0.to_namedtuple(dict_1)
