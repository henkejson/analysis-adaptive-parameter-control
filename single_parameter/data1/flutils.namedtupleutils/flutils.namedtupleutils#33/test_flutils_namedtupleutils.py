# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "O21U"
    set_0 = set()
    dict_0 = {str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "XQ^$x"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = True
    complex_0 = 845 - 64.43j
    dict_0 = {bool_0: bool_0, bool_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "Convert the given ``text``  into a string of escaped Unicode\n    hexadecimal.\n\n    Args:\n         text (:obj:`str`): The string to convert.\n\n    :rtype:\n        :obj:`str`\n\n            A string with each character of the given ``text`` converted\n            into an escaped Python literal.\n\n    Example:\n        >>> from flutils.strutils import as_escaped_unicode_literal\n        >>> t = '1.â˜… ðŸ›‘'\n        >>> as_literal(t)\n        '\\\\x31\\\\x2e\\\\u2605\\\\x20\\\\U0001f6d1'\n    "
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    bool_0 = True
    bytes_0 = b"S\x11L"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bytes_0: bytes_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "Al3=\n{\x0bX1o3:'@]il&"
    set_0 = set()
    dict_0 = {str_0: set_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    float_0 = 246.666167
    module_0.to_namedtuple(float_0)


def test_case_11():
    str_0 = "\nLSv"
    set_0 = set()
    dict_0 = {str_0: set_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(set_0)
