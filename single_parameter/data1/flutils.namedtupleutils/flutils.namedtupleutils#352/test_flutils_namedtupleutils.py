# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "num"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "%sb%s"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "num"
    bool_0 = True
    bool_1 = True
    dict_0 = {
        bool_0: bool_0,
        str_0: bool_0,
        bool_0: bool_0,
        bool_1: bool_0,
        bool_0: bool_1,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "num"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "=O+&@,*W)"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    object_0 = module_2.object(**dict_0)
    module_0.to_namedtuple(object_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    bytes_0 = b"\x80\xbf\xaa\x8cm>p8\xd3J"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "nu\n"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_0 = True
    bool_1 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_1: bool_0, bool_0: bool_1}
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(dict_1)
    bytes_0 = b"\x196\x91\xa6\xc1\xa3ZqQ"
    bytes_1 = b""
    tuple_0 = (bytes_1, var_1, var_0, var_2)
    int_0 = 1284
    var_5 = module_0.to_namedtuple(dict_1)
    tuple_1 = (tuple_0, int_0, var_3)
    var_6 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(bytes_0)
