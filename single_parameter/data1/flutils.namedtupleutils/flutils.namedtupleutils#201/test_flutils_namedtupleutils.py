# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    tuple_0 = (bool_0, ordered_dict_0)
    list_0 = [tuple_0, tuple_0]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_2)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "Gn>qrA\x0c]>:\ny"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    float_0 = 1491.0
    tuple_0 = (float_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: float_0, tuple_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "create_module"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "lk|R_|<'TVS^-VO7Z"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_0, var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "lk|R_|<'TVS^-VO7Z"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    ordered_dict_1 = module_1.OrderedDict(**ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_1)


def test_case_11():
    str_0 = "\ncreate_module"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    ordered_dict_2 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_1)
    list_0 = [var_2]
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(list_0)
    complex_0 = -570.2 - 1350.097969j
    int_0 = 0
    dict_1 = {complex_0: ordered_dict_1, str_0: complex_0, int_0: var_0}
    var_5 = module_0.to_namedtuple(dict_1)
    var_6 = module_0.to_namedtuple(var_0)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_1.OrderedDict()


def test_case_12():
    bytes_0 = b"\x87!\xde@\xb0L\xb3\xc3\xaa\x08\xc4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0, dict_0)
    module_0.to_namedtuple(tuple_0)
