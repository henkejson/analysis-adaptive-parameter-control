# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    float_0 = 1088.7
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (float_0, var_1)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "f<~A<JP"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "wN9XrOp"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "f<~A<JP"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "%$t3qt\t]?}4\nc"
    str_1 = ")@bw.h\\R-LsYN\x0b]\n~"
    str_2 = "AnsiTextWrapper"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_11():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_1, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    float_0 = 2127.462745
    module_0.to_namedtuple(float_0)


def test_case_12():
    int_0 = 1158
    bytes_0 = b"4\x17\xe7\x93^\x11\xc0\xed\xedt8\xad>8\xfd\x07\x91"
    tuple_0 = ()
    dict_0 = {bytes_0: tuple_0}
    tuple_1 = (int_0, bytes_0, dict_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_13():
    str_0 = "wN9XrOp"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    str_0 = "%$t3qt\t]?}4\nc"
    str_1 = ")@bw.h\\R-LsYN\x0b]\n~"
    str_2 = "\x0beUzC"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    set_0 = set()
    list_0 = [set_0, set_0, ordered_dict_0, ordered_dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    ordered_dict_1 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_1)
    bytes_0 = b'/\xcb"\x88\xd7\x9a\n\x8c+'
    bool_0 = False
    tuple_0 = (ordered_dict_1, bytes_0, bool_0)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(tuple_0)
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(var_0)
