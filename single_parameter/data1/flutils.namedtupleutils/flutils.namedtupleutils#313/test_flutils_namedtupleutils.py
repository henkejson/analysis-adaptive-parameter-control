# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "VTe"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "C:c=BE;U,9FGw!&-wH"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -983.553
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_0)
    str_0 = "A module that manages attributes pointing to lazy-loaded-modules\n    and lazy-loaded-module-attributes.\n    "
    dict_1 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_4 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"a\xdf\x0c\xeew\x9e\x0e\xc2\xa6\xe07\xa5\xee4\xb0\xb0\x0c9\x1a\x0e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_0 = "\x0b\x0cVTe"
    dict_1 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    ordered_dict_1 = module_1.OrderedDict()
    bool_1 = False
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_2)
    tuple_1 = (bool_1, var_4, bool_1, bool_1)
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(dict_1)
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_0.to_namedtuple(var_3)
    bool_2 = True
    module_0.to_namedtuple(bool_2)
