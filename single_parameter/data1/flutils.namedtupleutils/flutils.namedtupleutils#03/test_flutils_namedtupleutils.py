# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -2566
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    str_0 = "loadermaintainer"
    dict_0 = {str_0: set_0, str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = "loadermaintainer"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xa3C+M"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    float_0 = 2277.13527458623
    bytes_0 = b"^"
    dict_0 = {float_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_1, bool_1, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "path"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    str_0 = "JPz1\x0cKK*\th,\rr"
    str_1 = "loadermaintainer"
    dict_0 = {str_0: set_0, str_1: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    str_0 = "!sOkz!XQf1N|Rk)&"
    str_1 = " RpuKTv"
    tuple_1 = (set_0, set_0, tuple_0, set_0)
    dict_0 = {str_0: set_0, str_1: tuple_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
