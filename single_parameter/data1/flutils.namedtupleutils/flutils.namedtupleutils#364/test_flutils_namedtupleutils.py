# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 128
    tuple_0 = (bool_0, var_0, int_0, list_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "convert_escaped_unicode_literal"
    dict_0 = {}
    dict_1 = {str_0: str_0, str_0: str_0, str_0: dict_0, str_0: dict_0}
    var_0 = module_0.to_namedtuple(dict_1)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"Q\x18\x12\xc9j\x1e\x1e\xb2\xc2Z\xef\xd3"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "|8^j2!'UQA]<C"
    str_1 = "U]Vp/{.eR]["
    dict_0 = {str_0: str_0, str_1: str_0, str_1: list_0, str_0: list_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {var_2: str_0, var_2: str_0}
    tuple_0 = (dict_1, list_0, ordered_dict_0, str_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "convert_escaped_unicode_literal"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    str_0 = "m^j2!'UiA]<C"
    str_1 = "U]Vp/{.eR]["
    dict_0 = {str_0: str_0, str_1: str_0, str_1: list_0, str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bool_0 = False
    bytes_0 = b"\xeb\xb1r\xe7\xdb\xfd\xa0\xa4S"
    dict_0 = {bool_0: bytes_0, bytes_0: bool_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "convert_escaped_unicode_literal"
    dict_0 = {}
    dict_1 = {str_0: str_0, str_0: str_0, str_0: dict_0, str_0: dict_0}
    var_0 = module_0.to_namedtuple(dict_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    list_0 = []
    bytes_0 = b"\x16\xe6\x08N"
    str_0 = "%s%s%s"
    tuple_0 = (list_0, list_0, bytes_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_13():
    str_0 = "WyK\x0c"
    str_1 = "U]Vp/{.eR]["
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {
        var_0: dict_0,
        str_0: str_0,
        str_0: str_0,
        str_1: str_0,
        str_1: var_0,
        str_0: var_0,
    }
    ordered_dict_0 = module_1.OrderedDict(*var_0, **dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_1)
    ordered_dict_1 = module_1.OrderedDict()
    bool_0 = True
    tuple_0 = (var_3, bool_0)
    var_5 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(
        ordered_dict_1,
        str_1,
        rename=var_2,
        defaults=ordered_dict_1,
        module=ordered_dict_1,
    )
