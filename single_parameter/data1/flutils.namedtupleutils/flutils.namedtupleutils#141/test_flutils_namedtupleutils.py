# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "get_os_user"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b'\xb8\x94\xcev\xbc\x00SRul\x81\xa5"'
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bytes_0 = b"q'\xbe\xbb\xa6\x04\xaa\xbdE48\xa4\xcb\xb58\x9e"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    int_0 = 334
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (list_0, list_0)
    bytes_0 = b"\n\xbf\xd1m\x9f\t"
    tuple_1 = (tuple_0, bytes_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    dict_0 = {bytes_0: tuple_0, bytes_0: tuple_1}
    tuple_2 = (tuple_1, dict_0, tuple_0, list_0)
    module_0.to_namedtuple(tuple_2)


def test_case_11():
    str_0 = "get_os_user"
    none_type_0 = None
    str_1 = "3X\ty"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "get_os_user"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "get_os_user"
    none_type_0 = None
    str_1 = "qX\t"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)
