# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = -2587.24
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [bool_0, list_0, list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "Mkth"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xca\xee\xc4\xcf\x98\x06\xc4"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    float_0 = -2804.0
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(object_0)


def test_case_7():
    str_0 = "Mkth"
    str_1 = "=p+X-j9({"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_2)


def test_case_8():
    bytes_0 = b"\xca\xee\xc4\xcf\x98\x06\xc4"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "Mkth"
    str_1 = "=p+X-j9{"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"A\x93\xe0\xb7\xc0\x88"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "Q\r"
    str_1 = "=p+X-j9{"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_2.object(*var_1)
    module_0.to_namedtuple(str_1)
