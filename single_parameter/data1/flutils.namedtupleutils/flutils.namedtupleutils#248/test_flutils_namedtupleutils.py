# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = -2620.70746 - 1776j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "pr0ep_cm"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "camel_to_underscore"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(dict_0, var_0, module=bool_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = module_0.to_namedtuple(ordered_dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "pAecm="
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_11():
    bytes_0 = b"\xf6\xa1\xc7\x8c}d\xdb"
    tuple_0 = ()
    bool_0 = True
    object_0 = module_2.object()
    set_0 = {bool_0, bool_0, tuple_0}
    str_0 = "g\rg8m\x0bn["
    tuple_1 = (bool_0, set_0, bytes_0, str_0)
    dict_0 = {bool_0: bool_0, bool_0: object_0, bytes_0: object_0, bytes_0: tuple_1}
    tuple_2 = (bytes_0, tuple_0, dict_0)
    module_0.to_namedtuple(tuple_2)


def test_case_12():
    str_0 = "a\x0c"
    dict_0 = {str_0: str_0}
    str_1 = "The given 'setup_dir' of %r is NOT a directory."
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(var_7)
    var_9 = module_0.to_namedtuple(var_8)
    var_10 = module_0.to_namedtuple(ordered_dict_0)
    var_11 = module_0.to_namedtuple(var_8)
    var_12 = module_0.to_namedtuple(var_6)
    dict_1 = {var_6: var_11, bool_0: var_0, bool_0: var_2, str_1: ordered_dict_0}
    var_13 = module_0.to_namedtuple(dict_1)
    list_0 = [var_7, bool_0, tuple_0]
    var_14 = module_0.to_namedtuple(list_0)
    var_15 = module_0.to_namedtuple(var_14)
    ordered_dict_1 = module_1.OrderedDict()
    module_1.namedtuple(var_14, var_14)
