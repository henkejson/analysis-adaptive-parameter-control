# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_1.namedtuple(none_type_0, list_0)


def test_case_2():
    str_0 = "minor"
    tuple_0 = (str_0,)
    dict_0 = {str_0: str_0, str_0: str_0, tuple_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "Uc>c<kXyDW0b7)'i/K"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    list_0 = []
    bytes_0 = b"\xaa!]\x0c\x12\xda\xfaP\x11U\xe2\\\x82q\xe2"
    tuple_0 = (list_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "li(or"
    tuple_0 = (str_0,)
    dict_1 = {tuple_0: tuple_0, tuple_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    dict_2 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.to_namedtuple(dict_2)
    var_3 = module_0.to_namedtuple(dict_2)
    var_4 = module_0.to_namedtuple(dict_2)
    var_5 = module_0.to_namedtuple(dict_2)
    var_6 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    int_0 = 1471
    list_0 = [int_0, int_0, int_0]
    bytes_0 = b"\x1b\xb66\xadp\x011\xdf\x93\x9f\xce"
    str_0 = "GNn "
    tuple_0 = (list_0, bytes_0, str_0, list_0)
    float_0 = -2243.1205
    bool_0 = True
    tuple_1 = (tuple_0, float_0, str_0, bool_0)
    dict_0 = {int_0: tuple_1, str_0: bytes_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"D\xa1\xeee\xe4#\xb1\xd2\xee_\x88l"
    float_0 = -74.4452
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: float_0}
    list_0 = [dict_0, float_0]
    list_1 = [list_0]
    module_0.to_namedtuple(list_1)
