# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    bytes_0 = b"\xe6~\x9b"
    list_0 = [bytes_0, bytes_0, bytes_0, bool_0]
    tuple_0 = (bool_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xcc&\xae\xad'\x1d\x1eM\xfci\x1d\x97\x98-"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bytes_0 = b"\xac\xde\x93\xcb\x13\x8dL]\ng\x1f\xbe\x11\xbe\xdfi\x14\x99"
    tuple_0 = (bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    none_type_0 = None
    str_0 = ", SKo$}S\n\r2\x0cN'd?6}"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "V"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        none_type_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "V"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        none_type_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"\xfb3I|\xe8\xfe\x1c\xdf"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    none_type_0 = None
    float_0 = -1729.0
    str_0 = "xJU\t"
    dict_0 = {none_type_0: float_0, none_type_0: float_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (float_0, float_0, dict_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_1.OrderedDict()
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    module_0.to_namedtuple(none_type_0)
