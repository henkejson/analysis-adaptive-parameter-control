# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "JoC0FO"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    complex_0 = -1302.0711 + 1076.58987j
    list_0 = [dict_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "JoC0FO"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xbb\x9fd\xb5=S\xdf\x04r\\`\xfc\x88\xe1V?\xb4&"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "%\\1[)eemJ\x0c`"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "hNJ}I\n=yn7?9 ;t,Il#z"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    str_0 = "initialize_options"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "\n?"
    bytes_0 = b"\xe1\xde&"
    tuple_0 = (str_0, bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "initialize_options"
    bool_0 = True
    dict_0 = {str_1: str_1, bool_0: str_1, bool_0: str_1}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    complex_0 = -1302.0711 + 1076.58987j
    list_0 = [dict_0, complex_0, dict_0, var_1, complex_0, complex_0]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(tuple_0)
    dict_1 = {bytes_0: bool_0, str_0: str_1, bool_0: var_5}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "\n?"
    bytes_0 = b"\xe1\xde&"
    tuple_0 = (str_0, bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "\rgE"
    bool_0 = True
    dict_0 = {str_1: var_0, var_0: var_0, bool_0: str_1, bool_0: str_1}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    complex_0 = -1302.0711 + 1076.58987j
    list_0 = [dict_0, complex_0, dict_0, var_1, complex_0, complex_0]
    var_3 = module_0.to_namedtuple(var_1)
    module_1.OrderedDict(*list_0, **var_0)
