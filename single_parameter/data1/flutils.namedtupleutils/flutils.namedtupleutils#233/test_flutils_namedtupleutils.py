# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 2
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    int_1 = -1784
    tuple_1 = (var_1, int_1)
    var_2 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "~E-C;G?Y:qRMl+4"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "socket"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    float_0 = -781.67212
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "N:Wi2g5M*);bN("
    str_1 = "socket"
    dict_0 = {str_1: str_1, str_0: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_1.namedtuple(dict_0, var_1, module=var_1)


def test_case_11():
    bytes_0 = b"\x9e\x82\x12\x04"
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_0}
    set_0 = set()
    list_0 = [dict_0, set_0, set_0, bool_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "\nFAp"
    str_1 = "socket"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_0 = b"5s\x83\xdd\x85p\xf8My\xe9i\x8f\xcd"
    tuple_0 = (ordered_dict_0, str_0, str_1, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = True
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
