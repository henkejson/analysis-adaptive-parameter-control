# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -1533
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b"\xe8w4\r"
    tuple_0 = (set_0, bytes_0)
    tuple_1 = (tuple_0, bytes_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "v"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "x\tc5t4$S#\rK([eV"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "}cl_UNjMq'v:"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "\t%3+|T"
    module_0.to_namedtuple(str_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"&Mu-"
    tuple_0 = (bytes_0,)
    tuple_1 = ()
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"m\xfb\xf0rnxB\xb9\x15\xc2"
    bytes_1 = b'"or\xe2#YR/\x1fm\xea\x1f\xef&<r\\'
    dict_0 = {bytes_0: bytes_0, bytes_1: bytes_1, bytes_1: bytes_0}
    float_0 = 1355.3
    tuple_0 = (bytes_0, dict_0, float_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "\tv"
    none_type_0 = None
    str_1 = "#y v'2<oWNuTA$"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict()
    bool_0 = True
    bool_1 = True
    ordered_dict_2 = module_1.OrderedDict()
    list_0 = [bool_1]
    var_2 = module_0.to_namedtuple(var_0)
    list_1 = [str_0, bool_0, list_0, list_0]
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_1.OrderedDict()
