# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    str_0 = "pyYu"
    dict_0 = {bool_0: bool_0, str_0: str_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x0e\xc6'\xd5~\x94\xd6[\x05\xbbH\x8d\xc2\x7fq\xeb\xc1\xc1[c"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "FDdM1ih2W9"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\xe8\x03\xb4\xd8t\xb4\xb2"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, dict_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (var_0, var_0, ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b"!qM0"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "\n{Lep6S"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\xe8\x03\xb4\xd8t\xb4\xb2"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, dict_0, bool_0]
    bytes_1 = b"j"
    tuple_0 = (dict_0, bytes_0, list_0, bytes_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_11():
    str_0 = " TRt"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    bytes_0 = b"\xe8\x03\xb4\xd8t\xb4\xb2"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, dict_0, bool_0]
    bytes_1 = b"j"
    tuple_0 = (dict_0, bytes_0, list_0, bytes_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)
