# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (list_0, bool_0, bool_1, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "MT"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"#\xef;\xfb\xa8o\xcb\x8e"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    dict_0 = {bool_0: bool_0, bool_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "MT"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_2 = module_2.object()


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    list_0 = []
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "."
    str_1 = "test_suite"
    dict_0 = {
        str_0: str_0,
        str_1: str_0,
        str_1: str_0,
        str_0: str_0,
        str_0: str_1,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_13():
    bytes_0 = b"\x91kqj\xe8A\x00\x17\xaam@\xd1\xdf\x0b\x83\xb0"
    none_type_0 = None
    float_0 = 3799.091831
    dict_0 = {}
    set_0 = {float_0}
    tuple_0 = (float_0, dict_0, set_0, bytes_0)
    dict_1 = {
        none_type_0: bytes_0,
        none_type_0: bytes_0,
        none_type_0: none_type_0,
        bytes_0: tuple_0,
    }
    module_0.to_namedtuple(dict_1)


def test_case_14():
    str_0 = "\to"
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    set_0 = {var_2, var_2, var_2}
    dict_0 = {var_3: var_1, str_0: set_0}
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_4)
    var_9 = module_0.to_namedtuple(tuple_0)
    var_10 = module_0.to_namedtuple(var_7)
    var_11 = module_0.to_namedtuple(var_7)
    list_0 = [var_3, var_2]
    var_12 = module_0.to_namedtuple(var_2)
    var_13 = module_0.to_namedtuple(dict_0)
    var_14 = module_0.to_namedtuple(list_0)
