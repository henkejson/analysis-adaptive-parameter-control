# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "onvert_escaped_utf8_literal"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {str_0: bool_0, bool_0: str_0, bool_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    int_0 = -1959
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "DA\\\r&$}LDoW!"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"\xb99\x85\xc2\xcc\x1b\xef\xef4\xc3\xaa\xa7C\xea\x19\xf0\xfd"
    bytes_1 = b"\x06\xe3\xd3{\n\x18\xcfR5MG\x0fT.\xbb"
    list_0 = [bytes_0, bytes_0, bytes_1, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "\x0b=9"
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {str_0: bool_0, bool_0: str_0, bool_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (bool_0, var_0, list_0, dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    bool_1 = True
    module_1.namedtuple(bool_1, bool_1, rename=bool_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    bytes_0 = b"\xdbG}s\x9e\x05w\xd2\x876-L\xe8\xb3&\xc9\xc4"
    dict_0 = {bool_0: bool_1, bytes_0: bool_0, bytes_0: bool_1}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 3475
    str_0 = "zJa6 "
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, int_0, int_0, bool_0]
    tuple_0 = (str_0, bool_0, list_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    dict_0 = {str_0: bool_0, bool_0: str_0, bool_0: list_0}
    tuple_1 = (int_0, tuple_0, list_0, dict_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(ordered_dict_1)
    var_7 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(bool_0)
