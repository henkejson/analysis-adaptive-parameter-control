# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_1():
    bool_0 = False
    float_0 = 2902.69393
    tuple_0 = (bool_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0, var_0, var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "hJ6"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "HE;HF#"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "hJ6"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    dict_1 = {var_0: var_0}
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_3)
    int_0 = -2669
    var_6 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(int_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"\x00\xaf\x1d\x16\x1d\x8f\x8f\xa1\xda"
    bytes_1 = b"\xc0]w\x19x\xa3@E\x1c\x0c"
    tuple_0 = (bytes_0, bytes_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_1)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "The path: %r must NOT contain any glob patterns."
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    bytes_0 = b'\x15"\xe4'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = " M"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (var_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
