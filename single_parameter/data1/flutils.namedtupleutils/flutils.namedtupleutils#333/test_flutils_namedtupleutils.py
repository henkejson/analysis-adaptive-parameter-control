# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 1584
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (int_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = 'o:ZSgv"_0%)1J11'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "~"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "lazy_imort_module"
    float_0 = -2017.0821045144094
    dict_0 = {
        str_0: str_0,
        float_0: float_0,
        float_0: str_0,
        str_0: float_0,
        str_0: float_0,
        str_0: str_0,
    }
    tuple_0 = (str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "lazy_imort_module"
    float_0 = -2017.0821045144094
    dict_0 = {
        str_0: str_0,
        float_0: float_0,
        float_0: str_0,
        str_0: float_0,
        str_0: float_0,
        str_0: str_0,
    }
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xfd\xb6\x98@\x93\xf7d\xc8\x9cj}IR\x97y\x03"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_1 = b"\xb0\xb4\x9a\xf6\xed\n\xd0\x96h\xacW/\xee\x0cO\xfc\xecA"
    tuple_0 = (bytes_0, dict_0, ordered_dict_0, bytes_1)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "\nazy_importf_module"
    float_0 = -2017.0821045144094
    dict_0 = {
        str_0: str_0,
        str_0: float_0,
        str_0: str_0,
        str_0: float_0,
        str_0: str_0,
        float_0: float_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    tuple_0 = (str_0, var_1, float_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    int_0 = 1005
    module_0.to_namedtuple(int_0)
