# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = 'y^l)gCj*97: "Mr '
    list_0 = [str_0, str_0]
    bool_0 = False
    bytes_0 = b"\x10#\x91\xdc\xb1{\xcdr\xf9P"
    tuple_0 = (bool_0, bytes_0)
    tuple_1 = (list_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "license"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = 'RMiso4E$!*"I.Do'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -1292.33
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = 'RMiso4E$!*"I.Do'
    str_1 = "~U"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "* 2*wj|4V"
    str_1 = ",\x0cgp*B]$qa{@"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (ordered_dict_0,)
    bool_0 = False
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    str_0 = "license"
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\x99:A{\xb2Bx\x06\x8b\x87\xf8\x16Nk\xeeB\xa1\x8eN\x06"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    object_0 = module_2.object()
    list_0 = [object_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "sk\x0b"
    var_1 = module_0.to_namedtuple(var_0)
    str_1 = ",\x0cgp*Bm$qa{@"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    bool_0 = False
    var_3 = module_0.to_namedtuple(ordered_dict_1)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(bool_0)
