# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 2404
    set_0 = {int_0, int_0, int_0}
    bool_0 = True
    int_1 = 448
    bool_1 = True
    tuple_0 = (set_0, bool_0, int_1, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "}%+rdXNhAs6/5[]"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "The given 'setup_dir' of %r is NOT a directory."
    tuple_0 = (ordered_dict_0, ordered_dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    int_0 = -3094
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "metadata"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\xb0\x1c@S\xd5\xc9\x95\xbd\xcd\x9f \x87\xa9\x01\xce`c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "vz;hM)FmeJ-w,Pm&V"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    int_0 = -3094
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(int_0)


def test_case_12():
    str_0 = "mhytadas\x0c"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)
