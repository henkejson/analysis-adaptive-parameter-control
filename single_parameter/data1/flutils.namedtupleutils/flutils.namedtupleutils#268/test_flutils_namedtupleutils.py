# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 911 - 2101.1j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "3vvm`\n\x0cwpG?P"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "get_os_user"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_1.OrderedDict()


def test_case_7():
    str_0 = "mx<PekEq3jb`J"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_0, str_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_1.OrderedDict(*str_0, **dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    bool_0 = True
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, tuple_0: bool_0, tuple_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    bytes_0 = b"+\x115\x8f\t9\xeb\x0b#\x83~\xa0\x9d"
    bool_0 = False
    dict_0 = {bool_0: bytes_0, bool_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0, dict_0)
    tuple_1 = (bytes_0, bool_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "geGt_os_usr"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0b aL4ld"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_1.OrderedDict(*var_0)
    module_0.to_namedtuple(str_0)
