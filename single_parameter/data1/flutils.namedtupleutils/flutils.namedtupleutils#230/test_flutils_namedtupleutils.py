# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 5000
    tuple_0 = (int_0,)
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "C4"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"K\xea}%@\xdf\x89\xc9%\xaanB2\xae\xc5\xa0\xd8\xef4\x81"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0}
    list_0 = [dict_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(object_0)


def test_case_7():
    bytes_0 = b"\x1b\xb2N\xbfJf3`H}."
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_9():
    str_0 = "sQ\\v|ny^rYwvsI\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    str_0 = "\rC4"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_1 = "__builtins__"
    module_0.to_namedtuple(str_1)


def test_case_11():
    float_0 = -482.4
    bytes_0 = b"\xec?\xbd\x98U\xbb\xb4\xe9\xeb8\xdaC3(\xc1"
    list_0 = [bytes_0, float_0, bytes_0]
    dict_0 = {bytes_0: bytes_0, float_0: list_0}
    module_0.to_namedtuple(dict_0)
