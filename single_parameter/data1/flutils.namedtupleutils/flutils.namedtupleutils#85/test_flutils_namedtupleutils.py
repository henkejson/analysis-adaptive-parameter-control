# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"^\x999s\x13\xea\xf7iy??\xf0\x04"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "directory_present"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    list_0 = []
    list_1 = [list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    list_2 = [var_0, list_1]
    var_1 = module_0.to_namedtuple(list_2)


def test_case_9():
    str_0 = "directory_present"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_1.namedtuple(var_2, dict_0)


def test_case_11():
    str_0 = "commands"
    str_1 = "=]"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    str_0 = "5W/HU3FqY}*f"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(dict_0)
    dict_1 = {var_3: none_type_0, var_3: var_3}
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_1, var_1)


def test_case_13():
    str_0 = "=]"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    bytes_0 = b"|\x83\xcbET\xe6"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0, ordered_dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    dict_1 = {bytes_0: none_type_0, bool_0: bool_0}
    module_0.to_namedtuple(dict_1)
