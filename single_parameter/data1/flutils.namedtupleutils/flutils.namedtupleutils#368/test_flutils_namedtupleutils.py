# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "AZgrq'1<O)I~ZS"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b""
    str_0 = "G7B"
    dict_0 = {str_0: bytes_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xe5W\x95\x1a\x90\xa4\x07\xfc\x1c\xe1E"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0]
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = " SCaD725S`0%|b5\r"
    bytes_0 = b""
    str_1 = "has_any_callables"
    str_2 = "G7B"
    dict_0 = {str_0: bytes_0, str_1: str_0, str_2: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    bytes_0 = b"\x91"
    str_0 = "G7B"
    dict_0 = {str_0: bytes_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_13():
    str_0 = "VA_JY"
    bytes_0 = b"T\xeeA"
    dict_0 = {str_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_1 = "m\x0c"
    var_1 = module_0.to_namedtuple(dict_0)
    dict_1 = {str_1: str_1, str_1: str_1, str_1: str_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    list_0 = [ordered_dict_1, dict_1]
    object_0 = module_2.object()
    var_2 = module_0.to_namedtuple(var_1)
    tuple_0 = (object_0, var_2, var_2, var_2)
    dict_2 = {
        tuple_0: tuple_0,
        tuple_0: str_0,
        object_0: dict_1,
        tuple_0: object_0,
        tuple_0: tuple_0,
    }
    var_3 = module_0.to_namedtuple(var_2)
    list_1 = [var_0, var_0, var_0, list_0]
    var_4 = module_0.to_namedtuple(list_1)
    bool_0 = True
    var_5 = module_0.to_namedtuple(dict_2)
    module_0.to_namedtuple(bool_0)
