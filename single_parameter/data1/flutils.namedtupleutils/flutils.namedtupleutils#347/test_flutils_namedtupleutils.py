# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1924
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "bW3N"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\x83"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "bW3N"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    list_0 = []
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "y]6T[y}P(iyCd"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = "W1kG7s6QGn%T5Uy_"
    none_type_0 = None
    bytes_0 = b"\xf7\xcb \x96dz\xc1\x0bv\xe6o\x1a\x00\x0e\xb3"
    list_0 = [str_0, bytes_0]
    bool_0 = False
    dict_0 = {bytes_0: none_type_0, none_type_0: bool_0, str_0: bool_0, str_0: list_0}
    tuple_0 = (list_0, bytes_0, bool_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "bW3N"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "bW3N\r"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(tuple_0)
    var_6 = module_1.OrderedDict(*var_4)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(var_0)
    var_9 = module_0.to_namedtuple(var_3)
    var_10 = module_0.to_namedtuple(var_8)
    var_11 = module_0.to_namedtuple(var_7)
    var_12 = module_0.to_namedtuple(var_11)
    var_13 = module_0.to_namedtuple(var_11)
    var_14 = module_0.to_namedtuple(var_12)
    module_0.to_namedtuple(none_type_0)
