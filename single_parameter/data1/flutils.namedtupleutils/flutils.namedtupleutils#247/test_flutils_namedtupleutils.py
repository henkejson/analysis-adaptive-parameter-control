# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "initialize_options"
    float_0 = 734.9785
    dict_0 = {str_0: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    int_0 = -123
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"+\xc1D\xa2\xe9_\xa7jm*k"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "p>uL5re<"
    float_0 = 734.9785
    dict_0 = {str_0: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xa1\x9b\\1\xcc\xd1\xe0@\x18\xef\xa8\xc32\xb1f\xcf\xa1\x8f7"
    tuple_0 = (bytes_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [bytes_0, tuple_0, dict_0]
    list_1 = [dict_0, list_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_11():
    bytes_0 = b"\xa1\x9b\\1\xcc\xd1\xe0@\x18\xef\xa8\xc32\xb1f\xcf\xa1\x8f7"
    tuple_0 = (bytes_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, bytes_0: tuple_0}
    list_0 = [bytes_0, tuple_0, dict_0]
    list_1 = [dict_0, list_0, bytes_0]
    module_0.to_namedtuple(list_1)


def test_case_12():
    str_0 = "\t e"
    float_0 = 734.9785
    dict_0 = {str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)
