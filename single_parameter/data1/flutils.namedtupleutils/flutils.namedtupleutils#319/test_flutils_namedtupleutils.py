# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 50855936
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = '`{ "X'
    tuple_1 = (str_0,)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "d]"
    module_0.to_namedtuple(str_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_4():
    str_0 = "*=Vlv/*"
    str_1 = "minor"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "*=Vlv/*"
    tuple_0 = (str_0, str_0)
    str_1 = "minor"
    dict_0 = {tuple_0: tuple_0, str_1: str_1, tuple_0: str_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "*=Vl/*"
    tuple_0 = (str_0, str_0)
    dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: str_0, tuple_0: tuple_0}
    bool_0 = False
    tuple_1 = (tuple_0, str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_11():
    bytes_0 = b"y\xd2\xd6\x8b%\x8c\x89*\x87UFa\xe4e\x07\xca\x05\x10"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "*=Vlv/*"
    tuple_0 = (str_0, str_0)
    str_1 = "9H0%DZ\t3.}"
    dict_0 = {bytes_0: list_0, tuple_0: str_0, str_0: var_0}
    bool_0 = False
    tuple_1 = (tuple_0, str_1, dict_0, bool_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "minor"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"SE\x999\xa8\xfc\xe8\x10J\xf6\xdf[\x8bk\x8c}\x9d\xdf\xea\xc1"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "*=Vlv/*"
    tuple_0 = (str_0, str_0)
    str_1 = "\x0bnor"
    dict_0 = {tuple_0: tuple_0, str_1: str_1, tuple_0: str_0, tuple_0: tuple_0}
    bool_0 = False
    tuple_1 = (tuple_0, str_1, dict_0, bool_0)
    var_1 = module_1.OrderedDict(**dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_1.OrderedDict(*tuple_1, **var_1)
