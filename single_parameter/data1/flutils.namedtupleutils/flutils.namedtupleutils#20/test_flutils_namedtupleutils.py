# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 732.2 - 1087.1j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    str_0 = "xM"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = 'a0]\\\x0blhB//R"~'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"Y\x12\x8a\x96\x89&\xd9\x14\xe4\xef\xb8\x18\x1f\xb0\x04\xa9\x8e<\xca\x93"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "xM"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "I;_i"
    module_0.to_namedtuple(str_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"\x9c\xbdA"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = True
    str_0 = "__annotations__"
    dict_0 = {bool_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_13():
    bool_0 = True
    str_0 = "annQNyotations_\n"
    dict_0 = {bool_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)
