# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (bool_0, list_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "c.,6aa$B"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "patch"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    int_0 = 2593
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "CkG4 JIL'7\"{e}\\7oHG"
    str_1 = "patch"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"<\x10\xe9\x1d"
    str_0 = "(X7MMQ ;K\n@"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: str_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0)
    list_0 = [tuple_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    bool_0 = False
    tuple_0 = (ordered_dict_0, bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    tuple_1 = module_0.to_namedtuple(var_2)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_0.to_namedtuple(var_4)
    var_9 = module_0.to_namedtuple(var_5)
    dict_0 = {}
    var_10 = module_0.to_namedtuple(dict_0)
    str_0 = "CkG4 JIL'7\"{e}\\7oHG"
    str_1 = "pajch\x0b"
    dict_1 = {str_0: var_6, var_3: var_6, str_1: dict_0}
    ordered_dict_1 = module_1.OrderedDict(*var_1, **dict_1)
    var_11 = module_0.to_namedtuple(var_8)
    var_12 = module_0.to_namedtuple(var_10)
    var_13 = module_0.to_namedtuple(dict_1)
    var_14 = module_0.to_namedtuple(dict_0)
    var_15 = module_0.to_namedtuple(tuple_0)
    ordered_dict_2 = module_1.OrderedDict()
    var_16 = module_0.to_namedtuple(ordered_dict_0)
    object_0 = module_2.object()
    ordered_dict_3 = module_1.OrderedDict()
    var_17 = module_0.to_namedtuple(var_0)
    var_18 = module_0.to_namedtuple(var_16)
    var_19 = module_0.to_namedtuple(var_12)
    var_20 = module_0.to_namedtuple(var_7)
    var_21 = module_0.to_namedtuple(tuple_1)
    var_22 = module_0.to_namedtuple(var_19)
