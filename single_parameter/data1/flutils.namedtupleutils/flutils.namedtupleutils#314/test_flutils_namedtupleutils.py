# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 582.731
    module_0.to_namedtuple(float_0)


def test_case_1():
    int_0 = -264
    ordered_dict_0 = module_1.OrderedDict()
    float_0 = -1570.3672
    list_0 = [int_0, ordered_dict_0, float_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "latin1"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "latin1"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)


def test_case_8():
    bytes_0 = b"\x8a\xbd8gxw{\xeaI8[\xf9\xd3\x9d\x92\xd6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    bytes_0 = b"`\t<\xc6b\xde^\x10e\xee\xa0\xb8\x1b[\x8aU%"
    module_0.to_namedtuple(bytes_0)


def test_case_10():
    str_0 = "-\nj+}p)u6O86=fBg\rR"
    str_1 = "latin1"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = "-\nj3}p)u6O86GB)\rR"
    str_1 = "\nlin1"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)
