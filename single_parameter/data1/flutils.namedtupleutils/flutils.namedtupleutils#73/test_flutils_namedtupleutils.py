# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 1256.052413
    module_0.to_namedtuple(float_0)


def test_case_1():
    bytes_0 = b"\x0c\xc8\xe3\xbfa.\xe5X\x82@h\xd7\xe0\x8bX\xfc\x99"
    int_0 = 2466
    set_0 = set()
    tuple_0 = (bytes_0, int_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "Jfh"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "Jfh"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "Yq?\tpeI!c"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bool_0 = True
    float_0 = 817.29
    float_1 = 2147.0
    dict_0 = {bool_0: float_0, bool_0: float_1, bool_0: float_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\xfd\xc2"
    tuple_0 = (bytes_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = "\tfG"
    none_type_0 = None
    str_1 = "The name of the cherry-picked module attribute; can be an empty str."
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    list_1 = [ordered_dict_0, var_2, var_2]
    var_3 = module_0.to_namedtuple(list_1)
    module_1.namedtuple(list_1, str_0, defaults=var_0)
