# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (var_0, var_1, var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_1)
    set_0 = {var_1, var_4}
    tuple_1 = (set_0, var_4)
    var_6 = module_0.to_namedtuple(tuple_1)
    int_0 = 6
    module_1.namedtuple(var_6, var_0, rename=int_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "mw0&M"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "f"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    module_1.namedtuple(ordered_dict_0, ordered_dict_0, defaults=ordered_dict_0)


def test_case_7():
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = [list_0, list_0, list_0]
    var_2 = module_0.to_namedtuple(list_1)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_8():
    dict_0 = {}
    str_0 = "N\tW)\\@m;"
    tuple_0 = (dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_9():
    str_0 = "The path to the directory that contains the project's ``setup.py``\n    file.\n    "
    bool_0 = True
    str_1 = "attr_map"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    set_0 = {bool_0, bool_0, str_1}
    tuple_0 = (ordered_dict_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_1 = module_1.OrderedDict()
    none_type_0 = None
    module_1.namedtuple(ordered_dict_1, none_type_0, rename=ordered_dict_1)


def test_case_10():
    float_0 = 619.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_11():
    bytes_0 = b"\xf9p'sJ"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0, bytes_0)
    bool_1 = True
    bool_2 = False
    str_0 = "q<h!JgdE/d"
    tuple_1 = (tuple_0, bool_1, bool_2, str_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "SC\r"
    str_1 = "Only the 'minor' or 'patch' parts of the version number can get a prerelease bump."
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    module_0.to_namedtuple(object_0)
