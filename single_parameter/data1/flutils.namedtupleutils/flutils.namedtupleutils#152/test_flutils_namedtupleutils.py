# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    float_0 = -1183.0
    str_0 = "i\r[s+E|qF\tK7<"
    tuple_0 = (float_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    str_0 = "{R3v8s{[yx?"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x07+\xa2IYj\x85{\x18\x86B5\xb0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    complex_0 = 6222.157313 - 2482.02754j
    list_0 = [complex_0]
    str_0 = "{R3v8s{[yx?"
    dict_0 = {complex_0: list_0, complex_0: str_0, str_0: complex_0, str_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(complex_0)


def test_case_7():
    str_0 = "{R3v8s{[yx?"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "_@1 -~}NM\x0b'\n}F_`5"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "ZI%\n_L2"
    bytes_0 = b"\xf7\xba\x8e4\xf45[\x05\xba5\t"
    dict_0 = {str_0: str_0, str_0: str_0, bytes_0: str_0, bytes_0: str_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "commands"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = " commands"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    float_0 = 1264.353738
    tuple_0 = (dict_0, float_0, str_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_2.object(*var_0)
