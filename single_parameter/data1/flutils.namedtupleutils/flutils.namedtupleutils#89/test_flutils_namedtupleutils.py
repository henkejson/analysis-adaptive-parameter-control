# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bytes_0 = b";(\x99s\xa8\xb5d9W\\Pz\xd1\x01*\x0f\x033\xee\x92"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "b"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    tuple_0 = ()
    dict_0 = {bool_0: tuple_0, bool_0: bool_0}
    tuple_1 = (bool_0, bool_0, tuple_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    list_0 = []
    str_0 = "jpkM6Brj"
    dict_0 = {
        str_0: list_0,
        str_0: str_0,
        str_0: list_0,
        str_0: str_0,
        str_0: list_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    list_0 = []
    str_0 = "jpkM6Brj"
    str_1 = "U~<'VEh.}=AN`CL\\Q"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: str_0, str_1: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    list_0 = []
    str_0 = "jpkM6j"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: str_0, str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "QdzmF\r"
    dict_0 = {str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = ()
    var_3 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, var_3: var_3, bool_0: bool_0, tuple_0: bool_0}
    tuple_1 = (bool_0, var_2, dict_1)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(dict_0)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(dict_1)
    var_9 = module_0.to_namedtuple(var_4)
    var_10 = module_0.to_namedtuple(tuple_0)
    var_11 = module_0.to_namedtuple(var_6)
    var_12 = module_0.to_namedtuple(var_11)
    var_13 = module_0.to_namedtuple(dict_1)
    set_0 = {var_7, var_12, var_12}
    module_0.to_namedtuple(set_0)
