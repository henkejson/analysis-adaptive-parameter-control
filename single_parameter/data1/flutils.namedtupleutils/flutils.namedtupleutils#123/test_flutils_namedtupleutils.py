# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    object_0 = module_1.object()
    set_0 = {object_0, object_0, object_0, object_0}
    dict_0 = {object_0: set_0, object_0: object_0}
    dict_1 = {object_0: object_0, object_0: dict_0}
    tuple_0 = (set_0, dict_1, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "bash"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    tuple_0 = ()
    set_0 = {tuple_0}
    tuple_1 = (set_0,)
    str_0 = "o}4[o){OV0\t"
    tuple_2 = (tuple_1, str_0)
    var_0 = module_0.to_namedtuple(tuple_2)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bytes_0 = b"\xb0{z\x10\x85\x08\xb02\xff\xa9"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bool_0: bool_0}
    list_0 = [dict_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "Nax?zPf"
    list_0 = [str_0]
    bytes_0 = b"\xbe"
    bool_0 = True
    int_0 = 824
    tuple_0 = (bytes_0, bool_0, int_0, int_0)
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0, tuple_0: list_0}
    tuple_1 = (str_0, str_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    str_0 = "DUcyr"
    bytes_0 = b""
    bool_0 = True
    tuple_0 = (bytes_0, bool_0, bool_0, bool_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, tuple_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    float_0 = -2603.0
    tuple_0 = (float_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "\nUc"
    list_0 = []
    bytes_0 = b""
    bool_0 = True
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 817
    tuple_1 = (bytes_0, bool_0, int_0, int_0)
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0, tuple_1: list_0}
    ordered_dict_0 = module_2.OrderedDict()
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_6)
