# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    complex_0 = 1310.73774 - 1197j
    tuple_0 = (complex_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "R"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "path_absent"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    tuple_1 = (bool_0, tuple_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_8():
    bytes_0 = b"\x1dinC0\x85"
    str_0 = "ky"
    dict_0 = {bytes_0: str_0}
    list_0 = [dict_0, bytes_0, str_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    list_0 = []
    str_0 = ">5]Zi8/\\"
    str_1 = 'wp@ZW1,40"sC'
    dict_0 = {str_0: list_0, str_1: str_1, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    str_0 = "x\t"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (var_0,)
    list_0 = [var_0, bool_0, tuple_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    list_1 = [bool_0, dict_1, var_2]
    var_3 = module_0.to_namedtuple(list_1)
    bytes_0 = b"\x81\xde\x93\x1e5\xe9\x86"
    var_4 = module_0.to_namedtuple(var_3)
    ordered_dict_1 = module_1.OrderedDict()
    module_0.to_namedtuple(bytes_0)
