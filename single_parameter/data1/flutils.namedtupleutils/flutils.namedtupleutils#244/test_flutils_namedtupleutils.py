# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    set_0 = set()
    tuple_0 = (set_0, set_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "b"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"\xfb\t\xac\xc3Q;\x1f7$\xaa\xac"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [bytes_0, list_0, bytes_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_7():
    str_0 = "test_suite"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_1)


def test_case_9():
    str_0 = "test_suite"
    str_1 = "setup.commanvd."
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_1)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(var_1)
    var_9 = module_0.to_namedtuple(var_4)
    var_10 = module_0.to_namedtuple(var_0)
    str_0 = "{<czeCPp."
    tuple_0 = (str_0, var_6)
    var_11 = module_0.to_namedtuple(var_5)
    var_12 = module_0.to_namedtuple(tuple_0)
    list_0 = [var_10, var_4]
    var_13 = module_0.to_namedtuple(list_0)
    var_14 = module_0.to_namedtuple(var_3)
    var_15 = module_0.to_namedtuple(var_14)
    var_16 = module_0.to_namedtuple(var_2)
    var_17 = module_0.to_namedtuple(dict_0)
    var_18 = module_0.to_namedtuple(var_17)
    var_19 = module_0.to_namedtuple(var_4)
    dict_1 = {var_5: ordered_dict_0, var_5: var_5}
    var_20 = module_0.to_namedtuple(dict_1)
    var_21 = module_0.to_namedtuple(var_4)
    var_22 = module_0.to_namedtuple(var_16)


def test_case_11():
    bytes_0 = b"\xf4i\x11\x9a#\x91\xebh%\xa3@\r\x84\xa7"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "\x0ces5_Luitp"
    str_1 = "setu.commaJnd."
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 3014
    module_0.to_namedtuple(int_0)
