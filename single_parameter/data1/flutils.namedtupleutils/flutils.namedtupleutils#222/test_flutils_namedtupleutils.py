# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -2739
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = 1920 - 1553.004089j
    str_0 = "t4j#!0$Ii^dP"
    list_0 = [complex_0, str_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "%s"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "c"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "g%"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 5
    list_1 = [var_0, var_0, int_0]
    dict_1 = {int_0: int_0}
    var_1 = module_0.to_namedtuple(list_1)
    tuple_0 = (var_1, int_0, list_1, dict_1)
    list_2 = [int_0, tuple_0]
    tuple_1 = (list_2, int_0, list_1)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xc9\xeaDX.D\x12\xd0\xbb\x9d\xaa"
    dict_0 = {bytes_0: bytes_0}
    list_1 = [dict_0, bytes_0, dict_0]
    module_0.to_namedtuple(list_1)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "c_ "
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    int_0 = 425
    bytes_0 = b"\xce\xfe"
    list_0 = [ordered_dict_0, var_0, int_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)
