# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 1818.081268
    module_0.to_namedtuple(float_0)


def test_case_1():
    str_0 = "J2lC"
    bool_0 = False
    dict_0 = {bool_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    int_0 = 945
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"?b\x87:\xe1S!\xab\xa2d\x0e,\x1a"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    int_0 = -4170
    str_0 = "yVSHP~)k[9"
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, str_0: str_0}
    list_0 = [str_0, str_0, int_0]
    list_1 = [list_0, list_0, str_0]
    bytes_0 = b"\xf9"
    float_0 = 1576.415
    tuple_0 = (bytes_0, dict_0, float_0)
    tuple_1 = (int_0, dict_0, list_1, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_8():
    int_0 = 945
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    str_0 = "X1Jl'sVFs.YyB2*l"
    dict_0 = {tuple_0: tuple_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    str_0 = "X1Jl'sVFs.YyB2*l"
    dict_0 = {tuple_0: tuple_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"G\x17\x05D\xadK\xeeB8\x8a\xabG"
    dict_0 = {bytes_0: bool_0, bytes_0: bool_0}
    tuple_0 = (bytes_0, bool_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    bool_0 = False
    bytes_0 = b"x\x00\x88\xcf\x17\x94\xe16\xd9\x80"
    str_0 = "\x0cl\x0b"
    tuple_0 = (bool_0, bytes_0, str_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_1 = True
    list_0 = [bool_1, bool_1]
    list_1 = [list_0, str_0]
    dict_0 = {var_0: list_1, str_0: var_0}
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)
