# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bytes_0 = b"\xc9"
    bool_0 = True
    tuple_0 = (bytes_0, bytes_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bytes_1 = b"V\xa6^a\x84_\xc9\xe2\x15\x87N\x1e>\x8d"
    module_0.to_namedtuple(bytes_1)


def test_case_2():
    str_0 = "AsiTextWrappe"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xed\x8b\xb5\xf6\xe8"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bytes_0 = b"\xe1\x1a\x8f\xe6\xc96i\x81\x8f\xe7\xd8\x99\xc8"
    float_0 = -1187.2537
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, float_0: float_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "__builtins__"
    str_1 = "AsiTextWrappe"
    dict_0 = {
        str_1: str_1,
        str_0: str_1,
        str_0: str_0,
        str_0: str_0,
        str_0: str_1,
        str_1: str_1,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    str_0 = "AsiTextWrappe"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [list_0]
    ordered_dict_0 = module_1.OrderedDict(*list_1)
    list_2 = [ordered_dict_0, ordered_dict_0]
    str_0 = "__builtins__"
    tuple_0 = (list_2, str_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    str_1 = "\nsiTextWrappe"
    str_2 = ".7HwSk1N /,JZr"
    dict_0 = {
        str_1: str_1,
        str_0: str_1,
        str_0: str_0,
        str_0: str_0,
        str_0: str_1,
        str_2: str_1,
    }
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    list_3 = [ordered_dict_1, str_1, ordered_dict_1]
    bytes_0 = b"\xd4"
    tuple_1 = (list_3, list_3, bytes_0)
    var_2 = module_0.to_namedtuple(list_3)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(str_1)
