# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bytes_0 = b"^\x043\x046\x94Y\xf7o|\xc4\x9d"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [bytes_0, set_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "bash"
    complex_0 = 1242 - 64.135j
    dict_0 = {str_0: str_0, str_0: str_0, str_0: complex_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "pu.EZ~ {D/"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"^\x043\x046\x94Y\xf7o|\xc4\x9d"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.to_namedtuple(set_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"`]\xeb\xd4\x96\xf7$\x07\x19"
    int_0 = 6
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, int_0: int_0, bytes_0: bytes_0}
    list_0 = [dict_0, int_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "bash"
    str_1 = "v:on5~K{=}v\\"
    complex_0 = 1242 - 64.135j
    dict_0 = {str_0: str_0, str_1: str_0, str_0: complex_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "bash"
    complex_0 = 1242 - 64.135j
    dict_0 = {str_0: str_0, str_0: str_0, str_0: complex_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "T "
    none_type_0 = None
    str_1 = "path_absent"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    bool_0 = False
    dict_1 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        str_1: bool_0,
        bool_0: bool_0,
    }
    list_0 = [dict_1]
    var_0 = module_0.to_namedtuple(dict_1)
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(list_0)
    none_type_1 = None
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(none_type_1)
