# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    complex_0 = -1342.08 - 151.18j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    str_0 = "n\\VJqhX;')!\x0bh=S"
    set_0 = {str_0, str_0, str_0, str_0}
    list_0 = [set_0, set_0, set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "gYt"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x88\xff\xf0\xdbTLG\xc0\xd8a\xbb\x93\xb3\x9f<\xc8\xac\xe4"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "gYt"
    int_0 = -3761
    dict_0 = {str_0: str_0, str_0: str_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "TP%P.}1 *z8hV\rG"
    int_0 = 1
    dict_0 = {str_0: str_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    tuple_0 = (bool_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"\r[<\xf3!"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_1 = (dict_0,)
    module_0.to_namedtuple(tuple_1)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "\x0cYm"
    int_0 = -3760
    dict_0 = {str_0: str_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_2.object(**dict_0)
