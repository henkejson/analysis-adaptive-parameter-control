# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = '"?[\n(pS\\xtv'
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "vVdNm"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    complex_0 = -540.78 - 3415.5142j
    dict_0 = {complex_0: complex_0}
    list_0 = [dict_0, complex_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    none_type_0 = None
    str_0 = "vVdNm"
    dict_0 = {
        str_0: none_type_0,
        none_type_0: none_type_0,
        str_0: none_type_0,
        none_type_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    none_type_0 = None
    str_0 = "K;"
    dict_0 = {
        none_type_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"\x86\xf2\t\xae\x1c\xc3\x07\x8d\x0f\xd2Y\x15/l9b\xd9\xcbY\x12"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    none_type_0 = None
    str_0 = "vVdNm\x0b\x0c"
    dict_0 = {
        str_0: none_type_0,
        none_type_0: none_type_0,
        str_0: none_type_0,
        none_type_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
