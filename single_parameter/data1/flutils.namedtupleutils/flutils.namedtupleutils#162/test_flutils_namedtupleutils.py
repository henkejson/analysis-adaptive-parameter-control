# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 506.83 + 245.494603j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 2851
    bytes_0 = b"\r\x1eY"
    list_1 = [int_0, int_0, int_0, bytes_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_2():
    str_0 = "initia_indent_len"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xce\xe9Dr\x0c\xef\x8a\xfa"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = 1334.3
    bytes_0 = b"\xcdmt\x8b\x8b\x16V\xfa\x8f\x19"
    dict_0 = {float_0: float_0, float_0: float_0, bytes_0: float_0, float_0: float_0}
    module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    complex_0 = 506.83 + 245.494603j
    tuple_0 = (complex_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_1 = (var_0, var_1)
    dict_0 = {tuple_1: var_0}
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    str_0 = " Jq%|A7(Zw]>1MaG\tYA "
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(tuple_0)
    var_6 = module_0.to_namedtuple(var_5)
    dict_1 = {str_0: dict_0, tuple_0: str_0}
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(var_7)
    int_0 = -183
    module_0.to_namedtuple(int_0)


def test_case_10():
    str_0 = "OKctg\x0b"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)
