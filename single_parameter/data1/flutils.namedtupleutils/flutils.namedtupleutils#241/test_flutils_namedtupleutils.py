# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1171
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -894
    list_0 = [int_0, int_0, int_0]
    bool_0 = True
    set_0 = set()
    tuple_0 = (int_0, list_0, bool_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x8d\xbc.5\xa6\xbagf\x04p\xa9\t\xba\xfe\xaaW\xd0f"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"\x9a\xd8[\xd7\x9d)2A\xe2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "coman8s"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_0, var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    float_0 = -1771.4
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bytes_0 = b"R{\t\xce/\x0fm\xd5_\xdd\xbaR\xbbl\x0ec"
    set_0 = set()
    tuple_0 = (dict_0, bytes_0, set_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(float_0)


def test_case_11():
    str_0 = "c@cNR!tXt"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(ordered_dict_1)
    dict_1 = {}
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    bool_0 = False
    list_0 = [ordered_dict_0, ordered_dict_0, bool_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    str_0 = "commpand\n"
    dict_0 = {str_0: str_0, var_1: str_0}
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    ordered_dict_2 = module_1.OrderedDict(**dict_0)
    var_6 = module_0.to_namedtuple(ordered_dict_2)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(ordered_dict_1, var_6, rename=var_4, module=str_0)
