# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0, list_0, bool_0]
    var_1 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "X"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xeb"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, bool_0, bool_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_1.object(**dict_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"\xe6U\xb4\x99\x1e\xd6\xf5\x96e2\xcf\x98"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = ""
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0]
    dict_0 = {str_0: str_0}
    tuple_0 = (list_1, dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_9():
    bytes_0 = b"\x8b\xfc\xc3\x89]\x038\xe7\xc2\x0bs?\xf9\x10|\xe5\xca\xd4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "X"
    list_0 = [str_0, str_0]
    dict_0 = {str_0: str_0}
    tuple_0 = (list_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    bytes_0 = b"\xe6U\xb4\x99\x1e\xd6\xf5\x96e2\xcf\x98"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    dict_0 = module_0.to_namedtuple(list_0)
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"\xe6U\xb4\x99\x1e\xd6\xf5\x96e2\xcf\x98"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = ""
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0, var_0]
    dict_0 = {str_0: str_0}
    tuple_0 = (list_1, dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_13():
    bytes_0 = b"\xe6U\xb4\xfeE\x99\x1e\xd6\xf5\x96e\xd4\xcf\x98"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "n\r"
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0, var_0]
    dict_0 = {str_0: str_0}
    tuple_0 = (list_1, dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_2.OrderedDict(**var_1)
