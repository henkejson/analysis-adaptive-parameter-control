# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = -1219
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_2():
    int_0 = 370
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "f"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [ordered_dict_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"{g\xbc.M\xe3\xe7>\xa9\xd4"
    bytes_1 = b"\xa5O\x06\x88B"
    str_0 = "\t${eT3E1"
    dict_0 = {str_0: bytes_0, bytes_1: str_0}
    tuple_0 = (bytes_0, bytes_1, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    list_0 = []
    str_0 = "q{\rhZWY'gul"
    str_1 = "36}Bnl5rNy\x0cq&"
    str_2 = "?*)cTM"
    dict_0 = {str_1: str_1, str_0: list_0, str_2: str_2, str_0: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    str_3 = "sQ\n"
    object_0 = module_2.object()
    dict_1 = {str_0: ordered_dict_0, str_3: object_0, str_3: str_1, str_0: list_0}
    ordered_dict_1 = module_1.OrderedDict(*list_0, **dict_1)
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 370
    module_0.to_namedtuple(int_0)
