# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 2133
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "oSnuw"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'Kv"m#]!W6?H'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    int_0 = 3546
    module_0.to_namedtuple(int_0)


def test_case_7():
    bytes_0 = b"\xa3'\xed\x13ER\xb8\xc16\x0e"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    int_0 = -1943
    module_0.to_namedtuple(int_0)


def test_case_10():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\x99\x10\xb4p\xbc#\x18\x96\x8d\xff\xacY\x1d\xaeG\x8b"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    str_0 = "vDpbE>WDCN(Xa"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_1 = (tuple_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    str_0 = "tp\r"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_1,)
    list_0 = [tuple_0, tuple_0, dict_1, dict_1]
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(tuple_0)
    list_1 = [tuple_0]
    list_2 = [list_1, dict_1, list_0, var_4]
    tuple_1 = (var_0, list_2)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(list_1)
    var_8 = module_1.OrderedDict()
    int_0 = 3541
    module_0.to_namedtuple(int_0)
