# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_1():
    int_0 = 2602
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    list_0 = []
    str_0 = "beta"
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"p="
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b"Wk\x04\x02L\xea"
    bool_0 = False
    dict_0 = {bool_0: bytes_0, bool_0: bytes_0}
    list_0 = [bytes_0, dict_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "/."
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "bta"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"Wk\x04\x02L\xea"
    str_0 = "b/zK`}"
    bool_0 = False
    dict_0 = {bool_0: str_0, bool_0: bytes_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    bytes_0 = b"Wk\x04\x021\xea"
    str_0 = "b/zK`}"
    bool_0 = False
    dict_0 = {bytes_0: bool_0}
    tuple_0 = (bytes_0, str_0, bool_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    bytes_0 = b"Wk\x04\x021\xea"
    str_0 = "b/zK`}"
    bool_0 = False
    list_0 = []
    dict_0 = {str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (bytes_0, str_0, bool_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)


def test_case_14():
    str_0 = "b/zK`}"
    bool_0 = False
    list_0 = []
    str_1 = " b"
    dict_0 = {str_1: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {bool_0: str_0, bool_0: str_1}
    tuple_0 = (var_0, str_0, bool_0, dict_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_1.OrderedDict(**var_1)
