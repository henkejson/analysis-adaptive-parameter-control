# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -651
    module_0.to_namedtuple(int_0)


def test_case_1():
    none_type_0 = None
    str_0 = "f"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "~="
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    complex_0 = -203.6 - 2348.46j
    float_0 = 56.212579
    dict_0 = {complex_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = ";\")'iR1$56Y:JLw"
    var_1 = module_0.to_namedtuple(list_0)
    dict_0 = {}
    list_1 = [str_0, dict_0, str_0]
    var_2 = module_0.to_namedtuple(list_1)


def test_case_8():
    none_type_0 = None
    str_0 = "f"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "@a}"
    str_1 = 'vbd"ld]3;n'
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\xf4\xf5\x10&.p\xd7\x83"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = 305
    str_0 = "Y}8VT\tx$t!o;J["
    none_type_0 = None
    str_1 = "e6It\r"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    dict_1 = {}
    list_0 = [none_type_0, dict_0, dict_1]
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (int_0, ordered_dict_0, str_0, dict_0)
    list_1 = [tuple_0, dict_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(none_type_0)
