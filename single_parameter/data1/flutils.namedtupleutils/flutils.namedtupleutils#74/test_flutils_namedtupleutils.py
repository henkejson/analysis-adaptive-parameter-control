# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -66
    list_0 = [int_0]
    bool_0 = False
    bool_1 = False
    tuple_0 = (int_0, list_0, bool_0, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "doc"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "doc"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    tuple_0 = (ordered_dict_0, bool_0, ordered_dict_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(var_3, var_3, rename=var_3)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bool_0 = False
    int_0 = -3906
    dict_0 = {bool_0: int_0}
    list_0 = [dict_0, bool_0]
    tuple_0 = (dict_0, list_0, dict_0, bool_0)
    dict_1 = {bool_0: bool_0, bool_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_1)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_10():
    str_0 = "6\r"
    dict_0 = {str_0: str_0, str_0: str_0}
    object_0 = module_2.object()
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.OrderedDict(*var_0, **var_0)


def test_case_11():
    bool_0 = True
    tuple_0 = (bool_0,)
    bytes_0 = b"\x8e\x85\xe0\xeb\xd7\x01"
    tuple_1 = (bool_0, bool_0, bool_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_1, bytes_0: bool_0}
    list_0 = [dict_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "W=G"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (var_1, dict_0, var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    str_1 = "\x0cdc"
    dict_1 = {str_1: str_1, str_1: str_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    object_0 = module_2.object()
    list_0 = [ordered_dict_1, str_1, ordered_dict_1, object_0]
    bool_0 = False
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(ordered_dict_1)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(var_3)
    var_10 = module_0.to_namedtuple(var_6)
    module_0.to_namedtuple(bool_0)
