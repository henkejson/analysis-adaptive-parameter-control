# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = -2158.767638 - 3828.9425j
    list_0 = [complex_0]
    bytes_0 = b"\xfe/4\x84"
    list_1 = [list_0, list_0, list_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    float_0 = -3430.57
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "\n"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "D"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "D"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"v\xd0\xe4\xb7\xda~h\xb5\xbb\xc6@\x0eV\xb5\xcf\x87*EZT"
    bool_0 = False
    dict_0 = {bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\tq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)
