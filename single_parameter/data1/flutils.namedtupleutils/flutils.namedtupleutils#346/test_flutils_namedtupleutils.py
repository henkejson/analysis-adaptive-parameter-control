# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    set_0 = set()
    tuple_0 = (set_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\xd8<ti\x06[!\x9bQ\xb4~\x92r\xa3\x13"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bytes_0 = b"\x95\xd7}\xe8\x86\xdcT\t&\xa9)\x0e\xee\xfe\x91\xc9\xb9\x04\r\xa9"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_6():
    str_0 = "L"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_1 = (bool_0, bool_1, tuple_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bool_2 = False
    bool_3 = False
    dict_0 = {bool_2: bool_2, bool_2: bool_2, bool_2: bool_3, bool_3: bool_3}
    tuple_2 = (bool_2, bool_2, dict_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_2)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    bytes_0 = b"\x1e\xed\xab\xee[\x8b\xda\xf8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -1930
    tuple_0 = (bytes_0, dict_0, int_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\x06\x17gp\x8f\xb1\x0419"
    tuple_0 = (bytes_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    tuple_1 = (ordered_dict_0, var_0, var_0, ordered_dict_0)
    var_3 = module_0.to_namedtuple(tuple_1)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(var_4)
    ordered_dict_1 = module_1.OrderedDict()
    var_7 = module_0.to_namedtuple(var_4)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(tuple_1)
    tuple_2 = (var_7, ordered_dict_1)
    var_10 = module_0.to_namedtuple(var_9)
    var_11 = module_0.to_namedtuple(tuple_2)
    str_0 = "x \t"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_12 = module_0.to_namedtuple(var_5)
    var_13 = module_0.to_namedtuple(var_12)
    var_14 = module_0.to_namedtuple(dict_0)
    var_15 = module_0.to_namedtuple(dict_0)
    var_16 = module_0.to_namedtuple(dict_0)
    var_17 = module_0.to_namedtuple(var_14)
    var_18 = module_0.to_namedtuple(ordered_dict_0)
    var_19 = module_0.to_namedtuple(var_16)
    var_20 = module_0.to_namedtuple(var_7)
    bool_0 = True
    float_0 = 236.26259
    list_0 = [bool_0, float_0]
    var_21 = module_0.to_namedtuple(list_0)
    var_22 = module_0.to_namedtuple(var_9)
