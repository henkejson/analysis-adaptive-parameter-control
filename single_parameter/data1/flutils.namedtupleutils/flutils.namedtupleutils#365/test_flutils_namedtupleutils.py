# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "get_os_group"
    int_0 = 4397
    dict_0 = {str_0: int_0, int_0: str_0, str_0: int_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = "get_os_groupI"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b" \xcez\xcd}\xc5\xf6\xb2"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "TR0\\+_'"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, var_0, module=var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    list_0 = []
    int_0 = 962
    complex_0 = -502.87873 + 1084.53j
    tuple_0 = (int_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    bool_1 = False
    int_0 = -61
    tuple_1 = (var_1, var_1, int_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    tuple_2 = (bool_1,)
    bytes_0 = b'\xe0\xf1\xb2(\xc6"\xbaT\xf3!\x1a\x1fF~'
    dict_1 = {int_0: bool_1, var_1: var_1, bytes_0: var_2, var_2: var_1}
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(dict_0)
    var_7 = module_0.to_namedtuple(tuple_2)
    module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "get_os_groupI"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = " VFpt"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 4397
    bool_0 = False
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {bool_0: int_0, int_0: bool_0, bool_0: int_0, bool_0: int_0}
    tuple_0 = (int_0, bool_0, int_0, dict_1)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(var_0, var_2)
