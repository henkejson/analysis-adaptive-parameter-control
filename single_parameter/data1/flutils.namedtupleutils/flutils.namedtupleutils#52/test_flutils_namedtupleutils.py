# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [set_0, set_0, set_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_2():
    str_0 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b'\xa0\x99*\x02D\x9e\x17"\x8a\xca\x04/h\xba\xc7T\xf2m\xb7'
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\t>*\r\x83\x99\x1d\nP\x19\xaeM\x87\xf9\x83'9Zo\xfe"
    float_0 = -2164.6
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: float_0}
    list_0 = [dict_0]
    module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    list_1 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    list_1 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_13():
    str_0 = "initialize_options"
    str_1 = "Y&ky>$d/'M'\tQBoKr!"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_14():
    float_0 = -1829.16986
    set_0 = {float_0, float_0, float_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = ""
    str_1 = "iX\n"
    str_2 = "Y&ky>$d/'M'\tQBoKr!"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"6"
    int_0 = 50855936
    float_1 = -238.0
    str_3 = "\x0bg;S?\x0cbI7luy`\nEBl]"
    tuple_0 = (bytes_0, int_0, var_1, str_3)
    var_2 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(set_0, int_0, rename=var_2, defaults=float_1)
