# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "M\x0c +Tb\n_fSMDyMl"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    str_0 = "__"
    tuple_0 = (list_0, list_0, str_0)
    list_1 = [tuple_0, ordered_dict_0, list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "CompletedProcess"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b"\xb3\xef\xe4tbB@#\xea\xac\xe3\x84*6\x1c\x01"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "-W5.?T\tdl(h`5(7"
    str_1 = "camel_to_underscore"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_11():
    bool_0 = False
    str_0 = "n2\x0b"
    tuple_0 = (bool_0, str_0)
    str_1 = "name=%r package=%r"
    dict_0 = {tuple_0: bool_0, str_0: str_0, str_1: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    bool_1 = True
    tuple_1 = (var_1, bool_1, var_1)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_2)
    module_1.namedtuple(dict_1, bool_0)
