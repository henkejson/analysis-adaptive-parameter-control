# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 3647
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    float_0 = 711.6
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = False
    tuple_0 = (float_0, dict_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"l\xc3\xe5Bi\xbd\xb2\xa7{\xa4\xeb\xf0q"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "S"
    bool_0 = False
    tuple_0 = (str_0, str_0, str_0, bool_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: bool_0, str_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(
        var_0, ordered_dict_0, rename=ordered_dict_0, module=ordered_dict_0
    )


def test_case_10():
    str_0 = "S"
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = ""
    bool_0 = False
    tuple_0 = (str_0, str_0, str_0, bool_0)
    dict_0 = {str_0: tuple_0, str_0: str_0, tuple_0: tuple_0, tuple_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    str_0 = " S"
    bool_0 = False
    tuple_0 = (list_0, str_0, str_0, bool_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {var_0: tuple_0, str_0: var_0}
    var_1 = module_0.to_namedtuple(dict_0)
    tuple_1 = (var_1,)
    var_2 = module_0.to_namedtuple(tuple_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(tuple_1)


def test_case_13():
    bytes_0 = b"$yYN\x10\xd3\x95t\xdbc\x11\xb6o\xd2~\x82\x89\xd3"
    tuple_0 = (bytes_0,)
    dict_0 = {bytes_0: tuple_0, tuple_0: tuple_0}
    int_0 = 2228
    tuple_1 = (bytes_0, tuple_0, dict_0, int_0)
    module_0.to_namedtuple(tuple_1)
