# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    bytes_0 = b"X\x18Ul\xaeU\xc5\xd0\x14\xc6\x9e]\x04"
    tuple_0 = (bool_0, bytes_0, bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_2():
    float_0 = 476.7
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "The name of the cherry-picked module attribute; can be an empty str."
    module_0.to_namedtuple(str_0)


def test_case_5():
    float_0 = 764.1916
    str_0 = "stderr"
    dict_0 = {str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_0 = [var_0, var_0, var_0, var_0]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_6():
    str_0 = "The name of the cherry-picked module attribute; can be an empty str."
    float_0 = -3377.547
    dict_0 = {str_0: float_0}
    list_0 = [str_0, str_0, dict_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    list_0 = []
    complex_0 = -1075.753 - 5208.378j
    tuple_0 = (list_0, list_0, complex_0)
    list_1 = [tuple_0, complex_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(list_1)
    list_2 = [list_1, var_1, var_1]
    var_2 = module_0.to_namedtuple(list_2)


def test_case_8():
    bytes_0 = b"\xd1Y\xa5\xb0\x03\x08\x8d\x7f\xde~\x0f\xe5\x88\x13\x93"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    float_0 = 764.1916
    dict_0 = {float_0: float_0}
    str_0 = "cipo\r"
    dict_1 = {str_0: dict_0}
    tuple_0 = (dict_0, dict_0, str_0, dict_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    module_2.object(**var_3)
