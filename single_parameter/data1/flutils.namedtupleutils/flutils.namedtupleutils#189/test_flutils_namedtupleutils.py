# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "qB@=D5ObA\n0?"
    int_0 = -390
    set_0 = {str_0}
    tuple_0 = (str_0, int_0, set_0)
    object_0 = module_1.object()
    list_0 = [tuple_0, object_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "encoding"
    bytes_0 = b"e\xe1,Bi\xf6\xc10;t\xc4*\xcf0l\x96"
    dict_0 = {str_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "subsequent_indent_len"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_4():
    bytes_0 = b"x\xe3\x85\xf5"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    str_0 = "q'kKP5Rwp"
    dict_0 = {bool_0: str_0, str_0: bool_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_9():
    str_0 = "\x0cZLj"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0, str_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    int_0 = 604
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(int_0)
