# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    bool_0 = False
    list_1 = [ordered_dict_0, bool_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "hm_6dIG2B"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    bytes_0 = b")\x16\x90l"
    tuple_0 = (bytes_0, bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    tuple_1 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "{prN\\,iB_(sIWM="
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, str_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bytes_0 = b"_\xafG\xb9CH\x19\x0f\xc3f\xb08\xce\x15fr"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "XI"
    none_type_0 = None
    str_1 = "K_uJ\r"
    str_2 = "@V)"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_0: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, str_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    str_3 = "hm_6dIG2B"
    bool_0 = False
    dict_1 = {tuple_1: tuple_1, str_3: bool_0}
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(str_3)
