# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 6
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    complex_0 = -1457.29554 + 1069.0354j
    module_0.to_namedtuple(complex_0)


def test_case_2():
    str_0 = "/)0/o8CR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"ZD\xc2"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    set_0 = set()
    bool_0 = False
    int_0 = 1387
    dict_0 = {int_0: int_0, int_0: int_0, bool_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "is_loaded"
    set_0 = set()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0, str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "e\x0b"
    tuple_0 = (str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    set_0 = set()
    bool_0 = False
    int_0 = 1419
    dict_0 = {int_0: int_0, int_0: int_0, str_0: set_0, bool_0: set_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    object_0 = module_2.object(*var_1)
    var_4 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(int_0)


def test_case_12():
    bytes_0 = b"\xc6\r~0\x9c\xb1\tn"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    set_0 = {bytes_0}
    float_0 = 2289.87476
    tuple_0 = (bytes_0, dict_0, set_0, float_0)
    module_0.to_namedtuple(tuple_0)
