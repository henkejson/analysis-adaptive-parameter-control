# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = -977
    module_0.to_namedtuple(int_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    bool_0 = False
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (ordered_dict_0, bool_0, ordered_dict_0)
    bytes_0 = b"d\xbfkd\x00h"
    tuple_1 = (tuple_0, tuple_0, bytes_0, bytes_0)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    list_0 = []
    str_0 = "patch"
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "Pk"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    str_0 = "patch"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: list_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "eBhbR{I<j"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_1 = module_1.OrderedDict()


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_2.object()
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_3)


def test_case_11():
    str_0 = "oC"
    complex_0 = 166.677548 + 172.71j
    str_1 = "JzE,g>frzx`$Y)"
    tuple_0 = (complex_0, str_1, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_0 = {str_0: var_1, str_0: var_1, str_1: var_0, tuple_0: str_0}
    var_2 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()


def test_case_12():
    str_0 = "\x0bb"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0,)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_1.OrderedDict(*var_4)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_2.object()


def test_case_13():
    bool_0 = False
    bytes_0 = b"\x1e9\xc2\xf9\xffK:pW\xd9\xcbn\xb7j\xff<\xc6?\xf6i"
    dict_0 = {bytes_0: bool_0}
    tuple_0 = (bool_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)
