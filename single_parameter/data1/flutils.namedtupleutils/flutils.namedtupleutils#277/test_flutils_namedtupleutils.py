# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -528
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 1024
    tuple_0 = (int_0, int_0)
    bool_0 = True
    str_0 = "commands"
    dict_0 = {str_0: tuple_0, str_0: bool_0, str_0: str_0}
    tuple_1 = (tuple_0, bool_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_1, bool_0: bool_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = " is not a proper bas64 character string: "
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = " "
    tuple_0 = (str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    int_0 = 1024
    tuple_0 = (int_0, int_0)
    bool_0 = True
    str_0 = "commands"
    str_1 = "pr Nu7W"
    dict_0 = {str_1: tuple_0, str_0: bool_0, str_0: str_0}
    tuple_1 = (tuple_0, bool_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\xb1e\x11o\xba\xd3\xd9\x1d5\xe5\x11\x94"
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, bool_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    int_0 = 1024
    tuple_0 = (int_0, int_0)
    bool_0 = False
    str_0 = "commands"
    str_1 = "O}?l^@PLet"
    str_2 = "do\x0c"
    dict_0 = {str_1: tuple_0, str_2: bool_0, str_2: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    int_1 = 8
    tuple_1 = (tuple_0, bool_0, ordered_dict_0, int_1)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_1.OrderedDict()
    list_0 = [var_1, var_1]
    ordered_dict_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xa8\x9aSAz\x1d\xb3\x11\x8c\xda\xf5\x80'\x83\x1dH\xdf"
    list_1 = [bytes_0, bytes_0]
    tuple_2 = (list_1,)
    var_3 = module_0.to_namedtuple(tuple_2)
    var_4 = module_0.to_namedtuple(list_1)
    module_1.namedtuple(var_3, var_1, defaults=dict_0, module=var_4)
