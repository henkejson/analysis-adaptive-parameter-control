# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    module_0.FloatArg(*timer_0)


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    user_dict_0 = module_1.UserDict()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    timer_2 = module_0.Timer(logger=var_0)
    timer_1.__enter__()


def test_case_6():
    float_0 = 858.9920485727317
    timer_0 = module_0.Timer(float_0)
    timer_1 = timer_0.__enter__()
    float_1 = timer_1.stop()
    float_arg_0 = module_0.FloatArg()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    user_dict_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_0 = user_dict_0.__contains__(user_dict_0)
    float_0 = timer_1.stop()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = timer_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    var_3 = var_1.__eq__(bool_0)
    var_3.copy()


def test_case_9():
    float_0 = 858.9920485727317
    timer_0 = module_0.Timer(float_0)
    bool_0 = False
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    none_type_0 = timer_1.__exit__(*var_0)
    timer_2 = module_0.Timer(initial_text=bool_0)
    none_type_1 = None
    timer_3 = module_0.Timer(none_type_1, initial_text=none_type_0)
    timer_error_0 = module_0.TimerError()
    timer_4 = module_0.Timer(text=timer_3, logger=timer_3)
    timer_5 = timer_4.__enter__()
    none_type_2 = timer_5.__exit__()
    timer_2.stop()


def test_case_10():
    float_0 = 859.0
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_0)
    timer_1 = timer_0.__enter__()
    bool_0 = True
    module_1.UserDict(bool_0)


def test_case_11():
    float_arg_0 = module_0.FloatArg()
    float_0 = 858.9920485727317
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    int_0 = -3041
    var_0 = timer_0.__eq__(int_0)
    var_1 = timer_0.__eq__(float_0)
    var_2 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_1 = timer_1.stop()
    list_0 = []
    timer_1.__exit__(*list_0)


def test_case_12():
    bool_0 = True
    timers_0 = module_2.Timers()
    var_0 = timers_0.values()
    timer_0 = module_0.Timer(bool_0, var_0, logger=var_0)
    var_1 = timer_0.__repr__()
    float_0 = 858.9920485727317
    str_0 = "&"
    timer_1 = module_0.Timer(float_0, initial_text=str_0, logger=str_0)
    timer_1.start()
