# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    list_0 = []
    timer_0.__exit__(*list_0)


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(bool_0, logger=bool_0)
    var_0 = timer_0.__eq__(bool_0)
    user_dict_0 = module_1.UserDict()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_0 = float_arg_0.__eq__(none_type_0)
    tuple_0 = (var_0, var_0, var_0, var_0)
    timer_0 = module_0.Timer(text=tuple_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    bool_0 = False
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(bool_0)
    var_1 = timer_0.__eq__(none_type_0)
    tuple_0 = (timer_0, var_1, var_1, timer_0)
    timer_2 = module_0.Timer(var_1, tuple_0, float_arg_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer()
    var_2 = timer_3.__repr__()
    none_type_1 = timer_1.__exit__(*var_2)
    timer_2.start()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    str_0 = "{Nff&H"
    timer_0 = module_0.Timer(str_0)
    timer_1 = module_0.Timer(initial_text=str_0)
    timer_1.__enter__()


def test_case_9():
    str_0 = "{Nff&H"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_0.stop()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=float_arg_0)
    timer_2 = timer_1.__enter__()
    var_1 = timer_2.__repr__()
    none_type_1 = timer_2.__exit__(*var_1)
    none_type_2 = timer_1.start()
    var_2 = var_1.__contains__(var_1)
    module_0.FloatArg(*var_2)


def test_case_11():
    str_0 = "R|?"
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__eq__(none_type_0)
    float_0 = timer_2.stop()
    tuple_0 = (timer_1, var_0, var_0, timer_1)
    timer_3 = module_0.Timer(text=tuple_0, initial_text=var_0, logger=none_type_0)
    timer_4 = timer_3.__enter__()
    none_type_1 = timer_3.__exit__()
    none_type_2 = timer_1.start()
    timer_error_0 = module_0.TimerError()
    var_0.__contains__(none_type_0)
