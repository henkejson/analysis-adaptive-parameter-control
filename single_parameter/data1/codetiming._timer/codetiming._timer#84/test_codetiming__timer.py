# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "&'q"
    timer_0 = module_0.Timer(text=str_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    str_0 = "ARsJ~WSt32R"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer()
    list_0 = [none_type_0, none_type_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_1 = timer_0.__enter__()
    exception_0 = module_1.Exception()
    none_type_1 = timer_0.__exit__()
    timer_error_1 = module_0.TimerError()
    exception_0.stop()


def test_case_5():
    str_0 = "ARsJ~WSt32R"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_6():
    str_0 = "ARsJ~WSt32R"
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    list_0 = []
    str_1 = ")uS0C&=@B`i0R&\r"
    float_0 = timer_1.stop()
    str_2 = "'Paj@;O_~63E+nK9*X"
    str_3 = ""
    dict_0 = {str_0: list_0, str_1: str_0, str_2: list_0, str_3: str_0}
    module_0.FloatArg(*list_0, **dict_0)


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = module_0.Timer(logger=none_type_0)
    var_0 = timer_1.__repr__()
    timer_2 = module_0.Timer(timer_0, timer_0, timer_0)
    timer_3 = timer_2.__enter__()
    timer_3.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_2.dataclass(repr=timer_1)
    none_type_1 = None
    timer_3 = module_0.Timer(none_type_1, timer_0, timer_0)
    timer_4 = timer_3.__enter__()
    list_0 = []
    float_0 = timer_4.stop()
    str_0 = "f"
    str_1 = ""
    dict_0 = {str_1: list_0, str_0: str_1, str_0: list_0, str_1: str_1}
    module_0.FloatArg(*list_0, **dict_0)
