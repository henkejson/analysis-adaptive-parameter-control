# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2
import collections as module_3


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    str_0 = "i\x0bsSAEt\x0bpJW"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    list_0 = []
    str_0 = "i\x0bsSAEt\x0bpJW"
    float_arg_0 = module_0.FloatArg(*list_0)
    var_0 = module_1.field(init=list_0)
    timer_0 = module_0.Timer(text=str_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    list_0 = [timer_0, timer_0]
    timer_error_0 = module_0.TimerError(*list_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0.__enter__()


def test_case_4():
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    float_0 = timer_1.stop()
    str_0.update(none_type_0, **str_0)


def test_case_5():
    str_0 = "i\x0bsSAEt\x0bpJW"
    var_0 = module_1.field(compare=str_0, metadata=str_0)
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    str_0 = "i\x0bsSAEt\x0bpJW"
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_3 = timer_2.__enter__()
    timers_0 = module_2.Timers()
    timers_0.__getitem__(timer_2)


def test_case_7():
    list_0 = []
    str_0 = "i\x0bsSAEt\x0bpJW"
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_0 = module_0.Timer(text=str_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_0.popitem()


def test_case_8():
    list_0 = []
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=list_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    user_dict_0 = module_3.UserDict()
    var_0 = user_dict_0.values()
    var_1 = var_0.__eq__(none_type_0)
    var_1.__ior__(var_0)


def test_case_9():
    list_0 = []
    str_0 = "i\x0bsSAEt\x0bpJW"
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, list_0, float_arg_0, str_0)
    timer_0.__enter__()


def test_case_10():
    list_0 = []
    str_0 = "i\x0bsSAEt\x0bpJW"
    float_arg_0 = module_1.dataclass(
        init=list_0, repr=list_0, eq=str_0, order=str_0, frozen=list_0, match_args=str_0
    )
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__(*list_0)
