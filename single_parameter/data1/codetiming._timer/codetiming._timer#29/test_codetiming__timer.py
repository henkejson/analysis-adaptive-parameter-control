# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(var_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(var_0)


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    bytes_0 = b"\xe3\x96\x14\xd2\xe8\xb9\x0f\x8f\xa3\xb6\x93\xfd\xf4Z\xc9\x8a\x14\xb3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    timer_0 = module_0.Timer(initial_text=dict_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=bool_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    bool_1 = True
    none_type_2 = None
    timer_1 = module_0.Timer(bool_1, none_type_2)
    none_type_3 = timer_1.start()
    timer_0.__enter__()


def test_case_7():
    str_0 = "fJ"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    float_0 = -131.487696
    list_0 = [float_0, float_0]
    timer_error_0 = module_0.TimerError(*list_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_0.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0, var_0, logger=timer_0)
    var_1 = timer_1.__call__(var_0)
    var_2 = var_1.__call__(var_1)


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    var_0 = timer_1.__call__(timer_0)
    var_1 = var_0.__call__(var_0)


def test_case_10():
    int_0 = 2
    list_0 = [int_0, int_0, int_0]
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=list_0)
    timer_2 = timer_0.__enter__()
    float_0 = timer_2.stop()
    var_0 = timer_0.__repr__()
    var_0.__copy__()


def test_case_11():
    complex_0 = -421.7 - 2983.446972j
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(complex_0, initial_text=complex_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_0.max(var_0)
