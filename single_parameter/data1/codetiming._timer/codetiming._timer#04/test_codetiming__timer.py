# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(list_0)
    var_1 = var_0.__eq__(list_0)


def test_case_3():
    int_0 = -1915
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_0.__exit__()


def test_case_4():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_0.__enter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0, var_0)
    timer_0.stop()


def test_case_7():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()


def test_case_8():
    list_0 = []
    str_0 = " does not support item assignment. Use '.add()' to update values."
    str_1 = "Tlp"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_1)
    none_type_0 = timer_0.start()
    none_type_1 = None
    var_0 = module_1.dataclass(init=none_type_1, frozen=list_0)
    var_1 = var_0.__repr__()
    var_1.__getitem__(timer_0)


def test_case_9():
    str_0 = "<2?"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_0.__exit__()
    module_1.dataclass(timer_2, init=none_type_1, eq=timer_0)


def test_case_10():
    str_0 = "<2?"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(str_0, str_0, timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_0.__exit__()
    module_1.dataclass(timer_2, init=none_type_1, eq=timer_0)


def test_case_11():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()
    var_0 = timer_2.__repr__()
    timer_3 = timer_1.__enter__()
    var_0.update(none_type_1)
