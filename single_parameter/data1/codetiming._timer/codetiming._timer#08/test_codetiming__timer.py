# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "\x0c_{{q3r-19^h~&mGYe"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    float_0 = timer_1.stop()
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0)
    timer_0.stop()


def test_case_4():
    object_0 = module_1.object()
    timer_0 = module_0.Timer(text=object_0, logger=object_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_6():
    str_0 = "7"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = module_0.Timer(text=str_0, initial_text=timer_0)
    none_type_0 = timer_1.start()
    float_0 = module_2.field(
        default_factory=timer_0, repr=str_0, compare=timer_0, metadata=str_0
    )
    timer_0.stop()


def test_case_7():
    str_0 = "|G"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.start()


def test_case_8():
    bool_0 = False
    str_0 = "|G"
    timer_0 = module_0.Timer(initial_text=str_0, logger=bool_0)
    none_type_0 = timer_0.start()
    list_0 = []
    none_type_1 = timer_0.__exit__(*list_0)
    float_arg_0 = module_0.FloatArg()
    none_type_2 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_0.__exit__()


def test_case_9():
    str_0 = "\x0c_{{q3r-19^h~&mGYeL"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    bool_0 = True
    timer_1 = module_0.Timer(text=str_0, initial_text=bool_0)
    var_0 = timer_1.__eq__(timer_1)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = None
    none_type_1.__len__()


def test_case_10():
    str_0 = "\x0c_{{q3r-19^h~&mGYe"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer(logger=timer_0)
    bool_0 = True
    timer_2 = module_0.Timer(str_0, str_0, bool_0)
    timer_3 = timer_0.__enter__()
    none_type_0 = timer_2.start()
    float_0 = timer_0.stop()
    none_type_1 = None
    var_0 = timer_2.__call__(none_type_1)
    var_0.pop(timer_3)
