# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_0.__exit__()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    bytes_0 = b"\x01\x08\x14\x18\xc3\xdf\xffG"
    var_0 = timer_0.__eq__(bytes_0)
    timer_0.__enter__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    bytes_0 = b"\x01\x08\x14\x18\xc3\xdf\xffG"
    var_0 = timer_0.__eq__(bytes_0)
    str_0 = "UuU`7ZP\\#"
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    timer_2 = timer_1.__enter__()
    str_1 = "_~liDk+6e,t>g "
    float_0 = timer_2.stop()
    var_1 = timer_2.__repr__()
    var_2 = module_1.dataclass(init=str_1, frozen=str_1, kw_only=str_1, slots=str_1)
    timer_error_0 = module_0.TimerError()
    var_1.clear()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_2 = timer_0.__enter__()
    timer_2.start()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__repr__()
    none_type_2 = timer_0.__exit__()
    timer_1 = module_0.Timer(initial_text=timer_error_0)


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_2.stop()


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.__call__(timer_0)
    str_0 = "UuU`7ZP\\#"
    timer_1 = module_0.Timer(str_0, none_type_0, str_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_2.stop()
