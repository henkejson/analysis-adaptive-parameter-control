# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "FA\tU|F)"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    str_1 = "Elapsed time: {:0.4f} seconds"
    float_0 = timer_1.stop()
    var_0 = timer_0.__eq__(str_1)
    timer_2 = timer_1.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_0.stop()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    str_0 = "F<| )"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__enter__()


def test_case_6():
    str_0 = "FA\tU|F)"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(str_0, initial_text=str_0, logger=none_type_0)
    none_type_1 = timer_1.start()
    bool_0 = True
    timer_2 = module_0.Timer(str_0, initial_text=bool_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_1.stop()
    var_0 = module_1.field(repr=timer_3, compare=timer_1)
    timer_1.stop()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_arg_0.clear()


def test_case_8():
    str_0 = "FA\tU|F)"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_2.__enter__()
