# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    module_0.FloatArg(*list_0)


def test_case_2():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    str_0 = "S>Wm5uEcH$6PF:k;)Z"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    var_0 = timer_2.__call__(timer_2)
    timer_3 = module_0.Timer()
    timer_2.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_0.__exit__()


def test_case_4():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    str_0 = "S>Wm5uEcH$6PF:k;)Z"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    timer_1.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    var_1 = timer_2.__eq__(timer_1)
    float_0 = timer_0.stop()


def test_case_6():
    list_0 = []
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = None
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__repr__()
    var_2 = module_1.field(hash=none_type_0, kw_only=none_type_0)
    timer_1 = module_0.Timer(logger=list_0)
    var_3 = var_2.__repr__()
    var_4 = var_3.__iter__()
    var_5 = var_4.__repr__()
    var_5.update()


def test_case_7():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = module_0.Timer(text=var_0, logger=var_0)
    var_1 = var_0.__eq__(var_0)
    timer_2 = timer_0.__enter__()
    none_type_0 = timer_2.__exit__()
    timer_3 = module_0.Timer(var_1, initial_text=timer_0)
    timer_error_1 = module_0.TimerError()
    var_2 = var_0.__repr__()
    none_type_1 = timer_3.start()
    none_type_2 = timer_3.__exit__()
    timer_0.__exit__()


def test_case_8():
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    str_0 = "S>Wm5uEcH$6PF:k;)Z"
    none_type_0 = None
    timer_0 = module_0.Timer(timer_error_0, initial_text=list_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=str_0)
    var_0 = timer_2.__call__(timer_1)
    var_0.popitem()


def test_case_9():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(timer_1)
    timer_2 = module_0.Timer(text=timer_1, logger=dict_0)
    var_1 = timer_2.__eq__(timer_2)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_3.__exit__()
    timer_error_1 = module_0.TimerError()
    var_2 = timer_0.__repr__()
    timer_1.start()


def test_case_10():
    dict_0 = {}
    timer_error_0 = module_1.field(default_factory=dict_0, repr=dict_0, compare=dict_0)
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = dict_0.__eq__(timer_1)
    timer_2 = module_0.Timer(text=timer_1, logger=timer_1)
    var_1 = timer_1.__eq__(timer_1)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_3.__exit__()
    timer_4 = module_0.Timer(var_1, initial_text=timer_0)
    timer_error_1 = module_0.TimerError()
    var_2 = timer_1.__repr__()
    timer_1.start()
