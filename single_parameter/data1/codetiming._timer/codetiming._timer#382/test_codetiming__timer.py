# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    none_type_1 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_1.__exit__()


def test_case_4():
    str_0 = "a,@?P(1jdHCyhed."
    bool_0 = True
    timer_0 = module_0.Timer(text=str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    var_0 = timer_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_1 = timer_2.__eq__(none_type_0)
    var_2 = timer_1.__repr__()
    str_1 = "C&p|o\r"
    str_1.stop()


def test_case_5():
    str_0 = ",@?P(1jdH<Shzd."
    bool_0 = True
    timer_0 = module_0.Timer(text=str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    str_1 = '(i\n%7&"EL;Xv'
    str_2 = "\rWp~v\r"
    float_0 = timer_0.stop()
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    timer_error_1 = module_0.TimerError()
    timer_error_2 = module_0.TimerError(*list_0)
    timer_error_3 = module_0.TimerError()
    timer_2 = module_0.Timer(str_1, initial_text=str_2)
    timer_3 = timer_2.__enter__()
    float_1 = timer_3.stop()
    var_0 = timer_2.__repr__()
    var_0.update(**float_1)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    str_0 = '(i\n%7&"EL;Xv'
    str_1 = "*QRYICK{30]p\tM__aBG."
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    float_arg_1 = module_0.FloatArg()
    timer_error_2 = module_0.TimerError(*str_0)
    none_type_0 = None
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_3 = timer_2.__enter__()
    float_1 = timer_3.stop()
    var_0 = timer_3.__repr__()
    float_arg_2 = module_0.FloatArg()
    var_1 = timer_1.__eq__(str_1)
    var_2 = timer_2.__repr__()
    var_3 = timer_1.__repr__()
    var_1.keys()


def test_case_7():
    str_0 = ",@?P(1jdH<Shzd."
    bool_0 = True
    timer_0 = module_0.Timer(text=str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    str_1 = '(i\n%7&"EL;Xv'
    float_0 = timer_0.stop()
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    timer_error_1 = module_0.TimerError()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    timer_error_2 = module_0.TimerError()
    timer_4 = module_0.Timer(str_1, initial_text=bool_0)
    timer_5 = timer_4.__enter__()
    var_0 = timer_3.__call__(timer_error_0)
    var_0.__len__()


def test_case_8():
    str_0 = ",@?P(1jdH<Shzd."
    bool_0 = True
    timer_0 = module_0.Timer(text=str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    timer_error_1 = module_0.TimerError()
    int_0 = 2213
    timer_2 = module_0.Timer(int_0, timer_1)
    timer_3 = timer_2.__enter__()
    var_0 = timer_2.__call__(timer_error_0)
    var_1 = timer_0.__call__(var_0)
    float_1 = timer_2.stop()
    var_2 = timer_3.__repr__()
    module_0.FloatArg(*list_0, **var_2)
