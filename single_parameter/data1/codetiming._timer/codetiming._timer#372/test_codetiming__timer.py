# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    list_0 = []
    timer_0.__exit__(*list_0)


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0, logger=none_type_0)
    timer_1 = module_0.Timer()
    var_0 = timer_1.__eq__(none_type_0)
    timer_2 = timer_0.__enter__()
    var_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    none_type_0 = timer_1.start()
    timer_1.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    timer_0.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    none_type_0 = timer_1.start()
    var_0 = timer_0.__repr__()


def test_case_8():
    timer_0 = module_0.Timer()
    int_0 = 469
    timer_1 = module_0.Timer(int_0, initial_text=timer_0, logger=int_0)
    timer_1.start()


def test_case_9():
    timer_0 = module_0.Timer()
    bool_0 = False
    timer_1 = module_0.Timer(logger=bool_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    timer_0.stop()


def test_case_10():
    str_0 = "y[F3Iw+2"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    int_0 = -649
    var_0 = timer_0.__call__(float_0)
    var_0.__getitem__(int_0)


def test_case_11():
    timer_0 = module_0.Timer()
    str_0 = "W>X):s!_\x0c"
    timer_1 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_1.start()
    timer_0.__exit__()
