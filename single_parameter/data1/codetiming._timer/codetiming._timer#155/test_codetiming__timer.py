# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    int_0 = 560
    timer_0 = module_0.Timer(initial_text=int_0)
    none_type_0 = timer_0.start()
    timer_0.items()


def test_case_2():
    int_0 = 560
    timer_0 = module_0.Timer(initial_text=int_0)
    none_type_0 = timer_0.__call__(timer_0)
    timer_0.__exit__()


def test_case_3():
    int_0 = 560
    timer_0 = module_0.Timer(initial_text=int_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__enter__()


def test_case_4():
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, str_0)
    timer_1 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_1.start()
    timer_0.__exit__(*none_type_1)


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timers_0 = module_1.Timers()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    int_0 = 560
    timer_0 = module_0.Timer(initial_text=int_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.items()


def test_case_8():
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__repr__()
    timer_1 = module_0.Timer()
    var_2 = timer_0.__call__(timer_0)
    timer_2 = timer_0.__enter__()
    var_3 = var_1.__eq__(timer_2)
    float_0 = timer_0.stop()
    var_4 = var_0.__iter__()
    var_1.values()


def test_case_9():
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, str_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    float_1 = -178.6074
    tuple_0 = (float_1,)
    var_0 = timer_1.__eq__(tuple_0)
    timers_0 = module_1.Timers()
    none_type_1 = timer_1.start()


def test_case_11():
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, str_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    var_1 = var_0.__len__()
    var_2 = timer_2.__eq__(var_1)
    var_0.total(var_2)


def test_case_12():
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, str_0)
    list_0 = [timer_0, timer_0, none_type_0]
    timer_error_0 = module_0.TimerError(*list_0)
    var_0 = timer_0.__eq__(list_0)
    timer_1 = module_0.Timer(var_0, timer_error_0, timer_error_0)
    timer_2 = timer_1.__enter__()
    timer_0.stop()
