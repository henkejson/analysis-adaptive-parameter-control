# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    bytes_0 = b"\xf77ieO\x87 \xb2\xb3*\x87\x93\x10\x91\x03 \x98OX\x88"
    list_0 = [bytes_0]
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=list_0)
    var_0 = timer_0.__eq__(float_arg_0)
    none_type_0 = timer_0.start()
    user_dict_0 = module_1.UserDict()
    var_1 = user_dict_0.__iter__()
    timer_error_0 = module_0.TimerError()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = None
    bool_0 = True
    timer_1 = module_0.Timer(none_type_0, timer_0, bool_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()


def test_case_5():
    str_0 = "nwW9Py{5"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_7():
    bytes_0 = b"`\x1f\xfe\x19"
    float_arg_0 = module_0.FloatArg()
    list_0 = [bytes_0]
    timer_0 = module_0.Timer(list_0, initial_text=list_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=list_0)
    none_type_1 = timer_1.start()
    timer_0.stop()


def test_case_8():
    list_0 = []
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(list_0)
    user_dict_0 = module_1.UserDict()
    var_0 = timer_0.__eq__(user_dict_0)
    none_type_1 = timer_1.__exit__()
    var_1 = user_dict_0.__copy__()
    var_2 = timer_0.__repr__()
    timer_2.add(timer_2, var_1)
