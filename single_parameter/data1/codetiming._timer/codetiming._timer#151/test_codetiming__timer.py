# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    str_0 = ">E-"
    timer_0 = module_0.Timer(text=str_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(logger=none_type_1)
    float_arg_0 = module_0.FloatArg()


def test_case_5():
    str_0 = "0JC"
    timer_0 = module_0.Timer(text=str_0)
    timer_0.__exit__()


def test_case_6():
    str_0 = "0JC"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__len__()
    float_0 = timer_0.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    str_0 = "^c(bNb{'-\x0c*r;3lkn"
    timer_1 = module_0.Timer(timer_0, initial_text=str_0)
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    none_type_0 = timer_0.start()
    timer_1.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, initial_text=timer_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(logger=none_type_2)
    float_arg_0 = module_0.FloatArg()
    timer_4 = timer_3.__call__(none_type_0)


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(logger=none_type_1)
    timer_2 = timer_1.__enter__()
    float_arg_0 = module_0.FloatArg()


def test_case_10():
    timer_0 = module_0.Timer()
    str_0 = "^c(bNb{'-\x0c*r;3lkn"
    timer_1 = module_0.Timer(str_0, initial_text=timer_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(logger=none_type_1)
    float_arg_0 = module_0.FloatArg()
    user_dict_0 = module_1.UserDict()
    user_dict_1 = module_1.UserDict()
    var_0 = user_dict_1.clear()
    var_1 = user_dict_1.__ror__(timer_2)
    timer_error_0 = module_0.TimerError()
    var_2 = user_dict_1.__copy__()
    var_3 = var_2.__ror__(none_type_0)
    timer_error_1 = module_0.TimerError()
    timer_2.__enter__()


def test_case_11():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    none_type_3 = timer_0.start()
    var_0 = timer_0.__eq__(none_type_0)
    module_0.FloatArg(**timer_2)


def test_case_12():
    timer_0 = module_0.Timer()
    str_0 = "^c(bNb{'-\x0c*r;3lkn"
    timer_1 = module_2.field(
        default_factory=str_0, init=timer_0, hash=timer_0, compare=str_0
    )
    dict_0 = timer_1.__repr__()
    timer_2 = module_0.Timer(dict_0, initial_text=timer_0)
    none_type_0 = timer_2.start()
    float_0 = timer_2.stop()
    timer_2.__exit__()


def test_case_13():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(none_type_1, timer_1)
    module_0.FloatArg(**timer_3)
