# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_0.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_0 = timer_2.__exit__()
    timer_3 = module_0.Timer(logger=none_type_0)
    timer_4 = timer_3.__enter__()
    none_type_1 = timer_1.start()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    none_type_0 = timer_1.start()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0, logger=float_arg_0)
    timer_0.start()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    dict_0 = {}
    none_type_0 = timer_2.__exit__()
    timer_3 = module_0.Timer(logger=none_type_0)
    timer_4 = timer_3.__enter__()
    none_type_1 = timer_0.start()
    list_0 = [timer_2, timer_2, dict_0, timer_1]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_5 = module_0.Timer()
    float_0 = timer_4.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = timer_0.__repr__()
    timer_1 = module_0.Timer(var_0, var_0, var_1)
    timer_2 = timer_0.__enter__()
    dict_0 = {}
    none_type_0 = timer_2.__exit__()
    timer_3 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    var_2 = timer_0.__eq__(none_type_0)
    var_3 = timer_3.__call__(dict_0)
    timer_1.__enter__()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    var_1 = timer_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    var_2 = timer_0.__repr__()
    var_3 = var_2.__repr__()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    dict_0 = {}
    none_type_1 = timer_2.__exit__()
    timer_3 = module_0.Timer(logger=none_type_1)
    timer_4 = timer_3.__enter__()
    none_type_2 = timer_0.start()
    list_0 = [timer_0, timer_2, timer_2, dict_0, timer_1, timer_4, timer_0]
    var_0 = module_1.BaseException()
    var_0.pop(none_type_0, list_0)
