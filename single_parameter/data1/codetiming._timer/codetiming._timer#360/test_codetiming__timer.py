# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(none_type_0)
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    timer_0 = module_0.Timer(initial_text=set_0)
    var_0 = timer_0.__enter__()
    var_0.pop(none_type_0)


def test_case_5():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    timer_0 = module_0.Timer(initial_text=set_0)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.start()


def test_case_6():
    none_type_0 = None
    str_0 = "WS3)i$]P"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0)
    none_type_1 = timer_0.start()
    timers_0 = module_1.Timers()
    var_0 = timers_0.__iter__()
    timers_0.__delitem__(none_type_0)


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_9():
    str_0 = "WS3)i$]P"
    timer_0 = module_0.Timer(str_0)
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(str_0)
    var_1.__getitem__(var_1)


def test_case_10():
    none_type_0 = None
    str_0 = "WS3)i$]P"
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__call__(str_0)
    var_1 = timer_0.__call__(timer_0)
    var_2 = var_1.__call__(none_type_0)
    var_2.__getitem__(none_type_0)


def test_case_11():
    bytes_0 = b"\x91"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()
