# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    module_1.dataclass(timer_1, frozen=timer_1)


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    var_0 = timer_0.__call__(timer_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0.items()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    timer_error_1 = module_0.TimerError()
    timer_0.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer()
    timer_0.stop()


def test_case_8():
    str_0 = "bQy;7)"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.FloatArg(**dict_0)


def test_case_9():
    str_0 = "4.{x>C517}@29\x0bF@Waf\r"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, str_0, logger=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    var_1 = var_0.__repr__()
    timer_1 = module_0.Timer()
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_error_0 = module_0.TimerError()
    tuple_0 = ()
    var_2 = var_1.__eq__(timer_1)
    bool_0 = True
    timer_2 = module_0.Timer(text=tuple_0, initial_text=bool_0)
    timer_0.__exit__(*var_0)


def test_case_10():
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    var_0 = timer_0.__call__(timer_error_0)
    timer_1 = timer_0.__enter__()
    var_0.__iter__()


def test_case_11():
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(text=var_0)
    var_1 = var_0.__call__(timer_0)
    var_2 = module_1.field(init=var_0, compare=var_0)
    timer_2 = timer_1.__enter__()
    var_3 = timer_1.__repr__()
    none_type_0 = timer_1.__exit__()
    var_3.__delitem__(var_0)
