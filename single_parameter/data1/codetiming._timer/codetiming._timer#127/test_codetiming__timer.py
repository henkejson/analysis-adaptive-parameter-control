# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    exception_0 = module_1.Exception()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_0.copy()


def test_case_4():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    str_1 = "Timer is running. Use .stop() to stop it"
    none_type_2 = timer_0.__exit__()
    var_0 = module_2.dataclass(eq=str_1, match_args=str_1)
    var_0.median(str_1)


def test_case_5():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    float_arg_0 = timer_0.__call__(none_type_0)
    var_0 = timer_0.__repr__()
    str_1 = "Timer is running. Use .stop() to stop it"
    none_type_1 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(text=str_1, initial_text=timer_1)
    timer_4 = module_0.Timer(none_type_1)
    timer_5 = timer_3.__enter__()
    var_1 = timer_1.__repr__()


def test_case_6():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_1)
    var_0 = timer_1.__call__(none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_1 = timer_0.__repr__()
    none_type_2 = timer_0.__exit__()
    str_1 = "B(<"
    str_2 = "bOX\n\x0cKoa8j5.b"
    timer_2 = module_0.Timer(none_type_2, str_2, str_2)
    timer_3 = module_0.Timer(initial_text=timer_0, logger=none_type_2)
    timer_4 = module_0.Timer(initial_text=str_1, logger=var_1)
    timer_5 = timer_1.__enter__()
    timer_4.__enter__()


def test_case_7():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    str_1 = "Timer is running. Use .stop() to stop it"
    none_type_1 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(text=str_1, initial_text=var_0)
    timer_4 = module_0.Timer(str_0)
    timer_5 = timer_3.__enter__()
    timer_6 = timer_0.__enter__()
    var_0.__exit__()


def test_case_8():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    var_0 = timer_1.__call__(none_type_0)
    var_0.__call__(timer_1)


def test_case_9():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    str_1 = "Elapsed time: {:0.4f} seconds"
    timer_1 = module_0.Timer(str_1, logger=none_type_0)
    var_0 = timer_0.__call__(none_type_1)
    float_arg_0 = module_0.FloatArg()
    var_1 = var_0.__repr__()
    none_type_2 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(var_0, str_0)
    timer_4 = module_0.Timer(var_0, var_0, timer_1)
    timer_5 = timer_2.__enter__()
    timer_6 = timer_4.__enter__()
    var_0.popitem()


def test_case_10():
    str_0 = "HX,PBBZpW'Rx~6)6Zg"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    str_1 = "Elapsed time: {:0.4f} seconds"
    timer_1 = module_0.Timer(str_1, logger=none_type_0)
    var_0 = timer_0.__call__(none_type_1)
    float_arg_0 = module_0.FloatArg()
    var_1 = var_0.__repr__()
    none_type_2 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(var_0, str_0)
    timer_4 = module_0.Timer(var_0, var_0, timer_1)
    timer_5 = timer_2.__enter__()
    timer_6 = timer_4.__enter__()
    timer_4.__exit__()
