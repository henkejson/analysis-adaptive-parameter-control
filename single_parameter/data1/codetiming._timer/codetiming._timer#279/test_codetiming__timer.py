# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import collections as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "T"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    list_0 = [none_type_0, timer_0, timer_0]
    timer_0.__exit__(*list_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timers_0 = module_1.Timers()
    none_type_2 = timer_0.__exit__()


def test_case_5():
    str_0 = "lp<ZhcQ}fMp'[I{o5\r"
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_6():
    str_0 = "T"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__()


def test_case_7():
    float_0 = 1282.185
    timer_0 = module_0.Timer(initial_text=float_0)
    var_0 = timer_0.__repr__()
    str_0 = "iAH$$k2-\t"
    bool_0 = True
    dict_0 = {str_0: bool_0}
    timer_1 = timer_0.__enter__()
    user_dict_0 = module_2.UserDict(**dict_0)
    none_type_0 = timer_1.__exit__(*var_0)
    user_dict_0.__setitem__(dict_0, str_0)


def test_case_8():
    str_0 = "T"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    list_0 = [timer_0, timer_1, timer_0]
    none_type_0 = timer_1.__exit__(*list_0)
    timer_2.stop()
