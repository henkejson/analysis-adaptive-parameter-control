# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_1 = timer_0.start()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_0)
    var_0.__call__(none_type_1)


def test_case_5():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0, timer_0)
    none_type_0 = timer_1.start()
    none_type_0.start()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0, timer_0)
    none_type_0 = timer_1.start()
    timer_1.__exit__()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(
        text=float_arg_0, initial_text=float_arg_0, logger=float_arg_0
    )
    timer_0.start()


def test_case_9():
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = module_1.field()
    timer_0.stop()
