# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "S\n("
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    str_0 = "S\n("
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    timer_0.stop()


def test_case_4():
    int_0 = -130
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    int_1 = -2504
    var_0 = module_1.dataclass(kw_only=int_0)
    var_0.__contains__(int_1)


def test_case_5():
    str_0 = "S\n("
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    module_0.TimerError(*none_type_0)


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    var_1 = var_0.__iter__()
    var_0.update()


def test_case_7():
    str_0 = "S\n("
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = None
    timer_2 = module_0.Timer(initial_text=str_0)
    list_0 = [none_type_1, timer_0, timer_0]
    none_type_2 = timer_1.__exit__(*list_0)
    timer_3 = module_0.Timer(none_type_1)
    timer_2.stop()


def test_case_8():
    str_0 = "S\n("
    str_1 = "i"
    timer_0 = module_0.Timer(str_0, str_0, str_1)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(initial_text=str_0)
    list_0 = [timer_0, timer_0]
    none_type_1 = timer_1.__exit__(*list_0)
    timer_3 = module_0.Timer(none_type_0)
    timer_1.__exit__()


def test_case_9():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_1,)
    list_0 = [bool_0, tuple_0, bool_0, bool_0]
    timer_0 = module_0.Timer(text=bool_1, initial_text=list_0)
    none_type_0 = timer_0.start()
    timer_error_0 = module_0.TimerError(*list_0)


def test_case_10():
    str_0 = "S\n("
    str_1 = "i"
    timer_0 = module_0.Timer(str_0, str_0, str_1)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=str_0)
    list_0 = [timer_0, timer_1, timer_0, str_1]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_3 = module_0.Timer(text=timer_2, initial_text=timer_1)
    none_type_0 = timer_3.start()
    float_0 = timer_1.stop()
    float_1 = timer_3.stop()
    var_0 = timer_0.__eq__(str_1)
    var_0.start()


def test_case_11():
    str_0 = "S\n("
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = module_0.Timer(str_0, str_0, timer_0)
    timer_2 = timer_1.__enter__()
    complex_0 = -433 + 27.400130958803334j
    timer_3 = module_0.Timer(text=complex_0, initial_text=timer_2)
    none_type_0 = timer_3.start()
    float_0 = timer_2.stop()
    timer_3.stop()
