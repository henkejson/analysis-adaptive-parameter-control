# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "6E[xm"
    str_1 = "name"
    timer_0 = module_0.Timer(str_0, str_1)
    none_type_0 = timer_0.start()


def test_case_2():
    tuple_0 = ()
    timer_0 = module_0.Timer(logger=tuple_0)
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__call__(var_0)
    timer_0.stop()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    str_0 = "6E[xm"
    str_1 = "name"
    timer_0 = module_0.Timer(str_0, str_1)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    bool_0 = False
    bool_1 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_1, logger=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__repr__()
    timers_0 = module_1.Timers()
    timers_0.pop(bool_1)


def test_case_7():
    str_0 = "6E[xm"
    str_1 = "name"
    timer_0 = module_0.Timer(str_0, str_1)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = module_2.dataclass(match_args=none_type_0)
    var_0.__ior__(str_1)


def test_case_8():
    tuple_0 = ()
    str_0 = "name"
    timer_0 = module_0.Timer(text=tuple_0, initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_9():
    bool_0 = True
    bool_1 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_1, logger=bool_0)
    timer_0.__enter__()
