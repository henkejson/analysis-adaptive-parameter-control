# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    list_0 = []
    str_0 = "^>Lc:$gn\tkp"
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_1 = module_1.field(
        default_factory=str_0, hash=list_0, compare=var_0, metadata=str_0
    )
    timer_0.__exit__(*list_0)


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    str_0 = "Timer started"
    timer_0 = module_0.Timer(initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = "minutes"
    timer_2 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    timer_3 = module_0.Timer(none_type_0, str_0, timer_2)
    timer_4 = timer_3.__enter__()
    var_0 = timer_4.__eq__(str_0)
    var_1 = timer_2.__eq__(str_0)
    var_1.__enter__()


def test_case_9():
    str_0 = "minutes"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(timer_0, str_0, timer_0)
    timer_2 = timer_1.__enter__()
    timer_2.stop()


def test_case_10():
    str_0 = ""
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
