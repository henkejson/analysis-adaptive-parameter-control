# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    bool_0 = False
    timer_1 = module_0.Timer(text=timer_error_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    bool_0 = False
    timer_0 = module_0.Timer(text=timer_error_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__repr__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    bool_0 = False
    timer_1 = module_0.Timer(text=timer_error_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    timer_1.start()


def test_case_6():
    str_0 = ";r"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_7():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(none_type_0)
    bool_0 = True
    timer_1 = module_0.Timer(float_arg_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()


def test_case_8():
    str_0 = "JWDF}''?|.X"
    none_type_0 = None
    str_1 = "Timer is running. Use .stop() to stop it"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    module_0.TimerError(**dict_0)


def test_case_9():
    str_0 = "n`%\te46kaD#\x0b6oa\n"
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_1.__call__(str_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_0.start()
    var_0.__or__(var_0)


def test_case_10():
    none_type_0 = None
    var_0 = module_1.dataclass(
        eq=none_type_0, unsafe_hash=none_type_0, slots=none_type_0
    )
    bool_0 = True
    timer_0 = module_0.Timer(text=var_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()
