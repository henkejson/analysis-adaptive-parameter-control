# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(none_type_0, none_type_0, str_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "gi$qd8b@l[Q-C3\r6"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_error_0 = module_0.TimerError()
    timer_0.stop()


def test_case_3():
    int_0 = 60
    list_0 = [int_0]
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__(*list_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    str_0 = "milliseconds"
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(none_type_0, none_type_0, str_0)


def test_case_5():
    str_0 = "gi$qd8b@l[Q-C3\r6"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__call__(timer_1)
    timer_2 = timer_1.__enter__()
    var_0.__call__(timer_2)


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    user_dict_0 = module_1.UserDict()
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_0.stop()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0, none_type_0]
    none_type_1 = timer_1.__exit__(*list_0)
    none_type_2 = None
    var_0 = timer_1.__call__(none_type_2)
    timer_2 = timer_0.__enter__()
    var_1 = timer_1.__call__(timer_2)
    var_0.__ior__(none_type_0)


def test_case_8():
    bytes_0 = b"\xf5\x0f2\xcf\x1a\x97\xd5I,5\xf5"
    timer_0 = module_0.Timer(initial_text=bytes_0, logger=bytes_0)
    timer_0.start()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = timer_0.start()
    str_0 = "gi$qd8b@l[Q-C3\r6"
    timer_1 = module_0.Timer(str_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = None
    list_0 = [none_type_1, none_type_1]
    none_type_2 = timer_1.__exit__(*list_0)
    float_0 = timer_0.__repr__()
    var_0 = timer_2.__call__(timer_0)
    var_0.__setitem__(list_0, none_type_1)


def test_case_10():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = timer_0.start()
    str_0 = "gi$qd8b@l[Q-C3\r6"
    none_type_1 = None
    timer_1 = module_0.Timer(str_0, timer_0, none_type_1)
    timer_2 = timer_1.__enter__()
    none_type_2 = None
    list_0 = [none_type_2, none_type_2]
    none_type_3 = timer_1.__exit__(*list_0)
    var_0 = timer_0.__repr__()
    var_1 = timer_2.__call__(timer_0)
    var_1.__setitem__(list_0, none_type_2)
