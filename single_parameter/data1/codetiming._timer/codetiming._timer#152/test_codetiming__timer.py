# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    str_0 = "0zmer"
    timer_0 = module_0.Timer(initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_1 = module_1.field(
        default=float_arg_0, init=float_arg_0, repr=float_arg_2, compare=float_arg_2
    )
    user_dict_0 = module_2.UserDict()
    timer_2 = timer_0.__enter__()
    timer_2.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    timer_0.stop()


def test_case_4():
    str_0 = ""
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_5():
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(none_type_0, none_type_0, float_arg_0)
    none_type_1 = timer_0.start()


def test_case_6():
    str_0 = "0zmer"
    timer_0 = module_0.Timer(initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_1.field(
        default=float_arg_0, init=float_arg_0, repr=float_arg_0, compare=float_arg_0
    )
    str_1 = "v4|x5n0j'=9H4#F"
    timer_2 = module_0.Timer(initial_text=str_1)
    var_1 = module_1.dataclass(
        unsafe_hash=float_arg_0,
        frozen=timer_1,
        match_args=float_0,
        kw_only=float_arg_0,
        slots=str_0,
    )


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_8():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    module_0.TimerError(**timer_1)


def test_case_10():
    str_0 = "0zmer"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__eq__(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    var_2 = module_1.field(
        default=float_arg_0, init=float_arg_0, repr=var_0, compare=var_0
    )
    var_3 = timer_1.__eq__(var_1)
    var_3.__len__()


def test_case_11():
    str_0 = "0zmer"
    timer_0 = module_0.Timer(initial_text=str_0)
    var_0 = timer_0.__eq__(str_0)
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    var_1 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_2 = timer_1.__eq__(float_arg_0)
    str_1 = "0&D/"
    var_3 = module_1.dataclass(match_args=float_arg_0)
    timer_2 = module_0.Timer(var_0, str_1, var_2)
    timer_3 = timer_2.__enter__()
    var_0.__contains__(timer_3)
