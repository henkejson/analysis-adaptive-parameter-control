# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(initial_text=timer_0)
    timer_3 = timer_2.__enter__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    str_0 = "l kv;9+>#v"
    bool_0 = True
    timer_0 = module_0.Timer(str_0, str_0, str_0, bool_0)
    timer_error_1 = module_0.TimerError()
    timer_0.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    str_0 = "l kv;9+>#v"
    bool_0 = False
    timer_0 = module_0.Timer(str_0, str_0, str_0, bool_0)
    timer_error_1 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(initial_text=timer_0)
    timer_3 = timer_2.__enter__()


def test_case_7():
    timer_error_0 = module_0.TimerError()
    str_0 = "l kv;9+>#v"
    bool_0 = False
    timer_0 = module_0.Timer(str_0, str_0, str_0, bool_0)
    timer_error_1 = module_0.TimerError()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = module_0.Timer(float_0, initial_text=timer_2)
    var_0 = timer_3.__repr__()
    timer_4 = module_0.Timer(text=str_0, logger=str_0)
    var_1 = timer_1.__call__(timer_error_0)
    timer_5 = timer_3.__enter__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    str_0 = "l kv;9+>#v"
    bool_0 = False
    timer_0 = module_0.Timer(str_0, str_0, str_0, bool_0)
    none_type_0 = timer_0.start()
    timer_error_1 = module_0.TimerError()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = module_0.Timer(initial_text=timer_1)
    timer_4 = module_0.Timer(text=timer_3, initial_text=timer_0)
    var_0 = timer_4.__call__(timer_error_0)
    var_0.__call__(timer_4)
