# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_4():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_7():
    str_0 = "ilJ\x0bn\t84?Vf"
    str_1 = "seconds"
    timer_0 = module_0.Timer(str_1, initial_text=str_1)
    none_type_0 = timer_0.start()
    module_1.UserDict(str_0, **str_1)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    var_0 = module_2.dataclass(
        init=none_type_1, order=none_type_0, frozen=none_type_0, kw_only=bool_0
    )
    timer_0 = module_0.Timer(text=var_0, initial_text=none_type_1)
    var_1 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    var_2 = timer_0.__eq__(var_0)
    timer_0.__exit__()
