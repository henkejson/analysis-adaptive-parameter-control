# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_1)


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    bool_0 = True
    var_0 = module_1.dataclass(
        init=bool_0, order=bool_0, unsafe_hash=bool_0, frozen=bool_0
    )
    var_0.clear()


def test_case_7():
    str_0 = "i]a+jg<ZhG'f|*"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    timer_3 = timer_0.__enter__()
    timer_1.__exit__(*timer_3)


def test_case_9():
    timer_0 = module_0.Timer()
    bool_0 = True
    timer_1 = module_0.Timer(timer_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    timer_1.__exit__(*list_0)


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_1.__enter__()
    list_0 = [timer_0, timer_2]
    none_type_1 = timer_2.__exit__(*list_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_1.__call__(none_type_1)
    var_0.__contains__(list_0)


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__repr__()
    list_0 = [var_0]
    none_type_0 = timer_1.__exit__(*list_0)
    var_0.keys()
