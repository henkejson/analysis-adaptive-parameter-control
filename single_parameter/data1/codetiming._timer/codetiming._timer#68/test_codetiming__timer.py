# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_2():
    bytes_0 = b"\x9d\xd8\xcd\xf9m\x8b\xe5\xc5\x8f\xf3\xf7Y<\xb1;\x962W"
    timer_0 = module_0.Timer(bytes_0)
    timer_0.__exit__()


def test_case_3():
    bytes_0 = b""
    timer_0 = module_0.Timer(bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    str_0 = "k#8+"
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(str_0, str_0, none_type_0, none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(none_type_1)
    var_1 = module_1.dataclass(
        init=none_type_1, order=none_type_0, unsafe_hash=none_type_0
    )
    var_1.__enter__()


def test_case_6():
    bytes_0 = b"\x1d\xfa\xc6\x9f\x96\x8ep\x04g\xac\x04\x82$\xdd ^\xdc\x1a\x03\xc8"
    timer_0 = module_0.Timer(bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_8():
    str_0 = '"F58\n%nsQ'
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    var_0 = timer_0.__eq__(str_0)


def test_case_9():
    bytes_0 = b"\x9d\xd8\xcd\xf9m\xe5\xc5\x8f\xf3\xf7Y<\xb1;\x962W"
    none_type_0 = None
    timer_0 = module_0.Timer(text=bytes_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = []
    none_type_2 = timer_0.__exit__(*list_0)
    timer_1 = timer_0.__enter__()


def test_case_10():
    bytes_0 = b"\x9d\xd8\xcd\xf9m\xe5\xc5\x8f\xf3\xf7Y<\xb1;\x962W"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bytes_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_1 = timer_1.start()
    list_0 = [timer_1, timer_0, none_type_1]
    none_type_2 = timer_1.__exit__(*list_0)


def test_case_11():
    bytes_0 = b"\x02U\x8c\x02\xdf\xf3\x84\xdb\xa5\xac"
    bool_0 = True
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    var_0.__exit__(*bool_0)
