# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    bytes_0 = b">"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    bytes_0 = b">"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    str_0 = "w=CWP~"
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__call__(str_0)
    timer_2 = timer_0.__enter__()
    str_1 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    none_type_0 = None
    str_2 = "g(ONE^\r}"
    str_3 = "5&ah\x0b--`\rHv(!m\r"
    dict_0 = {
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_0.TimerError(**dict_0)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    var_0 = timer_2.__call__(timer_0)
    var_0.__contains__(timer_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = timer_1.__enter__()
    none_type_0 = None
    var_0 = timer_0.__call__(none_type_0)
    var_0.__exit__()


def test_case_9():
    bytes_0 = b">"
    none_type_0 = None
    bool_0 = True
    var_0 = module_1.dataclass(repr=bytes_0, eq=none_type_0, unsafe_hash=bool_0)
    timer_0 = module_0.Timer(text=var_0)
    timer_1 = timer_0.__enter__()
    timer_1.stop()
