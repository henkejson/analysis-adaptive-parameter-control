# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    none_type_1 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    none_type_0 = None
    var_0 = timer_0.__call__(none_type_0)
    timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    bool_0 = True
    none_type_1 = timer_0.start()
    none_type_2 = None
    none_type_3 = timer_0.__exit__()
    timer_1 = module_0.Timer(text=bool_0, initial_text=bool_0, logger=none_type_2)
    none_type_4 = timer_0.start()
    var_0 = timer_0.__eq__(bool_0)
    list_0 = [bool_0, bool_0]
    timer_2 = timer_1.__enter__()
    module_1.field(default=bool_0, init=bool_0, repr=list_0, metadata=list_0)


def test_case_7():
    str_0 = "=-xu"
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_0)
    var_0.__delitem__(none_type_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    bool_0 = True
    none_type_0 = timer_0.start()
    none_type_1 = None
    none_type_2 = timer_0.__exit__()
    timer_1 = module_0.Timer(text=bool_0, initial_text=bool_0, logger=none_type_1)
    none_type_3 = timer_0.start()
    var_0 = timer_0.__eq__(bool_0)
    list_0 = [bool_0, bool_0]
    timer_2 = timer_1.__enter__()
    module_1.field(default=bool_0, init=bool_0, repr=list_0, metadata=list_0)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    none_type_1 = timer_0.start()
    var_0 = module_1.field(default=none_type_0, init=float_arg_0)
    float_arg_1 = module_0.FloatArg()


def test_case_10():
    str_0 = "Vk!5+NplYj&"
    str_1 = " HVqdT.XN"
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(str_0, initial_text=str_1)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(str_0, str_1, str_0)
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_0.__call__(timer_0)
    timer_error_1 = module_0.TimerError()
    timer_2 = module_0.Timer(var_0)
    var_1 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()
    var_0.__enter__()
