# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(text=bool_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    none_type_0 = timer_1.start()
    timer_1.__enter__()


def test_case_6():
    bytes_0 = b"\xaaQ\xcf\x16-\x88R\x0fs{\xbc-\x1c\xe8\xf5]"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_7():
    str_0 = "R?g@L2Kwm$\rs|{XBch$<"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=str_0)
    timer_0.start()


def test_case_8():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__eq__(none_type_0)
    none_type_1 = timer_2.__exit__()
    timer_2.__exit__(*none_type_1)


def test_case_9():
    bytes_0 = b"\x00\x1dH\xc3O\xef\xe6"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_1)
    none_type_0 = timer_1.__exit__()
    timer_1.__exit__(*none_type_0)


def test_case_10():
    bytes_0 = b"\x00\x1dH\xc3O\xef\xe6"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()
    timer_3 = module_0.Timer(text=timer_1)
    var_0 = timer_3.__eq__(none_type_1)
    timer_4 = timer_3.__enter__()
    none_type_2 = timer_4.__exit__()
