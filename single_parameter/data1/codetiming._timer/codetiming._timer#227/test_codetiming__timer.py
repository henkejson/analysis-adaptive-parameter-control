# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1
import collections as module_2
import dataclasses as module_3


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_5():
    bool_0 = True
    list_0 = []
    timer_0 = module_0.Timer(text=bool_0, logger=list_0)
    timer_1 = timer_0.__enter__()
    str_0 = "p{"
    str_1 = "zq\x0bid&xG&\x0b4A"
    str_2 = "j"
    dict_0 = {str_0: bool_0, str_0: timer_0, str_1: str_0, str_2: str_0}
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    module_0.FloatArg(*timer_0, **dict_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_7():
    context_decorator_0 = module_1.ContextDecorator()
    str_0 = "pTV!mxf-h"
    timer_0 = module_0.Timer(context_decorator_0, context_decorator_0, str_0)
    none_type_0 = None
    timer_1 = timer_0.__enter__()
    bytes_0 = b""
    user_dict_0 = module_2.UserDict(bytes_0)
    user_dict_0.__getitem__(none_type_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = module_3.dataclass(kw_only=timer_0)
    timer_2 = module_0.Timer(var_0)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_2.__exit__()
    var_1 = timer_3.__eq__(var_0)
    none_type_1 = timer_3.start()
    var_0.__len__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = module_3.dataclass(kw_only=timer_0)
    float_arg_0 = module_0.FloatArg()
    timer_2 = module_0.Timer(text=var_0, initial_text=none_type_0)
    none_type_1 = timer_1.start()
    timer_3 = timer_2.__enter__()
    timer_3.__exit__()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__call__(timer_1)
    var_0 = module_3.dataclass(kw_only=timer_0)
    float_arg_0 = module_0.FloatArg()
    timer_2 = module_0.Timer(var_0, timer_1, var_0)
    timer_3 = timer_2.__enter__()
    var_0.__exit__()
