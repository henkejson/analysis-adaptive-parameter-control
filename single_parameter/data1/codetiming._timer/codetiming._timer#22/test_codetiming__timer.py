# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0)
    timer_0.__exit__()


def test_case_3():
    str_0 = "\n5@F%8_>2on&pQ;[rGG"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_1.__eq__(none_type_1)


def test_case_4():
    str_0 = "\n5@F%8_>2on&pQ;[rGG"
    timer_0 = module_0.Timer(logger=str_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    str_0 = "\n5@F%8_>2on&pQ;[rGG"
    timer_0 = module_0.Timer(logger=str_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_1.__repr__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_7():
    str_0 = "\n5@F%8_>2on&pQ;[rGG"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__repr__()
    module_0.FloatArg(**var_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.field(
        init=bool_0, repr=none_type_0, compare=bool_0, kw_only=none_type_0
    )
    var_1 = var_0.__repr__()
    var_1.__enter__()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    var_0 = module_1.dataclass(match_args=timer_error_0, slots=timer_error_0)
    timer_0 = module_0.Timer(text=var_0)
    str_0 = "IPN3)6bB"
    timer_1 = module_0.Timer(str_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_0.start()
    timer_0.stop()
