# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_1.stop()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0)
    timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_0.start()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    none_type_0 = None
    timer_1 = module_0.Timer(timer_error_0, timer_0, none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    var_0 = timer_1.__eq__(timer_1)
    var_0.__setitem__(var_0, timer_2)


def test_case_7():
    timer_error_0 = module_0.TimerError()
    str_0 = '&e@&-L0]0R"+465u'
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    float_0 = timer_0.stop()
    var_1 = var_0.__repr__()
    var_2 = timer_1.__eq__(str_0)
    var_2.max(str_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    str_0 = "g1\t;s`M#(Q*\x0c&F\ns+O-"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, float_arg_0)
    none_type_1 = timer_0.start()
    str_1 = "uQXyTL!/o\rqx.W1k<?"
    dict_0 = {str_0: none_type_1, str_0: timer_0, str_1: none_type_0}
    module_0.FloatArg(**dict_0)
