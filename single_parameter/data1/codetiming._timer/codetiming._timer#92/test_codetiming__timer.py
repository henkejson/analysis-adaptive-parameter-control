# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    bool_0 = False
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(initial_text=bool_0, logger=tuple_0)
    float_arg_0 = module_0.FloatArg()
    timer_2 = module_0.Timer(text=none_type_0)
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    dict_0 = {}
    timers_0 = module_1.Timers(**dict_0)
    timer_0.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    var_0 = module_2.field(hash=float_arg_0)
    none_type_0 = None
    timer_0 = module_0.Timer(
        text=none_type_0, initial_text=float_arg_0, logger=none_type_0
    )
    none_type_1 = timer_0.start()
    var_1 = timer_0.__call__(none_type_0)
    float_0 = timer_0.stop()
    var_2 = timer_0.__eq__(var_0)
    var_2.__iter__()


def test_case_5():
    str_0 = "Timer started"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    dict_0 = {}
    var_0 = timer_1.__eq__(timer_0)
    var_1 = timer_1.__repr__()
    float_0 = timer_1.stop()
    var_2 = var_0.__or__(timer_0)
    timers_0 = module_1.Timers(**dict_0)
    var_3 = timers_0.__contains__(var_0)
    timer_2 = module_0.Timer(initial_text=var_3, logger=var_3)
    var_4 = var_2.__repr__()
    var_0.__iter__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    var_0 = module_2.field(hash=float_arg_0)
    timer_0 = module_0.Timer(
        text=float_arg_0, initial_text=float_arg_0, logger=float_arg_0
    )
    timer_0.start()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    dict_0 = {}
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_1 = var_0.__len__()
    var_2 = timer_0.__eq__(timer_0)
    var_3 = var_2.__repr__()
    timer_2 = module_0.Timer(float_arg_0, dict_0, var_1)
    timers_0 = module_1.Timers(**dict_0)
    timer_3 = module_0.Timer(initial_text=var_1, logger=var_1)
    var_4 = float_arg_0.__repr__()
    none_type_0 = timer_0.__exit__()
    var_5 = timer_3.__repr__()
    var_6 = var_4.__repr__()
    timer_4 = timer_2.__enter__()
    var_4.__exit__(*var_2)


def test_case_9():
    str_0 = "^}0V\x0c\rqUJ1pw:VR\rnqd-"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, str_0, str_0, none_type_0)
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer()
    dict_0 = {}
    none_type_2 = timer_0.__exit__()
    var_0 = timer_1.__repr__()
    timer_2 = timer_1.__enter__()
    var_1 = var_0.__len__()
    var_2 = timer_1.__eq__(timer_1)
    var_3 = var_2.__repr__()
    timers_0 = module_1.Timers(**dict_0)
    timer_3 = module_0.Timer(initial_text=var_1, logger=var_1)
    var_4 = float_arg_0.__repr__()
    none_type_3 = timer_1.__exit__()
    var_5 = timer_3.__repr__()
    timer_3.__enter__()
