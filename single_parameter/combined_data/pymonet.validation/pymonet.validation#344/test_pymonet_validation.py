# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()


def test_case_1():
    bool_0 = False
    int_0 = -562
    str_0 = "Cw"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.map(bool_0)


def test_case_2():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()


def test_case_3():
    int_0 = 0
    dict_0 = {}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_either()


def test_case_4():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    bytes_0.to_box()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"[\xbc\xb4\x02\x04\xd4Q\xd3Z^1\x8f\x10\xb2#\xfa\xda"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bytes_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = var_2.to_maybe()
    var_4 = var_3.to_box()
    validation_1 = module_0.Validation(var_0, var_4)
    validation_1.ap(var_0)


def test_case_10():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(bytes_0)
    var_1.to_maybe()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    int_0 = -1971
    dict_0 = {}
    dict_1 = {int_0: dict_0, int_0: dict_0}
    var_2 = validation_0.to_lazy()
    validation_1 = module_0.Validation(dict_1, dict_1)
    var_3 = validation_1.is_fail()
    var_4 = validation_1.is_success()
    set_0 = set()
    validation_2 = module_0.Validation(set_0, set_0)
    int_1 = 1080
    list_0 = [int_1, int_1, int_0]
    validation_1.ap(list_0)


def test_case_12():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    bytes_0.to_box()


def test_case_13():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_1.to_maybe()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xeb+"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__eq__(bytes_0)
    var_2.ap(var_2)


def test_case_15():
    int_0 = 0
    dict_0 = {}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_either()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_17():
    bytes_0 = b';\xdf\x15w"il\xcb5\xf6\xc5\xb1\xd1oI\xc4\xb0\xb1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_maybe()
    var_2.ap(var_3)
