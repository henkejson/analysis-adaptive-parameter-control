# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = 564.21704 + 2293.7698429839643j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_lazy()


def test_case_2():
    str_0 = "pBwa\r4/uI0M"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\xff\xa8/"
    validation_0 = module_0.Validation(none_type_1, bytes_0)
    var_0 = validation_0.__str__()
    tuple_0 = ()
    validation_1 = module_0.Validation(none_type_1, tuple_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_3.bind(none_type_0)


def test_case_4():
    str_0 = "pBwa\r4/uI0M"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    bytes_0 = b"\x88\x07d\x81\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.is_fail()


def test_case_8():
    complex_0 = 564.21704 + 2268.32017450052j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.map(complex_0)


def test_case_9():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    validation_0.bind(bool_0)


def test_case_10():
    int_0 = -2642
    float_0 = 1282.7566
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(int_0)


def test_case_11():
    bytes_0 = b"\x88\x07d\x81\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(bytes_0, bytes_0)


def test_case_12():
    bytes_0 = b"X{{\xfcO@.\xd5\x9a\x92\xe8"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_maybe()
    var_2.map(bytes_0)


def test_case_13():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    validation_0.ap(var_1)


def test_case_14():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, none_type_0)
    tuple_0 = ()
    validation_2 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_2.__eq__(validation_1)
    var_0.to_try()
