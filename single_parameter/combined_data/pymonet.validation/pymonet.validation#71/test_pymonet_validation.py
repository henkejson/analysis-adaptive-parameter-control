# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.bind(bool_1)


def test_case_1():
    bytes_0 = b"s=\xd2\x0b`S\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    int_0 = -1560
    validation_1 = module_0.Validation(bytes_0, int_0)
    validation_1.is_success()


def test_case_2():
    bytes_0 = b"\x0f\xb5\xbb\xf8\x95"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_1.ap(bytes_0)


def test_case_3():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_2.map(var_2)


def test_case_4():
    bytes_0 = b"-\x01\xd6\x87#22hX\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_1.is_fail()


def test_case_5():
    bytes_0 = b"\xaa\xda\xb5\xf8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_7():
    tuple_0 = ()
    str_0 = ":}sRcVgY"
    set_0 = {tuple_0, tuple_0, str_0, tuple_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.map(validation_0)


def test_case_9():
    none_type_0 = None
    complex_0 = -455.509 - 1658.84374j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.bind(none_type_0)


def test_case_10():
    str_0 = "15pP"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = var_0.to_try()
    validation_1.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_2 = var_0.map(validation_1)
    var_3 = var_2.to_try()
    var_2.is_fail()


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    int_0 = 1
    var_2 = validation_0.__eq__(int_0)
    var_3 = validation_0.__str__()
    var_1.bind(str_0)


def test_case_14():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_1.bind(str_0)


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_2)
    var_3 = validation_0.__eq__(validation_1)
    var_2.bind(var_3)
