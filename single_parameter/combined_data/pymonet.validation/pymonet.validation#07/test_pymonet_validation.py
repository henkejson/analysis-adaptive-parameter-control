# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = True
    int_0 = 465
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_1)
    var_0.ap(bool_0)


def test_case_1():
    bool_0 = False
    none_type_0 = None
    set_0 = {none_type_0, bool_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    bytes_0 = b'~"xf\xa7wg_I\xab\x82!\x90\x11"'
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.to_try()
    var_2 = validation_1.__str__()
    var_0.to_maybe()


def test_case_2():
    str_0 = '<3a=|BZbY"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.__str__()


def test_case_3():
    float_0 = 840.8
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 1283
    int_1 = 1681
    set_0 = {int_0, int_1}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(set_0)


def test_case_7():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(dict_0)


def test_case_8():
    bool_0 = False
    str_0 = "8_@Zc$pkMS I}X@ 7$("
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_2.__str__()


def test_case_10():
    bytes_0 = b"\x94\x93\xe8\xb9\xc2d \xa4"
    bool_0 = False
    list_0 = [bytes_0, bool_0]
    str_0 = '5",X,N;m=Y?{MM_3oHD'
    bool_1 = True
    set_0 = {str_0, bool_1, bool_1, bool_1}
    validation_0 = module_0.Validation(set_0, bool_1)
    validation_1 = module_0.Validation(validation_0, bool_1)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.map(list_0)
    list_1 = []
    validation_2 = module_0.Validation(list_1, list_1)
    var_2 = validation_2.is_fail()
    var_3 = validation_2.to_lazy()
    var_4 = validation_2.to_lazy()
    var_5 = validation_2.__eq__(validation_2)
    var_6 = validation_2.to_lazy()


def test_case_11():
    bytes_0 = b"\x94\x93\xe8\xb9\xc2d \xa4"
    bool_0 = True
    list_0 = [bytes_0, bool_0]
    str_0 = '5",X,N;m=Y?{MM_3oHD'
    bool_1 = True
    set_0 = {str_0, bool_1, bool_1, bool_1}
    validation_0 = module_0.Validation(set_0, bool_1)
    validation_1 = module_0.Validation(validation_0, bool_1)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.map(list_0)
    list_1 = []
    validation_2 = module_0.Validation(list_1, list_1)
    var_2 = validation_2.is_fail()
    var_3 = validation_2.to_lazy()
    var_4 = validation_2.to_lazy()
    var_5 = validation_2.__eq__(validation_2)
    var_6 = var_0.to_try()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_success()


def test_case_14():
    str_0 = "DiT9[3D.^qa}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_0.is_success()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bytes_0)
    var_1.is_success()


def test_case_16():
    bytes_0 = b"\x94\x93\xe8\xb9\xc2d \xa4"
    bool_0 = False
    list_0 = [bytes_0, bool_0]
    str_0 = '5",X,N;m=Y?{MM_3oHD'
    bool_1 = True
    set_0 = {str_0, bool_1, bool_1, bool_1}
    validation_0 = module_0.Validation(set_0, bool_1)
    validation_1 = module_0.Validation(validation_0, bool_1)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.map(list_0)
    list_1 = []
    validation_2 = module_0.Validation(list_1, list_1)
    var_2 = validation_2.is_fail()
    var_3 = validation_2.to_lazy()
    var_4 = validation_2.to_lazy()
    var_5 = validation_2.__eq__(validation_1)
    validation_1.to_try()


def test_case_17():
    int_0 = 1484
    list_0 = [int_0, int_0, int_0, int_0]
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.map(list_0)
    var_3 = validation_0.to_try()
    var_2.is_fail()


def test_case_18():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    validation_0.bind(none_type_0)
