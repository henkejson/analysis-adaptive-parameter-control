# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pymonet.validation as module_1


def test_case_0():
    object_0 = module_0.object()
    validation_0 = module_1.Validation(object_0, object_0)
    var_0 = validation_0.__eq__(object_0)
    var_0.to_maybe()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    str_0 = '/@mYNf^T`XH\\X"%JRQ\\'
    bytes_0 = b"F"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_1.Validation(str_0, bytes_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    validation_0.ap(validation_0)


def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    dict_0 = {}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_either()
    validation_0.map(var_2)


def test_case_8():
    bool_0 = False
    bool_1 = False
    validation_0 = module_1.Validation(bool_1, bool_1)
    validation_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_1.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_10():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.__str__()
    var_3 = var_2.__str__()
    var_3.to_try()


def test_case_11():
    int_0 = 195
    validation_0 = module_1.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_12():
    bytes_0 = b"F"
    none_type_0 = None
    validation_0 = module_1.Validation(bytes_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_13():
    dict_0 = {}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_14():
    str_0 = '/@mYNf^T`XH\\X"%JRQ\\'
    validation_0 = module_1.Validation(str_0, str_0)
    validation_1 = module_1.Validation(validation_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = validation_1.is_fail()
    var_3 = validation_1.to_either()
    var_4 = var_2.__str__()
    var_4.to_either()


def test_case_15():
    str_0 = '/@mYNf^T`XH\\X"%JRQ\\'
    validation_0 = module_1.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_1.Validation(none_type_0, str_0)
    bool_0 = False
    validation_2 = module_1.Validation(bool_0, none_type_0)
    var_0 = validation_2.to_box()
    var_1 = validation_1.__eq__(validation_2)
    var_2 = validation_0.to_try()
    var_0.bind(var_1)
