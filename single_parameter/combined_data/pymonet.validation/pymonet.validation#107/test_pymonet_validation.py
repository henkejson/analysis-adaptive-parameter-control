# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = var_1.to_either()
    var_3 = validation_0.to_lazy()
    var_2.is_success()


def test_case_1():
    object_0 = module_1.object()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    bytes_0 = b"\x10z\x83\x0f\x92\xf8"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__str__()
    var_3 = var_2.__str__()
    var_3.to_either()


def test_case_2():
    int_0 = -251
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.bind(int_0)


def test_case_3():
    float_0 = 530.5
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    str_0 = "E!n9eZ{s`QMC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_0.to_either()


def test_case_5():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_1: bool_1, bool_0: bool_0, bool_1: bool_0}
    tuple_0 = (dict_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "Dv?'2khiUe[Y]Inw+2"
    float_0 = 243.56
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.map(str_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_8():
    list_0 = []
    list_1 = []
    validation_0 = module_0.Validation(list_1, list_1)
    validation_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_try()
    var_1.bind(validation_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    tuple_0 = (dict_0, bool_0)
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(none_type_0)
    validation_1 = module_0.Validation(tuple_0, bool_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.__eq__(validation_0)
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_1)
    validation_1.to_try()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.__str__()
    var_3 = var_1.to_box()
    var_3.is_fail()


def test_case_15():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = var_3.__str__()
    var_3.to_maybe()


def test_case_16():
    bytes_0 = b"\x86)\x95LH{k]H"
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = validation_0.__eq__(var_2)
    var_5 = var_4.__str__()
    var_3.bind(var_4)
