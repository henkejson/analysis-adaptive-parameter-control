# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    int_0 = 1373
    tuple_0 = ()
    validation_0 = module_0.Validation(int_0, tuple_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.to_try()


def test_case_2():
    int_0 = -1666
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    complex_0 = -32.283689 - 284.141j
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(var_0, complex_0)
    dict_1 = {complex_0: complex_0, var_1: var_1}
    validation_2 = module_0.Validation(complex_0, dict_1)
    validation_2.map(var_1)


def test_case_3():
    int_0 = 1891
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = 1891
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_7():
    str_0 = "qa(DVc!c9]WK\\{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(str_0)


def test_case_8():
    set_0 = set()
    bool_0 = True
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.ap(validation_0)


def test_case_9():
    int_0 = 911
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_10():
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {bool_0: tuple_0}
    tuple_1 = (dict_0, bool_0)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    list_0 = [validation_0, dict_0, object_0, object_0]
    validation_1 = module_0.Validation(list_0, validation_0)
    validation_2 = module_0.Validation(validation_1, dict_0)
    validation_3 = module_0.Validation(object_0, object_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_1.to_box()
    var_4 = var_0.map(var_2)
    var_5 = var_4.map(var_1)
    var_2.to_try()


def test_case_12():
    int_0 = 1891
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.__eq__(validation_1)
    validation_2 = module_0.Validation(var_0, var_1)
    validation_2.to_try()


def test_case_14():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    list_0 = [validation_0, dict_0, object_0, object_0]
    validation_1 = module_0.Validation(list_0, validation_0)
    validation_2 = module_0.Validation(validation_1, dict_0)
    validation_3 = module_0.Validation(object_0, object_0)
    var_1 = validation_0.to_box()
    var_1.to_box()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(set_0, validation_0)
    validation_2 = module_0.Validation(var_0, validation_0)
    var_1 = validation_2.__eq__(validation_0)
    validation_2.to_try()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    bool_0 = False
    validation_1 = module_0.Validation(var_2, var_1)
    validation_2 = module_0.Validation(set_0, bool_0)
    validation_0.bind(bool_0)
