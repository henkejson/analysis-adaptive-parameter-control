# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_lazy()
    var_3 = validation_0.__eq__(var_2)
    var_4 = validation_0.is_success()
    var_4.map(var_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_either()
    var_3 = validation_0.to_box()


def test_case_2():
    none_type_0 = None
    str_0 = "Qbv2=j'] 8Q\r o>G_"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()


def test_case_3():
    str_0 = "=W$["
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_4():
    bytes_0 = b"\xe5\x06K\xabF\xa2|\xd8\xe4e\xd1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_either()
    var_3 = validation_0.is_fail()
    var_1.is_success()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = "k0(8"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.ap(str_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    bool_1 = True
    str_0 = "\n        Transform Box into Lazy with returning value function.\n\n        :returns: not folded Lazy monad with function returning previous value\n        :rtype: Lazy[Function(() -> A)]\n        "
    tuple_0 = (bool_1, str_0)
    tuple_1 = (bool_0, tuple_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(tuple_1)


def test_case_12():
    str_0 = "uk?$%rnn-ZaIt"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    bytes_0 = b"\xdd\xc1\x1d%3#I\x1c\xb8\xa2G\xb8~\x83\x10"
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_2.to_either()
    var_1 = validation_1.to_try()
    var_1.is_success()


def test_case_13():
    none_type_0 = None
    str_0 = "Qbv2=j'] 8Q\r o>G_"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_1.map(var_0)


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    bytes_0 = b"\xae'D\xb4\xa00f\x10q\xf7#\xc6/"
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, bytes_0)
    validation_2 = module_0.Validation(bytes_0, none_type_0)
    var_1 = validation_1.__eq__(validation_2)
    var_2 = validation_1.to_box()
    var_3 = validation_0.to_lazy()
    var_4 = validation_2.to_lazy()
    var_1.bind(var_1)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()
    var_3 = var_1.to_lazy()
    var_4 = var_0.to_lazy()
    var_5 = validation_0.__eq__(var_3)
    var_6 = validation_0.is_success()
    var_2.map(var_2)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_1.is_fail()


def test_case_17():
    bool_0 = True
    int_0 = 1305
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.map(bool_0)
