# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    list_0 = [set_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = '%%y_."`'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_success()
    var_1.to_lazy()


def test_case_2():
    int_0 = 1
    str_0 = "HHk=|SB#"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(int_0)
    var_2 = var_1.__str__()
    var_2.is_success()


def test_case_3():
    int_0 = 710
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = 710
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_5():
    bytes_0 = b"\x01^\xff(s[\xb28\xb8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\x93\xe6q\x12\xed\xa0\xbe\x1a\x1f\x19\x0bw\r"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(set_0)


def test_case_7():
    str_0 = "|MuNs8\\N0\n0~l5q&c~W"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(str_0)


def test_case_8():
    int_0 = 710
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(validation_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.is_fail()


def test_case_10():
    str_0 = ","
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    int_0 = 720
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = module_0.Validation(int_0, int_0)
    var_1 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(bool_0, var_1)
    validation_1.is_fail()


def test_case_13():
    int_0 = 720
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bool_0, var_0)
    validation_1.is_fail()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_0.bind(validation_0)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(list_0, list_0)
    float_0 = 2904.60588
    var_1 = validation_0.__eq__(float_0)
    var_2 = validation_1.to_either()
    var_3 = validation_0.__str__()
    var_4 = var_2.__eq__(validation_0)
    var_5 = validation_0.to_either()
    var_6 = validation_1.to_maybe()
    var_7 = validation_1.to_box()
    var_8 = var_2.to_lazy()
    var_3.ap(var_4)
