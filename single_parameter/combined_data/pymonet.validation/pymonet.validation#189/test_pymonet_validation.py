# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_0, none_type_1)
    var_0.to_try()


def test_case_1():
    str_0 = ""
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.__str__()
    var_5 = validation_0.to_box()
    var_6 = var_1.__eq__(str_0)
    var_7 = var_5.to_lazy()
    var_6.to_either()


def test_case_2():
    str_0 = "Mld|cb5VhF[=-"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.is_fail()
    var_4.bind(var_3)


def test_case_3():
    str_0 = ""
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.__str__()
    var_5 = validation_0.to_maybe()
    var_6 = var_5.to_lazy()
    var_7 = validation_0.to_box()
    var_5.ap(str_0)


def test_case_4():
    str_0 = "wr\tCENV1FNx<)I]R"
    bytes_0 = b"M\xa6\x12\x07\x82\xf1\xaaf9$\xf4\x0e\x87\xdf\xc4\x85\xb4\x0e\x1c\xa5"
    set_0 = {bytes_0, str_0, str_0, str_0}
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bool_0 = False
    list_0 = [bool_0]
    tuple_2 = (set_0, tuple_1, bool_0, list_0)
    validation_0 = module_0.Validation(bytes_0, tuple_2)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(str_0)
    validation_1 = validation_0.to_either()
    var_2 = validation_1.ap(str_0)
    var_2.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_8():
    int_0 = -1373
    tuple_0 = (int_0,)
    bytes_0 = b"\x98\x98\t@Ic"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.map(tuple_0)


def test_case_9():
    int_0 = -2157
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(int_0)


def test_case_10():
    int_0 = 1
    bool_0 = True
    tuple_0 = (bool_0,)
    set_0 = {tuple_0, int_0}
    validation_0 = module_0.Validation(int_0, tuple_0)
    validation_0.ap(set_0)


def test_case_11():
    float_0 = -647.06
    str_0 = "b-g"
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_2.map(var_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.to_try()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_try()
