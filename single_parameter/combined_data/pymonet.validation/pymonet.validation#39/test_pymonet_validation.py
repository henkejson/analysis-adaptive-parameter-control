# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.bind(int_0)
    var_3 = var_2.to_try()
    var_4 = var_1.__eq__(var_1)
    var_3.to_maybe()


def test_case_1():
    str_0 = "\x0b=Jl,PcIYFga)?Qz{\x0bC"
    list_0 = []
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.to_box()


def test_case_2():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.map(none_type_0)


def test_case_3():
    str_0 = "\x0b=Jl,PcIYFga)?Qz{\x0bC"
    str_1 = 'uI*^:"Gr_~[&0X2K}'
    list_0 = []
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_1, var_0)
    validation_2 = module_0.Validation(validation_0, list_0)
    var_1 = validation_2.__eq__(var_0)
    var_2 = validation_1.is_fail()
    tuple_0 = (validation_0, var_1, validation_1)
    validation_3 = module_0.Validation(list_0, tuple_0)
    var_1.to_maybe()


def test_case_4():
    none_type_0 = None
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Map[B]\n        :returns: new Map with concated all values\n        :rtype: Map[A]\n        "
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.to_maybe()
    var_3 = var_0.to_try()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.__str__()


def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    dict_0 = {bool_0: list_0}
    bytes_0 = b"\x9c\x91\xed<\x89\xf2\xf9W"
    tuple_0 = (bytes_0,)
    str_0 = "F%22L~zn"
    tuple_1 = (tuple_0, str_0)
    validation_1 = module_0.Validation(tuple_1, tuple_0)
    validation_1.map(dict_0)


def test_case_6():
    int_0 = 863
    var_0 = int_0.__str__()


def test_case_7():
    int_0 = 863
    var_0 = module_0.Validation(int_0, int_0)


def test_case_8():
    int_0 = 314
    str_0 = "ghi%n`Mqme"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.is_success()
    var_0.is_success()


def test_case_9():
    object_0 = module_1.object()
    set_0 = {object_0, object_0, object_0, object_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_10():
    list_0 = []
    object_0 = module_1.object(*list_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(object_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_12():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_13():
    list_0 = []
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.to_maybe()
    var_3 = validation_0.is_success()
    str_0 = "#E9\tQdP,I[i\x0c2#?3"
    validation_1 = module_0.Validation(str_0, str_0)
    var_4 = validation_1.is_success()
    var_5 = validation_1.to_maybe()
    var_1.is_fail()


def test_case_16():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_1 = module_0.Validation(int_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_1.to_maybe()


def test_case_17():
    int_0 = 0
    int_1 = 0
    validation_0 = module_0.Validation(int_0, int_1)
    str_0 = ""
    validation_1 = module_0.Validation(int_1, str_0)
    var_0 = validation_1.__eq__(int_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.to_maybe()
    var_3 = var_2.to_box()
    var_4 = var_3.to_either()
    var_0.to_try()
