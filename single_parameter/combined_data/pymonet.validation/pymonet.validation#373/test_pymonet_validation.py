# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Hg,5E(M#K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_box()
    var_4 = validation_0.__eq__(var_2)
    var_4.to_try()


def test_case_1():
    bytes_0 = b"Jz\xb8\xe4\xf5Q\x8f\x8c\xcf\x01$\xca\x05oy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_2():
    bytes_0 = b"<\xf2"
    str_0 = "XHTJ"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(bytes_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_3():
    bytes_0 = b"i\x04\xfa\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = -971
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(int_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_9():
    str_0 = "Hg,5E(M#K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_box()
    var_4 = validation_0.to_box()
    var_5 = validation_0.__eq__(var_3)
    var_6 = var_1.to_try()
    var_6.is_fail()


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.to_either()
    var_3 = validation_0.is_success()
    var_0.bind(var_1)


def test_case_11():
    str_0 = "Hg,5E(M#K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()
    var_3 = module_0.Validation(var_1, validation_0)
    var_4 = validation_0.to_box()
    var_5 = validation_0.__eq__(var_3)
    var_4.ap(str_0)


def test_case_12():
    str_0 = "Hg,55E(M#K"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    object_0 = module_1.object()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(object_0)
    var_2.map(var_0)


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_lazy()
    validation_0.bind(validation_0)
