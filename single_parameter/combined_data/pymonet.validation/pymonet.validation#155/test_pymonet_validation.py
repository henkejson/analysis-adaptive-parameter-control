# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_3, var_2)


def test_case_2():
    str_0 = "g6 iG;Q?Zu;Hi"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    str_0 = ">O{%,J k+}pU&5B"
    var_0 = str_0.__eq__(str_0)


def test_case_4():
    bytes_0 = b" ;\xbf\xe0\xf5B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_6():
    str_0 = ";VRR3YSjx\ts[W/Va!C"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    str_0 = ">O{%,J k+}pU&5B"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_8():
    float_0 = -3400.4065445303404
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(float_0)


def test_case_9():
    bytes_0 = b" ;2\xbf\xe0\x80\xf5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_10():
    bytes_0 = b"\xdb\x8b\\\x8a\xeb\x16\x0f\x0b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = ">O{%,i k+}2:pU&5B"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b"|&J"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xe7\xbf\xe0\xd3B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    str_0 = "4ghi%;QFju;,T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    var_3.to_lazy()


def test_case_16():
    str_0 = "hxZ\x0c\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_17():
    bytes_0 = b"RZ\x90\xc4\xc5gO\x0f"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_18():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.__eq__(validation_0)
    var_2 = var_0.to_try()
    var_1.to_either()
