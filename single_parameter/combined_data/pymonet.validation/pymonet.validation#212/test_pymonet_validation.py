# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    str_0 = ")"
    validation_0 = module_0.Validation(str_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_1():
    int_0 = 2077
    int_1 = 1085
    validation_0 = module_0.Validation(int_1, int_1)
    var_0 = validation_0.__eq__(int_0)
    var_1 = module_0.Validation(var_0, int_0)
    var_1.is_fail()


def test_case_2():
    bytes_0 = b"\xc2j\x9a\xdd\x87:\x82c\xf2\x1bQp^"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.ap(var_0)


def test_case_3():
    int_0 = -947
    tuple_0 = (int_0,)
    none_type_0 = None
    var_0 = module_0.Validation(none_type_0, tuple_0)
    var_1 = var_0.to_either()
    var_2 = var_0.is_success()


def test_case_4():
    bytes_0 = b"e\xf0\xaa\xcb&,+\xbf\x95 \x1c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.bind(bytes_0)


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()


def test_case_7():
    complex_0 = 1024.886 - 3309j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_fail()


def test_case_8():
    int_0 = 912
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(int_0)


def test_case_9():
    bytes_0 = b"~\xc7"
    int_0 = 2077
    int_1 = 1085
    validation_0 = module_0.Validation(int_1, int_1)
    var_0 = validation_0.__eq__(int_0)
    validation_0.bind(bytes_0)


def test_case_10():
    str_0 = "$>GF[c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = validation_0.to_maybe()
    validation_0.ap(none_type_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    bytes_0 = b"\x9f>w^"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_14():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_either()


def test_case_15():
    int_0 = -915
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    str_0 = "M3d?Zf"
    validation_1 = module_0.Validation(int_0, str_0)
    var_1 = validation_1.is_success()
    var_2 = validation_0.__eq__(validation_1)
    var_2.to_box()


def test_case_16():
    dict_0 = {}
    set_0 = set()
    validation_0 = module_0.Validation(set_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__str__()
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, dict_0)
    var_3 = validation_1.__str__()
    var_3.ap(none_type_0)


def test_case_17():
    dict_0 = {}
    set_0 = set()
    validation_0 = module_0.Validation(set_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.__str__()
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, dict_0)
    var_4 = validation_1.__str__()
    var_4.ap(none_type_0)
