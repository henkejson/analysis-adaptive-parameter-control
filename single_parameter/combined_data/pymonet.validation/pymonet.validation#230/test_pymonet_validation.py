# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = -745
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bytes_0 = b"Y\x86\x97\xce"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.to_box()
    var_0.is_fail()


def test_case_1():
    float_0 = -2549.5
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)


def test_case_2():
    str_0 = "n.CZ$Kq-^[#"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.bind(none_type_0)
    var_4 = var_3.__eq__(dict_0)


def test_case_4():
    bytes_0 = b"\xd0\x18\xf1J\xf8\xaa\\\xaa\xa8\xff7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    list_0 = []
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(list_0, list_0)
    var_1 = validation_1.to_box()
    var_2 = validation_1.to_maybe()
    var_1.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    int_0 = -745
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bytes_0 = b"Y\x86\x97\xce"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.is_fail()
    var_1.to_lazy()


def test_case_7():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    float_0 = -2549.5
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(bool_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_10():
    bool_0 = False
    int_0 = -745
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bytes_0 = b"Y\x86\x97\xce"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_either()
    var_3 = var_2.__eq__(bool_0)
    var_0.to_lazy()


def test_case_11():
    float_0 = -737.84899
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    validation_1 = module_0.Validation(validation_0, var_2)


def test_case_12():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_1.bind(var_0)


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.bind(none_type_0)
    var_5 = var_4.__eq__(dict_0)
