# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "[qMEp~s~<(0W!8Z%m+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_1():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "\tlX\x0b/DkS\x0bX#FMjq"
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(str_0)
    validation_1.is_success()


def test_case_2():
    str_0 = "[qMEp~s~<(0W!8Z%m+"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1.is_fail()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(dict_0)
    validation_1 = module_0.Validation(none_type_0, dict_0)
    validation_1.ap(none_type_0)


def test_case_4():
    str_0 = ",aa#X*7A3SLS"
    str_1 = "i?%5\\/g_"
    validation_0 = module_0.Validation(str_0, str_1)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, bool_0)
    validation_0.__str__()


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_9():
    bytes_0 = b"b\xf5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_11():
    bytes_0 = b"\xd0\xfdWd\xc5\xf5Y\x95\xb6bN\xb9\xc0~$"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_12():
    none_type_0 = None
    str_0 = "Tn[u19o9d'8Lrmo]4FC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__eq__(none_type_0)
    var_3 = var_1.bind(validation_0)
    var_2.to_lazy()


def test_case_13():
    int_0 = 1737
    bool_0 = False
    set_0 = set()
    list_0 = [int_0, bool_0, set_0, set_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_14():
    bytes_0 = b"\xe01\x05\x8d\x9f\x84\xcb\xde\xbe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_15():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.__str__()


def test_case_16():
    str_0 = "[qMEp~s~<(0W!8Z%m+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    validation_2.map(var_2)


def test_case_17():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
