# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    str_0 = '}(T9W"!i'
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.map(bool_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xe7\xe1\x12<s\xe3\x98\xb1\xf7\x1dI\x8a\x85\xfc\xc64\xc2"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (list_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    bytes_1 = b'uh\xda\xedD\xcf`P\xaa\x94\xc3M\xeb"'
    validation_1 = module_0.Validation(bytes_1, bytes_1)
    var_1 = validation_1.to_try()
    var_2 = var_0.to_try()
    var_3 = var_1.__str__()
    var_4 = validation_1.__str__()
    var_3.map(bytes_1)


def test_case_3():
    none_type_0 = None
    dict_0 = {}
    bytes_0 = b"\xa1:"
    bool_0 = False
    tuple_0 = (dict_0, bytes_0, dict_0, bool_0)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_maybe()


def test_case_4():
    bytes_0 = b'dBpd1\xcfu=H"\x9d\xa0\x14\xdd\xe1'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.is_fail()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    float_0 = -2095.800828
    none_type_0 = None
    validation_1 = module_0.Validation(float_0, none_type_0)
    validation_1.__str__()


def test_case_7():
    int_0 = -3343
    bool_0 = False
    str_0 = "N2"
    validation_0 = module_0.Validation(bool_0, str_0)
    validation_0.map(int_0)


def test_case_8():
    bytes_0 = b"\xd4\xff[\x050\x12e\xdb4?"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, set_0)
    validation_0.bind(none_type_0)


def test_case_9():
    set_0 = set()
    int_0 = 1457
    list_0 = [int_0, int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, int_0)
    validation_0.ap(set_0)


def test_case_10():
    float_0 = 2926.1
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    str_0 = "OSewi"
    var_0.bind(str_0)


def test_case_11():
    bytes_0 = b"J"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.__str__()
    var_1.to_box()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    bool_1 = False
    dict_0 = {bool_1: tuple_0, bool_1: bool_1}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_1.map(var_1)


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, dict_0)
    bool_0 = True
    var_0.map(bool_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_1.ap(set_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, validation_0)
    var_0 = validation_1.to_box()
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_1)
    validation_1.ap(none_type_1)
