# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    var_0 = validation_0.__eq__(none_type_1)
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    int_0 = -533
    validation_2 = module_0.Validation(int_0, int_0)
    var_2 = validation_2.__eq__(int_0)
    var_2.map(int_0)


def test_case_1():
    str_0 = "BC ;A96)EwG;bV0eTw"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    int_0 = 560
    str_0 = "R }'It,xI[p\\{}hs!X,"
    list_0 = []
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(int_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()
    var_4 = var_2.__eq__(list_0)
    var_4.to_lazy()


def test_case_3():
    float_0 = -2516.6
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()


def test_case_4():
    int_0 = 560
    int_0.bind(int_0)


def test_case_5():
    int_0 = 560
    var_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.__str__()
    none_type_1 = None
    validation_1 = module_0.Validation(list_0, none_type_1)
    validation_1.is_fail()


def test_case_8():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(set_0)


def test_case_9():
    bytes_0 = b"\x8b\xc2\xa5i\xdf@\x9b\x1eZ\xae\x82\xb6\x8a\xc5A"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_11():
    dict_0 = {}
    tuple_0 = (dict_0, dict_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.is_fail()


def test_case_12():
    bytes_0 = b""
    float_0 = -1255.276318
    set_0 = {float_0, float_0, float_0}
    bool_0 = False
    tuple_0 = (float_0, set_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, float_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(float_0)
    var_3 = var_1.to_maybe()
    var_0.to_lazy()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_maybe()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_2 = validation_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = validation_1.to_box()
    var_5 = validation_1.__eq__(validation_1)
    object_0 = module_1.object()
    var_6 = var_3.to_box()
    var_6.is_success()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = validation_0.__eq__(var_1)
    tuple_0 = (dict_0, dict_0)
    var_3 = var_0.to_either()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_4 = validation_1.to_box()
    var_5 = validation_0.__eq__(validation_0)
    object_0 = module_1.object()
    var_6 = var_3.to_box()
    validation_2 = module_0.Validation(dict_0, var_3)
    var_7 = var_3.to_maybe()
    str_0 = "8B"
    validation_3 = module_0.Validation(str_0, str_0)
    var_8 = validation_3.is_fail()
    var_9 = validation_1.to_lazy()
    var_10 = validation_3.__eq__(var_1)
    var_11 = validation_3.to_maybe()
    validation_3.bind(var_1)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = module_0.Validation(validation_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    tuple_0 = (dict_0, dict_0)
    var_3 = var_0.to_either()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_4 = validation_0.to_box()
    var_5 = validation_1.to_box()
    var_6 = validation_0.__eq__(validation_0)
    object_0 = module_1.object()
    var_7 = var_3.to_box()
    validation_2 = module_0.Validation(dict_0, var_3)
    var_8 = var_4.to_maybe()
    validation_3 = module_0.Validation(var_4, var_4)
    validation_3.is_fail()
