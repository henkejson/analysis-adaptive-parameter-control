# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b'\x9d\xc3j\xb2\x1d\xed\x08\xc5\x15"\x8f\rqF'
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    str_0 = "_["
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_2():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"b\xbds\x0bVX\xf9.\x8c\xf05\x06\xa4\xa9E\x14"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\xc5\x1d\xe9m\xa3&x\x8d;\x18\t\x93\xedI\xb1*$"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    int_0 = 1663
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_7():
    bytes_0 = b"\xcb\x1dy\xfb*\xc2\x99\t\x80!\x88\x19\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = "Zt25(FJ+WSW,NI`"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_9():
    int_0 = 3669
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_10():
    bytes_0 = b"b\xbds\x0bVX\xf9.\x8c\xf0\x06\xa4\xa9E\x14"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bool_0 = False
    str_0 = "Wp\\_v)]<`2"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.is_fail()


def test_case_12():
    bytes_0 = b"\x10\xbe0\xf3\xd4\xb9Ow"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_13():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    validation_0 = module_0.Validation(set_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.is_fail()
    var_1.to_either()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()


def test_case_15():
    bytes_0 = b"\xbd\xfe\xec\x0b\xa3\xf9\xf3t\xa9)"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_16():
    bytes_0 = b"\x9d\xc3j\xb2\x1dE\x11\x08\xc5\x15\xd0\x8f\rqF"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_17():
    int_0 = -1098
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_18():
    int_0 = 3669
    validation_0 = module_0.Validation(int_0, int_0)
    str_0 = "jD4m$U*dz] \x0bl$w"
    validation_1 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(int_0, var_0)
    var_0.ap(var_0)
