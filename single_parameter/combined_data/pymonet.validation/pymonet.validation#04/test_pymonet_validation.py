# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"X?\n"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_1():
    str_0 = "@]E&|vytmIJo"
    bytes_0 = b"\xd0+\xc3\xee\xd1\x83 \ty\x11"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_2():
    none_type_0 = None
    list_0 = []
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(list_0)
    var_1.map(none_type_0)


def test_case_3():
    int_0 = -1496
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(validation_0)


def test_case_4():
    float_0 = -901.108533
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_5():
    bytes_0 = b"\xf7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\x7f?\n"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.map(var_0)


def test_case_7():
    bytes_0 = b"\xdc\x88U\xfb\x19\x0e\xbe\x90t\xce\x17\x07\xe9\xce\x98\x97eh\x03"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bytes_0)


def test_case_8():
    int_0 = -1496
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__str__()
    var_0.bind(var_0)


def test_case_9():
    int_0 = -1496
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_lazy()


def test_case_10():
    bytes_0 = b"\xbf\x87\x9a\xd0\x88\xc4\x1f"
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_11():
    bytes_0 = b"\x02\x17\xd7m"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    validation_0.bind(bytes_0)


def test_case_12():
    int_0 = -1496
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_0.bind(validation_0)


def test_case_13():
    bytes_0 = b"\x17\xd7m"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_1.__eq__(validation_0)
    validation_1.__str__()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.__str__()
    validation_0.bind(bytes_0)
