# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(str_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.bind(var_2)


def test_case_2():
    bytes_0 = b"\x88"
    str_0 = "`P$Lq2"
    tuple_0 = (bytes_0, str_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()


def test_case_5():
    int_0 = 1884
    set_0 = {int_0, int_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    int_0 = -3267
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(int_0)
    validation_0.map(none_type_0)


def test_case_7():
    complex_0 = 563.79 - 751.663j
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(complex_0)


def test_case_8():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.ap(set_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_10():
    bytes_0 = b""
    str_0 = "`P$Lq2"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_1 = validation_0.to_box()
    var_2 = validation_1.to_lazy()
    var_3 = var_2.__eq__(str_0)
    var_4 = var_0.__str__()
    var_5 = var_4.__eq__(str_0)
    var_5.to_lazy()


def test_case_11():
    bytes_0 = b"\xe5!r\xcd"
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_0.to_lazy()


def test_case_12():
    int_0 = -125
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_2.__str__()
    var_3.is_success()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b""
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.to_either()
    var_2 = var_1.to_box()
    var_3 = validation_1.to_either()
    validation_2 = module_0.Validation(validation_1, var_3)
    var_4 = validation_0.to_lazy()
    validation_2.is_success()


def test_case_15():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_16():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_lazy()
