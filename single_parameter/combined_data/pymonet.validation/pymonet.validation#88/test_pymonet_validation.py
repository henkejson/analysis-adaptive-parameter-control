# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pymonet.validation as module_1


def test_case_0():
    object_0 = module_0.object()
    int_0 = 368
    int_1 = 368
    str_0 = "V0o&Wpws5q=dwg5%K"
    validation_0 = module_1.Validation(str_0, int_1)
    validation_1 = module_1.Validation(str_0, object_0)
    var_0 = validation_1.__eq__(int_0)


def test_case_1():
    object_0 = module_0.object()
    int_0 = 368
    str_0 = "V0o&Wpws5q=d'g5%K"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_1.Validation(var_0, int_0)
    var_1 = validation_0.to_try()
    var_0.ap(var_0)


def test_case_2():
    tuple_0 = ()
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_1 = module_1.Validation(var_1, var_1)
    var_2 = validation_1.__eq__(validation_1)
    validation_1.to_either()


def test_case_3():
    object_0 = module_0.object()
    none_type_0 = None
    str_0 = "V0o&Wpws5q=dwg5%K"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.to_try()
    var_3 = var_2.__eq__(object_0)
    var_3.to_either()


def test_case_4():
    tuple_0 = ()
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    str_0 = "E]^|8"
    bool_0 = True
    bytes_0 = b"\x17"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bool_0)
    var_1.bind(str_0)


def test_case_6():
    int_0 = 1479
    validation_0 = module_1.Validation(int_0, int_0)


def test_case_7():
    bytes_0 = b"(\xd6\x15\xbc|\x91,\xbdJAq\xe9\xdb\x0e\x08H^\x9f"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_0.ap(var_0)


def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_1.Validation(tuple_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    str_0 = "[:qMbC<"
    validation_0 = module_1.Validation(str_0, str_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_10():
    object_0 = module_0.object()
    none_type_0 = None
    str_0 = "V0o&Wpws5q=dwg5%K"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.bind(var_0)


def test_case_11():
    bool_0 = False
    int_0 = 775
    tuple_0 = (bool_0, int_0)
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_12():
    str_0 = "K\\?I;IO^^-f>|Duw1\x0c$"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_1.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_1.Validation(validation_0, validation_0)
    var_1 = var_0.to_either()
    validation_1.to_try()


def test_case_13():
    object_0 = module_0.object()
    str_0 = "V0o&Wpws5q=dwg5%K"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_try()
    validation_1 = module_1.Validation(var_1, var_1)
    var_3 = validation_0.__eq__(validation_1)
    var_4 = validation_0.to_either()
    var_0.is_success()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_1.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_try()
    validation_1 = module_1.Validation(var_1, var_1)
    var_3 = validation_0.__eq__(validation_1)
    var_0.is_success()
