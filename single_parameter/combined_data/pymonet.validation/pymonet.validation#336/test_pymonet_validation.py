# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "CfC4F?-D:\r<Vi{\x0b8BOf"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_1():
    int_0 = -976
    float_0 = 1709.836257
    bytes_0 = b"\xe5:S\n.q\x16\xea\x00<}\xff"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    int_0.bind(float_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    str_0 = '"w>+t~=T\n3p")K=Xgg6'
    bytes_0 = b"\xa9\xdc\x18\xa6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = var_2.__eq__(str_0)


def test_case_4():
    str_0 = "CfC4F?-D:\r<Vi{\x0b8BOf"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_success()


def test_case_5():
    none_type_0 = None
    var_0 = none_type_0.__str__()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    str_0 = "i\x0c/1NU%O\n\rT"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.map(str_0)


def test_case_9():
    float_0 = 1709.836257
    bytes_0 = b"\xe5:S\n.q\x16\xea\x00<}\xff"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.bind(float_0)


def test_case_10():
    float_0 = 1709.836257
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(validation_0)


def test_case_11():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(int_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_13():
    str_0 = "CfC4F?-D:\r<Vi{\x0b8BOf"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_14():
    str_0 = "CfC4F?-D:\r<Vi{\x0b8BOf"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_2.__str__()
    var_4 = validation_0.to_either()
    var_5 = var_4.ap(var_2)
    bool_0 = False
    var_6 = var_1.to_box()
    var_7 = var_1.bind(var_4)
    validation_1 = module_0.Validation(var_5, var_5)
    validation_2 = module_0.Validation(var_1, bool_0)
    var_8 = validation_2.__eq__(validation_1)
    var_3.to_try()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(tuple_0)
    var_1.to_either()


def test_case_16():
    str_0 = "CfC4F?-D:\r<Vi{\x0b8BOf"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    list_0 = []
    validation_1 = module_0.Validation(list_0, none_type_0)
    list_1 = [list_0]
    validation_2 = module_0.Validation(list_1, list_0)
    var_0 = validation_2.to_maybe()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_2.__str__()
    validation_3 = module_0.Validation(str_0, list_1)
    var_3 = validation_2.__eq__(validation_3)
    var_4 = var_3.__eq__(var_1)
    var_4.to_either()
