# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"Y\xc8\xe6|\xec\xcf\xc0Z!t\xf6)j+\xdd\x8d\x95\x10h\x0e"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__str__()
    var_1.ap(var_1)


def test_case_1():
    bytes_0 = b"Y\xc8\xe6|\xec\xcf\xc0Z!z\xf6)j+\xdd\x8d$\x10h\x0e"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(none_type_0)
    object_0 = module_1.object()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    bytes_0 = b"\xbdV=O"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.is_success()


def test_case_4():
    bytes_0 = b"\xe6\x82XP\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_5():
    bool_0 = False
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, bool_1)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_6():
    bool_0 = False
    int_0 = -2177
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_8():
    none_type_0 = None
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(none_type_0)


def test_case_9():
    bytes_0 = b"Y\xc8\xe6|\xec\xcf\xc0Z!t\xf6)j+\xdd\x8d\x95\x10h\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__str__()
    module_1.object(**var_2)


def test_case_10():
    bytes_0 = b"\xe6\x82XP\xc7\x9b"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    object_0 = module_1.object()


def test_case_11():
    bytes_0 = b"\x01\x0f\xe5:\xac\xe8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.to_box()
    var_1 = validation_1.__eq__(validation_0)
    var_2 = var_0.__str__()
    module_1.object(*var_1)


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_lazy()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_3 = var_1.to_lazy()
    var_4 = var_3.to_box()
    validation_1.to_maybe()


def test_case_13():
    bytes_0 = b"Y\xc8\xe6|\xec\xcf\xc0Z!t\xf6)j+\xdd\x8d\x95\x10h\x0e"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_1 = validation_0.to_maybe()
    validation_2 = module_0.Validation(bytes_0, validation_1)
    var_0 = validation_0.to_box()
    none_type_1 = None
    var_1 = validation_2.__eq__(none_type_1)
    var_2 = validation_0.__str__()
    object_0 = module_1.object()


def test_case_14():
    bytes_0 = b"Y\xc8\xe6|\xec\xcf\xc0Z!t\xf6)j+\x8d\x8d\x95\x10h\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_0.is_success()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    validation_2 = module_0.Validation(var_2, validation_0)
    var_4 = validation_2.to_box()
    var_2.to_box()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = module_1.object()
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_0.is_success()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_either()
    validation_2 = module_0.Validation(var_2, validation_0)
    var_4 = validation_2.to_box()
    var_2.to_box()
