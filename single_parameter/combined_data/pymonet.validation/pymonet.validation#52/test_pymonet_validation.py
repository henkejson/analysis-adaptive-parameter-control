# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    int_0 = 2183
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_either()


def test_case_1():
    bytes_0 = b"x\x91\x89\xae\xbf9\x1e\xf6\x97\x1e\x93\xfb\xb5\x93\xef|o\x86"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_3 = var_0.bind(validation_1)
    var_4 = var_3.to_box()
    var_5 = var_4.to_maybe()
    var_3.to_either()


def test_case_2():
    bytes_0 = b"\x06X\xa1\xd7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.__str__()
    validation_1.map(none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    tuple_0 = (bool_0, list_0, bool_0)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    bool_0 = False
    int_0 = 2183
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_fail()


def test_case_6():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    validation_0 = module_0.Validation(set_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0 = b"\xb9\xf6\xcdAN\xe4"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_box()
    validation_1.map(validation_1)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    bool_1 = False
    validation_2 = module_0.Validation(bool_1, bool_1)
    validation_2.bind(validation_1)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\x8dk\x91\xacQyu\x81\xd0\xddhV\n\x87"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()


def test_case_10():
    int_0 = -1325
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(int_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    bytes_0 = b"\xbf\x93Z\xef\x8b\xff\xe0M\xcc\xb6\x164k\x80\xa4\xa4\x10\xe0\xb7\xe0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.is_fail()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    int_0 = 12
    var_0 = validation_0.__str__()
    tuple_0 = (set_0, validation_0, int_0, set_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.to_try()
    var_3 = var_2.__str__()
    set_0.to_lazy()


def test_case_13():
    str_0 = "U"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_14():
    bytes_0 = b"\x9e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    int_0 = -3909
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_either()
    validation_1.bind(int_0)


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.__eq__(bool_0)
    dict_0 = {}
    validation_2 = module_0.Validation(dict_0, var_1)
    var_3 = validation_1.to_box()
    bool_1 = True
    var_0.map(bool_1)
