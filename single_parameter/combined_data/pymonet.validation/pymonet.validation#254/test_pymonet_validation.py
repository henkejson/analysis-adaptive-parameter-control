# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(list_0)


def test_case_1():
    str_0 = "DdPE7-3fGF2+Y!s"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"}\xa9t\xae\xb9\x07\xe9\x97[?sG\xd1\xe6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"}\xa9t\xae\xb9\x07\xe9\x97[?sG\xd1\xe6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_1.to_box()
    var_1 = validation_1.__eq__(validation_1)
    validation_1.is_fail()


def test_case_5():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_6():
    none_type_0 = None
    float_0 = 38.584886
    list_0 = []
    validation_0 = module_0.Validation(float_0, list_0)
    validation_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.is_fail()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = str_0.__eq__(var_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_maybe()
    var_4 = var_3.to_either()
    var_4.to_either()


def test_case_12():
    str_0 = 'N&0"Tip'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    tuple_0 = ()
    tuple_0.map(tuple_0)


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.is_fail()


def test_case_14():
    set_0 = set()
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_maybe()
    set_1 = {bool_0, bool_0, bool_0, bool_0}
    int_0 = -635
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, set_1)
    var_1 = validation_0.__str__()
    var_2 = validation_1.__eq__(validation_1)
    validation_2 = module_0.Validation(int_0, int_0)
