# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "$*] r=64%^#+8&"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.to_either()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    dict_0.bind(validation_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_4():
    bytes_0 = b"\x16\xec\xef\xdb<?\xd7.\x06\xd6^\x07\xcfG\xc3\xbeu\xcdL"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_try()
    var_0.map(var_2)


def test_case_5():
    bool_0 = True
    bool_0.to_either()


def test_case_6():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_8():
    bytes_0 = b"\xf9\xb0\xed\x07\xba\xd6U\xed"
    str_0 = "zo\x0b\\@HWX5k,c<:1'"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bytes_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.ap(validation_0)


def test_case_11():
    str_0 = "]GA\rsf9"
    str_1 = "&SG_4w+\nklXI"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    validation_0.map(str_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_15():
    int_0 = -4398
    list_0 = [int_0, int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(int_0)
    var_2 = var_0.to_box()
    var_3 = validation_0.__str__()
    var_1.is_success()


def test_case_16():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_1, bool_0)
    validation_1 = module_0.Validation(bool_1, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_try()


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()
