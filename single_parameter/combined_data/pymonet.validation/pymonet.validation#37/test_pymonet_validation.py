# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.bind(var_0)


def test_case_1():
    str_0 = "k< O"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    list_0 = [bool_0, bool_0]
    int_0 = 414
    bytes_0 = b"\xc7\xf9\xee\xe6\\?G\xcf\xf8H\xd7\x9b\xc2\xd4\\\xa4"
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.__str__()
    var_3 = var_2.__eq__(list_0)
    var_3.ap(dict_0)


def test_case_2():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_4():
    str_0 = "\t%B&Is05g<G|P\x0bFN"
    str_1 = "=[5B=;V2&CUl/"
    validation_0 = module_0.Validation(str_1, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(validation_0)


def test_case_6():
    int_0 = 3097
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(validation_0)


def test_case_7():
    int_0 = 414
    bytes_0 = b"\xa9%\x91\x920\x16.&*\xea\xab5\x8f23o\xa7\xcb"
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    validation_0.ap(var_1)


def test_case_8():
    none_type_0 = None
    int_0 = 1
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.to_box()
    var_0.bind(int_0)


def test_case_9():
    int_0 = 1040
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    bool_0 = True
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.ap(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    str_0 = "\t%B&Is05g<G|P\x0bFN"
    int_0 = -1843
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.map(var_0)
    str_1 = "Sum[value={}]"
    var_3 = validation_0.__eq__(str_1)
    var_4 = validation_0.to_maybe()
    var_5 = var_0.__eq__(str_1)
    validation_1 = module_0.Validation(var_2, var_2)
    var_6 = var_4.__eq__(var_5)
    var_3.is_fail()


def test_case_12():
    str_0 = "x&H@Z|!"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = str_0.__eq__(str_0)
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_13():
    str_0 = "\t%B&Is05g<G|P\x0bFN"
    str_1 = "=[5B=;V2&CUl/"
    validation_0 = module_0.Validation(str_1, str_0)
    var_0 = validation_0.to_either()


def test_case_14():
    str_0 = ""
    int_0 = -1843
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    str_1 = "Sum[value={}]"
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(str_1)
    str_2 = "=[5B=;V2&CUl/"
    var_3 = var_1.to_try()
    var_4 = validation_0.is_success()
    var_5 = var_1.__str__()
    validation_1 = module_0.Validation(str_2, var_3)
    var_6 = var_0.to_either()
    validation_2 = module_0.Validation(var_3, int_0)
    var_7 = validation_1.__eq__(var_2)
    var_4.is_success()


def test_case_15():
    str_0 = "\t%B&Is05g<G|P\x0bFN"
    int_0 = 2294
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    str_1 = "Sum[value={}]"
    var_2 = var_1.to_maybe()
    var_3 = validation_0.__eq__(str_1)
    var_4 = var_0.to_lazy()
    var_5 = validation_0.is_success()
    var_6 = validation_0.__str__()
    var_7 = var_6.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(var_4, none_type_0)
    validation_2 = module_0.Validation(var_0, var_3)
    var_8 = validation_2.__eq__(validation_1)
    var_8.is_success()


def test_case_16():
    str_0 = ""
    int_0 = -1906
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    str_1 = "Sum[value={}]"
    var_2 = validation_0.__eq__(str_1)
    var_3 = var_0.__str__()
    var_4 = validation_0.to_either()
    var_5 = validation_0.to_try()
    var_6 = validation_0.__str__()
    validation_1 = module_0.Validation(var_5, var_0)
    var_5.map(validation_1)
