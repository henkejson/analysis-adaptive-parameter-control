# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -4468.574
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_maybe()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.to_maybe()
    var_3.is_success()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()


def test_case_4():
    str_0 = "\n        Transform Box into Right either.\n\n        :returns: right Either monad with previous value\n        :rtype: Right[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.to_either()


def test_case_5():
    bool_0 = True
    bytes_0 = b"\xe2r\xe2r\x93\x05\xdfy\xc1$\xd3^\xa9\xe9\xfb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bool_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_7():
    bytes_0 = b"i\x8akmY\xc7\x1e\x18\xa8\xc8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(dict_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    float_0 = -4468.574
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.__eq__(float_0)
    var_1.to_either()


def test_case_9():
    none_type_0 = None
    bytes_0 = b"n\\?\xf6$\x00\xc1ma"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_0.__eq__(none_type_0)
    var_2.to_try()


def test_case_10():
    str_0 = "#CG'9H)o"
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(str_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_12():
    str_0 = "\n        Transform Box into Right either.\n\n        :returns: right Either monad with previous value\n        :rtype: Right[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_2 = var_0.__eq__(validation_0)
    var_3 = var_1.to_try()
    var_4 = validation_1.__eq__(validation_0)
    validation_1.is_success()


def test_case_14():
    str_0 = "="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_maybe()
    var_3 = validation_0.is_fail()
    var_4 = var_0.to_maybe()
    validation_0.map(none_type_0)


def test_case_16():
    bool_0 = False
    bool_1 = False
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bool_1)
    var_1.ap(bool_0)
