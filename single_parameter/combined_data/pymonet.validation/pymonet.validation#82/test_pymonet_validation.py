# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"Fv\xe9\xe5t\xee\xdd\x01#"
    bytes_1 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.__eq__(bytes_1)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_1.ap(validation_0)


def test_case_2():
    str_0 = "("
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    bytes_0 = b"Fv\xe9\xe5t\xee\xdd\x01#"
    bytes_1 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bytes_0)


def test_case_4():
    int_0 = -1022
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    validation_2 = module_0.Validation(set_0, set_0)
    var_2.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    complex_0 = -3889.9089 + 3902.31991j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_success()


def test_case_7():
    bytes_0 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI!\x12"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(validation_0)


def test_case_8():
    bytes_0 = b"Fv\xe9\xe5t\xee\xdd\x01#"
    bytes_1 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.to_either()
    validation_0.map(validation_0)


def test_case_9():
    float_0 = 945.201
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bytes_0 = b"]Fv\xe9\xe5t\xee\xdd\x01#"
    none_type_0 = None
    bytes_1 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    validation_0.ap(none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    list_0 = []
    tuple_0 = (bool_0, list_0)
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b"Fv\xe9\xe5t\xee\xdd\x01#"
    bytes_1 = b"\x11\xc3\x97\x9f\x06Kfm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(bytes_1, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_1, var_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_0.__eq__(validation_1)


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\x11\xaa\x066fm\xdaI\x0e\x12"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(var_0)


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    float_0 = -2583.54589
    var_1 = var_0.__eq__(float_0)


def test_case_17():
    bytes_0 = b"v\xe5t\xee\xdd\x01#"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)


def test_case_18():
    bytes_0 = b"v\xe9\xe5t\xee\xdd\x01#"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
