# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "3-ncF"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_box()
    var_0.is_success()


def test_case_1():
    bytes_0 = b""
    bool_0 = True
    str_0 = "{"
    tuple_0 = (bool_0, str_0, bool_0)
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.bind(dict_0)


def test_case_2():
    bytes_0 = b"\xc8'\xb8:.\xd2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    str_0 = "3-ncF"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_0.to_box()


def test_case_4():
    bytes_0 = b"\xa0\x1e\xbcbKV>9\xf0\x13\x079"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    str_0 = '2"d&w\nerQ4{r'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_0.to_try()


def test_case_6():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = 1
    bytes_0 = b"\xa0\x1e\xbcbKV>9\xf0\x13\x079"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.map(int_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\x840\x94/\xcaz%\x1a5 \xc74,\x89\x00\xc4\xc3\x8cf\x99"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(none_type_0)


def test_case_9():
    str_0 = "3-ncF"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.to_maybe()
    bool_0 = True
    validation_1 = module_0.Validation(var_2, validation_0)
    var_3 = var_2.map(var_0)
    var_4 = validation_0.__eq__(bool_0)
    var_5 = validation_0.to_box()
    var_6 = var_0.to_maybe()
    var_7 = validation_0.__str__()
    var_8 = var_2.to_box()
    none_type_0 = None
    validation_2 = module_0.Validation(validation_0, none_type_0)
    var_9 = var_6.__str__()
    validation_2.ap(var_5)


def test_case_10():
    bytes_0 = b""
    bool_0 = True
    str_0 = "{"
    tuple_0 = (bool_0, str_0, bool_0)
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__eq__(bytes_0)
    str_1 = "W97%)7"
    validation_1 = module_0.Validation(dict_0, str_1)
    var_1 = validation_1.to_box()
    var_2 = validation_1.is_success()
    var_3 = validation_1.to_maybe()
    var_4 = var_3.to_either()


def test_case_11():
    bytes_0 = b",\x024\x97"
    dict_0 = {bytes_0: bytes_0}
    str_0 = "3-ncF"
    validation_0 = module_0.Validation(str_0, str_0)
    float_0 = -3811.0
    var_0 = validation_0.to_lazy()
    list_0 = [bytes_0, dict_0, bytes_0, float_0]
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(list_0)
    var_2.to_box()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_lazy()
    var_3 = var_1.to_either()
    var_4 = var_1.ap(var_0)
    validation_2 = module_0.Validation(none_type_0, var_3)
    var_4.to_maybe()


def test_case_14():
    str_0 = "3-ncF"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, var_1)
    validation_2 = module_0.Validation(validation_0, validation_0)
    var_2 = validation_2.__eq__(validation_0)
    var_2.is_success()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.is_fail()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(tuple_0)
    var_1.map(tuple_0)


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_2.ap(dict_0)
