# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\n        Create empty maybe.\n\n        :returns: Maybe[None]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_fail()
    var_2.to_maybe()


def test_case_1():
    none_type_0 = None
    int_0 = -6891
    int_1 = 3125
    tuple_0 = (int_1,)
    validation_0 = module_0.Validation(int_0, tuple_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_4():
    str_0 = "\n        Create empty maybe.\n\n        :returns: Maybe[None]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_fail()
    var_2.to_maybe()


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_8():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.is_fail()


def test_case_9():
    none_type_0 = None
    int_0 = -895
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    dict_0 = {tuple_0: tuple_0}
    tuple_1 = (dict_0, dict_0, int_0)
    validation_0 = module_0.Validation(tuple_1, bool_0)
    validation_0.map(none_type_0)


def test_case_10():
    bytes_0 = b"s\x8flul\xd1p\x86\xe0<q\xd9\xb2\xf6\x17EC\xaf\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    validation_0 = module_0.Validation(bool_0, list_0)
    validation_0.ap(list_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_13():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_lazy()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.ap(validation_0)
    var_1.is_success()


def test_case_15():
    int_0 = 0
    list_0 = [int_0]
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.to_try()
    var_0.is_success()


def test_case_16():
    bytes_0 = b"\xcc\xf7\x0e\x04\xc8Y\xc1 N\xbb\xa6\x85\x97\x90\x9e"
    none_type_0 = None
    dict_0 = {none_type_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = var_1.to_either()
    var_3 = validation_1.is_fail()
    var_4 = var_2.to_try()
    validation_2 = module_0.Validation(var_3, bytes_0)
    var_5 = validation_2.__str__()
    var_6 = validation_1.to_lazy()
    validation_3 = module_0.Validation(bytes_0, bytes_0)
    var_7 = var_1.to_either()
    var_8 = validation_2.to_lazy()
    validation_4 = module_0.Validation(var_8, validation_3)
    var_9 = validation_1.is_fail()
    var_0.map(var_5)


def test_case_17():
    bytes_0 = b"\xcc\xf7\x0e\x04\xc8Y\xc1 N\xbb\xa6\x85\x97\x90\x9e"
    none_type_0 = None
    dict_0 = {none_type_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.bind(bytes_0)


def test_case_18():
    bytes_0 = b"\xcc\xf7\x0e\x04\xc8Y\xc1 N\xbb\xa6\x85\x97\x90\x9e"
    none_type_0 = None
    dict_0 = {none_type_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_box()
