# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "CJ_6 K`Cj7`NvJ=%Y.\n"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = "&'H9\n4*rINh{j/Q+J"
    bool_0 = False
    bytes_0 = b":>\x9bX\x7f\x00\xadSdH\xfe"
    set_0 = {bytes_0, bytes_0, str_0, str_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bool_0)
    var_1.to_either()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()


def test_case_5():
    float_0 = -313.8
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(float_0)


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.bind(tuple_0)


def test_case_7():
    bytes_0 = b"y+\xed\xb7z\x11\xd9\xf9\xd6l\xe6\xaf"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    object_0 = module_1.object()
    validation_0.ap(bytes_0)


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()


def test_case_9():
    complex_0 = 2105.0593 - 1648.2265837127961j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_10():
    str_0 = "M}mY7-'f/"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.to_try()


def test_case_11():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    object_0 = module_1.object()


def test_case_12():
    str_0 = "Hh?t!HS"
    bool_0 = True
    bytes_0 = b":>\x9bX\x7fI\xadSdH\xfe"
    dict_0 = {str_0: bool_0, bytes_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.__str__()
    var_4 = var_2.__eq__(var_0)


def test_case_13():
    str_0 = "CJ_6 K`Cj7`NvJ=%Y.\n"
    bytes_0 = b":>\x9bX\x7f\x00\xadSdH\xfe"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(var_1, var_1)
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_0.to_either()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = '+$wde]dI@B"OWj,Ye$'
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    none_type_1 = None
    var_1 = validation_1.to_maybe()
    validation_1.bind(none_type_1)


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
