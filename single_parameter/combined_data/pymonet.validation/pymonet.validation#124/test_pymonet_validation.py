# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.__eq__(var_2)
    validation_1 = module_0.Validation(var_1, validation_0)
    var_4 = validation_0.is_fail()
    var_5 = validation_0.to_box()
    var_6 = validation_1.__eq__(dict_0)


def test_case_1():
    str_0 = "8\\ADMRy\\-!luFN"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.__str__()


def test_case_3():
    float_0 = -2555.9173
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    float_0 = -2555.9173
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    str_0 = "k"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.ap(none_type_0)


def test_case_8():
    object_0 = module_1.object()
    str_0 = "l)z80"
    validation_0 = module_0.Validation(object_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_3 = var_2.__str__()
    var_3.to_either()


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_10():
    bytes_0 = b"3i\xb5s\x9fW\x14J\x887W"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_try()


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(bool_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_1.bind(var_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_either()
    var_1.to_either()


def test_case_13():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()
