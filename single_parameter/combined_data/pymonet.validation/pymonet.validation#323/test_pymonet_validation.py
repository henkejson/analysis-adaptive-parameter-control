# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = '%H!*Tr"(d:=au]'
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, str_0)
    var_0 = validation_0.__eq__(str_0)
    none_type_0.to_try()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    tuple_0 = ()
    set_0 = {tuple_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.map(set_0)


def test_case_3():
    set_0 = set()
    bytes_0 = b"\rJN\xc6\xb4|I\x9e\t\\0\x05K\xf2\x9eJ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(set_0)
    var_2 = var_1.to_box()
    var_3 = var_0.__eq__(var_0)
    var_4 = validation_0.to_either()
    var_5 = var_1.to_lazy()
    int_0 = -3399
    tuple_0 = (int_0, int_0)
    validation_1 = module_0.Validation(tuple_0, int_0)
    validation_1.bind(tuple_0)


def test_case_4():
    int_0 = 401
    str_0 = 'C"[{\t\x0bwo8%qV]Rlu>T(I'
    bool_0 = False
    complex_0 = 472.1102 - 897.199j
    tuple_0 = (str_0, bool_0, complex_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_maybe()
    var_2.ap(int_0)


def test_case_5():
    int_0 = 2958
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_7():
    bytes_0 = b"\\R\xf9\xb4{\xb6 \x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.to_either()


def test_case_8():
    set_0 = set()
    int_0 = 2958
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(set_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.ap(var_0)


def test_case_11():
    str_0 = '%H!*Tr"(d:=au]'
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_either()
    validation_1 = module_0.Validation(var_1, none_type_1)
    var_3 = validation_1.__eq__(var_0)
    var_4 = var_0.__eq__(var_0)
    validation_2 = module_0.Validation(var_0, none_type_0)
    var_5 = var_0.__str__()
    validation_3 = var_2.bind(validation_2)
    var_6 = validation_3.__eq__(validation_2)
    var_4.to_try()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_maybe()
    var_4 = var_3.__eq__(dict_0)
    var_4.is_fail()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(bool_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_16():
    str_0 = '%H!*Tr"(d:=au]'
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_either()
    int_0 = -2254
    validation_1 = module_0.Validation(str_0, int_0)
    var_2 = validation_0.__str__()
    var_3 = var_2.__eq__(none_type_0)
    var_4 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(var_4, var_0)
    var_5 = var_2.__str__()
    var_2.to_either()


def test_case_17():
    str_0 = ""
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_either()
    int_0 = -2254
    validation_1 = module_0.Validation(none_type_1, var_0)
    var_2 = var_1.__str__()
    var_3 = validation_0.to_box()
    var_4 = var_3.__eq__(int_0)
    var_5 = validation_1.__eq__(str_0)
    validation_2 = module_0.Validation(none_type_1, none_type_0)
    var_6 = var_2.__str__()
    validation_3 = module_0.Validation(var_1, validation_2)
    var_7 = var_3.__eq__(var_6)
    validation_3.map(var_7)
