# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(bool_0)
    var_1.ap(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"\x99\xd69\x9e\xb2l\xf5\xff\x00\xd77e\x9a~"
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(bytes_0)
    var_3 = validation_0.to_try()
    var_2.is_fail()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_1.to_maybe()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.to_try()
    var_4 = validation_0.__eq__(var_3)
    var_4.to_maybe()


def test_case_5():
    bytes_0 = b"S\xca\x8a\x1b\x9f\x11\x1e\x19\xd0"
    list_0 = [bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    int_0 = 1969
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.to_maybe()


def test_case_6():
    bytes_0 = b"\xf5\x94<\xb1\xda\xd9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_7():
    str_0 = "0%NZDGr=hkZu"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_0.to_maybe()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    float_0 = 1652.29
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = var_1.__eq__(bool_0)
    var_2.ap(none_type_0)


def test_case_12():
    bool_0 = True
    int_0 = -2846
    validation_0 = module_0.Validation(int_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_maybe()
    var_4 = var_2.ap(var_1)
    validation_1 = module_0.Validation(var_0, validation_0)
    var_5 = validation_0.to_lazy()
    var_6 = var_4.ap(var_0)
    var_5.is_success()


def test_case_14():
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_0.to_try()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_1)
    module_1.object(*validation_1)


def test_case_16():
    str_0 = "0%NZDGr=hkZu"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_0.ap(str_0)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    var_2.to_maybe()


def test_case_18():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.bind(none_type_0)
