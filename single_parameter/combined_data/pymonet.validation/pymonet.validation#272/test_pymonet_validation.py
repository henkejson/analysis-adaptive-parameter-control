# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"-n\x90\xfc\x1b\x13\xe3\xcfQ\xca\xae\xcbrI\x96\xcf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__eq__(validation_1)
    var_2.map(var_2)


def test_case_1():
    bytes_0 = b"-n\x90\xfc\x1b\x13\xe3\xcfQ\xca\xae\xcbrI\x96\xcf"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(none_type_0)
    bytes_1 = b"U\x00\xb9\x0c\xa9\x8a*m\xc9%s\x98vO//"
    validation_1 = module_0.Validation(bytes_1, bytes_1)
    var_2 = validation_1.to_either()
    validation_1.map(bytes_0)


def test_case_2():
    bytes_0 = b"-n\x90\xfc\x1b\x13\xe3\xcfQ\xca\xae\xcbrI\x96\xcf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_3 = validation_1.__eq__(validation_1)
    var_3.map(var_3)


def test_case_3():
    list_0 = []
    tuple_0 = ()
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    float_0 = -390.5
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_6():
    float_0 = -427.2
    dict_0 = {float_0: float_0, float_0: float_0}
    validation_0 = module_0.Validation(dict_0, float_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = False
    validation_0.map(bool_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(bool_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_2 = var_0.to_either()
    var_3 = var_0.to_maybe()
    var_2.to_either()


def test_case_11():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_12():
    float_0 = 95.843
    list_0 = [float_0, float_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.bind(float_0)


def test_case_13():
    bytes_0 = b""
    set_0 = {bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.is_success()


def test_case_15():
    list_0 = []
    tuple_0 = ()
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.__str__()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()
    var_3 = var_1.__str__()
    var_4 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_5 = var_1.__eq__(var_4)
    var_6 = validation_1.__eq__(validation_1)
    validation_1.map(bytes_0)
