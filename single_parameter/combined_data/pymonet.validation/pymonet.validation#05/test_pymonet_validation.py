# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_0.to_lazy()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.is_fail()


def test_case_2():
    bytes_0 = b"\x94\x85\x81\xe7+mu"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    var_2.to_try()


def test_case_3():
    str_0 = "&d#2{1`\tdk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(str_0)
    float_0 = -4021.0
    validation_1 = module_0.Validation(float_0, float_0)
    float_1 = -202.7
    validation_2 = module_0.Validation(float_1, var_1)
    var_2 = validation_1.to_box()
    var_3 = validation_1.to_lazy()
    var_4 = var_1.__eq__(var_3)
    var_4.to_try()


def test_case_4():
    str_0 = "qG>i"
    str_0.is_success()


def test_case_5():
    str_0 = "qG>i"
    var_0 = module_0.Validation(str_0, str_0)


def test_case_6():
    str_0 = "qG>i"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_0.to_lazy()


def test_case_7():
    none_type_0 = None
    bytes_0 = b"]\x17\xd0\xce,O\x90jcl\x06\x0f^\xe5\xd5\x97"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"\x96\x1e9\n\xeaK\xaf\x06M\xbf\xbc)"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, bytes_0)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"\x9fD\x19\xbb\x7f\x03\xc1e\xf2(\xe4\xa6\xb6\xec\xda!F"
    int_0 = -846
    list_0 = [int_0, int_0, int_0]
    list_1 = [list_0]
    bool_0 = True
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_success()
    var_2 = var_1.__eq__(int_0)
    var_3 = validation_0.__eq__(list_1)
    var_4 = validation_0.is_success()
    validation_1 = module_0.Validation(bool_0, var_0)
    validation_0.ap(bytes_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    str_0 = "qG>i"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__str__()


def test_case_12():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_0 = validation_1.__str__()
    validation_1.bind(validation_1)


def test_case_13():
    str_0 = "&d#2{1`\tdk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, var_1)
    validation_2 = module_0.Validation(str_0, var_1)
    validation_3 = module_0.Validation(var_0, var_1)
    var_2 = validation_0.to_box()
    var_3 = validation_2.to_lazy()
    var_4 = validation_2.__eq__(var_3)
    var_4.to_try()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(validation_1, validation_1)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.__eq__(validation_1)
    var_3 = var_1.to_try()
    var_4 = validation_2.__eq__(validation_2)
    var_1.to_lazy()


def test_case_15():
    float_0 = -1266.0
    dict_0 = {}
    validation_0 = module_0.Validation(float_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.map(float_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.__eq__(validation_0)
    validation_1.to_try()


def test_case_17():
    str_0 = "&d#2{1`\tdk"
    tuple_0 = ()
    validation_0 = module_0.Validation(str_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()
