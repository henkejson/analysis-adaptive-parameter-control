# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_1.to_lazy()


def test_case_1():
    none_type_0 = None
    int_0 = -2173
    list_0 = [int_0, int_0, int_0]
    list_1 = []
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(list_0)
    var_2 = var_1.__eq__(none_type_0)
    var_2.is_fail()


def test_case_2():
    str_0 = "ImmutableList[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_1.ap(var_1)


def test_case_3():
    str_0 = "tnHOXf1pjh"
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_0.to_lazy()
    var_1.bind(str_0)


def test_case_4():
    str_0 = "ImmutableLismt[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = var_1.__eq__(none_type_0)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = var_3.__eq__(none_type_0)
    validation_2 = module_0.Validation(str_0, var_2)
    var_5 = var_4.__str__()
    var_6 = var_0.to_lazy()
    var_7 = var_1.__eq__(var_2)
    validation_1.to_maybe()


def test_case_5():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    none_type_0.bind(var_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_8():
    str_0 = "ImmutableList[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    validation_0.map(var_1)


def test_case_10():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(set_0)


def test_case_11():
    none_type_0 = None
    int_0 = 0
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    float_0 = 2133.9286
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_14():
    str_0 = "ImmutableList[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.ap(var_1)
    var_3 = validation_0.to_lazy()
    var_4 = var_3.bind(var_3)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_4)
    var_5 = validation_0.to_lazy()
    var_6 = var_0.bind(validation_1)
    var_7 = var_3.to_maybe()
    var_8 = validation_0.__eq__(validation_0)
    var_9 = var_5.bind(none_type_0)
    var_8.ap(validation_0)


def test_case_15():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.to_try()


def test_case_16():
    str_0 = "ImmutableLismt[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_3 = var_2.__eq__(none_type_0)
    var_4 = validation_0.__eq__(validation_0)
    validation_1.is_success()


def test_case_17():
    none_type_0 = None
    float_0 = 2133.9286
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = module_0.Validation(none_type_0, validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_lazy()


def test_case_18():
    str_0 = "ImmutableList[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.map(var_1)
    var_3 = validation_0.__str__()
    var_4 = var_1.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_3)
    var_5 = validation_0.__eq__(validation_1)
    var_6 = var_0.bind(validation_1)
    var_7 = validation_0.__eq__(validation_0)
    var_8 = validation_1.to_lazy()
    var_9 = validation_1.to_lazy()
    var_7.ap(validation_0)
