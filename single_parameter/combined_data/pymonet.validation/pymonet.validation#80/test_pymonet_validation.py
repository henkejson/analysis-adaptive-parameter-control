# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_0.to_try()
    var_3 = var_2.__eq__(none_type_0)


def test_case_1():
    str_0 = "%s-j?{HJvPq>P"
    float_0 = 4299.8073
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.bind(str_0)


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_1.is_fail()


def test_case_3():
    str_0 = "H]&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = module_1.object()


def test_case_6():
    int_0 = 2
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    float_0 = -2157.98
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.map(float_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    bytes_0 = b"\x02O\xf8\x87w\xe8\x86>1\xac\xa6\xec\xa3\xea\xfck\xab\x1c"
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.to_box()


def test_case_11():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    set_0 = validation_0.to_lazy()


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.bind(dict_0)
    var_2.to_maybe()


def test_case_13():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(validation_0)
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_0.to_try()
    var_3.to_box()


def test_case_14():
    bytes_0 = b"m\xfd\xcf\xdb\x07b8"
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_0.to_maybe()
    var_0.ap(none_type_0)


def test_case_15():
    bytes_0 = b">1P\xc0S\x15\xa6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    bytes_1 = b"D\xe3\xad}\xc5\x91\x12vk\x0e"
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(validation_1)
    validation_2 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_2.to_lazy()
    validation_3 = module_0.Validation(validation_1, bytes_1)
    var_3 = validation_3.__eq__(validation_2)
    validation_4 = module_0.Validation(none_type_0, validation_3)
    validation_1.to_maybe()
