# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_3 = var_0.map(var_2)
    var_4 = validation_0.to_maybe()
    var_5 = str_0.__str__()
    str_0.to_lazy()


def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    str_0 = "\n        Take mapper function and returns result of them called with Right value.\n\n        :param mapper: function to apply on Right value\n        :type mapper: Function(A) -> Either[B]\n        :returns: result of mapper\n        :rtype: Either[B]\n        "
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.bind(var_0)


def test_case_2():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.__str__()
    var_4 = var_0.map(var_3)
    var_5 = validation_0.to_maybe()
    var_6 = str_0.__str__()
    var_6.is_fail()


def test_case_3():
    str_0 = "\x0c<|gw"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    str_0 = '\r=L1_p"wME5Q^Jg8y'
    bytes_0 = b"Z\x97"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(str_0)
    var_3 = var_2.ap(none_type_0)


def test_case_5():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_7():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(none_type_0)


def test_case_8():
    object_0 = module_1.object()
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_0)
    validation_0.ap(object_0)


def test_case_9():
    bytes_0 = b"\xc4\x06*8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_0.__str__()
    var_2.bind(bytes_0)


def test_case_10():
    bool_0 = True
    float_0 = -3552.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    str_0 = ""
    bytes_0 = b"\x1c\x1b\x9c\xdb\xec-\xc32"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_1.map(validation_0)


def test_case_13():
    float_0 = -3552.0
    bool_0 = False
    validation_0 = module_0.Validation(float_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_4 = var_3.__str__()
    var_4.to_lazy()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    validation_0.bind(var_0)


def test_case_15():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(validation_0)


def test_case_16():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(str_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_0.map(var_2)


def test_case_17():
    set_0 = set()
    int_0 = 1500
    dict_0 = {}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_3 = var_2.__str__()
    var_3.ap(set_0)
