# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    set_0 = {none_type_0}
    list_0 = [set_0, none_type_0]
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, list_0)
    bytes_0 = b"\x91\xbe\xf2w\xac2\xab\xc0\x01\xfbT\xb8\xa8\x8fj\x165"
    validation_2 = module_0.Validation(none_type_0, bytes_0)
    validation_3 = module_0.Validation(none_type_0, none_type_0)
    var_1 = none_type_0.__eq__(none_type_0)


def test_case_1():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    list_0 = [tuple_0, bool_0]
    none_type_1 = None
    validation_0 = module_0.Validation(list_0, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    complex_0 = 346 - 1630.6553j
    list_0 = []
    validation_0 = module_0.Validation(complex_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_either()


def test_case_3():
    bool_0 = True
    bytes_0 = b"%"
    set_0 = {bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.ap(bool_0)


def test_case_4():
    str_0 = "z%G8<"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0 = b"!\xf0\t\xf4\xe9"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    bytes_0.is_fail()


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_1 = validation_0.to_box()
    var_2 = validation_1.to_maybe()
    var_2.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    set_0 = {none_type_0}
    list_0 = [set_0, none_type_0]
    bool_0 = False
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bool_0, list_0)
    bytes_0 = b"\x91\xbe\xf2w\xac2\xab\xc0\x01\xfbT\xb8\xa8\x8fj\x165"
    validation_2 = module_0.Validation(none_type_0, bytes_0)
    validation_3 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_2.to_maybe()
    var_2 = var_1.__eq__(none_type_0)
    validation_3.bind(validation_1)


def test_case_7():
    bytes_0 = b"\xa0\xe0\x19\xd4\xe8\xdb\xd2E"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_9():
    str_0 = "z%G8\\<"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.to_try()
    var_6 = var_4.__str__()
    var_1.is_success()


def test_case_10():
    int_0 = -1091
    int_1 = 1581
    set_0 = {int_1, int_1}
    validation_0 = module_0.Validation(set_0, int_1)
    validation_0.map(int_0)


def test_case_11():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.bind(none_type_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = var_0.to_try()
    validation_0.to_maybe()


def test_case_14():
    float_0 = 815.78
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_2 = validation_0.to_box()
    var_3 = validation_1.to_maybe()
    var_3.is_fail()


def test_case_16():
    str_0 = "z%G8<"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.__str__()
