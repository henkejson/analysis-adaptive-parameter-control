# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_1():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"\x80ggb\xbd\x15a\x12\x04\x86\xdf\x92\xaby\xe3y|\x8f"
    validation_1 = module_0.Validation(list_0, bytes_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(list_0, list_0)
    var_3 = var_2.to_box()
    var_4 = var_0.to_lazy()
    var_5 = validation_1.to_try()
    var_6 = var_3.__str__()
    var_7 = validation_2.__str__()
    var_8 = validation_1.to_lazy()


def test_case_2():
    bytes_0 = b"\x9b\x1e\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_0.__str__()
    var_4 = validation_0.__str__()
    var_1.to_lazy()


def test_case_3():
    str_0 = "9B2kT.mWLs1?^4qBF-*="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bytes_0 = b"\xdfwp\x02\xc5\x82\xa5\x13\xc03\x1aZ\xc5\x1f\x07\xaew\xab"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.map(bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    str_0 = "ynPaz7\x0b7E/{)o"
    int_0 = -613
    set_0 = {str_0, int_0}
    int_1 = -1335
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.ap(set_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bool_0)
    var_1.to_try()


def test_case_10():
    int_0 = -3659
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_12():
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"\x80ggb\xbd\x15a\x12\x04\x86\xdf\x92\xabyy|\x8f"
    validation_1 = module_0.Validation(list_0, bytes_0)
    var_1 = validation_1.__eq__(list_0)
    list_1 = []
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(list_0, list_0)
    list_1.to_try()


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(list_0)
    bytes_0 = b"\x80ggb\xbd\x15a\x12\x04\x86\xdf\x92\xabyy|\x8f"
    validation_1 = module_0.Validation(list_0, bytes_0)
    var_2 = validation_1.__eq__(validation_0)
    list_1 = []
    validation_2 = module_0.Validation(list_0, list_0)
    list_1.to_try()
