# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x85\xec9:\x18\xf3\x15xg\xdc\xc3E\x8d\xb2"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_1():
    bytes_0 = b"\x92\xe3b\xad\x8e\x0c\x14\xca\xe4\x99\xf4IX\xd5-\xc6\x8c\xbf\xa7\xac"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    bytes_0.to_either()


def test_case_2():
    bool_0 = False
    bytes_0 = b"\xe1\xb0\x0c\xdce\xbc\x0f\xe1uSl5\x16\xc2"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bool_0)
    list_0 = []
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.is_fail()
    var_1 = validation_1.to_either()
    var_0.to_lazy()


def test_case_3():
    bytes_0 = b"\x92\xe3b\xad\x8e\x0c\x14\xca\xe4\x99\xf4IX\xd5-\xc6\x8c\xbf\xa7\xac"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_0.is_fail()


def test_case_4():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_either()
    complex_0 = 293.7 - 1399.621j
    validation_2 = module_0.Validation(complex_0, complex_0)
    validation_2.is_fail()


def test_case_5():
    bytes_0 = b"\x92\xe3b\xad\x8e\x0c\x14\xca\xe4\x99\xf4IX\xd5-\xc6\x8c\xbf\xa7\xac"
    bytes_0.to_either()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    int_0 = -56
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_8():
    int_0 = 4305
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_0.map(validation_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(validation_0)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bytes_0 = b"R"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.is_fail()
    var_3 = validation_1.__str__()
    var_4 = validation_1.to_lazy()
    var_5 = var_4.to_either()
    var_1.is_fail()


def test_case_13():
    bytes_0 = b"\x92\xe3b\xad\x8e\x0c\x14\xca\xe4\x99\xf4IX\xd5-\xc6\x8c\xbf\xa7\xac"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_15():
    bytes_0 = b"R"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.is_fail()
    var_3 = validation_1.__eq__(validation_0)
    var_4 = validation_1.__str__()
    var_5 = validation_1.to_lazy()
    var_3.is_fail()
