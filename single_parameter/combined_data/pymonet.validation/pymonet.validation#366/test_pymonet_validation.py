# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_try()
    var_3 = var_0.__eq__(var_2)
    var_4 = var_3.__str__()
    var_4.is_success()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_lazy()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_3 = validation_0.is_success()
    var_2.ap(var_2)


def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_1.__eq__(var_2)
    var_4 = validation_0.is_success()
    var_5 = validation_0.to_try()
    var_6 = var_5.__str__()
    var_6.is_success()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_try()
    var_4 = validation_0.is_success()
    var_3.ap(var_3)


def test_case_5():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(none_type_0)
    var_2.is_success()


def test_case_6():
    bytes_0 = b"\xc9\xa35\xd32)\x8f\x0cH\xfe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_7():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.is_success()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    bool_0 = False
    set_0 = {bool_0}
    int_0 = -1924
    tuple_0 = (set_0, int_0, bool_0)
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(tuple_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = var_1.to_try()
    var_3.map(list_0)


def test_case_14():
    bytes_0 = b"^\xc5"
    str_0 = "vXtkq!wb"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bytes_0)
    var_1.to_maybe()


def test_case_15():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(dict_0)
    var_3 = var_2.__eq__(var_0)
    var_4 = validation_0.is_success()
    var_4.to_lazy()


def test_case_16():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_0.__eq__(dict_0)
    var_3 = validation_0.to_lazy()
    var_4 = var_2.__eq__(var_3)
    var_5 = validation_0.is_success()
    var_6 = validation_0.to_try()
    var_7 = var_6.__str__()
    var_7.is_success()


def test_case_17():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.to_try()
