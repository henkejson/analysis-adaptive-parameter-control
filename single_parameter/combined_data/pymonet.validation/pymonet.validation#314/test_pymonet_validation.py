# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(var_1)
    var_4 = validation_0.__str__()
    var_5 = validation_0.__eq__(validation_0)
    var_5.is_success()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    dict_0.ap(validation_0)


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_8():
    int_0 = -3481
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(int_0)


def test_case_9():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_10():
    int_0 = 1583
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = 2184
    dict_1 = {int_0: int_0, int_0: dict_0, int_1: int_0}
    validation_0 = module_0.Validation(dict_1, dict_0)
    var_0 = validation_0.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_12():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.to_try()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, set_0)
    var_1 = validation_1.__str__()
    validation_1.ap(validation_0)


def test_case_14():
    bytes_0 = b"\x1a\xe5\xd3\xc5\xa3\x96\xe4$P0w\xd4\xa3\xa8\xacU\xfe-x\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"\x1a\xe5\xd3\xc5\xa3\x96\xe4$P0w\xd4\xa3\xa8\xacU\xfe-x\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_fail()
    var_2 = var_0.__str__()
    var_3 = validation_0.to_try()
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.is_fail()
    var_6 = var_0.to_try()
    bytes_0.map(bytes_0)


def test_case_16():
    none_type_0 = None
    bytes_0 = b"9\x1b\xa0x]/\xd7 C\xd9\x94\x8e=-+"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(validation_0)
    int_0 = -5196
    validation_0.map(int_0)


def test_case_17():
    bytes_0 = b"\xec\xa23\xa8"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = var_1.to_box()
    var_3 = var_1.map(list_0)
    var_3.to_either()


def test_case_18():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_2)
    var_3 = validation_1.__eq__(validation_0)
    var_4 = validation_0.__str__()
    var_5 = validation_0.__eq__(validation_0)
    var_2.ap(var_2)
