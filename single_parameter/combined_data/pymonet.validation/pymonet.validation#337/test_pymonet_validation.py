# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xd0V6+Z\x00\xa9M\x86\xa8\xcd\xe5{"
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(validation_0, var_0)
    validation_0.to_maybe()


def test_case_1():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.is_fail()


def test_case_2():
    int_0 = 2166
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.map(int_0)


def test_case_3():
    bytes_0 = b"D\x1ba\nv\xb5\xd9\xa2\x00\x84"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(bytes_0)


def test_case_4():
    int_0 = 2241
    set_0 = {int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_5():
    bytes_0 = b"\xd0V6+Z\x00\xa9M\x86\xa8\xcd\xe5{"
    var_0 = bytes_0.__str__()


def test_case_6():
    bytes_0 = b"\xd0V6+\xe3\xa9\x86\xa8\xac\xe5{"
    var_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_7():
    int_0 = -3579
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    bytes_0 = b"\xd0V6+Z\x00\xa9M\x86\xa8\xcd\xe5{"
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_0.map(bool_0)


def test_case_10():
    int_0 = 2461
    float_0 = 720.62
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(int_0)


def test_case_11():
    int_0 = 0
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(int_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_13():
    str_0 = "M>7"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = 582
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.bind(dict_0)


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.bind(none_type_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_16():
    bytes_0 = b"\xd0V6+Z\x00\xa9M\x86\xa8\xcd\xe5{"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.__eq__(bytes_0)
    var_3 = var_0.to_lazy()
    var_2.map(none_type_0)


def test_case_17():
    bytes_0 = b"\xd0V6+Z\x00\xa9M\x86\xa8\xcd\xe5{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_1.map(var_0)
