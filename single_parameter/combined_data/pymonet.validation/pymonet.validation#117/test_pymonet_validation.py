# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x8c\x87t\xe2N\xd9\xfa"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.ap(none_type_0)


def test_case_1():
    bytes_0 = b"X\xde\xb6"
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.to_either()
    bytes_1 = b"!k\xc0"
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_1, none_type_0)
    validation_1.is_fail()


def test_case_2():
    bytes_0 = b"X\xde\xb6"
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    bytes_1 = b"!k\xc0"
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_1, none_type_0)
    validation_1.is_fail()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_5():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    int_0 = -1842
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    bytes_0 = b"\xa1\x87\xf0\xa8\xd9\x05\x805\x95\xbcI\x85"
    float_0 = -1977.084
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(bytes_0)


def test_case_9():
    int_0 = 187
    list_0 = [int_0, int_0, int_0]
    tuple_0 = (list_0, int_0)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.to_box()
    var_1.ap(var_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    int_0 = 2199
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__eq__(int_0)
    validation_0.to_either()


def test_case_12():
    int_0 = -3614
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"X\xde\xb6"
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.__eq__(var_0)
    bytes_1 = b"!k\xc0*\x1d"
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_1, none_type_0)
    validation_1.is_fail()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_15():
    bytes_0 = b""
    str_0 = "6P"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    validation_0.ap(str_0)


def test_case_16():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__eq__(var_1)
    var_2.is_success()


def test_case_17():
    bytes_0 = b"X\xde\xb6"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.__str__()
    var_3 = var_0.map(bytes_0)
    var_0.is_success()


def test_case_18():
    bytes_0 = b"\x8c\x87t\xe2N\xd9\xfa"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_1.to_maybe()
    var_3 = var_2.to_lazy()
    var_4 = validation_1.__eq__(validation_1)
    var_2.is_success()
