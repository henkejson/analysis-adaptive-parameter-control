# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    str_0 = "JN9$CPb0T1ciu(\td_s#"
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.__str__()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(tuple_0)


def test_case_2():
    complex_0 = -101.661 + 2550.8442j
    bytes_0 = b"vH\x85,nG\xa6\xc7\xc4\xcc\xf0]\xac')\x8e>"
    list_0 = [complex_0]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_either()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.is_success()


def test_case_3():
    bool_0 = False
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(bool_0)


def test_case_4():
    int_0 = 1194
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    int_0 = 515
    int_1 = 2080
    tuple_0 = (int_0, int_1)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    validation_0.bind(none_type_0)


def test_case_7():
    str_0 = '\t>RW`"yMnV'
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(str_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(tuple_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.is_fail()


def test_case_11():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(none_type_0)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    validation_0.map(none_type_0)


def test_case_14():
    tuple_0 = ()
    int_0 = 1236
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    validation_0.ap(int_0)


def test_case_15():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "?wJpF|\tMR,+M&"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.__eq__(tuple_0)
    var_2.to_lazy()


def test_case_16():
    tuple_0 = ()
    int_0 = 1194
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(int_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.ap(tuple_0)
