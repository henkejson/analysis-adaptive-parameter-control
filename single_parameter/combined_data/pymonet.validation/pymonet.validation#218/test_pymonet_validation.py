# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(validation_0)


def test_case_1():
    int_0 = -2168
    set_0 = {int_0, int_0, int_0}
    list_0 = [set_0, set_0, set_0]
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.to_box()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"\xbc>mW\x08a;\xee1G\xca\xb2\xec\xa9\xee\xdb"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.__str__()
    var_1.to_lazy()


def test_case_3():
    dict_0 = {}
    str_0 = "^n3+nl\x0c\x0c@aW1F\t"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_1, dict_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.bind(dict_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.bind(dict_0)


def test_case_6():
    bytes_0 = b"QF9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_1.to_maybe()


def test_case_7():
    none_type_0 = None
    float_0 = -1215.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(none_type_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_9():
    float_0 = 3486.8447
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.ap(float_0)


def test_case_10():
    set_0 = set()
    none_type_0 = None
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    list_0 = [object_0, object_0, object_0, dict_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(none_type_0)
    var_1.map(set_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.__eq__(validation_1)
    validation_1.bind(validation_1)


def test_case_12():
    bytes_0 = b"8\xa4\xfe{\x8a}"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = validation_0.to_box()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_4 = validation_1.to_lazy()
    var_5 = var_4.to_maybe()
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_6 = validation_2.__eq__(validation_2)


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.bind(dict_0)


def test_case_14():
    int_0 = 760
    bytes_0 = b"@\xd5\xebu[V\xdb\xf6\xce\x8a\x9f\x86\xfc\x94\xb9WmQ\n"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(int_0)
    var_2 = var_1.__str__()
    var_2.to_box()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.to_maybe()
    validation_1 = module_0.Validation(var_1, var_1)
    var_3 = validation_1.__eq__(validation_0)
    var_3.bind(validation_1)


def test_case_16():
    dict_0 = {}
    bool_0 = False
    dict_1 = {}
    object_0 = module_1.object(**dict_1)
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.to_box()
