# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    complex_0 = -1114.71 - 1691j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_3 = var_0.bind(var_2)
    var_4 = validation_1.__eq__(none_type_0)
    var_5 = validation_1.to_lazy()
    validation_2 = module_0.Validation(var_4, validation_0)
    var_6 = validation_2.__eq__(validation_0)
    var_7 = validation_0.to_lazy()
    var_8 = var_5.__str__()
    var_9 = validation_0.__str__()
    var_8.ap(validation_2)


def test_case_2():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_1.to_either()


def test_case_3():
    str_0 = "pb&7AQc-t+Q8zhN"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(str_0)
    var_1.to_either()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.ap(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_3.ap(list_0)
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_5 = validation_1.__eq__(none_type_0)
    validation_2 = module_0.Validation(var_0, var_1)
    var_6 = validation_0.to_maybe()
    var_5.to_lazy()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bytes_0 = b"Z"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_7():
    int_0 = -2331
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    complex_0 = -250.9 + 1013.9j
    none_type_1 = None
    validation_0 = module_0.Validation(complex_0, none_type_1)
    validation_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    none_type_1 = None
    validation_1.bind(none_type_1)


def test_case_10():
    object_0 = module_1.object()
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(list_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.bind(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.bind(none_type_0)


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(list_0)
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_4 = validation_1.__eq__(none_type_0)
    var_5 = validation_1.to_lazy()
    validation_1.__str__()


def test_case_14():
    none_type_0 = None
    str_0 = "}89\r,KX}D'YY6\rv"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    float_0 = -3092.93
    var_0.map(float_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    int_0 = -1634
    none_type_1 = None
    validation_1 = module_0.Validation(int_0, none_type_1)
    var_0 = validation_1.__eq__(validation_1)
    validation_1.map(int_0)


def test_case_16():
    str_0 = "QmE5$=eh3%_y"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_lazy()
