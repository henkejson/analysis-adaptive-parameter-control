# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    str_0 = "t\x0bE@%vXEc~hLgCAkn"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_0.to_either()


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.is_success()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    complex_0 = -496.562498 - 234.748829j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_5():
    bytes_0 = b"\x18k\n\xe9?\xf5^H"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(bytes_0)
    var_1.is_fail()


def test_case_6():
    bytes_0 = b"i\x8e\x93P\x8c|BAA\xf8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.map(bytes_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_1 = module_0.Validation(validation_0, none_type_1)
    var_0 = validation_1.__eq__(validation_1)
    validation_1.bind(none_type_0)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(dict_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.is_fail()


def test_case_10():
    bytes_0 = b"\xfd{y\xc1\x08a\xf1\x03\xb5\x14"
    bytes_1 = b":\t\x9co\xed"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(bytes_1)
    var_1.bind(bytes_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    validation_2 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_2.to_lazy()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_0.__eq__(none_type_0)
    validation_2 = module_0.Validation(none_type_0, var_0)
    var_2 = validation_0.__eq__(validation_0)


def test_case_13():
    set_0 = set()
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(set_0, bool_0)
    bool_1 = False
    var_0 = validation_0.__eq__(bool_1)
    var_1 = validation_0.to_either()


def test_case_14():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_1 = module_0.Validation(validation_0, none_type_1)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_0.to_box()
    validation_2 = module_0.Validation(none_type_1, var_0)
    var_2 = validation_1.__eq__(validation_2)
    list_0 = [validation_1, none_type_0]
    validation_3 = module_0.Validation(validation_2, list_0)
    var_3 = var_0.__eq__(none_type_0)
    validation_0.to_either()


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(none_type_1)


def test_case_17():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.is_success()
