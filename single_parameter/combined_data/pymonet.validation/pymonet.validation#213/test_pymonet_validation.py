# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = False
    complex_0 = 381.33573 - 270.87j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(bool_1)
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__str__()
    var_2.to_lazy()


def test_case_1():
    bytes_0 = b"\xc9/\xa7\xbcK\xb9\xac\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_2():
    int_0 = 2416
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_0 = validation_2.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_2.__str__()
    var_3 = var_2.__eq__(var_1)
    var_4 = var_1.__eq__(int_0)
    var_5 = var_0.to_either()
    var_6 = var_1.map(int_0)


def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    tuple_0 = (bool_1,)
    validation_0 = module_0.Validation(bool_1, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(dict_0)
    var_2 = var_1.__str__()
    var_2.to_box()


def test_case_4():
    int_0 = 947
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\xc7\x8e\x9b\xea\xed\x8b\x9dTg\xb5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    validation_1.is_fail()


def test_case_7():
    float_0 = 494.454451
    dict_0 = {float_0: float_0, float_0: float_0}
    validation_0 = module_0.Validation(float_0, dict_0)
    validation_0.map(dict_0)


def test_case_8():
    bytes_0 = b"\xdf\x14\n"
    list_0 = [bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(bytes_0)


def test_case_9():
    bool_0 = True
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(bool_0)


def test_case_10():
    str_0 = "pS6Ix3,}/OIh?~0r["
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_1 = module_0.Validation(dict_0, str_0)
    validation_2 = module_0.Validation(dict_0, dict_0)
    validation_2.ap(str_0)


def test_case_11():
    bytes_0 = b"/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    str_0 = "C|%+/Th]5F\r?\\\x0c@i+4+>"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.__eq__(validation_1)
    var_2 = validation_0.__eq__(bool_0)
    var_3 = validation_1.__str__()
    var_3.to_lazy()


def test_case_15():
    list_0 = []
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(list_0, list_0)
    validation_2 = module_0.Validation(var_0, validation_1)
    var_2 = validation_2.__eq__(bool_0)
    var_3 = var_2.__eq__(var_2)
    validation_2.__str__()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_17():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_0.__eq__(validation_1)
    var_1.bind(validation_1)
