# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "Q?S"
    str_1 = "ydEH2 _!0sle+>:i["
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    validation_0.bind(str_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = module_1.object()
    var_1 = validation_0.is_success()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_2():
    set_0 = set()
    set_0.to_lazy()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bytes_0 = b"\x97Y\xef"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    tuple_0 = ()
    bool_0 = False
    str_0 = "\t=E.3z!N8dxmo"
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, str_0: bool_1}
    list_0 = [dict_0, bool_0, bool_0]
    validation_0 = module_0.Validation(dict_0, list_0)
    validation_0.map(tuple_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    str_0 = "\x0cP"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    validation_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_either()
    var_2.to_either()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.map(set_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)


def test_case_14():
    none_type_0 = None
    str_0 = "Maybe[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.__str__()
    var_3.map(none_type_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    tuple_0 = ()
    list_0 = []
    validation_0 = module_0.Validation(list_0, tuple_0)
    list_1 = [list_0]
    validation_1 = module_0.Validation(list_0, list_1)
    var_0 = validation_1.to_either()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_18():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.is_success()
