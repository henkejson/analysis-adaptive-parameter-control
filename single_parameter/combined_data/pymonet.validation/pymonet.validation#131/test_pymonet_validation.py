# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(none_type_0)
    validation_0.to_maybe()


def test_case_1():
    set_0 = set()
    bytes_0 = b"\x9e\xf8u\xf7cI\xf0\x80\x96%U\x1e\x08\xff"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.__eq__(set_0)
    validation_0.bind(var_0)


def test_case_2():
    bytes_0 = b"B\xdf\x00 \xc8\xba@\x92YQ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.ap(var_0)


def test_case_3():
    none_type_0 = None
    str_0 = "m_q# B <Ni*z]Sz#."
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_3.is_success()


def test_case_4():
    bool_0 = True
    bytes_0 = b"B\xdf\x00 \xc8\xba@\x92YQ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(bool_0)


def test_case_5():
    bytes_0 = b"\x0c\x12'\x9a\xee\x84Y'\x11"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    bool_0 = True
    bytes_0 = b"B\xdf\x00 \xc8\xba@\x92YQ"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.ap(bool_0)
    var_2.is_success()


def test_case_8():
    str_0 = "oZav pfA5\n*%2O"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(str_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = var_3.to_try()
    var_6 = validation_0.to_box()
    validation_0.map(var_6)


def test_case_9():
    str_0 = "oZav pfA5\n*%2O"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(str_0)
    var_2 = var_0.__str__()
    validation_0.bind(str_0)


def test_case_10():
    none_type_0 = None
    int_0 = -1806
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(none_type_0)


def test_case_11():
    bytes_0 = b"n\x9d\x90G\xa7\xcd\x92\xee3Y\xbc\x98&\x89\xfa\x01\xc2@"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    list_0 = [tuple_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_12():
    none_type_0 = None
    str_0 = "m_q# B <Ni*z]Sz#."
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.__str__()
    var_5 = validation_0.to_either()
    var_6 = validation_0.to_lazy()
    var_4.is_success()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = True
    int_0 = 2795
    dict_0 = {int_0: int_0}
    none_type_0 = None
    bytes_0 = b"\x18\x89\x12\xf8\x04"
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_box()
    var_2 = var_0.to_lazy()
    var_3 = var_2.__eq__(bytes_0)
    validation_1 = module_0.Validation(dict_0, none_type_0)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = var_0.__eq__(var_3)
    validation_1.bind(bool_0)


def test_case_15():
    bytes_0 = b"\xe4^\xe4\xed\xbb:\xe2\x8d\x8d}\xd8\x03\x90\xf5K\xfeC"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, bytes_0)
    str_0 = ""
    var_0 = validation_0.to_lazy()
    list_0 = [str_0, str_0]
    dict_1 = {str_0: list_0}
    validation_1 = module_0.Validation(dict_1, str_0)
    var_1 = validation_1.to_either()
    var_1.to_either()


def test_case_16():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(none_type_0)


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.to_try()
    var_1 = validation_0.__str__()
