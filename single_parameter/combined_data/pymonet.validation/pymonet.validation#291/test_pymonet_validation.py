# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"{F\x88X\xd0\xf8\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.__str__()
    var_1.to_maybe()


def test_case_1():
    bytes_0 = b"\xe7\xea\x12\xe3O\xdb\xf2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_2():
    float_0 = -1995.74
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_3():
    bytes_0 = b"{F\x88X\xd0\xf8\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.is_success()
    validation_0.map(var_2)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_5():
    str_0 = "QJORbL^ PpA@r?"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_6():
    str_0 = "flH]\tU"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_7():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bytes_0 = b"\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(bool_0)
    var_4 = validation_0.to_maybe()
    var_5 = var_4.map(dict_0)
    var_6 = validation_0.to_lazy()
    var_5.is_success()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_3 = var_2.__str__()
    var_3.is_fail()


def test_case_9():
    int_0 = -2194
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_10():
    int_0 = -2178
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_11():
    bytes_0 = b"\x8b\xb9\xd3\xab&xh\xf4\xa3\xfd\x11 \x15\xb3\x15"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_fail()
    list_0 = [var_1, var_1]
    validation_1 = module_0.Validation(list_0, var_2)
    validation_1.is_success()


def test_case_13():
    int_0 = -1190
    dict_0 = {}
    bool_0 = False
    str_0 = "\x0cBA\"'_'a;,!"
    tuple_0 = (str_0, str_0, bool_0)
    tuple_1 = (bool_0, tuple_0)
    tuple_2 = (int_0, dict_0, dict_0, tuple_1)
    str_1 = ""
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(tuple_2)
    object_0 = module_1.object()
    bool_1 = False
    bytes_0 = b"\x0f"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_either()
    var_4 = var_3.bind(var_3)
    var_5 = validation_1.__eq__(bool_1)
    var_6 = validation_1.to_maybe()
    var_7 = var_6.map(var_3)
    var_8 = validation_1.to_lazy()
    var_7.is_success()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_0.map(none_type_0)


def test_case_15():
    bytes_0 = b"{F\x88X\xd0\xf8\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.to_try()
    var_5 = validation_0.__eq__(validation_0)
    var_6 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_3, var_6)
    var_7 = validation_1.to_box()
    var_8 = validation_0.__eq__(validation_1)
    var_3.to_maybe()
