# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    float_0 = -1297.0
    bytes_0 = b"\n,I\xe4A\xc1B\xefa\x8a\xee\xa4"
    dict_0 = {}
    none_type_1 = None
    validation_0 = module_0.Validation(dict_0, none_type_1)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = none_type_0.__eq__(float_0)
    var_1.to_maybe()


def test_case_1():
    bytes_0 = b"HU7\xe0\xd6\xc7\xa2\xa5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = var_1.__eq__(var_2)
    var_1.is_success()


def test_case_2():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.map(dict_0)


def test_case_3():
    str_0 = ".Fs_OYR]0\x0c>.\\2$%B%$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(str_0)
    var_2 = var_0.to_either()
    var_1.is_success()


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_5():
    int_0 = 5361
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_0.to_try()


def test_case_7():
    bool_0 = True
    str_0 = "Z/?.<'|}"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bool_0)


def test_case_8():
    bytes_0 = b"e\xed[\x17\x93\xe9\x87c\xed\x97\x04}"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(set_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    bool_1 = False
    validation_0.ap(bool_1)


def test_case_10():
    none_type_0 = None
    float_0 = -1297.0
    bytes_0 = b"\n,I\xe4A\xc1B\xefa\x8a\xee\xa4"
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(float_0)
    var_2.ap(none_type_0)


def test_case_11():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_12():
    bytes_0 = b"HU7\xe0\xd6\xc7\xa2\xa5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_box()
    bytes_0.to_box()


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_14():
    bytes_0 = b"HU7\xe0\xd6\xc7\xa2\xa5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_1.__str__()
    validation_1 = module_0.Validation(var_0, var_1)
    var_3 = var_0.__str__()
    var_4 = validation_1.to_box()
    var_5 = validation_0.__eq__(validation_1)
    var_4.map(validation_1)
