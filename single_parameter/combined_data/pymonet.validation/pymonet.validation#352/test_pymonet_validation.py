# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_1, bool_1)
    bool_2 = False
    validation_0 = module_0.Validation(bool_2, tuple_0)
    var_0 = validation_0.__eq__(bool_1)
    validation_1 = module_0.Validation(bool_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.to_either()
    var_1.is_success()


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.to_either()


def test_case_2():
    str_0 = "Cv*_v}?(#2"
    bytes_0 = b"\x92\x15\x8eY\x89lQ\x8fp)\xdd=\x83"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(str_0)


def test_case_3():
    bytes_0 = b"\xdb\xf8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(var_0)


def test_case_4():
    float_0 = 619.95464
    bytes_0 = b"f\x8c\xc1v\xf5\xab"
    validation_0 = module_0.Validation(float_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.to_lazy()
    var_4 = var_0.to_try()
    var_4.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()


def test_case_7():
    float_0 = 619.95464
    bytes_0 = b"f\x8c\xc1v\xf5\xab"
    validation_0 = module_0.Validation(float_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.map(var_0)


def test_case_8():
    bytes_0 = b"\xdb\xf8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    validation_0.bind(var_1)


def test_case_9():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(tuple_0)


def test_case_10():
    float_0 = 619.95464
    bytes_0 = b"f\x8c\xc1v\xf5\xab"
    validation_0 = module_0.Validation(float_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = var_0.__eq__(validation_0)
    var_3 = var_0.to_maybe()
    var_4 = var_1.to_lazy()
    var_5 = var_0.to_try()
    var_5.to_either()


def test_case_11():
    int_0 = 298
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    float_0 = 619.95464
    bytes_0 = b"f\x8c\xc1v\xf5\xab"
    validation_0 = module_0.Validation(float_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.to_lazy()
    var_4 = var_0.to_try()
    var_5 = validation_0.to_try()
    var_6 = var_2.__eq__(var_0)
    var_6.is_success()


def test_case_13():
    str_0 = "?~'"
    bytes_0 = b"\x00I\x0e\xc9>&sVgH\xe8\x96\x88"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    validation_0.ap(bytes_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = var_0.__str__()
