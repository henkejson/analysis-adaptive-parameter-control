# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(str_0)
    var_1.to_box()


def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.map(none_type_0)


def test_case_2():
    bytes_0 = b"\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_2.to_either()


def test_case_3():
    bytes_0 = b"=\x89\x87\xcf)|# \x98\xd5t+\x8b\xd8Bs"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_either()
    dict_0 = {}
    validation_1 = module_0.Validation(dict_0, validation_0)
    var_4 = validation_0.is_fail()
    var_1.is_fail()


def test_case_4():
    bytes_0 = b"=\x89\x87\xcf)|# \x98\xd5t+\x8b\xd8Bs"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)


def test_case_5():
    dict_0 = {}
    dict_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_0.map(var_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(validation_1)


def test_case_9():
    complex_0 = -2150.78709 - 765.9j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.ap(validation_0)


def test_case_10():
    object_0 = module_1.object()
    none_type_0 = None
    validation_0 = module_0.Validation(object_0, none_type_0)
    float_0 = -3510.7999
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.to_box()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_0.__eq__(validation_0)
    var_2.is_success()


def test_case_11():
    bytes_0 = b"^?\x0c+\xc2\xa9s\xd7\x9f\xe6<\xa6\x07\x1b\xdbT\xe2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_12():
    float_0 = 182.5
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.ap(float_0)


def test_case_13():
    object_0 = module_1.object()
    none_type_0 = None
    validation_0 = module_0.Validation(object_0, none_type_0)
    float_0 = -3510.7999
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.to_box()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_0.__eq__(validation_0)
    validation_1.to_try()


def test_case_14():
    bytes_0 = b"=\x89\x87\xcf)|# \x98\xd5t+\x8b\xd8Bs"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_success()


def test_case_16():
    object_0 = module_1.object()
    none_type_0 = None
    validation_0 = module_0.Validation(object_0, none_type_0)
    float_0 = -3510.7999
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_0.__eq__(validation_0)
    validation_1.to_try()
