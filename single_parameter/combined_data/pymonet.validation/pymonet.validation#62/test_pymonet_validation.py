# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x04\x81\xba\xcb\x04\xb2\x1b\x02\xca\x14\x1e\xb4\xdc"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_either()
    set_0.to_lazy()


def test_case_2():
    str_0 = "759onQ7.-).?8."
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.map(str_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    float_0 = 1460.71403
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_7():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(str_0, var_0)
    validation_0.bind(str_0)


def test_case_8():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_maybe()
    validation_0.ap(var_1)


def test_case_9():
    int_0 = -330
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.map(int_0)


def test_case_10():
    int_0 = -2419
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_either()
    var_0.is_fail()


def test_case_12():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(str_0)
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.to_try()


def test_case_13():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.__str__()
    validation_0.ap(validation_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_15():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, str_0)
    var_1.to_lazy()


def test_case_16():
    str_0 = "wJ1"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.to_try()
    none_type_0 = None
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    complex_0 = 2493.57 + 3179.5260198039446j
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_5 = validation_1.to_lazy()
    validation_1.ap(complex_0)


def test_case_17():
    str_0 = "wJ1"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    validation_1 = module_0.Validation(set_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = var_0.__eq__(var_0)
    var_1.to_try()
