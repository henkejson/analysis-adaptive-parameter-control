# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_box()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_0.__eq__(validation_1)
    var_3.to_box()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.__str__()
    var_2 = validation_1.to_maybe()
    var_3 = var_1.__eq__(var_1)


def test_case_2():
    str_0 = ":\x0c~cG\rr\x0bp"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    bool_0 = True
    str_1 = "%"
    dict_0 = {bool_0: bool_0, str_1: str_1, str_0: validation_0}
    var_0 = validation_0.__str__()
    tuple_0 = (bool_0, str_0, dict_0)
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_1 = validation_1.is_fail()
    var_2 = validation_0.to_either()
    bool_1 = False
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    dict_1 = {}
    validation_2 = module_0.Validation(dict_1, dict_1)
    none_type_0 = None
    var_3 = var_2.map(none_type_0)
    validation_2.map(set_0)


def test_case_3():
    bytes_0 = b"{\xc3\x1a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.ap(bytes_0)


def test_case_4():
    int_0 = -4410
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    bytes_0 = b"\x03\x03\xe5\xb3\xc1\xd7\xe9\xe0W"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_0.to_either()


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    validation_2 = module_0.Validation(var_0, list_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_2.__eq__(validation_2)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_8():
    list_0 = []
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(list_0)


def test_case_9():
    bytes_0 = b"{\xc3\x1a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_10():
    int_0 = 482
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()


def test_case_11():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = validation_0.to_lazy()
    validation_2 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_2.to_box()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_1.__str__()
    var_3 = validation_1.to_maybe()
    var_1.to_lazy()


def test_case_12():
    str_0 = '?R/?\rQ(":a'
    bytes_0 = b"\xd3\xdb\x8d7\x88\xca"
    set_0 = set()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: set_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_1 = validation_0.to_lazy()
    var_1 = validation_1.map(str_0)
    var_1.to_box()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_either()
    var_1 = validation_0.__str__()
    validation_2 = module_0.Validation(var_1, list_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_2.__eq__(validation_2)


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.__eq__(validation_1)
    var_2 = var_1.__eq__(var_1)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(list_0, validation_0)
    var_1 = validation_1.to_box()
    var_2 = validation_1.to_box()
    var_3 = validation_0.__eq__(validation_1)
    var_4 = var_3.__str__()
    validation_1.to_maybe()
