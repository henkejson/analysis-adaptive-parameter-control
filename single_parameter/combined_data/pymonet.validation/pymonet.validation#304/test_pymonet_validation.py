# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.to_either()


def test_case_1():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_either()


def test_case_2():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(var_0)
    var_3 = var_0.__str__()
    var_4 = validation_0.to_either()
    var_5 = var_0.to_try()
    var_6 = var_4.to_try()


def test_case_3():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.to_lazy()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\xcaH\xa1\xf8w:\xa9\xa54p>\x0f\x03^M\xe7\xab3\x8b"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(none_type_0)


def test_case_7():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_try()
    validation_0.bind(var_3)


def test_case_8():
    float_0 = 1494.53
    dict_0 = {float_0: float_0}
    tuple_0 = (float_0, dict_0, float_0)
    validation_0 = module_0.Validation(float_0, dict_0)
    validation_0.ap(tuple_0)


def test_case_9():
    float_0 = -563.679
    bool_0 = False
    dict_0 = {float_0: bool_0, float_0: bool_0, bool_0: float_0}
    int_0 = 0
    tuple_0 = (dict_0, bool_0, bool_0, int_0)
    list_0 = [tuple_0, bool_0, float_0]
    tuple_1 = (list_0, list_0, dict_0)
    tuple_2 = (tuple_1, tuple_1, tuple_1)
    float_1 = -766.6
    validation_0 = module_0.Validation(float_1, float_1)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(tuple_2)


def test_case_10():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_1.__eq__(validation_0)
    var_3 = validation_0.to_either()
    var_4 = var_3.to_try()
    var_5 = validation_0.to_try()


def test_case_11():
    str_0 = "\x0cB5R\nj.] vK47$>e"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_2 = var_1.__eq__(str_0)
    var_3 = var_1.__eq__(var_2)
    var_4 = var_0.to_box()
    var_5 = var_2.__str__()
    var_5.to_either()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    float_0 = -941.0
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()
    var_2.bind(float_0)


def test_case_14():
    bytes_0 = b"\x8c\xc2)\xb3\xc0RAPA'q\xaa\xd3\x97Yy"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    var_1.to_either()
