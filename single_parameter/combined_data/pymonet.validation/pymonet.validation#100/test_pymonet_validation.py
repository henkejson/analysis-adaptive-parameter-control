# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "hQa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(set_0)
    var_1.is_fail()


def test_case_1():
    str_0 = "hQa:M+}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    str_0 = " Qa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(set_0, var_1)
    var_1.is_fail()


def test_case_3():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bool_0)
    var_0.map(validation_0)


def test_case_4():
    str_0 = "hQa:M+}"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    str_0 = "hQa:M+}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = "hQa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(set_0)
    validation_0.bind(var_1)


def test_case_9():
    str_0 = "hQa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(set_0)
    validation_0.ap(var_1)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.to_box()
    set_0.to_try()


def test_case_11():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_1.is_success()


def test_case_13():
    str_0 = "hQa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.is_fail()
    object_0 = module_1.object()
    object_0.ap(var_0)


def test_case_14():
    str_0 = "hQa:M+}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_box()
    var_1.is_fail()


def test_case_15():
    str_0 = "hQa:M+}"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(set_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_fail()
    var_1.is_fail()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.map(var_0)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_18():
    str_0 = "h:M+}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_1.bind(var_0)
