# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.bind(none_type_0)


def test_case_1():
    str_0 = "7T810N-FRN5E"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()


def test_case_4():
    int_0 = -34
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    list_0 = [none_type_0, validation_0, validation_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.is_fail()
    var_2 = validation_0.to_lazy()
    var_0.to_maybe()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    list_0 = [none_type_0, validation_0, validation_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.to_either()
    validation_0.map(var_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    list_0 = [none_type_0, validation_0, validation_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.is_fail()
    var_2 = validation_0.to_lazy()
    validation_1.ap(list_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_10():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(validation_0)
    var_2 = var_0.ap(validation_0)
    var_3 = validation_0.to_lazy()
    var_4 = var_0.map(var_0)
    var_5 = validation_0.__str__()
    var_6 = validation_0.to_either()
    var_7 = var_4.to_box()
    var_8 = var_4.bind(var_5)
    var_9 = var_4.map(var_5)
    validation_1 = module_0.Validation(var_9, var_7)
    var_10 = var_3.__eq__(var_4)
    validation_2 = module_0.Validation(var_8, var_2)
    var_11 = var_3.to_either()


def test_case_11():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.map(none_type_0)


def test_case_13():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    list_0 = [none_type_0, validation_0, validation_0]
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(list_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    list_0 = [none_type_0, validation_0, validation_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.is_fail()


def test_case_15():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_0.to_box()


def test_case_16():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    validation_0.map(str_0)
