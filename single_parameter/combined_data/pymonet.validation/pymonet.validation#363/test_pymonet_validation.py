# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_1.to_box()
    var_1.is_success()


def test_case_1():
    int_0 = -2245
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    int_0.is_fail()


def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_try()
    var_2.to_maybe()


def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = var_1.__str__()
    validation_0.ap(var_1)


def test_case_4():
    float_0 = 2686.984
    float_0.is_fail()


def test_case_5():
    int_0 = -2629
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_8():
    bytes_0 = b"\x96\xad\xa7\xeb\xad\x9d'\x1d\x1d\x9c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_0.map(var_0)


def test_case_9():
    bytes_0 = b"\x87\xc5Eu\x87=[{Z#\x87\xb3\x13\xad"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.bind(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.is_fail()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_12():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    bytes_0 = b"\x96\xad\xa7\xeb\xad\x9d'\x1d\x1d\x9c"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.bind(bytes_0)


def test_case_13():
    complex_0 = -2421.998 - 372.21083j
    int_0 = 1405
    tuple_0 = (complex_0, int_0)
    set_0 = {tuple_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = module_0.Validation(str_0, str_0)
    var_1 = var_0.to_either()
    var_1.map(str_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.is_fail()


def test_case_17():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_1.to_try()
