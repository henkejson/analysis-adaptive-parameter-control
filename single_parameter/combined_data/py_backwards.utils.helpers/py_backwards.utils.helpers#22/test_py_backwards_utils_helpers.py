# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    str_0 = "dw\r'R[*Pi;'vYk6^i"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    float_0 = 333.5215717875201
    callable_0 = module_0.eager(float_0)
    none_type_0 = module_0.debug(callable_0)


def test_case_3():
    str_0 = "V~iq{Uk/,$Dh)H*q@gA]"
    none_type_0 = module_0.warn(str_0)
    bool_0 = True
    callable_0 = module_0.eager(bool_0)
    callable_1 = module_0.eager(callable_0)
    str_1 = 'P"9'
    callable_2 = module_0.eager(callable_1)
    module_0.get_source(str_1)


def test_case_4():
    str_0 = "dw\r'R[*Pi;'vYk6^i"
    none_type_0 = module_0.debug(str_0)
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    bool_0 = True
    callable_0 = module_0.eager(bool_0)
    callable_1 = module_0.eager(callable_0)
    none_type_0 = module_0.warn(bool_0)
    none_type_1 = module_0.warn(callable_0)
    callable_2 = module_0.eager(callable_0)
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator()
    callable_1.__call__(callable_0, callable_0)
