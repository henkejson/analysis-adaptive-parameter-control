# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import locale as module_0
import py_backwards.utils.helpers as module_1
import enum as module_2
import re as module_3


def test_case_0():
    error_0 = module_0.Error()
    none_type_0 = module_1.debug(error_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    enum_dict_0 = module_2._EnumDict()
    callable_0 = module_1.eager(enum_dict_0)
    list_0 = []
    callable_1 = module_1.eager(list_0)
    none_type_0 = None
    callable_2 = module_1.eager(none_type_0)
    none_type_1 = module_1.debug(callable_1)
    module_3.finditer(none_type_0, none_type_0, none_type_0)


def test_case_3():
    str_0 = "H/57\nj"
    var_0 = module_3.template(str_0)
    module_1.get_source(var_0)


def test_case_4():
    str_0 = "_'VpZ1/^8yD<_c_u*"
    none_type_0 = module_1.warn(str_0)
    none_type_1 = module_1.debug(none_type_0)


def test_case_5():
    bytes_0 = b"Gr\x12Z\xc7`5h\x06V\xc5\x81\x116\xe7"
    none_type_0 = module_1.debug(bytes_0)
    str_0 = "ed)K_qU\tN vq"
    none_type_1 = None
    callable_0 = module_1.eager(none_type_1)
    none_type_2 = module_1.warn(none_type_1)
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_3 = module_1.warn(str_0)
    str_1 = "/"
    module_3.subn(str_1, callable_0, str_1)
