# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    str_0 = '8X)@St\n!G?6E"@fe'
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    enum_dict_0 = module_1._EnumDict()
    none_type_0 = module_0.debug(enum_dict_0)
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(enum_dict_0)


def test_case_3():
    regex_flag_0 = module_2.RegexFlag.VERBOSE
    module_0.get_source(regex_flag_0)


def test_case_4():
    str_0 = "~dQA~/.o~ALL#"
    none_type_0 = module_0.warn(str_0)
    var_0 = module_1._EnumDict()
    none_type_1 = module_0.debug(var_0)
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(var_0)
    callable_1 = module_0.eager(callable_0)


def test_case_5():
    str_0 = ""
    callable_0 = module_0.eager(str_0)
    none_type_0 = module_0.debug(str_0)
    module_2.sub(str_0, callable_0, str_0)
