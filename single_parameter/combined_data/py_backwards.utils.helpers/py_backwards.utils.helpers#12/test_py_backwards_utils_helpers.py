# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    enum_dict_0 = module_1._EnumDict()
    callable_0 = module_0.eager(enum_dict_0)
    str_0 = "{4kj'"
    none_type_2 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    module_2.escape(none_type_0)


def test_case_3():
    list_0 = []
    module_0.get_source(list_0)


def test_case_4():
    str_0 = "Compiles:\n    \n        {1: 1, **dict_a}\n        \n    To:\n    \n        _py_backwards_merge_dicts([{1: 1}], dict_a})\n    \n    "
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    str_0 = "Y&4"
    none_type_1 = module_0.debug(none_type_0)
    var_0 = module_2.escape(str_0)
    none_type_2 = None
    callable_0 = module_0.eager(none_type_2)
    none_type_3 = module_0.debug(var_0)
    var_1 = module_2.template(var_0)
    callable_0.__call__(none_type_0, none_type_0, none_type_3)
