# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    var_0 = module_0.purge()
    set_0 = {var_0, var_0, var_0}
    none_type_0 = module_1.warn(set_0)
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_1 = module_1.warn(variables_generator_0)
    callable_0 = module_1.eager(variables_generator_0)


def test_case_3():
    var_0 = module_0.purge()
    set_0 = {var_0, var_0, var_0}
    none_type_0 = module_1.warn(set_0)
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_1 = module_1.warn(variables_generator_0)
    none_type_2 = module_1.debug(var_0)
    module_1.get_source(none_type_1)


def test_case_4():
    str_0 = "splitvalue"
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    bytes_0 = b"\x16\x1d\xbd\xb8B(9\xb6j\xf6h\xc6\x83Pz"
    none_type_0 = module_1.debug(bytes_0)
    str_0 = "p"
    callable_0 = module_1.eager(bytes_0)
    none_type_1 = module_1.warn(str_0)
    var_0 = module_1.eager(none_type_0)
    var_0.__call__(var_0, none_type_1, module=str_0)
