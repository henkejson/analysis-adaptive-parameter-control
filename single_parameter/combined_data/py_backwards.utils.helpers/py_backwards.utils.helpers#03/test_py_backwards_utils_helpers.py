# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    variables_generator_0 = module_0.VariablesGenerator()
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    variables_generator_1 = module_0.VariablesGenerator()
    list_0 = [dict_0, dict_0]
    module_1.escape(list_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    int_0 = -2554
    none_type_0 = module_0.debug(int_0)
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "unquoe"
    none_type_1 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    str_0 = ""
    none_type_2 = module_0.warn(str_0)
    none_type_3 = module_0.debug(none_type_2)
    callable_0 = module_0.eager(str_0)
    callable_0.__call__(none_type_0, str_0)
