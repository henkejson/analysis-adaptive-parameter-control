# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = 'GS"!Z\\aDP9\t|L\\si2\x0c'
    var_0 = module_1.escape(str_0)
    callable_0 = module_0.eager(var_0)
    str_1 = "\x0b=bZ_]v!G$fxc"
    dict_0 = {str_0: str_0, str_1: str_0}
    none_type_0 = module_0.warn(callable_0)
    module_0.VariablesGenerator(**dict_0)


def test_case_3():
    dict_0 = {}
    module_0.get_source(dict_0)


def test_case_4():
    bytes_0 = b"|\x0b"
    list_0 = [bytes_0]
    none_type_0 = module_0.warn(list_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.debug(variables_generator_0)
    str_0 = "oy_Y/a"
    module_1.sub(str_0, callable_0, str_0)
