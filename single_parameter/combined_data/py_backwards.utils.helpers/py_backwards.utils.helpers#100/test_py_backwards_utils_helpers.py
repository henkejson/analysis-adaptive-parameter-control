# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    bytes_0 = b"\xfe@\xe6\xd8"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(none_type_0)
    none_type_2 = module_0.debug(none_type_0)


def test_case_3():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)
    str_0 = 'I*4+XS=/>\r%H\r{\x0cg~n"'
    none_type_1 = module_0.warn(str_0)
    none_type_2 = module_0.warn(bool_0)
    none_type_3 = module_0.warn(none_type_1)
    callable_0 = module_0.eager(none_type_0)
    module_0.get_source(none_type_1)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    str_0 = "yU4F#9Z<,\n2%"
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(str_0)
    variables_generator_1 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(str_0)
    str_1 = '-\tRub"^+R\ratE'
    callable_0.__call__(str_0, variables_generator_0, start=str_1)
