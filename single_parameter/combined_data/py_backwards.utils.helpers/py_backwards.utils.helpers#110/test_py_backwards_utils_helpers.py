# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import builtins as module_1
import re as module_2


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "'Ys!ae_*`\x0c!P"
    callable_0 = module_0.eager(str_0)
    var_0 = callable_0.__dir__()
    none_type_0 = module_0.debug(var_0)
    none_type_1 = module_0.debug(var_0)
    callable_1 = module_0.eager(none_type_1)


def test_case_3():
    complex_0 = 283.563974 - 2079j
    module_0.get_source(complex_0)


def test_case_4():
    base_exception_0 = module_1.BaseException()
    none_type_0 = module_0.warn(base_exception_0)
    none_type_1 = module_0.warn(none_type_0)
    module_2.match(none_type_0, base_exception_0)


def test_case_5():
    none_type_0 = None
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)
    none_type_3 = module_0.debug(callable_0)
    str_0 = "\x0cWG"
    none_type_4 = module_0.warn(str_0)
    variables_generator_1 = module_0.VariablesGenerator()
    var_0 = module_0.eager(none_type_4)
    var_0.__call__(none_type_2, none_type_1)
