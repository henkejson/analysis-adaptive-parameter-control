# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    variables_generator_0 = module_0.purge()
    none_type_0 = module_1.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\x18\xb1M\xa4\x1ck\xf3\xca\xabW\xe34\xc2\x01\\\x83\xdf"
    var_0 = module_0.compile(bytes_0)
    callable_0 = module_1.eager(var_0)
    none_type_0 = module_1.debug(var_0)
    callable_1 = module_1.eager(var_0)
    variables_generator_0 = module_1.VariablesGenerator()
    module_1.get_source(callable_0)


def test_case_3():
    none_type_0 = None
    module_1.get_source(none_type_0)


def test_case_4():
    str_0 = "_*\\*\\ 0m4D)HB(i$3T=Y"
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    float_0 = -868.03928
    callable_0 = module_1.eager(float_0)
    callable_1 = module_1.eager(callable_0)
    callable_2 = module_1.eager(float_0)
    callable_3 = module_1.eager(callable_2)
    none_type_0 = module_1.debug(callable_3)
    callable_3.__call__(callable_3, callable_3)
