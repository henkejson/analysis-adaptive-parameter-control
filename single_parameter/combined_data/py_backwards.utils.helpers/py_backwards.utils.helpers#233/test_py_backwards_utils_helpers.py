# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    variables_generator_0 = module_0.purge()
    none_type_0 = module_1.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_1.VariablesGenerator()
    variables_generator_1 = module_1.VariablesGenerator()
    none_type_0 = module_1.debug(variables_generator_1)
    str_0 = "proxy_bypass"
    none_type_1 = module_1.warn(str_0)
    callable_0 = module_1.eager(none_type_1)
    callable_1 = module_1.eager(none_type_0)
    module_1.get_source(callable_1)


def test_case_3():
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_0 = module_1.debug(variables_generator_0)
    module_1.get_source(variables_generator_0)


def test_case_4():
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_0 = module_1.warn(variables_generator_0)
    module_1.get_source(none_type_0)


def test_case_5():
    complex_0 = 1301.735622 + 3662.21925j
    callable_0 = module_1.eager(complex_0)
    callable_1 = module_1.eager(callable_0)
    none_type_0 = None
    callable_2 = module_1.eager(none_type_0)
    none_type_1 = None
    none_type_2 = module_1.warn(callable_1)
    callable_1.__call__(none_type_1, none_type_0, qualname=none_type_0)
