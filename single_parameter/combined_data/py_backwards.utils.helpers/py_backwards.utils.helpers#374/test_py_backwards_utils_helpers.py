# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1
import enum as module_2


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    var_0 = module_2._EnumDict()
    str_0 = var_0.__dir__()
    callable_0 = module_1.eager(var_0)
    none_type_0 = module_1.debug(var_0)
    var_0.__getitem__(none_type_0, var_0)


def test_case_3():
    str_0 = '{red}Permission denied to "{output}"{reset}'
    var_0 = module_0.match(str_0, str_0)
    none_type_0 = module_1.warn(var_0)
    variables_generator_0 = module_1.VariablesGenerator()
    module_1.get_source(variables_generator_0)


def test_case_4():
    int_0 = -250
    none_type_0 = module_1.debug(int_0)
    str_0 = ":eI\ntRueZo#"
    none_type_1 = module_1.warn(str_0)
    str_1 = "%r#nE+$"
    none_type_2 = module_1.warn(str_1)


def test_case_5():
    str_0 = "YH65uES@l)!&.,"
    callable_0 = module_1.eager(str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    callable_0.__call__(callable_0, list_0, module=callable_0)
