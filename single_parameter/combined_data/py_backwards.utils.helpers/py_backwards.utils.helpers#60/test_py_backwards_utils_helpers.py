# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_4():
    str_0 = "{:"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(str_0)


def test_case_5():
    bytes_0 = b"4\xf7\xd2\xda\xe20Ru"
    str_0 = "NXG$t7"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(bytes_0)
    none_type_2 = module_0.warn(none_type_0)
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    none_type_3 = module_0.warn(none_type_1)
    callable_1 = module_0.eager(callable_0)
    list_0 = [bytes_0, bytes_0, bytes_0]
    callable_0.__call__(
        none_type_1,
        none_type_2,
        list_0,
        module=callable_0,
        qualname=callable_0,
        start=none_type_1,
    )
