# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    dict_0 = {}
    variables_generator_1 = module_0.VariablesGenerator(**dict_0)
    str_0 = "_la~gpe>UDg"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(variables_generator_1)
    none_type_2 = module_0.warn(variables_generator_1)
    callable_0 = module_0.eager(none_type_2)


def test_case_3():
    bytes_0 = b"6"
    none_type_0 = module_0.debug(bytes_0)
    none_type_1 = None
    module_0.get_source(none_type_1)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "q]i(i<Y=Sv8"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    callable_0 = module_0.eager(none_type_0)
    callable_1 = module_0.eager(callable_0)
    callable_0.__call__(callable_0, callable_0)
