# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config()
    none_type_0 = config_1.update()
    var_1 = module_1.isdatadescriptor(config_1)
    none_type_1 = config_1.register_type(var_1)
    config_2 = module_0.Config(var_1, var_1, var_1, converters=config_1)
    config_1.update_config(var_1)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, var_0, var_0, converters=config_0)
    config_0.update_config(var_0)


def test_case_3():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0}
    module_0.Config(dict_0, str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "4G* 2a^|"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, var_0, var_0, converters=config_0)
    config_0.update_config(var_0)


def test_case_7():
    bytes_0 = b".\xd7\x18\x1ft\xab\xabG\xb3\x8c\x1b\xfd"
    none_type_0 = None
    module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0, converters=bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.respond(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "p1LZcNi&-x"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.update()
    str_1 = '"88{i&G@~w7]A'
    var_0 = module_1.isclass(str_1)
    config_1.update_config(str_1)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
