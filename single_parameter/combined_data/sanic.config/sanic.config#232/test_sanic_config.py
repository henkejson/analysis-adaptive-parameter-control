# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_1 = module_0.Config(var_0)
    str_0 = "9\t"
    config_2 = module_0.Config(env_prefix=str_0, converters=config_0)
    config_0.__setattr__(none_type_0, config_2)


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(bool_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = None
    config_2 = module_0.Config(
        env_prefix=none_type_1, keep_alive=config_0, converters=none_type_1
    )
    config_3 = module_0.Config(converters=config_2)
    str_0 = "A"
    config_2.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = module_1.LocalCertCreator.AUTO
    var_1 = config_0.load_environment_vars(var_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config()
    module_0.DescriptorMeta(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    module_0.Config(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    str_0 = "\x0c,zwc&R$*iO %/do. "
    none_type_1 = config_0.__setitem__(str_0, var_0)
    config_1 = module_0.Config(converters=var_0)
    var_0.__getattr__(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    int_0 = -621
    tuple_0 = ()
    config_0 = module_0.Config(converters=tuple_0)
    config_0.update_config(int_0)


def test_case_12():
    float_0 = -981.0
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "lm$zs&sa/"
    config_0 = module_0.Config(env_prefix=str_1)
    config_0.__setitem__(str_0, float_0)


def test_case_13():
    local_cert_creator_0 = module_1.LocalCertCreator.TRUSTME
    module_0.Config(
        env_prefix=local_cert_creator_0,
        keep_alive=local_cert_creator_0,
        converters=local_cert_creator_0,
    )
