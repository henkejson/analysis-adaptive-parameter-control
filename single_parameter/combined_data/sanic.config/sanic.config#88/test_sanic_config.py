# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "uNQcV"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "]f/BwyZ,"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(dict_0)
    none_type_1 = None
    none_type_2 = None
    str_1 = "%,jd"
    config_1 = module_0.Config(dict_0, str_1, none_type_1)
    config_2 = module_0.Config(none_type_2, none_type_1, converters=var_0)
    config_1.update_config(var_0)


def test_case_3():
    none_type_0 = None
    str_0 = "%,jd"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    str_0 = "Q2v"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_8():
    float_0 = 744.682557
    module_0.Config(env_prefix=float_0, converters=float_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_10():
    bytes_0 = b"\xbc\x191\xda\x9a\xf8#\x18\r\xab\x8a\x03"
    str_0 = "m\tu/\x0cFB`Ov!"
    tuple_0 = (bytes_0, str_0)
    config_0 = module_0.Config(converters=tuple_0)
    var_0 = module_1.isclass(bytes_0)
    var_0.register(config_0, config_0)


def test_case_11():
    str_0 = "uhQc;("
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    dict_0 = {}
    config_1 = module_0.Config(dict_0)
    var_1 = config_1.update_config(dict_0)
    none_type_1 = None
    str_0 = "%,jd"
    config_2 = module_0.Config(var_1, converters=none_type_1)
    config_2.update_config(str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    dict_0 = {}
    var_1 = config_0.update_config(dict_0)
    none_type_1 = None
    config_1 = module_0.Config(var_1, converters=none_type_1)
    var_0.update_config(dict_0)


def test_case_14():
    complex_0 = 1027.011283 - 2806.36052j
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(complex_0)
    config_0.register_type(complex_0)
