# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = '5"]!:{d'
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "P"
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    config_2 = module_0.Config(env_prefix=str_0)
    complex_0 = 1401.02 - 292.36051j
    none_type_0 = config_2.register_type(complex_0)


def test_case_3():
    str_0 = "P"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    list_0 = []
    config_0 = module_0.Config(list_0, converters=list_0)
    config_0.__getattr__(list_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_8():
    list_0 = []
    config_0 = module_0.Config(list_0, list_0)
    str_0 = "P"
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.__getattr__(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    str_0 = "4W"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    str_1 = "SANIC_"
    config_1 = module_0.Config(env_prefix=str_1)
    default_0 = module_1.Default()
    var_0 = config_0.update_config(config_1)
    var_1 = module_2.getmembers(var_0, var_0)
    var_1.__instancecheck__(var_0, var_0)


def test_case_11():
    str_0 = "4W"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_12():
    list_0 = []
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_2.getmembers(str_0, list_0)
    config_0.update_config(list_0)


def test_case_13():
    str_0 = '"_^{7b+xVL7\nrpU\x0c3'
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_14():
    str_0 = "P"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_15():
    list_0 = []
    config_0 = module_0.Config(list_0, list_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "_"
    var_1 = config_0.update_config(config_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=str_0)
    config_0.update_config(none_type_0)
