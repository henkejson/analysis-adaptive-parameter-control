# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import sanic.errorpages as module_2
import sanic.helpers as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    set_0 = set()
    bool_0 = False
    bool_1 = True
    module_0.Config(set_0, keep_alive=bool_0, converters=bool_1)


def test_case_2():
    float_0 = -4423.93
    module_0.Config(env_prefix=float_0, keep_alive=float_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0)
    dict_0 = {}
    config_2 = module_0.Config(dict_0)
    module_1.Http(config_1)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    int_0 = 503
    str_0 = "--access-logs"
    str_1 = ";*&xjgm4'n*L3jdcf"
    dict_0 = {str_0: int_0, str_1: int_0}
    module_0.Config(dict_0, converters=str_0)


def test_case_6():
    dict_0 = {}
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(dict_0)
    module_2.check_error_format(dict_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0)
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = ")lP)VVc:EyWH`<"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, keep_alive=none_type_1)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "\x0cT, 8t:j=]hUQS"
    config_0.update_config(str_0)


def test_case_12():
    dict_0 = {}
    config_0 = module_0.Config()
    var_0 = module_0.Config(dict_0, converters=config_0)
    var_1 = module_3.Default()
    var_2 = var_1.__repr__()
    var_1.update()
