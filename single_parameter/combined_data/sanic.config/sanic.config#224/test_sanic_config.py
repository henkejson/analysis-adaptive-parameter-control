# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "49|^6#\x0bm29)6,>"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(dict_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    var_1 = config_0.update_config(config_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    str_0 = "yn,x"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_8():
    config_0 = module_0.Config()
    bytes_0 = b"\xc2\xdct"
    config_0.update_config(bytes_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    config_1 = module_0.Config()
    var_0 = module_0.Config(converters=config_0)
    none_type_0 = config_0.update(**config_0)
    bytes_0 = b"\x85o\x8c\xf2T\x83=[q\xf0\xb2\x87\xd0\xc3"
    var_1 = module_1.getmembers(config_0)
    var_2 = module_1.isdatadescriptor(bytes_0)
    float_0 = 1.1
    var_1.__instancecheck__(var_2, float_0)


def test_case_10():
    str_0 = "WEBSOCKET_PING_INTERVAL"
    module_0.Config(converters=str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(bool_0, bool_0)
    module_0.DescriptorMeta(bool_0)


def test_case_12():
    str_0 = "-6.HLI"
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=str_0)
    config_0.update_config(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_14():
    str_0 = "49|^6#\x0bm29)6,>"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, converters=none_type_0)
