# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = config_0.update(**config_0)
    config_1.update_config(none_type_0)


def test_case_2():
    int_0 = -4484
    str_0 = "5.@l1KMd"
    str_1 = "Uvr"
    bool_0 = False
    dict_0 = {str_0: int_0, str_0: str_0, str_1: bool_0}
    config_0 = module_0.Config(dict_0)
    str_2 = "Websocket frame assembler chunks queue ended before message was complete."
    str_3 = "+de>$ef#\\?:#"
    module_1.load_module_from_file_location(str_2, str_3)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "\n        Run a HTTP connection.\n\n        Timeouts and some additional error handling occur here, while most of\n        everything else happens in class Http or in code called from there.\n        "
    module_0.Config(converters=str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    config_2 = module_0.Config()


def test_case_8():
    bytes_0 = b"Network Authentication Required"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_9():
    float_0 = 765.08657
    module_0.Config(env_prefix=float_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    config_2 = module_0.Config()


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(keep_alive=none_type_1, converters=none_type_1)
    config_0.__setitem__(config_1, none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    tuple_0 = ()
    var_0 = module_2.getmembers(config_0, tuple_0)
    list_0 = [config_1, var_0, config_1]
    none_type_0 = config_0.update(*list_0, **config_1)
    var_0.update_config(var_0)
