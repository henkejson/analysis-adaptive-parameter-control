# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    dict_0 = {}
    float_0 = 2788.72
    module_0.Config(dict_0, converters=float_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = False
    none_type_0 = config_0.register_type(bool_1)
    config_0.update_config(bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )


def test_case_4():
    bytes_0 = b"\xde\xf3;"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(bytes_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, none_type_1)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_8():
    str_0 = "R]H1&i_}TO"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    none_type_1 = config_0.update()
    none_type_2 = None
    var_1 = module_1.getmembers(none_type_2)
    config_0.update_config(var_1)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.update(**config_0)


def test_case_10():
    str_0 = "R]H1&i_}TO"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    bool_0 = False
    config_1 = module_0.Config(env_prefix=bool_0, converters=bool_0)
    none_type_1 = None
    var_1 = module_1.getmembers(none_type_1)
    module_0.Config(config_1, config_1, bool_0)


def test_case_11():
    bool_0 = False
    str_0 = "%fBPxe{4eU;ECkhR#k"
    config_0 = module_0.Config(bool_0, str_0, bool_0)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.update(**config_0)


def test_case_13():
    str_0 = "R]H1&i_}TO"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.getmembers(str_0)
    none_type_0 = config_0.update()
    module_0.Config(env_prefix=var_0, converters=var_0)


def test_case_14():
    str_0 = ".-EH\n"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    dict_0 = {}
    none_type_1 = config_0.register_type(var_0)
    none_type_2 = config_0.update(**dict_0)
    config_0.register_type(var_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "j*>ls\t]?xgm7L"
    config_0.update_config(str_0)


def test_case_16():
    str_0 = "R]H1&i_}TO"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_0)
