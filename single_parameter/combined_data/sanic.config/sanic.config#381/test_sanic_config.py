# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Experienced exception while trying to serve"
    int_0 = 12
    dict_0 = {int_0: str_0, str_0: str_0, int_0: str_0}
    bytes_0 = b"\xf2\xbb0&/\x07\x07\xa1a\x89\xa9O\x10\xf6k?\x8f\x19\xad"
    module_0.Config(dict_0, keep_alive=dict_0, converters=bytes_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    str_0 = "K\\B/{B\t*\\1tfDg"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "0jj)B5"
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_7():
    list_0 = []
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(list_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    config_2 = module_0.Config(none_type_0, none_type_0, converters=config_1)
    module_0.Config(env_prefix=config_1, keep_alive=none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.load_environment_vars(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    config_0.__getattr__(bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
