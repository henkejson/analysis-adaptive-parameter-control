# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(none_type_0)


def test_case_2():
    str_0 = "v)B$Ev &R>*Y\x0cn"
    str_1 = "status"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1)


def test_case_3():
    str_0 = "9\\z5Ew"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.register_type(config_0)
    none_type_2 = None
    config_0.update_config(none_type_2)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "status"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    int_0 = 1398
    module_0.Config(converters=int_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_11():
    str_0 = "z5Ew"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_1 = module_0.Config(config_0, converters=var_0)
    module_2.Http(config_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    config_0.__setitem__(str_0, str_0)
