# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = -821
    config_0 = module_0.Config(keep_alive=int_0)


def test_case_2():
    bool_0 = True
    str_0 = "_INIT"
    bool_1 = False
    config_0 = module_0.Config(env_prefix=str_0, converters=bool_1)
    config_0.update_config(bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    module_1.getmembers(config_0, config_0)


def test_case_4():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    none_type_1 = config_0.register_type(var_0)
    var_1 = config_0.__repr__()
    config_0.update_config(var_0)


def test_case_6():
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(converters=var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "DbhBV#p"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.__getattr__(config_0)


def test_case_9():
    int_0 = -821
    config_0 = module_0.Config(keep_alive=int_0)
    config_0.update_config(int_0)


def test_case_10():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = None
    bool_0 = True
    var_1 = module_1.isdatadescriptor(bool_0)
    config_0.update_config(none_type_2)


def test_case_11():
    str_0 = "`\x0cgynCy?_}N:iWrk"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_12():
    int_0 = 2068
    module_0.Config(int_0, int_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_1.isclass(config_0)
    none_type_1 = None
    config_0.__setitem__(none_type_0, none_type_1)


def test_case_14():
    str_0 = "H"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_15():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    str_1 = "P+<2Iv.\nwaU\x0c23k_*=lT"
    config_1 = module_0.Config(none_type_0, str_1, converters=none_type_0)
    config_2 = module_0.Config(converters=config_1)
    var_0 = config_1.update_config(config_2)
    none_type_1 = config_2.register_type(str_1)
    none_type_2 = config_1.__setattr__(str_0, none_type_1)
    none_type_3 = config_2.__setattr__(str_1, none_type_2)
    none_type_4 = None
    config_2.update_config(none_type_4)
