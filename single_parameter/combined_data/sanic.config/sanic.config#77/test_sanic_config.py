# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_1)
    config_0.respond(config_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(env_prefix=none_type_1, keep_alive=config_0)
    config_1.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1 = module_0.Config()


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    int_0 = 16381
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_1)
    config_2 = module_0.Config(config_1, none_type_0)
    config_1.update_config(int_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    str_0 = "S"
    config_0 = module_0.Config(none_type_0, str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    var_0 = module_1.LocalCertCreator.AUTO
    config_0.update_config(var_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    var_0 = config_1.update_config(config_1)
    config_0.update_config(var_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_2)
    config_0.register_type(none_type_2)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_1, converters=config_0)
    str_0 = "websocket_ping_interval"
    none_type_2 = config_0.__setitem__(str_0, config_0)
    none_type_3 = config_1.update()
    str_1 = "S"
    module_0.Config(env_prefix=str_1, converters=config_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_1, converters=config_0)
    none_type_2 = config_1.update()
    config_2 = module_0.Config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_2.__setattr__(str_0, none_type_1)
