# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2
import sanic.constants as module_3
import sanic.helpers as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.isclass(var_0)
    var_2 = var_0.__repr__()
    config_1 = module_0.Config(env_prefix=var_2)
    config_0.__getattr__(config_1)


def test_case_2():
    config_0 = module_0.Config()
    module_2.Http(config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "ENw\x0cH6>{l\r`TO"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    module_0.DescriptorMeta(var_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.log_response()


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    config_2 = module_0.Config(config_1, keep_alive=var_0, converters=config_1)
    config_1.__getattr__(config_2)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    module_0.Config(var_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = module_1.getmembers(config_0)
    var_0.respond(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = config_0.__str__()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_3.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__repr__()
    config_1 = module_0.Config(keep_alive=config_0)
    var_0.__getattr__(var_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    default_0 = module_4.Default()
    var_1 = config_0.__repr__()
    module_0.Config(converters=var_1)


def test_case_14():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = 'U",=8nSU'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_0.Config(dict_0, str_0)
