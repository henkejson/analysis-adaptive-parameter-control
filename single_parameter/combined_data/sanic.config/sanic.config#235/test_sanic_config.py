# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Multiple Choices"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(bytes_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(config_0)
    none_type_1 = config_1.register_type(none_type_0)
    config_1.__setattr__(config_1, config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    str_0 = "_V"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    str_1 = ",A"
    list_0 = [str_1]
    module_1.Http(list_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(config_0)
    list_0 = [config_1, config_0, config_0]
    config_0.__setitem__(config_0, list_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = 'qE3\ra?MCp(ROalT"#]='
    config_0.update_config(str_0)


def test_case_10():
    str_0 = ";u};"
    config_0 = module_0.Config(env_prefix=str_0)
    float_0 = 1484.90217
    module_0.DescriptorMeta(float_0)


def test_case_11():
    str_0 = "g*d$`tLX5\rNLQ}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, dict_0, converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "R<^\rv5>JR)"
    str_1 = "LOCAL_CERT_CREATOR"
    config_1 = module_0.Config()
    config_0.__setitem__(str_1, str_0)
