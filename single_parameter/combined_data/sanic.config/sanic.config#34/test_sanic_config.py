# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    bytes_0 = b"an\xe4\x8c\xc4\xfc)Jn\x13\x98"
    config_0.__getattr__(bytes_0)


def test_case_2():
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0, config_0, converters=config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "SANIC_"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.load_environment_vars()
    var_0.respond(config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    bytes_0 = b"b=E\xad"
    config_0.update_config(bytes_0)


def test_case_10():
    bytes_0 = b":\xd9\x08%p\xbc\x15\x16=\xa2\x80"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0, bool_0)
    module_0.Config(converters=tuple_0)


def test_case_11():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: var_0, str_0: var_0}
    module_0.Config(dict_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.register_type(config_0)
    none_type_2 = module_1.getmembers(none_type_0)
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_1)
