# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    module_0.Config(env_prefix=var_0, converters=config_0)


def test_case_2():
    str_0 = "Q#M%.Nt6W_"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    config_0.__getattr__(var_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "xA_K&$~b\x0c,ZV\x0b\x0c9U{Eh"
    none_type_0 = None
    module_0.Config(keep_alive=none_type_0, converters=str_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "7B/?"
    module_0.Config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_0, none_type_0)


def test_case_13():
    bytes_0 = b'"\xe8\x94\\\x90\xa8\x10\xa3\xae&\x87a\x16'
    str_0 = "i&k2;f5h6KD'r{"
    str_1 = "lvdHA\ny$(X=5x$'"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_1}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)
    config_0.update_config(bytes_0)
