# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xb3\xe1_N\x11\x1c\x94\x16\x00\xe8&9\x1b\xec"
    module_0.Config(env_prefix=bytes_0)


def test_case_2():
    str_0 = "Z\rS"
    none_type_0 = None
    module_0.Config(str_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "x?xuGk\x0b&j_EA5B!"
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=config_0, converters=none_type_0
    )
    none_type_1 = config_1.register_type(none_type_0)
    bytes_0 = b"\xd1Z+\xb9\xc7"
    none_type_2 = config_0.register_type(bytes_0)
    none_type_3 = config_0.register_type(none_type_0)
    str_0 = "`sI=~8Os);"
    none_type_4 = config_1.__setitem__(str_0, none_type_0)
    config_0.__setitem__(bytes_0, config_0)


def test_case_11():
    bytes_0 = b"\x1f\xc7t\xbf\xe2\xbaR>\\\xea_\xa7iF\x99\xa2V\x88t\xdc"
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    module_0.Config(env_prefix=none_type_0, converters=bytes_0)


def test_case_12():
    bool_0 = True
    list_0 = [bool_0]
    config_0 = module_0.Config(converters=list_0)
    config_1 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_1.register_type(config_1)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(none_type_0)


def test_case_13():
    bool_0 = False
    list_0 = [bool_0]
    config_0 = module_0.Config(converters=list_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
