# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    str_0 = "G"
    config_1 = module_0.Config(config_0, str_0)
    config_2 = module_0.Config(keep_alive=config_0)
    var_0 = module_1.isdatadescriptor(config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_3():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "\\v8f6\rM"
    config_0.__getattr__(str_0)


def test_case_5():
    str_0 = "@bt'"
    list_0 = [str_0, str_0]
    str_1 = "o_"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_1, keep_alive=bool_0)
    config_0.__getattr__(list_0)


def test_case_6():
    bytes_0 = b'\x04"\xad'
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, str_0)
    config_2 = module_0.Config(config_1)
    var_1 = module_0.Config(config_1, converters=str_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "Whether the HTTP method is iempotent.\n\n        See https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\n\n        Returns:\n            bool: Whether the HTTP method is iempotent.\n        "
    module_0.Config(converters=str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_1)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = module_1.getmembers(str_0)
    module_0.Config(config_0, str_0, converters=var_0)
