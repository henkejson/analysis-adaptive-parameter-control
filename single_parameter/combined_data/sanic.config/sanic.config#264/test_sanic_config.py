# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\n3\ru&HT:3W+-WNW"
    str_1 = "za"
    str_2 = "}&("
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=str_0)
    dict_1 = {}
    none_type_0 = config_0.__setitem__(str_1, dict_1)
    str_0.load_environment_vars()


def test_case_2():
    str_0 = "\nA* HIhkB"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_3():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    bytes_0 = b"H"
    config_0.update_config(bytes_0)


def test_case_4():
    str_0 = '=SK*n$ia#\\1/\tKv."D$['
    module_0.Config(converters=str_0)


def test_case_5():
    str_0 = "T|\n}hZ#;5DL}v5VU"
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_1.update(**config_0)
    none_type_1 = config_1.__setitem__(str_0, config_1)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    config_3 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_3.update(**config_1)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"\x07h\x85O/\xc3\xb0\xe7?\xec\xa6\x06\xfb\x87\xc5\xbc\x1e"
    bool_0 = True
    module_0.Config(env_prefix=bytes_0, keep_alive=bool_0, converters=bool_0)


def test_case_12():
    bool_0 = True
    bytes_0 = b"\xe2Zj\x94C2"
    set_0 = {bool_0}
    config_0 = module_0.Config(keep_alive=bytes_0, converters=set_0)
    none_type_0 = None
    module_1.check_error_format(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_2.isclass(config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, config_1)
    module_0.Config(config_0)
