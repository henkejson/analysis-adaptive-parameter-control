# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    bytes_0 = b"\x00=P\x9b\xf2`\xef\xee\xd4\\f\x85L{"
    config_1.update_config(bytes_0)


def test_case_4():
    str_0 = "*Ura@/7bm"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_5():
    str_0 = ",\x0c4tCH6NT"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, converters=bool_0)
    bytes_0 = b"\xec\xa8\x10\x05~\xa0\xa5&{\xcfWy\xcbi\x13\x95"
    module_1.load_module_from_file_location(bytes_0, bytes_0)


def test_case_6():
    int_0 = -1249
    bool_0 = False
    dict_0 = {int_0: int_0, bool_0: bool_0, bool_0: int_0, bool_0: bool_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, converters=none_type_0)
    var_0 = config_0.__getattr__(int_0)
    var_0.register(bool_0, none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    var_0 = module_2.getmembers(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.update_config(var_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    str_0 = "N"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_1)
