# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Dh'_C\n)g '"
    dict_0 = {str_0: str_0}
    complex_0 = -178.8 - 4755.661678j
    module_0.Config(dict_0, converters=complex_0)


def test_case_2():
    float_0 = -1020.816
    config_0 = module_0.Config(keep_alive=float_0)
    config_0.load_environment_vars(float_0)


def test_case_3():
    config_0 = module_0.Config()
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    config_0.__getattr__(var_1)


def test_case_4():
    bool_0 = False
    int_0 = -2990
    str_0 = "l=R-8r\x0c$j^Tdm4Ua3J"
    dict_0 = {str_0: str_0, str_0: int_0}
    config_0 = module_0.Config(dict_0)
    config_1 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_1.register_type(config_1)
    var_0 = module_2.isdatadescriptor(none_type_0)
    none_type_2 = config_1.register_type(var_0)
    str_1 = "Ep9<VtrI"
    none_type_3 = config_1.__setattr__(str_1, none_type_1)
    config_2 = module_0.Config(keep_alive=bool_0)
    var_0.load_environment_vars()


def test_case_5():
    str_0 = "Dh'_C\n)g '"
    dict_0 = {str_0: str_0}
    complex_0 = -178.8 - 4755.661678j
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(dict_0, converters=complex_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    int_0 = -2199
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    var_0 = module_2.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(keep_alive=int_0)
    var_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    bytes_0 = b"Not Modified"
    module_0.Config(converters=bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=config_0)
    config_0.update_config(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(config_0)
    var_0 = module_2.isdatadescriptor(none_type_0)
    config_1 = module_0.Config()
    var_1 = config_1.update_config(config_1)
    config_2 = module_0.Config(keep_alive=none_type_1)
    bytes_0 = b"\x02\xd7\xfdf\xda\xb2\x90\xc2L\x0fW\xb2\x8eU\xe2\xa8"
    config_1.update_config(bytes_0)


def test_case_14():
    int_0 = -2990
    config_0 = module_0.Config()
    tuple_0 = ()
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, int_0)
    none_type_1 = config_0.register_type(tuple_0)
    none_type_2 = None
    var_0 = module_2.getmembers(config_0, none_type_2)
    var_0.update_config(tuple_0)
