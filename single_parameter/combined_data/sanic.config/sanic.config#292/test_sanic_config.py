# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "e"
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, none_type_1, converters=str_0)
    none_type_2 = config_0.__setattr__(str_0, none_type_0)
    config_0.update_config(str_0)


def test_case_2():
    dict_0 = {}
    int_0 = -1636
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__bool__()
    tuple_0 = (dict_0, int_0, var_1, var_1)
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    config_1.__setitem__(tuple_0, config_0)


def test_case_3():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    http_0 = module_1.getmembers(config_0)
    var_0 = config_0.load_environment_vars()
    http_0.respond(http_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "8F&E\x0cm4!|Z]v6"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = module_1.isclass(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "kL!\\Lm6Abqhf$sqBp"
    none_type_2 = config_0.__setattr__(str_0, none_type_0)
    object_0 = module_2.object()
    none_type_3 = config_0.update()
    module_0.DescriptorMeta(none_type_2)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [bool_0, bool_0, bool_0, bool_1]
    module_0.Config(keep_alive=bool_0, converters=list_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(config_0)


def test_case_13():
    str_0 = "G"
    none_type_0 = None
    module_0.Config(env_prefix=str_0, keep_alive=none_type_0, converters=str_0)


def test_case_14():
    str_0 = ""
    str_1 = "GFUY2f?A"
    str_2 = "Bye"
    str_3 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_1}
    none_type_0 = None
    module_0.Config(dict_0, converters=none_type_0)


def test_case_15():
    str_0 = "_"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    none_type_0 = None
    var_1 = module_1.getmembers(none_type_0)
    module_1.getmembers(config_0, var_1)


def test_case_16():
    str_0 = "G"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    str_1 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_1, none_type_0)
