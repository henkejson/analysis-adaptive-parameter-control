# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2
import abc as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "router"
    complex_0 = -1560.43 - 1178.764j
    none_type_0 = config_0.register_type(config_0)
    var_1 = module_0.Config(keep_alive=config_0, converters=none_type_0)
    var_1.__new__(complex_0, config_0, str_0, config_0)


def test_case_2():
    bool_0 = True
    module_0.Config(bool_0, keep_alive=bool_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "router"
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "yo;ter"
    none_type_0 = None
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=var_0, converters=none_type_0
    )
    none_type_1 = config_1.register_type(var_0)
    config_0.update_config(str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__getattr__(none_type_0)


def test_case_8():
    none_type_0 = None
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    local_cert_creator_0.register(none_type_0, none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "outer"
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    complex_0 = -1560.43 - 1178.764j
    none_type_0 = None
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=config_0
    )
    module_3.ABCMeta(*complex_0, **complex_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)
