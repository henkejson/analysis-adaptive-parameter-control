# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(bool_0, bool_0)


def test_case_3():
    str_0 = "SanicASGITestClient"
    module_0.Config(str_0, str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    config_1.respond(none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_2 = module_0.Config(env_prefix=none_type_1, keep_alive=none_type_0)
    config_0.__getattr__(config_1)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bool_0 = True
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(bool_0)
    var_0.__getattr__(none_type_1)


def test_case_9():
    str_0 = "SanicASGITestClient"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_11():
    str_0 = "T(X\x0b\x0b3kz1"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    float_0 = -302.021
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=float_0)
    var_0 = config_1.update_config(config_1)
    module_0.Config(keep_alive=var_0, converters=str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    bool_0 = True
    none_type_1 = config_1.register_type(bool_0)
    var_0 = config_0.update_config(config_0)
    config_2 = module_0.Config(converters=config_0)
    config_3 = module_0.Config()
    config_3.__getattr__(bool_0)


def test_case_13():
    none_type_0 = None
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
