# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)


def test_case_2():
    str_0 = "pk7mA%I&?n"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_5():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    bytes_0 = b"\xf6\xa6\n\xce\t?S}\x93\x809"
    module_0.Config(env_prefix=bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.update_config(str_0)


def test_case_10():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_11():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)
    config_0.update_config(tuple_0)


def test_case_12():
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(converters=var_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(config_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_15():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(config_0, str_0, converters=config_0)
