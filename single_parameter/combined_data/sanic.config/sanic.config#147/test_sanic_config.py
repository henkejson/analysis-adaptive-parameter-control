# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "A:)PkkCa1%DlQ\rc\rB2]"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = module_1.isdatadescriptor(dict_0)


def test_case_4():
    none_type_0 = None
    str_0 = "A:)PkkCa1%DlQ\rc\rB2]"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_6():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(env_prefix=config_0)


def test_case_9():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_10():
    bool_0 = True
    module_0.Config(env_prefix=bool_0, keep_alive=bool_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    var_0 = module_1.getmembers(bool_0, bool_0)
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=var_0
    )
    var_0.update_config(config_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "REQUEST_BUFFER_SIZE"
    config_0.update_config(str_0)


def test_case_14():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_15():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "x~m7ojmZBa.I:T\x0c'!"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1, str_1: str_0}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_16():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)
    str_0 = "_"
    var_0 = config_0.load_environment_vars(str_0)
    config_0.update_config(tuple_0)


def test_case_17():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)


def test_case_18():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(env_prefix=str_0, converters=str_0)
