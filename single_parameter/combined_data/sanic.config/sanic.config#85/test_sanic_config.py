# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "%pBo>S"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    module_1.load_module_from_file_location(none_type_0, **str_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = ""
    config_1 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_4():
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.__getattr__(dict_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "TEV%AS}PT "
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_1 = "o]ck$Il"
    none_type_2 = config_0.__setitem__(str_1, none_type_0)
    str_2 = "_"
    none_type_3 = config_0.__setattr__(str_2, none_type_0)
    list_0 = [config_0]
    none_type_4 = config_0.register_type(str_1)
    none_type_5 = config_0.update(*list_0, **config_0)
    none_type_6 = None
    var_0 = module_2.getmembers(none_type_6, none_type_6)
    var_0.__subclasscheck__(none_type_6, none_type_5)


def test_case_6():
    str_0 = "completed_queue"
    set_0 = {str_0, str_0, str_0, str_0}
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=set_0)
    var_0 = module_3.LocalCertCreator.AUTO
    none_type_0 = config_0.__setitem__(var_0, config_0)
    var_0.__getattr__(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    int_0 = 507
    set_0 = {int_0}
    none_type_0 = None
    module_0.Config(int_0, set_0, converters=none_type_0)


def test_case_10():
    str_0 = "%pBo>S"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "7m!LxMQ:4r\\x||u5"
    module_0.Config(keep_alive=str_0, converters=str_0)
