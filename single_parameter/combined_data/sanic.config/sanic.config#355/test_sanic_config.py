# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_2():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    config_1 = module_0.Config(none_type_0, str_0)
    var_0 = config_1.update_config(config_1)
    module_0.Config(str_0, keep_alive=none_type_0)


def test_case_4():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    str_0 = "L"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.isclass(none_type_0)
    config_0.update_config(str_0)


def test_case_6():
    str_0 = "L"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    config_2 = module_0.Config(config_1, var_0)
    config_0.__getattr__(none_type_0)


def test_case_7():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_0)
    config_0.__getattr__(config_1)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = "L"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0.__setitem__(var_0, var_0)


def test_case_11():
    str_0 = "L"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_12():
    str_0 = " KzK"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_13():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)


def test_case_14():
    str_0 = ">"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, none_type_0, converters=none_type_0)
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "gP^LP?}c9"
    str_3 = "MOTD_DISPLAY"
    int_0 = -1832
    dict_0 = {str_1: str_1, str_2: none_type_0, str_3: int_0, str_3: int_0}
    module_0.Config(dict_0)
