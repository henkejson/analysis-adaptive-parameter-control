# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    str_0 = " @u/a"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(converters=str_0)


def test_case_2():
    none_type_0 = None
    str_0 = "W{;DZ'kA4{{\tIm:`"
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_0.respond(config_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = module_1.isdatadescriptor(config_0)
    str_0 = "#R|c}7WC85#-\x0cFPiuQ9]"
    none_type_0 = config_1.__setitem__(str_0, var_0)
    var_1 = module_1.isdatadescriptor(var_0)
    var_2 = var_0.__repr__()
    var_2.load_environment_vars(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = " @u/a"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(converters=str_0)
    bool_0 = False
    config_1.__getattr__(bool_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    float_0 = 0.001
    config_0 = module_0.Config()
    config_0.__setitem__(float_0, float_0)


def test_case_8():
    none_type_0 = None
    str_0 = "W{;DZ'kA4{{\tIm:`"
    config_0 = module_1.getmembers(str_0, none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_1 = module_1.isdatadescriptor(config_0)
    var_0.load_environment_vars()


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.create_empty_request()


def test_case_12():
    config_0 = module_0.Config()
    str_0 = " @u/a"
    config_0.update_config(str_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [bool_0, bool_0]
    config_0.update(*list_0)


def test_case_14():
    config_0 = module_0.Config()
    int_0 = -1518
    none_type_0 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = config_0.load_environment_vars(str_0)
    var_1 = var_0.__repr__()
    var_2 = module_1.isdatadescriptor(config_0)


def test_case_16():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    list_0 = [config_0, config_0]
    none_type_2 = config_0.update(*list_0)
    str_0 = "G"
    str_1 = "dZ6)a"
    str_2 = ":]Oi[uV"
    none_type_3 = config_0.__setattr__(str_1, str_2)
    config_0.load_environment_vars(str_0)


def test_case_17():
    config_0 = module_0.Config()
    none_type_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.load_environment_vars(str_0)
    none_type_1 = None
    config_0.__setattr__(str_0, none_type_1)


def test_case_18():
    config_0 = module_0.Config()
    str_0 = "_"
    var_0 = config_0.load_environment_vars(str_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(config_0)
    none_type_2 = config_0.update(**config_0)
    config_0.update_config(none_type_0)
