# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xe5Uf\xad\xb5\xf8\xd4 \xdb\x16B\xbacr\xd2@\xd9\xae\xc7\xc4"
    config_0 = module_0.Config(converters=bytes_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    var_0.respond(none_type_0)


def test_case_3():
    float_0 = 116.64
    str_0 = "\tG? 1 pkGM]#o3"
    str_1 = "\r\x0b(wSbo2BK\x0cS$9+B-qB"
    str_2 = "a"
    dict_0 = {str_0: float_0, str_1: float_0, str_2: str_1, str_2: str_0}
    none_type_0 = None
    dict_1 = {str_1: float_0}
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0, converters=dict_1)
    bool_0 = False
    module_0.DescriptorMeta(bool_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    bytes_0 = b"\x03\xd5\x13A\xbd\xd6\x01e\xe9d\x0e"
    config_1 = module_0.Config(config_0, keep_alive=bytes_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    var_0 = module_2.LocalCertCreator.TRUSTME
    none_type_0 = var_0.__setattr__(var_0, var_0)
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(var_0)


def test_case_8():
    bytes_0 = b"\xe5Uf\xad\xb5} ,\x16B\xbacc\xd2@\xd9\xae\xc7\xc4"
    module_0.Config(converters=bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_10():
    config_0 = module_0.Config()
    bytes_0 = b"\x03\xd5\x13A\xbd\xd6\x01exd\x0e\xef"
    var_0 = config_0.load_environment_vars()
    module_0.Config(env_prefix=bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)
