# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Nad^$_$"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.load_environment_vars(str_0)
    config_0.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    bool_0 = False
    none_type_1 = config_0.register_type(bool_0)
    bool_1 = True
    none_type_2 = config_0.register_type(bool_1)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    str_0 = "'~P]R\rRW\x0c"
    config_2 = module_0.Config(env_prefix=str_0, converters=var_0)
    config_1.__getattr__(config_0)


def test_case_7():
    bool_0 = True
    str_0 = "HF11 &+v\x0cL/^q2m"
    dict_0 = {str_0: bool_0}
    config_0 = module_0.Config(dict_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(none_type_0)
    str_0 = "v,Mmz&5"
    config_2 = module_0.Config()
    config_2.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    config_0 = module_0.Config()
    list_0 = [config_0]
    config_0.__setitem__(config_0, list_0)


def test_case_13():
    str_0 = "N7d^$]$"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_14():
    str_0 = "Nad^$_$"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=config_0)
    var_0 = config_0.load_environment_vars()
    str_1 = "|\\ i,}:g.`t(6W*l`3"
    var_0.update_config(str_1)


def test_case_15():
    str_0 = ""
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.register_type(config_0)
    none_type_2 = config_1.update(**config_1)
    config_0.load_environment_vars(str_0)
