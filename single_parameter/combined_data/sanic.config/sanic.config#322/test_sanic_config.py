# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xda\x84eA\x02#\xed\xc5$\xcf\xf7#\xdf"
    module_0.Config(converters=bytes_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    module_0.DescriptorMeta(none_type_0, *dict_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "I]2eqyuzd,}"
    str_1 = "ECDHE-ECDSA-AES256-GCM-SHA384"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_0.Config(dict_0, dict_0, converters=str_1)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "T0;u-]D"
    var_0 = module_1.getmembers(str_0)
    module_0.Config(env_prefix=var_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "sslcontext"
    var_0 = str_0.__repr__()
    config_0.update_config(str_0)


def test_case_8():
    int_0 = 16
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.__setitem__(int_0, var_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    bytes_0 = b"h\xf6\xc4\xfb6\nXM\xb2\xfd*Q:G\xd0\x85\x90"
    config_0 = module_0.Config(converters=bytes_0)
    module_2.check_error_format(config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
