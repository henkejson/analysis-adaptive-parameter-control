# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    complex_0 = 2001.057994 - 1447.7252j
    module_0.Config(converters=complex_0)


def test_case_2():
    int_0 = 443
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    config_0 = module_0.Config(dict_0, keep_alive=int_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__subclasscheck__(config_0, config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__subclasscheck__(config_0, config_0)


def test_case_6():
    str_0 = "G"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_7():
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    config_0 = module_0.Config(converters=var_0)
    config_1 = module_0.Config(converters=config_0)
    config_1.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    complex_0 = 2001.058 - 1447.7252j
    config_0.update_config(complex_0)


def test_case_9():
    dict_0 = {}
    config_0 = module_0.Config()
    config_0.__getattr__(dict_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    bool_0 = False
    str_0 = 'X;}/k50_"`0j:CP(0'
    str_1 = "\n!r\x0bS`>"
    str_2 = "]CJhBI'{Oj)5x5&81\r\""
    dict_0 = {str_0: str_1, str_2: bool_0, str_0: str_2}
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    config_0.update_config(str_1)


def test_case_12():
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(converters=var_0)


def test_case_13():
    str_0 = "_"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    config_1 = module_0.Config()
    none_type_0 = None
    config_2 = module_0.Config(keep_alive=none_type_0, converters=config_1)
    var_0 = config_1.update_config(config_1)
    config_3 = module_0.Config()
    config_2.update_config(none_type_0)


def test_case_14():
    str_0 = "G"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, str_0, converters=dict_0)


def test_case_15():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, str_0)
