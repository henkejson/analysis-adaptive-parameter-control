# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0)


def test_case_2():
    int_0 = 1161
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.Config(set_0, converters=set_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_8():
    bytes_0 = b"\xeb\x0em\xa1\xd5-U$\xe4\xd4"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, config_0)


def test_case_11():
    str_0 = ":U(x"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    var_0.__setitem__(none_type_0, none_type_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_1, keep_alive=bool_0)
    none_type_2 = None
    config_2 = module_0.Config(env_prefix=none_type_2)
    config_0.update_config(bool_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_1.isclass(bool_0)
    none_type_2 = None
    config_2 = module_0.Config(env_prefix=none_type_2)
    config_0.register_type(none_type_2)
