# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "uQc[bD~B[TXnB[$$3.7"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    module_1.check_error_format(none_type_0)


def test_case_2():
    bytes_0 = b"\xfd\xba\xd2\xca\x1d\x91O\xac\x93\xc6\xfdy\x85\x18\x15 \xf4\xcdn"
    none_type_0 = None
    module_0.Config(bytes_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    str_0 = "uQc[bD~B[TXnB[$$3.7"
    config_0 = module_0.Config(none_type_0, none_type_0)
    list_0 = [config_0, config_0, str_0, str_0]
    module_2.Stream(*list_0, **config_0)


def test_case_7():
    str_0 = "secure"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    none_type_1 = config_0.update()
    config_0.__getattr__(none_type_1)


def test_case_8():
    str_0 = '@B`b8nQ"uN\rEDH%'
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    list_0 = []
    none_type_0 = config_0.update(*list_0)
    str_0 = "KEEP_ALIVE_TIMEOUT"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_2)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = []
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=list_0)
    none_type_0 = config_0.update(*list_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    int_0 = -750
    module_0.Config(converters=int_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_TLS_KEY"
    list_0 = [config_0, config_0, str_0, str_0]
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    config_0.update_config(list_0)
