# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "d!k\x0cmoH2=F*/f."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, dict_0)


def test_case_2():
    bool_0 = True
    module_0.Config(bool_0, keep_alive=bool_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_5():
    bytes_0 = b"Conflict"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    none_type_0 = config_0.register_type(var_0)
    config_0.update_config(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = '{v<_"lRFt>jIJN8H:'
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "*7\r*F_oEP@(fPv.("
    none_type_1 = config_0.__setitem__(str_0, config_0)
    module_0.DescriptorMeta(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    module_1.getmembers(config_0, config_0)


def test_case_11():
    none_type_0 = None
    list_0 = [none_type_0]
    config_0 = module_0.Config(env_prefix=none_type_0, converters=list_0)
    config_1 = module_0.Config()
    var_0 = module_1.isdatadescriptor(config_1)
    bool_0 = True
    none_type_1 = config_1.register_type(var_0)
    config_1.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)
    none_type_0 = config_1.update_config(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_14():
    str_0 = "RESPONSE_TIMEOUT"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1}
    set_0 = set()
    none_type_0 = None
    module_0.Config(dict_0, str_0, set_0, converters=none_type_0)
