# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Early Hints"
    module_0.Config(env_prefix=bytes_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    var_1 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config()
    config_1.create_empty_request()


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.update()
    none_type_2 = None
    none_type_3 = config_0.update(**config_0)
    none_type_4 = config_0.register_type(none_type_2)


def test_case_5():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = ".\n[rN)CON"
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    var_0 = module_1.isclass(str_0)
    var_1 = var_0.__repr__()
    var_2 = module_1.isclass(list_0)
    none_type_1 = config_0.register_type(str_0)
    str_1 = "Q*'[\tDh"
    none_type_2 = config_0.__setitem__(str_1, none_type_1)
    var_1.respond(var_2)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "-V\x0bGll!AnNt*:^AaI"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0, converters=none_type_0)


def test_case_10():
    list_0 = []
    var_0 = module_1.getmembers(list_0, list_0)
    str_0 = "RESPONSE_TIMEOUT"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    bool_0 = True
    str_0 = "j~"
    config_1 = module_0.Config(converters=str_0)
    config_1.__getattr__(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    set_0 = set()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    var_1 = module_1.isdatadescriptor(none_type_0)
    var_2 = module_1.isdatadescriptor(set_0)
    config_1 = module_0.Config(env_prefix=set_0, keep_alive=config_0)
    var_2.create_empty_request()


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)
