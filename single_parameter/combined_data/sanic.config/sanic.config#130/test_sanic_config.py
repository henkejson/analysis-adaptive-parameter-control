# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    str_0 = "CMK\r%Fd R%"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    module_0.Config(converters=bool_0)


def test_case_2():
    bytes_0 = b"lX\xb8\x05\xe7p"
    config_0 = module_0.Config(keep_alive=bytes_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)


def test_case_4():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_5():
    set_0 = set()
    config_0 = module_0.Config(env_prefix=set_0)
    config_0.__getattr__(set_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    var_0.update(*var_0, **config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = "W6"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    bytes_0 = b"\x009\x05K\xcb"
    module_0.Config(env_prefix=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    bytes_0 = b"\x009\x05K\xcb"
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=config_0, converters=config_0
    )
    var_0 = module_1.isclass(bytes_0)
    var_0.__getattr__(config_1)
