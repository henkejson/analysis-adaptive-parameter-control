# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    module_0.Config(env_prefix=var_0, keep_alive=none_type_0, converters=var_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "Non-graceful Ctrl+C"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "4vlMT]\n0asuQd'*D3"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    var_1 = module_0.Config(env_prefix=none_type_0)
    bool_0 = False
    var_0.register(bool_0, var_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = module_0.Config(converters=config_0)
    str_0 = "4vlMT]\n0asuQd'*D3"
    config_0.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_1.load_environment_vars()
    var_0.init_for_request()


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    str_0 = ">k!zq"
    none_type_0 = config_1.__setitem__(str_0, str_0)
    str_1 = "ACCESS_LOG"
    none_type_1 = config_0.__setattr__(str_1, str_1)
    none_type_2 = config_1.register_type(config_1)
    none_type_3 = config_1.update()
    var_0 = config_0.load_environment_vars()
    config_2 = module_0.Config()
    var_1 = config_2.load_environment_vars()
    none_type_4 = config_0.register_type(var_1)
    var_2 = var_0.__repr__()
    module_0.Config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    str_0 = "Bh(\x0cL!JG?"
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_1, str_0)
