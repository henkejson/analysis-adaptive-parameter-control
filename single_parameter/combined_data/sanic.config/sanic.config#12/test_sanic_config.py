# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = " )vZy8\r^C?|@F*"
    config_0 = module_0.Config(converters=str_0)
    config_0.__getattr__(str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    float_0 = 0.1
    module_0.Config(env_prefix=float_0)


def test_case_4():
    str_0 = "@dq_\\7|]/mM6bhO"
    none_type_0 = None
    module_0.Config(str_0, none_type_0)


def test_case_5():
    bytes_0 = b"\xa5\xd6\xcc\xc6\xeb\x8e\xdd\xb1\xdc\x8e\xf2_\x9bm"
    none_type_0 = None
    complex_0 = 2423.54908 + 642.9j
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=complex_0)
    config_1.__subclasscheck__(none_type_0, bytes_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bytes_0 = b'\x8d\xde\x9c/S"\xfe\x0f\xefO\xac\xc7\x83\x0fc\xc3'
    module_0.Config(env_prefix=bytes_0, converters=bytes_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = True
    none_type_0 = config_0.register_type(bool_1)
    module_1.check_error_format(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    complex_0 = 2423.54908 + 642.9j
    str_0 = "`u"
    none_type_2 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(complex_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bytes_0 = b"\xa5\xd6\xcc\xc6\xeb\x8e\x8e\xb1\xdc\x8e\xf2_\x9bm"
    config_0.update_config(bytes_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "{/Sqt2"
    str_2 = "Using the server settings, retrieve the server location.\n\n        Args:\n            server_settings (Optional[Dict[str, Any]], optional): Settings for\n                the server. Defaults to `None`.\n\n        Returns:\n            str: The server location.\n        "
    dict_0 = {str_0: str_0, str_1: none_type_0, str_0: str_0, str_2: str_0}
    config_0.update(**dict_0)
