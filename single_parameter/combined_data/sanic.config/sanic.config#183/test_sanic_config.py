# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import builtins as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    dict_0 = {}
    str_0 = "a/Nq|Wel@\rA*V@$\x0b"
    config_0 = module_0.Config(dict_0, str_0)
    none_type_0 = None
    module_1.load_module_from_file_location(none_type_0, none_type_0)


def test_case_2():
    str_0 = "\x0b[\\P9"
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    module_0.Config(str_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = '%8A8TF,w"m^5\x0cR#'
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_2)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.load_environment_vars()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, var_0)
    module_3.object(**config_0)


def test_case_7():
    bytes_0 = b"B\x7fD!I{\xf0"
    list_0 = [bytes_0]
    float_0 = 1694.945214
    config_0 = module_0.Config(converters=list_0)
    list_1 = [list_0, bytes_0, float_0]
    config_1 = module_0.Config(converters=list_1)
    none_type_0 = None
    config_2 = module_0.Config()
    none_type_1 = config_2.update(**config_2)
    config_2.update_config(none_type_0)


def test_case_8():
    str_0 = '^?^,@"'
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    int_0 = 1146
    config_1.update_config(int_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=none_type_0, converters=bool_0)
    config_1 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = ")[an8DxBB+U&CM%"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_1.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"B\x7fD!I{\xf0"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [bytes_0, bytes_0, set_0]
    module_0.Config(converters=list_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.update()
    none_type_1 = None
    config_1 = module_0.Config(converters=none_type_1)
    var_1 = config_0.update_config(config_1)
    var_2 = var_1.__bool__()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_1)
