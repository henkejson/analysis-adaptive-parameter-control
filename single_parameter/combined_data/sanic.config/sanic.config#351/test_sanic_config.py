# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"9O$\x94\xe9\xcc"
    config_0 = module_0.Config(converters=bytes_0)
    int_0 = 1038
    module_1.load_module_from_file_location(int_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    module_1.load_module_from_file_location(config_0, **config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = None
    int_0 = -2077
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(
        none_type_2, none_type_2, none_type_2, converters=none_type_2
    )
    config_1.update_config(int_0)


def test_case_6():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0, converters=bool_0)
    config_0.update_config(bool_0)


def test_case_7():
    bytes_0 = b"Insufficient Storage"
    module_0.Config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    none_type_0 = None
    str_0 = "pq#ocBvaC\\8VP@Ln"
    str_1 = "in*dr&"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0, str_1: none_type_0}
    config_0 = module_0.Config(dict_0, none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    module_0.Config(none_type_0, config_2)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_1)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_1)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
