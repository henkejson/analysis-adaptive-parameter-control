# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "A?E^-Gu<-H&HNs;bo7a"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_2():
    str_0 = "+&\x0b"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    module_1.Http(config_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    str_0 = "A?E^-Gu<-H&HNs;bo7a"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "8>L]GgnzZ@\x0bNSel`"
    var_0 = module_2.isdatadescriptor(str_0)
    config_0 = module_0.Config(env_prefix=var_0)
    module_0.DescriptorMeta(str_0)


def test_case_8():
    str_0 = "zct@-y>\t"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(var_0)


def test_case_10():
    config_0 = module_0.Config()
    bool_0 = True
    module_0.Config(config_0, bool_0)


def test_case_11():
    complex_0 = -1702 + 2954.872j
    module_0.Config(converters=complex_0)


def test_case_12():
    config_0 = module_0.Config()
    int_0 = 2
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(int_0)
    dict_0 = {}
    config_1 = module_0.Config(dict_0)
    config_2 = module_0.Config(converters=config_0)
    module_1.Http(none_type_0)
