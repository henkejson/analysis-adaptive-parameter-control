# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()
    none_type_1 = config_0.update()
    var_0.update_config(default_0)


def test_case_2():
    str_0 = "["
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=str_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = module_2.getmembers(config_0)
    var_0 = config_0.update_config(config_0)
    var_0.load_environment_vars()


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"m\r"
    config_0.update_config(bytes_0)


def test_case_5():
    bytes_0 = b"Service Unavailable"
    var_0 = module_2.getmembers(bytes_0)
    module_0.Config(env_prefix=var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_0.__setitem__(var_0, none_type_0)


def test_case_8():
    int_0 = -770
    var_0 = module_2.getmembers(int_0)
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "X68OTMq\nOpPIA>"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_10():
    int_0 = -773
    config_0 = module_0.Config(keep_alive=int_0)
    config_1 = module_0.Config()
    config_1.update_config(int_0)


def test_case_11():
    int_0 = -773
    config_0 = module_0.Config()
    config_0.update_config(int_0)


def test_case_12():
    config_0 = module_0.Config()
    complex_0 = 1752.658590649041 + 57j
    none_type_0 = config_0.register_type(complex_0)
    str_0 = "LOCAL_CERT_CREATOR"
    bool_0 = True
    config_0.__setitem__(str_0, bool_0)
