# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "SqYhGO"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_1 = module_0.Config()
    str_1 = "CL}:%u/-6)~4*emA~Ze"
    config_1.__getattr__(str_1)


def test_case_2():
    bool_0 = True
    str_0 = "%qs0.C'Il&ndUNCAf~$"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.init_for_request()


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    bool_0 = True
    str_0 = "LEPPE|-GZGH"
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    module_0.Config(bool_0, str_0, converters=bool_0)


def test_case_5():
    bytes_0 = b"Not Extended"
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(bytes_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)


def test_case_7():
    float_0 = 1605.25
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    config_0 = module_0.Config(keep_alive=dict_0, converters=dict_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config()
    config_0.__setitem__(var_1, dict_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_9():
    bool_0 = True
    str_0 = "%qs0.C'Il&ndUNCAf~$"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "Comparison not supported between unequal mime types of '"
    none_type_0 = None
    module_0.Config(env_prefix=str_0, keep_alive=none_type_0, converters=str_0)
