# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import abc as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, none_type_0, none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_3():
    str_0 = "bg\x0ccMEXav^o#%y"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    config_1 = config_0.update_config(config_0)
    complex_0 = -5755.38704 + 3466.363515797865j
    config_1.__getattr__(complex_0)


def test_case_4():
    str_0 = '\x0cnkOOM^eo5(^32n"#'
    module_0.Config(converters=str_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config()
    none_type_1 = config_0.update(**config_0)
    complex_0 = -5755.38704 + 3478j
    config_1.__getattr__(complex_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_7():
    bytes_0 = b"!\x9fX\xe9\xb2n\xec\xf1}\xb5K\xb6\x06/"
    str_0 = "O/HJk:e\r:` !1y"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "L"
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars(str_0)
    str_1 = "j."
    dict_0 = {str_1: str_1, str_1: str_1}
    none_type_0 = None
    var_1 = module_1.isclass(none_type_0)
    var_1.update_config(dict_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(none_type_0, keep_alive=config_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, none_type_0)


def test_case_13():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    module_2.ABCMeta()
