# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import abc as module_2
import sanic.utils as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_2 = module_0.Config()
    var_0 = config_2.update_config(config_0)
    config_1.__bool__()


def test_case_2():
    str_0 = "sockname"
    var_0 = module_1.isdatadescriptor(str_0)
    config_0 = module_0.Config(keep_alive=var_0)
    module_2.ABCMeta(*var_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=var_0)
    config_0.__new__(var_1, var_1, var_1, config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__bool__()


def test_case_5():
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    config_0 = module_0.Config()
    config_0.__getattr__(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    module_0.Config(env_prefix=config_0)


def test_case_10():
    bool_0 = False
    str_0 = "^GCY>E2lE"
    str_1 = "!7"
    str_2 = "_converters"
    str_3 = '"E'
    dict_0 = {str_3: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=bool_0, converters=none_type_0)
    dict_1 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_3.load_module_from_file_location(str_0, **dict_1)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "jW|6eu~"
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_1.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(none_type_0)
