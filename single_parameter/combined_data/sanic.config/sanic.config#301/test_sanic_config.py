# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "]U |TC_7AqbG4Q2/WIX|"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "]U |TC_7AqbG4Q21/WIX"
    module_0.Config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "]U |TC_7AqbG4Q21/WIX"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    str_1 = "PROXIES_COUNT"
    config_0.update_config(str_1)


def test_case_7():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_8():
    str_0 = "]U |TC_7AqbG4Q21/WIX"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    str_1 = "PROXIES_COUNT"
    config_1 = module_0.Config(env_prefix=str_1, keep_alive=config_0, converters=str_0)
    config_0.update_config(none_type_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_12():
    str_0 = "]U |TC_7AqbG4Q21/WIX"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=str_0, converters=none_type_0
    )
    config_1 = module_0.Config(config_0)
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: none_type_0, str_0: str_0, str_1: str_0, str_1: str_0}
    module_0.Config(dict_0)


def test_case_13():
    str_0 = " was cancelled beore it completed."
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    str_1 = "L"
    module_0.Config(env_prefix=str_1, keep_alive=str_1, converters=config_0)


def test_case_14():
    str_0 = " was cancelled beore it completed."
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    str_1 = "_"
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=str_1)
    config_1.update_config(none_type_0)
