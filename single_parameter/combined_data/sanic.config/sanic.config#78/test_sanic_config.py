# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\n        Process a list of incoming events.\n     1  "
    list_0 = [str_0]
    str_1 = "mQ/gA.\n`"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_1, keep_alive=bool_0, converters=str_1)
    module_0.DescriptorMeta(list_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    list_0 = []
    config_0 = module_0.Config(env_prefix=list_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "mQ/gA.\n`"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.__setitem__(config_0, bool_0)


def test_case_7():
    str_0 = "I_\rGWH!WK"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    list_0 = []
    list_1 = [list_0, list_0]
    var_1 = module_1.isclass(list_1)
    var_1.__instancecheck__(config_0, var_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = module_2.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_9():
    str_0 = "Os,bS(/KV.oum(R0U:"
    module_0.Config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    var_1.load_environment_vars()


def test_case_11():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(list_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_1)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)
