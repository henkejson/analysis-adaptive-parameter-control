# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_2():
    bytes_0 = b"|2\xa1\xf1"
    config_0 = module_0.Config(keep_alive=bytes_0)


def test_case_3():
    str_0 = "DGHfRbv"
    module_0.Config(str_0)


def test_case_4():
    bytes_0 = b"|2\xa1\xf1"
    config_0 = module_0.Config(keep_alive=bytes_0)
    str_0 = "SANIC_"
    config_0.__getattr__(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=none_type_0)
    str_0 = "add_task"
    none_type_1 = config_1.__setitem__(str_0, config_0)
    config_1.__setattr__(config_1, none_type_0)


def test_case_8():
    bytes_0 = b"U\x0b\xb5\xe2]\xa8\xbf\x84\x0f"
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_0}
    module_0.Config(env_prefix=bytes_0, converters=dict_0)


def test_case_9():
    bytes_0 = b"|2\xa1\xf1"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.update_config(bytes_0)


def test_case_10():
    bytes_0 = b"|2\xa1\xf1"
    config_0 = module_0.Config(converters=bytes_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "_parm__"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    var_1 = config_1.load_environment_vars()
    none_type_2 = config_0.register_type(none_type_0)
    config_2 = module_0.Config(keep_alive=none_type_0, converters=config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    bytes_0 = b"|2\xa1\xf1"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "__params__"
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "5B6=4B"
    none_type_3 = config_0.__setitem__(str_1, none_type_0)
    none_type_4 = config_0.__setitem__(str_0, str_0)
    var_1 = var_0.__bool__()
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    var_2 = config_1.load_environment_vars()
    config_0.register_type(none_type_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = ""
    config_1 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
