# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    config_0 = module_0.Config(keep_alive=local_cert_creator_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_5():
    bytes_0 = b"Not Extended"
    module_0.Config(converters=bytes_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "]s{{wf.9U"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    var_0 = module_2.isdatadescriptor(str_0)
    none_type_1.__subclasscheck__(none_type_1, str_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = module_2.isdatadescriptor(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = ""
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LOCALHOST"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(
        env_prefix=local_cert_creator_0, converters=local_cert_creator_0
    )
    config_0.__getattr__(local_cert_creator_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
