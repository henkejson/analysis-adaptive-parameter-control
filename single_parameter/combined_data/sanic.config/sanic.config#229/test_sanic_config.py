# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import sanic.errorpages as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = -2884
    module_0.Config(converters=int_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    str_0 = "g5"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    bytes_0 = b"7\xec\x0f"
    bool_0 = True
    list_0 = [bool_0, bytes_0, bytes_0, bytes_0]
    module_1.load_module_from_file_location(bytes_0, *list_0)


def test_case_4():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=tuple_0
    )
    config_1 = module_0.Config(dict_0, none_type_0)
    config_1.__getattr__(config_1)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "Could not generate a name for handler"
    str_1 = "nqJ/RsbJ\rS0]\x0cS7"
    config_0 = module_0.Config(env_prefix=str_1)
    none_type_0 = config_0.__setitem__(str_1, str_1)
    config_0.__setattr__(config_0, str_0)


def test_case_9():
    str_0 = "Selamat tinggal"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    none_type_0 = config_1.update()
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_1, config_1)


def test_case_10():
    bytes_0 = b"\xb7P\xa1\xe9\xf0\x81\xe6\\\xc2%\x1c\x10\xddA\x9a=\xc7a"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(bytes_0)
    module_2.check_error_format(bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(var_0)
    str_0 = '"0_#\n)8V\x0cd4a)i'
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_3.isdatadescriptor(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_13():
    str_0 = "# zDE$"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.update_config(str_0)
