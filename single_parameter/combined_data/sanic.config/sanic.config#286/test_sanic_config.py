# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xf9\xfd\x8a\xef\xc7\xb6An[\xd7O\r\xe1"
    config_0 = module_0.Config(converters=bytes_0)


def test_case_2():
    str_0 = "Ha det"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.load_environment_vars()
    config_0.log_response()


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(none_type_0, var_0, config_0, converters=none_type_0)
    var_1 = config_0.load_environment_vars()
    var_1.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "Ha det"
    bytes_0 = b'L\xf7"\x93v\x87\x14\xcf\xb8k\x9b\x12\x82 \xb5\xcd\x04n'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(converters=bytes_0)
    config_1.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "E_d^\r1PtmERV3ms>O"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config()
    config_1.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"\xf9\xfd\x8a\xef\xc7\xb6An[\xd7OO\r\xe1"
    module_0.Config(converters=bytes_0)


def test_case_12():
    bytes_0 = b'L\xf7"\x93v\x87\x14\xcf\xb8k\x9b\x12\x82 \xb5\xcd\x04n'
    str_0 = "E_d^\r1PtmERV3ms>O"
    config_0 = module_0.Config(converters=bytes_0)
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "Ha det"
    bytes_0 = b'L\xf7"\x93v\x87\x14\xcf\xb8k\x9b\x12\x82 \xb5\xcd\x04n'
    list_0 = [str_0, bytes_0]
    str_1 = "LOCAL_CERT_CREATOR"
    str_2 = "3?Q/lA9wfumeN#l$l"
    dict_0 = {str_1: str_1, str_1: str_0, str_2: str_2}
    bool_0 = True
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    config_1 = module_0.Config(converters=list_0)
    config_0.update_config(config_0)


def test_case_14():
    str_0 = "Ha det"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "3?Q/lA9wfumeN#l$l"
    dict_0 = {str_1: str_1, str_1: str_0, str_2: str_2}
    bool_0 = True
    module_0.Config(dict_0, keep_alive=bool_0)
