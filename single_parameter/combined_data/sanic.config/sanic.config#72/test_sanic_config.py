# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    list_0 = []
    set_0 = set()
    config_0 = module_0.Config(keep_alive=list_0, converters=set_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "XG .`sq,]"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(config_0, converters=str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_1.isdatadescriptor(str_0)
    none_type_0 = config_0.register_type(list_0)
    bool_0 = True
    config_2 = module_0.Config(keep_alive=bool_0, converters=str_0)
    var_1 = config_2.update_config(config_0)
    config_2.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    str_0 = "Websocket connection not paused."
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)


def test_case_6():
    none_type_0 = None
    str_0 = "He5:9h7;=)n[.<rDW,"
    config_0 = module_0.Config(none_type_0, str_0)


def test_case_7():
    int_0 = -2509
    none_type_0 = None
    module_0.Config(env_prefix=int_0, keep_alive=none_type_0, converters=int_0)


def test_case_8():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1)


def test_case_9():
    str_0 = "H"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = config_0.load_environment_vars(str_0)


def test_case_10():
    bytes_0 = b"Accepted"
    module_0.Config(converters=bytes_0)


def test_case_11():
    str_0 = ")@qoX^"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=str_0)
    config_0.update_config(bool_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "BO7xNp!;_6@EON"
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = module_1.isdatadescriptor(str_0)
    config_0.log_response()


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_16():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    config_1 = module_0.Config(converters=none_type_0)
    str_1 = "k@qw^"
    none_type_1 = config_1.__setattr__(str_1, none_type_0)
    var_1 = config_1.load_environment_vars()
    var_0.__getattr__(var_0)


def test_case_17():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    config_1 = module_0.Config(converters=none_type_0)
    str_1 = ")@qoX^"
    list_0 = [config_0, str_0, config_0, str_0, str_1, str_0]
    var_1 = config_1.load_environment_vars()
    none_type_1 = config_0.register_type(list_0)
    module_0.Config(env_prefix=str_0, keep_alive=config_0, converters=config_0)
