# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.load_environment_vars()
    str_0 = var_0.__str__()
    config_1 = module_0.Config(keep_alive=bool_0)
    config_1.__setattr__(bool_0, config_1)


def test_case_2():
    str_0 = "-^i&Rb2_G_F4AgO"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_3():
    config_0 = module_0.Config()
    bool_0 = False
    module_0.Config(config_0, config_0, bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_5():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    none_type_1 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_1)
    str_0 = "_INIT"
    none_type_2 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(list_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    config_0.__getattr__(var_1)


def test_case_7():
    str_0 = "Au revoir"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(list_0)


def test_case_11():
    str_0 = "Au revoir"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)


def test_case_12():
    str_0 = "-k"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    tuple_0 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_2 = module_0.Config(keep_alive=tuple_0)
    var_0 = config_1.load_environment_vars()
    var_0.respond(config_0)
