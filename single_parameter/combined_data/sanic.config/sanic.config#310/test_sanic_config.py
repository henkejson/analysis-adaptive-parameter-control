# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\x0cBO6FvRcN\x0c\n8?ei"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\x1cK"
    list_0 = [none_type_0, none_type_0, bytes_0, bytes_0]
    config_0 = module_0.Config(none_type_0, none_type_0, bytes_0)
    config_0.update(**list_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)
    config_1.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    str_0 = "h,4ddz%v;W2&@gO~*"
    config_0 = module_0.Config(none_type_0, str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(config_1)
    config_0.update(*str_0, **str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "h,4ddz%v;W2&@gO~*"
    config_0 = module_0.Config(none_type_0, str_0)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.update()
    var_0 = module_0.Config(converters=config_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config()
    var_2 = module_1.isdatadescriptor(config_1)
    config_1.update_config(var_1)
