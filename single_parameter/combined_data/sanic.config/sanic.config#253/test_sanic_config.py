# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    var_0 = module_1.getmembers(bool_0, bool_0)
    config_0 = module_0.Config(converters=var_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    module_1.getmembers(bool_0, config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    none_type_0 = None
    config_0 = module_0.Config(var_0, keep_alive=none_type_0)
    var_1 = module_1.isclass(none_type_0)
    config_1 = module_0.Config(config_0)
    var_2 = config_0.update_config(config_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "PW"
    tuple_0 = ()
    config_0 = module_0.Config(tuple_0, str_0, tuple_0, converters=tuple_0)


def test_case_8():
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    str_0 = "ht@Z\x0cIt"
    tuple_0 = ()
    none_type_0 = None
    config_0 = module_0.Config(tuple_0, str_0, none_type_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=none_type_0)
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    module_0.Config(config_1, converters=str_0)


def test_case_10():
    str_0 = "it@Z\x0c#t"
    tuple_0 = ()
    none_type_0 = None
    config_0 = module_0.Config(tuple_0, str_0, none_type_0, converters=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, converters=none_type_1)
    none_type_2 = config_1.load_environment_vars()
    none_type_3 = config_0.__setattr__(str_0, str_0)
    config_2 = module_0.Config(none_type_0, keep_alive=none_type_2, converters=config_0)
    config_3 = module_0.Config(keep_alive=none_type_0)
    config_1.__getattr__(config_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_1)


def test_case_12():
    str_0 = "PW"
    tuple_0 = ()
    module_0.Config(tuple_0, str_0, str_0, converters=str_0)


def test_case_13():
    str_0 = "PW"
    tuple_0 = ()
    none_type_0 = None
    config_0 = module_0.Config(tuple_0, str_0, none_type_0, converters=none_type_0)
    str_1 = "SANIC_"
    none_type_1 = config_0.update()
    none_type_2 = config_0.__setattr__(str_1, config_0)
    config_1 = module_0.Config()
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = '/I)!+:U\t_lbYUE"Ps'
    str_4 = "8&$~l{<44)"
    dict_0 = {str_2: str_2, str_3: str_2, str_4: none_type_1}
    module_0.Config(dict_0)
