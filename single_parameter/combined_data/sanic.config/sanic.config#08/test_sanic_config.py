# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import sanic.http.http1 as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    local_cert_creator_0 = module_1.LocalCertCreator.TRUSTME
    module_0.Config(converters=local_cert_creator_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = 'W}tXA"wLr:6SRh>'
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = None
    module_2.Http(none_type_2)


def test_case_5():
    config_0 = module_0.Config()
    module_2.Http(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_7():
    str_0 = "*$_Z(3.VZ$VY<Y6)k8{"
    var_0 = module_3.isclass(str_0)
    module_0.Config(str_0, var_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__repr__()
    var_2 = config_0.update_config(config_0)
    config_0.update_config(var_1)


def test_case_11():
    str_0 = "3N,af\tZ&/IR[x%,rI"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_3.isclass(str_0)
    var_0.__instancecheck__(str_0, var_0)


def test_case_12():
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(converters=local_cert_creator_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    str_0 = var_0.__str__()
    var_1 = config_0.load_environment_vars()


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(none_type_0)
    var_0 = config_1.update_config(config_1)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, var_0)
