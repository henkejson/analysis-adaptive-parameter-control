# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    config_0.create_empty_request()


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "WEBSOCKET_MAX_SIZE"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(none_type_0, none_type_0, converters=config_0)
    module_1.check_error_format(none_type_0)


def test_case_5():
    none_type_0 = None
    str_0 = "otC6D5`_Z ud,IN\x0bK!c"
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    bytes_0 = b"\xab?\x0c\xee\xc9d\xb2/AnQW"
    none_type_2 = config_0.register_type(bytes_0)
    config_1 = module_0.Config(converters=none_type_1)
    config_2 = module_0.Config(env_prefix=str_0)
    var_0 = config_2.update_config(config_2)
    var_1 = var_0.__bool__()
    var_1.respond(config_1)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    str_0 = "otC6D5`_Z ud,IN\x0bK!c"
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    bytes_0 = b"\xab?\x0c\xee\xc9d\xb2/AnQW"
    none_type_2 = config_0.register_type(bytes_0)
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    config_2 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    str_1 = "Xd}z5aPz6F:"
    config_1.update_config(str_1)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    none_type_1 = config_1.update()
    config_1.__bool__()


def test_case_10():
    bool_0 = True
    str_0 = "tG"
    module_0.Config(bool_0, converters=str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_1.register_type(var_0)
    config_1.register_type(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    none_type_2 = config_0.register_type(none_type_1)
    none_type_3 = config_0.register_type(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_3)
