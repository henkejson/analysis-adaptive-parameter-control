# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 65
    config_0 = module_0.Config(keep_alive=int_0)


def test_case_2():
    str_0 = "IRX|+FMn<^\n"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    bool_0 = True
    str_0 = "\nb,v&S"
    module_0.Config(str_0, keep_alive=bool_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(none_type_0)
    str_0 = "?t;`7;)U"
    none_type_2 = config_1.__setattr__(str_0, str_0)
    config_0.update_config(none_type_2)


def test_case_5():
    dict_0 = {}
    config_0 = module_0.Config()
    var_0 = config_0.update_config(dict_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    int_0 = 65
    config_0 = module_0.Config(keep_alive=int_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.update_config(config_1)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    config_1 = module_0.Config()
    str_0 = "Cannot change the value of _init after instantiation"
    none_type_0 = None
    var_0 = config_1.load_environment_vars(str_0)
    str_1 = "NT"
    none_type_1 = config_1.__setitem__(str_1, none_type_0)
    str_2 = ": A client to access the Sanic app instance using httpx - "
    module_1.load_module_from_file_location(none_type_0, str_2, *var_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    str_0 = "d\ryHaGvb+{xJy'E,U"
    config_1 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_13():
    dict_0 = {}
    config_0 = module_0.Config()
    var_0 = config_0.update_config(dict_0)
    config_1 = module_0.Config(keep_alive=dict_0, converters=var_0)
    none_type_0 = config_0.register_type(var_0)
    var_1 = config_1.load_environment_vars()
    config_0.register_type(var_0)


def test_case_14():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.update_config(config_1)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_0, config_1)
