# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 403
    module_0.Config(converters=int_0)


def test_case_2():
    str_0 = "k"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__bool__()


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ")7DW*Y=mAtqk}Dn"
    none_type_0 = None
    module_0.Config(keep_alive=none_type_0, converters=str_0)


def test_case_7():
    str_0 = "=krx,yZz0\nmw"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = 'zO=a0Ni^"Nil_BIL5&'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    bool_0 = False
    config_1 = module_0.Config(dict_0, str_1, bool_0)
    config_2 = module_0.Config()
    var_0 = config_2.update_config(config_2)
    none_type_0 = config_2.update(**config_2)
    none_type_1 = config_1.register_type(none_type_0)


def test_case_8():
    str_0 = "@,"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_9():
    str_0 = "=krx,yZz0\nmw"
    str_1 = 'zO=a0Ni^"Nil_BIL5&'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    bool_0 = False
    config_0 = module_0.Config(dict_0, str_1, bool_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    none_type_0 = config_1.update(**config_1)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    var_0 = module_1.isdatadescriptor(bool_0)
    str_0 = "d<MET2"
    none_type_0 = config_0.__setitem__(str_0, bool_0)
    var_0.__setattr__(var_0, bool_0)


def test_case_11():
    str_0 = "s0V[U-3oj9<!eHDPFQbu"
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.register_type(config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)


def test_case_14():
    str_0 = "k"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_15():
    str_0 = "KEEP_ALIVE_TIMEOUT"
    str_1 = "<q7pU<\n/-=q4\r"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = "aI"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_3: str_3}
    module_0.Config(dict_0)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, config_0, config_0, var_0]
    none_type_0 = config_0.update(*list_0)
    module_2.check_error_format(config_0)
