# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.decorators as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"p\x90\xb45\x8b\xfb\xf1"
    cached_property_0 = module_0.cached_property(bytes_0)
    var_0 = cached_property_0.__get__(none_type_1, none_type_1)
    var_1 = var_0.__get__(none_type_0, none_type_0)


def test_case_1():
    str_0 = "5K1w.G4/;(k#vkr\nCVL/"
    cached_property_0 = module_0.cached_property(str_0)
    cached_property_0.__get__(str_0, str_0)


def test_case_2():
    str_0 = "Convert the given ``data`` into base64 Characters.\n\n    Args:\n        data (bytes or bytearray or memoryview): Bytes to be converted\n            to a string of base64 characters.\n        errors (str or :obj:`~UserString`): Not used.  This argument exists\n            to meet the interface requirements.  Any value given to this\n            argument is ignored.\n\n    Returns:\n        str: of base64 Characters\n        int: the number of the given ``data`` bytes consumed.\n    "
    cached_property_0 = module_0.cached_property(str_0)
