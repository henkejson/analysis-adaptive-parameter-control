# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "__deepcopy__"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    str_0 = "4+b9@THGaf{2\nu@"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "__deepcopy__"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, children=dict_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "__deepcopy__"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    bytes_0 = b"U\x0bL\xbb\xfa\xa4\x01\xa6>~?rq\x89\xcd\x9f,"
    module_0.ScopeReplacer(bytes_0, bytes_0, bytes_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = ":{yJyKu*0YP\x0by/:"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_9():
    str_0 = "FE:gR7fA"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_10():
    none_type_0 = None
    var_0 = module_0.disallow_proxying()
    float_0 = 2150.8
    var_1 = var_0.__eq__(float_0)
    module_0.ImportReplacer(var_0, none_type_0, float_0, var_1, var_1)


def test_case_11():
    var_0 = module_0.disallow_proxying()
    str_0 = ""
    import_processor_0 = module_0.ImportProcessor()
    import_processor_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "_(\nc$"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "hwt\t)hgql>M("
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "Mop0:e:u/<'K^=wba#9n"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    none_type_0 = None
    dict_0 = {}
    set_0 = set()
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, set_0, children=dict_0
    )
    module_0.lazy_import(import_replacer_0, import_replacer_0)
