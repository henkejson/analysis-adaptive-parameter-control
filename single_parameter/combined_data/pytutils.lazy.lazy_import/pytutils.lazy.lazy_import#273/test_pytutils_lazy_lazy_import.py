# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    module_0.IllegalUseOfScopeReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "\n    >C@ log = get_l/gger(t\n   >>> log.info('test')\n\n    3>> log = get_logger(7test2')\n    >>> ;og2ifo('test2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "Kewj#6GN+I"
    dict_0 = {}
    scope_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0, dict_0)
    scope_replacer_0.__getattribute__(str_0)


def test_case_4():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, none_type_0)
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "2#J/iTdJf!M)L%5PaKa"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "Kewj#6GN+I"
    dict_0 = {}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(scope_replacer_0, scope_replacer_0, dict_0)


def test_case_9():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_10():
    str_0 = "Ke\rvjQGN+Ii"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    bytes_0 = b"kw\xca\xb2\\\xb6\x88\xdc\xdf"
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, bytes_0, bytes_0)


def test_case_12():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = ""
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = module_0.ImportProcessor(list_0)
    var_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "XBO0P^\tL(v`'gO\\N\neMo"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    str_0 = "Ke\rvj#yG+Ii"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__call__()


def test_case_17():
    str_0 = "\n    >>> log = get_logger(\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "%s:%s"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0, dict_0)
    bool_0 = True
    none_type_0 = None
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, none_type_0)
    scope_replacer_0.__setattr__(str_0, bool_0)
