# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bytes_0 = b"\xc3\t\xc3Az\x00DB\xc4\xc5\x0e]\xe4f@&]\xbc3"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0, bytes_0
    )


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    bytes_0 = b"\xc3\t\xc3Az\x00DB\xc4\xc5\x0e]\xe4f@&]\xbc3"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0, bytes_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_4():
    float_0 = -841.7133226459781
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, float_0, float_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_5():
    var_0 = module_0.disallow_proxying()
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, children=var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    bytes_0 = b"\xc3\t\xc3Az\x00DB\xc4\xc5\x0e]\xe4f@&]\xbc3"
    import_processor_0 = module_0.ImportProcessor(bytes_0)


def test_case_8():
    str_0 = "pf"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "\\A([A-Z-z_0-9]+)=(.*)\\Z"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, str_0, str_0)
    scope_replacer_0.__repr__()


def test_case_11():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0, none_type_0)


def test_case_12():
    bytes_0 = b"\xf9\xcaQ\x82`\xf7^k\xc6K"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_13():
    str_0 = "q*KuY#a=YLFg"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = '(G_Gq*7mx"U\n>'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "NGC"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_16():
    str_0 = "#h#"
    var_0 = module_0.disallow_proxying()
    var_1 = module_0.disallow_proxying()
    var_2 = module_0.disallow_proxying()
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "5!\n"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\\A([A-Za-z_0-9]+)=(.*)\\Z"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_19():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_20():
    var_0 = module_0.disallow_proxying()
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, children=var_0)
    var_1 = module_0.ScopeReplacer(dict_0, import_replacer_0, import_replacer_0)
    var_1.__str__()


def test_case_21():
    str_0 = "\nUtilities to wrk wth files."
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_22():
    str_0 = "!pQ`3hR$sh"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0)
