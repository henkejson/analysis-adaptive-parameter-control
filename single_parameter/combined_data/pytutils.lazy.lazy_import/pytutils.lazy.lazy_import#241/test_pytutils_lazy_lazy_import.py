# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "%\n~HH\x0b'#\rO}O9G7"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.IllegalUseOfScopeReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_1():
    str_0 = "T%K~HH\x0b'#\rO}G7"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.lazy_import(illegal_use_of_scope_replacer_0, str_0)


def test_case_2():
    str_0 = "9"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "dk)=7 sU~9sPTL!-)'e"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TESh=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('HISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXI\x0cTENT_VAR_THAT_DOES_NO\n_EXIST')])\n\n   N"
    dict_0 = {}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, str_0, str_0)
    scope_replacer_0.__setattr__(str_0, str_0)


def test_case_5():
    str_0 = "_ngOame"
    bytes_0 = b"\xf9\x93\xa6\xfb\xa1u\x9d\x8as}\t\x9a'c\x86\xbd\xbfc\xa7\xd5"
    dict_0 = {bytes_0: str_0, str_0: str_0, str_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, str_0, bytes_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_6():
    bytes_0 = b"\xf9\x93\xa6\xfbu\x9d\x8as}\t\x9a'c\x86\xbd\xbf\xd9\xa7\xd5"
    none_type_0 = None
    dict_0 = {bytes_0: none_type_0, none_type_0: none_type_0, none_type_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, bytes_0, none_type_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0, bytes_0)


def test_case_7():
    import_processor_0 = module_0.ImportProcessor()


def test_case_8():
    str_0 = "*"
    import_processor_0 = module_0.ImportProcessor(str_0)


def test_case_9():
    str_0 = "T%K~>HH\x0b'#\rO}G7"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_11():
    import_processor_0 = module_0.disallow_proxying()


def test_case_12():
    str_0 = "*"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        var_0, var_0, var_0
    )
    var_1 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_14():
    str_0 = "_ngOame"
    bytes_0 = b"\xf9\x93\xa6\xfb\xa1u\x9d\x8as}\t\x9a'c\x86\xbd\xbfc\xa7\xd5"
    dict_0 = {bytes_0: str_0, str_0: str_0, str_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_15():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "(s"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "_name"
    none_type_0 = None
    none_type_1 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.ImportReplacer(none_type_1, none_type_0, none_type_0, str_0, str_0)


def test_case_19():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TESh=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('HISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXI\x0cTENT_VAR_THAT_DOES_NO\n_EXIST')])\n\n   N"
    module_0.lazy_import(str_0, str_0)
