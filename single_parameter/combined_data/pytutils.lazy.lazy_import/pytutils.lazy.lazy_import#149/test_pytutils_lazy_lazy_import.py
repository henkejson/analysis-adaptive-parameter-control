# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HnME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_OT_EXIST')])\n\n   &"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__str__()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_1, var_1)


def test_case_2():
    str_0 = 'P"=J`(0w<O)ZV/OCeS'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.__eq__(var_0)
    module_0.ImportReplacer(var_0, var_0, var_0, children=var_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HnME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_nv_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('HISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    int_0 = -1093
    var_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    var_0.__repr__()


def test_case_8():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HnME}/yeee', 'THISIS=~/a/tRst', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_nv_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('HISIS', '.../a/test'),\n             ('YOLO',\n              '.../swagginsp$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\n    Parses[env file content.\n\n*   Fromhoncho.\n\n    >> lines = ['TEST=${HnME}/yeee', 'THISIS=~/a/tRst', 'YOLO=~/swaggins/$NONEXISTET_VAR_THAT_DOES_NOT_EXIST']\n    >>> loa_nv_file(lines, write_environ=dict())\n  \x0b OrderedDict([('TEST' '.../yeee'),\n          #  ('HISIS', '.../a/test')Z\n             ('YLO,\n              '.../swaggnsp$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "(B;s\x0ckbc{r%ggt="
    import_processor_0 = module_0.ImportProcessor()
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    import_processor_0.lazy_import(dict_0, str_0)


def test_case_11():
    bool_0 = False
    list_0 = [bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, list_0, list_0)
    module_0.lazy_import(list_0, import_replacer_0)


def test_case_12():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = ":@^lC\r S,&{$/SK4"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(var_0, str_0)


def test_case_14():
    str_0 = '|#-0W~G{`IgE2T"W/1_'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    complex_0 = 914 - 1450.040826j
    module_0.ImportReplacer(complex_0, complex_0, complex_0, complex_0, complex_0)


def test_case_16():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HnME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_nv_file(lines, write_environ=dict())\n    OrderedDict([('TES', '.../yeee'),\n             ('HISIS', '.../a/test',\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VARTHAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "\ty\tCnW3OB6}X/"
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, str_0, list_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = '" '
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, str_0)
    module_0.lazy_import(bool_0, import_replacer_0)
