# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "@oC"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = ";F-bDRx5pF>~po]\n"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\x0b[fKo}[}"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "\x0b[fKo}[}"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    str_0 = "0EEFLD'XoQb7e(\\"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    object_0 = module_1.object()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        object_0, object_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    import_processor_0 = module_0.ImportProcessor()
    module_0.lazy_import(import_processor_0, import_processor_0)


def test_case_11():
    str_0 = "\\A([A-Za-z_0-9]+)=(.*)\\Z"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_12():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TET=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "0EEFLD'XoQb7e(\\"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_14():
    str_0 = "<1F|-t"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_15():
    str_0 = '>i|;"h\tIo&j/+Vh#2D{'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_17():
    str_0 = "R;F-bDRx|pF>~po]\n"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_19():
    str_0 = ""
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(dict_0, str_0, str_0)


def test_case_20():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n   >>> lines = ['TEST=${HOME}/yeee', 'HISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee',\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "<1F|-t"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0, dict_0)
