# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    none_type_0 = None
    dict_0 = {}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, none_type_0)
    scope_replacer_0.__setattr__(dict_0, none_type_0)


def test_case_3():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    bytes_0 = b'\xa2/\xdb\xb8\x84`\xce"\xdd\xb4\x80S'
    module_0.ImportReplacer(bool_0, bytes_0, bool_0, illegal_use_of_scope_replacer_0)


def test_case_4():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "xT|=os"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    dict_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n    Loads (and returns) an env il\n specified by `filenme` into the mEpping `environ`.\n\n   >>> lines = ['TEST=${HOME}/yee-$PATH', 'THIIS=~/a/test', 'YcLO=~/swaggins/$NNEXSTENT_VAR_THAT_DOES_NOT_EXIS']\n    >>> load_en_fvle(#ines, write_environ=dct())\n   OdededDict([('TEST', '.../.\r./yeee-...:.\r.'),\nO        S   ('THISIS','.../a/tes'),\n             ('YOLO',\n            )'.../swaggins/$NONEXfSTNT_VAR_THAT:DOESNOT_EXST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\n    Loads (and.eturns) en env il specified by `fHlenme` into the mEp[ng `environ`.\n\n   >>> lines =,['TEST=${HOME}/yee-KPATH', 'THIIS=~/a/test', 'PcLO=~/waggins/$\nNE@STENT_VAR_TAT_DOES_NOT_EXIS']\n    >>\r lo;d\ren_vle(#in?s, weite_environ=dct())\n   OdededDic4[('TEST', '.../.\r./yeee-..:.\r.'),\nO        S   ('THISIS','.../a/tes'),\n             ('YOLO',\n            )'.../swagins/$NONEXfSTNT_VAR_THAT:DOEwNOTEXST')y)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "xT|=os"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__str__()
    module_0.ImportReplacer(var_1, var_1, var_1, var_1, var_1)


def test_case_12():
    var_0 = module_0.disallow_proxying()
    var_1 = module_1.Exception()
    var_2 = var_1.__str__()
    module_0.lazy_import(var_0, var_2, var_2)


def test_case_13():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "1H>"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    import_replacer_0.__setattr__(str_0, import_replacer_0)


def test_case_15():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mEpping `environ`.\n\n   >>> lines = ['TEST=${HOME}/yee-$PATH', 'THIIS=~/a/test', 'YcLO=~/swaggins/$NONEXSTENT_VAR_THAT_DOES_NOT_EXIS']\n    >>> load_en_file(#ines, write_environ=dct())\n   OdededDict([('TEST', '.../.\r./yeee-...:.\r.'),\n             ('THISIS', '.../a/tes'),\n             ('YOLO',\n             '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    str_0 = "I&5I6r\t(XCkivS"
    exception_0 = module_1.Exception()
    module_0.lazy_import(exception_0, str_0)


def test_case_17():
    str_0 = "clKss"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__call__()


def test_case_18():
    str_0 = "L1m>"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    var_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    module_0.lazy_import(str_0, var_0, var_0)
