# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.IllegalUseOfScopeReplacer(str_0, str_0, illegal_use_of_scope_replacer_0)


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    str_0 = "\n   Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines write_environ=dit())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOS_NOTEXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0, children=var_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = '\nPxj:!"MGKC'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = '\nPx:g"#GK'
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\n    Parses env fSle content.\n\n    From honcho.\n\n    >>> lines= ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '...//test'\\,\n            ('YOLO',\n              .../swagins/$NONEVISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lies = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict()a\n   Orderedxict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'\\,\n             ('YOLO',\n              .../swagins/$NONEVISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, str_0)


def test_case_11():
    import_processor_0 = module_0.ImportProcessor()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        import_processor_0, import_processor_0, import_processor_0
    )
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0,
        import_processor_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        import_processor_0,
    )


def test_case_12():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines write_environ=dit())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOS_NOTEXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(str_0, str_0, illegal_use_of_scope_replacer_0)


def test_case_13():
    str_0 = " import R"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "(\t.'"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict())\n   Orderedxict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'\\,\n             ('YOLO',\n              .../swagins/$NONEVISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    import_replacer_0.__call__()


def test_case_18():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'\\,\n             ('YOLO',\n              .../swagins/$NONEVISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lies = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict()a\n   Orderedxict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'\\,\n             ('YOLO',\n              .../swagins/$NONEVISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_20():
    str_0 = "C\x0bbq[V]/qYC{HGrt[#"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    module_0.lazy_import(scope_replacer_0, scope_replacer_0)
