# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0)


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, dict_0, dict_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0, dict_0)


def test_case_4():
    tuple_0 = ()
    module_0.ImportReplacer(tuple_0, tuple_0, tuple_0, children=tuple_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    bool_0 = True
    import_processor_0 = module_0.ImportProcessor(bool_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    var_0 = module_0.disallow_proxying()
    module_0.lazy_import(var_0, var_0, var_0)


def test_case_9():
    str_0 = '"0[\n aL.\rdNmc-6E?Gk'
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    tuple_0 = ()
    dict_0 = {
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
        tuple_0: tuple_0,
    }
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, tuple_0, tuple_0, tuple_0, tuple_0
    )
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_12():
    import_processor_0 = module_0.ImportProcessor()
    none_type_0 = None
    str_0 = ""
    import_processor_0.lazy_import(none_type_0, str_0)


def test_case_13():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    import_processor_0 = module_0.ImportProcessor()
    import_processor_1 = module_0.ImportProcessor()
    var_0 = module_0.ImportProcessor()
    module_0.ImportReplacer(var_0, var_0, var_0, var_0, var_0)


def test_case_15():
    none_type_0 = None
    str_0 = "\x0bqr(&0\x0bx|\n!?"
    module_0.lazy_import(none_type_0, str_0)


def test_case_16():
    str_0 = "B?R|Ng8IB<u}=S-"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(str_0, str_0, var_0)


def test_case_17():
    str_0 = "+4#Rv\\A"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/tet', 'YOLO=~/swaggis/$NOEXISTENT_VAR_THAT_DOES_NOT_EIIST']\n    >>> load_env_file(lpnes, wrie_environ=dict())\n    OrderedDict([('TEST' '.../yeee',\n            J('THISIS', '../a/test'),\n            ('YOLO',\n              '...2swaggins/$NOVEXISTENT_AR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, tuple_0, tuple_0)
    module_0.lazy_import(tuple_0, import_replacer_0)
