# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_1():
    str_0 = ">+Y`(!:;)>asN"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "4>+\\`(!:)>asN"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    bool_0 = False
    none_type_0 = None
    module_0.ImportReplacer(bool_0, none_type_0, bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "4>+\\`(g!:)>asN"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "4>+\\`(g!:)>asN"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    exception_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "N5qjf85$,"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = "4>+\\`(!:)>asN"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\n    An ordered dictionary can be combined with the Counter class so that the counter remembers the order elements are\n    first encountered.\n\n    From Python stdlib in `collections`.\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\x0b "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "4>+\\`(!:)>asN"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__repr__()


def test_case_14():
    complex_0 = -2387.41 + 679.51283j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, complex_0, dict_0)
    import_replacer_0.__call__()


def test_case_15():
    str_0 = "B4>+\\`(W!:/>asN"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "4>+\\`(g!:)>asN"
    var_0 = str_0.__str__()
    module_0.ImportReplacer(str_0, var_0, var_0, var_0, var_0)


def test_case_18():
    str_0 = "\tc\\#MY["
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n   Parses env f5le content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/tes\\', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n   >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'(,\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/NONEXITENT_VAR_THAT_DOES;NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = "\n   Parses env f5le content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOM}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n   >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/NONEXISTENT_VAR_THAT2DOES_NOT_EXIST')])\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    import_replacer_0.__setattr__(import_replacer_0, import_replacer_0)


def test_case_21():
    str_0 = "\n   Parses env f5le content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_FAR_THAT_DOES_NOT_EXIST']\n   >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n           ( ('THISISd, '.../a/test'),\n             ('YOLO',\n              '.../swaggins/NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__getattribute__(dict_0)
