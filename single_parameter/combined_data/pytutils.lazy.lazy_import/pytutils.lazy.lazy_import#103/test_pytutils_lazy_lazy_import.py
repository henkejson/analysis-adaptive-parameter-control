# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "d!z!&5Qq.\x0b]S\n"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, none_type_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0, none_type_0)


def test_case_3():
    bool_0 = False
    module_0.ImportReplacer(bool_0, bool_0, bool_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "d{"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    import_processor_0 = module_0.disallow_proxying()


def test_case_7():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    str_0 = "h.m;Gk"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_10():
    str_0 = "d!z!&5Qq.\x0b]S\n"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "_P'{)Mep>V3(~~3mAT.^"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, none_type_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_12():
    str_0 = "/(.6aepM\np7F!"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "/Dae&#\x0c\np7@AS!"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "/)`A(u6aApM\np7F!"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    bytes_0 = b"\x8dU\x0b\xe5\xef "
    int_0 = 1289
    tuple_0 = ()
    bool_0 = True
    tuple_1 = (bytes_0, tuple_0, bool_0)
    module_0.ImportReplacer(int_0, bytes_0, tuple_1, bytes_0, tuple_1)


def test_case_16():
    int_0 = 1289
    import_processor_0 = module_0.ImportProcessor(int_0)
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        import_processor_0, int_0
    )
    str_0 = "\x0b"
    int_1 = -3082
    var_0 = illegal_use_of_scope_replacer_0.__eq__(int_1)
    import_processor_0.lazy_import(int_1, str_0)


def test_case_17():
    str_0 = "+ZV5sIYCr"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_18():
    str_0 = "_P'{)Mep>V3(~~3mAT.^"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, str_0, str_0, none_type_0, str_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_19():
    str_0 = "\n\n    >>> log = logging.getLogger__name__)\n !  >>> configure(L\n    >>> logaifo('test')\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = ">c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    exception_0 = module_1.Exception()
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, str_0, exception_0)
    module_0.lazy_import(str_0, import_replacer_0)
