# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    str_0 = "U1$Zg\tXE\x0bJW`v)c)"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)


def test_case_3():
    int_0 = 2795
    str_0 = "U1$Zg\tXE\x0bJW`v)c)"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(int_0)


def test_case_4():
    bool_0 = False
    float_0 = -1296.263
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(float_0)


def test_case_5():
    none_type_0 = None
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(var_0)


def test_case_6():
    none_type_0 = None
    str_0 = "b.n62\\(u$!6wSk}"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_7():
    bytes_0 = b"(\xf8\x05\xa7"
    bytes_1 = b"&\xf8\x9e\t9\x89\n\xd9O\x83"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    maybe_0.ap(bytes_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_3 = var_1.to_either()


def test_case_9():
    float_0 = -222.08726
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_1.filter(list_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.get_or_else(var_1)
    var_3 = var_0.get_or_else(var_2)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_1.map(var_1)


def test_case_11():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(bool_1)
    var_2 = maybe_1.to_validation()
    none_type_0 = None
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_2.get_or_else(none_type_0)
    var_4 = maybe_2.to_either()
    var_5 = var_4.to_lazy()
    var_5.get_or_else(none_type_0)


def test_case_12():
    str_0 = '4Pzv:>"9'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    bytes_0 = b"\x8e"
    var_3 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, bytes_0)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.map(var_4)
    var_3.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_try()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()


def test_case_15():
    int_0 = 0
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(set_0)


def test_case_16():
    none_type_0 = None
    float_0 = -117.1317
    tuple_0 = (none_type_0, float_0)
    int_0 = 1382
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_1.filter(none_type_0)


def test_case_17():
    object_0 = module_2.object()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(object_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    bool_3 = var_0.__eq__(none_type_0)
    var_1 = maybe_0.to_validation()


def test_case_18():
    int_0 = 1147
    maybe_0 = module_0.Maybe(int_0, int_0)
    list_0 = []
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(list_0, var_0)
    var_1 = maybe_2.ap(int_0)
    bool_1 = maybe_0.__eq__(var_1)
    bytes_0 = b"\xde\x15\xd65\xea\xa3e^g\x1a\xf5\xc7\x90\x04\xf0"
    var_2 = var_1.ap(bytes_0)
    var_3 = maybe_0.ap(maybe_1)


def test_case_19():
    none_type_0 = None
    int_0 = 1382
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = maybe_0.map(var_1)
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_2, int_0)
    var_6 = var_0.to_lazy()
    object_0 = module_2.object()
    bool_1 = var_2.__eq__(var_2)
    var_7 = var_2.ap(bool_0)


def test_case_20():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    bytes_0 = b"\xec\xbaV*\xfb\xf3u'nQ\x05\x0fM\xcf=\xdfo\xeb"
    set_0 = {bytes_0, bytes_0, bytes_0}
    maybe_1 = module_0.Maybe(bytes_0, set_0)
    var_1 = maybe_1.ap(var_0)
    var_2 = maybe_1.bind(var_0)
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_either()
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_box()
    var_7 = var_1.to_either()
    maybe_0.filter(var_0)
