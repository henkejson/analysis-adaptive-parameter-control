# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -742
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.bind(int_0)
    var_3 = var_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_1, maybe_1)
    bool_2 = var_3.__eq__(maybe_1)
    var_4 = maybe_0.ap(none_type_0)
    maybe_1.filter(var_3)


def test_case_3():
    int_0 = -742
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.bind(int_0)
    maybe_1.filter(var_2)


def test_case_4():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.bind(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(none_type_0)
    maybe_1.filter(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(bool_0)


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "~h\x0ct"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.get_or_else(list_0)


def test_case_9():
    bool_0 = False
    str_0 = 'U\n[-A\x0b_02w*"l3ts'
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_10():
    bytes_0 = b"\xef\x19"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.bind(bytes_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_3, bool_0)
    var_4 = var_3.to_either()
    var_5 = var_3.to_try()
    set_0 = {bytes_0}
    none_type_0 = None
    var_6 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(set_0, none_type_0)
    var_7 = maybe_2.to_lazy()


def test_case_11():
    bytes_0 = b"~DT\xae\xcc\xbc\xd9\x15\x99\xa4\xd6\xb3\xae\x15\x9d\x8f\x8c3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_try()
    var_2.to_box()


def test_case_12():
    bytes_0 = b"\xb6\xa5\xcd\x87%\x1e^"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(set_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    int_0 = -18
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_1.map(var_0)


def test_case_14():
    float_0 = 1442.69848
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(float_0)
    var_1.to_lazy()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_16():
    int_0 = -742
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.bind(int_0)
    var_4 = var_2.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_2, maybe_1)
    bool_1 = var_4.__eq__(maybe_1)
    maybe_1.filter(var_4)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_1)


def test_case_18():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_19():
    int_0 = -742
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.bind(int_0)
    var_3 = var_1.get_or_else(maybe_1)
    bool_1 = var_3.__eq__(maybe_1)
    maybe_1.filter(var_3)


def test_case_20():
    bytes_0 = b"\xef\x19"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = module_0.Maybe(maybe_0, var_0)
    var_3 = var_2.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_3, bool_0)
    var_4 = var_3.to_either()
    var_5 = var_3.to_try()
    var_6 = maybe_0.to_box()
    var_7 = var_0.to_validation()
    var_8 = var_0.to_lazy()
    var_9 = var_0.to_either()
    var_10 = var_9.to_validation()
    var_11 = var_8.bind(maybe_0)
    var_6.map(var_10)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.bind(var_0)
    var_4 = var_3.map(bool_0)
    bool_1 = var_1.__eq__(var_4)
    var_5 = var_0.to_box()
    var_6 = var_4.map(var_0)
    var_7 = var_3.bind(var_5)
    var_8 = var_0.get_or_else(var_1)
    var_9 = var_4.bind(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_2 = var_5.__eq__(maybe_1)
    var_10 = var_3.filter(var_0)
    var_11 = var_3.map(var_5)
    var_12 = maybe_1.get_or_else(maybe_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_3)
    bool_4 = maybe_2.__eq__(bool_0)
    var_13 = var_6.ap(var_1)
    var_2.filter(bool_3)


def test_case_22():
    bool_0 = False
    int_0 = 1
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.bind(int_0)
    var_3 = module_0.Maybe(var_0, bool_1)
    var_4 = var_1.to_validation()
    maybe_2 = module_0.Maybe(var_1, var_4)
    bool_3 = var_3.__eq__(maybe_1)
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_0.to_box()
    var_7 = var_1.to_try()
    var_8 = maybe_2.to_box()
    var_9 = var_7.get_or_else(var_2)
    maybe_1.filter(var_3)
