# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_either()
    var_3 = var_2.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_4 = maybe_0.to_either()
    var_5 = var_3.to_lazy()
    var_6 = maybe_0.to_validation()
    var_6.bind(var_5)


def test_case_3():
    bytes_0 = b"v\xe6"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)


def test_case_4():
    str_0 = "O5K#A>X/VP(+j\x0c/F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = var_1.map(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_3, bool_0)
    maybe_1.filter(bool_0)


def test_case_5():
    bytes_0 = b"v\xe6"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(maybe_1)


def test_case_6():
    int_0 = -2696
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.bind(int_0)
    var_2 = var_1.ap(int_0)
    var_3 = maybe_0.filter(maybe_0)
    var_4 = module_1.Generic()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.get_or_else(maybe_0)
    maybe_1.bind(var_0)


def test_case_8():
    str_0 = "O5K#A>X/VP(+j\x0c/F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(str_0)
    var_2 = var_1.filter(var_1)
    var_3 = var_2.to_try()
    var_4 = var_2.get_or_else(var_3)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(var_0)


def test_case_9():
    str_0 = "O5K#A>X/VP(+j\x0c/F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(str_0)
    var_2 = var_1.filter(var_1)
    var_3 = var_2.to_try()
    var_4 = var_2.map(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_4, bool_0)
    maybe_1.filter(bool_0)


def test_case_10():
    str_0 = "Q?N_DJ.;9l4<*J-Nk"
    set_0 = {str_0, str_0, str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_2 = maybe_1.to_box()


def test_case_11():
    int_0 = -2696
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.bind(int_0)
    var_2 = var_1.ap(int_0)
    var_3 = maybe_0.filter(maybe_0)
    var_4 = var_1.to_validation()
    var_5 = var_1.to_box()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(int_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"\x8b \xe9o>u\x98\x99L\x9a"
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_14():
    float_0 = -1419.399
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_2.to_try()
    var_1 = var_0.get_or_else(var_0)
    var_0.to_box()


def test_case_15():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.map(int_0)


def test_case_16():
    tuple_0 = ()
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_3.bind(tuple_0)


def test_case_17():
    str_0 = "O5K#A>X/VP(+j\x0c/F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.ap(str_0)
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_2.to_try()
    bool_1 = var_2.__eq__(var_2)
    var_5 = maybe_0.filter(var_2)
    var_6 = maybe_2.map(var_2)
    var_7 = maybe_2.to_try()
    var_8 = maybe_1.to_try()
    var_9 = var_2.filter(var_2)
    generic_0 = module_1.Generic()
    var_4.ap(var_7)


def test_case_18():
    str_0 = "O5K#A>X/VP(+j\x0c/F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(var_0)
    var_1 = maybe_1.ap(str_0)
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_2.to_try()
    bool_1 = var_1.__eq__(var_1)
    var_4 = maybe_1.get_or_else(var_3)
    bool_2 = maybe_1.__eq__(var_1)
    var_5 = maybe_2.map(var_1)
    var_6 = maybe_2.to_try()
    var_7 = maybe_1.to_try()
    var_8 = var_2.to_try()
    var_9 = var_1.filter(var_1)
    var_10 = maybe_1.get_or_else(bool_0)
    var_3.ap(var_6)
