# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1102
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_either()
    var_0.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_validation()
    var_0.map(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"\x13\xcb\x90\xcf=\x8e\x01\x8d\xa9\xeb\xe1\x01sv"
    var_0 = maybe_0.to_box()
    bool_1 = False
    tuple_0 = (bytes_0, bool_0, bool_1)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.map(tuple_0)
    bool_2 = var_0.__eq__(bytes_0)
    var_4 = maybe_0.to_either()
    var_5 = var_3.to_either()
    var_6 = maybe_0.get_or_else(bytes_0)
    var_5.filter(tuple_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_try()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b""
    maybe_0 = module_0.Maybe(none_type_1, bytes_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_1.bind(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)


def test_case_9():
    float_0 = -110.1
    int_0 = -3251
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(float_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    float_0 = 2445.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_12():
    int_0 = -1433
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_1.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.ap(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, var_3)
    bool_1 = True
    maybe_2 = module_0.Maybe(var_3, maybe_0)
    var_4 = maybe_1.to_either()
    var_5 = var_1.to_either()
    bool_2 = var_5.__eq__(bool_1)
    var_6 = maybe_1.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    none_type_0 = None
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_1.to_lazy()


def test_case_17():
    int_0 = 0
    bool_0 = True
    bytes_0 = b"\xd5\xbc\x80Gd\x1e\xad\xf3[^\xc3\xf1\x85["
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(bytes_0)
    var_1.get_or_else(int_0)


def test_case_18():
    int_0 = -2512
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    bytes_0 = b"6&\xca?\x7fa\x9b'\x8f\xbf"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.to_either()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(var_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_1 = True
    var_3 = maybe_0.to_box()
    var_4 = var_1.bind(var_1)
    bool_2 = var_4.__eq__(maybe_1)
    var_5 = maybe_0.to_either()
    none_type_1 = None
    var_6 = var_1.to_box()
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2.map(bool_1)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_either()
    var_4 = var_3.to_box()
    maybe_1 = module_0.Maybe(bool_2, maybe_0)
    bool_3 = var_4.__eq__(bool_1)
    var_5 = maybe_1.filter(var_2)
    bool_4 = maybe_1.__eq__(var_5)
    maybe_0.filter(bool_0)


def test_case_24():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(var_2)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_3.map(var_1)
