# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x13\xadzp\x17r\x12\xa8"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_either()
    var_2.get_or_else(set_0)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (list_0,)
    list_1 = [tuple_0, bool_0]
    maybe_0 = module_0.Maybe(list_1, tuple_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(var_0)


def test_case_4():
    bytes_0 = b"~\xc3\xea\xff\xab\x14\xe0\xa0-\xd4SUK\x95\xb5\xf8+"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.ap(bytes_0)
    var_2 = maybe_1.map(var_1)
    var_3 = var_2.to_validation()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_box()
    none_type_1 = None
    bool_0 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_0)
    maybe_2.bind(var_0)


def test_case_7():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(tuple_0)


def test_case_8():
    float_0 = -641.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = var_0.filter(float_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.filter(maybe_0)
    bytes_0 = b"\xd2\x0e\x02G\xe4\xc0\xcfo\x89]\xbe"
    var_4 = var_0.filter(bytes_0)
    set_0 = set()
    var_5 = maybe_0.bind(set_0)
    var_6 = var_1.get_or_else(var_5)
    var_7 = maybe_0.to_either()
    var_0.to_try()


def test_case_9():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    set_0 = {bool_0, bool_0, bool_0}
    bool_2 = False
    maybe_1 = module_0.Maybe(set_0, bool_2)
    var_0 = maybe_1.get_or_else(set_0)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    int_0 = 268
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_either()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.bind(bool_0)
    var_4 = var_2.to_box()
    var_2.to_lazy()


def test_case_13():
    str_0 = "=S*o?R<?M%hZ\\/&GkTN\\"
    dict_0 = {}
    float_0 = 3401.0
    maybe_0 = module_0.Maybe(dict_0, float_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_1.to_box()
    var_0.filter(str_0)


def test_case_14():
    bool_0 = True
    int_0 = 1662
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_box()


def test_case_16():
    bytes_0 = b"\xd6\x01x"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bytes_0 = b"\x9f\xc9X\xc6`l\xd4\xa8G\xbb\xe6\x94\xfcQ\xca\x8fq"
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_either()


def test_case_18():
    object_0 = module_1.object()
    bool_0 = False
    bool_1 = False
    tuple_0 = (object_0,)
    maybe_0 = module_0.Maybe(bool_1, tuple_0)
    bool_2 = maybe_0.__eq__(object_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_0)
    bool_3 = var_1.__eq__(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()
    var_4 = var_1.bind(var_1)
    var_5 = var_1.to_validation()
    var_5.bind(var_5)


def test_case_19():
    object_0 = module_1.object()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_20():
    bytes_0 = b"\xe4\x8e\x8ah`g\xf98\x9eSu\x00\x0e\x9be\xeb\x10m\x19"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    bool_3 = maybe_1.__eq__(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_try()
    var_3.to_either()
