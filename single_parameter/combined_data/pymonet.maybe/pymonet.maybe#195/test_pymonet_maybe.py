# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    bytes_0 = b"?"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = var_0.ap(maybe_1)
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1.filter(var_2)


def test_case_3():
    bytes_0 = b"?"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.ap(bytes_0)
    var_2 = var_1.filter(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = var_0.__eq__(bool_0)
    var_3 = maybe_1.get_or_else(var_1)
    var_4 = var_3.ap(maybe_1)
    var_5 = var_4.to_validation()
    var_6 = var_2.filter(bool_0)
    bool_3 = var_1.__eq__(maybe_0)
    var_7 = maybe_1.to_box()
    var_8 = var_7.to_validation()
    maybe_1.filter(var_4)


def test_case_4():
    bytes_0 = b"4\xc1\x1a\xef\xa1[\xac\xdb\x0b\xa8\xfd\x1b\xa5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = var_0.ap(maybe_1)
    var_3 = var_2.to_validation()
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1.filter(var_2)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_6():
    int_0 = 1865
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_0.ap(bool_0)


def test_case_7():
    bytes_0 = b"?"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.ap(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = var_0.__eq__(bool_0)
    var_2 = maybe_1.get_or_else(var_1)
    var_3 = var_1.to_validation()
    var_4 = var_1.filter(bool_0)
    bool_3 = var_1.__eq__(maybe_0)
    var_5 = maybe_1.to_box()
    var_6 = var_5.to_validation()
    maybe_1.filter(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_validation()
    var_1.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\xd6\xbd\xd4M\xc1\x89\xdb6\xf4\xa9/J\xd1\xa4\xe7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    int_0 = -747
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    var_3 = var_1.map(int_0)
    var_4 = maybe_0.filter(var_1)
    var_3.get_or_else(var_1)


def test_case_10():
    bytes_0 = b"?"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_1.get_or_else(var_0)
    var_3 = var_2.ap(maybe_1)
    var_4 = var_3.to_validation()
    var_5 = var_1.filter(var_4)
    var_6 = var_1.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    var_7 = maybe_1.to_box()
    var_8 = var_1.to_box()
    maybe_1.filter(var_3)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_try()
    maybe_0.map(var_1)


def test_case_12():
    bytes_0 = b"?"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_1.get_or_else(var_0)
    var_3 = var_2.ap(maybe_1)
    var_4 = var_3.map(bytes_0)
    maybe_2 = module_0.Maybe(maybe_0, var_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_5 = var_4.to_lazy()
    maybe_1.filter(var_3)


def test_case_13():
    bytes_0 = b"\xaa?\xbe\xc20j\xe2\xcd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(bytes_0, none_type_0)
    var_2 = module_0.Maybe(maybe_1, var_0)
    var_3 = var_2.ap(bytes_0)
    var_4 = maybe_2.to_lazy()
    maybe_2.map(var_4)


def test_case_14():
    complex_0 = -6525.1 - 425j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.map(maybe_0)


def test_case_15():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_validation()


def test_case_16():
    float_0 = 434.276752
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_0.get_or_else(float_0)
    var_5 = maybe_1.to_either()
    bool_0 = False
    var_6 = maybe_0.to_validation()
    var_7 = var_1.to_try()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_8 = maybe_2.to_box()
    var_9 = maybe_1.to_box()
    var_8.get_or_else(var_3)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    maybe_1.bind(var_1)


def test_case_18():
    bytes_0 = b"?"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.get_or_else(bool_0)
    var_2 = var_1.ap(maybe_1)
    var_3 = var_2.to_validation()
    maybe_2 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    maybe_1.filter(var_2)


def test_case_19():
    bytes_0 = b"\xd6\xbd\xd4M\xc1\x89\xdb6\xf4\xa9/J\xd1\xa4\xe7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_either()
    none_type_0 = None
    var_2 = var_0.get_or_else(maybe_0)
    bool_0 = var_2.__eq__(var_2)
    var_3 = var_0.filter(var_2)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = var_2.to_lazy()
    var_4.get_or_else(var_4)
