# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1.to_validation()


def test_case_3():
    str_0 = ">"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_1.get_or_else(str_0)
    var_0.to_validation()


def test_case_4():
    str_0 = "QV1M\nZDoXbeT(Ed#L"
    list_0 = [str_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    maybe_0.map(maybe_0)


def test_case_5():
    float_0 = 2838.298388120457
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    set_0 = set()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.bind(var_1)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1.to_either()


def test_case_6():
    bool_0 = True
    bool_1 = False
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.bind(bool_0)


def test_case_7():
    str_0 = "I]@"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    none_type_0 = None
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_9():
    float_0 = 2857.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(float_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_11():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    complex_0 = 1262.59048 - 2026.144j
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.to_either()
    bool_1 = True
    bool_2 = False
    maybe_2 = module_0.Maybe(complex_0, bool_2)
    maybe_3 = module_0.Maybe(int_0, bool_1)
    var_2 = maybe_3.filter(complex_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    tuple_0 = (maybe_0, bool_0, maybe_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()


def test_case_14():
    bytes_0 = b"6\xf7"
    int_0 = -262
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(bytes_0)


def test_case_15():
    float_0 = 2857.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    set_0 = set()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.bind(var_1)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.to_lazy()
    var_5 = var_0.to_box()
    var_6 = maybe_1.get_or_else(var_3)
    var_7 = var_4.map(float_0)


def test_case_16():
    float_0 = 2857.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    set_0 = set()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.bind(var_1)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_3 = var_0.ap(var_1)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_lazy()
    bool_0 = var_3.__eq__(set_0)
    var_7 = var_0.to_box()
    var_1.ap(var_6)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_18():
    bytes_0 = b"!\xb47L"
    bytes_1 = b"\xffp(\xbbH\xcc\x15?\x92\xe3\xf2D\x0e\xabM}E\xb0j("
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_try()
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_2.ap(bytes_0)
    var_4 = var_0.to_lazy()
    var_5 = maybe_0.bind(bytes_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_6 = maybe_1.get_or_else(var_1)
    var_7 = var_5.get_or_else(var_5)
    bool_1 = True
    var_8 = var_7.get_or_else(bool_1)
    maybe_2 = module_0.Maybe(var_8, var_8)
    bool_2 = maybe_0.__eq__(var_7)
    var_9 = var_5.to_either()
    var_10 = maybe_0.bind(bool_2)
    var_9.to_either()


def test_case_19():
    str_0 = "QV1M\nZDoXbeT(Ed#L"
    list_0 = [str_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = maybe_0.to_either()
    var_3.get_or_else(var_0)


def test_case_20():
    bytes_0 = b"7L\t?"
    bytes_1 = b"\xffp(\xbbH\xcc\x15?\x92\xe3\xf2D\x0e\xabM}E\xb0j("
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_try()
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = var_2.ap(bytes_0)
    var_5 = var_0.to_lazy()
    var_6 = maybe_0.bind(bytes_1)
    bool_0 = var_4.__eq__(var_4)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_7 = maybe_1.get_or_else(var_1)
    var_8 = var_6.get_or_else(var_6)
    bool_2 = True
    var_9 = var_8.get_or_else(bool_2)
    maybe_2 = module_0.Maybe(var_9, var_9)
    var_10 = var_6.to_either()
    var_11 = maybe_0.bind(var_10)
    var_10.to_either()
