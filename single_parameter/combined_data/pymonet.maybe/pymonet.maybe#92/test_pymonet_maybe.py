# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -1372
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = '/"!8=Qp7t1X=cV'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.to_box()
    bool_0 = False
    var_3 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.to_box()
    bool_1 = var_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(var_2, var_2)
    maybe_1.filter(maybe_1)


def test_case_3():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = False
    maybe_0.ap(bool_2)


def test_case_4():
    str_0 = '/"!8=Qp7t1X=cV'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_0 = False
    var_1 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_1.to_box()
    var_3 = var_2.ap(var_0)
    maybe_1.filter(maybe_1)


def test_case_5():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.filter(var_0)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, list_0, bool_0]
    maybe_0 = module_0.Maybe(list_1, bool_0)
    float_0 = -540.5732
    tuple_0 = (float_0,)
    set_0 = {tuple_0, float_0, tuple_0}
    dict_0 = {}
    none_type_0 = None
    maybe_1 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_1.get_or_else(none_type_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_2.bind(set_0)


def test_case_8():
    bytes_0 = b"\x95\xd6H'T7\x8f\xa4jb\xfb\xa95)3\xb9\x99"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(bytes_0)
    none_type_0 = None
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_3 = maybe_1.filter(var_2)
    var_2.to_box()


def test_case_9():
    bytes_0 = b"FgS#\xbb\xda\x87\x0b\x9c\x07"
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    bool_2 = var_0.__eq__(bytes_0)
    var_2 = maybe_0.filter(bool_2)
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_4 = var_0.to_lazy()
    var_5 = maybe_1.to_validation()


def test_case_10():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_11():
    int_0 = 5916
    list_0 = [int_0, int_0, int_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1.get_or_else(bool_0)


def test_case_12():
    bytes_0 = b"A\x19U"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    bool_3 = True
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_0 = maybe_2.get_or_else(maybe_1)
    var_1 = maybe_1.to_try()
    bool_4 = maybe_2.__eq__(var_1)
    var_2 = maybe_2.to_lazy()
    bool_5 = maybe_2.__eq__(maybe_2)
    var_3 = maybe_2.to_box()
    var_4 = maybe_2.to_try()
    var_4.to_box()


def test_case_13():
    int_0 = -248
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_1.__eq__(int_0)


def test_case_14():
    str_0 = '/"!8=Qp7t1X=cV'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(str_0)
    var_2 = maybe_0.bind(maybe_0)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.filter(maybe_0)
    var_5 = maybe_0.bind(maybe_0)
    var_6 = maybe_0.get_or_else(maybe_0)
    var_7 = var_5.to_box()
    int_0 = 1118
    bool_0 = maybe_0.__eq__(var_3)
    bool_1 = var_4.__eq__(var_4)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_8 = var_5.to_validation()
    var_9 = var_0.map(var_2)
    var_10 = var_7.to_validation()
    maybe_2 = module_0.Maybe(var_10, bool_0)
    var_11 = var_10.to_lazy()
    var_12 = var_2.to_lazy()
    var_13 = var_6.bind(var_1)
    var_14 = var_13.to_lazy()
    var_15 = var_12.map(var_12)
    var_16 = var_12.to_box()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_try()
    var_2.filter(var_2)


def test_case_16():
    bytes_0 = b"A\x19U"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_0 = maybe_2.get_or_else(maybe_1)
    var_1 = maybe_1.to_try()
    bool_4 = maybe_2.__eq__(var_1)
    var_2 = maybe_2.to_lazy()
    bool_5 = maybe_2.__eq__(maybe_2)
    var_3 = maybe_2.to_box()
    var_4 = maybe_2.to_try()
    var_4.to_box()


def test_case_17():
    int_0 = -248
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, int_0)
    maybe_0.bind(var_1)


def test_case_18():
    str_0 = '/"!8=Qp7t1X=cV'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(str_0)
    var_2 = maybe_0.bind(maybe_0)
    var_3 = maybe_0.bind(var_0)
    var_4 = var_2.get_or_else(var_3)
    var_5 = maybe_0.filter(maybe_0)
    var_6 = maybe_0.bind(maybe_0)
    var_7 = maybe_0.get_or_else(maybe_0)
    var_8 = var_6.to_box()
    bool_0 = maybe_0.__eq__(var_3)
    var_8.get_or_else(var_3)
