# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"r\xadF\x91)%J|\x89E0j\xef\xeeu\xe2"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bytes_0)


def test_case_3():
    float_0 = 533.852655
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(maybe_0)
    bool_1 = maybe_0.__eq__(float_0)
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_validation()
    var_3.to_validation()


def test_case_4():
    str_0 = "\x0c1.5S]wA\trp2Ts:PlAW"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bytes_0 = b"1\x94\xe7\x90FvN\xa6\x11\x0c\xae7\xeb\xd8"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.map(bytes_0)


def test_case_5():
    float_0 = 533.852655
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(float_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.ap(var_3)
    var_5 = var_4.to_try()
    var_6 = maybe_0.to_try()
    var_5.to_validation()


def test_case_6():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.bind(list_0)


def test_case_7():
    bytes_0 = b"r\xadF\x91)%J|\x89E0j\xef\xeeu\xe2"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"y\xa1\xe6\x16\xfb"
    tuple_0 = ()
    tuple_1 = (bytes_0, bytes_0, tuple_0)
    list_0 = []
    list_1 = [list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.get_or_else(tuple_1)


def test_case_10():
    bool_0 = False
    int_0 = -2079
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_box()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bytes_0 = b"r\xadF\x91)%J|\x89E0j\xef\xeeu\xe2"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_box()
    var_1.map(var_1)


def test_case_15():
    bytes_0 = b"=\x88\x94\x9b\x85\xfd"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    maybe_0.ap(var_1)


def test_case_16():
    float_0 = -1575.74313
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    int_0 = 0
    var_1 = var_0.map(int_0)
    var_2 = maybe_0.get_or_else(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0.to_try()


def test_case_17():
    bytes_0 = b"\x18c\xef\xf7\xfa\xf14j+*Z/\x94"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    int_0 = -2277
    list_0 = [int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.ap(int_0)
    var_4 = var_2.to_validation()
    var_5 = var_1.to_box()
    var_5.to_box()


def test_case_19():
    str_0 = 'rh"{}\\r>"Av'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_20():
    int_0 = -2277
    list_0 = [int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.ap(int_0)
    var_4 = maybe_0.bind(var_1)
    bool_1 = var_4.__eq__(maybe_0)
    var_5 = maybe_0.ap(list_0)
    var_6 = maybe_0.map(var_0)
    var_0.map(int_0)


def test_case_21():
    int_0 = -2277
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    float_0 = -2418.42576
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.get_or_else(int_0)
    var_2.map(float_0)
