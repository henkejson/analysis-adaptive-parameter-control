# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_3():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.map(bool_1)
    var_1 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(var_1, var_1)


def test_case_4():
    int_0 = 4018
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_either()
    none_type_0 = None
    var_3 = var_2.ap(var_2)
    var_4 = maybe_0.filter(none_type_0)
    bool_0 = var_4.__eq__(var_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = 3986
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.map(var_0)
    var_3 = var_2.bind(var_1)
    var_4 = var_3.to_either()
    var_5 = var_0.ap(var_0)
    generic_0 = module_1.Generic()
    var_6 = var_2.filter(generic_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(none_type_0)


def test_case_8():
    int_0 = 4018
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = var_1.map(var_1)
    var_3 = var_1.to_either()
    var_4 = maybe_1.filter(var_3)
    none_type_0 = None
    var_5 = var_4.ap(var_4)
    var_6 = var_5.filter(var_4)
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    var_7 = maybe_2.to_lazy()
    var_8 = var_3.ap(var_7)
    maybe_3 = maybe_2.ap(var_5)
    dict_0 = {}
    var_9 = var_1.ap(dict_0)
    var_10 = maybe_2.to_try()


def test_case_9():
    bool_0 = True
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(str_0, none_type_1)
    maybe_1.filter(bool_0)


def test_case_10():
    bytes_0 = b"\x8b\xc2\xca\x19\xc55\xf7\xfb{^d\xb3\x93a\x90#q"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_2.map(var_2)


def test_case_11():
    none_type_0 = None
    str_0 = "5=HrWc\tnCw"
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.ap(none_type_0)


def test_case_12():
    int_0 = -3677
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()


def test_case_13():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = var_0.to_either()
    bool_1 = var_0.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_1 = maybe_2.map(bool_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = var_0.map(var_3)
    maybe_3 = module_0.Maybe(var_4, maybe_1)
    var_2.filter(var_0)


def test_case_14():
    int_0 = 641
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_1 = maybe_2.map(bool_1)
    var_2 = maybe_2.to_validation()
    maybe_3 = module_0.Maybe(var_2, var_2)


def test_case_16():
    int_0 = 641
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    int_0 = 4018
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = var_1.map(var_1)
    var_3 = var_1.to_either()
    var_4 = maybe_1.filter(var_3)
    none_type_0 = None
    var_5 = var_4.ap(var_4)
    var_6 = var_5.filter(var_4)
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    var_7 = maybe_2.to_lazy()
    var_8 = var_3.ap(var_7)
    maybe_3 = module_0.Maybe(var_8, var_1)
    dict_0 = {}
    var_9 = var_1.ap(dict_0)
    var_10 = maybe_2.to_try()


def test_case_18():
    bytes_0 = b"\xc5\x9d\xddR^<"
    dict_0 = {}
    none_type_0 = None
    bytes_1 = b"\xb5\xd4k\xf6e\xc4\xfcM\x05\xfd\xdaH\x98\x11|f;\xdd\x0b\x0b"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.to_lazy()
    list_0 = [var_0]
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(list_0, var_1)
    var_2 = maybe_1.ap(none_type_0)
    var_3 = var_2.ap(dict_0)
    float_0 = 3399.256374
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_4 = maybe_2.filter(var_3)
    var_5 = var_4.map(bytes_0)


def test_case_19():
    int_0 = 4018
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.map(var_0)
    var_3 = var_2.bind(var_1)
    var_4 = var_2.filter(var_0)
    var_5 = var_0.ap(var_0)
    generic_0 = var_5.to_either()
    var_6 = var_4.to_box()
    bool_0 = maybe_0.__eq__(var_3)
