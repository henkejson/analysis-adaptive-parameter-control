# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 3401
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.bind(maybe_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_4():
    bool_0 = False
    int_0 = 27
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b"\xa3\xea\xbd\xfe\xa8\xb9\x1a\xe3m\xab\xb6L\xd8\xfc\x1e&\x9e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)
    str_0 = "gFi/"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_box()
    var_1.to_box()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b".Sz\x9bE'\xae:L\xd1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_0.ap(var_0)
    var_3 = maybe_0.to_try()
    var_4 = var_0.map(none_type_1)
    var_5 = maybe_0.get_or_else(none_type_0)
    var_6 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(var_1)
    var_7 = var_2.to_try()
    var_8 = var_4.bind(var_7)
    var_9 = var_4.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\x0c\xa9]\xb6\xb6r5.\x80_\xd3p\xecf"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    none_type_0 = None
    maybe_1.filter(none_type_0)


def test_case_10():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.get_or_else(none_type_0)


def test_case_11():
    int_0 = 2106
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_1.bind(var_2)
    var_5 = var_3.to_either()
    var_6 = var_1.to_either()
    maybe_0.filter(var_3)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    float_0 = -1046.0
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    bool_2 = maybe_1.__eq__(var_1)


def test_case_13():
    complex_0 = -2422.4 + 705.3311j
    int_0 = -1625
    maybe_0 = module_0.Maybe(complex_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    maybe_0.map(var_1)


def test_case_15():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_19():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_2 = var_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    list_0 = []
    bool_1 = False
    maybe_2 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_2.get_or_else(list_0)
    float_0 = 747.33
    bytes_0 = b"\xc1`\xba\xe8A\xc6\xc7\x0c\x14p\xa7V\xd2#)\x91/"
    bool_2 = True
    maybe_3 = module_0.Maybe(bytes_0, bool_2)
    var_2 = maybe_3.map(float_0)
    var_3 = maybe_3.ap(float_0)
    var_4 = maybe_0.filter(var_3)
    float_1 = -1327.1126
    none_type_1 = None
    bool_3 = maybe_3.__eq__(float_1)
    maybe_4 = module_0.Maybe(none_type_1, none_type_1)
    var_5 = maybe_3.map(var_3)
    bool_4 = var_3.__eq__(maybe_1)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    list_0 = []
    bool_1 = False
    maybe_2 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_1.ap(bool_1)
    maybe_3 = module_0.Maybe(none_type_0, bool_1)
    var_3 = var_1.to_either()
    var_4 = var_2.to_try()
    var_5 = var_2.ap(var_4)
    var_4.to_try()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    list_0 = []
    maybe_2 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_2.get_or_else(list_0)
    float_0 = 747.3297
    bytes_0 = b"\xc1`\xba\xe8A\xc6\xc7\x0c\x14p\xa7V\xd2#)\x91/"
    bool_1 = True
    maybe_3 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_3.map(float_0)
    var_2 = maybe_3.ap(float_0)
    var_3 = var_2.to_try()
    var_4 = maybe_3.ap(maybe_3)
    var_5 = maybe_2.to_try()
    bool_2 = var_3.__eq__(var_2)
    var_6 = module_0.Maybe(var_4, var_1)
    var_7 = var_2.filter(var_6)
    var_8 = module_0.Maybe(list_0, bool_0)
    var_9 = var_3.map(var_2)
    var_10 = maybe_1.ap(var_6)
    var_11 = var_3.filter(var_10)
    var_12 = var_6.to_validation()
    var_13 = var_1.filter(var_6)
    var_14 = var_13.to_either()
    maybe_4 = module_0.Maybe(maybe_0, var_6)
    var_15 = var_1.get_or_else(var_4)
    bool_3 = var_6.__eq__(maybe_2)
    var_16 = var_2.to_validation()
    var_17 = var_16.to_either()
    var_18 = var_15.to_try()
