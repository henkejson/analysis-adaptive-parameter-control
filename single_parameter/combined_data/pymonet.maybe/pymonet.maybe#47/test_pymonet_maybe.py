# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.map(maybe_0)
    none_type_0 = None
    var_2 = var_1.ap(none_type_0)
    var_3 = var_1.to_box()
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    bool_1 = maybe_1.__eq__(var_1)
    maybe_1.filter(var_3)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    maybe_0.bind(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.ap(str_0)
    var_3 = var_2.bind(str_0)
    maybe_2 = module_0.Maybe(var_2, var_2)
    var_4 = maybe_2.filter(var_2)


def test_case_6():
    bytes_0 = b";ns@\xa1yS\xe4\xc7a\x94xuu-S"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.get_or_else(bytes_0)
    var_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_3 = maybe_1.to_try()


def test_case_7():
    str_0 = "):s-t&\t.Gj\x0c_$FE;"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.ap(str_0)


def test_case_8():
    int_0 = -895
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(int_0)


def test_case_9():
    bytes_0 = b";ns@\xa1yS\xe4\xc7a\x94xuu-S"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.ap(bool_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_0.ap(maybe_0)
    bool_3 = maybe_1.__eq__(bytes_0)
    var_4 = var_0.filter(bytes_0)
    var_5 = maybe_1.get_or_else(bool_3)
    var_6 = maybe_0.to_validation()
    var_7 = var_4.to_box()
    var_7.ap(bool_3)


def test_case_10():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = module_0.Maybe(bool_0, str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.ap(str_0)
    var_3 = var_2.bind(str_0)
    var_4 = var_2.to_box()
    var_5 = var_2.to_box()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_6 = var_2.to_either()
    var_6.get_or_else(bool_0)


def test_case_11():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.map(bytes_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_2.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    float_0 = -3092.8975
    complex_0 = 1188.719 - 112.168j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_1.ap(float_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.ap(str_0)
    var_3 = var_0.to_box()
    var_4 = var_1.filter(var_0)
    var_5 = var_3.ap(var_2)
    var_6 = var_5.to_lazy()
    var_3.map(var_5)


def test_case_19():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = module_0.Maybe(bool_0, str_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.filter(var_1)
    var_3 = var_1.ap(str_0)
    var_4 = var_3.ap(var_2)
    var_5 = var_3.bind(str_0)
    none_type_0 = None
    var_6 = var_3.to_box()
    var_7 = var_3.to_box()
    var_8 = var_7.to_validation()
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_9 = maybe_1.to_box()
    bool_1 = var_6.__eq__(var_3)
    bool_2 = maybe_1.__eq__(bool_1)
    var_10 = maybe_1.to_lazy()
    var_11 = var_1.to_validation()
    var_12 = var_2.to_either()
    var_13 = var_10.to_try()


def test_case_20():
    str_0 = "j>\r0\tF7&WsZ>g5Y!"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(str_0)
    var_2 = var_1.bind(str_0)
    none_type_0 = None
    var_3 = var_1.to_box()
    var_4 = var_1.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    bool_2 = var_3.__eq__(var_1)
    var_3.get_or_else(bool_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_box()
    bool_2 = var_0.__eq__(var_1)
    maybe_2 = module_0.Maybe(bool_2, bool_1)
    var_2 = maybe_2.to_box()
    var_3 = var_0.to_try()
    bool_3 = maybe_0.__eq__(var_3)
    bool_4 = var_1.__eq__(var_2)
    var_4 = var_1.to_lazy()
    var_0.to_box()
