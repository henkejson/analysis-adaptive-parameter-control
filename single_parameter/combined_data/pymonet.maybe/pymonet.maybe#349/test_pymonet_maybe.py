# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    int_0 = -2185
    set_0 = {int_0, none_type_0, int_0, none_type_0, int_0}
    int_1 = -406
    dict_0 = {int_0: int_0, int_0: set_0, int_0: int_0, none_type_0: int_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_1.ap(maybe_1)
    bool_2 = var_2.__eq__(var_1)
    var_3 = var_1.to_either()
    var_0.to_box()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    bool_2 = True
    maybe_1 = module_0.Maybe(dict_0, bool_2)
    bool_3 = maybe_1.__eq__(bool_1)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    bytes_0 = b"T\x17\xec)\xa6.\x01\xeeC\xb1!Q\x1b\xf9"
    int_0 = 291
    set_0 = {int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.get_or_else(bool_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = "V[zLl<pY"
    tuple_0 = (bool_0, str_0, str_0)
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)
    bool_2 = True
    var_1 = maybe_0.ap(bool_2)
    var_2 = maybe_0.bind(var_1)
    list_0 = [tuple_0, str_0, tuple_0]
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_2.ap(var_1)
    var_6 = var_2.bind(maybe_0)
    var_7 = var_6.ap(var_3)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_8 = maybe_0.to_either()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = maybe_1.to_validation()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_validation()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2 = module_0.Maybe(maybe_1, none_type_1)
    maybe_1.filter(none_type_1)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    dict_0 = {}
    bool_1 = False
    bytes_0 = b"8$\xd7\x883V\x02\x1e"
    none_type_1 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    var_0 = maybe_1.get_or_else(bool_1)
    var_0.filter(dict_0)


def test_case_13():
    float_0 = -270.72
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    bool_1 = var_1.__eq__(bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_try()
    var_3.to_validation()


def test_case_15():
    str_0 = "r+"
    dict_0 = {str_0: str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_0.to_box()
    var_4 = var_3.to_try()
    bool_1 = True
    int_0 = -1163
    dict_1 = {int_0: int_0, int_0: int_0}
    bool_2 = True
    maybe_1 = module_0.Maybe(dict_1, bool_2)
    bool_3 = maybe_1.__eq__(bool_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    none_type_0 = None
    int_0 = -2185
    set_0 = {int_0, none_type_0, int_0, none_type_0, int_0}
    int_1 = -406
    dict_0 = {int_0: int_0, int_0: set_0, int_0: int_0, none_type_0: int_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_1.filter(var_2)
    bool_2 = dict_0.__eq__(bool_0)
    var_4 = var_3.to_either()
    maybe_2 = module_0.Maybe(set_0, int_0)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_2.to_validation()
    var_7 = maybe_2.to_either()
    var_8 = var_7.ap(none_type_0)
    var_9 = var_8.to_box()
    var_9.to_box()


def test_case_18():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    var_2.filter(bool_0)


def test_case_19():
    int_0 = -1441
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    float_0 = 1377.77027
    float_1 = 696.0
    str_0 = ";i|3kkp2}WYp\x0b@5h{A"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.ap(float_1)
    var_3 = var_2.filter(float_0)
    var_4 = var_3.to_try()
    var_5 = var_4.bind(int_0)
    var_5.to_either()


def test_case_20():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_either()
    bool_1 = var_1.__eq__(maybe_0)
    var_4 = var_3.to_box()
    var_3.bind(none_type_1)


def test_case_22():
    none_type_0 = None
    int_0 = -2185
    set_0 = {int_0, none_type_0, int_0, none_type_0, int_0}
    int_1 = -406
    dict_0 = {int_0: int_0, int_0: set_0, int_0: int_0, none_type_0: int_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_1.ap(maybe_1)
    bool_2 = var_2.__eq__(var_1)
    var_3 = maybe_1.ap(none_type_0)
    var_4 = var_2.ap(int_1)
    var_5 = var_4.filter(var_0)
    bool_3 = maybe_1.__eq__(var_3)
    var_6 = var_4.to_either()
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_7 = var_3.to_lazy()
    var_8 = var_7.to_validation()
    var_9 = maybe_1.to_either()
    bool_4 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_4)
    bool_5 = var_1.__eq__(maybe_2)


def test_case_23():
    none_type_0 = None
    int_0 = -2185
    set_0 = {int_0, none_type_0, int_0, none_type_0, int_0}
    int_1 = -406
    dict_0 = {int_0: int_0, int_0: set_0, int_0: int_0, none_type_0: int_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_1.ap(maybe_1)
    bool_2 = var_2.to_lazy()
    var_3 = maybe_1.ap(none_type_0)
    var_4 = var_2.ap(int_1)
    var_5 = var_4.filter(var_0)
    var_6 = var_5.ap(var_0)
    var_7 = var_4.to_either()
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_8 = var_3.to_lazy()
    var_9 = var_8.to_validation()
    var_10 = maybe_1.to_either()
    bool_3 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_3)
    bool_4 = var_1.__eq__(maybe_2)
