# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 1501
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"Kf\x1f/&;I\xc7\xa8\xc7\x18"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    bool_1 = var_2.__eq__(maybe_0)
    var_3 = var_2.to_box()
    bool_2 = maybe_0.__eq__(var_1)
    var_4 = maybe_0.bind(var_1)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.ap(maybe_0)
    var_7 = var_5.to_try()
    var_8 = var_6.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_1 = var_0.__eq__(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = var_0.map(set_0)
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, var_2)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.ap(var_2)
    var_5 = maybe_1.to_lazy()
    var_6 = var_5.to_validation()
    maybe_0.filter(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    str_0 = "YdFVN^3P[/^Ew5"
    bytes_0 = b"\xd2\x7f\xf9"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(var_0)
    var_2 = var_1.to_box()
    var_3 = var_1.to_box()
    bool_3 = var_3.__eq__(bool_2)
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_10():
    int_0 = 1965
    bytes_0 = b""
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.get_or_else(int_0)
    var_1.to_try()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.to_lazy()
    maybe_1.filter(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_validation()
    maybe_0.filter(var_2)


def test_case_14():
    str_0 = "n4<m&D:WP8Hj~^q&Y"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(str_0)


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_3.to_validation()


def test_case_16():
    generic_0 = module_1.Generic()
    list_0 = [generic_0, generic_0, generic_0]
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(list_0)


def test_case_17():
    int_0 = 1504
    str_0 = "6t+rE<`<'N/kw."
    maybe_0 = module_0.Maybe(int_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    bool_1 = var_2.__eq__(int_0)
    var_3 = maybe_0.to_try()
    var_0.bind(var_3)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    int_0 = 1504
    set_0 = {int_0, int_0}
    bool_0 = True
    str_0 = "6t+rE<`<'N/kw."
    maybe_0 = module_0.Maybe(int_0, str_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(int_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.to_validation()
    var_5 = var_4.to_box()
    var_6 = var_5.to_either()


def test_case_20():
    int_0 = 4104
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.to_validation()
    var_1.ap(bool_0)


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2.bind(var_3)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = -289.06
    set_0 = {float_0, float_0, float_0}
    none_type_1 = None
    none_type_2 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_2, bool_1)
    var_0 = maybe_1.filter(none_type_1)
    var_1 = var_0.map(set_0)
    var_2 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_3 = var_0.ap(none_type_1)
    var_4 = var_3.to_try()
    var_5 = var_3.to_box()
    var_6 = var_3.to_box()
    bool_2 = maybe_2.__eq__(var_0)
    var_7 = maybe_1.bind(var_4)
