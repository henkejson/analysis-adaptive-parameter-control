# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xbe}/\xcb\xaf(\x9e\xe4\x1d\xa2jVH\x01\t\xa1\xa5\xef"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\x1a\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, var_0)
    var_1 = maybe_2.bind(maybe_0)
    bool_1 = var_1.__eq__(maybe_2)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.bind(maybe_2)
    var_4 = var_1.filter(maybe_2)
    var_5 = var_4.filter(var_2)
    maybe_3 = module_0.Maybe(var_0, var_5)
    maybe_0.filter(var_0)


def test_case_3():
    bytes_0 = b"\x1a\xac"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.map(bool_1)
    object_0 = module_1.object()
    bool_2 = False
    maybe_1 = module_0.Maybe(object_0, bool_2)
    var_1 = maybe_1.to_validation()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_5():
    int_0 = 650
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(int_0)


def test_case_6():
    none_type_0 = None
    int_0 = -782
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.to_try()


def test_case_7():
    bytes_0 = b"\x94}\x07x&\xe5\xe1\xe1"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_1.ap(bytes_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\xe8\x8a\xf7o9t\xc2U\xdbH\xa6_^\x8d\xebU\x8b"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"\x1a\xac"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.bind(none_type_0)
    bool_3 = maybe_1.__eq__(bytes_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.bind(var_2)
    var_4 = var_1.map(var_2)
    object_0 = module_1.object()
    var_5 = var_4.filter(var_2)
    bool_4 = False
    maybe_2 = module_0.Maybe(object_0, bool_4)
    var_6 = maybe_2.get_or_else(none_type_0)
    var_7 = maybe_2.to_validation()


def test_case_11():
    int_0 = -6201
    maybe_0 = module_0.Maybe(int_0, int_0)
    float_0 = 2007.0
    set_0 = set()
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(set_0)
    var_2 = maybe_0.map(var_1)
    tuple_0 = (float_0, set_0)
    none_type_0 = None
    var_3 = var_1.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(tuple_0)


def test_case_12():
    int_0 = 3531
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(int_0)


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\xe8\x8a\xf7o9t\xc2U\xdbH\xa6_^\x8d\xebU\x8b"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_try()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\\\x08O\x9d\xc4n\xddz\xab\xc0\xe8\xd5 \x89"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_1.get_or_else(none_type_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    var_2.to_box()


def test_case_16():
    none_type_0 = None
    bytes_0 = b"\x1a\xac"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.bind(none_type_0)
    bool_3 = maybe_1.__eq__(bytes_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.bind(var_2)
    var_4 = var_1.map(var_2)
    object_0 = module_1.object()
    var_5 = var_4.filter(var_2)
    bool_4 = False
    maybe_2 = module_0.Maybe(object_0, bool_4)
    var_6 = var_5.to_try()
    var_7 = maybe_2.get_or_else(none_type_0)
    var_8 = maybe_2.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_18():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\x17 \x94\xbd\x0c\x99"
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.filter(maybe_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.filter(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, var_1)
    var_2 = maybe_2.bind(var_1)
    var_3 = maybe_2.bind(maybe_0)
    bool_2 = var_3.__eq__(maybe_2)
    var_4 = var_2.to_validation()
    var_5 = var_3.bind(maybe_2)
    var_6 = var_3.filter(maybe_2)
    var_7 = var_6.filter(var_4)
    maybe_3 = module_0.Maybe(var_1, var_7)
    maybe_0.filter(var_1)


def test_case_20():
    complex_0 = 2759.55 - 3388.338518j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
