# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.ap(maybe_0)
    bool_1 = maybe_0.__eq__(var_2)
    bool_2 = var_1.__eq__(maybe_1)
    bool_3 = var_2.__eq__(maybe_0)
    var_3 = maybe_1.map(bool_2)
    var_4 = var_1.filter(none_type_0)
    var_5 = maybe_1.to_validation()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = maybe_0.to_box()
    bool_1 = maybe_1.__eq__(var_3)
    maybe_0.bind(var_1)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    none_type_1 = None
    float_0 = -1805.0
    maybe_1 = module_0.Maybe(none_type_1, float_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.get_or_else(none_type_1)
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_1.get_or_else(none_type_0)


def test_case_5():
    str_0 = "qht=*7]q4df>_0Z0-R"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.map(str_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_1.bind(maybe_1)
    var_3 = var_1.get_or_else(var_1)
    bool_2 = bool_0.__eq__(maybe_0)
    var_4 = maybe_1.map(var_3)
    var_5 = var_1.to_lazy()
    maybe_0.filter(maybe_0)


def test_case_7():
    set_0 = set()
    float_0 = -552.03633
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\\\xf8\xb8\xfdz"
    int_0 = 442
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    int_1 = -2348
    maybe_1 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(bytes_0)
    var_3.to_validation()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_validation()
    var_2 = maybe_0.to_lazy()
    maybe_0.filter(var_2)


def test_case_11():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_1 = maybe_0.get_or_else(set_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_either()
    var_4 = var_3.to_validation()
    var_5 = var_3.to_box()
    var_0.filter(var_3)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.ap(maybe_0)
    bool_1 = maybe_0.__eq__(var_2)
    bool_2 = var_1.__eq__(maybe_1)
    var_3 = maybe_1.bind(var_2)
    var_4 = var_1.get_or_else(var_1)
    bool_3 = var_2.__eq__(maybe_0)
    bool_4 = var_0.__eq__(bool_1)
    maybe_2 = module_0.Maybe(var_2, none_type_0)
    var_5 = maybe_2.to_either()
    var_6 = var_3.to_validation()
    var_7 = var_2.filter(none_type_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    var_1.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    int_0 = -830
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_box()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = maybe_0.to_lazy()
    bool_1 = var_3.to_validation()
    var_4 = maybe_1.bind(var_2)
    var_5 = var_1.get_or_else(var_1)
    bool_2 = var_2.__eq__(maybe_0)
    bool_3 = maybe_1.to_either()
    var_3.to_lazy()
