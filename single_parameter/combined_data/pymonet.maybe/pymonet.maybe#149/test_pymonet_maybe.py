# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = -1753
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.bind(var_0)
    var_3 = var_0.to_either()
    var_4 = var_0.to_box()
    var_3.to_either()


def test_case_3():
    dict_0 = {}
    dict_1 = {}
    maybe_0 = module_0.Maybe(dict_1, dict_1)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(dict_0)
    maybe_0.map(var_0)


def test_case_4():
    int_0 = -1071
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_1.map(int_0)


def test_case_5():
    bytes_0 = b"\x90\x18\xf5\n\x17\xf4\x16,\xe4\xb8L\x83\x13?X\xd5\xb1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.map(var_1)
    var_4 = var_0.bind(var_1)
    object_0 = module_1.object()
    var_5 = var_4.ap(object_0)
    var_6 = var_2.to_box()
    var_7 = var_2.filter(var_0)
    var_8 = var_2.to_validation()
    var_9 = var_5.to_try()
    var_10 = var_0.filter(var_5)
    var_11 = var_10.get_or_else(var_1)
    var_12 = var_0.get_or_else(var_11)
    var_13 = var_1.to_box()
    var_12.get_or_else(var_3)


def test_case_6():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.to_box()
    maybe_0.filter(var_2)


def test_case_9():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_box()
    maybe_0.filter(var_1)


def test_case_10():
    float_0 = 921.3
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_validation()
    var_1.bind(var_0)


def test_case_11():
    complex_0 = 582.77 - 373.90917j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_0.to_either()


def test_case_12():
    int_0 = 4874
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_2 = maybe_1.to_either()


def test_case_13():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_14():
    bytes_0 = b"\x900\xdd\xb4\x15t\x1b5^#U\xcc"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_15():
    float_0 = -97.821026
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_16():
    str_0 = "\t\x0b+2n;<Md7YpgIOG6;m"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_either()
    var_5 = var_3.map(var_3)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_2 = maybe_1.get_or_else(maybe_2)
    var_3 = var_1.bind(var_2)
    var_4 = var_2.to_try()
    var_5 = var_3.to_validation()
    bool_2 = var_0.__eq__(var_3)
    var_6 = maybe_3.to_lazy()
    var_7 = var_3.filter(none_type_0)
    var_8 = var_1.ap(var_6)
    var_9 = maybe_1.to_try()
    var_10 = var_3.filter(var_2)
    maybe_1.filter(var_7)


def test_case_18():
    bytes_0 = b"\x90\x18\xf5\n\x17\xf4\x16,\xe4\xb8L\x83\x13?X\xd5\xb1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    object_0 = module_1.object()
    var_3 = maybe_1.ap(object_0)
    var_4 = var_2.to_box()
    var_5 = var_2.filter(var_0)
    var_6 = var_2.to_validation()
    var_7 = var_3.to_try()
    str_0 = "c%WGe@1\t\t^"
    var_8 = var_7.bind(var_4)
    bool_0 = False
    var_9 = var_3.to_lazy()
    maybe_2 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_2.__eq__(object_0)
    bool_2 = var_3.__eq__(maybe_1)
