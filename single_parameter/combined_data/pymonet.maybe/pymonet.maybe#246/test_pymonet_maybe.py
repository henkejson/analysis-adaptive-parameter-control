# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -3460
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = ";{?75rb[D\th}Va"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    str_1 = 'CXSctqW)W,k\x0b"paBZ8\\F'
    var_1 = maybe_0.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(str_1, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_2.to_either()
    var_3 = maybe_2.to_box()
    bool_0.to_try()


def test_case_3():
    generic_0 = module_1.Generic()
    list_0 = [generic_0, generic_0, generic_0, generic_0]
    maybe_0 = module_0.Maybe(generic_0, list_0)
    var_0 = maybe_0.bind(generic_0)
    var_1 = maybe_0.ap(generic_0)
    var_2 = var_0.to_either()
    var_3 = var_0.to_lazy()
    none_type_0 = None
    bool_0 = var_0.__eq__(var_3)
    bool_1 = True
    var_4 = var_3.to_either()
    var_5 = maybe_0.to_lazy()
    var_6 = var_2.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_7 = maybe_1.to_validation()
    var_7.filter(list_0)


def test_case_4():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.map(list_0)
    var_2 = var_0.ap(list_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_3 = var_1.filter(bool_0)
    var_4 = maybe_1.to_box()
    maybe_1.filter(var_4)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = var_0.filter(bool_0)
    maybe_1.filter(maybe_1)


def test_case_7():
    bytes_0 = b"\xd5l\x0f\x87\x14\xa7f]\xbb0x\x9a\x9a\xe3!\x9a"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.ap(list_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_2 = var_0.filter(bool_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_box()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = var_0.get_or_else(var_0)
    maybe_1.filter(var_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.filter(bool_1)


def test_case_13():
    bytes_0 = b"\xe5}\x15()\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = maybe_0.to_try()
    float_0 = 1371.8
    bool_1 = False
    maybe_3 = module_0.Maybe(float_0, bool_1)
    var_2 = maybe_3.to_box()
    bool_2 = var_2.__eq__(var_0)
    maybe_4 = module_0.Maybe(var_2, var_2)
    var_3 = maybe_4.filter(float_0)
    var_4 = maybe_4.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_1 = maybe_1.to_either()
    bool_1 = False
    var_2 = maybe_2.get_or_else(var_1)
    maybe_3 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(var_2)


def test_case_15():
    str_0 = 'CXSctqW)W,k\x0b"paBZ8\\F'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.filter(var_1)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.filter(maybe_1)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_validation()
    var_5 = var_3.to_validation()
    var_6 = var_3.to_box()
    var_7 = var_3.to_validation()
    var_8 = maybe_2.to_either()
    var_6.filter(var_8)


def test_case_18():
    int_0 = -586
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    str_0 = "*,\\?ux,l"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_1.get_or_else(str_0)


def test_case_20():
    bytes_0 = b"\xe5}\x15\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    float_0 = 1371.8
    bool_1 = False
    maybe_3 = module_0.Maybe(float_0, bool_1)
    var_3 = var_0.filter(bool_0)
    var_4 = var_3.ap(maybe_1)
    var_5 = var_0.to_lazy()
    var_6 = var_5.map(var_0)
    bool_2 = maybe_0.__eq__(var_4)
    var_7 = maybe_2.ap(var_6)
    var_8 = maybe_3.to_validation()


def test_case_21():
    bytes_0 = b"\xe5}\x15()\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    float_0 = 1371.8
    bool_1 = False
    maybe_3 = module_0.Maybe(float_0, bool_1)
    var_3 = var_0.filter(bool_0)
    var_4 = var_3.ap(maybe_1)
    var_5 = var_0.to_lazy()
    var_6 = var_5.map(var_0)
    bool_2 = maybe_0.__eq__(var_4)
    var_7 = maybe_2.ap(var_6)
    var_8 = var_3.map(maybe_1)


def test_case_22():
    complex_0 = 1401.196328 + 1401.193796j
    tuple_0 = (complex_0, complex_0, complex_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)
