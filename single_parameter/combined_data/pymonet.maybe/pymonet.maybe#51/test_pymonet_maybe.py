# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(maybe_0)
    bool_1 = var_1.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"-"
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.ap(none_type_0)


def test_case_5():
    bytes_0 = b"`\xa1\x805\x0e"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(maybe_0)
    bool_1 = var_1.__eq__(none_type_0)
    var_2 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = var_1.to_either()
    maybe_1.filter(var_3)


def test_case_7():
    str_0 = "Aa~7Pmq+$\x0c"
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.bind(str_0)


def test_case_8():
    str_0 = ")i\x0c1|"
    str_1 = "K-V)y"
    maybe_0 = module_0.Maybe(str_0, str_1)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.ap(str_1)
    var_2 = maybe_0.to_lazy()


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_10():
    int_0 = 375
    bool_0 = True
    tuple_0 = ()
    maybe_0 = module_0.Maybe(bool_0, tuple_0)
    var_0 = maybe_0.get_or_else(int_0)
    none_type_0 = None
    float_0 = -802.2507
    list_0 = [float_0, float_0]
    list_1 = [list_0, list_0, list_0]
    bool_1 = True
    maybe_1 = module_0.Maybe(list_1, bool_1)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_1.filter(var_0)


def test_case_11():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.ap(int_0)


def test_case_12():
    str_0 = ""
    str_1 = "F-D]#x#b+v/}"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_box()
    var_3.ap(str_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bytes_0 = b"\xccZ\xc9\x91\xca\xcb\x97)"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_15():
    str_0 = "Q"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1.bind(var_1)


def test_case_17():
    bytes_0 = b"\xb7\x12\x8a\x88\xd8\xe8\xe1\xd8\xb5\xad\x82\xdc "
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(maybe_0)
    bool_1 = var_1.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_1.to_either()
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = var_2.__eq__(bool_2)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_2.to_try()
    var_5 = var_2.map(var_4)
    maybe_1.filter(var_3)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_1 = var_1.__eq__(none_type_0)
    bool_2 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    bool_3 = maybe_1.__eq__(maybe_1)
    var_3 = var_2.to_try()
    bool_4 = var_2.__eq__(bool_3)
    maybe_1.filter(var_2)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = var_0.__eq__(bool_0)
    maybe_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = maybe_0.filter(var_1)
    bool_1 = var_2.__eq__(var_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_3 = var_0.to_either()
    var_4 = maybe_0.filter(var_3)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = var_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_1 = var_0.to_either()
    bool_3 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_validation()
    bool_4 = maybe_1.__eq__(var_1)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.to_try()
    var_2.map(var_3)
