# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xb3\xbcG\x1f\xe6\xde\x81h"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.ap(bool_0)
    bool_1 = False
    var_3 = maybe_0.filter(var_2)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    bool_2 = maybe_0.__eq__(var_2)
    maybe_2 = module_0.Maybe(var_2, bool_1)
    var_4 = var_0.bind(var_0)
    var_5 = var_4.bind(bool_1)
    maybe_2.filter(var_2)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    var_1 = maybe_0.filter(bool_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = var_0.bind(bool_1)
    maybe_1.filter(var_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.map(bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_0.to_box()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_1)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    float_0 = 1402.1927
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(float_0)


def test_case_7():
    list_0 = []
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(list_0)
    maybe_1 = module_0.Maybe(list_0, none_type_0)
    var_1 = maybe_1.get_or_else(list_0)
    var_1.get_or_else(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"b[\x0c\xc2\xe9\xa48&\x9c\x01\xc6\xdc\xdc]F0"
    none_type_1 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"z\xde Q\x8bi\xed\x03E\xb9\x8d`\xf2\x14\x14|\xe6\xb4O"
    bytes_1 = b"\x18v;\xc2\xbe8\xc2g\xdf@\xd3\xe5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    bytes_2 = b"\xb7"
    tuple_0 = (var_0, bytes_1, bytes_2)
    maybe_1 = module_0.Maybe(tuple_0, var_0)
    var_1 = maybe_1.filter(bytes_0)


def test_case_10():
    bytes_0 = b"z\xde Q\x8bi\xed\x03E\xb9\x8d`\xf2\x14\x14|\xe6\xb4O"
    bytes_1 = b"\x18v;\xc2\xbe8\xc2g\xdf@\xd3\xe5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(bytes_0)


def test_case_11():
    str_0 = "b5"
    set_0 = set()
    str_1 = "bx\tL\nr"
    list_0 = [str_1, str_1, str_1, str_1]
    bool_0 = False
    maybe_0 = module_0.Maybe(str_1, bool_0)
    tuple_0 = (set_0, str_1, list_0, maybe_0)
    maybe_1 = module_0.Maybe(tuple_0, list_0)
    var_0 = maybe_1.get_or_else(str_0)
    var_0.to_validation()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    bool_1 = False
    var_2 = maybe_0.filter(var_0)
    maybe_1 = var_1.to_either()
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_3 = var_0.bind(var_0)
    var_4 = var_3.bind(bool_1)
    maybe_2.filter(maybe_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.filter(bool_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    var_0.filter(var_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_1.to_try()
    var_2.to_validation()


def test_case_16():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(list_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_either()
    var_1.ap(var_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    var_2 = var_0.ap(var_0)
    var_3 = var_1.ap(bool_0)
    var_4 = var_1.filter(var_3)
    bool_1 = False
    var_5 = var_1.get_or_else(var_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    bool_3 = maybe_0.__eq__(var_3)
    maybe_2 = module_0.Maybe(var_3, bool_1)
    var_6 = maybe_0.map(bool_0)
    var_7 = maybe_2.to_either()
    var_8 = var_5.bind(var_5)
    var_9 = var_0.to_try()
    float_0 = 1660.93978
    var_10 = var_8.bind(float_0)
    maybe_2.filter(var_3)


def test_case_19():
    bytes_0 = b"\xc36\xf7:\xe1\xf0X\x82{*ig\x0bX\xc3\xaf\xcc\xca"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(var_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = -423
    bool_1 = False
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.bind(none_type_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    bool_1 = False
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.bind(var_0)
    maybe_1 = module_0.Maybe(var_3, bool_1)
    var_4 = var_0.bind(var_0)
    var_5 = var_4.bind(bool_1)
    maybe_1.filter(maybe_0)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = -423
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    maybe_2.bind(var_0)
