# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -585.0708158173518
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -1138
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(maybe_0, var_1)
    var_3 = maybe_2.to_either()
    var_0.ap(none_type_1)


def test_case_3():
    int_0 = -1138
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_1.to_either()
    float_0 = 1718.548594
    var_3.ap(float_0)


def test_case_4():
    complex_0 = -1823.5 + 1277.7j
    bytes_0 = b"G"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.ap(complex_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = 1955
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.bind(int_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    var_3.filter(int_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"D\xf8\x12\xb2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(maybe_0)


def test_case_10():
    bytes_0 = b'<\xbe\x98"\x00\xac\x7f\xcf\x88V\xf5T\xc0\x90\xd0\xb7{\x95'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    str_0 = ".5$uaUH"
    bytes_0 = b"\x1fg\xe7\xac\x82\\\xb7`\x80v}\x10?t$\xd4\x93\x02H."
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.get_or_else(tuple_0)


def test_case_12():
    int_0 = 1370
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(int_0)
    var_1.to_box()


def test_case_13():
    int_0 = 1026
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    dict_0 = {}
    tuple_1 = (dict_0,)
    list_0 = [tuple_1, dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.filter(tuple_0)


def test_case_15():
    float_0 = 11.186056
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.bind(float_0)
    var_1 = var_0.to_lazy()
    bool_1 = False
    int_0 = 96
    set_0 = {int_0}
    bool_2 = True
    maybe_2 = module_0.Maybe(set_0, bool_2)
    var_2 = maybe_2.ap(bool_1)
    var_3 = var_0.to_box()
    var_4 = var_2.map(var_3)
    var_5 = var_2.to_lazy()
    var_5.to_lazy()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    maybe_0.filter(var_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"f\x138\xa2\xe1J\x92Q\x1f\xd8\xaf\x97\xaa7\x08\xbf)"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_either()


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    int_0 = 440
    maybe_0 = module_0.Maybe(none_type_1, int_0)
    var_0 = maybe_0.get_or_else(none_type_1)
    maybe_1 = module_0.Maybe(none_type_1, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_3.map(none_type_0)


def test_case_21():
    none_type_0 = None
    bytes_0 = b"f\x138\xa2\xe1J\x92Q\x1f\xd8\xaf\x97\xaa7\x08\xbf)"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = var_1.__eq__(bytes_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.bind(none_type_0)
    var_3.to_validation()
