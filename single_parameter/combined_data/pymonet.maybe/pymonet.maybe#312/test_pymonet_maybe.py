# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.map(bool_1)
    var_4 = var_3.ap(var_3)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(bool_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.ap(bool_1)
    var_5 = var_2.map(bool_1)
    var_6 = var_5.bind(var_4)
    var_7 = var_6.map(var_2)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.get_or_else(bool_1)
    var_2.map(bool_1)


def test_case_9():
    float_0 = 1217.989862
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_4 = maybe_0.to_box()
    var_5 = var_2.bind(var_4)
    var_3.ap(none_type_0)


def test_case_11():
    bytes_0 = b"\xf31\x00\x97\\\xea\xea3Lr\xf8\x05\xc0\xdeOZ\x9f"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_1.filter(bytes_0)


def test_case_12():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bytes_0 = b"0  u\xda%\x06\xab\xcc\xd4\x94\x8e\xa4\x1c\x93"
    maybe_0.filter(bytes_0)


def test_case_14():
    float_0 = 1217.989862
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.filter(maybe_1)
    maybe_2 = module_0.Maybe(bool_0, var_0)
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_try()
    maybe_0.filter(bool_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(none_type_0)
    none_type_0.to_box()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_17():
    bytes_0 = b"s\xfb\x07\xf53\xfd\xb9*Y\xed?\x81\xbd\xcf\x9f\x94\xd3\xc8\xed"
    list_0 = [bytes_0, bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_0.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(list_0)
    var_5 = var_0.bind(var_4)
    var_5.filter(var_4)


def test_case_18():
    bool_0 = False
    bytes_0 = b"o\xe3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    var_3.get_or_else(bytes_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_20():
    complex_0 = -1338.769322 + 1393.610658j
    bytes_0 = b"\x06\x9b\xd9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(complex_0)
    bytes_1 = b"%H\xc0\x1d\x0cp\x9a"
    none_type_0 = None
    var_1 = maybe_0.ap(complex_0)
    maybe_1 = module_0.Maybe(complex_0, var_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = maybe_1.get_or_else(var_1)
    var_3 = var_2.to_try()
    var_4 = maybe_1.map(bytes_1)
    list_0 = []
    maybe_2 = module_0.Maybe(list_0, var_3)
    var_5 = var_4.get_or_else(none_type_0)
    var_6 = maybe_1.to_lazy()
    var_7 = var_2.bind(bool_0)
    var_8 = var_7.to_lazy()
    var_9 = var_2.to_validation()
    var_10 = var_0.to_lazy()
    var_11 = var_10.ap(maybe_0)
    bool_1 = True
    maybe_3 = module_0.Maybe(var_10, bool_1)
    var_12 = var_2.map(var_3)
    var_13 = var_2.to_box()


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(bool_0)
    var_2 = maybe_0.get_or_else(var_1)
    var_2.to_box()
