# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 289
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.bind(maybe_0)
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_3():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_either()
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_4():
    bytes_0 = b"bo"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    dict_0 = {}
    tuple_0 = (dict_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    dict_0 = {}
    tuple_0 = (dict_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_2 = maybe_1.filter(var_0)


def test_case_10():
    int_0 = 1
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_validation()


def test_case_11():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    str_0 = "I'>>g-59"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.get_or_else(list_0)


def test_case_12():
    str_0 = "\n        If Maybe is empty return new empty Maybe, in other case\n        takes mapper function and returns new instance of Maybe\n        with result of mapper.\n\n        :param mapper: function to call with Maybe value\n        :type mapper: Function(A) -> B\n        :returns: Maybe[B | None]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.bind(none_type_0)
    var_1 = var_0.bind(bool_0)
    var_2 = var_0.filter(var_1)
    var_3 = var_1.to_lazy()
    var_4 = maybe_1.filter(var_3)
    var_5 = var_0.to_lazy()
    bool_3 = var_1.__eq__(none_type_0)
    var_6 = maybe_0.to_either()
    var_7 = maybe_0.get_or_else(var_4)
    var_8 = var_6.to_try()


def test_case_14():
    dict_0 = {}
    tuple_0 = (dict_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_0.filter(none_type_0)
    var_4 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(var_3)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_0.to_try()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_either()
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = var_0.get_or_else(bool_1)
    var_3 = var_0.to_try()
    var_4 = var_1.bind(bool_2)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    dict_0 = {}
    tuple_0 = (dict_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_2 = maybe_0.ap(var_1)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    str_0 = "J\t+j+J#[ bi"
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.to_either()
    bool_3 = var_2.__eq__(bool_0)
    var_3 = var_2.to_lazy()
    var_3.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_1.filter(none_type_0)


def test_case_22():
    int_0 = 1
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    dict_1 = {int_0: int_0, int_0: int_0, int_0: dict_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_1, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_23():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_24():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    bool_2 = True
    set_0 = {bool_0, bool_2, bool_1}
    maybe_0 = module_0.Maybe(bool_2, set_0)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = var_0.to_try()
    var_2 = var_0.bind(bool_1)
    var_3 = var_2.bind(var_0)
    var_4 = var_0.filter(var_1)
    var_5 = maybe_1.to_lazy()
    var_6 = var_5.to_box()
    maybe_2 = module_0.Maybe(var_2, var_4)
    bool_3 = False
    maybe_3 = module_0.Maybe(bool_1, bool_3)
    var_6.bind(none_type_0)


def test_case_25():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = var_0.bind(bool_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_1.to_box()
    maybe_1 = module_0.Maybe(bool_0, var_6)
    bool_3 = var_2.__eq__(maybe_1)
    var_7 = maybe_0.to_either()
    var_6.get_or_else(var_1)
