# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\xdaO\xad\x0b\xd3V\x99\xc7\x0cL\x94\xcd\xa2\x19y\xd8\xa63"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_4 = maybe_1.get_or_else(var_0)
    var_5 = maybe_1.filter(var_3)


def test_case_3():
    str_0 = "hXWa\\4AMw_JN?kq"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_1.__eq__(none_type_0)
    var_0.bind(none_type_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = False
    maybe_0.map(bool_1)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = var_0.filter(bool_0)
    var_3 = var_2.to_validation()
    maybe_1.filter(maybe_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_1 = None
    none_type_2 = None
    maybe_1 = module_0.Maybe(none_type_2, none_type_2)
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_2 = maybe_2.ap(none_type_1)
    var_3 = var_2.filter(var_1)


def test_case_9():
    float_0 = 437.6667
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.ap(float_0)


def test_case_10():
    generic_0 = module_1.Generic()
    bytes_0 = b"\xdaO\xad\x0b\xd3V\x99\xc7\x0cL\x94\xcd\xa2\x19y\xd8\xa63"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(generic_0)


def test_case_11():
    int_0 = 1658
    bytes_0 = b"\x86+\x96\xa6:z\xf6U\xa2\xfb\x9f"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    tuple_0 = (maybe_0,)
    list_1 = [maybe_0, maybe_0, bytes_0, tuple_0]
    maybe_1 = module_0.Maybe(list_1, bytes_0)
    var_0 = maybe_1.bind(int_0)
    var_1 = maybe_1.get_or_else(int_0)
    var_2 = maybe_0.map(var_1)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_2.filter(none_type_0)
    var_5 = maybe_1.get_or_else(var_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    bool_2 = False
    maybe_3 = module_0.Maybe(var_5, bool_2)
    maybe_1.filter(var_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.get_or_else(bool_1)
    var_4 = var_2.map(maybe_0)
    var_5 = var_2.filter(bool_0)
    var_5.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.to_box()
    var_3 = var_0.filter(none_type_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_2, bool_2)
    maybe_1.filter(bool_1)


def test_case_15():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.ap(none_type_0)


def test_case_16():
    int_0 = 273
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_17():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(maybe_0, none_type_0)
    maybe_3 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_3.map(none_type_0)
    bool_2 = maybe_2.__eq__(maybe_0)
    var_3 = maybe_0.to_lazy()
    maybe_2.filter(bool_1)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = var_0.filter(bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_0)
    maybe_1.filter(maybe_0)
