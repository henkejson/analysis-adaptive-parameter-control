# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"ry]^b\x0b#{\xfe\xf6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"+\x8a\x8c|^\xa5\xb8l\x05\x93$\xa8W?r\xab"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_2.to_validation()


def test_case_3():
    str_0 = "y c7<QY|"
    list_0 = [str_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_validation()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    generic_0 = module_1.Generic()
    int_0 = 3148
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(generic_0)
    var_1 = var_0.get_or_else(none_type_1)
    var_1.ap(none_type_0)


def test_case_6():
    bytes_0 = b"7G\xfe+T\x9e\x9d\xba\xf4\xbe\xfeH-j"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.ap(var_2)
    var_4 = maybe_0.to_try()
    var_5 = var_4.filter(var_4)
    var_6 = var_3.to_validation()
    var_7 = var_4.map(var_5)
    var_8 = var_0.to_either()
    var_5.to_try()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(none_type_1, tuple_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    list_0 = []
    bytes_0 = b"h\x1d\xa3g\x9e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    str_0 = "|;rJ<]^t^Aw"
    bytes_0 = b"d\x06C"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.get_or_else(str_0)
    var_2.to_box()


def test_case_12():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(set_0)
    var_2 = var_0.get_or_else(var_1)
    var_1.to_validation()


def test_case_13():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.filter(list_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    complex_0 = 1301.05745 - 1187.5j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_1.map(complex_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, maybe_0)
    var_3 = maybe_0.to_validation()
    var_2.get_or_else(maybe_1)


def test_case_17():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bytes_0 = b"+\x8a\x8c|^\xa5\xb8l\x05\x93$\xa8W?r\xab"
    bool_0 = bytes_0.__eq__(bytes_0)


def test_case_19():
    int_0 = -634
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = var_1.to_validation()
    bool_0 = var_2.__eq__(var_2)
    bool_1 = var_1.__eq__(int_0)
    var_4 = maybe_0.ap(maybe_0)
    bool_2 = maybe_0.__eq__(var_3)
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_box()
    var_7 = var_1.to_either()
    module_2.object(*var_0)


def test_case_20():
    bytes_0 = b"\xdb\xd1,\xa5\xb2\xd6rw\xc7\x88\xb7\x80`"
    str_0 = "\tTA5<E99c|:As1\r3(V"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    bool_1 = False
    none_type_0 = None
    int_0 = 617
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    var_3.get_or_else(bool_1)


def test_case_21():
    int_0 = -634
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_validation()
    bool_0 = var_2.__eq__(var_2)
    bool_1 = var_1.__eq__(int_0)
    var_4 = maybe_0.ap(maybe_0)
    bool_2 = maybe_0.__eq__(var_4)
    module_1.Generic(**var_1)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0.ap(none_type_0)
