# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    complex_0 = 335.3845 - 1632.672702j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    none_type_0 = None
    str_0 = "\n        Transform Maybe to Box.\n\n        :returns: Box monad with previous value when Maybe is not empty, in other case Box with None\n        :rtype: Box[A | None]\n        "
    none_type_1 = None
    maybe_1 = module_0.Maybe(str_0, none_type_1)
    bool_1 = maybe_1.__eq__(str_0)
    maybe_1.ap(none_type_0)


def test_case_3():
    complex_0 = 1751.087887 - 4.05831j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    bool_1 = True
    var_1 = maybe_0.to_box()
    var_2 = var_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = maybe_1.ap(var_0)
    var_4 = var_3.to_try()
    var_5 = maybe_1.map(var_0)
    var_6 = var_0.bind(var_1)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_7 = maybe_2.to_lazy()


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xef\xb4h!0"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    maybe_1.map(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = var_2.to_try()
    var_4 = var_0.to_box()
    var_3.to_lazy()


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    bytes_0 = b"\x0c-\xe7"
    int_0 = 3027
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(bytes_0)


def test_case_8():
    float_0 = -4142.902
    str_0 = '<z\\8"'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(float_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_validation()


def test_case_9():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1.filter(var_0)


def test_case_10():
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.get_or_else(dict_0)
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    str_0 = "CyY!I5xE"
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_0 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_0, bool_0)
    maybe_3 = module_0.Maybe(bool_1, bool_0)
    var_1 = maybe_3.to_validation()
    maybe_0.filter(var_1)


def test_case_13():
    int_0 = -1769
    bytes_0 = b"\xef\xb4h!0"
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    bool_0 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_2.__eq__(int_0)
    var_0 = maybe_2.to_box()
    maybe_2.map(var_0)


def test_case_14():
    float_0 = -4142.902
    str_0 = '<z\\8"'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(float_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.ap(var_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    str_0 = "CyY!I5xE"
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_lazy()
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.to_try()
    maybe_3 = module_0.Maybe(bool_1, bool_0)
    var_3 = maybe_3.to_validation()
    maybe_0.filter(var_3)


def test_case_16():
    none_type_0 = None
    str_0 = "nYJxK"
    set_0 = {str_0}
    none_type_1 = None
    maybe_0 = module_0.Maybe(set_0, none_type_1)
    var_0 = maybe_0.to_try()
    bool_0 = var_0.__eq__(none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_18():
    none_type_0 = None
    none_type_0.to_lazy()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()
    var_0.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = False
    bool_2 = True
    set_0 = {bool_2, bool_2}
    maybe_1 = module_0.Maybe(set_0, bool_2)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    var_3.ap(bool_1)


def test_case_21():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(generic_0, maybe_0)
    bool_0 = maybe_2.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    maybe_3 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_3.get_or_else(maybe_3)
    var_2 = maybe_2.to_validation()
    maybe_4 = module_0.Maybe(var_2, maybe_1)
    var_3 = var_0.to_lazy()
    maybe_1.filter(var_2)


def test_case_22():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_3.__eq__(maybe_1)
    var_0 = maybe_0.to_either()
    maybe_4 = module_0.Maybe(maybe_1, maybe_1)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_2.to_validation()
    var_0.to_either()
