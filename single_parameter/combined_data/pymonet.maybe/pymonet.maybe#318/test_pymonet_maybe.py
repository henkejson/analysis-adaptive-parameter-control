# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -1770.3
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -1801
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_1.get_or_else(bool_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.map(none_type_0)
    var_5 = var_3.bind(none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0.bind(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    bool_2 = True
    bool_3 = True
    maybe_0 = module_0.Maybe(bool_3, bool_0)
    bool_4 = maybe_0.__eq__(bool_2)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    list_0 = []
    maybe_2 = module_0.Maybe(list_0, bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.filter(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.bind(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(none_type_0)


def test_case_5():
    str_0 = "UQ%"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.bind(str_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.filter(maybe_0)
    var_3 = maybe_0.map(var_1)
    var_4 = var_0.ap(var_2)
    var_5 = var_4.to_validation()
    bool_1 = var_4.__eq__(var_0)
    var_6 = var_4.to_box()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    maybe_1.filter(var_6)


def test_case_7():
    bytes_0 = b"\xc7V\x80j\xc9\rV?\xf3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_9():
    float_0 = -3092.4
    set_0 = {float_0, float_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(set_0)


def test_case_10():
    set_0 = set()
    tuple_0 = (set_0,)
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(tuple_0)
    var_2 = var_1.ap(tuple_0)
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    var_4 = maybe_1.to_either()
    var_5 = var_4.to_validation()


def test_case_11():
    str_0 = "(W2\rt>8/z&Uh|6)Smn="
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bool_0 = False
    str_0 = "\t "
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.map(bool_0)


def test_case_13():
    bytes_0 = b"\xf8\x1a\x134\xfc\x18\x02#\x03\xe8D\xe8\xb0\xe5\xc5\x96"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_3 = var_1.to_box()
    var_1.ap(var_1)


def test_case_14():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    tuple_0 = (bool_0,)
    complex_0 = -2612.24673 - 1405.618j
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(tuple_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.filter(none_type_0)
    var_3.ap(none_type_0)


def test_case_16():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(set_0, var_0)
    bool_0 = maybe_1.__eq__(var_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_1.bind(var_0)
    var_3 = var_2.map(var_0)
    var_4 = var_2.bind(var_2)
    bool_1 = var_3.__eq__(var_4)
    var_5 = var_3.get_or_else(maybe_1)
    var_6 = var_4.to_lazy()
    var_7 = var_3.map(var_0)
    var_0.ap(maybe_2)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_0.to_validation()
    int_0 = -2160
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_0.get_or_else(var_0)
    var_4 = maybe_0.get_or_else(maybe_2)
    var_5 = maybe_2.to_lazy()
    var_6 = var_0.to_validation()
    var_5.get_or_else(maybe_2)


def test_case_19():
    bytes_0 = b"\x81\x00\xa2j"
    str_0 = "t/hskof8/G:mbr(O!"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.map(bytes_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_1.get_or_else(bool_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.map(none_type_0)
    var_5 = var_3.bind(none_type_0)
    var_6 = var_0.to_either()
    var_7 = var_0.to_try()
    var_5.to_either()


def test_case_21():
    float_0 = -345.7
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(float_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_1.to_try()
    var_5 = maybe_0.ap(var_4)
    var_6 = var_5.ap(var_1)
    var_7 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(var_5)
    var_8 = var_6.get_or_else(var_2)
    maybe_1 = module_0.Maybe(var_6, var_0)
    var_9 = var_4.map(var_7)
    var_4.ap(var_8)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(none_type_0)
