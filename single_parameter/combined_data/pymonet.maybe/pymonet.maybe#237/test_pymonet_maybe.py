# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "N>pRy]Z]\t}d}G^c"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    float_0 = -1068.84322
    tuple_0 = (float_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    int_0 = 0
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    bytes_0 = b".\x01B1\xd0E'\xe5c\xd7\x06\x10g\xde\xa6$M\xc8\xce@"
    maybe_1 = module_0.Maybe(int_0, bytes_0)
    bool_1 = maybe_1.__eq__(var_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = maybe_1.ap(none_type_0)
    var_3 = maybe_1.to_try()
    bool_2 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_try()
    var_5 = var_2.ap(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = var_5.__eq__(var_5)
    var_6 = var_2.ap(var_3)
    bool_3 = maybe_1.__eq__(var_4)
    maybe_1.filter(bool_3)


def test_case_5():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = var_3.__eq__(var_3)
    maybe_1.filter(bool_2)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_8():
    bytes_0 = b"\xd6\xa4\x1e{{\xceo"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    maybe_1.filter(bool_2)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_either()


def test_case_12():
    bool_0 = True
    bytes_0 = b"N-.\x9c+\xea\xf8KH\xe2\xb1\x1f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(bool_0)


def test_case_13():
    none_type_0 = None
    int_0 = -4304
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = var_0.get_or_else(none_type_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_2.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    float_0 = -2141.39
    none_type_0 = None
    bytes_0 = b"Ot\xb6xH\xe4;\x0e\xa6C\x88\xc4\xb7\xa8Y"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.to_box()
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_box()
    var_4.ap(none_type_0)


def test_case_16():
    int_0 = -3622
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(int_0)
    var_1.to_lazy()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.filter(var_2)
    var_4 = var_3.to_validation()
    var_5 = var_3.to_box()
    var_6 = var_5.to_try()
    bytes_0 = b".\x01B1\xd0E'\xe5c\xd7\x06\x10g\xde\xa6$M\xc8\xce@"
    maybe_1 = module_0.Maybe(var_4, var_2)
    bool_1 = maybe_1.__eq__(var_1)
    var_4.ap(bytes_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    var_4 = var_0.ap(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = var_4.__eq__(var_4)
    var_5 = var_1.to_try()
    var_6 = var_1.ap(var_2)
    bool_3 = maybe_1.__eq__(var_3)
    var_7 = var_2.to_try()
    maybe_1.filter(var_7)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    int_0 = -1554
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0.to_lazy()


def test_case_21():
    float_0 = -1068.84322
    tuple_0 = (float_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
