# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1
import builtins as module_2


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "@O"
    maybe_0 = module_1.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(var_0)
    bool_0 = var_0.__eq__(var_2)
    var_3 = var_2.to_box()
    var_4 = var_1.map(var_3)
    var_5 = var_3.to_lazy()
    var_3.filter(var_1)


def test_case_3():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    bool_0 = False
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_1.Maybe(generic_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_2)


def test_case_4():
    str_0 = "@O"
    maybe_0 = module_1.Maybe(str_0, str_0)
    bool_0 = True
    float_0 = 702.685
    maybe_1 = module_1.Maybe(bool_0, float_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_either()
    var_3.ap(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1.map(var_0)


def test_case_6():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.bind(int_0)
    float_0 = 1622.52929
    none_type_0 = None
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    var_3 = maybe_1.get_or_else(float_0)
    var_3.to_box()


def test_case_7():
    str_0 = "fwD(Aux="
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0, list_0]
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.bind(list_1)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"}\xaduk\x00\xa2OS\x81\x11\x1d\xc2\xad\xdc\x10\xd1\xf5"
    maybe_0 = module_1.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    module_2.object(**bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    bool_0 = False
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_1.Maybe(generic_0, bool_0)
    var_1 = var_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = maybe_1.get_or_else(bool_0)
    var_4 = var_0.to_lazy()
    var_5 = maybe_1.to_either()
    var_6 = maybe_1.to_lazy()
    var_7 = var_4.bind(var_3)
    var_2.map(var_0)


def test_case_13():
    none_type_0 = None
    list_0 = []
    maybe_0 = module_1.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_14():
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_1.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_15():
    str_0 = ",<|{>8t[-"
    str_1 = "ImmutableList{}"
    none_type_0 = None
    maybe_0 = module_1.Maybe(str_1, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_1.get_or_else(str_0)


def test_case_16():
    bytes_0 = b"7N\xe9*\xf1\x1c97d/\xc3\x8f\xd1\x90"
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    bytes_1 = b"W7\x01\xa1\x98\x00v\x02\x17R\x1cA\x93{\xbb\xff\xe9"
    maybe_0 = module_1.Maybe(tuple_0, bytes_1)
    var_0 = maybe_0.to_box()
    var_0.map(bytes_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(bool_0)


def test_case_18():
    int_0 = 935
    bool_0 = True
    maybe_0 = module_1.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    int_0 = -2222
    maybe_0 = module_1.Maybe(int_0, int_0)
    bool_0 = False
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_0.bind(maybe_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.map(var_2)
    var_4 = var_2.to_lazy()
    var_5 = maybe_0.to_box()
    var_6 = var_0.to_either()
    var_6.bind(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0.ap(var_0)


def test_case_22():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    bool_0 = False
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_1.Maybe(generic_0, bool_0)
    bool_1 = var_0.to_either()
    var_1 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_23():
    bytes_0 = b"}\xaduk\x00\xa2OS\x81\x11\x1d\xc2\xad\xdc\x10\xd1\xf5"
    maybe_0 = module_1.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(var_0)
    bool_0 = maybe_0.__eq__(var_1)
    module_2.object(**bool_0)
