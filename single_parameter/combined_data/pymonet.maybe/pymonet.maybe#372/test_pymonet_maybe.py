# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "$PlDyGr%Dz"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(str_0)
    var_1 = maybe_0.ap(none_type_0)
    bool_2 = maybe_0.__eq__(str_0)


def test_case_3():
    bytes_0 = b"[\x12\xef"
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_validation()
    maybe_2 = maybe_0.map(var_1)
    var_2 = module_1.Generic()
    maybe_1.filter(var_2)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.to_box()
    maybe_1.map(var_4)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_validation()
    var_3 = var_0.get_or_else(bool_0)
    var_4 = var_2.to_try()
    var_5 = var_1.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_6 = maybe_0.to_lazy()
    var_7 = maybe_1.to_try()
    var_8 = var_7.filter(var_6)


def test_case_6():
    str_0 = "$PlDyGr%Dz"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    bool_1 = maybe_0.__eq__(str_0)
    var_1 = maybe_1.to_try()
    var_2 = var_0.to_lazy()
    var_3 = var_2.to_try()
    var_4 = maybe_1.get_or_else(var_2)
    var_5 = var_1.get_or_else(var_3)
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    maybe_2.bind(var_5)


def test_case_7():
    bool_0 = True
    bytes_0 = b"|\xfcl1\x96\x83\xf2?_\x90m\tl\xb3"
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    bool_2 = maybe_1.__eq__(bytes_0)
    maybe_1.ap(bool_0)


def test_case_8():
    str_0 = "Map[value={}]"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.filter(str_0)


def test_case_9():
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_box()
    maybe_1.filter(var_1)


def test_case_10():
    bytes_0 = b"[\x12\xef"
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(dict_0, bool_0)
    var_3 = maybe_1.get_or_else(var_1)
    maybe_1.filter(var_3)


def test_case_11():
    int_0 = -344
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)


def test_case_13():
    bytes_0 = b"[\x12\xef"
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_0.to_try()
    maybe_1.filter(var_1)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)


def test_case_15():
    bytes_0 = b"[\x12\xef"
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    bool_1 = False
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.to_box()
    var_6 = maybe_0.to_lazy()
    var_7 = var_4.to_validation()
    var_4.get_or_else(none_type_1)


def test_case_17():
    bytes_0 = b"[\x12\xef"
    bool_0 = False
    int_0 = 2212
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    bool_1 = False
    bool_2 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    var_2 = maybe_1.get_or_else(bool_1)
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.ap(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_0.to_try()
    bool_2 = var_1.__eq__(var_0)
    var_3 = var_0.to_try()
    maybe_1.bind(maybe_0)
