# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    complex_0 = 812.7 - 404.02232426797866j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    complex_0 = 812.7 - 402.42j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(complex_0)
    bool_0 = var_0.__eq__(complex_0)
    var_2 = var_0.to_lazy()
    var_2.filter(complex_0)


def test_case_4():
    bytes_0 = b"\xf8\xdcGk0F$\xa4\xe3\xaa"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bytes_0)


def test_case_5():
    complex_0 = 812.7 - 404.02232426797866j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.bind(var_1)
    bool_1 = maybe_0.__eq__(complex_0)
    var_3 = var_1.to_lazy()
    var_3.filter(complex_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    complex_0 = 812.7 - 402.42j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    bool_0 = var_0.ap(none_type_0)
    var_1 = var_0.to_lazy()
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, var_1)
    bool_1 = maybe_0.__eq__(var_1)


def test_case_8():
    bytes_0 = b"\xec\xf6\x01\xa8"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    complex_0 = -1979.56 + 2085.6j
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    bool_0 = False
    bool_1 = True
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_1)
    maybe_1.filter(bool_0)


def test_case_10():
    str_0 = ')3=TB5";Y'
    int_0 = 368
    set_0 = {int_0, int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.get_or_else(str_0)


def test_case_11():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1,)
    set_0 = {tuple_0}
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_2 = False
    maybe_1 = module_0.Maybe(set_0, bool_2)
    var_1 = maybe_1.get_or_else(bool_0)
    var_1.to_either()


def test_case_12():
    int_0 = -2485
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = maybe_1.filter(var_2)
    var_2.get_or_else(var_0)


def test_case_13():
    float_0 = 2951.89
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_14():
    str_0 = "Sum"
    str_1 = ")MR`q8\\JU"
    dict_0 = {str_1: str_1, str_1: str_1}
    maybe_0 = module_0.Maybe(dict_0, str_1)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(str_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_17():
    complex_0 = 812.7 - 402.42j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(complex_0)
    bool_0 = var_0.__eq__(complex_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = var_1.to_try()
    var_3.to_lazy()


def test_case_18():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    bytes_0 = b"c5cb\x94"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    float_0 = -1299.87
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.map(float_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_1 = True
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_2 = maybe_1.ap(var_1)
    str_0 = "w?#M&` 'Pe%X"
    maybe_2 = module_0.Maybe(str_0, bool_1)
    bool_2 = maybe_2.__eq__(var_2)


def test_case_22():
    none_type_0 = None
    int_0 = -2485
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.ap(int_0)
    var_3 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_23():
    complex_0 = 812.7 - 404.02232426797866j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(none_type_0)
    str_0 = "h.[O_ \rjOUe -av6^G?"
    maybe_1 = module_0.Maybe(str_0, var_0)
    var_1 = var_0.to_either()
    str_1 = "cRoit|Q.VVUz.@70"
    var_2 = var_0.ap(str_1)
    var_3 = var_2.filter(var_2)
    var_4 = var_0.to_box()
    var_5 = var_3.to_validation()
    var_6 = maybe_0.ap(maybe_1)
    var_7 = var_1.to_lazy()
    var_8 = var_6.get_or_else(str_0)
    var_9 = var_6.bind(none_type_0)
    var_10 = var_9.filter(maybe_1)
    var_11 = var_3.to_try()
    var_12 = var_5.to_either()
    var_13 = var_11.get_or_else(var_12)
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_1, var_13)
    var_14 = var_12.to_lazy()
    bool_2 = maybe_1.__eq__(maybe_0)
    var_15 = var_10.bind(var_11)
    var_16 = var_11.get_or_else(maybe_1)
    var_17 = var_6.to_validation()
    var_18 = var_15.map(var_13)
    maybe_3 = module_0.Maybe(complex_0, maybe_0)
    var_19 = var_9.to_box()
    var_19.bind(var_6)


def test_case_24():
    complex_0 = 812.7 - 404.02232426797866j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    str_0 = "Fist[value={}]"
    maybe_0.map(str_0)
