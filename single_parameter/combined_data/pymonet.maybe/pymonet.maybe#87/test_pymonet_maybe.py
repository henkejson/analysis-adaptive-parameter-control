# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 147
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_0.ap(bool_1)


def test_case_3():
    complex_0 = 3426.606 - 1898j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    bool_0 = True
    var_1 = var_0.to_either()
    bool_1 = maybe_0.__eq__(var_1)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_either()
    var_5 = maybe_1.filter(var_3)
    var_6 = maybe_1.to_try()
    var_7 = var_0.to_try()
    var_2.ap(var_3)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    int_0 = 2769
    list_0 = [int_0, int_0, int_0]
    maybe_1 = module_0.Maybe(list_0, int_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.to_try()


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_0.map(bool_0)
    maybe_1.map(maybe_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(tuple_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(dict_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.bind(bool_0)


def test_case_8():
    str_0 = "?\t"
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(str_0)
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(str_0, str_0)
    none_type_2 = None
    maybe_2 = module_0.Maybe(str_0, none_type_2)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_0.map(bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    float_0 = 91.7356
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    bool_2 = True
    float_1 = -2150.0
    var_1 = maybe_0.ap(float_1)
    var_2 = maybe_0.map(bool_2)
    bool_3 = False
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_0.bind(bool_1)
    maybe_2 = module_0.Maybe(bool_3, var_1)
    var_5 = maybe_2.get_or_else(float_0)
    var_6 = var_1.to_validation()
    var_7 = var_0.to_box()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_box()


def test_case_12():
    complex_0 = 395 - 620.4736j
    list_0 = [complex_0, complex_0, complex_0]
    maybe_0 = module_0.Maybe(list_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_1.to_box()
    maybe_1.filter(var_0)


def test_case_15():
    float_0 = -513.400381
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    int_0 = 1058
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.to_try()
    var_1.to_either()


def test_case_16():
    float_0 = -4670.9
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = var_0.ap(maybe_0)
    var_5 = var_0.to_either()
    var_6 = maybe_0.to_box()
    maybe_0.map(none_type_0)


def test_case_18():
    float_0 = 91.7356
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    var_0.ap(bool_1)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = var_0.to_box()
    var_0.filter(var_0)


def test_case_20():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.bind(var_2)
    var_4 = var_1.bind(tuple_0)
    var_5 = maybe_0.to_validation()
    var_6 = var_1.ap(var_4)
    var_7 = var_1.bind(var_5)
    var_8 = var_4.to_either()
    var_9 = var_3.bind(var_8)
    var_10 = var_8.bind(var_8)
    maybe_1 = module_0.Maybe(var_8, var_6)
    bool_1 = maybe_1.__eq__(var_4)
    var_11 = var_0.to_lazy()
    var_11.filter(var_6)
