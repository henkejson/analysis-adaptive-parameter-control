# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "[\rn\x0b3lemS<k*g)x\r"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_3():
    str_0 = "KTKv#:ffm9eFT_K"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    float_0 = 798.2638
    bool_1 = True
    maybe_0 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.map(none_type_1)
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(none_type_0)
    var_4 = var_3.ap(str_0)


def test_case_4():
    complex_0 = -1312 - 2150.4j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    maybe_0.ap(maybe_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(none_type_0)
    var_4 = var_3.to_try()
    var_4.to_either()


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_try()
    maybe_1.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    str_0 = 'Yo\\HPy"\x0bwBp'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.to_either()
    bool_0 = var_1.__eq__(var_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {}
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    dict_0 = {}
    bool_0 = False
    dict_1 = {}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.filter(dict_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_box()
    var_5 = var_4.to_lazy()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    bool_2 = maybe_2.__eq__(var_1)
    maybe_3 = module_0.Maybe(bool_0, bool_1)
    maybe_3.filter(maybe_1)


def test_case_12():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    bool_1 = maybe_1.__eq__(var_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_14():
    int_0 = 2248
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_15():
    list_0 = []
    float_0 = -1628.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(list_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_17():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_1 = maybe_2.to_either()
    none_type_0 = None
    bytes_0 = b"\xe8q\xbd"
    maybe_3 = module_0.Maybe(none_type_0, bytes_0)
    var_2 = maybe_3.to_lazy()
    var_3 = var_2.to_box()
    var_3.bind(none_type_0)


def test_case_18():
    int_0 = 1093
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.map(var_1)
    var_3 = var_0.to_either()
    var_4 = var_0.to_validation()
    var_5 = var_2.ap(var_4)
    none_type_0 = None
    var_6 = var_4.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_7 = maybe_1.to_lazy()
    var_8 = var_7.to_validation()
    var_9 = var_8.to_try()
    var_9.to_lazy()


def test_case_19():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(none_type_0)
    var_4 = var_3.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_5 = maybe_1.get_or_else(none_type_0)
    var_6 = var_2.bind(var_5)
    var_7 = var_1.to_try()
    maybe_2 = module_0.Maybe(var_5, var_0)
    var_8 = var_1.get_or_else(var_2)
    var_9 = var_8.bind(bool_0)
    maybe_3 = module_0.Maybe(bool_0, var_1)
    var_10 = maybe_3.map(maybe_1)
    bool_2 = True
    maybe_4 = module_0.Maybe(none_type_0, bool_2)
    var_11 = var_6.map(none_type_0)
    var_12 = maybe_2.to_either()
    var_13 = var_12.to_try()
    bool_3 = maybe_3.__eq__(var_1)
    var_14 = var_8.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_1.bind(var_0)
