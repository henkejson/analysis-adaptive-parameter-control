# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xe9\x1d}H2\xbd\x97\x06(\x0b\x05\xc6\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    int_0 = 175
    bool_2 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.to_try()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 175
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = var_0.filter(var_1)
    var_3 = var_1.map(var_0)
    var_4 = maybe_1.to_validation()
    var_5 = var_1.to_validation()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 175
    bool_1 = False
    bool_2 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    bool_3 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.map(none_type_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    var_0 = maybe_0.bind(none_type_0)
    bool_3 = var_0.__eq__(bool_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = var_2.ap(bool_2)
    var_4 = var_2.map(var_3)
    maybe_1 = module_0.Maybe(var_0, var_3)
    var_5 = var_2.filter(var_4)
    var_6 = maybe_1.to_validation()
    var_7 = var_3.to_try()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    float_0 = 3238.533415
    float_1 = -960.7
    maybe_0 = module_0.Maybe(float_1, float_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(float_0)
    bool_0 = False
    complex_0 = 1155.7225 - 4464.7777j
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_2 = maybe_1.ap(bool_0)
    var_3 = var_2.ap(var_1)
    var_4 = var_3.to_validation()


def test_case_8():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(set_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_2 = maybe_0.to_try()
    maybe_1.ap(var_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xe9\x1d}H2\xbd\x97\x06(\x0b\x05\xc6\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(maybe_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    int_0 = 175
    bool_2 = False
    bool_3 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(bool_2)
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = var_0.filter(var_1)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_either()
    var_5 = var_0.get_or_else(var_4)
    bool_0.to_validation()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    bool_3 = maybe_0.__eq__(bool_2)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = maybe_0.filter(none_type_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_either()
    var_5 = maybe_1.get_or_else(bool_3)
    var_6 = var_0.to_validation()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"D\xaf\xdf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(none_type_0)


def test_case_14():
    int_0 = -1106
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.bind(int_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 175
    bool_1 = False
    bool_2 = maybe_0.__eq__(int_0)
    bool_3 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_0.get_or_else(maybe_0)


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\xe9\x1d}H2\xbd\x97\x06(\x0b\x05\xc6\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_1.get_or_else(bytes_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    bool_3 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.filter(bool_1)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_try()


def test_case_19():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_0.to_box()
    bool_2 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_4 = maybe_1.to_box()
    var_5 = var_0.to_validation()
    var_3.bind(var_5)


def test_case_20():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_either()
    var_3.filter(set_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.map(none_type_0)
    float_0 = 473.474
    bool_2 = True
    maybe_1 = module_0.Maybe(float_0, bool_2)
    var_3 = var_1.filter(var_1)
    var_4 = var_2.to_validation()
    var_5 = var_4.to_try()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(var_1)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 175
    bool_1 = False
    bool_2 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = module_0.Maybe(var_0, bool_1)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = var_0.filter(var_1)
    bool_3 = var_0.__eq__(var_1)
    var_3 = var_0.to_box()
    bool_1.ap(bool_0)
