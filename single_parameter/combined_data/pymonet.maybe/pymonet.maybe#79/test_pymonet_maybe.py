# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_1.Maybe(maybe_0, bool_2)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(maybe_1)
    maybe_1.filter(bool_0)


def test_case_3():
    bytes_0 = b'\xed[<\x15\xfc_\x16\xf8\xbfR\xfdAt"9\xe3'
    bool_0 = False
    bool_1 = True
    maybe_0 = module_1.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(bytes_0)
    var_2.ap(bool_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_1.Maybe(maybe_0, bool_2)
    maybe_2 = maybe_0.ap(bool_0)
    var_2 = maybe_2.filter(maybe_1)
    var_3 = var_2.to_either()
    maybe_1.filter(bool_0)


def test_case_6():
    set_0 = set()
    bytes_0 = b"~"
    str_0 = "uA+O_/{eInMr)aTM["
    maybe_0 = module_1.Maybe(str_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_1.Maybe(set_0, bool_0)
    maybe_1.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_1.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(maybe_1)
    maybe_1.filter(bool_0)


def test_case_8():
    int_0 = 148
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(int_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_0.get_or_else(bool_1)
    bool_2 = False
    maybe_1 = module_1.Maybe(var_0, bool_2)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.filter(maybe_1)
    var_5 = var_4.to_either()
    var_6 = var_5.to_lazy()
    maybe_1.filter(bool_0)


def test_case_10():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.map(bool_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_1.Maybe(maybe_0, bool_2)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(maybe_1)
    var_2 = var_1.to_either()
    maybe_1.filter(bool_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_0.get_or_else(bool_1)
    bool_2 = False
    maybe_1 = module_1.Maybe(var_0, bool_2)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.filter(maybe_1)
    var_5 = maybe_1.to_either()
    var_6 = var_5.to_lazy()
    maybe_1.filter(bool_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.map(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_3 = var_2.get_or_else(bool_1)
    var_4 = maybe_0.to_box()
    var_5 = var_2.to_lazy()
    maybe_1 = module_1.Maybe(var_2, bool_0)
    maybe_2 = module_1.Maybe(var_3, var_1)
    var_6 = maybe_2.filter(var_3)
    var_7 = maybe_0.bind(var_6)
    var_8 = var_6.to_lazy()
    var_9 = maybe_2.to_either()
    var_10 = var_2.to_lazy()
    var_11 = maybe_0.bind(var_9)
    var_12 = maybe_1.filter(bool_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        "
    maybe_1 = module_1.Maybe(str_0, str_0)
    bool_1 = True
    maybe_2 = module_1.Maybe(str_0, bool_1)


def test_case_15():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_1.Maybe(tuple_0, bool_0)
    str_0 = "\x0c\nuR_U8k [m"
    maybe_1 = module_1.Maybe(str_0, str_0)
    var_0 = maybe_1.to_lazy()
    var_0.to_lazy()


def test_case_16():
    float_0 = 143.24
    int_0 = -1244
    dict_0 = {float_0: float_0, float_0: int_0, int_0: int_0}
    str_0 = "\\5"
    float_1 = -1855.88092
    float_2 = 2278.284
    tuple_0 = (str_0, float_0, float_1, float_2)
    tuple_1 = (float_0, dict_0, tuple_0)
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(bool_0)
    var_1.filter(tuple_1)


def test_case_17():
    str_0 = "O$>"
    bool_0 = False
    maybe_0 = module_1.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()


def test_case_19():
    str_0 = "\n        Return resolved Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: resolved Task\n        :rtype: Task[Function(_, resolve) -> A]\n        "
    bool_0 = False
    maybe_0 = module_1.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_20():
    bytes_0 = b"HXT\x83V -4\x13\xe2\xdb\x15\xad\x06\xdaF\xcc\xcaH\x15"
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_1.Maybe(bytes_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(none_type_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.map(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_3 = var_2.get_or_else(bool_1)
    var_4 = var_2.to_lazy()
    bool_2 = False
    maybe_1 = module_1.Maybe(var_2, bool_2)
    maybe_2 = module_1.Maybe(var_3, var_1)
    var_5 = maybe_1.to_validation()
    var_6 = maybe_2.filter(bool_2)
    var_7 = maybe_0.bind(var_6)
    var_8 = var_6.filter(var_4)
    var_9 = var_5.to_lazy()
    var_10 = var_8.to_either()
    var_11 = var_1.ap(var_3)
    bool_3 = maybe_2.__eq__(var_6)
    var_12 = var_8.to_box()
    var_13 = var_12.ap(maybe_0)
    var_14 = var_10.bind(var_11)


def test_case_22():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.map(maybe_0)
    bool_2 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_0.map(bool_2)
    bool_3 = var_0.__eq__(bool_2)
    var_5 = var_0.bind(var_2)
    maybe_1 = module_1.Maybe(var_1, bool_1)
    var_6 = var_5.to_lazy()
    bool_4 = var_5.__eq__(maybe_1)
    var_7 = maybe_0.filter(var_2)
    bool_5 = False
    maybe_2 = module_1.Maybe(bool_3, bool_5)
    var_8 = var_7.bind(bool_5)
    var_9 = var_4.map(var_6)
    var_10 = maybe_1.filter(var_6)
    var_11 = var_10.to_validation()
    var_12 = var_10.to_box()
    var_3.filter(maybe_2)


def test_case_23():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.map(bool_0)
    bool_1 = var_2.__eq__(maybe_0)
    var_4 = var_3.get_or_else(bool_1)
    bool_2 = False
    maybe_1 = module_1.Maybe(var_3, bool_2)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_5 = maybe_1.get_or_else(bool_1)
    maybe_2 = module_1.Maybe(var_4, var_2)
    var_6 = maybe_1.to_validation()
    var_7 = maybe_2.filter(bool_2)
    var_8 = maybe_0.to_validation()
    var_9 = var_7.filter(var_7)
    var_10 = var_6.to_lazy()
    var_11 = var_9.to_either()
    var_12 = var_3.to_lazy()
    maybe_1.filter(bool_0)
