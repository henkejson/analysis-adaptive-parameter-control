# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "}\\&dZm&W~}l"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1.filter(maybe_0)


def test_case_4():
    bytes_0 = b",V\x9a\xc5+\xd5A\x0f\x81II\xa2\xf4\xd4\x1d\x7f8&z\x1e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(dict_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_2 = maybe_1.map(dict_0)


def test_case_5():
    str_0 = "[=@;1u}\x0bBs;}f/(s"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(maybe_0)


def test_case_6():
    dict_0 = {}
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.bind(dict_0)
    var_2 = var_1.to_lazy()
    var_2.get_or_else(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.bind(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_1.get_or_else(none_type_0)


def test_case_10():
    int_0 = 1789
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_either()
    bool_1 = var_2.__eq__(bool_0)
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_box()
    var_5 = var_0.to_box()
    var_6 = var_5.to_try()
    var_5.map(var_4)


def test_case_11():
    float_0 = -533.89
    bytes_0 = b'"\x13\x04\n\xf3\xa6V'
    set_0 = {float_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_0.filter(var_0)


def test_case_13():
    str_0 = "<D5\r)\x0cj;5)e"
    tuple_0 = (str_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_0.filter(none_type_0)


def test_case_15():
    int_0 = 2174
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    tuple_0 = (var_0, var_0, bool_0)
    var_1 = var_0.filter(tuple_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    var_0.to_lazy()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    none_type_0 = None
    var_3 = var_2.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = var_3.to_validation()
    maybe_1.filter(maybe_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = maybe_0.filter(maybe_0)
    none_type_0 = None
    var_4 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = maybe_1.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1.filter(maybe_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_0.to_lazy()
    maybe_0.bind(bool_1)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    var_2 = var_1.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_0.to_try()
    var_4 = var_2.to_validation()
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1.filter(maybe_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_try()
    var_3 = var_1.to_lazy()
    var_4 = var_3.map(maybe_0)
    var_5 = maybe_0.filter(var_3)
    none_type_0 = None
    var_6 = var_5.get_or_else(maybe_0)
    var_7 = maybe_0.map(var_1)
    var_8 = var_3.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_9 = maybe_0.to_try()
    var_10 = var_6.to_validation()
    bool_2 = var_6.__eq__(maybe_1)
    var_2.to_box()
