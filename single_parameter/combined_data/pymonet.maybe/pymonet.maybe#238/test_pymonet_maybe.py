# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(bool_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_0.ap(bool_1)
    var_5 = maybe_0.map(var_3)
    var_6 = var_5.bind(var_3)
    var_7 = var_2.to_lazy()
    var_8 = maybe_0.to_validation()
    var_8.ap(var_7)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(bool_0)
    var_2 = var_1.to_try()
    var_0.to_try()


def test_case_4():
    none_type_0 = None
    int_0 = -3253
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    str_0 = "Last[value={}]"
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = "'l#~}j\x0bvAG"
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = -4376
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_either()
    bytes_0 = b"\xb2A\xe4\xbe\xeboY\x84I\x81\xad\xf7\x0b"
    bool_1 = True
    bool_2 = True
    var_2 = var_0.to_try()
    var_3 = var_1.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_4 = maybe_1.ap(bytes_0)
    var_5 = var_4.ap(bool_0)
    bool_3 = var_0.__eq__(var_5)
    var_6 = var_5.map(int_0)


def test_case_8():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_0.ap(bytes_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.to_box()
    var_4 = var_3.to_try()
    var_5 = var_0.to_validation()
    var_6 = var_3.to_validation()
    var_7 = maybe_0.to_box()
    var_4.map(bool_1)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -4376
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    var_4 = maybe_0.to_try()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_0.get_or_else(var_5)
    var_7 = var_5.to_box()
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1.filter(int_0)


def test_case_12():
    float_0 = -860.6946
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(var_0)


def test_case_13():
    bool_0 = True
    object_0 = module_1.object()
    bool_1 = False
    maybe_0 = module_0.Maybe(object_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.map(bool_0)


def test_case_14():
    bytes_0 = b"\xdc\xa1\x9c\x8d\x84\xc1\x90\x86\xcb\xd2V\xc35"
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_15():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(var_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_1.map(var_0)


def test_case_16():
    int_0 = -416
    list_0 = [int_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    bool_0 = False
    float_0 = 366.69588
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(var_0)


def test_case_19():
    float_0 = -901.2
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    list_0 = []
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_0.ap(list_0)


def test_case_20():
    str_0 = "XD.FEJ(yl%NVeg`/A6|"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(str_0)


def test_case_21():
    int_0 = -4376
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.filter(maybe_1)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(bool_0)
    var_4 = maybe_0.to_lazy()
    var_0.to_validation()


def test_case_22():
    complex_0 = -619.007491 + 2351.8j
    bytes_0 = b'\xd9\t\x84sP\x0f\xca\x05\xd3[9_"t('
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.ap(complex_0)
    var_3.to_box()
