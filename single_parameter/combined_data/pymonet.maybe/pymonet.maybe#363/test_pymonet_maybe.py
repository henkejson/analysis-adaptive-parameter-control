# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 1034
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    bool_2 = var_1.__eq__(bool_1)
    var_2 = maybe_0.get_or_else(bool_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_2 = maybe_1.bind(var_1)
    var_0.to_box()


def test_case_4():
    dict_0 = {}
    int_0 = -732
    maybe_0 = module_0.Maybe(dict_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, dict_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.filter(var_1)
    maybe_1.filter(maybe_1)


def test_case_5():
    complex_0 = 2441.47 + 520.977j
    none_type_0 = None
    bool_0 = False
    set_0 = {complex_0}
    tuple_0 = (set_0,)
    maybe_0 = module_0.Maybe(tuple_0, complex_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(maybe_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.bind(bool_0)
    var_1 = var_0.to_validation()
    var_1.ap(maybe_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_8():
    dict_0 = {}
    int_0 = -732
    maybe_0 = module_0.Maybe(dict_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, dict_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.filter(var_1)
    maybe_1.filter(maybe_1)


def test_case_9():
    bytes_0 = b"\x9d\x99\x01\xd6\xab\xe9\x81\xd1W\xf7\xa6}\x80\x1b"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(bytes_0)


def test_case_10():
    dict_0 = {}
    int_0 = -4239
    maybe_0 = module_0.Maybe(dict_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, dict_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1.filter(var_0)


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_validation()
    var_4.to_validation()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_2 = maybe_1.to_either()
    var_3 = var_2.ap(var_2)


def test_case_14():
    dict_0 = {}
    int_0 = -4239
    maybe_0 = module_0.Maybe(dict_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(maybe_1)
    maybe_1.filter(var_0)


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_1.ap(bool_0)


def test_case_16():
    bytes_0 = b""
    complex_0 = 2304.0716 - 1075.656104j
    float_0 = 488.845364
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(complex_0)
    var_1.get_or_else(bytes_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_2, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_either()
    bool_3 = var_2.__eq__(none_type_0)
    bool_4 = var_2.__eq__(var_0)
    var_2.to_either()


def test_case_21():
    complex_0 = 413.025185 - 2033.806j
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_either()
    bool_2 = True
    set_0 = {bool_2, bool_2}
    list_0 = []
    bool_3 = False
    maybe_2 = module_0.Maybe(list_0, bool_3)
    var_4 = maybe_2.to_try()
    var_4.map(set_0)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    float_0 = 498.98
    var_2 = var_1.filter(var_0)
    var_3 = var_2.ap(float_0)
    var_4 = var_3.to_lazy()
    var_5 = var_1.to_validation()
    bool_2 = var_2.__eq__(var_3)
    var_6 = var_2.to_try()
    var_7 = var_3.filter(var_5)
    var_5.bind(var_1)


def test_case_23():
    float_0 = -2425.64
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_box()
    bool_0 = var_2.__eq__(maybe_0)
    var_6 = var_4.to_validation()
    var_6.bind(var_4)
