# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = '<1UQ_SBP"GhGq^#['
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(none_type_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_box()
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_3 = var_0.to_either()
    var_4 = maybe_0.map(var_3)
    var_5 = var_0.to_box()
    var_6 = maybe_1.filter(var_3)


def test_case_5():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(maybe_0)


def test_case_6():
    bytes_0 = b"\xad\xfc\xd4\x8e\x17u\x86\x8b"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, bytes_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.bind(var_0)


def test_case_7():
    bytes_0 = b"\xed\xb3\x9d\xfc\x1f/H\x9e-/W\nr"
    bytes_1 = b"\x1c\x82$\x82\x94\x05n2:\xcfx5\x8c"
    list_0 = [bytes_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    var_1 = var_0.ap(none_type_0)
    none_type_1 = None
    var_2 = var_0.map(list_0)
    var_3 = var_0.bind(none_type_1)
    var_4 = var_0.map(var_3)
    var_5 = var_0.filter(bytes_0)
    var_6 = var_1.to_lazy()
    var_7 = var_3.map(var_6)


def test_case_8():
    bool_0 = False
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.ap(dict_0)


def test_case_9():
    bytes_0 = b"\xed\xb3\x9d\xfc\x1f/H\x9e-/W\nr"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, none_type_0)
    maybe_1.filter(dict_0)


def test_case_10():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(list_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_2, bool_0)
    var_0 = maybe_0.get_or_else(none_type_1)
    var_0.map(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    bytes_0 = b"\xed\xb3\x9d\xfc\x1f/H\x9e-/W\nr"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    dict_0 = {}
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(dict_0, none_type_0)
    var_2 = maybe_0.to_lazy()
    maybe_1.filter(var_2)


def test_case_14():
    bool_0 = True
    str_0 = "y~GaJRlL> r5bKE[#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_0.filter(bool_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\x13\x92 \xf8L\x01\xcf\xdf|\x07?\xc6r\x0c\xb3\xbc\xbb\xe6{q"
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bytes_0)
    var_2.to_box()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    none_type_0 = None
    bytes_0 = b"h'^;t\xff\xf2\x0e\x95g\xd5X\xf2\\\xabP\xcer"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_4 = var_2.to_either()
    var_5 = maybe_0.map(var_0)
    var_6 = maybe_1.to_box()
    var_7 = maybe_0.filter(var_6)


def test_case_21():
    bytes_0 = b"\xed\xb3\x9d\xfc\x1f/H\x9e-/W\nr"
    bytes_1 = b"\x1c\x82$\x82\x94\x05n2:\xcfx5\x8c"
    list_0 = [bytes_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    var_1 = var_0.ap(none_type_0)
    none_type_1 = None
    dict_0 = {bytes_1: maybe_0}
    maybe_1 = module_0.Maybe(dict_0, none_type_1)
    int_0 = -1820
    maybe_2 = module_0.Maybe(bytes_0, int_0)
    var_2 = maybe_2.filter(var_1)
    var_3 = maybe_2.get_or_else(maybe_2)
    var_4 = var_0.to_validation()
    var_5 = var_1.to_box()
    maybe_3 = module_0.Maybe(var_1, var_4)
    bool_0 = True
    maybe_4 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = var_3.__eq__(var_3)


def test_case_22():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    int_0 = -2833
    maybe_0 = module_0.Maybe(dict_0, int_0)
    var_0 = maybe_0.map(dict_0)
    none_type_0 = None
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = maybe_0.bind(var_1)
    bool_0 = dict_0.__eq__(list_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = var_0.filter(int_0)
    var_4 = maybe_1.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    var_5 = var_0.to_either()
    var_1.map(var_5)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_0.filter(none_type_0)
