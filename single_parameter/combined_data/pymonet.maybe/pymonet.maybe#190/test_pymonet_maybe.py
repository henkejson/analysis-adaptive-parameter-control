# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -2287
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    str_0 = 'a%dl\'q12|""'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_1.bind(maybe_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.to_validation()
    var_4 = var_0.to_box()
    bool_1 = maybe_0.__eq__(var_1)
    var_5 = var_2.to_try()
    var_3.ap(var_3)


def test_case_4():
    complex_0 = -2234.887 + 2539j
    bytes_0 = b":i.>\xa7\xe4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(complex_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_lazy()
    str_0 = "/A_\nq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    maybe_2 = module_0.Maybe(dict_0, str_0)
    var_2 = maybe_2.map(var_1)
    var_3 = var_2.to_either()
    var_4 = var_3.to_try()


def test_case_5():
    str_0 = 'a%dl\'q12|""'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    int_0 = -814
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_2.to_either()
    var_1 = maybe_1.filter(maybe_0)
    var_0.ap(maybe_2)


def test_case_6():
    str_0 = "\n    Map is a Semigroup that will always return contated all values inside Map value\n    "
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bytes_0 = b"\xabA,\xc9"
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.map(none_type_0)
    var_2 = maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = -943
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(none_type_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(var_2, var_1)
    var_3 = var_1.ap(var_1)
    var_4 = maybe_1.to_box()
    bool_1 = False
    str_0 = "a0UjdJ"
    bool_2 = False
    maybe_2 = module_0.Maybe(str_0, bool_2)
    maybe_2.ap(bool_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(maybe_0)


def test_case_10():
    str_0 = "E6I*Tn7l\x0c%1)\x0bn "
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_either()


def test_case_11():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    str_0 = 'a%dl\'q12|""'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    int_0 = -814
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.bind(maybe_0)
    var_1 = maybe_1.to_box()
    var_2 = var_0.to_try()
    bool_2 = True
    var_3 = var_1.to_validation()
    var_4 = var_3.to_box()
    int_1 = 2222
    maybe_2 = module_0.Maybe(bool_2, int_1)
    var_5 = maybe_2.map(var_2)
    var_6 = maybe_2.to_validation()


def test_case_13():
    str_0 = 'a%dl\'q12|""'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    int_0 = -814
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.bind(maybe_0)
    var_2 = maybe_1.to_box()
    var_3 = var_1.to_try()
    var_4 = var_2.to_validation()
    var_5 = var_4.to_box()
    var_6 = var_1.to_either()
    maybe_2 = module_0.Maybe(var_6, str_0)
    var_7 = maybe_0.get_or_else(var_2)
    var_3.to_try()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"Q%oE\xb9\xf7\xd1X\xfbp\xb6\xd4l\x9f"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    bytes_0 = b"\xf2\xee!:\x1a\xc7"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(bytes_0)
    var_3 = var_2.ap(bytes_0)
    var_4 = var_3.bind(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_validation()
    maybe_2 = module_0.Maybe(bool_0, bytes_0)


def test_case_17():
    int_0 = -943
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.bind(list_0)
    var_0.filter(var_2)


def test_case_18():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    var_0.filter(set_0)
