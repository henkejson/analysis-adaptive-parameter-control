# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 623
    str_0 = "L$hKG)Pn8O(@<!4<^DS@"
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(str_0)
    var_1 = var_0.bind(int_0)
    bool_1 = False
    var_2 = maybe_1.to_validation()
    bool_2 = var_0.__eq__(var_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_1, bool_3)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.filter(var_3)
    maybe_3 = module_0.Maybe(var_1, bool_1)
    list_0 = []
    bool_4 = maybe_2.__eq__(var_4)
    var_5 = var_0.get_or_else(list_0)


def test_case_3():
    int_0 = 2840
    float_0 = 197.863
    dict_0 = {int_0: int_0, int_0: int_0, int_0: float_0}
    maybe_0 = module_0.Maybe(int_0, dict_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_box()
    bool_0 = maybe_0.__eq__(float_0)
    var_2 = var_0.ap(var_0)
    var_3 = var_0.ap(bool_0)
    var_4 = maybe_0.map(var_0)
    var_5 = var_3.to_try()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    none_type_1 = None
    list_0 = [none_type_1, none_type_1, none_type_1]
    maybe_1 = module_0.Maybe(none_type_1, list_0)
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_1, var_1)
    var_2 = maybe_2.bind(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.map(var_0)
    var_4.to_lazy()


def test_case_6():
    bool_0 = False
    str_0 = ""
    str_1 = ""
    maybe_0 = module_0.Maybe(str_0, str_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_1)
    bool_2 = True
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = maybe_1.filter(var_1)
    bool_3 = var_3.__eq__(maybe_0)
    str_2 = "5\rtUZ]h;\\RA|T\t+"
    maybe_2 = module_0.Maybe(str_2, str_2)
    bool_4 = True
    maybe_3 = module_0.Maybe(bool_4, var_0)
    maybe_0.bind(var_3)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = var_1.ap(var_1)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_lazy()
    maybe_1.filter(var_3)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b"\xb9C7\x9a"
    tuple_0 = (bytes_0, bytes_0)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    dict_0 = {}
    str_0 = "]p0Pwl;M\x0b+"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(dict_0)
    var_1.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_box()
    bool_1 = False
    var_3 = var_1.ap(var_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_4 = maybe_1.get_or_else(bool_1)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_0.to_try()
    maybe_2.filter(var_6)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_validation()


def test_case_14():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.bind(generic_0)
    var_1 = maybe_0.to_box()
    var_1.get_or_else(maybe_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_0.to_lazy()
    var_0.bind(var_0)


def test_case_16():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    bool_0 = False
    bytes_0 = b"i"
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    var_1.to_try()


def test_case_19():
    bytes_0 = b"\x96\x0f\xc8\x14\x84\xc0FJ\x7f\xcbe\x11\x80\xff\xf2]\x80\xe8Y9"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_1 = False
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_2 = maybe_1.to_try()
    var_2.to_either()


def test_case_20():
    tuple_0 = ()
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_1 = var_1.__eq__(none_type_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_2)


def test_case_21():
    bool_0 = True
    bool_0.to_lazy()


def test_case_22():
    str_0 = "1"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, str_0)
    maybe_2 = module_0.Maybe(str_0, bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_3 = module_0.Maybe(var_0, var_1)
    var_3 = maybe_2.bind(str_0)
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.to_box()
    var_6 = var_3.filter(var_5)
    var_7 = var_0.to_lazy()
    var_8 = var_6.bind(var_1)
    var_9 = var_3.to_lazy()
    var_10 = var_4.to_validation()
    var_11 = var_3.to_validation()
    var_12 = var_3.to_box()
    var_13 = maybe_1.to_either()
    var_14 = var_0.get_or_else(bool_1)
    var_14.to_lazy()


def test_case_23():
    bytes_0 = b"\x03\x8e\xe6\xe4:\xb1\x9e\x08;\xca\xe2\xb8P\xeaR\x82\xe4\xe1s,"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(var_1)


def test_case_24():
    bool_0 = False
    str_0 = ""
    str_1 = ""
    maybe_0 = module_0.Maybe(str_0, str_1)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(str_1, bool_1)
    var_1 = maybe_1.get_or_else(bool_0)
    var_2 = maybe_1.filter(var_1)
    bool_3 = var_2.__eq__(maybe_0)
    str_2 = "5\rtUZ]h;\\RA|T\t+"
    maybe_2 = module_0.Maybe(str_2, str_2)
    var_3 = maybe_2.get_or_else(bool_2)
    var_3.to_either()
