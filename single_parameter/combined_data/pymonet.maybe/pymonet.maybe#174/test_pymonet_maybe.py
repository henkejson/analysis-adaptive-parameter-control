# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "%iq]/ 5^vgJV>BV4"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xac\x82u\x7f\x03\x89@\xbf&\xb6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    none_type_0 = None
    bool_0 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_2.__eq__(maybe_2)


def test_case_3():
    float_0 = 1665.88544
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(float_0)
    var_1 = maybe_0.map(var_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.filter(var_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_3)
    var_3 = var_2.get_or_else(bool_1)
    var_4 = maybe_0.to_try()
    var_5 = var_1.map(var_0)
    var_6 = maybe_0.map(var_0)
    var_7 = var_0.bind(var_4)
    var_8 = maybe_1.to_either()
    var_9 = maybe_0.to_validation()
    var_10 = var_5.to_validation()
    bool_4 = var_10.__eq__(var_7)
    var_11 = var_7.to_either()
    var_12 = var_5.map(var_9)
    maybe_1.filter(maybe_1)


def test_case_4():
    bytes_0 = b"mT\x16\x13z\x19"
    tuple_0 = ()
    str_0 = "Wo#+,G\t$~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = var_0.filter(bytes_0)
    var_2 = var_1.to_lazy()


def test_case_5():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = 432
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(int_0)
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.get_or_else(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    bytes_0 = b"mT\x16\x13z\x19"
    tuple_0 = ()
    str_0 = "Wo#+,G\t$~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = var_0.filter(bytes_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.to_lazy()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_1.ap(none_type_0)


def test_case_10():
    bytes_0 = b"Bzk\x121\xc6_.u\xe0\x10\xdc\xb36\x0f\xf3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_11():
    bytes_0 = b"Bzk\x121\xc6_.u\xe0\x10\xdc\xb36\x0f\xf3"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.filter(bytes_0)


def test_case_12():
    bytes_0 = b"\xc6}r\xa9\x9f\xc6\x86_\xb9\x1d\xbd"
    none_type_0 = None
    bool_0 = False
    int_0 = 880
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.filter(bytes_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_1)
    maybe_2 = module_0.Maybe(none_type_1, bool_1)
    var_1 = maybe_1.to_box()
    var_1.ap(none_type_1)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(var_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_box()


def test_case_16():
    bytes_0 = b"\xe8\x8b\xc56\x8d\xed\x96\xb4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bytes_0)


def test_case_17():
    bool_0 = True
    bytes_0 = b"KE\xa9\xfd\xf0\xf14\xd0\xe5\x93~\xebl\xac\x9e\x82n"
    none_type_0 = None
    generic_0 = module_1.Generic()
    bytes_1 = b"\xd7;\xe8"
    bytes_2 = b"\xf3.4\xea\x94\xc5LJ\xd5"
    maybe_0 = module_0.Maybe(none_type_0, generic_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.filter(bytes_2)
    var_3 = var_2.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bytes_1, bytes_2)
    var_4 = maybe_1.to_try()
    var_5 = var_4.get_or_else(generic_0)
    var_5.to_validation()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    bytes_0 = b"\xac\x82u\x7f\x03\x89@\xbf&\xb6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    none_type_0 = None
    bool_0 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.filter(maybe_0)
    var_3 = var_2.to_lazy()
    var_4 = maybe_0.filter(bool_0)
    var_5 = var_0.bind(var_0)
    var_6 = var_4.to_box()
    var_7 = maybe_0.to_box()
    var_8 = var_3.to_box()
    bool_1 = var_7.__eq__(var_0)
    var_9 = var_3.to_validation()
    var_9.map(var_9)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.map(bool_0)
    var_4 = var_2.to_try()
    var_4.to_either()


def test_case_23():
    none_type_0 = None
    str_0 = ".JpdDt"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_1.to_box()
    maybe_1 = module_0.Maybe(str_0, var_2)
    var_5 = maybe_1.map(maybe_1)
    var_6 = var_2.ap(maybe_1)
    maybe_2 = module_0.Maybe(var_2, maybe_0)
    tuple_0 = (var_6,)
    bool_0 = True
    maybe_3 = module_0.Maybe(tuple_0, bool_0)
    var_7 = maybe_3.bind(var_0)
    var_8 = maybe_0.to_try()
    var_9 = var_6.ap(var_8)
    var_10 = maybe_2.map(none_type_0)
    var_11 = var_6.bind(maybe_2)
    var_12 = var_10.get_or_else(var_2)
    var_13 = var_10.bind(var_10)
    bool_1 = maybe_2.__eq__(var_9)
    var_12.get_or_else(var_13)
