# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.to_lazy()
    bool_2 = maybe_0.__eq__(bool_1)
    var_4 = var_3.to_validation()
    var_5 = maybe_1.filter(var_1)


def test_case_3():
    bytes_0 = b"\x0e\xec\nfy\x04\xdbt\xe5\x12\x03\x94s\x0f\xa3\x02\x10i"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.bind(maybe_0)
    none_type_0 = None
    var_3 = var_0.map(var_0)
    var_4 = var_0.map(none_type_0)
    var_5 = var_4.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    bool_0 = var_0.__eq__(none_type_0)
    var_6 = maybe_0.bind(var_0)
    var_7 = maybe_1.to_lazy()
    var_8 = maybe_0.map(var_7)
    var_0.to_either()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(maybe_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.to_validation()
    var_0.to_box()


def test_case_6():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.get_or_else(maybe_1)


def test_case_7():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_validation()
    var_5 = maybe_1.filter(var_1)


def test_case_8():
    bytes_0 = b"h\xef\xce\x92\xec\x03\x88\xfaI\xdf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = var_0.__eq__(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_10():
    int_0 = 2454
    bool_0 = False
    set_0 = {bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.get_or_else(bool_0)
    var_0.to_lazy()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.ap(bool_0)
    var_2 = var_1.to_either()
    var_2.filter(var_0)


def test_case_12():
    object_0 = module_1.object()
    complex_0 = -3103.694734 + 1393.9j
    bytes_0 = b"h\xef\xce\x92\xec\x03\x88\xfaI\xdf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(complex_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    maybe_2 = module_0.Maybe(var_1, none_type_0)
    bool_1 = maybe_0.__eq__(object_0)
    var_3 = var_0.bind(maybe_1)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.ap(complex_0)
    var_6 = maybe_2.to_either()


def test_case_13():
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_1.to_try()
    var_1.to_lazy()


def test_case_14():
    bool_0 = True
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_15():
    bytes_0 = b"\x88 t\x83\xf5+\x03"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    tuple_0 = (bytes_0, maybe_0, maybe_0)
    str_0 = "yuH6#F|.m!"
    tuple_1 = (tuple_0, str_0)
    maybe_1 = module_0.Maybe(tuple_1, bool_0)
    var_0 = maybe_1.to_lazy()


def test_case_16():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bytes_0 = b"\xe6\x11\xec9\xd1W\xbb\x19\x82\xa3X\xf9\xfa\xdc\xb0"
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_0.get_or_else(bytes_0)


def test_case_17():
    bytes_0 = b"\x0e\xec\nfy\x04\xdbt\xe5\x12\x03\x94s\x0f\xa3\x02\x10i"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.bind(maybe_0)
    none_type_0 = None
    var_3 = var_0.map(var_0)
    var_4 = var_0.map(none_type_0)
    var_5 = var_4.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    bool_0 = var_0.__eq__(none_type_0)
    var_6 = maybe_0.bind(var_0)
    var_7 = maybe_1.to_lazy()
    var_8 = var_6.to_try()


def test_case_18():
    bytes_0 = b"h\xef\xce\x92\xec\x03\x88\xfaI\xdf"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_try()
    maybe_1.filter(maybe_1)


def test_case_19():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_20():
    bool_0 = False
    bool_1 = True
    set_0 = {bool_1}
    list_0 = [bool_0, bool_0, bool_0, set_0]
    maybe_0 = module_0.Maybe(list_0, bool_1)
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_either()
    var_4 = maybe_1.to_lazy()
    var_5 = var_1.to_box()
    bool_3 = var_2.__eq__(var_3)
    var_3.map(var_1)


def test_case_21():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_validation()
    bool_2 = var_0.__eq__(maybe_0)
    var_1.ap(var_0)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.ap(maybe_0)
    float_0 = -2043.806983
    maybe_1 = module_0.Maybe(float_0, float_0)
    int_0 = -892
    var_3 = var_1.to_try()
    var_4 = var_0.ap(maybe_0)
    var_5 = maybe_0.bind(maybe_0)
    var_6 = maybe_1.filter(int_0)
    var_7 = var_2.ap(var_2)
    var_8 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(maybe_0, var_7)
    bool_1 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_1)
    bool_2 = maybe_3.__eq__(maybe_3)
    var_3.bind(maybe_1)
