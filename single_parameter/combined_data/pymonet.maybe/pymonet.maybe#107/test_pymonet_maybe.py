# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    complex_0 = -1953.76 + 604.535j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\xae\xa3\xf0l0M\xab\x85K\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.map(none_type_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    bool_0 = var_2.__eq__(var_2)
    var_4 = maybe_0.to_try()
    var_4.to_box()


def test_case_3():
    bool_0 = False
    complex_0 = 1031 + 2352.477j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.map(none_type_0)
    var_2 = var_1.to_box()
    maybe_2 = module_0.Maybe(var_2, none_type_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_1.to_either()
    maybe_1.map(var_0)


def test_case_6():
    float_0 = 867.962
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xae\xa3\xf0l0M\xab\x85K\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_8():
    bool_0 = True
    int_0 = 2010
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_2, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_1)
    var_0 = maybe_1.get_or_else(none_type_1)
    var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\xae\xa3\xf0l0M\xab\x85K\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    maybe_1.filter(var_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    int_0 = -846
    float_0 = -1422.12892
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_0 = var_1.__eq__(int_0)
    int_1 = 1275
    dict_0 = {int_1: int_1, int_1: int_1}
    maybe_1 = module_0.Maybe(dict_0, int_1)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_16():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\xae\xa3\xf0l0M\xab\x85K\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = var_1.to_either()
    var_3 = var_1.filter(var_2)
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    none_type_0.to_either()


def test_case_20():
    str_0 = "\\wf=^s8lz:@p9#+"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_2.to_try()
    var_5 = var_2.to_box()
    var_6 = var_1.map(var_2)
    var_4.to_lazy()


def test_case_21():
    none_type_0 = None
    bytes_0 = b"7'\xae\xf0l0M\xab\x85\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.map(none_type_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    bool_0 = var_2.__eq__(var_2)
    var_4 = maybe_0.filter(var_1)
    var_5 = maybe_0.bind(var_3)
    var_6 = var_3.get_or_else(var_3)
    var_7 = maybe_0.to_box()


def test_case_22():
    none_type_0 = None
    bytes_0 = b"\xae\xa3\xf0l0M\xab\x85K\xd9\xc6\x99\n\xc4\xe0\x92"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(none_type_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_4 = var_1.filter(var_1)
    none_type_0.to_try()
