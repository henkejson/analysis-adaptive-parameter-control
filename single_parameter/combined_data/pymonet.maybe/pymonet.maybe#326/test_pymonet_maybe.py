# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    int_0 = 404
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x10\xc3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_4.__eq__(var_0)
    var_5 = maybe_1.to_validation()


def test_case_3():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_3 = maybe_0.bind(var_0)
    var_4 = maybe_0.to_box()


def test_case_4():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = True
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.to_validation()
    var_5 = var_3.map(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_5)


def test_case_5():
    str_0 = "/70,4"
    set_0 = {str_0, str_0, str_0}
    maybe_0 = module_0.Maybe(str_0, set_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\xcaQ:\xdc\xe2\xe7\xc5"
    float_0 = 2931.3
    tuple_0 = (bytes_0, float_0)
    dict_0 = {}
    bool_1 = True
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    var_1 = maybe_2.bind(tuple_0)
    maybe_3 = module_0.Maybe(var_1, bool_1)
    bool_2 = False
    maybe_4 = module_0.Maybe(bool_2, bool_2)
    var_2 = maybe_4.to_try()
    maybe_4.map(maybe_3)


def test_case_6():
    none_type_0 = None
    int_0 = -3271
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.get_or_else(none_type_0)


def test_case_7():
    bool_0 = False
    int_0 = 1868
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.bind(int_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.bind(bool_0)


def test_case_8():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = True
    var_1 = maybe_0.filter(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_1)


def test_case_9():
    generic_0 = module_2.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(generic_0)


def test_case_10():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(var_0)


def test_case_11():
    int_0 = 404
    complex_0 = -65.0715 + 2801.06968j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(int_0)


def test_case_12():
    complex_0 = 608.33 - 2752.71703j
    int_0 = 1204
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(complex_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_validation()


def test_case_13():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(var_1)


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_1.filter(var_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    bool_1 = var_1.__eq__(var_3)


def test_case_16():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = True
    var_1 = maybe_0.filter(bytes_0)
    var_2 = var_1.bind(bytes_0)
    var_3 = maybe_0.to_validation()
    bool_1 = False
    var_4 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_1)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0.to_validation()


def test_case_18():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(bytes_0)
    var_2 = var_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(var_1)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_20():
    bytes_0 = b"\x10\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = True
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_2)


def test_case_21():
    bytes_0 = b"\xa2<\x10\xc3\xef\xe98\x7f\xf2\xff\xc59\xcd\x86\x15\xb04\xfbj"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_22():
    bytes_0 = b"\x10"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.bind(var_1)
    bool_1 = maybe_1.__eq__(var_1)
    var_4 = maybe_1.bind(var_1)
    var_5 = maybe_1.to_box()
    var_6 = maybe_1.to_validation()
    var_7 = var_0.to_box()


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    set_0 = set()
    bool_1 = True
    maybe_1 = module_0.Maybe(set_0, bool_1)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_1.get_or_else(none_type_1)
    maybe_2.filter(none_type_1)


def test_case_24():
    bytes_0 = b"\x10\xc3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    bool_1 = var_0.__eq__(maybe_1)
    var_3 = maybe_1.bind(var_1)
    var_4 = var_2.to_box()
    var_5 = maybe_0.to_box()
    var_1.map(var_0)


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -409.9114
    var_0 = maybe_0.to_box()
    list_0 = [none_type_0]
    maybe_1 = module_0.Maybe(list_0, float_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.bind(maybe_1)
    bool_0 = True
    var_3 = var_2.filter(bool_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(list_0, bool_1)
    var_4 = maybe_2.to_box()
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = var_4.__eq__(maybe_0)
    var_5 = maybe_1.ap(bool_3)
    var_0.map(bool_2)
