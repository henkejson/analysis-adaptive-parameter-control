# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    bool_1 = maybe_0.__eq__(dict_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    bool_2 = var_2.__eq__(bool_1)
    var_1.filter(bool_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_box()
    var_1.ap(var_3)


def test_case_4():
    none_type_0 = None
    str_0 = "(j~v$ .v.lLm,\x0bR\x0bmh+"
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(str_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_1.to_either()
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2.map(var_2)


def test_case_5():
    int_0 = 2595
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(int_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_box()


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.bind(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_box()
    var_4 = var_1.ap(var_3)
    var_5 = maybe_0.map(bool_0)
    bool_1 = var_5.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_6 = var_5.to_lazy()
    var_7 = maybe_1.map(var_5)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    generic_0 = module_1.Generic()
    int_0 = 323
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.filter(generic_0)
    var_4 = maybe_0.to_validation()
    var_5 = var_1.bind(generic_0)
    var_6 = var_5.to_lazy()
    bool_0 = var_1.__eq__(var_6)
    bool_1 = var_2.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(var_1)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_12():
    bool_0 = True
    bytes_0 = b"\x9d\xbc\xadX\xad\x98D\x97\xcc\np\xf5\xa4\xa1\xec\xb2\x06\xfc"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_either()
    float_0 = 1149.42969
    maybe_1 = module_0.Maybe(var_1, float_0)
    var_2 = maybe_0.to_lazy()
    generic_0 = module_1.Generic()
    bool_1 = maybe_1.__eq__(generic_0)


def test_case_13():
    str_0 = "Q|'\x0c6K -/$k oF\""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_14():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    bytes_0 = b"\x01\xd5\x00\x91(\xec\x04\x19\xf2Z*\x86\xa1\xf3\x9f\x19iy"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_19():
    int_0 = -749
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(int_0, var_0)
    var_1 = maybe_2.to_lazy()
    var_2 = var_1.to_either()
    var_1.to_lazy()


def test_case_20():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_3.filter(maybe_0)


def test_case_21():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.filter(var_0)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(var_1, var_1)
    bool_1 = maybe_2.__eq__(maybe_0)
    var_1.filter(var_1)


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.to_try()
