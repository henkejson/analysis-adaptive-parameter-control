# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 2244
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, list_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    list_0.to_try()


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.map(maybe_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.get_or_else(maybe_0)
    bool_1 = var_0.get_or_else(var_2)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.to_box()
    var_5 = var_1.get_or_else(var_0)
    var_6 = var_3.to_either()
    var_7 = var_1.map(var_1)
    var_8 = var_7.filter(var_0)
    var_9 = var_8.ap(var_6)
    bool_2 = var_8.__eq__(maybe_0)


def test_case_5():
    bytes_0 = b"a \x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_0)


def test_case_6():
    int_0 = 748
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(int_0)


def test_case_7():
    int_0 = -247
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_8():
    bytes_0 = b"a \x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(maybe_0)
    var_3 = var_0.to_lazy()
    bool_0 = True
    var_4 = maybe_0.to_lazy()
    bool_1 = var_3.__eq__(var_3)
    maybe_1 = module_0.Maybe(var_4, bool_0)
    var_5 = maybe_0.filter(bool_0)
    var_6 = var_0.to_validation()
    var_6.map(maybe_1)


def test_case_9():
    str_0 = "\n        :returns: False\n        :rtype: Boolean\n        "
    complex_0 = -2112.201963 + 1019j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.filter(str_0)


def test_case_10():
    str_0 = "]qp\x0bGbBGp&P&A"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(str_0, var_0)
    var_1 = maybe_1.get_or_else(str_0)
    var_1.to_validation()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = var_0.map(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    int_0 = 2675
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_either()
    var_0.bind(int_0)


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xdd\\v\r\x9e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    bool_0 = var_0.__eq__(none_type_0)


def test_case_15():
    list_0 = []
    list_1 = [list_0, list_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    maybe_1 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_1.bind(list_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = var_0.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_0.to_box()
    var_4.ap(var_1)


def test_case_16():
    int_0 = 2244
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    str_0 = "5z?}@\x0ca"
    list_0 = [str_0, str_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(list_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    complex_0 = 356.8 - 1540.29398j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    int_0 = -228
    bool_1 = False
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_box()
    var_3 = maybe_0.to_either()
    var_1.ap(int_0)


def test_case_20():
    list_0 = []
    list_1 = [list_0, list_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_1, bool_0)
    maybe_1 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_1.bind(list_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = var_0.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = var_0.to_lazy()
    var_4 = var_1.ap(maybe_0)
    var_5 = maybe_0.ap(maybe_0)
    var_6 = var_3.to_validation()
    var_7 = var_1.to_validation()
    var_8 = var_2.ap(bool_0)
    var_6.ap(maybe_0)


def test_case_21():
    int_0 = 1298
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_2.to_box()
    var_1 = maybe_2.to_either()
    var_0.filter(var_1)


def test_case_22():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(bytes_0)


def test_case_23():
    list_0 = []
    list_1 = [list_0, list_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.bind(var_0)
    maybe_1 = module_0.Maybe(bool_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_1.to_either()
    dict_0 = {}
    var_4 = var_2.ap(dict_0)
    var_4.filter(var_2)
