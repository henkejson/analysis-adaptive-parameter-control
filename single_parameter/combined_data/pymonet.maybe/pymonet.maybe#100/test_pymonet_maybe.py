# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 1954
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.bind(maybe_1)
    var_1 = maybe_1.get_or_else(int_0)
    var_2 = maybe_1.filter(maybe_1)
    none_type_0 = None
    var_3 = maybe_1.ap(none_type_0)
    var_4 = maybe_1.bind(int_0)
    bool_0 = var_0.__eq__(var_1)
    tuple_0 = (var_1, var_3, var_3)
    var_5 = maybe_1.ap(tuple_0)
    var_6 = var_5.to_validation()
    var_7 = var_3.map(var_1)
    var_8 = maybe_1.to_validation()
    var_9 = var_4.ap(var_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_10 = var_0.filter(var_5)
    bool_1 = var_9.__eq__(none_type_0)
    var_11 = var_7.get_or_else(maybe_1)
    var_1.to_validation()


def test_case_3():
    str_0 = "$j"
    maybe_0 = module_0.Maybe(str_0, str_0)
    str_1 = "/}"
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.get_or_else(str_1)
    var_4 = maybe_0.to_box()
    bool_0 = var_4.__eq__(str_0)


def test_case_4():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    none_type_0 = None
    bool_3 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    bool_4 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_4)
    var_0 = maybe_2.filter(bool_2)
    var_1 = var_0.filter(none_type_0)
    maybe_3 = module_0.Maybe(var_0, bool_4)
    maybe_0.map(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    tuple_0 = ()
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    bool_1 = False
    set_0 = {tuple_0, tuple_0, bool_1, bool_1}
    maybe_1 = module_0.Maybe(set_0, bool_1)
    maybe_2 = module_0.Maybe(tuple_0, set_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_box()
    var_3.bind(maybe_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    maybe_0.bind(var_0)


def test_case_7():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.ap(dict_0)


def test_case_8():
    bytes_0 = b"o\x05%\x84T\xc6L\xf5\xd9"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.filter(var_1)


def test_case_9():
    none_type_0 = None
    str_0 = "\n        Transform Box into Right either.\n\n        :returns: right Either monad with previous value\n        :rtype: Right[A]\n        "
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    none_type_1 = None
    none_type_2 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_2, bool_0)
    var_0 = maybe_1.get_or_else(none_type_1)
    var_1 = maybe_0.get_or_else(bool_0)
    var_0.to_lazy()


def test_case_10():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_0.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_16():
    int_0 = 1893
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_try()
    var_2 = var_0.to_box()
    bytes_0 = b"R\xf6\x90 \xf4\x00\xf2 \x88C$\x08\x18>k\xbda"
    var_3 = maybe_1.map(var_2)
    int_0 = 409
    bytes_1 = b"\r\xdadU\xd2\xd8\xa5\x9f:)\xedX\xb9\x13"
    tuple_0 = (bytes_1,)
    maybe_2 = module_0.Maybe(tuple_0, tuple_0)
    var_4 = maybe_2.to_lazy()
    var_5 = var_4.ap(int_0)
    var_6 = maybe_2.ap(var_5)
    var_2.map(bytes_0)


def test_case_18():
    bytes_0 = b"\xf4\x85\x02\x99\xba\t"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    maybe_0.ap(bool_2)


def test_case_19():
    int_0 = 1954
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.bind(maybe_1)
    var_2 = maybe_1.bind(maybe_0)
    none_type_0 = None
    var_3 = maybe_1.ap(none_type_0)
    bool_0 = var_2.__eq__(int_0)
    var_4 = maybe_1.ap(var_2)
    var_5 = var_3.map(maybe_1)
    var_6 = maybe_1.to_validation()
    var_7 = var_1.ap(int_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_8 = var_2.filter(var_4)
    bool_1 = var_7.__eq__(var_1)
    var_9 = var_5.get_or_else(maybe_1)
    var_10 = var_9.to_validation()
    var_11 = var_2.ap(var_7)
    var_12 = var_11.map(var_7)
    bool_2 = var_9.__eq__(maybe_0)
    var_13 = maybe_0.to_box()
    var_14 = maybe_2.to_try()
    var_14.to_validation()


def test_case_20():
    int_0 = 1954
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.bind(var_0)
    none_type_0 = None
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.bind(int_0)
    tuple_0 = (int_0, var_2, int_0)
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.ap(tuple_0)
    var_6 = maybe_0.to_validation()
    var_7 = var_0.ap(int_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_8 = var_1.filter(var_5)
    var_9 = var_0.filter(var_5)
    bool_0 = var_7.__eq__(maybe_0)
    var_10 = var_1.get_or_else(maybe_0)
    var_11 = var_10.to_validation()
    var_12 = var_1.ap(var_3)
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_13 = var_12.map(var_7)
    bool_1 = var_10.__eq__(var_9)
    var_14 = maybe_0.to_box()
    var_15 = maybe_1.to_try()
    var_15.to_either()
