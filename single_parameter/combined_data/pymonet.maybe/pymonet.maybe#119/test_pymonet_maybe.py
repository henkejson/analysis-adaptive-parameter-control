# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xaaw\x8c\xed~\nDL\xdd\xdf\xfe\xc5\x8c\x89"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "Wds/!z\\_/"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_1 = maybe_0.__eq__(tuple_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)


def test_case_3():
    str_0 = "W"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(str_0)
    var_3 = maybe_0.map(maybe_0)


def test_case_4():
    complex_0 = 271 - 2747.517j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_0)
    var_3 = var_1.ap(complex_0)
    var_4 = var_1.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    var_5 = var_0.to_validation()
    var_6 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(maybe_1, var_6)
    var_7 = maybe_1.ap(maybe_2)
    var_8 = var_7.to_lazy()
    var_9 = var_8.to_validation()
    var_10 = var_6.get_or_else(var_9)
    bool_2 = var_10.__eq__(var_6)
    maybe_1.map(complex_0)


def test_case_5():
    float_0 = -968.01265
    list_0 = [float_0, float_0, float_0, float_0]
    maybe_0 = module_0.Maybe(list_0, float_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_validation()
    var_0.ap(var_2)


def test_case_6():
    float_0 = 1241.14606
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    dict_0 = {}
    int_0 = -2598
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.bind(dict_0)


def test_case_7():
    complex_0 = -1174.99654 - 4833.61j
    bool_0 = False
    str_0 = "n,4E].\tCs;u~77nx"
    set_0 = {str_0, str_0, str_0}
    list_0 = [set_0, set_0]
    tuple_0 = (list_0,)
    tuple_1 = (list_0, str_0, tuple_0, tuple_0)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_1)
    var_0 = maybe_0.ap(bool_0)
    bool_2 = var_0.__eq__(complex_0)


def test_case_8():
    int_0 = -2369
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    int_0 = 3604
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(dict_0)


def test_case_11():
    bytes_0 = b"\xf9\xfa\nO\x17\x94BFd\x11\x97u\xe4"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0.filter(var_0)


def test_case_12():
    int_0 = -1413
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0.filter(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(var_0)


def test_case_14():
    int_0 = 0
    int_1 = 1
    float_0 = 586.056
    tuple_0 = (float_0,)
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, float_0, bool_0)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_1)
    var_0 = maybe_0.map(int_1)
    var_1 = var_0.to_box()
    var_1.bind(int_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_1.__eq__(bool_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_4 = maybe_1.to_try()
    var_5 = maybe_2.to_box()
    var_6 = maybe_0.map(var_4)
    var_7 = var_0.to_validation()
    var_8 = maybe_0.filter(var_3)
    var_9 = var_6.bind(var_2)
    var_10 = maybe_0.to_try()
    var_11 = var_6.to_lazy()
    var_12 = var_0.map(var_2)
    var_13 = maybe_2.map(var_10)
    var_14 = var_11.ap(var_4)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.ap(bool_0)


def test_case_18():
    bool_0 = False
    tuple_0 = ()
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_try()
    tuple_1 = (bool_0, tuple_0, var_0, bool_0)
    none_type_0 = None
    tuple_2 = ()
    list_0 = [tuple_2, tuple_2, tuple_2, tuple_2]
    none_type_1 = None
    maybe_1 = module_0.Maybe(list_0, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.bind(tuple_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    tuple_0 = (bool_0, maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_1 = var_0.get_or_else(tuple_0)


def test_case_20():
    bytes_0 = b"\x00\xc1\xdc\xe7\x86x\xba\xb3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_22():
    bytes_0 = b"\xf9\xfa\nO\x17\x94BFd\x11\x97u\xe4"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_2.filter(var_2)


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0.ap(none_type_0)


def test_case_24():
    bytes_0 = b"(\x873g"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.to_either()
    var_0.get_or_else(maybe_0)


def test_case_25():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_1.to_either()
    var_3 = var_0.to_box()
    bytes_0 = b"\x05\x86\xec\x16"
    var_2.map(bytes_0)
