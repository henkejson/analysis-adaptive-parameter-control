# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = 1108.09315
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.bind(var_0)


def test_case_3():
    float_0 = 1108.09315
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(float_0)
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_4():
    float_0 = 1108.09315
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.map(var_2)


def test_case_5():
    str_0 = "/&,^2kSz>GapVj&LuP"
    float_0 = 1110.12844
    maybe_0 = module_0.Maybe(str_0, float_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.map(str_0)
    bool_1 = False
    var_4 = var_3.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_5 = maybe_1.to_either()
    var_6 = var_2.to_try()
    var_7 = maybe_1.to_validation()
    var_8 = var_7.to_either()
    maybe_1.map(var_7)


def test_case_6():
    float_0 = 1108.09315
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = var_2.bind(var_1)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(bool_0)


def test_case_8():
    float_0 = 1108.09315
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    var_1 = maybe_0.ap(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)


def test_case_9():
    none_type_0 = None
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    str_0 = "W^HO7wYrhu'/m{|#"
    tuple_0 = (str_0,)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_1)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.filter(maybe_1)
    var_3 = maybe_0.get_or_else(var_0)
    maybe_1.filter(var_1)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_13():
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_14():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_15():
    complex_0 = -3116 - 2080j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(complex_0)
    list_0 = [complex_0]
    maybe_1 = module_0.Maybe(list_0, complex_0)
    bool_1 = True
    bool_2 = False
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_2.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(bool_2)
    var_2.get_or_else(bool_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_validation()


def test_case_17():
    float_0 = -552.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    int_0 = 0
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_try()
    var_1.filter(var_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.ap(var_0)
    var_2 = var_1.filter(var_1)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    bool_2 = maybe_2.__eq__(bool_1)
    var_3 = maybe_2.to_validation()
    var_4 = var_2.get_or_else(var_0)
    maybe_0.filter(var_2)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(var_1)
    var_3 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_3)
    var_4 = var_3.to_try()
    var_5 = var_2.to_box()
    bool_2 = True
    dict_0 = {bool_2: none_type_0, bool_2: none_type_0, none_type_0: none_type_0}
    maybe_1 = module_0.Maybe(none_type_0, dict_0)
    var_6 = var_2.to_either()
    var_7 = var_6.ap(maybe_0)
    bool_3 = var_2.__eq__(var_0)
    bool_4 = var_7.__eq__(bool_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bool_0)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(bool_0)
    complex_0 = -1837.482 - 526.933j
    bool_1 = False
    var_2 = var_0.filter(complex_0)
    var_3 = var_1.filter(var_0)
    var_4 = maybe_0.to_validation()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    bool_3 = var_4.__eq__(maybe_0)
    var_5 = var_4.to_lazy()
    bool_4 = maybe_1.__eq__(var_3)
    var_6 = var_4.to_box()
    var_7 = var_6.to_validation()
    var_8 = var_5.to_either()
    var_7.get_or_else(var_4)
