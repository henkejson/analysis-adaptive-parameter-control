# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bool_0)
    bool_1 = var_2.__eq__(none_type_0)
    var_3 = var_2.to_validation()


def test_case_4():
    bytes_0 = b"#\x88wRx"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_box()
    var_3 = var_1.ap(bool_1)
    var_4 = maybe_0.get_or_else(var_1)
    var_5 = var_1.to_validation()
    var_5.bind(var_4)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = '?0\tqk~Jc{o":9"X3Su'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_1.ap(str_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = var_0.filter(var_0)
    maybe_0.filter(var_1)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = False
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    maybe_0.bind(var_0)


def test_case_8():
    str_0 = '0\tqk~Jc{o[:9"X3Su'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_1.ap(str_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = var_0.filter(var_0)
    maybe_0.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_0.ap(bool_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_0.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    bytes_0 = b"\xe2"
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.to_box()
    var_1.bind(set_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(none_type_0)


def test_case_15():
    int_0 = -2603
    float_0 = -1424.17
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(int_0)


def test_case_16():
    none_type_0 = None
    bytes_0 = b"M=\x13=\x18Z\x10\xefWw}\xab\x0b`\xe0D\xd2\x9e"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    int_0 = -4132
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(list_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1}
    tuple_0 = (bool_1, bool_0, set_0, set_0)
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.ap(none_type_0)
    var_5 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(tuple_0, var_2)
    var_6 = var_2.to_try()
    var_1.get_or_else(var_3)


def test_case_20():
    str_0 = '?0\tqk~Jc{o":9"X3Su'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.ap(str_0)
    bool_1 = var_1.__eq__(str_0)
    var_2 = maybe_1.bind(var_1)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.to_try()
    var_5 = var_1.to_box()
    bool_2 = maybe_1.__eq__(maybe_0)
    var_6 = maybe_1.map(var_4)
    var_7 = var_1.filter(var_1)
    var_8 = maybe_1.to_lazy()
    var_9 = var_1.map(var_8)
    maybe_0.filter(var_8)


def test_case_21():
    str_0 = '?0\tqk~Jc{o":9"X3Su'
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_try()
    var_3 = var_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_4 = var_0.filter(var_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_0.map(var_5)
    var_7 = maybe_0.to_try()
    var_8 = var_5.ap(var_3)
    bool_1 = none_type_0.__eq__(var_6)
    var_9 = var_7.filter(var_0)
    bool_2 = False
    var_10 = maybe_0.ap(var_3)
    var_11 = var_6.to_lazy()
    var_12 = var_9.get_or_else(bool_2)
    maybe_1 = module_0.Maybe(var_2, bool_2)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_12.to_validation()
