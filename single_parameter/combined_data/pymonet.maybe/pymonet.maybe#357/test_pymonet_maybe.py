# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -581
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(maybe_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(var_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = False
    var_2 = maybe_1.filter(var_0)
    bool_2 = var_2.__eq__(bool_1)
    maybe_0.filter(bool_2)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.bind(var_1)
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.map(var_4)
    var_6 = var_5.to_either()
    var_4.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    int_0 = 1202
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(bool_0)
    bool_2 = var_1.__eq__(bool_1)
    var_2 = var_1.filter(var_0)
    var_3 = var_2.to_try()
    var_4 = var_2.filter(bool_2)


def test_case_7():
    set_0 = set()
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.bind(set_0)


def test_case_8():
    bool_0 = False
    bytes_0 = b"\xea\xf4x"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.to_either()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(var_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_1.filter(var_0)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(maybe_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    dict_0 = {}
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_try()


def test_case_13():
    float_0 = -2869.988
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_validation()
    bool_0 = var_0.__eq__(none_type_0)
    var_1.to_box()


def test_case_15():
    bytes_0 = b"f\xe9d\xdb`}<|\xe7\xf5`\xe0Q\x1e-\xf6\xd7x\x1bk"
    float_0 = 1416.0
    tuple_0 = (float_0, float_0)
    set_0 = {tuple_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_18():
    int_0 = -4706
    list_0 = [int_0, int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bytes_0 = b"De@y"
    dict_0 = {bytes_0: bytes_0}
    maybe_1 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_1.to_try()
    var_0.to_validation()


def test_case_19():
    bytes_0 = b"c\x89\xa65\x8c\xdd\x92\xef\xce\xb6\x9b"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    int_0 = -5777
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    list_0 = []
    bool_0 = False
    maybe_2 = module_0.Maybe(list_0, bool_0)
    maybe_2.bind(var_2)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(none_type_0)


def test_case_22():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(none_type_0)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    dict_0 = {}
    bool_0 = True
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.ap(bool_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_0.to_either()
    bool_1 = var_1.__eq__(var_1)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.to_validation()
    var_4.to_try()
