# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_1.__eq__(var_1)
    var_2 = var_0.filter(var_0)
    maybe_0.filter(var_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = var_0.filter(var_0)
    var_4 = var_1.bind(var_2)
    maybe_0.filter(var_0)


def test_case_5():
    bytes_0 = b"\x95;\x98\xee\x8e\xdaN\xa8!\xba"
    complex_0 = -2959.81 - 3411.94471j
    maybe_0 = module_0.Maybe(bytes_0, complex_0)
    var_0 = maybe_0.bind(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)


def test_case_6():
    tuple_0 = ()
    int_0 = 51
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.bind(tuple_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.bind(var_1)
    maybe_0.filter(var_0)


def test_case_8():
    str_0 = "\\ubEK{P|J\\]#vQe"
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = var_0.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = var_0.filter(var_0)
    var_3 = var_2.bind(var_1)
    maybe_0.filter(var_0)


def test_case_13():
    str_0 = "=@[+UX%B#`s(DlMX\r|!4"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()


def test_case_15():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.to_try()
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_16():
    bytes_0 = b"\x10\x9b\xe5\x0c\x85\x04.\x00a\xb3\xfa\xe9P\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.map(var_1)
    var_1.to_lazy()


def test_case_17():
    int_0 = 0
    bytes_0 = b"r\x1f/\x87\xfc\xfd\xa8\xcdC\t\xd6\xf0\xdd\x01\xeb\x1f\x83]"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(int_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bytes_0 = b"\x08\xf2{\xb4"
    str_0 = "9'{:E$`*s:BCX~.y=0G."
    maybe_0 = module_0.Maybe(bytes_0, str_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_3.get_or_else(bytes_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    maybe_1.filter(var_1)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(bool_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(maybe_1)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_1.map(var_1)
    var_3 = var_1.filter(var_1)
    var_4 = var_1.map(maybe_0)
    var_5 = maybe_1.to_box()
    var_6 = var_3.to_box()
    var_7 = var_5.to_either()
    var_8 = var_1.to_validation()
    var_9 = var_8.to_try()
    var_10 = maybe_1.filter(var_7)
    var_11 = maybe_1.map(var_9)
    bool_0 = maybe_0.__eq__(var_6)
    var_12 = maybe_1.map(var_7)
    bool_1 = maybe_1.__eq__(var_11)
    var_13 = var_8.to_box()
    var_14 = var_3.to_either()
    var_15 = var_11.get_or_else(var_13)
    var_16 = var_11.bind(var_14)
    bool_2 = var_16.__eq__(var_8)
    var_5.bind(none_type_0)
