# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xec\xd1\xc2\xd5\x84\xff\xda_6\x1e\x8e\xa8\xf3"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = 1681
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_2 = maybe_1.to_try()
    var_2.to_lazy()


def test_case_3():
    complex_0 = 2156.07 + 2069.608099j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.to_box()
    bool_1 = var_2.__eq__(var_3)
    var_4 = maybe_0.to_try()
    var_5 = var_2.to_lazy()
    var_6 = var_3.to_validation()
    var_7 = var_5.to_box()
    var_8 = maybe_0.bind(var_4)
    var_9 = var_8.to_either()
    var_10 = var_5.ap(var_3)
    var_7.get_or_else(var_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_5():
    bytes_0 = b"\xcc\xa8HK"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.get_or_else(bytes_0)
    var_1.filter(bytes_0)


def test_case_6():
    complex_0 = -2073.397 - 1937.4j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = var_0.to_validation()
    maybe_0.bind(complex_0)


def test_case_7():
    int_0 = -3922
    set_0 = {int_0, int_0}
    tuple_0 = (int_0, set_0)
    int_1 = -2429
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = var_0.ap(maybe_0)
    int_2 = -1819
    bool_1 = False
    maybe_2 = module_0.Maybe(int_2, bool_1)
    maybe_2.filter(maybe_1)


def test_case_8():
    none_type_0 = None
    int_0 = -84
    none_type_1 = None
    maybe_0 = module_0.Maybe(int_0, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = -3922
    set_0 = {int_0, int_0}
    tuple_0 = (int_0, set_0)
    int_1 = -2429
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    int_2 = -1819
    bool_1 = False
    maybe_1 = module_0.Maybe(int_2, bool_1)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_11():
    bytes_0 = b"\xa8b\x14\xb0"
    complex_0 = 1400.336034 - 1303.553312j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bytes_0)


def test_case_12():
    dict_0 = {}
    int_0 = 4716
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_either()
    var_4 = var_3.bind(dict_0)
    bool_0 = var_1.__eq__(int_0)
    var_5 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_6 = var_3.to_try()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_14():
    bytes_0 = b"\x1eN@9\xb5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_15():
    bytes_0 = b"\xec\xd1\xc2\xd5\x84\xff\xda_6\x1e\x8e\xa8\xf3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = 1681
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_2 = maybe_1.to_try()
    var_2.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_0.get_or_else(var_2)


def test_case_17():
    int_0 = -3922
    set_0 = {int_0, int_0}
    tuple_0 = (int_0, set_0)
    int_1 = -2429
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = var_0.to_try()
    int_2 = -1819
    bool_1 = False
    maybe_1 = module_0.Maybe(int_2, bool_1)
    maybe_1.filter(var_1)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    int_0 = -405
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_validation()
    var_1.map(var_0)


def test_case_20():
    bytes_0 = b"/\xf4%\xef_\x96\xa9\xfb\x9a\xec\x9bF"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.bind(maybe_0)
    var_3 = var_2.to_lazy()
    bool_0 = maybe_0.__eq__(var_2)
    var_4 = var_2.to_try()
    var_5 = var_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_6 = maybe_1.to_try()
    var_7 = var_3.to_try()
    var_3.to_lazy()
