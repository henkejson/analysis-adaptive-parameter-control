# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    generic_0 = module_1.Generic()
    set_0 = {generic_0, generic_0, generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, set_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    bool_0 = maybe_1.__eq__(var_1)
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = var_0.get_or_else(var_1)
    maybe_2 = module_0.Maybe(var_5, none_type_0)
    maybe_2.filter(var_4)


def test_case_3():
    bool_0 = True
    str_0 = "b#RR#>f'X-Mn3AL~"
    dict_0 = {str_0: str_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    var_2.map(bool_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    bytes_0 = b"_\xcf9V\x82\xb3rXL\x82.\x96\xda\x187AN\x9b\x17"
    set_0 = {bytes_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = maybe_0.bind(var_0)


def test_case_6():
    bytes_0 = b"\xaf9|~;\x0e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(dict_0)


def test_case_7():
    generic_0 = module_1.Generic()
    set_0 = {generic_0, generic_0, generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, set_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_8():
    generic_0 = module_1.Generic()
    set_0 = {generic_0, generic_0, generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_9():
    int_0 = 1
    str_0 = "Sum[value={}]"
    int_1 = -138
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1, int_1: int_1}
    maybe_0 = module_0.Maybe(int_1, dict_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.bind(int_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_box()


def test_case_12():
    int_0 = 1597
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    maybe_0.filter(bool_0)


def test_case_13():
    str_0 = "nL75?\x0cJR1xx8Ac"
    bytes_0 = b",\xaa\x14\xea\xcf\xdc >f\xfc*\xb7\xf7\xf0"
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(str_0)


def test_case_14():
    generic_0 = module_1.Generic()
    set_0 = {generic_0, generic_0, generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_2.get_or_else(var_3)
    var_6 = maybe_0.to_either()
    bool_0 = var_4.__eq__(var_3)
    var_7 = var_3.to_lazy()
    var_8 = var_2.get_or_else(var_3)
    var_9 = var_8.to_try()
    var_10 = maybe_0.get_or_else(generic_0)
    var_11 = var_3.to_validation()
    maybe_1 = module_0.Maybe(var_10, none_type_0)
    maybe_1.filter(var_10)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    set_0 = {bool_0}
    dict_0 = {
        none_type_0: bool_0,
        bool_1: bool_0,
        bool_0: set_0,
        none_type_0: none_type_0,
    }
    tuple_0 = (dict_0,)
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(tuple_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = var_0.to_either()
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.to_box()
    var_4 = maybe_2.to_validation()
    var_5 = var_2.to_box()
    var_6 = var_5.to_try()
    maybe_3 = module_0.Maybe(none_type_0, bool_1)
    var_6.bind(var_3)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(var_3, bool_1)
    var_4 = maybe_1.bind(none_type_0)
    var_5 = var_4.filter(bool_0)
    bool_2 = maybe_1.__eq__(var_4)
    var_6 = var_5.to_either()
    var_7 = var_6.to_box()
    var_8 = var_4.get_or_else(bool_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(maybe_0)
