# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = 'N\n>u-4K<"*'
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = 'N\n>u-4K<"*'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(maybe_0)


def test_case_3():
    float_0 = 3203.66
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(float_0)


def test_case_4():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.bind(complex_0)


def test_case_5():
    int_0 = 1994
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.bind(var_0)


def test_case_6():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(maybe_0)


def test_case_7():
    str_0 = "bgc?4mVP k\n-\trNWNW"
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    none_type_2 = None
    maybe_1 = module_0.Maybe(none_type_2, none_type_2)
    var_1 = maybe_1.to_lazy()
    maybe_1.ap(str_0)


def test_case_8():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)


def test_case_9():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)


def test_case_10():
    dict_0 = {}
    bytes_0 = b"\xf9!(k\x90\xd2\x90S"
    bool_0 = False
    tuple_0 = (dict_0, bytes_0, bool_0)
    list_0 = [tuple_0, bytes_0, tuple_0, bool_0]
    none_type_0 = None
    int_0 = 138
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(list_0)


def test_case_11():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_1)


def test_case_13():
    bool_0 = False
    str_0 = "lR;wY#'J}*!-uZZp."
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.ap(str_0)
    var_3.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_15():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    complex_0 = -3106.81 + 813.189j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    str_0 = 'N\n>u-4K<"*'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(maybe_1)


def test_case_20():
    bool_0 = False
    str_0 = "lR;wY#'J}*!-uZZp."
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(bool_1)
    var_3 = var_1.to_either()
    var_2.ap(bool_0)


def test_case_21():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.bind(var_2)
    var_4 = var_3.to_lazy()
    var_4.filter(var_1)


def test_case_22():
    bool_0 = False
    str_0 = "lR;wY#'J}*!-uZZp."
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_1 = maybe_0.__eq__(str_0)
    bool_0.to_box()


def test_case_23():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.ap(none_type_1)
    var_2 = var_1.to_lazy()
    var_3 = var_0.bind(var_1)
    var_4 = var_0.to_either()
    bool_1 = maybe_0.__eq__(var_1)


def test_case_24():
    str_0 = "ng&) Bv!uiE"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_0.to_validation()
    var_4 = var_3.to_try()
    var_5 = var_0.to_lazy()
    var_6 = maybe_0.filter(var_5)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_7 = maybe_1.map(str_0)
    var_8 = var_7.to_try()
    maybe_2 = module_0.Maybe(none_type_0, var_5)
    bool_1 = maybe_2.__eq__(var_7)
    var_9 = var_0.map(var_1)
    var_10 = var_9.ap(var_8)
    bool_2 = var_7.__eq__(var_5)
    var_11 = var_2.to_either()
    var_11.get_or_else(var_4)


def test_case_25():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    str_0 = ""
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = var_0.to_try()
    bool_2 = False
    maybe_2 = module_0.Maybe(str_0, bool_2)
    bool_3 = var_0.__eq__(maybe_1)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_2.get_or_else(maybe_2)
    var_4 = maybe_2.to_lazy()
