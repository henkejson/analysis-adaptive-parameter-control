# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"p\xcb\xb2\xc5\x9e%\x96\xcb\x9c\xe7:3\x83\x9a\x803\xa6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    module_1.object(**maybe_0)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    complex_0 = -894.483 + 1429.427j
    list_0 = [complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    var_0 = maybe_0.map(list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.filter(list_0)
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_2 = maybe_2.ap(list_0)
    bool_1 = maybe_2.__eq__(maybe_2)
    maybe_1.filter(var_0)


def test_case_5():
    str_0 = "V"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(str_0)


def test_case_6():
    str_0 = "}n"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(var_0)
    bool_0 = False
    var_2 = var_0.to_try()
    var_2.ap(bool_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_8():
    int_0 = 1270
    bytes_0 = b"*\x12\xe7\xc5\xa9\x1ds\xf6\x08\xc9!\xef/"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.to_either()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    complex_0 = -894.483 + 1429.427j
    list_0 = [complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    maybe_1.filter(var_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_12():
    bytes_0 = b"\xa7m\xd0\xee\xdd\xdc"
    float_0 = 1309.3649
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_2.to_try()


def test_case_14():
    str_0 = "wMd/5\x0ccF~Ux`mkCM"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_15():
    complex_0 = -894.483 + 1429.427j
    list_0 = [complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.filter(list_0)
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_2 = maybe_2.to_validation()
    maybe_1.filter(var_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_try()
    tuple_0 = ()
    none_type_1 = None
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_1, bool_1)
    maybe_3 = module_0.Maybe(none_type_1, bool_1)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_3.to_try()
    maybe_4 = module_0.Maybe(tuple_0, none_type_1)
    var_4 = maybe_4.to_try()
    var_4.bind(var_2)


def test_case_17():
    complex_0 = -894.483 + 1429.427j
    list_0 = [complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.to_validation()
    var_5 = maybe_0.to_validation()
    var_6 = maybe_0.to_box()
    var_7 = var_5.to_box()
    var_8 = var_6.to_validation()


def test_case_19():
    complex_0 = -894.483 + 1429.427j
    list_0 = [complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_2.ap(list_0)
    bool_1 = maybe_2.__eq__(maybe_2)
    maybe_1.filter(maybe_1)


def test_case_20():
    str_0 = ">"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    var_0 = maybe_0.to_lazy()
    none_type_2 = None
    var_1 = maybe_0.bind(maybe_0)
    maybe_2 = module_0.Maybe(none_type_2, none_type_2)
    var_2 = maybe_2.get_or_else(none_type_1)
    bool_1 = maybe_0.__eq__(maybe_2)
    var_3 = var_1.to_lazy()
    var_2.to_validation()
