# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "?\x0bb{"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -3865
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    generic_0 = module_1.Generic()
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.bind(var_0)
    bool_2 = maybe_0.__eq__(bool_0)


def test_case_3():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.map(generic_0)
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_4():
    float_0 = 1203.320748
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    bool_1 = var_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = var_0.to_box()
    maybe_1.map(none_type_0)


def test_case_5():
    bool_0 = False
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    float_0 = 1491.215
    bool_1 = True
    maybe_0 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.bind(dict_0)
    var_1 = var_0.get_or_else(bool_0)
    var_1.to_try()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(bool_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(var_0)
    var_0.to_lazy()


def test_case_8():
    int_0 = -3865
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    tuple_0 = ()
    bool_2 = maybe_0.__eq__(bool_0)
    list_0 = []
    maybe_1 = module_0.Maybe(tuple_0, list_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"1\x84\xb9\xa0"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bytes_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_11():
    bytes_0 = b"Y\x8b\xe8"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()
    var_4.to_lazy()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_lazy()
    var_3 = var_2.ap(none_type_0)
    var_3.to_box()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"K\xe0\xd28\x1c\xfd\xbd\x1f"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.filter(none_type_0)


def test_case_14():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(none_type_0)


def test_case_15():
    str_0 = "qo?l24,{"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    float_0 = -110.1674
    int_0 = -2408
    list_0 = [int_0, int_0, int_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(float_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bytes_0 = b"1\x84\xb9\xa0"
    int_0 = 1312
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(var_0)
    bool_1 = maybe_1.__eq__(bytes_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(int_0, bool_2)
    maybe_2.filter(bytes_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0.ap(none_type_0)


def test_case_20():
    int_0 = 2320
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(int_0)


def test_case_21():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    var_2 = maybe_0.map(var_1)
    var_3 = var_1.filter(bool_1)
    var_4 = var_1.ap(var_1)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_1, bool_3)
    maybe_1.filter(none_type_0)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    bool_1 = False
    bool_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.bind(var_1)


def test_case_23():
    int_0 = -3674
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.ap(var_4)
    var_6 = var_2.bind(var_4)
    var_7 = var_1.get_or_else(maybe_0)
    var_8 = maybe_0.map(var_2)
    var_9 = var_3.to_validation()
    bool_0 = var_7.__eq__(var_1)
    var_10 = var_8.to_box()
    var_11 = var_0.to_lazy()
