# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xcb\xa2~\xdf\x99\xa9\xaf\x17e\xc3.\xfc\x15\xe7\xb5]\xb3H\xcc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.ap(var_0)
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_3.to_validation()
    var_5 = maybe_0.to_box()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)
    bool_1 = var_0.__eq__(var_1)
    bool_2 = True
    var_3 = var_0.ap(maybe_0)
    var_4 = var_2.get_or_else(bool_2)
    var_4.to_validation()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bytes_0 = b"E\xff\\\xe9\\\xcdO\xa8\xf2\xa0\x8c\xc3\xdd\x95\xdd"
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_1.ap(bool_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_box()
    var_3 = var_0.map(bytes_0)
    var_4 = var_0.to_box()
    var_5 = maybe_1.to_lazy()


def test_case_5():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    str_0 = "\x0bpqSL.saNqIHk;@K8d/{"
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(str_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()


def test_case_7():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(set_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_validation()


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_0.filter(var_1)


def test_case_11():
    bytes_0 = b"\xf1\xe1"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_0.filter(var_0)


def test_case_12():
    int_0 = 1036
    int_1 = -15
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_either()
    var_2 = var_0.bind(var_1)
    var_3 = var_0.to_either()
    var_4 = var_0.to_validation()


def test_case_13():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.ap(bool_0)


def test_case_14():
    bytes_0 = b"\xe6\x91\x03\x91\x8d\n\xa3\xd8B"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    bool_2 = True
    maybe_1 = module_0.Maybe(var_2, bool_2)
    var_3 = var_1.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.ap(var_2)
    var_6 = maybe_1.map(var_4)
    var_0.to_box()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_1.__eq__(var_1)
    var_2 = maybe_0.ap(bool_1)
    var_3 = var_0.get_or_else(var_1)
    var_4 = var_0.to_validation()
    var_3.to_either()


def test_case_17():
    str_0 = "hbbG~pa)24Tl?ijA$'X"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(bool_0)
    var_2.to_either()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = maybe_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_3, bool_2)
    var_4 = maybe_1.ap(maybe_0)
    var_3.to_either()


def test_case_19():
    bool_0 = False
    int_0 = -1894
    list_0 = [int_0, int_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_validation()
    none_type_0 = None
    var_3 = var_0.bind(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = var_3.__eq__(maybe_0)
    var_4 = var_0.to_either()
    var_1.filter(var_1)
