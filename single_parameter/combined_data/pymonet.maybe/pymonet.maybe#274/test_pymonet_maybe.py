# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"=\xc4Ld*t\xc5*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(maybe_0)
    float_0 = -1412.8883
    bool_2 = var_2.__eq__(float_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.ap(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_3 = maybe_0.__eq__(var_4)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_5():
    bytes_0 = b"\x1e\xb9&\xe0U\xaa\xcd\x1b\xf0"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = -3525
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(int_0)


def test_case_7():
    str_0 = "/rJn\x0c,1U#\r=p}={W"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(str_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    maybe_0.bind(var_2)


def test_case_8():
    bytes_0 = b"\xf9\xb5c\xe6S\x17e\xcb@\x89\xb0O"
    bytes_1 = b"\xe0KD\\-\xaa\xa3\xe1\xc2C97\x1fB"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_either()


def test_case_9():
    str_0 = "Ccrr4f&q"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    str_0 = "v~aK;d7%X6zlS\x0ccBdij"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)


def test_case_11():
    str_0 = "\tR&:i#XQ,Pq&{1~wS"
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(list_0)


def test_case_12():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    str_0 = ""
    list_0 = [var_2, str_0, maybe_0]
    bool_2 = True
    maybe_1 = module_0.Maybe(list_0, bool_2)
    var_3 = maybe_1.ap(bool_1)
    var_4 = var_3.get_or_else(bool_0)


def test_case_13():
    float_0 = 955.68
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1 = module_0.Maybe(maybe_0, none_type_1)
    maybe_2 = module_0.Maybe(float_0, none_type_0)
    maybe_3 = module_0.Maybe(maybe_1, maybe_1)
    var_0 = maybe_3.map(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.get_or_else(maybe_1)
    var_2.map(var_1)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    maybe_0.filter(maybe_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    complex_0 = -1204 + 3087.594j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1.filter(bool_0)


def test_case_18():
    str_0 = "O4k@%JV-U9)a(}"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    int_0 = 1
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_0.to_validation()
    maybe_0.filter(int_0)


def test_case_22():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(maybe_0)
    float_0 = -1412.8883
    var_3 = var_2.bind(var_0)
    var_4 = var_2.to_lazy()
    bool_2 = var_2.__eq__(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_5 = var_4.to_box()
    maybe_2 = module_0.Maybe(var_0, var_0)
    maybe_1.filter(maybe_2)


def test_case_23():
    float_0 = -560.1661
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_validation()
    bool_1 = var_1.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.map(var_1)
    var_4.to_validation()


def test_case_24():
    str_0 = "/rJn\x0c,1U#\r=p}={W"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.to_validation()
    var_5 = var_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(var_5, bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_2, bool_2)
    bool_3 = maybe_0.__eq__(maybe_2)
