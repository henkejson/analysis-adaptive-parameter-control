# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\xdc\xf0O\xa4\xa9\xf3T\xf9\xcf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_1 = maybe_0.filter(list_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(list_0)
    var_4 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_5 = var_2.to_either()
    maybe_1.filter(var_2)


def test_case_3():
    list_0 = []
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(list_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.ap(bool_0)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_3 = var_1.map(var_0)
    var_4 = maybe_0.to_validation()
    var_5 = var_4.to_lazy()
    var_6 = var_5.ap(maybe_0)
    var_7 = var_5.ap(none_type_0)
    var_8 = var_6.bind(var_2)
    var_9 = maybe_0.bind(var_4)
    bool_1 = var_4.__eq__(var_9)
    str_0 = "v&EDG5"
    var_7.filter(str_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(maybe_0)


def test_case_6():
    str_0 = "]%\n"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.bind(none_type_0)
    var_4 = var_3.bind(str_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_3 = module_0.Maybe(str_0, none_type_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(list_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.filter(list_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    bool_1 = True
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    int_0 = -2346
    var_2 = maybe_0.bind(int_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.get_or_else(none_type_0)
    bool_2 = var_2.__eq__(maybe_1)
    var_5 = maybe_0.to_try()
    var_5.to_try()


def test_case_12():
    int_0 = -3760
    bytes_0 = b"\x1f8\xcf!\xde\x0cvu\xdf\xef\xb9i\x9e\x83\x16\xfe\xc2"
    bytes_1 = b"\\=o\xee\xcf\xb5\xbd\xb7("
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_1, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.filter(int_0)


def test_case_13():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = maybe_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    str_0 = ""
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_0.map(str_0)


def test_case_16():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_1 = maybe_0.filter(list_0)
    var_2 = maybe_0.to_either()
    maybe_1.filter(var_0)


def test_case_17():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.filter(list_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_1 = maybe_0.filter(list_0)
    var_2 = var_1.to_validation()
    maybe_1.filter(var_0)


def test_case_20():
    generic_0 = module_1.Generic()
    int_0 = 2869
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(generic_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.to_either()
    str_0 = "K"
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_4 = maybe_2.get_or_else(maybe_2)
    var_5 = maybe_0.to_either()
    var_6 = maybe_2.map(str_0)
    var_0.filter(maybe_2)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_2.ap(maybe_2)
    var_0.to_box()


def test_case_23():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_1, list_0)
    var_2 = maybe_0.filter(list_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_2.bind(var_2)
    var_5 = maybe_0.bind(list_0)
    bool_2 = var_5.__eq__(maybe_1)
    var_6 = maybe_1.to_either()
    var_7 = var_5.to_either()
    maybe_1.filter(maybe_1)
