# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"d\xa5>\x84"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    str_0 = "HqkU4z]UJcq]7S"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_2.bind(str_0)


def test_case_3():
    bytes_0 = b"d\xa5>\x84"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)


def test_case_4():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    int_0 = -4625
    float_0 = 3289.0
    float_1 = 452.5
    bool_0 = True
    maybe_0 = module_0.Maybe(float_1, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.map(int_0)
    var_2 = var_1.get_or_else(generic_0)


def test_case_5():
    bytes_0 = b"\xa6\x8c\xd5\xbdv\x1b\xef5"
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_0 = maybe_1.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bool_0)


def test_case_8():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    maybe_0.filter(var_3)


def test_case_10():
    int_0 = -242
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_12():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.ap(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)


def test_case_15():
    int_0 = 286
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_16():
    complex_0 = -1521.4438 - 1521.069403j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.bind(complex_0)
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_17():
    bytes_0 = b"4\xff\xaf\x86:v&\xa9bEh\n\x11"
    str_0 = "HqkU4z]UJcq]7S"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.get_or_else(bytes_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_2 = maybe_0.to_box()
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.to_validation()


def test_case_19():
    int_0 = -180
    int_1 = 0
    bool_0 = True
    bool_1 = False
    tuple_0 = (int_0, int_1, bool_0, bool_1)
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(tuple_0)


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    bool_0 = True
    maybe_2 = module_0.Maybe(var_2, bool_0)
    var_3 = maybe_1.bind(maybe_2)
    maybe_0.map(none_type_1)


def test_case_21():
    complex_0 = -1521.4438 - 1521.069403j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.bind(complex_0)
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.get_or_else(maybe_1)
    var_5 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(complex_0, complex_0)
    var_6 = maybe_2.to_validation()
    bool_0 = False
    maybe_3 = module_0.Maybe(complex_0, bool_0)
    var_7 = maybe_3.to_validation()
    var_8 = maybe_0.to_validation()
    bool_1 = maybe_3.__eq__(maybe_3)
    maybe_4 = module_0.Maybe(var_7, bool_1)


def test_case_22():
    float_0 = -3395.9168
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()
    var_1.bind(float_0)
