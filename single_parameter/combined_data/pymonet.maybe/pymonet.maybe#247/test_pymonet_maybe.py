# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 29
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_4():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    var_2.get_or_else(int_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = True
    int_0 = -1926
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_7():
    str_0 = 'KNO$Ng[q\x0bA"O\t'
    bool_0 = True
    dict_0 = {bool_0: bool_0, str_0: bool_0, bool_0: str_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    none_type_1 = None
    maybe_2 = module_0.Maybe(bool_0, none_type_1)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    maybe_2.bind(maybe_3)


def test_case_8():
    int_0 = -1921
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.to_box()
    maybe_1.filter(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 444
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_10():
    int_0 = -1921
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    complex_0 = -2765.4948 + 3290.9j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_2 = maybe_1.bind(none_type_0)
    var_3 = var_2.get_or_else(var_1)
    var_4 = var_3.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(var_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_2.get_or_else(none_type_0)


def test_case_15():
    int_0 = -1921
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_box()
    maybe_1.filter(bool_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(none_type_0)


def test_case_17():
    complex_0 = -2765.4948 + 3290.9j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_2 = maybe_1.bind(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_2.to_box()
    var_4.to_try()


def test_case_18():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.bind(bool_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(bool_0)
    bool_1 = var_2.__eq__(var_2)
    var_1.filter(var_3)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_23():
    bool_0 = True
    int_0 = -1926
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_3 = var_2.to_either()
    var_4 = var_0.filter(var_3)
    var_5 = var_2.to_box()
    maybe_1.filter(var_1)
