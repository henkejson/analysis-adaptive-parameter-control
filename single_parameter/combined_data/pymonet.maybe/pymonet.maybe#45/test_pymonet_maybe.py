# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    maybe_0.filter(none_type_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    maybe_2 = module_1.Maybe(maybe_1, maybe_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    bool_0 = var_1.__eq__(var_0)
    var_2 = module_1.Maybe(var_0, bool_0)
    maybe_0.filter(var_2)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.ap(maybe_1)
    var_1 = var_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    str_0 = "43"
    complex_0 = -728.7 + 2525.459849j
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, complex_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = var_0.get_or_else(complex_0)
    list_0 = [str_0, str_0, str_0, complex_0]
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_1.Maybe(none_type_0, bool_1)
    maybe_1.ap(list_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    float_0 = -1620.34
    generic_0 = module_0.Generic()
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, generic_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.ap(float_0)
    var_2 = var_1.to_either()
    var_2.filter(float_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.get_or_else(var_1)
    maybe_0.filter(var_2)


def test_case_11():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = var_0.to_box()
    bool_0 = maybe_1.__eq__(maybe_1)
    maybe_0.filter(none_type_0)


def test_case_13():
    complex_0 = 1750.4564 - 1154.7j
    float_0 = -245.0
    bool_0 = False
    maybe_0 = module_1.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(complex_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    maybe_2 = module_1.Maybe(maybe_1, maybe_0)
    var_0 = maybe_0.ap(maybe_2)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_0.get_or_else(var_2)
    maybe_0.filter(var_3)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(maybe_0)
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    maybe_2 = module_1.Maybe(maybe_1, bool_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.filter(maybe_1)
    bool_1 = var_2.__eq__(maybe_0)
    var_4 = maybe_1.get_or_else(none_type_0)
    var_4.filter(var_2)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.get_or_else(var_1)
    maybe_0.filter(var_2)


def test_case_17():
    str_0 = "(!l:{>lHDT`*="
    str_1 = "2"
    int_0 = -2335
    tuple_0 = (str_1, int_0, int_0, int_0)
    bool_0 = True
    maybe_0 = module_1.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(str_0)


def test_case_18():
    bytes_0 = b"SP"
    set_0 = {bytes_0, bytes_0}
    bool_0 = False
    maybe_0 = module_1.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_19():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.bind(bool_0)


def test_case_20():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_1.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_1.to_lazy()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1 = module_1.Maybe(maybe_0, maybe_0)
    maybe_2 = module_1.Maybe(maybe_1, maybe_0)
    var_0 = maybe_0.ap(maybe_2)
    bool_0 = maybe_2.__eq__(maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_lazy()
    bool_1 = var_0.__eq__(var_0)
    var_3 = maybe_1.get_or_else(var_1)
    maybe_0.filter(var_3)
