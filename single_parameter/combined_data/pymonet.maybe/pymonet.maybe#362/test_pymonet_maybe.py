# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.filter(bool_1)
    bool_3 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_0.map(bool_3)
    var_2 = var_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.to_lazy()
    maybe_1.filter(var_4)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_4():
    str_0 = "-@^<c^1j0d_XJk?eebB"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)


def test_case_5():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    none_type_1 = None
    dict_0 = {}
    maybe_1 = module_0.Maybe(none_type_1, dict_0)
    maybe_1.bind(var_1)


def test_case_7():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_1, none_type_0)
    maybe_0.ap(bool_0)


def test_case_8():
    bytes_0 = b"\xe2\xb9\xfd"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_9():
    str_0 = ".*vLZ}H[7SP7>vf5R-"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)


def test_case_10():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(set_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(var_2, maybe_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    dict_0 = {bool_0: bool_0, bool_0: var_0}
    maybe_1 = module_0.Maybe(dict_0, var_0)
    var_1 = maybe_1.to_either()


def test_case_14():
    str_0 = "\t3"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(var_2)
    var_4 = var_0.to_box()


def test_case_15():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.filter(bool_1)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.bind(bool_0)
    var_4 = var_3.to_try()
    var_5 = maybe_0.filter(var_4)
    var_4.to_try()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_box()
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.bind(var_0)
    maybe_2 = maybe_1.to_validation()
    maybe_2.filter(var_0)


def test_case_18():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = var_2.to_either()
    maybe_0.filter(var_1)


def test_case_20():
    bytes_0 = b"b#\xd2x\xd3\xc6B\x93\x0f/>\xcf"
    bytes_1 = b"\xc1\x9f\xe3s/.\xd8\xe2\x97\xc6&\xbd\x01"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_1.map(var_0)
    var_2.to_try()


def test_case_21():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()


def test_case_22():
    bool_0 = False
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.filter(bool_1)
    bool_3 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_4 = maybe_1.__eq__(var_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.map(var_1)
    var_3 = var_0.to_box()
    var_4 = maybe_0.bind(bool_0)
    float_0 = -1301.2
    var_5 = var_4.to_try()
    bool_5 = True
    maybe_2 = module_0.Maybe(float_0, bool_5)
    maybe_1.filter(var_0)
