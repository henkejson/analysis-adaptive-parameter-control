# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_0.filter(bool_0)


def test_case_3():
    float_0 = -205.21177
    dict_0 = {}
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    var_1 = var_0.to_either()
    int_0 = -757
    tuple_0 = ()
    bool_2 = True
    maybe_2 = module_0.Maybe(tuple_0, bool_2)
    maybe_3 = module_0.Maybe(maybe_2, int_0)
    var_2 = maybe_3.to_box()
    var_3 = maybe_0.to_validation()
    bool_3 = maybe_3.__eq__(float_0)


def test_case_4():
    dict_0 = {}
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    var_1 = var_0.to_either()
    bool_3 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_2 = maybe_2.map(bool_1)
    maybe_3 = module_0.Maybe(bool_2, bool_1)
    var_3 = maybe_1.get_or_else(dict_0)
    var_4 = maybe_1.bind(bool_0)
    var_5 = var_4.to_lazy()
    maybe_0.filter(dict_0)


def test_case_5():
    str_0 = "!Po:b=@=wb\x0b9mAd<j"
    dict_0 = {str_0: str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.map(dict_0)


def test_case_6():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_1.filter(dict_0)
    tuple_0 = ()
    bool_0 = True
    var_2 = maybe_1.get_or_else(tuple_0)
    var_3 = maybe_1.bind(bool_0)
    var_4 = var_3.to_lazy()
    maybe_0.filter(tuple_0)


def test_case_7():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    none_type_1 = None
    maybe_3.bind(none_type_1)


def test_case_8():
    int_0 = 236
    bool_0 = False
    tuple_0 = (int_0, int_0, bool_0, int_0)
    set_0 = set()
    str_0 = "PT"
    tuple_1 = (str_0,)
    maybe_0 = module_0.Maybe(tuple_1, str_0)
    var_0 = maybe_0.map(set_0)
    var_1 = var_0.ap(tuple_0)
    str_1 = "\n        Two Validations are equals when values and errors lists are equal.\n        "
    maybe_1 = module_0.Maybe(str_1, str_1)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.map(var_2)
    var_2.get_or_else(maybe_1)


def test_case_9():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    maybe_0.ap(object_0)


def test_case_10():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    maybe_0.filter(dict_0)


def test_case_11():
    str_0 = "ImmutableList{}"
    int_0 = 1
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, int_0)
    var_0 = maybe_1.get_or_else(none_type_0)
    object_0 = module_1.object()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_0.get_or_else(var_0)
    var_0.to_either()


def test_case_12():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    var_1 = maybe_0.get_or_else(dict_0)
    maybe_0.filter(dict_0)


def test_case_13():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    var_1 = var_0.to_either()
    maybe_0.filter(dict_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_15():
    str_0 = "ImmutableList{}"
    int_0 = -2
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    maybe_2 = module_0.Maybe(str_0, int_0)
    var_0 = maybe_2.to_lazy()
    bool_3 = maybe_2.__eq__(maybe_2)


def test_case_16():
    float_0 = -205.21177
    dict_0 = {}
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = True
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.filter(dict_0)
    var_2 = var_1.to_either()
    tuple_0 = ()
    maybe_2 = module_0.Maybe(bool_1, float_0)
    maybe_3 = module_0.Maybe(tuple_0, var_0)
    var_3 = maybe_2.to_box()
    var_4 = var_0.to_validation()
    bool_3 = maybe_3.__eq__(bool_2)


def test_case_17():
    str_0 = "ImmutableList{}"
    int_0 = 1
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.filter(int_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    maybe_2 = module_0.Maybe(str_0, int_0)
    var_4 = maybe_2.get_or_else(none_type_0)
    bool_3 = maybe_2.__eq__(maybe_2)
    var_5 = var_1.get_or_else(var_4)
    var_6 = maybe_0.to_try()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_either()
    var_4 = var_0.to_try()
    var_4.to_either()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0.filter(var_0)


def test_case_20():
    dict_0 = {}
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.filter(dict_0)
    var_3 = var_2.to_either()
    int_0 = -757
    var_4 = var_2.ap(maybe_0)
    maybe_2 = module_0.Maybe(var_4, var_0)
    var_5 = maybe_2.map(int_0)
    bool_2 = True
    maybe_3 = module_0.Maybe(bool_2, var_0)
    var_6 = maybe_3.to_box()
    var_7 = var_0.to_validation()
    var_8 = var_4.to_lazy()
    var_9 = var_8.to_box()
    maybe_0.filter(none_type_0)


def test_case_21():
    float_0 = -205.2118
    dict_0 = {}
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_1.filter(dict_0)
    var_1 = maybe_1.filter(maybe_0)
    bool_2 = maybe_0.__eq__(var_1)
    tuple_0 = ()
    bool_3 = True
    maybe_2 = module_0.Maybe(tuple_0, bool_3)
    bool_4 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_4)
    var_2 = var_1.to_box()
    var_3 = maybe_2.to_validation()
    var_4 = var_2.to_lazy()
