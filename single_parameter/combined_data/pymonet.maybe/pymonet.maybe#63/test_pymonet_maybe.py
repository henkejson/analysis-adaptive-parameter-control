# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.filter(var_0)
    var_0.to_try()


def test_case_3():
    str_0 = "a6]"
    tuple_0 = (str_0, str_0)
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_2 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_try()
    var_4.to_try()


def test_case_4():
    bytes_0 = b"Ct\xff\x92.V\x90O\xdc\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_try()
    var_2 = var_0.map(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_0)


def test_case_5():
    complex_0 = 1126 - 2389j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(complex_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.ap(none_type_0)
    var_3 = maybe_1.bind(var_2)
    bool_2 = var_2.__eq__(maybe_1)
    var_4 = maybe_1.get_or_else(maybe_1)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_1.map(none_type_0)


def test_case_11():
    dict_0 = {}
    complex_0 = -161.89208 - 1287j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(dict_0)
    var_2 = var_1.map(var_0)
    var_3 = var_1.to_lazy()


def test_case_12():
    complex_0 = -1836.88 - 2876.15j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_13():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(maybe_0)


def test_case_14():
    bytes_0 = b"Ct\xff\x92.V\x90O\xdc\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_0.to_lazy()
    tuple_0 = (var_2, var_2, var_0)
    var_1.ap(tuple_0)


def test_case_16():
    bytes_0 = b"Ct\xff\x92.V\x90O\xdc\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_0)


def test_case_17():
    bytes_0 = b"\x8e\xf4\xb3w\x84\xcc%\xb0\xc0\x14Z7\xe6J"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    bytes_0 = b"Ct\xff\x92.V\x90O\xdc\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_0)


def test_case_19():
    bytes_0 = b"Gt\xff\x11.V\x90O\xdc\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.map(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = maybe_0.to_try()
    maybe_1.filter(maybe_0)


def test_case_20():
    str_0 = "\x0b.w"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(str_0)
    var_2.to_validation()


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = module_0.Maybe(var_0, var_1)
    var_3 = maybe_1.bind(var_2)
    bool_1 = var_2.__eq__(maybe_1)
    var_4 = maybe_1.get_or_else(var_1)
    var_5 = maybe_1.get_or_else(maybe_1)
