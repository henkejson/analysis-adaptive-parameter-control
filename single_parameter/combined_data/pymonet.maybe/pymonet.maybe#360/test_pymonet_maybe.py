# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_1.ap(bool_0)
    bool_1 = var_2.__eq__(maybe_0)
    var_3 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(bool_1)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.map(none_type_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    bool_3 = True
    maybe_3 = module_0.Maybe(none_type_0, bool_3)
    var_3 = maybe_1.to_try()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_1.to_either()
    var_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = var_1.ap(bool_0)
    var_4 = maybe_0.map(list_0)
    var_5 = var_1.to_either()
    var_6 = var_3.to_try()
    var_7 = var_2.get_or_else(var_1)
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(var_0)


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    tuple_0 = (bool_0, bool_0, bool_0)
    int_0 = 1
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_1.to_try()
    maybe_1.bind(tuple_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    maybe_1.ap(bool_0)


def test_case_8():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    var_1.to_try()


def test_case_10():
    bytes_0 = b"\x01"
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(bytes_0)


def test_case_11():
    int_0 = 510
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    str_0 = "1s71dbN\nm"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_2 = maybe_1.to_either()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_try()
    var_2 = var_1.map(var_0)
    var_2.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_either()
    var_1.to_either()


def test_case_14():
    none_type_0 = None
    int_0 = 4385
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_15():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_1.get_or_else(dict_0)


def test_case_16():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    bool_1 = bool_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(bool_1)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(bool_0)


def test_case_18():
    int_0 = 2203
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.to_try()
    bool_1 = False
    var_2 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_3 = var_2.to_box()
    maybe_2.filter(var_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = maybe_1.to_either()
    var_3.get_or_else(var_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.filter(bool_1)
    var_1 = var_0.map(none_type_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    none_type_1 = None
    maybe_3 = module_0.Maybe(none_type_1, var_1)
    var_2 = maybe_3.to_lazy()
    generic_0 = module_1.Generic()
    var_3 = maybe_3.to_lazy()
    bool_3 = maybe_0.__eq__(none_type_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    maybe_0.filter(bool_0)


def test_case_22():
    bytes_0 = b"0\xfe\x1b'\xfd,"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    var_1 = var_0.ap(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, var_1)
    var_2 = maybe_0.to_try()
    var_2.to_try()
