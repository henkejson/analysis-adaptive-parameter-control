# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "Z0o>LA'cv$4(Q"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_0.bind(var_1)
    var_3 = maybe_0.bind(bool_0)
    var_4 = maybe_0.map(var_1)


def test_case_3():
    none_type_0 = None
    float_0 = -2390.0
    dict_0 = {float_0: float_0, float_0: float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.map(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(none_type_0)


def test_case_5():
    str_0 = "Z0o>LA'cv$4(Q"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    var_2 = maybe_0.bind(bool_0)
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_3.ap(none_type_0)


def test_case_6():
    bytes_0 = b"\xa1\xdb\xc8T\xf0\xfa\xe3"
    set_0 = {bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    str_0 = "i=_Xm`[?KYEsd i_~I"
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.ap(set_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.map(maybe_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_2.filter(maybe_2)
    bool_2 = maybe_2.__eq__(maybe_2)
    var_2 = var_1.to_validation()


def test_case_8():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    none_type_0 = None
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(none_type_0)
    var_3 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_lazy()


def test_case_10():
    complex_0 = 246.923 - 1028.9j
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.ap(complex_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    dict_0 = {}
    var_0.filter(dict_0)


def test_case_12():
    int_0 = -1595
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_try()
    var_2.ap(bool_0)


def test_case_13():
    complex_0 = -282.74273 - 1593j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(complex_0)
    var_2 = var_1.to_try()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    complex_0 = 296.56 - 2640.6382j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.to_validation()
    set_0 = {complex_0}
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.to_lazy()


def test_case_17():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    float_0 = -1501.606
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    bool_1 = var_0.__eq__(list_0)


def test_case_19():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    set_0 = set()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.ap(bool_1)
    maybe_2 = module_0.Maybe(set_0, set_0)
    bool_2 = maybe_2.__eq__(maybe_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.to_validation()
    var_3 = maybe_1.bind(maybe_0)
    var_4 = var_3.filter(set_0)
    var_5 = var_3.map(var_2)
    maybe_3.map(var_0)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    set_0 = set()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.ap(bool_1)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    generic_0 = module_1.Generic()
    bool_2 = maybe_1.__eq__(generic_0)
    bool_3 = maybe_1.__eq__(set_0)
    maybe_3 = module_0.Maybe(none_type_0, bool_3)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.to_validation()
    maybe_4 = module_0.Maybe(maybe_1, bool_0)
    maybe_4.bind(maybe_1)


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    set_0 = set()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.ap(bool_1)
    maybe_2 = module_0.Maybe(set_0, set_0)
    bool_2 = maybe_2.__eq__(maybe_0)
    var_1 = maybe_1.to_box()
    bool_3 = True
    maybe_3 = module_0.Maybe(maybe_2, bool_3)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_3.bind(bool_2)
    var_4 = maybe_3.filter(bool_1)
    maybe_4 = module_0.Maybe(var_3, bool_2)
    var_5 = var_2.to_try()
    var_6 = maybe_3.to_either()
    bool_4 = maybe_4.__eq__(maybe_4)
    var_1.map(var_6)
