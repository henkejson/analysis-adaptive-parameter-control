# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.bind(bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -2768.249777
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    var_1 = maybe_0.map(none_type_1)
    var_2 = maybe_0.to_try()
    var_3 = var_1.bind(var_2)
    var_4 = var_3.to_try()
    bool_0 = var_4.__eq__(none_type_0)
    var_5 = var_3.to_box()
    var_6 = var_1.to_box()
    var_7 = var_6.to_lazy()
    bool_1 = var_1.__eq__(maybe_0)
    var_2.to_box()


def test_case_3():
    float_0 = -2768.249777
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    var_1 = maybe_0.map(none_type_1)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = var_0.to_validation()
    var_2.ap(var_1)


def test_case_4():
    tuple_0 = ()
    bool_0 = tuple_0.__eq__(tuple_0)
    tuple_1 = (tuple_0,)
    maybe_0 = module_0.Maybe(tuple_1, tuple_0)
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(var_0)


def test_case_6():
    complex_0 = 1677.047029 + 371j
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(bool_0)
    var_3 = var_1.bind(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_4 = maybe_1.ap(bool_0)
    maybe_2 = module_0.Maybe(complex_0, bool_0)
    maybe_3 = module_0.Maybe(var_4, var_2)
    var_5 = maybe_1.bind(var_4)
    bool_2 = var_4.__eq__(var_4)
    var_1.filter(complex_0)


def test_case_7():
    bytes_0 = b"\x80y\x05\x07+\x89t~4M\x16\x1c\xa0["
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.ap(bytes_0)


def test_case_8():
    int_0 = -314
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_9():
    bool_0 = False
    bool_1 = False
    str_0 = "BId}KZMFh\tN,p+"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.get_or_else(bool_0)


def test_case_10():
    tuple_0 = ()
    bytes_0 = b"\x08s\xe0\xd1\x8b\xa4O\xc27#l\x8e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.get_or_else(var_0)
    var_1.ap(tuple_0)


def test_case_11():
    bytes_0 = b"\xcf\xa7\xa9\x8b1\x18\xe0\x0f\xf1\xa2\xe6\x84\xd9\x9ar"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, var_2)
    var_3.to_try()


def test_case_12():
    str_0 = "C6dh.j\x0bAkzp96n"
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(var_3, none_type_0)
    var_5 = var_2.get_or_else(maybe_2)
    var_0.to_validation()


def test_case_13():
    float_0 = -2768.249777
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    var_1 = maybe_0.map(none_type_1)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_try()
    bool_0 = var_4.__eq__(none_type_0)
    var_5 = var_3.to_box()
    var_6 = var_1.to_box()
    bool_0.to_lazy()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    int_0 = 3311
    tuple_0 = (var_0, int_0, var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(bool_0)


def test_case_15():
    none_type_0 = None
    float_0 = -1332.068
    list_0 = [float_0, float_0, float_0, float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_16():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(set_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.bind(var_0)


def test_case_18():
    generic_0 = module_1.Generic()
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.ap(generic_0)


def test_case_19():
    complex_0 = -1542.6166 + 1829.2j
    list_0 = [complex_0]
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.filter(complex_0)
    maybe_1 = module_0.Maybe(list_0, complex_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_3 = var_1.to_box()
    var_4 = maybe_1.to_box()
    var_5 = var_3.to_lazy()
    bool_2 = var_0.__eq__(bool_1)
    var_3.to_box()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(maybe_0)
    bool_1 = var_1.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(none_type_0, var_2)
    var_3 = var_1.to_validation()
    var_3.filter(bool_2)
