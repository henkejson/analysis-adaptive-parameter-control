# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(maybe_0, var_0)


def test_case_4():
    str_0 = "3'4X|"
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(str_0)


def test_case_5():
    none_type_0 = None
    int_0 = -1757
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    float_0 = 6098.17626
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)


def test_case_7():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_0.bind(bool_0)


def test_case_8():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(maybe_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(bool_0)
    var_1.filter(var_0)


def test_case_11():
    float_0 = 160.434
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.get_or_else(var_0)
    var_1.to_try()


def test_case_12():
    bytes_0 = b"}jo d\x80\x87|L\xc3\xaf"
    str_0 = "\x0cLA^/qgr>'~JG26(wmuR"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.get_or_else(bytes_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(bool_2)
    var_3 = maybe_1.to_either()
    maybe_1.filter(var_1)


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.get_or_else(none_type_1)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_0.to_lazy()
    var_6 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(set_0, var_5)
    var_7 = var_5.to_box()
    var_8 = var_4.to_box()
    var_9 = maybe_1.to_lazy()
    tuple_0 = (var_6, var_5, var_8)
    maybe_2 = module_0.Maybe(none_type_0, tuple_0)
    bool_1 = var_8.__eq__(maybe_2)


def test_case_15():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(set_0, var_1)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    maybe_3 = module_0.Maybe(none_type_1, var_3)
    var_4 = var_3.map(maybe_2)
    var_5 = maybe_2.to_box()
    var_6 = maybe_2.to_lazy()
    var_6.to_lazy()


def test_case_16():
    float_0 = 339.958
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()


def test_case_17():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_18():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_try()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_22():
    bytes_0 = b"R<\xee8\x1ad\xdc\xc7\xaaS\x87b\xf2\x81\x96"
    bytes_0.to_either()


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_24():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    var_3 = var_0.to_lazy()
    var_4 = var_0.map(bool_1)
