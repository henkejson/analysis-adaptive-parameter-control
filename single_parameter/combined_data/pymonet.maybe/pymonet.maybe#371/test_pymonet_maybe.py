# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_1.Maybe(list_0, bool_1)
    var_0 = maybe_0.ap(list_0)
    maybe_1 = module_1.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = var_0.filter(bool_0)
    var_3 = var_2.get_or_else(var_0)
    bool_2 = var_0.__eq__(maybe_0)
    var_4 = var_3.bind(list_0)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    maybe_2 = module_1.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_2.__eq__(bool_0)
    var_0 = maybe_0.to_either()


def test_case_4():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.bind(bool_0)
    var_6 = var_2.ap(var_3)
    var_7 = var_1.to_box()
    var_8 = var_5.bind(var_2)
    var_9 = maybe_0.to_either()
    bool_1 = var_5.__eq__(var_5)
    var_10 = var_9.to_try()
    var_9.get_or_else(var_5)


def test_case_5():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_1.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(tuple_0)
    maybe_1 = module_1.Maybe(tuple_0, tuple_0)
    maybe_1.ap(maybe_1)


def test_case_6():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_1.Maybe(list_0, bool_1)
    maybe_1 = module_1.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(maybe_0)
    bool_2 = bool_0.__eq__(maybe_0)
    var_2 = var_1.bind(list_0)
    maybe_1.filter(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1.bind(none_type_0)


def test_case_8():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_1.Maybe(list_0, bool_1)
    maybe_1 = module_1.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(bool_0)


def test_case_9():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_1.Maybe(list_0, list_0)
    maybe_1 = module_1.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(maybe_0)
    maybe_1.filter(bool_0)


def test_case_10():
    float_0 = 318.942996
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    var_2.to_box()


def test_case_11():
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [list_0, bool_0]
    maybe_0 = module_1.Maybe(list_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    str_0 = "\n        :returns: Copy of self\n        :rtype: Left[A]\n        "
    bool_1 = False
    maybe_1 = module_1.Maybe(str_0, bool_1)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_either()
    var_5.bind(var_1)


def test_case_12():
    int_0 = 804
    maybe_0 = module_1.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_validation()
    bool_0 = True
    var_4 = maybe_0.to_lazy()
    maybe_1 = module_1.Maybe(var_2, bool_0)
    var_5 = var_2.to_either()
    var_6 = maybe_1.to_lazy()


def test_case_13():
    bool_0 = True
    bool_1 = False
    str_0 = ""
    set_0 = {bool_1, bool_1, bool_1, str_0}
    maybe_0 = module_1.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(bool_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_1.Maybe(var_0, bool_1)
    maybe_1.filter(var_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_16():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_1.Maybe(list_0, bool_1)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.filter(bool_0)
    var_4 = var_0.get_or_else(var_2)
    var_5 = maybe_0.get_or_else(var_0)
    bool_2 = var_5.to_lazy()
    var_6 = maybe_0.to_either()
    var_7 = var_6.bind(var_2)
    var_8 = var_2.to_try()
    var_9 = var_1.to_validation()
    var_10 = var_8.get_or_else(maybe_0)
    var_11 = var_0.ap(maybe_0)
    bool_3 = var_1.__eq__(var_6)
    var_12 = var_3.to_either()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_3.to_validation()
    bool_1 = False
    maybe_1 = module_1.Maybe(none_type_0, bool_1)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_1.to_lazy()
    var_7 = var_5.to_validation()
    bool_2 = var_7.__eq__(bool_1)
    var_7.filter(var_5)


def test_case_19():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.bind(bool_0)
    var_6 = var_2.ap(var_3)
    var_7 = var_1.to_box()
    maybe_1 = module_1.Maybe(var_2, var_4)
    var_8 = var_1.get_or_else(var_6)
    bool_1 = maybe_1.__eq__(var_1)
    var_2.bind(var_7)


def test_case_20():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    list_0 = [bool_0]
    bool_2 = True
    maybe_1 = module_1.Maybe(list_0, bool_2)
    var_1 = maybe_1.ap(list_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_1.filter(bool_0)
    var_4 = var_3.get_or_else(var_1)
    bool_3 = var_1.__eq__(maybe_1)
    var_5 = var_4.bind(list_0)
    float_0 = -895.607
    var_6 = var_1.get_or_else(float_0)
    var_7 = maybe_0.to_box()
    var_8 = var_5.to_try()
    var_9 = var_3.to_validation()
    var_7.get_or_else(none_type_0)
