# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -668.6884
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bytes_0 = b"\xbc\xfe\x03\xed\x19\xb9"
    str_0 = "^\tmRU1kz>e`cMLWs"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    bool_1 = var_0.__eq__(var_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_1.to_lazy()
    var_5 = var_3.bind(str_0)
    var_6 = var_3.to_lazy()
    bool_2 = var_2.__eq__(str_0)
    bool_3 = False
    var_7 = var_0.filter(var_3)
    var_8 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bool_3, bool_3)
    maybe_1.filter(var_6)


def test_case_3():
    float_0 = 932.82
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    int_0 = -782
    none_type_0 = None
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_2.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_2.filter(var_0)
    maybe_1.filter(var_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_box()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_1, maybe_0)
    list_0 = [maybe_1, bool_1, maybe_1, bool_0]
    var_1 = maybe_1.bind(list_0)
    var_2 = maybe_0.filter(var_0)


def test_case_7():
    str_0 = "aV},u;5Zv>"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_8():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_1, maybe_0)
    list_0 = [maybe_1, bool_1, maybe_1, bool_0]
    var_2 = var_1.to_box()
    var_3 = maybe_1.bind(list_0)
    var_4 = maybe_0.filter(var_1)


def test_case_9():
    int_0 = 169
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.get_or_else(int_0)
    var_0.map(int_0)


def test_case_10():
    float_0 = -668.7381
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(var_0)


def test_case_11():
    int_0 = 2297
    set_0 = {int_0, int_0}
    int_1 = 2458
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1, int_1: int_1}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.map(set_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_1.to_lazy()


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(none_type_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_1.to_box()
    var_4 = var_2.to_either()
    var_5 = var_0.to_try()
    var_4.get_or_else(var_3)


def test_case_15():
    none_type_0 = None
    str_0 = "*dL(P\\X:A\\f;F^"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.get_or_else(none_type_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_either()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_1)
    var_3 = var_2.to_lazy()
    var_4 = var_1.to_validation()
    var_4.bind(bool_0)


def test_case_18():
    bool_0 = True
    int_0 = -782
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_1.filter(int_0)
    maybe_0.filter(var_0)


def test_case_19():
    bytes_0 = b"\xbc\xfe\x03\xed\x19\xb9"
    str_0 = "^\tmRU1kz>e`cMLWs"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.get_or_else(var_2)
    bool_1 = var_0.__eq__(var_0)
    var_4 = var_1.to_validation()
    bool_2 = var_0.__eq__(var_4)
    var_5 = maybe_0.ap(bool_0)
    var_6 = var_0.to_either()
    var_7 = var_1.bind(var_4)
    var_8 = var_1.to_try()
    var_9 = var_0.to_lazy()
    var_10 = var_0.filter(var_8)
    var_11 = var_9.ap(bytes_0)
    bool_3 = var_6.__eq__(var_11)
    bool_4 = False
    var_12 = var_9.ap(bool_4)
    bool_5 = False
    maybe_1 = module_0.Maybe(bool_1, bool_5)
    var_13 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(var_5, var_5)
    var_14 = var_7.ap(var_2)
    var_15 = maybe_1.to_validation()
    var_16 = var_13.to_either()


def test_case_20():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_box()
    maybe_0.ap(maybe_0)


def test_case_21():
    bytes_0 = b"\xbc\xfe\x03\xed\x19\xb9"
    str_0 = "^\tmRU1kz>e`cMLWs"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.get_or_else(var_2)
    bool_1 = var_0.__eq__(var_0)
    var_4 = module_0.Maybe(var_2, var_2)
    bool_2 = var_0.__eq__(var_4)
    var_5 = var_2.ap(bool_2)
    var_6 = var_3.to_box()
    var_7 = maybe_0.to_lazy()
    var_8 = var_0.filter(var_1)
    var_9 = var_3.to_lazy()
    var_10 = var_4.to_either()
    var_11 = maybe_0.bind(var_4)
    var_12 = var_5.to_try()
    var_13 = var_0.to_lazy()
    var_14 = var_4.to_box()
    var_15 = var_14.to_lazy()
    var_16 = var_4.to_either()
    var_17 = var_15.bind(var_5)
    var_18 = var_14.to_try()
    var_19 = var_4.to_lazy()
    var_20 = var_5.filter(var_16)
    var_21 = var_6.to_either()
    bool_3 = False
    maybe_1 = module_0.Maybe(var_9, bool_3)
    var_22 = var_0.get_or_else(var_21)
    var_23 = var_4.filter(var_6)
    var_14.get_or_else(bool_1)
