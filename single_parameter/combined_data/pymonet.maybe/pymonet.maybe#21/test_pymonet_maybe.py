# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = -3052
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    generic_0 = module_1.Generic()
    bytes_0 = b"\x94\xa4\\\xe62\x8bBA"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.filter(generic_0)
    bool_0 = var_0.__eq__(var_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, var_2)
    var_4 = maybe_1.ap(var_1)
    var_5 = maybe_0.to_validation()
    var_6 = var_3.map(var_0)
    var_7 = maybe_0.to_try()
    var_8 = var_6.filter(var_5)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"A)\xb1r9\x8d h8\x93cBj\x89\xc6\xa4\xe5"
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_1.to_box()
    none_type_1 = None
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = var_1.map(none_type_1)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_1.filter(none_type_0)
    var_2.filter(none_type_0)


def test_case_4():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = var_0.to_try()
    var_1.ap(var_1)


def test_case_5():
    none_type_0 = None
    float_0 = 4632.4
    maybe_0 = module_0.Maybe(float_0, float_0)
    set_0 = {none_type_0}
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_0.ap(set_0)
    var_5 = var_4.ap(var_0)
    var_6 = var_4.filter(var_4)
    var_7 = maybe_0.filter(var_4)
    var_8 = var_7.to_try()
    var_9 = maybe_0.bind(var_8)
    var_1.to_box()


def test_case_6():
    int_0 = -1502
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(int_0)


def test_case_7():
    bool_0 = True
    list_0 = []
    str_0 = '^9k"g>pZ(G'
    bytes_0 = b"\xb1\xb8\xc2n\x92\x88\x1f\xa6y\x1cZ`\xef\x12\xd0\x82\x18"
    list_1 = [bytes_0, bytes_0, bytes_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_1, bool_1)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.ap(list_0)
    var_2 = var_1.ap(bool_0)
    var_3 = var_2.to_validation()


def test_case_8():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    int_0 = -758
    maybe_0.ap(int_0)


def test_case_9():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(generic_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_10():
    str_0 = "0Im-K\\O#0P_"
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(str_0)
    var_1.to_either()


def test_case_11():
    float_0 = 2532.9108
    list_0 = [float_0, float_0, float_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_box()


def test_case_12():
    float_0 = -442.0
    bytes_0 = b'\xce~\xebv\n\xfbbX\xc7\r\x08A\x9b\xba\xd3"\x08\xe9L'
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_2.to_try()
    var_3.get_or_else(float_0)


def test_case_13():
    float_0 = 1780.284335
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"A)\xb1r9\x8d h8\x93cBj\x89\xc6\xa4\xe5"
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_1.to_box()
    var_3 = module_0.Maybe(var_1, var_2)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_1.filter(none_type_0)
    var_2.filter(none_type_0)


def test_case_15():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_16():
    object_0 = module_2.object()
    int_0 = 6550
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.to_lazy()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_try()
    var_1.map(maybe_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_20():
    float_0 = 3240.2
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    var_2.bind(float_0)


def test_case_21():
    bytes_0 = b"\xa7\xfe4e#F\x14\xcc\x18si89(\xca"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.filter(bytes_0)
    var_4 = var_3.get_or_else(bool_0)
    var_4.to_either()


def test_case_22():
    generic_0 = module_1.Generic()
    bytes_0 = b"\x94\xa4\\\xe62\x8bB."
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_validation()
    bool_0 = maybe_0.__eq__(var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.filter(generic_0)
    bool_1 = var_0.__eq__(var_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, var_2)
    var_4 = maybe_1.ap(bool_0)
    var_5 = var_4.ap(var_2)
    var_6 = maybe_0.to_validation()
    var_7 = maybe_0.ap(var_6)
    var_1.to_validation()


def test_case_23():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.map(bool_0)


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_try()
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_2.__eq__(maybe_2)
    var_1 = maybe_2.to_lazy()
    var_1.filter(var_1)
