# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 92
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()


def test_case_3():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    bool_0 = maybe_0.__eq__(list_0)
    list_1 = [list_0]
    maybe_1 = module_0.Maybe(list_1, list_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_try()
    var_0.to_either()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bool_1, maybe_0)
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_try()
    bool_2 = var_3.__eq__(var_1)
    var_5 = var_1.to_box()
    var_6 = var_2.to_box()
    var_7 = var_0.filter(var_3)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.bind(bool_0)
    var_3 = var_0.filter(var_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.to_either()
    bool_1 = var_5.__eq__(maybe_0)
    var_6 = var_4.to_either()


def test_case_7():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.bind(tuple_0)


def test_case_8():
    complex_0 = 5197.923 + 213j
    list_0 = [complex_0, complex_0]
    tuple_0 = ()
    list_1 = [list_0, tuple_0, tuple_0, list_0]
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.ap(list_1)


def test_case_9():
    int_0 = -1934
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = False
    str_0 = ""
    maybe_0 = module_0.Maybe(bool_0, str_0)
    maybe_0.filter(bool_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(var_0)
    var_4 = var_3.map(bool_1)
    var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_14():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    var_4 = maybe_1.to_try()
    bool_3 = var_0.__eq__(maybe_0)
    bool_4 = var_2.__eq__(var_1)
    var_5 = var_2.to_box()
    var_6 = var_1.to_box()
    var_3.filter(maybe_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_box()
    var_3.to_box()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_0.to_validation()
    maybe_0.bind(none_type_0)


def test_case_20():
    float_0 = -90.2225
    bool_0 = False
    str_0 = "mz"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    var_1 = maybe_0.ap(float_0)
    var_2 = maybe_0.map(var_1)
    var_3 = var_2.ap(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(var_2)
    var_4 = maybe_0.filter(bool_0)
    var_5 = var_4.to_box()
    var_6 = var_4.map(float_0)
    var_7 = maybe_0.ap(bool_0)
    var_8 = var_4.to_either()
    var_9 = var_7.filter(var_3)
    var_10 = var_3.to_try()
