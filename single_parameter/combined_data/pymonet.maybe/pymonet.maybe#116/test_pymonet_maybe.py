# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    float_0 = 2311.1726
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_0.map(none_type_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    bool_2 = var_1.__eq__(list_0)
    var_3 = maybe_1.get_or_else(none_type_0)
    var_4 = maybe_1.get_or_else(list_0)
    bool_3 = var_1.__eq__(maybe_1)
    maybe_1.filter(var_3)


def test_case_3():
    str_0 = "A"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.ap(bool_1)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    object_0 = module_1.object()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(object_0, bool_1)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.to_box()
    var_6 = maybe_1.to_validation()
    maybe_1.map(var_5)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.filter(none_type_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(list_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    maybe_1.bind(none_type_0)


def test_case_7():
    bytes_0 = b"8\x9a:\xe6\x81\x1d\xda"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.ap(none_type_1)
    var_1 = var_0.to_validation()
    bool_1 = var_1.__eq__(maybe_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.filter(list_0)


def test_case_9():
    str_0 = "DcXp=-$"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.ap(none_type_0)


def test_case_10():
    int_0 = -1970
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.get_or_else(int_0)


def test_case_11():
    bool_0 = False
    list_0 = []
    bool_1 = True
    str_0 = "9%a2a8Z9TLc\n\r3ovIAq"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(bool_1)
    var_3 = var_2.map(list_0)
    var_4 = var_3.map(bool_0)
    var_5 = var_4.to_try()
    float_0 = 3045.0686
    tuple_0 = (float_0,)
    bool_2 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_2)
    var_6 = maybe_1.to_validation()
    var_7 = var_6.to_either()
    var_8 = var_7.ap(var_5)
    var_8.to_try()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    var_1.get_or_else(none_type_0)


def test_case_13():
    bytes_0 = b"\x06\x9c\xe5Xw\xb8"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.to_validation()
    bool_2 = maybe_0.__eq__(var_2)
    var_6 = var_4.to_box()
    bool_3 = var_4.__eq__(var_6)
    var_7 = var_5.to_either()
    var_8 = var_0.ap(var_3)
    var_9 = var_8.map(var_1)


def test_case_14():
    str_0 = "?_Qpw"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_try()
    var_0.filter(var_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    int_0 = -93
    int_1 = 2864
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(int_0)


def test_case_17():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(list_0)
    var_5 = var_4.to_box()
    bool_1 = var_2.__eq__(none_type_0)
    var_6 = maybe_0.to_either()
    var_7 = var_3.map(bool_1)


def test_case_18():
    bytes_0 = b"\x06\x9c\xe5Xw\xb8"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_box()
    var_5 = var_0.filter(var_2)
    bool_2 = maybe_0.__eq__(var_2)
    var_4.to_box()
