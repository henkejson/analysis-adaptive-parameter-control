# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\x7f+^\xfb\x04"
    none_type_0 = None
    int_0 = 0
    dict_0 = {int_0: bytes_0, none_type_0: bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    bool_0 = True
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.get_or_else(bytes_0)
    var_5.to_try()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.ap(maybe_0)


def test_case_4():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_2 = var_0.bind(var_0)
    maybe_1.filter(var_2)


def test_case_5():
    int_0 = 2095
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_1.bind(maybe_1)


def test_case_6():
    int_0 = 2095
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    int_1 = 403
    bool_1 = True
    maybe_1 = module_0.Maybe(int_1, bool_1)
    list_0 = [int_1, int_1]
    var_1 = maybe_1.ap(bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(maybe_1, int_1)
    var_2 = maybe_1.ap(bool_1)
    var_3 = maybe_2.ap(list_0)
    var_4 = maybe_1.get_or_else(var_3)
    maybe_3 = module_0.Maybe(maybe_1, bool_1)
    bool_3 = var_3.__eq__(maybe_3)


def test_case_7():
    int_0 = -1003
    list_0 = [int_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_2.get_or_else(list_0)


def test_case_8():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(none_type_0)


def test_case_9():
    bytes_0 = b"\xa9sJ@8Ci\x16^0\xe6\xdd"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.ap(bytes_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(var_0, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.to_validation()
    var_3 = maybe_1.to_either()
    var_4 = var_1.to_box()


def test_case_11():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_12():
    bytes_0 = b"\xc2]\x96,\xbd\x10\xe8k{\xfa\xbb\x9b\xd5\x906\xba="
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(none_type_0)
    var_1.to_validation()


def test_case_15():
    bytes_0 = b"\x90\xc6V\xc7Y\xca\xf3\x11\xea"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    list_0 = []
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(list_0)


def test_case_17():
    complex_0 = -409 - 1115.037j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_2 = var_0.to_box()
    var_2.filter(var_1)


def test_case_18():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.get_or_else(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_3 = var_0.bind(var_0)
    bool_1 = var_0.__eq__(var_1)
    maybe_1.filter(var_3)


def test_case_19():
    complex_0 = 3110.72 + 2935.0465j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_try()
    maybe_1.filter(none_type_0)
