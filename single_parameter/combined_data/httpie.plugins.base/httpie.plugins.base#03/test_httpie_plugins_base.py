# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    transport_plugin_0 = module_0.TransportPlugin()


def test_case_1():
    dict_0 = {}
    auth_plugin_0 = module_0.AuthPlugin(**dict_0)
    auth_plugin_0.get_auth()


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    str_0 = "WQJ\\|D+l&\\\rd"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)


def test_case_4():
    bytes_0 = b"\x99_\x02\x0b\xa4Pb\x06\xb3\xa4-"
    str_0 = "WQJ\\|D+l&\\\rd"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    converter_plugin_0.convert(bytes_0)


def test_case_5():
    module_0.FormatterPlugin()


def test_case_6():
    str_0 = 'LkAt_"r4 1'
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    str_1 = "format_options"
    str_2 = "B[ VJT>!nI"
    str_3 = "value"
    dict_0 = {str_1: str_2, str_3: str_3}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_4 = formatter_plugin_0.format_headers(converter_plugin_0)
    transport_plugin_0 = module_0.TransportPlugin()
    str_5 = "usage"
    str_6 = formatter_plugin_0.format_body(transport_plugin_0, str_5)
    str_7 = "EN\\OV)y/C*j&>)>_b"
    none_type_0 = None
    converter_plugin_1 = module_0.ConverterPlugin(none_type_0)
    converter_plugin_2 = module_0.ConverterPlugin(str_7)
    module_0.FormatterPlugin()


def test_case_7():
    str_0 = 'LkAt_"r4 1'
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    str_1 = "format_options"
    str_2 = "B[ VJT>!nI"
    str_3 = "value"
    dict_0 = {str_1: str_2, str_3: str_3}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    transport_plugin_0 = module_0.TransportPlugin()
    str_4 = "usage"
    str_5 = formatter_plugin_0.format_body(transport_plugin_0, str_4)
    str_6 = "EN\\OV)y/C*j&>)>_b"
    none_type_0 = None
    converter_plugin_1 = module_0.ConverterPlugin(none_type_0)
    converter_plugin_2 = module_0.ConverterPlugin(str_6)
    str_7 = ">Xj%Fx6W|/$LKQ|=Q"
    str_8 = formatter_plugin_0.format_metadata(str_7)
    module_0.FormatterPlugin()
