# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    bit_xor_0 = module_0.BitXor()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bit_xor_0
    )


def test_case_1():
    bytes_0 = b"\xce|\xa5\x83\x8d\x8e\x8a\xfa\x93\xfc\xb9D\xd6\x08\x0eI\x04\x90\xca"
    list_0 = [bytes_0, bytes_0]
    lambda_0 = module_0.Lambda(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        lambda_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(lambda_0)


def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    lambda_0 = module_0.Lambda(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        lambda_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(lambda_0)
