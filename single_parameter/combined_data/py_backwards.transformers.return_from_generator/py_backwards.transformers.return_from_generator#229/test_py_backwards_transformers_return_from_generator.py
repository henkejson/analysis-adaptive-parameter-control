# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        none_type_0
    )


def test_case_1():
    mod_0 = module_1.Mod()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(mod_0)
    var_0 = module_2.dump(mod_0)
    function_def_0 = module_1.FunctionDef(*var_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    mod_0 = module_1.Mod()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(mod_0)
    var_0 = module_2.dump(mod_0)
    function_def_0 = module_2.parse(var_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    lt_0 = module_1.Lt()
    var_0 = module_2.fix_missing_locations(lt_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(var_0)
    var_1 = module_2.iter_fields(var_0)
    return_from_generator_transformer_1 = module_0.ReturnFromGeneratorTransformer(
        return_from_generator_transformer_0
    )
    list_0 = [var_0, var_0, var_1, return_from_generator_transformer_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_2 = module_0.ReturnFromGeneratorTransformer(var_0)
