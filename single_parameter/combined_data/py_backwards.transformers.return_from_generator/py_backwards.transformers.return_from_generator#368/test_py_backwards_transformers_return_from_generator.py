# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    pow_0 = module_0.Pow()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(pow_0)


def test_case_1():
    bytes_0 = b"\xf0\x84\xdb\t\xf4\x0b\xc2k\xeak\xd5RFgsS"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [bytes_0, bytes_0, bytes_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [bytes_0, bytes_0, bytes_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    bytes_0 = b"}\xff"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    str_0 = "parent"
    var_0 = module_2.parse(str_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    module_0.FunctionDef(**var_0)
