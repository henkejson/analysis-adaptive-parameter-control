# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    type_ignore_0 = module_0.TypeIgnore()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        type_ignore_0
    )


def test_case_1():
    str_0 = "1d)*L{.0?taW,E]*"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    str_0 = ""
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    str_0 = "HTTPSHandler"
    break_0 = module_0.Break()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        break_0
    )
    var_0 = module_2.parse(str_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    list_0 = [break_0, str_0, str_0, break_0]
    function_def_1 = module_0.FunctionDef(*list_0)
    function_def_2 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_1
    )
