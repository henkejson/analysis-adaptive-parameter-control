# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    dict_0 = {}
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        dict_0
    )


def test_case_1():
    bytes_0 = b"\xcd=\x03\xb8\x94\xc7\xbd\xceQ\xf6\x82d%\x08\xa5~\xc6"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [return_from_generator_transformer_0, bytes_0, bytes_0, bytes_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [return_from_generator_transformer_0, bytes_0, bytes_0, bytes_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    str_0 = "HTTPBasicAuthHandler"
    bytes_0 = b"g\xe0"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )
    var_0 = module_2.parse(str_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    list_0 = [bytes_0, return_from_generator_transformer_0, bytes_0, bytes_0, bytes_0]
    function_def_1 = module_1.FunctionDef(*list_0)
    function_def_2 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_1
    )
    floor_div_0 = module_1.FloorDiv()
    var_1 = return_from_generator_transformer_0.visit(function_def_2)
    function_def_3 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_2
    )
