# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    str_0 = "%"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(timer_0)


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_0.__exit__()


def test_case_4():
    str_0 = "Timer is running. Use .stop() to stop it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__eq__(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0.clear()


def test_case_5():
    str_0 = ""
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(timer_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    int_0 = 2751
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    var_0.__delitem__(int_0)


def test_case_7():
    str_0 = "%"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_2.start()


def test_case_8():
    str_0 = "%"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = None
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(str_0, timer_0, str_0)
    var_1 = timer_1.__call__(none_type_0)
    var_1.__call__(str_0)
