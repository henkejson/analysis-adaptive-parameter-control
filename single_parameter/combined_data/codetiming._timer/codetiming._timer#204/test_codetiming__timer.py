# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    str_0 = ".[TVMYnmJY/S.pp"
    timer_0 = module_0.Timer(str_0, logger=str_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_4():
    context_decorator_0 = module_1.ContextDecorator()
    bool_0 = True
    timer_0 = module_0.Timer(text=context_decorator_0, initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_3 = timer_2.__enter__()
    timer_4 = timer_0.__enter__()
    list_0 = [timer_0, timer_error_0]
    none_type_1 = timer_0.__exit__()
    timer_error_1 = module_0.TimerError(*list_0)
    var_0 = timer_4.__repr__()
    var_0.__or__(none_type_1)


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_3 = timer_2.__enter__()
    timer_4 = timer_0.__enter__()
    list_0 = [timer_0, timer_error_0]
    none_type_1 = timer_0.__exit__()
    timer_error_1 = module_0.TimerError(*list_0)
    float_0 = timer_2.stop()
    var_0 = timer_4.__repr__()
    none_type_2 = timer_4.start()
    var_0.__or__(none_type_1)


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    str_0 = "jf;~LT@s>"
    timer_2 = module_0.Timer(str_0, initial_text=float_0)
    timer_3 = timer_2.__enter__()
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    list_0 = [timer_0, var_0]
    module_0.TimerError(*list_0, **var_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_error_0 = module_0.TimerError()
    list_0 = [timer_0, timer_error_0, timer_0]
    str_0 = "jf;~LT@s>"
    timer_2 = module_0.Timer(str_0, initial_text=float_0)
    timer_3 = timer_2.__enter__()
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_2.__exit__(*list_0)
    none_type_1 = timer_2.__eq__(timer_3)
    var_0 = timer_0.__repr__()
    list_1 = [timer_0, timer_error_0]
    module_0.TimerError(*list_1, **var_0)


def test_case_9():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__call__(var_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    str_0 = "jf;~LT@s>"
    timer_2 = module_0.Timer(str_0, initial_text=var_0)
    timer_2.__enter__()


def test_case_10():
    context_decorator_0 = module_1.ContextDecorator()
    bool_0 = True
    timer_0 = module_0.Timer(text=context_decorator_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
