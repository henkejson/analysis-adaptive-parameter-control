# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = '`bv"z\r'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.__exit__()


def test_case_3():
    str_0 = '`bv"n\r'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    str_0 = '`bv"z'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_1.__enter__()


def test_case_5():
    str_0 = '`bv"z\r'
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    complex_0 = 302.6 + 647.62717j
    float_0 = timer_0.stop()
    var_0 = timer_1.__call__(timer_1)
    var_1 = var_0.__call__(complex_0)
    var_1.__getitem__(float_0)


def test_case_6():
    str_0 = '`bv"z\r'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    bool_0 = True
    timer_2 = module_0.Timer(text=timer_0, initial_text=bool_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_3.stop()


def test_case_7():
    str_0 = '`bv"z\r'
    tuple_0 = ()
    timer_0 = module_0.Timer(text=str_0, logger=tuple_0)
    timer_1 = timer_0.__enter__()
    complex_0 = 302.6 + 647.62717j
    list_0 = [timer_0, complex_0]
    timer_error_0 = module_0.TimerError(*list_0)
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_8():
    str_0 = '`bv"z\r'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(str_0, initial_text=timer_1)
    timer_3 = timer_2.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
