# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    list_0 = [timer_0, timer_0, timer_0, timer_0]
    timer_0.__exit__(*list_0)


def test_case_4():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__enter__()
    var_1 = var_0.__eq__(timer_0)
    var_0.__enter__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_6():
    user_dict_0 = module_1.UserDict()
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    var_0 = user_dict_0.items()
    str_0 = "gL J%"
    var_1 = user_dict_0.__iter__()
    timer_1 = module_0.Timer(user_dict_0, initial_text=str_0)
    timer_2 = timer_1.__enter__()
    list_0 = [user_dict_0, none_type_0, timer_0, str_0]
    none_type_1 = timer_1.__exit__(*list_0)
    timer_3 = timer_0.__enter__()
    user_dict_0.popitem()


def test_case_7():
    user_dict_0 = module_1.UserDict()
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    var_0 = user_dict_0.items()
    str_0 = "gL J%"
    var_1 = user_dict_0.__iter__()
    timer_1 = module_0.Timer(user_dict_0, initial_text=str_0)
    timer_2 = timer_1.__enter__()
    list_0 = user_dict_0.__len__()
    timer_1.__exit__(*list_0)


def test_case_8():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.items()
    var_1 = user_dict_0.__iter__()
    timer_0 = module_0.Timer(user_dict_0, initial_text=var_1)
    timer_1 = timer_0.__enter__()
    bool_0 = True
    none_type_0 = timer_0.__exit__(*var_1)
    var_2 = user_dict_0.setdefault(bool_0)
    timer_2 = timer_1.__enter__()
    var_3 = user_dict_0.popitem()
    var_0.popitem()


def test_case_9():
    user_dict_0 = module_1.UserDict()
    str_0 = "T!Q(9z&_)UI7<"
    str_1 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    dict_0 = {str_0: user_dict_0, str_1: str_1}
    var_0 = user_dict_0.update(**dict_0)
    var_1 = user_dict_0.items()
    var_2 = user_dict_0.__iter__()
    timer_0 = module_0.Timer(user_dict_0, initial_text=var_2)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__(*var_2)


def test_case_10():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.items()
    var_1 = var_0.__iter__()
    timer_0 = module_0.Timer(var_0, var_1, logger=var_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__(*var_0)
    var_1.__enter__()
