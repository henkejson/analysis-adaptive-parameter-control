# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    complex_0 = -109.5735 - 1944.77j
    timer_0 = module_0.Timer(initial_text=complex_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_2 = timer_0.__enter__()
    none_type_1 = None
    var_0 = timer_0.__eq__(none_type_1)
    var_1 = timer_1.__eq__(none_type_1)
    var_1.stop()


def test_case_5():
    complex_0 = -109.5735 - 1944.77j
    none_type_0 = None
    timer_0 = module_0.Timer(complex_0, initial_text=complex_0)
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_2 = timer_1.start()
    float_0 = timer_1.stop()
    var_0 = timer_0.__eq__(none_type_0)
    timer_2 = module_0.Timer(none_type_0)
    var_0.__setitem__(var_0, var_0)


def test_case_6():
    complex_0 = -109.5735 - 1944.77j
    timer_0 = module_0.Timer(complex_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    float_0 = timer_1.stop()
    none_type_1 = None
    timer_2 = module_0.Timer(none_type_0)
    timer_2.__exit__(*none_type_1)


def test_case_8():
    int_0 = 1247
    str_0 = "#mR=X`DG6p\tT*gt"
    str_1 = "^@V^M"
    timer_0 = module_0.Timer(text=str_1, initial_text=str_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__eq__(int_0)
    timer_0.__enter__()
