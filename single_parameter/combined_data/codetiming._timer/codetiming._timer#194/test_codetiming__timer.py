# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__call__(timer_0)
    float_0 = timer_1.__call__(timer_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    str_0 = "LjbG5VtCeo`3C\n\x0b"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = None
    timer_1 = timer_0.__enter__()
    user_dict_0 = module_1.UserDict()
    float_0 = timer_0.stop()
    var_0 = user_dict_0.__contains__(none_type_0)
    var_0.__getitem__(str_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, none_type_0, float_arg_0, none_type_0)
    none_type_1 = timer_0.start()


def test_case_9():
    str_0 = "K\n\tgsa\x0c]^ZXev"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__iter__()
    timer_error_0 = module_0.TimerError()
    var_2 = var_1.__eq__(str_0)
    timer_0.__enter__()


def test_case_10():
    complex_0 = -156.74901915336864 + 306.70924483019365j
    complex_1 = -156.74901915336864 + 313j
    str_0 = ":+&b4Y:w*9rE"
    timer_0 = module_0.Timer(str_0, initial_text=complex_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    var_0 = module_2.dataclass(eq=none_type_1, frozen=complex_1, kw_only=none_type_1)
    var_0.__exit__()


def test_case_11():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_1]
    none_type_2 = timer_0.__exit__(*list_0)
    var_0 = none_type_2.__eq__(none_type_2)
    var_0.values()
