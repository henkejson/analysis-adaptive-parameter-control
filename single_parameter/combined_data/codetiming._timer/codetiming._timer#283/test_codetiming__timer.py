# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    list_0 = []
    float_arg_0 = module_0.FloatArg(*list_0)
    str_0 = "-NC$!\x0b"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    str_1 = "3"
    dict_0 = {str_0: none_type_1, str_0: none_type_1, str_1: none_type_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0)
    timer_2 = timer_1.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_2.__exit__()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_7():
    str_0 = "W"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    list_0 = [none_type_0]
    none_type_1 = timer_0.__exit__(*list_0)
    none_type_2 = None
    var_0 = module_2.dataclass(slots=none_type_2)
    timer_0.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = None
    timer_1 = module_0.Timer(initial_text=none_type_1, logger=none_type_0)
    none_type_2 = timer_1.start()
    list_0 = [none_type_0]
    none_type_3 = timer_1.__exit__(*list_0)
    var_0 = timer_1.__repr__()
    none_type_4 = None
    var_0.__setitem__(timer_1, none_type_4)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    int_0 = 1075
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(timer_error_0, initial_text=timer_error_0, logger=int_0)
    timer_1.start()
