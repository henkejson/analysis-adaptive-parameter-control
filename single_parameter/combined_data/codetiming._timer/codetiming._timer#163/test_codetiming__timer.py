# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_6():
    bytes_0 = b"\x1aX\xce\x9d\xfc"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = module_0.Timer(text=bytes_0, logger=none_type_0)
    none_type_1 = timer_1.start()
    var_0 = timer_1.__eq__(bytes_0)
    var_1 = var_0.__eq__(timer_1)
    var_2 = timer_1.__eq__(none_type_1)
    var_2.copy()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_1)
    timer_1 = timer_0.__enter__()
    list_0 = []
    none_type_2 = timer_1.__exit__(*list_0)
    none_type_3 = timer_1.start()
    var_0 = timer_0.__eq__(timer_0)
    var_1 = var_0.__eq__(timer_1)
    var_2 = timer_1.__eq__(var_1)
    var_1.copy()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    var_0 = module_1.field(hash=timer_error_0)
    timer_0 = module_0.Timer(initial_text=var_0)
    none_type_0 = timer_0.start()


def test_case_9():
    str_0 = "J("
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    timer_0.__contains__(str_0)


def test_case_10():
    str_0 = "hermzDn8Sy,#?\\"
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(str_0, str_0, timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    str_0.setdefault(timer_error_0)
