# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = module_1.field(compare=timer_0)
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(timer_0, timer_0, timer_0, none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    none_type_3 = timer_1.start()
    timer_1.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0, timer_0, timer_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_1.start()
    timer_1.stop()


def test_case_7():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0, timer_0, timer_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    none_type_3 = timer_1.start()
    var_0 = timer_0.__call__(none_type_3)
    none_type_4 = timer_1.__exit__()
    var_1 = timer_0.__eq__(none_type_2)
    timer_0.stop()
