# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=timer_0)
    none_type_0 = timer_1.__exit__()
    timer_3 = timer_2.__enter__()
    timer_1.stop()


def test_case_5():
    none_type_0 = None
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    none_type_0 = None
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_1.__getitem__(none_type_0)


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_8():
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0)
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(none_type_0)
    str_1 = "6\x0cOZ$:0"
    list_0 = []
    var_1 = timer_1.__repr__()
    none_type_1 = timer_1.__exit__(*list_0)
    timer_2 = module_0.Timer()
    var_2 = module_1.dataclass(
        init=timer_1, order=timer_2, unsafe_hash=list_0, slots=str_1
    )
    var_3 = var_2.__eq__(none_type_0)
    timer_1.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=timer_0)
    var_0 = timer_2.__enter__()
    float_0 = timer_2.stop()


def test_case_10():
    timer_0 = module_0.Timer()
    str_0 = "8mQ'"
    timer_1 = module_0.Timer(initial_text=str_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__repr__()
    var_1 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_1.stop()
    float_1 = timer_3.stop()
    none_type_0 = timer_0.start()


def test_case_12():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = "0"
    timer_2 = module_0.Timer(str_0, initial_text=timer_0)
    none_type_0 = timer_1.__exit__()
    user_dict_0 = module_2.UserDict()
    var_0 = user_dict_0.keys()
    timer_3 = module_0.Timer(initial_text=timer_1, logger=var_0)
    timer_4 = timer_2.__enter__()
    set_0 = {str_0, str_0}
    var_1 = module_1.field(repr=set_0, hash=timer_2)
