# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    int_0 = -791
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    var_1 = timer_0.__eq__(timer_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()


def test_case_4():
    int_0 = -791
    timer_0 = module_0.Timer(int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    int_0 = -791
    str_0 = "rK$:3RdwU#m)&K"
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, int_0)
    timer_3 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.__exit__()
    var_0 = timer_3.__eq__(none_type_0)
    var_0.__or__(timer_1)


def test_case_6():
    str_0 = "pTD"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    str_1 = ":>2"
    timer_1 = timer_0.__enter__()
    module_1.dataclass(timer_0, frozen=timer_1, match_args=str_1)


def test_case_7():
    int_0 = -791
    timer_0 = module_0.Timer(int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    timer_3 = module_0.Timer()


def test_case_8():
    timer_0 = module_0.Timer()
    bool_0 = True
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    var_1 = module_1.dataclass(
        repr=bool_0, unsafe_hash=bool_0, match_args=bool_0, slots=bool_0
    )
    var_2 = var_1.__eq__(timer_0)
    timer_1 = module_0.Timer(var_2, initial_text=var_2)
    timer_2 = timer_1.__enter__()
    none_type_1 = None
    var_3 = timer_1.__eq__(none_type_1)
    none_type_2 = timer_1.__exit__()
    str_0 = "^\x0cOT2V:0WB}"
    var_3.total(str_0)
