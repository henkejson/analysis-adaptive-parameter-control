# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_0.stop()


def test_case_4():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=bool_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.start()
    list_0 = [timer_0, float_arg_0]
    none_type_2 = timer_0.__exit__(*list_0)


def test_case_5():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetimig/ for more details.\n"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0)
    none_type_0 = timer_0.start()
    str_0 = "J|,>.*)*IM]"
    none_type_1 = timer_0.__exit__(*str_0)
    var_0 = none_type_0.__repr__()
    var_0.start()


def test_case_7():
    str_0 = "2"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=str_0, initial_text=timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_1.stop()
    timer_2.__len__()


def test_case_8():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.object()
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_2.stop()
    var_1 = var_0.__eq__(str_0)
    var_2 = timer_2.__repr__()
    var_1.pop(var_0)


def test_case_9():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__call__(str_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_1 = None
    timer_2 = module_0.Timer(var_0, none_type_1, var_0)
    timer_3 = timer_2.__enter__()
    timer_2.stop()
