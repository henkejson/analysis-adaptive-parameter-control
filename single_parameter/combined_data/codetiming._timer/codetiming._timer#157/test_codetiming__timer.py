# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__repr__()
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_2.__exit__()


def test_case_4():
    str_0 = "/_]UsV%`8u+xws$"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_1.dataclass(
        init=timer_0, repr=timer_1, frozen=float_0, kw_only=timer_1
    )
    module_0.FloatArg(**var_0)


def test_case_6():
    str_0 = "I=[w6!"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    float_0 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()
    float_1 = module_1.field(hash=timer_error_0)


def test_case_7():
    timer_0 = module_0.Timer()
    bool_0 = False
    timer_1 = module_0.Timer(text=timer_0, initial_text=bool_0)
    timer_2 = timer_0.__enter__()
    timer_3 = timer_1.__enter__()
    float_0 = timer_3.stop()
    var_0 = timer_1.__call__(timer_0)
    var_0.__getitem__(timer_2)


def test_case_8():
    timer_0 = module_0.Timer()
    bool_0 = True
    str_0 = "T\x0bZ"
    timer_1 = module_0.Timer(str_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    var_0 = module_1.dataclass(init=bool_0, frozen=bool_0)
    bytes_0 = b"\xc51V\x99\xf2~\x9b\x05Yh\xec\xf0\xf8\xbc\xa7\x96T/"
    var_0.pop(bytes_0)


def test_case_9():
    timer_0 = module_0.Timer()
    bool_0 = True
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    var_0 = module_1.dataclass(eq=float_0, kw_only=none_type_0)
    var_0.pop(timer_2, bool_0)
