# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.stop()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    str_0 = "w~\tb\x0b_SZamp0+&/7"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    str_1 = "!qc${/\tJ"
    float_0 = timer_0.stop()
    dict_0 = {str_0: float_arg_0, str_0: str_0, str_1: float_arg_0}
    module_0.TimerError(**dict_0)


def test_case_6():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    str_0 = "Timer"
    var_0 = timer_0.__eq__(timer_0)
    none_type_2 = timer_0.__exit__()
    str_1 = "!qc${/\tJ"
    timer_1 = module_0.Timer(initial_text=timer_0)
    var_1 = module_1.field(hash=str_0, metadata=none_type_2)
    dict_0 = {
        none_type_1: float_arg_0,
        str_0: str_0,
        str_1: float_arg_0,
        str_1: none_type_0,
    }
    module_0.TimerError(**dict_0)


def test_case_9():
    int_0 = 345
    float_arg_0 = module_0.FloatArg()
    int_1 = -1246
    timer_0 = module_0.Timer(initial_text=int_1)
    dict_0 = {int_0: int_0, int_0: int_0, int_1: int_0, int_1: int_0}
    timer_1 = timer_0.__enter__()
    module_2.UserDict(**dict_0)
