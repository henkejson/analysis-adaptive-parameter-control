# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_0.stop()


def test_case_3():
    str_0 = "xr4TzUdG5"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    bool_0.__getitem__(none_type_0)


def test_case_7():
    none_type_0 = None
    str_0 = "Timer started"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(none_type_0, str_0, logger=str_0)
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.Timers(*list_0)


def test_case_8():
    bool_0 = True
    float_arg_0 = module_0.FloatArg()
    bool_1 = False
    timer_0 = module_0.Timer(bool_1, initial_text=bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_0)
    none_type_1 = timer_0.start()
    var_0.__getitem__(none_type_0)
