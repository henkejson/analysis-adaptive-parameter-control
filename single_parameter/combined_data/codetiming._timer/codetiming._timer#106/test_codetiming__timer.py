# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    var_1 = module_1.field()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    float_0 = -2364.15
    bool_0 = False
    timer_0 = module_0.Timer(float_0, initial_text=float_0, logger=bool_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_1)
    float_1 = timer_1.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_7():
    none_type_0 = None
    str_0 = "minute3 cs"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0)
    timer_1 = module_0.Timer()
    none_type_1 = None
    none_type_2 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    var_0 = none_type_1.__repr__()
    timer_1.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_0.__exit__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    user_dict_0 = module_2.UserDict()
    user_dict_0.__getitem__(none_type_0)
