# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    str_1 = "E\\\n"
    timer_1 = module_0.Timer(str_1)
    none_type_0 = timer_1.start()
    timer_1.start()


def test_case_2():
    float_0 = 483.7943
    timer_0 = module_0.Timer(logger=float_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_0.__exit__()


def test_case_4():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer()
    timer_2 = module_0.Timer(text=str_0)


def test_case_5():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    str_1 = "E\\\n"
    timer_1 = module_0.Timer(str_1)
    none_type_0 = None
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_1.__call__(none_type_0)


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(timer_2, timer_2)
    timer_4 = timer_3.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_3.stop()


def test_case_7():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    str_1 = "E\\\n"
    timer_1 = module_0.Timer(str_1, initial_text=timer_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()


def test_case_8():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    var_0 = timer_1.__call__(none_type_0)
    timer_1.start()


def test_case_9():
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_0.start()
    none_type_3 = timer_0.__exit__()
    float_0 = timer_1.stop()
    timer_2 = timer_0.__enter__()
    timer_2.start()


def test_case_10():
    bool_0 = True
    float_arg_0 = module_0.FloatArg()
    int_0 = -1101
    timer_0 = module_0.Timer(initial_text=int_0)
    var_0 = timer_0.__eq__(bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    user_dict_0 = module_1.UserDict()
    var_1 = user_dict_0.setdefault(none_type_0)
    timer_2 = module_0.Timer(none_type_0, var_1, logger=bool_0)
    timer_3 = module_0.Timer()
    float_0 = timer_0.stop()
    var_2 = timer_3.__repr__()
    var_2.__exit__()
