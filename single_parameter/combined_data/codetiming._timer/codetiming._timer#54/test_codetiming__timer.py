# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_2():
    user_dict_0 = module_1.UserDict()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    str_0 = ">%"
    timer_error_0 = module_0.TimerError(*str_0)
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_1 = module_2.dataclass(none_type_2, eq=bool_0, slots=none_type_2)
    timer_1.__enter__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_0.__exit__()


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    var_0 = module_2.dataclass()
    var_1 = var_0.__repr__()
    var_1.items()
