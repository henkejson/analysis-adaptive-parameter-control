# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(timer_0)
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    none_type_0 = None
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0, logger=none_type_0)
    int_0 = 633
    timer_1 = timer_0.__enter__()
    var_0 = module_1.dataclass(repr=none_type_0, order=int_0)
    var_0.__len__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_7():
    str_0 = "l! \\S(=[R#/)J_ VnP3H"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    float_0 = timer_0.stop()
    float_arg_1 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    str_1 = 'B\\%C,\rKs"\\NeK1:Db|GU'
    dict_0 = {str_1: float_arg_0}
    timer_2 = module_0.Timer(dict_0, float_arg_0)
    timer_3 = module_0.Timer(dict_0, logger=none_type_0)
    list_0 = [float_0, dict_0, dict_0]
    none_type_1 = timer_0.__exit__(*list_0)
    module_0.FloatArg(**dict_0)


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    none_type_2 = None
    timer_1 = module_0.Timer(none_type_2, initial_text=none_type_0, logger=none_type_2)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__call__(none_type_2)
    list_0 = [timer_0]
    none_type_3 = timer_1.__exit__(*list_0)
    var_1 = timer_0.__repr__()
    timer_3 = module_0.Timer(logger=none_type_1)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0, logger=float_arg_0)
    timer_0.start()
