# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_1.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_7():
    str_0 = "^C"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()


def test_case_8():
    str_0 = "^C"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(str_0, initial_text=timer_2)
    timer_4 = timer_3.__enter__()
    none_type_0 = timer_1.__exit__()
    float_0 = timer_4.stop()


def test_case_9():
    str_0 = "^C"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_1.__enter__()


def test_case_10():
    str_0 = "^s"
    timer_0 = module_0.Timer(str_0)
    timer_1 = module_0.Timer(text=timer_0)
    complex_0 = -820.2 + 1346.5j
    timer_2 = module_0.Timer(initial_text=str_0, logger=complex_0)
    timer_3 = timer_0.__enter__()
    none_type_0 = None
    timer_4 = module_0.Timer(timer_3, initial_text=none_type_0)
    timer_5 = timer_1.__enter__()
    none_type_1 = timer_5.__exit__()
    timer_4.stop()
