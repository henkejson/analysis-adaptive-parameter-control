# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    bool_1 = False
    timer_1 = module_0.Timer(initial_text=bool_1)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    bool_1 = False
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(initial_text=bool_1)
    float_0 = timer_0.stop()
    timer_1.__len__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    str_0 = "HtB5TLIhY)YI-(xd!29y"
    var_0 = timer_0.__eq__(str_0)
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    none_type_1 = timer_1.start()
    timer_0.__exit__(*var_0)


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    str_0 = "HtB5TLIhY)YI-(xd!29y"
    var_0 = timer_0.__eq__(str_0)
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    none_type_1 = timer_1.start()
    var_1 = timer_0.__call__(none_type_0)
    none_type_2 = timer_1.__exit__()
    var_2 = timer_1.__eq__(timer_1)
    var_3 = timer_0.__repr__()
    var_3.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    str_0 = "HtB5TLIhY)YI-(xd!29y"
    var_0 = timer_0.__eq__(str_0)
    timer_1 = module_0.Timer(initial_text=var_0)
    none_type_1 = None
    none_type_2 = timer_1.start()
    var_0.__call__(none_type_1)


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    str_0 = "HtB5TLIhY)YI-(xd!29y"
    var_0 = timer_0.__eq__(str_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    module_1.dataclass(var_0, unsafe_hash=none_type_0, slots=var_0)


def test_case_11():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    str_0 = "HtB5TLIhY)YI-(xd!29y"
    none_type_1 = None
    timer_1 = module_0.Timer(text=timer_0)
    none_type_2 = None
    none_type_3 = timer_1.start()
    list_0 = [none_type_2, none_type_3, none_type_1]
    none_type_4 = timer_1.__exit__(*list_0)
    str_1 = 'HyJH"srG1SuE\x0bWh'
    tuple_0 = ()
    str_2 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    dict_0 = {str_0: none_type_2, str_0: none_type_2, str_1: tuple_0, str_2: str_1}
    module_2.Timers(**dict_0)
