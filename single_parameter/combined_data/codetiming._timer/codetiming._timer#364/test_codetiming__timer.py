# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(text=none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0]
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer(text=list_1, initial_text=bool_0)
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(text=none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    str_0 = "PR[-8R$mQeX#"
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=str_0, logger=timer_0)
    list_0 = [timer_1, timer_0]
    none_type_0 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(list_0)
    float_arg_0 = module_0.FloatArg()
    dict_0 = {}
    float_arg_1 = module_0.FloatArg(**dict_0)
    timer_error_0 = module_0.TimerError()
    float_0 = timer_3.stop()


def test_case_6():
    str_0 = "u%b!k\rS{G.q"
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    list_0 = [timer_1, timer_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(list_0)
    none_type_2 = None
    dict_0 = {}
    module_0.TimerError(*none_type_2, **dict_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    timer_2 = module_0.Timer(initial_text=timer_1, logger=none_type_0)
    list_0 = [timer_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    none_type_2 = timer_2.__exit__(*list_0)
    var_0 = module_1.field(default=timer_3, init=list_0, kw_only=timer_2)
    var_1 = timer_2.__repr__()
    var_2 = timer_0.__eq__(var_1)
    timer_2.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    list_0 = [timer_0]
    var_0 = timer_0.__eq__(timer_2)
    none_type_0 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(list_0)
    var_1 = timer_4.__repr__()
    none_type_1 = timer_4.start()
    var_2 = var_0.__eq__(timer_0)
    timer_4.stop()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, initial_text=timer_0, logger=timer_1)
    list_0 = [timer_0]
    none_type_0 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(list_0)
    none_type_1 = None
    var_0 = timer_0.__repr__()
    var_1 = timer_1.__eq__(none_type_1)
    timer_0.stop()


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(text=timer_1, initial_text=none_type_0, logger=timer_0)
    list_0 = [timer_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    var_0 = module_1.field(default=timer_3, init=list_0, kw_only=timer_2)
    var_1 = timer_2.__repr__()
    var_2 = timer_0.__eq__(var_1)
    float_0 = timer_2.stop()
    module_0.FloatArg(**var_0)
