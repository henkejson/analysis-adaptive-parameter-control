# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "*A({dGe"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.stop()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(text=timer_error_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    user_dict_0 = module_1.UserDict(none_type_0)
    var_0 = user_dict_0.__copy__()


def test_case_3():
    str_0 = "*A(de"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    str_0 = "V7oDTn4R{(#.VCix"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    var_0 = timer_0.__repr__()
    timer_0.stop()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_6():
    str_0 = "\rA(d_`e"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__call__(str_0)
    timer_1.__call__(str_0)


def test_case_7():
    timer_error_0 = module_0.TimerError()
    str_0 = "*A({dGe"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_0.__enter__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(timer_0)
    timer_2 = timer_1.__enter__()
    timer_2.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(float_arg_0, str_0, float_arg_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_0.__enter__()
    timer_3 = timer_1.__enter__()
    none_type_0 = timer_3.__exit__()
    none_type_1 = timer_1.start()
    timer_3.start()
