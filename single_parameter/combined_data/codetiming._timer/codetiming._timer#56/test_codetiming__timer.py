# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    float_0 = -3766.0
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    none_type_0 = timer_0.start()


def test_case_2():
    float_0 = -3766.0
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    var_0 = module_1.dataclass(init=none_type_1, unsafe_hash=none_type_1)
    timer_0 = module_0.Timer(initial_text=var_0)
    none_type_2 = timer_0.start()
    var_1 = var_0.__eq__(none_type_0)


def test_case_5():
    float_0 = -3766.0
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__call__(none_type_0)
    module_0.FloatArg(*var_0)


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [none_type_0, none_type_0]
    timer_0.__exit__(*list_0)


def test_case_8():
    float_0 = -3769.4219413454925
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_1 = timer_0.__enter__()
    float_1 = timer_0.stop()


def test_case_9():
    str_0 = "\\L\\V1E=/o@T^]\rhl\rl"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.__repr__()
    timer_1.start()


def test_case_10():
    float_0 = -3766.0
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_1 = timer_2.stop()
