# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__call__(timer_0)
    var_0.stdev(var_0)


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer()
    bool_0 = False
    var_0 = timer_0.__eq__(bool_0)
    timer_0.stdev(none_type_1)


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    var_0 = timer_1.__call__(none_type_0)
    timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    var_0 = timer_1.__call__(none_type_0)
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    none_type_2 = timer_1.__exit__()
    var_1 = timer_0.__call__(timer_0)
    var_1.stdev(var_1)


def test_case_7():
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_8():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    str_0 = "name"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__eq__(dict_0)
    var_2 = var_0.__eq__(none_type_0)
    var_3 = module_1.field(hash=str_0, kw_only=var_1)
    var_1.popitem()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    str_0 = "jMZ[1niW!91(V"
    timer_1 = module_0.Timer(str_0, initial_text=bool_0)
    timer_2 = module_0.Timer(timer_1)
    none_type_0 = timer_1.start()
    float_0 = timer_1.stop()
    timer_3 = module_0.Timer(logger=none_type_0)
    timer_4 = timer_1.__enter__()
    var_0 = timer_4.__repr__()
    var_1 = timer_1.__eq__(none_type_0)
    none_type_1 = None
    module_1.field(compare=timer_2, metadata=timer_0, kw_only=none_type_1)


def test_case_10():
    dict_0 = {}
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = module_0.Timer(text=timer_1)
    none_type_0 = timer_2.start()
    float_0 = timer_2.stop()
    timer_3 = timer_2.__enter__()
    var_0 = timer_3.__repr__()
    var_1 = var_0.__eq__(float_0)
    timers_0 = module_2.Timers(**dict_0)
    module_1.field(
        default=var_0, default_factory=timer_3, hash=timers_0, compare=none_type_0
    )
