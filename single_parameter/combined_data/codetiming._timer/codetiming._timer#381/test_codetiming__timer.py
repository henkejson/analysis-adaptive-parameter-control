# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = " does not support item assignment. Use .add()' to update values."
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.__call__(str_0)


def test_case_2():
    str_0 = " does not support item assignment. Use .add()' to update values."
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = timer_1.start()


def test_case_4():
    str_0 = ""
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_error_0 = module_0.TimerError()
    timer_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    timer_1.start()


def test_case_6():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = None
    var_0 = timer_1.__call__(none_type_0)
    var_0.__call__(str_0)


def test_case_7():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_1 = None
    timer_2 = module_0.Timer(str_0, timer_1)
    var_0 = timer_2.__call__(timer_2)
    var_1 = var_0.__repr__()
    var_2 = module_1.field(default_factory=none_type_1, hash=var_0)
    var_3 = var_2.__eq__(var_1)
    none_type_2 = timer_1.start()
    var_2.start()


def test_case_8():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(str_0, initial_text=timer_0)
    none_type_0 = timer_2.start()
    timer_0.__len__()


def test_case_9():
    str_0 = ""
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(str_0, initial_text=timer_0)
    none_type_0 = timer_2.start()
    timer_1.__exit__()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(text=timer_0)
    str_0 = "T}\n\x0bvQ\x0c0kG"
    var_0 = timer_0.__repr__()
    timer_3 = module_0.Timer(text=str_0)
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()
    module_2.Timers(**timer_3)
