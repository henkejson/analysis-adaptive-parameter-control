# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    str_0 = "\x0c/Q*]qFe^Y<Mzd2R"
    tuple_0 = (str_0,)
    timer_0 = module_0.Timer(initial_text=tuple_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer()
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(text=none_type_0, initial_text=bool_0, logger=bool_0)
    float_arg_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(initial_text=float_arg_0, logger=float_arg_0)
    timer_1.start()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=float_arg_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, none_type_0, float_arg_0)
    timer_3 = module_0.Timer(text=none_type_0)
    timer_4 = module_0.Timer()
    timer_5 = timer_4.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_1.stop()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer(text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()
    float_arg_1 = module_0.FloatArg()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_0.__enter__()
    timer_3 = timer_1.__enter__()
    str_0 = "r=Z'X"
    str_1 = "?HiD\\jTL,8Q"
    dict_0 = {str_0: str_0, str_0: timer_0, str_1: float_arg_0}
    module_1.field(
        default=dict_0,
        default_factory=float_arg_0,
        init=str_0,
        repr=float_arg_0,
        metadata=timer_2,
    )


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer(float_arg_0)
    timer_2 = module_0.Timer()
    timer_3 = timer_0.__enter__()
    none_type_1 = timer_3.__exit__()
    timer_4 = timer_1.__enter__()
    timer_5 = timer_2.__enter__()
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_3.__repr__()
    var_1 = timer_2.__repr__()
    none_type_2 = timer_4.__exit__()
    var_0.__contains__(timer_4)
