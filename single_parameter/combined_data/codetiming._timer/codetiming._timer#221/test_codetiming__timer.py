# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    bool_0 = True
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_0.stop()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer()
    var_0 = timer_1.__repr__()
    timer_2 = module_0.Timer(initial_text=var_0)
    timer_2.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_2.__exit__()


def test_case_7():
    timer_0 = module_0.Timer()
    str_0 = "]FY;#kO"
    timer_1 = module_0.Timer(str_0)
    int_0 = 1394
    var_0 = module_1.field(kw_only=int_0)
    float_arg_0 = module_0.FloatArg()
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0.__setitem__(none_type_0, str_0)


def test_case_8():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    bool_0 = True
    none_type_1 = module_1.field(default=timer_0, init=none_type_0, compare=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    var_1 = var_0.__repr__()
    timer_1 = module_0.Timer(var_1, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    var_0.__setitem__(bool_0, none_type_1)


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    bool_0 = True
    none_type_1 = timer_0.__exit__()
    timer_1 = module_0.Timer(text=timer_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__eq__(timer_1)
    list_0 = [timer_0]
    none_type_2 = timer_1.__exit__(*list_0)
