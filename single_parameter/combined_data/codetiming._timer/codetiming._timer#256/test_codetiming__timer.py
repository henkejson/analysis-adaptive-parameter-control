# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    bool_0 = False
    var_0 = module_1.dataclass(
        init=bool_0,
        eq=bool_0,
        order=bool_0,
        unsafe_hash=bool_0,
        match_args=bool_0,
        kw_only=bool_0,
    )
    timer_0.stop()


def test_case_3():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timers_0 = module_2.Timers()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__call__(timer_1)
    timer_1.start()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_6():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    timer_0 = module_0.Timer(text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    timer_3 = module_0.Timer(none_type_0, str_0)
    var_0 = timer_1.__repr__()
    str_1 = "yGfFAm2~U"
    var_1 = module_1.dataclass(order=str_1, slots=str_0)
    float_0 = timer_1.stop()
    var_0.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    dict_0 = {str_0: str_0, str_0: str_0}
    timer_0 = module_0.Timer(str_0, initial_text=dict_0)
    timer_1 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_2 = module_0.Timer(logger=none_type_0)
    var_0 = timer_2.__repr__()
    var_0.stop()


def test_case_9():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    dict_0 = {str_0: str_0, str_0: str_0}
    timer_0 = module_0.Timer(initial_text=dict_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__call__(str_0)
    var_0 = timer_1.__repr__()
    none_type_1 = None
    var_1 = module_1.dataclass(eq=none_type_0, slots=none_type_1)
    var_0.stop()


def test_case_10():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    dict_0 = {str_0: str_0, str_0: str_0}
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(dict_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(logger=timer_0)
    var_1 = timer_0.__repr__()
    var_2 = module_1.dataclass(init=timer_error_0, eq=timer_1, order=none_type_0)
    timer_0.stop()


def test_case_11():
    str_0 = "%2kpP@+o^gm:Z\x0c'aP"
    dict_0 = {str_0: str_0, str_0: str_0}
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=str_0, logger=dict_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    timer_2 = module_0.Timer(str_0, str_0, logger=dict_0)
    var_0 = timer_0.__repr__()
    float_0 = timer_1.stop()
    timer_3 = timer_2.__enter__()
    var_0.keys()
