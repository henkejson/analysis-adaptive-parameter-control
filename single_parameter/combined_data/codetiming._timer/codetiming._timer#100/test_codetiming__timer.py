# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    user_dict_0 = module_1.UserDict()
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(logger=timer_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    str_0 = "XdmT>#$X3A3"
    timer_error_1 = module_0.TimerError(*str_0)
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = None
    list_0 = [none_type_0]
    timer_0.__exit__(*list_0)


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_6():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.__iter__()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    complex_0 = 1329.4568 - 49.3j
    timer_3 = module_0.Timer(text=complex_0, initial_text=complex_0)
    float_0 = timer_0.stop()
    timer_4 = timer_3.__enter__()
    var_1 = module_2.dataclass(
        repr=user_dict_0, match_args=complex_0, kw_only=timer_3, slots=timer_2
    )
    timer_4.__enter__()


def test_case_7():
    user_dict_0 = module_1.UserDict()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(text=timer_1, initial_text=timer_2)
    float_0 = timer_0.stop()
    none_type_1 = None
    module_2.dataclass(
        timer_1, init=user_dict_0, repr=timer_0, eq=none_type_1, slots=none_type_1
    )


def test_case_8():
    user_dict_0 = module_1.UserDict()
    timer_0 = module_0.Timer(text=user_dict_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0)
    timer_2 = timer_0.__enter__()
    str_0 = ")*\ryAw>r:"
    timer_3 = module_0.Timer(str_0, initial_text=timer_2)
    timer_4 = timer_3.__enter__()
    timer_5 = module_0.Timer()
    float_0 = timer_3.stop()
    timer_6 = user_dict_0.clear()
    var_0 = user_dict_0.keys()
    var_1 = module_2.dataclass(order=var_0, frozen=timer_3)
    var_1.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    complex_0 = 1329.4568 - 49.3j
    timer_3 = module_0.Timer(text=complex_0, initial_text=complex_0)
    float_0 = timer_0.stop()
    timer_4 = timer_3.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()


def test_case_10():
    user_dict_0 = module_1.UserDict()
    str_0 = "mW{a0P(/tb"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__enter__()


def test_case_11():
    user_dict_0 = module_1.UserDict()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    timer_3 = module_0.Timer(user_dict_0, timer_2)
    timer_4 = timer_3.__enter__()
    float_0 = timer_0.stop()
    float_1 = timer_4.stop()
    timer_2.stop()
