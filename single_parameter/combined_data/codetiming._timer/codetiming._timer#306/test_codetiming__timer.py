# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    list_0 = []
    timer_1 = module_0.Timer(text=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__(*list_0)
    timer_1.__exit__()


def test_case_3():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_error_0 = timer_0.__repr__()
    none_type_2 = timer_0.start()
    timer_0.__enter__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    list_0 = []
    str_0 = "8A\x0c~b<"
    timer_1 = module_0.Timer(str_0, bool_0, logger=list_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__(*list_0)
    none_type_3 = timer_0.__exit__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__eq__(timer_0)
    str_0 = "F;NHu,o"
    var_2 = timer_0.__eq__(str_0)
    float_arg_1 = module_0.FloatArg()
    str_1 = "pK~ n3m0@PC\nItV`p&N7"
    timer_2 = module_0.Timer(text=str_1, initial_text=str_1, logger=str_0)
    var_3 = module_1.dataclass(order=float_arg_1, kw_only=float_arg_1)
    timer_2.start()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()
    str_0 = "Timer is not running. Use .start() to start it"
    timer_1 = module_0.Timer(str_0, initial_text=bool_0)
    timer_error_0 = module_0.TimerError()
    float_0 = var_0.count(var_0)
    timer_error_1 = module_0.TimerError()
    none_type_2 = timer_1.start()
    var_0.__delitem__(timer_error_1)
