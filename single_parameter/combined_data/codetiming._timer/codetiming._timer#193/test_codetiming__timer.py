# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = module_1.field()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_0.setdefault(var_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.__eq__(float_arg_1)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.start()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, float_arg_2)
    timer_2 = module_0.Timer(float_arg_1, initial_text=float_arg_0, logger=none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_2.__eq__(float_0)
    float_1 = timer_2.stop()
    var_0.__or__(timer_2)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = module_0.Timer(text=float_arg_1)
    timer_2 = module_0.Timer(text=timer_0)
    complex_0 = -2549.5 + 752.4139j
    timer_3 = timer_0.__enter__()
    none_type_0 = timer_2.start()
    var_0 = timer_2.__eq__(timer_2)
    float_0 = timer_0.stop()
    float_1 = timer_2.stop()
    user_dict_0 = module_2.UserDict()
    var_1 = user_dict_0.get(float_arg_0)
    var_1.__call__(complex_0)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = module_0.Timer(logger=timer_0)
    str_0 = 'DL(g)K]\n"i'
    timer_2 = module_0.Timer(initial_text=str_0)
    timer_3 = timer_1.__enter__()
    none_type_0 = timer_2.start()
    var_0 = timer_0.__eq__(float_arg_1)
    var_0.stop()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()
    timer_1 = module_0.Timer(initial_text=float_arg_0)
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer(float_arg_2, initial_text=float_arg_2)
    timer_4 = module_0.Timer(initial_text=timer_2)
    timer_5 = timer_3.__enter__()
    bool_0 = True
    none_type_1 = timer_2.start()
    var_0 = timer_1.__eq__(bool_0)
    float_0 = timer_5.stop()
    timer_1.stop()
