# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "|m){"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.stop()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_0.__exit__()


def test_case_4():
    bytes_0 = b'\xce \x9b\x0f\x07&\xd6\x0b\x87"'
    timer_0 = module_0.Timer(bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    str_0 = "|m){W"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__enter__()


def test_case_6():
    complex_0 = -1870.1088 - 2290j
    timer_0 = module_0.Timer(logger=complex_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer()
    timer_0.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0, initial_text=timer_error_0)
    none_type_0 = timer_0.start()


def test_case_9():
    str_0 = '|m"YW('
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    dict_0 = {str_0: float_0}
    module_0.FloatArg(*timer_0, **dict_0)


def test_case_10():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__repr__()
    none_type_0 = None
    var_0.update(none_type_0)
