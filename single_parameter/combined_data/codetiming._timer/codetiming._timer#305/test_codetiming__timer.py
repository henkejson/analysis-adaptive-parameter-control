# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    tuple_0 = ()
    timer_0 = module_0.Timer(text=tuple_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    tuple_0 = ()
    timer_0 = module_0.Timer(text=tuple_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__repr__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = ""
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = timer_1.__call__(timer_1)
    timer_2 = module_0.Timer(text=var_0, initial_text=dict_0, logger=none_type_0)
    timer_3 = timer_2.__enter__()
    var_1 = timer_1.__eq__(timer_3)
    float_0 = timer_2.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_1)
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer(initial_text=timer_1)
    timer_3 = timer_2.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = "Timer is not running. Use .start() to start it"
    timer_2 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_2.__enter__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_1)
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer(initial_text=timer_1)
    timer_3 = module_0.Timer(var_0, initial_text=var_0, logger=var_0)
    timer_4 = timer_3.__enter__()
    float_0 = timer_4.stop()


def test_case_10():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    var_1 = timer_0.__eq__(var_0)
    float_0 = timer_1.stop()
