# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0, timer_0)
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(none_type_0)
    var_0.__contains__(timer_0)


def test_case_6():
    str_0 = "8P~P^"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    none_type_0 = None
    var_1 = module_1.field(hash=timer_0, compare=none_type_0, metadata=var_0)


def test_case_7():
    bool_0 = True
    bytes_0 = b"\x95\xee(n\xd1\xc9\\\xe0\nE\x9c\x17\xb5\x92\x83\n\x12U("
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bytes_0)
    timer_1 = module_0.Timer()
    timer_0.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    str_0 = "8P~P^"
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    timer_2 = timer_0.__repr__()
    timer_3 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_9():
    str_0 = "8P~P^"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer()
    timer_2 = module_0.Timer()
    timer_3 = timer_0.__enter__()
    none_type_0 = None
    var_0 = module_1.field(hash=timer_0, compare=none_type_0, metadata=none_type_0)
    timer_4 = module_0.Timer(timer_2, var_0, timer_2, var_0)
    none_type_1 = timer_0.__exit__()
    timer_4.__enter__()


def test_case_10():
    timer_0 = module_0.Timer()
    bool_0 = False
    timer_1 = module_0.Timer(initial_text=bool_0)
    none_type_0 = None
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_3 = module_0.Timer()
    timer_4 = timer_2.__enter__()
    var_0 = module_1.field(hash=timer_0, compare=timer_2)
    timer_5 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_2.__exit__()
    timer_6 = timer_5.__enter__()
    var_0.__iter__()


def test_case_11():
    timer_0 = module_0.Timer()
    str_0 = "8P~P^"
    timer_1 = module_0.Timer(text=timer_0)
    var_0 = timer_1.__repr__()
    timer_2 = timer_1.__enter__()
    dict_0 = {}
    var_1 = module_1.field(default_factory=str_0, hash=var_0, kw_only=dict_0)
    none_type_0 = timer_2.__exit__(*var_0)
    timer_3 = timer_2.__enter__()
    var_2 = timer_0.__repr__()
    module_1.dataclass(timer_1, order=var_0)
