# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    bytes_0 = b"\xfb\x81"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_1.start()


def test_case_2():
    bytes_0 = b"\xfb\x81"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = timer_1.__repr__()


def test_case_3():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.__iter__()
    var_1 = var_0.__repr__()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_4():
    str_0 = "-tFc"
    timer_0 = module_0.Timer(text=str_0)
    timer_0.stop()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()


def test_case_6():
    list_0 = []
    timer_0 = module_0.Timer(logger=list_0)
    timer_1 = timer_0.__enter__()
    bytes_0 = b"\xfb\x81"
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(text=timer_3)
    var_0 = timer_2.__eq__(timer_2)
    var_1 = timer_3.__eq__(bytes_0)
    var_0.stop()


def test_case_7():
    bytes_0 = b"\xfb\x81"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    int_0 = -1595
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(int_0)
    list_0 = [int_0, bytes_0, timer_0]
    var_0.__call__(list_0)


def test_case_8():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    bool_0 = False
    timer_2 = module_0.Timer(initial_text=bool_0)
    var_0 = timer_1.__eq__(none_type_0)
    var_1 = var_0.__eq__(none_type_0)
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_9():
    bytes_0 = b"\xfb\x81"
    timer_0 = module_0.Timer(bytes_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_0.values()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_1)
    var_0 = timer_0.__eq__(timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_3.stop()
    var_0.start()


def test_case_11():
    bytes_0 = b"\xfb\x81"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = None
    bytes_1 = b"\x8f;\xd7\x83B\xab \xb9B\x9d\x9aO\x98\xb3\x94>"
    var_0 = timer_0.__eq__(bytes_1)
    var_0.__call__(none_type_0)


def test_case_12():
    str_0 = "%ykGEy+-q6$XXMDW"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    bytes_0 = b"\xee\t\x18$!\x89)\x13\xc9;gF^"
    var_0 = module_2.dataclass(
        eq=timer_1, order=timer_1, unsafe_hash=str_0, match_args=bytes_0, slots=bytes_0
    )
    var_0.__contains__(timer_0)
