# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0)
    none_type_0 = timer_0.__repr__()
    var_0 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    bool_0 = False
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = None
    timer_1 = module_0.Timer(bool_0, initial_text=timer_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_1.__enter__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0 = module_0.Timer(text=float_arg_0, initial_text=list_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_0.__call__(float_arg_0)
    timer_0.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__call__(var_0)
    str_0 = "K"
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(text=str_0)
    var_1.clear()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    str_0 = "T"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    list_0 = [str_0]
    none_type_1 = timer_0.__exit__(*list_0)
    bytes_0 = b"\xe7\xb8\x042\xde\x03b\xc3\x15\xceh\xd1]k'\xea\x07\xea\xb8a"
    var_0 = timer_0.__eq__(bytes_0)
    var_0.__iter__()


def test_case_11():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer(float_arg_1, timer_0, logger=float_arg_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__()
