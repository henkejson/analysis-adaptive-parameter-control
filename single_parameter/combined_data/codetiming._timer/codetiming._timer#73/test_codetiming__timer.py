# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_2():
    str_0 = "Ai?&[1p]QU p8}pa"
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_1.field(
        default=bool_0, init=none_type_0, repr=float_0, kw_only=timer_1
    )
    var_0.__delitem__(str_0)


def test_case_3():
    str_0 = "Ai?&[1p]QU p8}pa"
    timer_0 = module_0.Timer(str_0)
    var_0 = timer_0.__repr__()
    timer_0.stop()


def test_case_4():
    bool_0 = False
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(initial_text=none_type_0)
    float_0 = timer_1.stop()
    list_0 = []
    timer_1.__exit__(*list_0)


def test_case_6():
    str_0 = "Ai?&[1p]QU p8}pa"
    bool_0 = True
    timer_0 = module_0.Timer(str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    module_1.field(compare=timer_1, metadata=timer_1)


def test_case_7():
    str_0 = "Ai?&[1p]QU p8}pa"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_0.__enter__()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    float_arg_1 = module_0.FloatArg()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_2.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    none_type_0 = None
    var_1 = module_1.field(hash=none_type_0, compare=float_0)
    var_1.__delitem__(timer_1)
