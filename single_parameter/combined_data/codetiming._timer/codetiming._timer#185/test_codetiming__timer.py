# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import builtins as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    var_0 = module_1.field(metadata=none_type_0)
    var_0.__contains__(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    timer_0 = module_0.Timer(bool_0, logger=none_type_0)
    none_type_1 = timer_0.start()


def test_case_4():
    none_type_0 = None
    str_0 = "ly(6^?B]%D\tBB"
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_0.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_6():
    var_0 = module_1.dataclass()
    timer_0 = module_0.Timer(var_0, initial_text=var_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()
    timer_0.start()


def test_case_7():
    base_exception_0 = module_2.BaseException()
    var_0 = module_1.dataclass()
    timer_0 = module_0.Timer(var_0, initial_text=var_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()


def test_case_8():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_1.__exit__()


def test_case_9():
    base_exception_0 = module_2.BaseException()
    timer_0 = module_0.Timer(base_exception_0, initial_text=base_exception_0)
    timer_1 = timer_0.__enter__()


def test_case_10():
    base_exception_0 = module_2.BaseException()
    var_0 = module_1.dataclass()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=var_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_1.start()
    timer_0.start()


def test_case_11():
    base_exception_0 = module_2.BaseException()
    var_0 = module_1.dataclass()
    none_type_0 = None
    timer_0 = module_0.Timer(var_0, var_0, none_type_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()
