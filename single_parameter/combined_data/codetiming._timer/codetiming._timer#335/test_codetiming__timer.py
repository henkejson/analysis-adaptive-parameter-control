# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_0.__eq__(float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__call__(float_arg_0)
    none_type_2 = timer_0.start()
    float_0 = timer_0.stop()
    var_1 = timer_0.__repr__()
    var_2 = timer_0.__repr__()
    timer_0.__exit__(*var_1)


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_6():
    str_0 = "VX"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.start()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(float_arg_0)
    timer_0.start()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = timer_1.start()
    timer_2 = module_0.Timer(timer_1, logger=timer_0)
    timer_3 = timer_2.__enter__()
    timer_2.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(float_0, timer_1, timer_1)
    none_type_0 = timer_2.start()
    none_type_1 = timer_0.start()
    timer_3 = module_0.Timer(text=none_type_1, initial_text=none_type_1)
    str_0 = "seconds"
    float_1 = timer_1.stop()
    str_1 = "wQ~iqtit"
    bytes_0 = b"z\x8e\xa1\x90\xa8\xa3d\xd0=\xd9 "
    set_0 = {none_type_0, str_0}
    dict_0 = {str_0: none_type_0, str_1: str_1, str_1: bytes_0, str_0: set_0}
    module_0.TimerError(**dict_0)


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(initial_text=float_0, logger=timer_1)
    timer_3 = module_0.Timer(text=timer_2)
    none_type_0 = timer_0.start()
    none_type_1 = timer_2.start()
    none_type_2 = timer_3.start()
    timer_4 = module_0.Timer()
    float_1 = timer_3.stop()
    list_0 = [none_type_2, none_type_2]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_5 = timer_4.__enter__()
    timer_1.__enter__()
