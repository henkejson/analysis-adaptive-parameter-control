# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()
    timer_2 = timer_1.__enter__()
    timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = module_0.Timer()
    none_type_0 = timer_1.start()
    timer_2 = timer_0.__enter__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_0.stop()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(logger=float_arg_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(initial_text=float_arg_0)
    timer_2 = module_0.Timer(float_arg_0, timer_1)
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    timer_1 = timer_0.__enter__()
    dict_0 = {
        float_arg_0: float_arg_0,
        float_arg_0: float_arg_0,
        float_arg_0: float_arg_0,
        float_arg_0: float_arg_0,
    }
    var_0 = module_1.dataclass(
        eq=float_arg_0, order=dict_0, frozen=float_arg_0, slots=float_arg_0
    )
    var_1 = var_0.__eq__(float_arg_0)
    var_2 = var_1.__eq__(timer_0)
    var_2.__copy__()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_1 = timer_0.start()
    var_0 = module_1.dataclass(none_type_0, init=none_type_0, match_args=none_type_0)
    var_1 = var_0.__repr__()
    var_0.__or__(var_0)
