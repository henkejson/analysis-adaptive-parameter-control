# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(tuple_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.__add__(bool_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()


def test_case_4():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(tuple_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_6():
    int_0 = 1
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    var_0 = immutable_list_1.to_list()


def test_case_7():
    str_0 = "#"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(str_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.map(immutable_list_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(tuple_0)


def test_case_15():
    bytes_0 = b"\r\x1f\xd4%\xd8m\x99\xb8\xe0*\x01\x02\x11\x8bl"
    dict_0 = {bytes_0: bytes_0}
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(generic_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    immutable_list_2 = immutable_list_1.append(generic_0)
    immutable_list_2.find(dict_0)


def test_case_16():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(tuple_0)


def test_case_17():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(tuple_0)


def test_case_18():
    bytes_0 = b"/\xd2\xaev\xbb\x80M"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_0.filter(bytes_0)


def test_case_19():
    int_0 = 1
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    var_0 = immutable_list_1.to_list()
    none_type_0 = None
    immutable_list_1.reduce(var_0, none_type_0)


def test_case_20():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(generic_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.reduce(var_0, generic_0)


def test_case_21():
    int_0 = 0
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    var_0 = immutable_list_0.__len__()
    immutable_list_2.find(int_0)
