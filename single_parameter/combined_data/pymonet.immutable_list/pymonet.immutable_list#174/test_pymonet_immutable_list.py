# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_1.find(var_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    str_0 = "\n        Take function and applied this function with monad value and returns function result.\n\n        :params binder: function to apply on monad value\n        :type binder: Function(A) -> Try[B]\n        :returns: for successfully result of binder, othercase copy of self\n        :rtype: Try[B]\n        "
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_0.__add__(str_0)


def test_case_3():
    int_0 = 507
    immutable_list_0 = module_0.ImmutableList(tail=int_0, is_empty=int_0)
    var_0 = immutable_list_0.__len__()


def test_case_4():
    none_type_0 = None
    str_0 = "U"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(str_0, str_0)
    immutable_list_1 = module_0.ImmutableList(var_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_1 = immutable_list_2.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(none_type_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    str_0 = "7tMNo,Tv$"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.filter(dict_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.reduce(var_0, var_0)
    var_1.__add__(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(immutable_list_2)


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.__len__()
    str_1 = var_0.__str__()
    immutable_list_0.filter(var_0)


def test_case_15():
    str_0 = "b8w8$Y0e'A1\"QY24-!("
    float_0 = 728.3394
    dict_0 = {float_0: float_0}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.find(str_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    var_2 = immutable_list_0.find(var_1)
    immutable_list_2 = immutable_list_0.unshift(var_0)
    immutable_list_3 = immutable_list_0.append(immutable_list_0)
    bool_1 = immutable_list_3.__eq__(var_1)
    immutable_list_2.find(immutable_list_2)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_0.reduce(bool_0, none_type_0)


def test_case_20():
    int_0 = -1040
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_1.reduce(immutable_list_0, int_0)
