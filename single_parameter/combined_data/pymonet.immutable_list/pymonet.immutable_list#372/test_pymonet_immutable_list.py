# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    bytes_0 = b"g\xdc\xbeD\xc8I\xa3"
    bytes_1 = b"\\\xbb(\xf92\xc3\xe17\xab\xd9\xe7\xc9#\x10\x08\xb6\xa39)"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_1)
    immutable_list_1.__add__(bytes_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_4():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(bool_0)


def test_case_8():
    int_0 = -1543
    tuple_0 = (int_0,)
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(tuple_0)
    str_0 = "R{"
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = module_0.ImmutableList(str_0)
    immutable_list_4 = immutable_list_3.unshift(immutable_list_3)
    var_0 = immutable_list_3.__len__()
    var_1 = immutable_list_2.to_list()
    immutable_list_5 = module_0.ImmutableList(str_0, is_empty=immutable_list_0)
    immutable_list_4.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=bool_0, is_empty=bool_0)
    immutable_list_0.filter(none_type_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    bool_0 = immutable_list_2.find(immutable_list_2)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    complex_0 = 1066.31264 - 461.22046j
    list_0 = [complex_0, complex_0, immutable_list_0, complex_0]
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    int_0 = -2534
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_2 = immutable_list_0.append(int_0)
    immutable_list_2.reduce(immutable_list_1, int_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    complex_0 = 1066.31264 - 461.22046j
    list_0 = [complex_0, complex_0, immutable_list_0, complex_0]
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_3 = immutable_list_2.append(immutable_list_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_3)
    immutable_list_2.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(var_0)
    immutable_list_2 = immutable_list_1.append(var_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    var_1 = immutable_list_0.to_list()
    var_2 = immutable_list_0.find(str_0)
    var_3 = immutable_list_1.__len__()
    immutable_list_3 = module_0.ImmutableList(immutable_list_0)
    immutable_list_3.reduce(str_0, var_3)
