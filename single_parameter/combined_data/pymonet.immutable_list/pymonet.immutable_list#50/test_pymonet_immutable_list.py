# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bytes_0 = b"\x0f"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    bool_0 = immutable_list_0.__eq__(list_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_2():
    str_0 = "/Kda,`zoC`!$gfj?UU"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.__add__(var_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_5():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(none_type_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1.map(immutable_list_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.map(none_type_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.filter(immutable_list_1)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.find(immutable_list_0)
    var_1 = immutable_list_1.reduce(var_0, none_type_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.map(none_type_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    complex_0 = -3289.001637 + 3339.48j
    bytes_0 = b"\xa7\x05Aw\xc4\x14rV\xf7\x1a\x86m)\xe6"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(complex_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_1.find(immutable_list_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0, is_empty=var_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    var_2 = immutable_list_1.find(var_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_1)
    var_2.__len__()


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_1.find(none_type_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_1 = immutable_list_1.__eq__(bool_0)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_3 = immutable_list_1.append(none_type_0)
    var_1 = immutable_list_1.to_list()
    immutable_list_3.reduce(var_0, bool_0)


def test_case_19():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_1.find(none_type_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    bytes_0 = b"p\xa3\x9f>\x98\x9b"
    immutable_list_3 = immutable_list_2.append(bytes_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_3.to_list()
    var_1 = immutable_list_2.reduce(str_0, immutable_list_3)
    str_1 = immutable_list_3.__str__()
    var_2 = immutable_list_3.__len__()
    bool_0 = immutable_list_1.__eq__(immutable_list_3)
    immutable_list_1.find(var_2)


def test_case_21():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(none_type_0)
