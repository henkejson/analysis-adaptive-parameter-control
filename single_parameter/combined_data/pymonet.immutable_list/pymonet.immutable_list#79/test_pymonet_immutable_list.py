# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    str_0 = "Lazy[T, W]"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(str_0)
    none_type_0 = None
    immutable_list_0.find(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    bool_0 = False
    int_0 = 0
    list_0 = [bool_0, int_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(list_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_2 = immutable_list_1.unshift(immutable_list_1)
    var_0 = immutable_list_2.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_9():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(tail=dict_0)
    immutable_list_0.map(dict_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_1)
    immutable_list_1.filter(bool_0)


def test_case_12():
    str_0 = "Lazy[T, W]"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(str_0)
    none_type_0 = None
    immutable_list_1.find(none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_17():
    bytes_0 = b"\xf8\xb6&!\xb9\x80``\xd9,\x90\xf9"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(var_0)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    str_0 = "-,zzh:mO^cwOMT"
    bool_0 = True
    bool_1 = False
    bool_2 = True
    tuple_0 = (str_0, bool_0, bool_1, bool_2)
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_0.reduce(bool_2, bool_2)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_22():
    int_0 = 1
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(int_0, int_0, bool_0)
    immutable_list_0.reduce(bool_0, immutable_list_0)
