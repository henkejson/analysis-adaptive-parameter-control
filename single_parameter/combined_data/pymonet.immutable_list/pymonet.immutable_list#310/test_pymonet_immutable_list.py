# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    bool_0 = immutable_list_0.__eq__(dict_0)
    immutable_list_1 = immutable_list_0.append(dict_0)
    immutable_list_0.find(dict_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(immutable_list_1)


def test_case_3():
    int_0 = -913
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_0.filter(immutable_list_1)


def test_case_5():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    str_0 = immutable_list_0.__len__()
    immutable_list_0.find(dict_0)


def test_case_6():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    var_0 = immutable_list_1.to_list()


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    int_0 = 359
    none_type_1 = None
    immutable_list_2 = module_0.ImmutableList(tail=none_type_1)
    immutable_list_2.map(int_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    int_0 = 0
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_1.find(immutable_list_1)
    var_1 = immutable_list_1.reduce(int_0, int_0)
    immutable_list_1.filter(var_1)


def test_case_11():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Min[B]\n        :returns: new Min with smallest value\n        :rtype: Min[A | B]\n        "
    set_0 = {str_0, str_0, str_0, str_0}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(set_0, none_type_0)


def test_case_12():
    set_0 = set()
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(set_0, is_empty=bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(bool_0, set_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(dict_0)


def test_case_15():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    bool_0 = immutable_list_0.__eq__(dict_0)
    immutable_list_1 = immutable_list_0.append(dict_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(dict_0)


def test_case_16():
    tuple_0 = ()
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_0.append(bool_0)
    str_0 = "F*"
    immutable_list_2.reduce(bool_0, str_0)


def test_case_17():
    int_0 = -913
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = module_0.ImmutableList()
    var_0 = immutable_list_2.find(immutable_list_1)
    immutable_list_1.map(int_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    int_0 = 761
    int_1 = 0
    immutable_list_2 = module_0.ImmutableList(tail=int_1)
    immutable_list_3 = immutable_list_2.append(int_0)
    bool_1 = immutable_list_3.__eq__(immutable_list_1)


def test_case_19():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    bool_0 = immutable_list_0.__eq__(dict_0)
    immutable_list_1 = immutable_list_0.append(dict_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(dict_0)


def test_case_20():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.find(dict_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)
