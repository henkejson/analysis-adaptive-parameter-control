# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    str_0 = "\n        Returns new ImmutableList with elements from previous one\n        and argument value on the end of list\n\n        :param new_element: element to append on the end of list\n        :type fn: A\n        :returns: ImmutableList[A]\n        "
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    var_1 = immutable_list_0.__len__()
    var_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    str_0 = immutable_list_1.__str__()


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_2.find(var_0)
    var_2 = immutable_list_2.reduce(var_1, var_0)
    immutable_list_3 = immutable_list_1.unshift(bool_0)
    immutable_list_4 = immutable_list_0.unshift(none_type_0)
    var_3 = immutable_list_1.to_list()
    immutable_list_4.map(bool_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.find(bool_0)
    var_1 = immutable_list_1.__len__()
    var_2 = immutable_list_0.find(var_0)
    var_3 = immutable_list_1.reduce(var_2, immutable_list_1)
    immutable_list_1.filter(var_3)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    var_1 = immutable_list_0.find(var_0)
    str_0 = immutable_list_0.__str__()
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.filter(none_type_0)


def test_case_13():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(bool_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    float_0 = -3703.86274
    immutable_list_0 = module_0.ImmutableList(is_empty=float_0)
    bool_0 = True
    immutable_list_1 = immutable_list_0.append(float_0)
    immutable_list_2 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_2.find(float_0)


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bytes_0 = b" J\x97\xf7\xb6\x8f\xb9\xb4\x84b\x10\xed\xebm\xac=\xe2A<\x7f"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_2.find(immutable_list_1)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_1 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_1)


def test_case_19():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    bool_0 = True
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    immutable_list_2.reduce(immutable_list_0, none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    var_0 = module_0.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_1 = var_0.unshift(bool_0)
    var_0.reduce(immutable_list_0, immutable_list_0)


def test_case_22():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.find(immutable_list_1)
    var_1 = immutable_list_0.reduce(var_0, none_type_0)
    immutable_list_0.filter(immutable_list_1)
