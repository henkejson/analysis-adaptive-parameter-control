# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    immutable_list_2.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    int_0 = -1505
    complex_0 = -1335.9 + 1669.561j
    bool_0 = False
    int_1 = 70
    immutable_list_0 = module_0.ImmutableList(is_empty=int_1)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.unshift(complex_0)
    var_0 = immutable_list_2.__len__()
    bool_1 = var_0.__eq__(int_0)
    none_type_0 = None
    immutable_list_3 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    bool_2 = immutable_list_3.__eq__(immutable_list_3)
    var_1 = immutable_list_3.to_list()
    immutable_list_3.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = module_0.ImmutableList(immutable_list_0)
    var_1 = var_0.__len__()
    immutable_list_1 = var_0.__add__(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    str_0 = immutable_list_2.__str__()
    immutable_list_2.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.to_list()
    immutable_list_0.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_2 = immutable_list_1.unshift(var_0)
    immutable_list_3 = module_0.ImmutableList()
    bool_0 = immutable_list_3.__eq__(immutable_list_0)
    bool_1 = immutable_list_2.__eq__(immutable_list_1)
    var_2 = immutable_list_3.to_list()
    immutable_list_4 = immutable_list_3.__add__(immutable_list_3)
    var_3 = immutable_list_4.find(bool_0)
    bool_2 = var_2.__eq__(immutable_list_3)
    immutable_list_2.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    var_0 = immutable_list_2.reduce(immutable_list_0, immutable_list_1)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(var_1)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    str_0 = var_0.__str__()


def test_case_14():
    none_type_0 = None
    str_0 = "\n"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_1.reduce(none_type_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_2.find(immutable_list_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    var_1 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    immutable_list_2 = var_1.unshift(var_1)
    bool_0 = immutable_list_2.__eq__(immutable_list_0)
    immutable_list_2.find(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2.find(immutable_list_1)


def test_case_22():
    none_type_0 = None
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(none_type_0, none_type_0)
