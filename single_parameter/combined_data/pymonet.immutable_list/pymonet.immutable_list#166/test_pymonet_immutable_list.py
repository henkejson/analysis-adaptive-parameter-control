# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_3 = module_0.ImmutableList()
    bool_0 = immutable_list_3.__eq__(immutable_list_3)
    str_0 = immutable_list_3.__str__()


def test_case_1():
    int_0 = -178
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(int_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.map(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    bytes_0 = b"\x1eD\x06\x9a\x16\xb4\xad9\xea\xbc\xf2\xbcm_"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_0.__add__(bytes_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.find(var_1)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_1.find(immutable_list_0)


def test_case_6():
    dict_0 = {}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(dict_0, is_empty=none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(dict_0)


def test_case_7():
    complex_0 = 1973.293 + 512j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0)
    immutable_list_0.to_list()


def test_case_8():
    int_0 = -2845
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(int_0)


def test_case_9():
    bytes_0 = b"\xa5\r\xb4\x9d\xa8"
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1)
    immutable_list_1 = module_0.ImmutableList(none_type_1)
    bool_0 = False
    immutable_list_2 = module_0.ImmutableList(none_type_1, is_empty=bool_0)
    immutable_list_3 = immutable_list_0.append(none_type_0)
    immutable_list_4 = module_0.ImmutableList(bytes_0, immutable_list_3)
    immutable_list_4.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(dict_0, is_empty=none_type_0)
    immutable_list_0.find(dict_0)


def test_case_13():
    bool_0 = False
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    var_0 = immutable_list_0.reduce(bool_0, bool_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_3 = immutable_list_2.append(none_type_0)
    immutable_list_4 = immutable_list_2.unshift(none_type_0)
    immutable_list_5 = immutable_list_2.append(immutable_list_0)
    bool_1 = immutable_list_2.__eq__(none_type_0)
    float_0 = 1863.0
    bool_2 = immutable_list_2.__eq__(float_0)
    tuple_0 = (float_0, immutable_list_3)
    immutable_list_6 = immutable_list_3.unshift(tuple_0)
    immutable_list_7 = immutable_list_2.__add__(immutable_list_4)
    var_0 = immutable_list_2.__len__()
    var_1 = immutable_list_1.find(immutable_list_3)
    bytes_0 = b"\xf9?o\xee\x826\xc9\xc2d\xf8\xee\xebg\x99,\t"
    immutable_list_6.reduce(var_1, bytes_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    str_0 = immutable_list_0.__str__()
    str_1 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_2 = immutable_list_0.__str__()
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = immutable_list_1.unshift(str_0)
    immutable_list_3 = module_0.ImmutableList(tail=str_2)
    immutable_list_2.find(str_2)


def test_case_17():
    complex_0 = 3065.96545 + 296.03j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    bool_0 = immutable_list_0.__eq__(complex_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.reduce(var_0, none_type_0)
    immutable_list_0.reduce(var_1, immutable_list_1)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.to_list()


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_3 = module_0.ImmutableList()
    bool_0 = immutable_list_3.__eq__(immutable_list_3)
    var_0 = immutable_list_0.__add__(immutable_list_3)
    immutable_list_1.filter(var_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0, none_type_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.find(immutable_list_1)
