# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)


def test_case_2():
    float_0 = 111.3
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.__add__(float_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_4():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(str_0)


def test_case_6():
    str_0 = ")WUU~rRj6'k"
    generic_0 = module_1.Generic()
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(generic_0)
    var_0 = immutable_list_1.to_list()
    var_0.find(str_0)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.map(var_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bytes_0 = b""
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_10():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(generic_0, is_empty=generic_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    bytes_0 = b"oI\xca\x05\x92\xe2\r(\xffj\xa3\xa1\x87\xd0~\xf1A\xaf\x87\xfa"
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_2 = module_0.ImmutableList(bytes_0)
    immutable_list_2.find(bytes_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__len__()
    immutable_list_1.find(bool_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(bool_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    bool_1 = var_0.__eq__(immutable_list_2)
    none_type_0 = None
    immutable_list_2.reduce(immutable_list_0, none_type_0)


def test_case_18():
    complex_0 = 633 + 62.700177j
    set_0 = {complex_0, complex_0}
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    immutable_list_0.filter(set_0)


def test_case_19():
    bytes_0 = b""
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_1.__add__(immutable_list_2)
    str_0 = immutable_list_3.__str__()
    bool_0 = immutable_list_1.__eq__(immutable_list_3)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    bool_1 = True
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_1 = immutable_list_0.find(bool_0)
    var_2 = immutable_list_0.reduce(var_1, immutable_list_0)
    bool_2 = var_0.__eq__(bool_1)
    immutable_list_2 = var_2.__add__(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList(bool_1)
    immutable_list_2.map(immutable_list_2)
