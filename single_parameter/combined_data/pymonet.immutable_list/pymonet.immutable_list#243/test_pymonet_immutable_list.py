# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    str_0 = var_0.__str__()


def test_case_1():
    bytes_0 = b"\x10SV\x82\xb6\xf0>\x9e\xea>\x812\xa3\xd3\xc6.\xcf\xe2\x92["
    list_0 = [bytes_0, bytes_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_3():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(is_empty=set_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.__add__(set_0)


def test_case_4():
    tuple_0 = ()
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.to_list()
    immutable_list_0.filter(immutable_list_1)


def test_case_6():
    object_0 = module_1.object()
    float_0 = -1216.269
    list_0 = [float_0, float_0]
    immutable_list_0 = module_0.ImmutableList(tail=list_0, is_empty=list_0)
    immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(is_empty=immutable_list_0)
    str_0 = immutable_list_1.__str__()
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1.map(immutable_list_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_2.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bytes_0 = b"U\xe2\xf8\xde;1\n\x8cz~\x08\x85\x9f8"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    tuple_0 = ()
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_1)


def test_case_14():
    bytes_0 = b"M\x9ei\x84u\x0f\x11\xfa\xb8"
    bool_0 = False
    set_0 = {bytes_0, bool_0, bytes_0, bool_0}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=set_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(set_0)
    immutable_list_2.reduce(none_type_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = module_0.ImmutableList()
    str_0 = var_1.__str__()


def test_case_17():
    tuple_0 = ()
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=bool_0)
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(var_0)


def test_case_18():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=tuple_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.find(tuple_0)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_0.find(immutable_list_1)


def test_case_20():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_1 = var_0.__len__()
    immutable_list_1.find(var_1)


def test_case_22():
    str_0 = "4r;hHJgMJ\\{@t@_V="
    list_0 = [str_0, str_0]
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(list_0, is_empty=bool_0)
    immutable_list_0.reduce(bool_0, immutable_list_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    none_type_0 = None
    var_1 = immutable_list_0.find(none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = module_0.ImmutableList(immutable_list_0)
    var_2 = immutable_list_0.reduce(var_1, none_type_0)
    immutable_list_3 = immutable_list_0.unshift(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_3)
    immutable_list_0.map(immutable_list_0)


def test_case_24():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(none_type_0)
    str_0 = immutable_list_2.__str__()
    none_type_1 = None
    immutable_list_3 = module_0.ImmutableList(none_type_1)
    none_type_2 = None
    immutable_list_4 = module_0.ImmutableList(tail=none_type_2, is_empty=none_type_2)
    immutable_list_5 = immutable_list_4.append(none_type_2)
    immutable_list_6 = immutable_list_5.unshift(none_type_2)
    var_0 = immutable_list_6.__len__()
    immutable_list_7 = immutable_list_6.__add__(immutable_list_4)
    bool_1 = immutable_list_5.__eq__(immutable_list_7)
    var_1 = immutable_list_4.to_list()
    immutable_list_6.filter(var_1)
