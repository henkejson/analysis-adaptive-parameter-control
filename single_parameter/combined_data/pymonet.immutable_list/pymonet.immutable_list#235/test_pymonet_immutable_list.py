# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_1():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    float_0 = -1467.9
    bool_0 = immutable_list_0.__eq__(float_0)
    immutable_list_0.find(object_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)


def test_case_3():
    tuple_0 = ()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.__add__(tuple_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)


def test_case_7():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_1 = immutable_list_0.append(object_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.find(var_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = True
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_0.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    list_0 = [immutable_list_0, immutable_list_0, immutable_list_0]
    bool_0 = False
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_2.map(list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    float_0 = 1582.4
    list_0 = [float_0]
    immutable_list_0 = module_0.ImmutableList(tail=list_0)
    immutable_list_0.filter(none_type_0)


def test_case_12():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_0.find(object_0)


def test_case_13():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    tuple_0 = ()
    list_1 = [tuple_0, tuple_0]
    immutable_list_0 = module_0.ImmutableList(is_empty=list_1)
    var_0 = immutable_list_0.reduce(list_0, list_0)
    none_type_0 = None
    str_0 = "\n    Return increased by 1 argument.\n\n    :param value:\n    :type value: Int\n    :returns:\n    :rtype: Int\n    "
    immutable_list_1 = module_0.ImmutableList(str_0)
    immutable_list_1.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(bool_0)


def test_case_16():
    str_0 = "?)Lem\\;K$^=/c:2be@"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(str_0)


def test_case_17():
    bytes_0 = b"\xdf\x05\xc0\xf9\x88I\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_2 = immutable_list_1.append(bytes_0)
    immutable_list_0.find(immutable_list_2)


def test_case_18():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(var_0)
    immutable_list_2 = var_0.append(var_0)
    var_1 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_1)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_1.find(bool_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.map(immutable_list_0)


def test_case_21():
    str_0 = "U@UZjHhJnO!*Cl xF}*"
    int_0 = 595
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_1.reduce(str_0, str_0)


def test_case_22():
    complex_0 = 765 - 1028.463j
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(complex_0, complex_0)
    immutable_list_2 = immutable_list_1.unshift(complex_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
