# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bytes_0 = b"fE@\xf9\xed\xcbg\x01gu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_1():
    int_0 = 955
    immutable_list_0 = module_0.ImmutableList(int_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_0.find(int_0)


def test_case_2():
    bytes_0 = b"f@\xf9\xed\xcbggu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.unshift(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_3():
    str_0 = "\n        Return resolved Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: resolved Task\n        :rtype: Task[Function(_, resolve) -> A]\n        "
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.__add__(str_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bytes_0 = b"fE@\xf9\xed\xcbg\x01gu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(is_empty=str_0)


def test_case_7():
    bytes_0 = b"fE@\xf9\xed\xcbg\x01gu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.find(bytes_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.reduce(var_1, immutable_list_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_3 = immutable_list_0.to_list()
    var_4 = immutable_list_0.find(immutable_list_0)
    var_5 = immutable_list_0.reduce(var_3, var_3)
    immutable_list_0.map(var_4)


def test_case_9():
    str_0 = "6[\x0bNV_{1"
    immutable_list_0 = module_0.ImmutableList(tail=str_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.map(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.__len__()
    bool_0 = var_0.__eq__(var_1)
    immutable_list_1 = var_0.append(var_1)
    immutable_list_2 = immutable_list_1.append(var_1)
    str_0 = immutable_list_2.__str__()
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    bytes_0 = b"fE@\xf9\xed\xcbg\x01gu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    str_0 = var_0.reduce(var_0, var_0)
    immutable_list_0.filter(bool_0)


def test_case_15():
    bytes_0 = b'\x0e\xc2\t\x1a\x9e\x19"\xab)\xf3\xaf\xed\xab\x04'
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(bytes_0)
    bool_1 = True
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(var_0, immutable_list_0, bool_1)
    immutable_list_2 = immutable_list_1.append(bytes_0)
    immutable_list_1.reduce(immutable_list_0, var_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bytes_0 = b"fE@\xf9\xed\xcbg\x01gu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, immutable_list_0, immutable_list_0
    )
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_2.find(immutable_list_1)


def test_case_19():
    int_0 = 955
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    var_0 = immutable_list_1.__len__()
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_0.find(int_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0)
    immutable_list_0.reduce(bool_0, bool_0)


def test_case_21():
    int_0 = 955
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(none_type_0)
    immutable_list_0.find(int_0)


def test_case_22():
    bytes_0 = b"f@\xf9\xed\xcbggu\xc5\xd0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_0.find(bytes_0)
