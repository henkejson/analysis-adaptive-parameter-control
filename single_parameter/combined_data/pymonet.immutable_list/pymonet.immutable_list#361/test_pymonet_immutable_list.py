# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)


def test_case_3():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = True
    set_0 = {int_0, int_0, bool_0}
    var_0 = immutable_list_0.__len__()
    bool_1 = var_0.__eq__(set_0)
    bool_2 = var_0.__eq__(set_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=set_0)
    complex_0 = -2632.144 - 39.074j
    immutable_list_2 = module_0.ImmutableList(is_empty=complex_0)
    immutable_list_2.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_1.__str__()
    var_1 = immutable_list_1.__len__()
    var_2 = immutable_list_1.to_list()
    immutable_list_1.filter(var_1)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = var_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_2 = immutable_list_1.to_list()
    immutable_list_1.map(immutable_list_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.map(var_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bytes_0 = b"\xcdp\xa3\xcd\xde=(\xed\xce\x0fp\x98\r\r"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=bytes_0)
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = var_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    list_0 = []
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=list_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_1.to_list()
    str_0 = var_0.__str__()
    immutable_list_2 = immutable_list_1.append(str_0)
    immutable_list_2.reduce(none_type_0, none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    bool_0 = True
    list_0 = [bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    str_0 = immutable_list_0.__str__()


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    bool_0 = True
    list_0 = [bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    none_type_1 = None
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(immutable_list_0, is_empty=none_type_1)
    immutable_list_2.find(bool_1)


def test_case_18():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(generic_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_0.find(list_0)


def test_case_21():
    none_type_0 = None
    float_0 = 2429.7
    none_type_1 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(float_0)
    bool_1 = immutable_list_1.__eq__(none_type_0)
    none_type_2 = None
    complex_0 = -240.9989 + 288.2438j
    immutable_list_2 = module_0.ImmutableList(complex_0)
    immutable_list_2.reduce(immutable_list_1, none_type_2)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, bool_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    none_type_1 = None
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(immutable_list_0, is_empty=none_type_1)
    immutable_list_2.find(bool_1)
