# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    none_type_0 = None
    immutable_list_1.find(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=bool_0)
    immutable_list_2 = module_0.ImmutableList()
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(none_type_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__len__()


def test_case_5():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(bytes_0, bytes_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()


def test_case_7():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_2.map(immutable_list_2)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.find(none_type_0)
    var_0.__len__()


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_1.find(var_0)


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(var_0, var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_17():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_2.find(var_0)


def test_case_18():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    bool_0 = var_0.__eq__(var_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_3 = immutable_list_0.unshift(bytes_0)
    immutable_list_3.find(var_0)


def test_case_19():
    bool_0 = False
    str_0 = "\nzSCJu')}miI\x0c\t"
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=str_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(bool_0)


def test_case_20():
    str_0 = "$'%8|$*T@Ao'YW-07j1-"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, none_type_0, immutable_list_0
    )
    immutable_list_1.find(str_0)


def test_case_21():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    bool_0 = var_0.__eq__(var_0)
    var_1 = var_0.reduce(var_0, immutable_list_0)
    var_2 = var_0.__len__()
    var_3 = immutable_list_0.find(var_2)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.filter(var_1)


def test_case_22():
    bytes_0 = b"D\x1a\xbf\x86}\xee1\x1a]q\xf1l~0\xd2!"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    bool_0 = var_0.__eq__(var_0)
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.find(var_1)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.reduce(var_1, var_2)


def test_case_23():
    bytes_0 = b"\x14\xcd>\xc7\x08\x8bb`\x9e'ZH\xd0\xf0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_1)
