# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    object_0 = module_1.object()
    immutable_list_0.__add__(object_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_0.__len__()


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_5():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_7():
    complex_0 = -1203.31 - 685.184j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    bool_0 = set_0.__eq__(complex_0)
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = False
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_1)
    bool_2 = immutable_list_0.__eq__(bool_1)
    immutable_list_1.map(complex_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.__len__()


def test_case_12():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(int_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = var_0.reduce(var_0, immutable_list_0)
    var_2 = var_0.__len__()
    var_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    int_0 = 4329
    var_1 = immutable_list_1.to_list()
    set_0 = {int_0, int_0}
    immutable_list_2 = module_0.ImmutableList(is_empty=set_0)
    immutable_list_3 = module_0.ImmutableList(immutable_list_2)
    immutable_list_3.reduce(var_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(var_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_19():
    int_0 = 2336
    tuple_0 = (int_0,)
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(tuple_0)
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_3.to_list()
    immutable_list_2.reduce(var_0, none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    int_0 = 2336
    tuple_0 = (int_0,)
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(tuple_0)
    var_0 = module_0.ImmutableList()
    var_1 = var_0.__len__()
    var_1.find(var_1)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    bool_1 = var_0.__eq__(immutable_list_1)
    var_1 = immutable_list_1.to_list()
    var_2 = immutable_list_0.reduce(immutable_list_0, var_0)
    var_3 = immutable_list_1.to_list()
    var_4 = immutable_list_1.find(var_2)
    var_2.filter(var_1)


def test_case_23():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_1.to_list()
    immutable_list_1.find(var_1)
