# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    set_0 = set()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(set_0)
    generic_0 = module_1.Generic()


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = True
    list_0 = [bool_1, bool_1]
    bytes_0 = b"?)\xd7\x0b\xfc\x87S\xfd\x9d\x9a\xb3\x02\xce\x19ew\xf6\xfa\xb2\xfa"
    tuple_0 = (bool_1, list_0, bytes_0)
    bool_2 = False
    immutable_list_1 = module_0.ImmutableList(tuple_0, is_empty=bool_2)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    var_0 = immutable_list_2.__len__()
    bytes_1 = b"\x91\xee&\x1c\xcc\x8a\x01gi\xf1\x80\xf8"
    immutable_list_3 = module_0.ImmutableList(is_empty=bytes_1)
    immutable_list_4 = immutable_list_3.unshift(tuple_0)
    immutable_list_4.__add__(bool_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = var_0.__str__()
    immutable_list_1 = var_0.append(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    var_2 = immutable_list_0.find(var_1)
    var_3 = immutable_list_0.__len__()
    var_3.__len__()


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bytes_0 = b"\xc0\xaa\\iZl\x15\xaft\xb8]U\xc2\xe5+n\xac\x16"
    immutable_list_0.reduce(bool_0, bytes_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    str_0 = var_0.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    bytes_0 = b"\xafu\x8fI\x1f\xad"
    str_0 = "T^P9em)"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    bool_1 = var_0.__eq__(bytes_0)
    immutable_list_1 = module_0.ImmutableList(str_0)
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    none_type_0 = None
    immutable_list_2.reduce(bytes_0, none_type_0)


def test_case_20():
    str_0 = "tF^5"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_1.map(str_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(str_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_1)
    immutable_list_2 = immutable_list_0.append(immutable_list_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    str_0 = immutable_list_2.__str__()
    none_type_0 = None
    immutable_list_1.find(none_type_0)
