# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    complex_0 = -2225 - 5212.9j
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(complex_0)


def test_case_3():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_8():
    none_type_0 = None
    int_0 = 2897
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=int_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    immutable_list_2.map(immutable_list_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(generic_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    generic_0 = module_1.Generic()
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(generic_0)
    str_0 = immutable_list_1.__str__()
    tuple_0 = ()
    var_0 = immutable_list_0.reduce(tuple_0, tuple_0)
    immutable_list_1.reduce(var_0, var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_2.find(immutable_list_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    dict_0 = {}
    object_0 = module_2.object(**dict_0)
    immutable_list_0 = module_0.ImmutableList(dict_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(object_0)
    var_1 = immutable_list_1.to_list()


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    str_0 = "(nW_=:NIYng"
    immutable_list_1 = module_0.ImmutableList(str_0)
    immutable_list_2 = immutable_list_1.unshift(str_0)
    str_1 = immutable_list_1.__str__()
    immutable_list_1.reduce(immutable_list_1, immutable_list_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_2 = var_0.__add__(var_0)
    bool_0 = immutable_list_2.__eq__(var_0)
    immutable_list_1.find(bool_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(str_0)
    immutable_list_1.filter(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    str_0 = "?9D\\^*.^C\x0c>Z\x0c}p"
    bytes_0 = b"xi\x9a\x8a\xba\x8bt\x0b"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(str_0)
