# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(none_type_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(none_type_0)


def test_case_2():
    bytes_0 = b"\xd6\x81\x13\xf6F\x07\xd0yP\x04\xe2e\xca\x85\xbd0"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(none_type_0)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    int_0 = 755
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(int_0)
    var_0 = immutable_list_1.to_list()
    str_0 = var_0.__str__()


def test_case_8():
    str_0 = "8\x0c6\"II Cn'M"
    list_0 = [str_0, str_0, str_0]
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(list_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1.map(var_0)


def test_case_9():
    dict_0 = {}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    bool_0 = immutable_list_0.__eq__(dict_0)
    bool_1 = immutable_list_1.__eq__(bool_0)
    immutable_list_2 = module_0.ImmutableList(tail=bool_1)
    immutable_list_2.map(immutable_list_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1, none_type_1)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    var_0 = immutable_list_1.to_list()
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_1)
    immutable_list_1.find(none_type_0)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_14():
    none_type_0 = None
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, none_type_0)
    immutable_list_1.find(var_0)


def test_case_15():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1, none_type_1)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    immutable_list_1.reduce(none_type_0, none_type_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(none_type_0)


def test_case_18():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    bool_0 = True
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=generic_0)
    immutable_list_0.reduce(bool_0, bool_0)


def test_case_21():
    dict_0 = {}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_1.find(immutable_list_0)


def test_case_22():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.__len__()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    str_1 = immutable_list_1.__str__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(str_0)


def test_case_23():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)
