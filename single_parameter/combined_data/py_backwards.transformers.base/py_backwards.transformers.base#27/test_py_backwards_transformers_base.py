# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    name_0 = module_0.Name()
    base_node_transformer_0 = module_1.BaseNodeTransformer(name_0)


def test_case_1():
    str_0 = "\rb t+Gv=QX"
    dict_0 = {str_0: str_0}
    import_from_0 = module_0.ImportFrom(*dict_0, **dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = "-\x0bG)YZ*y?K"
    none_type_0 = None
    var_0 = module_2.iter_child_nodes(none_type_0)
    str_1 = "body"
    str_2 = ";kCW(iry"
    dict_0 = {str_0: str_0, str_0: var_0, str_1: none_type_0, str_2: str_0}
    is_0 = module_0.Is(**dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(is_0)
    slice_0 = module_0.Slice()
    list_0 = [none_type_0, slice_0]
    str_3 = "\rb t+Gv=QX"
    dict_1 = {str_3: str_3}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_1)
    base_import_rewrite_1 = module_1.BaseImportRewrite(slice_0)
    base_import_rewrite_1.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "c"
    list_0 = [str_0, str_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    str_0 = ""
    list_0 = [str_0, str_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
