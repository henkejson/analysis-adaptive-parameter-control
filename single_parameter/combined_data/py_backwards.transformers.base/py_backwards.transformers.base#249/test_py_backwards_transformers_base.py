# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    unary_op_0 = module_0.UnaryOp()
    base_node_transformer_0 = module_1.BaseNodeTransformer(unary_op_0)


def test_case_1():
    pass_0 = module_0.Pass()
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "pathlib2"
    str_1 = "o.L#;h?81k}.1Y1D"
    dict_0 = {str_0: list_0, str_0: pass_0, str_1: list_0}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    bit_or_0 = module_0.BitOr()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bit_or_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    pass_0 = module_0.Pass()
    base_import_rewrite_0 = module_1.BaseImportRewrite(pass_0)
    list_0 = [pass_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "o.L#;h?81k}.1Y1D"
    list_0 = [str_0, str_0, str_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    pass_0 = module_0.Pass()
    var_0 = module_2.iter_fields(pass_0)
    list_0 = [var_0, var_0, var_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(var_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
