# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    async_with_0 = module_1.AsyncWith()
    base_import_rewrite_0 = module_0.BaseImportRewrite(async_with_0)
    list_0 = [base_import_rewrite_0, async_with_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    async_with_0 = module_1.AsyncWith()
    base_import_rewrite_0 = module_0.BaseImportRewrite(async_with_0)
    list_0 = [base_import_rewrite_0, async_with_0]
    base_node_transformer_0 = module_0.BaseNodeTransformer(async_with_0)
    str_0 = "\x0b?m+t0M?2s=[|*vnP"
    dict_0 = {str_0: str_0}
    base_node_transformer_1 = module_0.BaseNodeTransformer(base_import_rewrite_0)
    base_node_transformer_2 = module_0.BaseNodeTransformer(list_0)
    none_type_0 = None
    list_1 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    async_with_0 = module_1.AsyncWith()
    base_import_rewrite_0 = module_0.BaseImportRewrite(async_with_0)
    str_0 = "Mm4-Eu|.MB\r"
    list_0 = [async_with_0, str_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    async_with_0 = module_1.AsyncWith()
    base_import_rewrite_0 = module_0.BaseImportRewrite(async_with_0)
    var_0 = module_2.iter_child_nodes(async_with_0)
    list_0 = [async_with_0, var_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
