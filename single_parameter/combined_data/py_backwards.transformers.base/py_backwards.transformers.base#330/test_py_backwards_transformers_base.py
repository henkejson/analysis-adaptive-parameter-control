# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_import_rewrite_0 = module_0.BaseImportRewrite(none_type_0)


def test_case_1():
    u_sub_0 = module_1.USub()
    base_import_rewrite_0 = module_0.BaseImportRewrite(u_sub_0)
    list_0 = [u_sub_0, base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    global_0 = module_1.Global()
    var_0 = module_2.walk(global_0)
    list_0 = [var_0, var_0, var_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    dict_0 = {}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    global_0 = module_1.Global()
    var_0 = module_2.iter_child_nodes(global_0)
    list_0 = [var_0, var_0, var_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    dict_0 = {}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    return_0 = module_1.Return()
    base_import_rewrite_0 = module_0.BaseImportRewrite(return_0)
    none_type_0 = None
    base_import_rewrite_1 = module_0.BaseImportRewrite(none_type_0)
    base_import_rewrite_2 = module_0.BaseImportRewrite(none_type_0)
    global_0 = module_1.Global()
    u_sub_0 = module_1.USub()
    var_0 = module_2.walk(global_0)
    list_0 = [none_type_0, base_import_rewrite_0]
    base_import_rewrite_3 = module_0.BaseImportRewrite(var_0)
    str_0 = "tkinter_cons(tants"
    dict_0 = {str_0: var_0}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    comprehension_0 = module_1.comprehension(*var_0)
    base_import_rewrite_3.visit_ImportFrom(import_from_0)
