# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_import_rewrite_0 = module_0.BaseImportRewrite(none_type_0)


def test_case_1():
    assign_0 = module_1.Assign()
    base_import_rewrite_0 = module_0.BaseImportRewrite(assign_0)
    list_0 = [base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    assign_0 = module_1.Assign()
    base_import_rewrite_0 = module_0.BaseImportRewrite(assign_0)
    str_0 = "O}Q|:#`<O@2#"
    none_type_0 = None
    str_1 = "wpu({^&"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    import_from_0 = module_1.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    assign_0 = module_1.Assign()
    str_0 = "OEQ|Cy`<O@2#"
    str_1 = ""
    base_node_transformer_0 = module_0.BaseNodeTransformer(assign_0)
    dict_0 = {
        str_0: base_node_transformer_0,
        str_1: base_node_transformer_0,
        str_0: base_node_transformer_0,
    }
    base_import_rewrite_0 = module_0.BaseImportRewrite(str_0)
    import_from_0 = module_1.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    assign_0 = module_1.Assign()
    base_import_rewrite_0 = module_0.BaseImportRewrite(assign_0)
    none_type_0 = None
    str_0 = ""
    base_node_transformer_0 = module_0.BaseNodeTransformer(assign_0)
    dict_0 = {none_type_0: none_type_0, str_0: none_type_0, none_type_0: none_type_0}
    base_import_rewrite_1 = module_0.BaseImportRewrite(str_0)
    base_import_rewrite_2 = module_0.BaseImportRewrite(base_import_rewrite_0)
    import_from_0 = module_1.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
    module_2.literal_eval(dict_0)
