# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    if_exp_0 = module_0.IfExp()
    base_node_transformer_0 = module_1.BaseNodeTransformer(if_exp_0)


def test_case_1():
    class_def_0 = module_0.ClassDef()
    base_import_rewrite_0 = module_1.BaseImportRewrite(class_def_0)
    list_0 = [base_import_rewrite_0, class_def_0, class_def_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    class_def_0 = module_0.ClassDef()
    none_type_0 = None
    base_import_rewrite_0 = module_1.BaseImportRewrite(none_type_0)
    list_0 = [none_type_0, base_import_rewrite_0, class_def_0]
    str_0 = "9#d%7~p>S0r"
    str_1 = "qnnv^e"
    dict_0 = {
        str_0: class_def_0,
        str_0: class_def_0,
        str_1: base_import_rewrite_0,
        str_1: base_import_rewrite_0,
        str_0: str_0,
    }
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    class_def_0 = module_0.ClassDef()
    base_import_rewrite_0 = module_1.BaseImportRewrite(class_def_0)
    var_0 = module_2.walk(class_def_0)
    list_0 = [base_import_rewrite_0, var_0, class_def_0]
    str_0 = " p4#`nld(+R"
    dict_0 = {
        str_0: class_def_0,
        str_0: class_def_0,
        str_0: base_import_rewrite_0,
        str_0: var_0,
        str_0: var_0,
    }
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    class_def_0 = module_0.ClassDef()
    base_import_rewrite_0 = module_1.BaseImportRewrite(class_def_0)
    var_0 = module_2.iter_fields(class_def_0)
    list_0 = [base_import_rewrite_0, var_0, class_def_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
