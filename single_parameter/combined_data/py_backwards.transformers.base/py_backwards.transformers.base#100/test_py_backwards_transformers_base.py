# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    none_type_0 = None
    module_0.fix_missing_locations(none_type_0)


def test_case_1():
    none_type_0 = None
    base_node_transformer_0 = module_1.BaseNodeTransformer(none_type_0)


def test_case_2():
    yield_from_0 = module_2.YieldFrom()
    base_import_rewrite_0 = module_1.BaseImportRewrite(yield_from_0)
    list_0 = [yield_from_0, base_import_rewrite_0, yield_from_0]
    dict_0 = {}
    import_from_0 = module_2.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    yield_from_0 = module_2.YieldFrom()
    none_type_0 = None
    base_import_rewrite_0 = module_1.BaseImportRewrite(none_type_0)
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_2.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    yield_from_0 = module_2.YieldFrom()
    base_import_rewrite_0 = module_1.BaseImportRewrite(yield_from_0)
    str_0 = "z"
    none_type_0 = None
    str_1 = "hT8&hUW"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    import_from_0 = module_2.ImportFrom(*dict_0, **dict_0)
    base_node_transformer_0 = module_1.BaseNodeTransformer(none_type_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_5():
    yield_from_0 = module_2.YieldFrom()
    base_import_rewrite_0 = module_1.BaseImportRewrite(yield_from_0)
    var_0 = module_0.iter_fields(yield_from_0)
    list_0 = [yield_from_0, var_0, yield_from_0]
    dict_0 = {}
    import_from_0 = module_2.ImportFrom(*list_0, **dict_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
