# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bool_0 = True
    base_import_rewrite_0 = module_0.BaseImportRewrite(bool_0)


def test_case_1():
    unaryop_0 = module_1.unaryop()
    base_import_rewrite_0 = module_0.BaseImportRewrite(unaryop_0)
    list_0 = [base_import_rewrite_0, unaryop_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = "Qv\rM3pd'X"
    base_node_transformer_0 = module_0.BaseNodeTransformer(str_0)
    unaryop_0 = module_1.unaryop()
    base_import_rewrite_0 = module_0.BaseImportRewrite(unaryop_0)
    none_type_0 = None
    list_0 = [none_type_0]
    base_import_rewrite_1 = module_0.BaseImportRewrite(unaryop_0)
    str_1 = "email_mime_base"
    str_2 = "urllib.response"
    str_3 = "Compiles:\n        class A(metaclass=B):\n            pass\n    To:\n        class A(_py_backwards_six_with_metaclass(B))\n    \n    "
    dict_0 = {str_1: unaryop_0, str_2: str_2, str_3: str_1}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "Qv\rM3pd'X"
    base_import_rewrite_0 = module_0.BaseImportRewrite(str_0)
    list_0 = [base_import_rewrite_0, str_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    str_0 = ""
    base_import_rewrite_0 = module_0.BaseImportRewrite(str_0)
    list_0 = [base_import_rewrite_0, str_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
