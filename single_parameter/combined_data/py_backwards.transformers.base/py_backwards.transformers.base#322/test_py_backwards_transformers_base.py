# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import typed_ast.ast3 as module_1
import py_backwards.transformers.base as module_2


def test_case_0():
    param_0 = module_0.Param()
    module_1.get_docstring(param_0, param_0)


def test_case_1():
    none_type_0 = None
    base_node_transformer_0 = module_2.BaseNodeTransformer(none_type_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    base_import_rewrite_0 = module_2.BaseImportRewrite(list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    list_0 = []
    return_0 = module_0.Return(*list_0)
    str_0 = "'>s"
    str_1 = 'E`*<]Go\x0b"4owl/IW'
    str_2 = "Kk9#C="
    dict_0 = {str_1: str_0, str_0: return_0, str_0: str_1, str_2: list_0}
    import_from_0 = module_0.ImportFrom(*str_0, **dict_0)
    base_node_transformer_0 = module_2.BaseNodeTransformer(str_2)
    base_node_transformer_1 = module_2.BaseNodeTransformer(base_node_transformer_0)
    base_import_rewrite_0 = module_2.BaseImportRewrite(str_2)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    list_0 = []
    return_0 = module_0.Return(*list_0)
    none_type_0 = None
    base_import_rewrite_0 = module_2.BaseImportRewrite(return_0)
    list_1 = [none_type_0]
    dict_0 = {}
    import_from_0 = module_0.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
