# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 1720
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [dict_0, dict_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "Rn-7Hi<\t:G_U;.4UnM"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "run"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    list_0 = []
    dict_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\xa3}\x9e"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "The given 'identifier' must be a 'str'.  Got: %r"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {var_1: var_1, var_1: var_1, var_1: var_1}
    list_0 = [dict_1, dict_1, var_1]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_0)
    list_1 = []
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "\x0bverion"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    int_0 = 1720
    list_1 = [int_0]
    var_2 = module_0.to_namedtuple(list_1)
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_3 = module_0.to_namedtuple(var_2)
    list_2 = [dict_1, dict_1, int_0]
    var_4 = module_0.to_namedtuple(list_2)
    var_5 = module_0.to_namedtuple(list_1)
    var_6 = module_0.to_namedtuple(dict_1)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(var_4)
    var_10 = module_0.to_namedtuple(var_1)
    var_11 = module_0.to_namedtuple(var_5)
    var_12 = module_0.to_namedtuple(var_9)
    tuple_0 = (var_5,)
    var_13 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict(*var_10)
    var_14 = module_0.to_namedtuple(var_3)
    module_1.namedtuple(var_12, var_5, rename=var_14, module=var_3)
