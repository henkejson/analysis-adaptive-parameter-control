# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 3232
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    int_0 = -1666
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "%sb%s"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"rVu\x9b\xe7\xd5\xde5\xc3"
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "normalize_path"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    int_0 = 1510
    bytes_0 = b""
    dict_0 = {int_0: bytes_0, bytes_0: int_0}
    bool_0 = False
    bool_1 = False
    tuple_0 = (dict_0, bool_0, bool_0, bool_1)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "\x0c4C5 \n1vP<QP?qJR@kl|"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    int_0 = 1506
    bytes_0 = b".]"
    dict_1 = {int_0: bytes_0}
    bool_1 = False
    tuple_1 = (dict_1, bool_1, bool_1, bool_1)
    var_1 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(bytes_0)


def test_case_13():
    none_type_0 = None
    str_0 = "B\n"
    str_1 = "8,r\rg'$V*v4*"
    dict_0 = {str_0: str_0, str_0: none_type_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(none_type_0)
