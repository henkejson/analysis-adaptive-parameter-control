# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    set_0 = set()
    str_0 = "P_Nict__"
    dict_0 = {str_0: set_0, str_0: str_0, str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "g\\d^p6\r8xJ"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    complex_0 = -10 + 1423.4j
    dict_0 = {complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    set_0 = set()
    list_0 = [set_0]
    tuple_0 = ()
    str_0 = "__dict__"
    dict_0 = {str_0: list_0, str_0: tuple_0, str_0: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_1 = (list_0, tuple_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bytes_0 = b"\x03U\xa6#\xa5\xd2\xb4\xaf\xb5\xd5\xa2u\xc8"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "FV\t"
    bytes_0 = b"\x8f]>\x99\xaa\x01\x17"
    tuple_0 = (str_0, str_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    list_0 = [bool_0]
    var_1 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    set_0 = set()
    list_0 = [set_0]
    tuple_0 = ()
    str_0 = "\x0bHqW"
    bool_0 = False
    ordered_dict_0 = module_1.OrderedDict()
    tuple_1 = (bool_0, ordered_dict_0, set_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    dict_0 = {str_0: list_0, str_0: tuple_0, str_0: set_0}
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    complex_0 = -4933.19358 - 129.79497j
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(dict_0)
    dict_1 = {complex_0: complex_0}
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(var_1)
    str_1 = "{IcG,%o!'+J'`wLR*"
    var_9 = module_0.to_namedtuple(var_7)
    var_10 = module_0.to_namedtuple(ordered_dict_0)
    var_11 = module_0.to_namedtuple(dict_1)
    var_12 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)
