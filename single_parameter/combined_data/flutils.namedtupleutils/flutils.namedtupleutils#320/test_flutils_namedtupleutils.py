# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    str_0 = "LL-+Sl0"
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_1}
    tuple_0 = (bool_0, str_0, bool_1, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = [tuple_0, bool_1]
    var_1 = module_0.to_namedtuple(list_0)
    object_0 = module_1.object()


def test_case_2():
    str_0 = "placeholder_len"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "d\r!CjxX.#GHCiW%{{"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "placeholder_len"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "b+z'Ap/H3|"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    int_0 = 229
    bytes_0 = b"\xa4\xe2\x1e\x11?g\x8f"
    set_0 = {int_0, bytes_0}
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, bytes_0: set_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_2.OrderedDict(*var_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "placeholder_len"
    str_1 = "\tk+)2XN\ne~"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = "placeholder_len"
    str_1 = "\tkX2XNe"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_2 = 'PNoV"*7{? Qx<'
    bool_0 = True
    dict_1 = {var_0: var_0, bool_0: bool_0}
    tuple_0 = (var_0, str_2, bool_0, dict_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)
