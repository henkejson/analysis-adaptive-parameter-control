# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 894
    module_0.to_namedtuple(int_0)


def test_case_1():
    bytes_0 = b"\x83\x83WrR\x88<>_;\xbd\xda=\n\\\x1a\xf1#"
    bool_0 = False
    tuple_0 = (bytes_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "D"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"7\x04g="
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    tuple_1 = (tuple_0, dict_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    module_1.namedtuple(dict_0, tuple_1, rename=var_0, module=tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, var_1]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(list_0)
    bytes_0 = b"B\xf5\x1b_\x1c\x86\xc3\xb1"
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {var_1: ordered_dict_0, var_1: var_1, var_1: var_6}
    var_7 = module_0.to_namedtuple(var_1)
    var_8 = module_0.to_namedtuple(var_7)
    var_9 = module_0.to_namedtuple(dict_0)
    var_10 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    tuple_0 = (var_3, ordered_dict_0, var_1, bool_0)
    var_11 = module_0.to_namedtuple(tuple_0)
    var_12 = module_0.to_namedtuple(var_9)
    dict_1 = {bytes_0: var_9, var_8: var_11}
    module_0.to_namedtuple(dict_1)


def test_case_10():
    str_0 = "f[+1M;P:\x0chXW#\t"
    str_1 = "D"
    dict_0 = {str_1: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = " s"
    str_1 = "D"
    dict_0 = {str_1: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    module_1.namedtuple(bool_0, str_1)
