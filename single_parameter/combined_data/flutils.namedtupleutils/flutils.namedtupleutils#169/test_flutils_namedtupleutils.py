# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bytes_0 = b"\xc7_v\x01s\x04\x94\xd5\xebTC\xb2"
    tuple_0 = (bool_0, bool_0, list_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "m"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xa6h\xa5\xa3\xdb8+\xf5\x9d*\xd0\x12\x01\x9f\xad"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"P\xa7\x9a)\x8d\x96\xe3\xa0\x85\x10\x06zU\xd8j\x05"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_0 = "trB?4MK2"
    module_0.to_namedtuple(str_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    int_0 = -1122
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    str_0 = "trB?4MK2"
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [var_2, str_0, var_1]
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(var_4)
    none_type_0 = None
    ordered_dict_1 = module_1.OrderedDict()
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_2)
    module_1.namedtuple(var_4, none_type_0, rename=none_type_0, defaults=none_type_0)


def test_case_11():
    str_0 = " substituted in sys.modules during a lazy load"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_1)
    bytes_0 = b"M\n\x06M\x15"
    float_0 = 3603.7975
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    dict_2 = {bytes_0: float_0, float_0: bytes_0, float_0: ordered_dict_0}
    tuple_0 = (bytes_0, float_0, dict_2)
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "D "
    dict_0 = {str_0: str_0}
    object_0 = module_2.object()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    module_1.OrderedDict(**var_2)
