# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 448
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "g67G4Ji"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "EAn+"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    complex_0 = 825.355 - 311j
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: ordered_dict_0,
        complex_0: ordered_dict_0,
    }
    tuple_0 = (complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "g67G4:Ji"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "g67G4Ji"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b""
    list_0 = [bytes_0]
    str_0 = "p%$ahem<=c\t@I9\t@"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    float_0 = -555.8961
    tuple_0 = (ordered_dict_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_1 = "g67G4Ji"
    dict_1 = {str_1: str_1, bytes_0: ordered_dict_0}
    list_1 = [dict_1]
    module_0.to_namedtuple(list_1)


def test_case_12():
    bytes_0 = b""
    list_0 = [bytes_0]
    str_0 = "p%$ahem<=c\t@I9\t@"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    float_0 = -555.8961
    tuple_0 = (ordered_dict_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_1 = "g67G4Q\t"
    dict_1 = {str_1: str_1, str_1: str_1}
    list_1 = [dict_1]
    bool_0 = False
    list_2 = [str_0, bool_0, bytes_0]
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(list_2)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(dict_1)
    var_6 = module_0.to_namedtuple(dict_1)
    var_7 = module_0.to_namedtuple(list_1)
    list_3 = [var_3]
    var_8 = module_0.to_namedtuple(list_3)
    var_9 = module_0.to_namedtuple(tuple_0)
    var_10 = module_2.object()
    var_11 = module_0.to_namedtuple(list_1)
    var_12 = module_0.to_namedtuple(var_6)
    var_13 = module_0.to_namedtuple(var_9)
    module_0.to_namedtuple(str_0)
