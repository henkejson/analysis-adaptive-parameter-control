# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_1 = False
    module_1.namedtuple(bool_1, bool_1, rename=bool_1, defaults=bool_1)


def test_case_2():
    str_0 = "a"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: str_0, str_0: ordered_dict_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "+G9"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = -765
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0,)
    tuple_1 = (tuple_0, tuple_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    var_3 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = ")"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"\\\x114\xf6\xe7\x132\xabZ\xb9H"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "2XL"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()
    object_1 = module_2.object()
    var_1 = module_0.to_namedtuple(dict_0)
    list_1 = [object_0]
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(list_1)
    object_2 = module_2.object()
    module_2.object(**dict_0)


def test_case_13():
    str_0 = "\nl2X5L"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()
    object_1 = module_2.object()
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(object_0)
