# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "]S0`&v))uW/"
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "q"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "]S0`&v))uW/"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "The path to the directory that contains the project's ``setup.py``\n    file.\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    dict_1 = {var_0: var_0, var_0: var_0}
    list_0 = [dict_1, dict_0, dict_0]
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_2,)
    var_6 = module_0.to_namedtuple(tuple_0)
    float_0 = -1103.07
    module_0.to_namedtuple(float_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "The path to the directory that contains the project's ``setup.py``\n    file.\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_2.object()
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "\nu6 "
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(str_0, var_2)


def test_case_11():
    bytes_0 = b"\x07\xfcN\x11\xc2J\xce<\xfb\xb8\xe9~\xa0u|Q\x9bK\x174"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
