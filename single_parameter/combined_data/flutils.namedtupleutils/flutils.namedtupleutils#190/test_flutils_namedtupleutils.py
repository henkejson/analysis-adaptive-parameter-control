# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 236.4619
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 4653.7
    dict_0 = {float_0: float_0, float_0: float_0}
    list_0 = []
    list_1 = [dict_0, float_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_2():
    float_0 = -2451.4774
    dict_0 = {float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "f/!{U=];9*1"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "x"
    dict_0 = {str_0: str_0, str_0: ordered_dict_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    float_0 = 4653.7
    dict_0 = {float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    list_0 = [tuple_0, float_0, tuple_0]
    list_1 = []
    list_2 = [dict_0, float_0]
    var_0 = module_0.to_namedtuple(list_2)
    none_type_0 = None
    var_1 = module_0.to_namedtuple(list_1)
    str_0 = "_"
    dict_1 = {str_0: var_1, str_0: str_0, none_type_0: float_0, str_0: list_0}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)


def test_case_12():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xf5\xe0\xca\xa1k\xc5"
    int_0 = -1364
    var_1 = module_0.to_namedtuple(list_0)
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (bytes_0, int_0, int_0, dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    float_0 = 4653.7
    dict_0 = {float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = []
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    none_type_0 = None
    var_3 = module_0.to_namedtuple(list_1)
    str_0 = "yF\x0c"
    dict_1 = {str_0: var_3, float_0: var_0, none_type_0: float_0, str_0: list_0}
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(var_3)
    ordered_dict_0 = module_1.OrderedDict()
    module_0.to_namedtuple(str_0)
