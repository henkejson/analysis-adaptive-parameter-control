# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 1933
    str_0 = "chmod"
    dict_0 = {str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "\tEN&,Duu\\"
    module_0.to_namedtuple(str_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_4():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [tuple_0, set_0, ordered_dict_0, set_0]
    tuple_1 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_5():
    str_0 = ""
    tuple_0 = ()
    set_0 = {tuple_0}
    tuple_1 = (str_0, tuple_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_6():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [tuple_0, set_0, ordered_dict_0, set_0]
    tuple_1 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_1: tuple_0}
    var_2 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(tuple_0, tuple_0)


def test_case_10():
    int_0 = 1933
    str_0 = "\x0cm<F\x0b .{f=@c7/"
    dict_0 = {str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(int_0)


def test_case_11():
    bytes_0 = b"6-\xdfbb,\xf5\xaa%\x03?\xe7:\xd6\xc2\xb9\x97\x0e"
    bool_0 = False
    str_0 = "{XkY5'y9!Xf[b) \t"
    tuple_0 = (str_0,)
    dict_0 = {bytes_0: bool_0, bytes_0: bool_0, tuple_0: str_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = 1952
    str_0 = "\rchmod"
    dict_0 = {int_0: int_0, str_0: int_0, int_0: str_0}
    tuple_0 = (int_0, str_0, dict_0)
    list_0 = [tuple_0, dict_0, int_0]
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    object_0 = module_2.object()
    var_5 = module_0.to_namedtuple(var_3)
    int_1 = 246
    module_0.to_namedtuple(int_1)
