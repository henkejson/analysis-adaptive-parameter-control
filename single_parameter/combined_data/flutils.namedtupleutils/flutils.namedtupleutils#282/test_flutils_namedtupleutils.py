# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 8
    tuple_0 = (list_0, int_0, list_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_2():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "n"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "|>LO$MU"
    module_0.to_namedtuple(str_0)


def test_case_7():
    str_0 = "l"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "The cherry-picking module attribute identifiers as the key. And the\n    value is the module name, which should be the key in ``modules``\n    "
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_1 = "l"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "The cherry-picking module attribute identifiers as the key. And the\n    value is the module name, which should be the key in ``modules``\n    "
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_1 = "M\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    module_2.object(**var_2)


def test_case_13():
    bytes_0 = b"$|\xbf^\xa9"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 2119
    bool_0 = False
    tuple_0 = (dict_0, bytes_0, int_0, bool_0)
    list_0 = []
    tuple_1 = (bytes_0, tuple_0, list_0, int_0)
    module_0.to_namedtuple(tuple_1)
