# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 519
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "b"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "W%OW\x0c3^v,J1%1Ejp"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    tuple_0 = ()
    bytes_0 = b"\x8f\x84*\xae&\xa0\xe0\x96|Z\x1ffJ\x83\x03\xf9\x86(\xd9"
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    bytes_1 = b"eo\x9a=\x94to\xa1\x13\x00\x96\xf1"
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_0)
    dict_0 = {bytes_0: var_1}
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    bytes_2 = b"\xa7N\xbf\x9f\xdfp)&\xe4\xc93U\xd6\x16h\xc4\xe4\xe2\xc8\xc5"
    tuple_1 = (dict_0, bytes_1, object_0, bytes_2)
    module_0.to_namedtuple(tuple_1)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    int_0 = 526
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    dict_0 = {tuple_0: int_0, int_0: bool_0}
    tuple_1 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_9():
    int_0 = 524
    bool_0 = False
    tuple_0 = (int_0, bool_0)
    dict_0 = {tuple_0: int_0, int_0: bool_0}
    tuple_1 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    str_0 = "(,M0w`*ZL9v"
    bool_0 = True
    tuple_0 = (str_0, str_0, str_0, bool_0)
    dict_0 = {bool_0: str_0, tuple_0: str_0, str_0: bool_0}
    tuple_1 = (tuple_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "\tZ0"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_1 = module_0.to_namedtuple(dict_0)
    list_1 = [list_0, list_0, var_1, none_type_0]
    var_2 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(str_0)
