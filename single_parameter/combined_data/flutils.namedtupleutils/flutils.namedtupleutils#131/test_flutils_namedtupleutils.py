# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 4
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 4
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "__attr_map__ must be a tuple containing strings."
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"W.\xf3\xc5\x1e\xa5\x07\xeb\xb4\xad\xa2\x9d';o\xe8"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = 594
    set_0 = {int_0}
    dict_0 = {int_0: set_0}
    tuple_0 = (set_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b"e\xfeY\xc3"
    tuple_0 = (ordered_dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    list_0 = []
    str_0 = "q"
    str_1 = "DWf-s{iB~{iw"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: str_0, str_1: list_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bytes_0 = b"l\r\x81x\xa3\xac"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "len_without_ansi"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_14():
    str_0 = "lXn_withoutvansi\t"
    none_type_0 = None
    str_1 = "$49?%sfOn\x0bbU08m"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(str_1, str_0, module=dict_0)
