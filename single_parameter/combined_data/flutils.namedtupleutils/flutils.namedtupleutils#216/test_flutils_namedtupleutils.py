# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -633
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 3
    set_0 = {int_0, int_0}
    list_0 = [set_0, set_0, set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x18\xe8IS+\x1b,v&"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "A"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    tuple_0 = ()
    bytes_0 = b"\xe6Ftcb1\xa9"
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: tuple_0, bytes_0: tuple_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "o Vm?D<i:wvjb}VH79OX"
    str_1 = "A"
    dict_0 = {str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "\rEpend"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (str_0, dict_0, str_0, str_0)
    list_0 = [tuple_0, tuple_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_0)
    module_1.OrderedDict(**var_2)
