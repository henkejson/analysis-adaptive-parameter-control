# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (set_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "y'W^*os"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_3():
    str_0 = "1+>h\rG/LW_P\x0b\ntx*dJ"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 3420
    var_5 = module_0.to_namedtuple(var_2)
    list_0 = [ordered_dict_0, int_0]
    var_6 = module_0.to_namedtuple(var_0)
    dict_0 = {int_0: ordered_dict_0, int_0: list_0}
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(ordered_dict_0)
    var_9 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_6():
    str_0 = "JxE')Ck&HaQ"
    int_0 = 8
    dict_0 = {str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)


def test_case_7():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "y'W^*os"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b""
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "fTYmn\x0c"
    int_0 = 8
    dict_0 = {str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_0 = b"\x99t\x18\xa9\xf9Q\xe5\xe82\xd8\xb8IZ\x9aI\x9c\xd7h\x87"
    tuple_0 = (ordered_dict_0, bytes_0)
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_1 = -4566
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    bytes_1 = b"\xcfUd\xcc,\x0f\xa5\r\xa9\xdd\xa4\xe7\xcc\xf5\x10\x9f~\xd5"
    bool_0 = False
    tuple_1 = (var_3, bytes_1, int_1, bool_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(var_6)
    module_2.object(**ordered_dict_0)
