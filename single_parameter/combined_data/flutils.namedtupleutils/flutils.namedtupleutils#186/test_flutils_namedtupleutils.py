# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    complex_0 = 3538 - 984j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xc7Nb\xea\x9b\x86\x1e7\xde\x9a"
    list_1 = [bytes_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    str_0 = "d_doc__"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x06x\xd1\x10!"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "d_doc__"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "\\u{:0>4}"
    str_1 = "mYX8Mcxzx\n jA'#Ht"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "__doc__"
    dict_0 = {str_0: str_0}
    object_0 = module_2.object()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(object_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\x05\x9d}S\x84\xadL\xc3\x08\x1d\x92s\xa4s"
    str_0 = " Cannot be a builtin name."
    list_0 = [str_0, str_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(var_8)
    var_10 = module_0.to_namedtuple(var_8)
    var_11 = module_0.to_namedtuple(var_9)
    dict_1 = {var_3: var_10, var_6: var_4}
    var_12 = module_0.to_namedtuple(dict_1)
    var_13 = module_0.to_namedtuple(var_12)
    var_14 = module_0.to_namedtuple(var_2)
    var_15 = module_0.to_namedtuple(var_5)
    var_16 = module_0.to_namedtuple(var_6)
    var_17 = module_0.to_namedtuple(dict_1)


def test_case_13():
    bytes_0 = b"\xa6\xcc\x01`\xe6\xb8\x89\xb0\xb1+W;\x9a\x8e\x8c\x14\xfe"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    str_0 = "dWdHoc_\x0b"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    list_0 = [var_0, var_1, str_0]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_0)
