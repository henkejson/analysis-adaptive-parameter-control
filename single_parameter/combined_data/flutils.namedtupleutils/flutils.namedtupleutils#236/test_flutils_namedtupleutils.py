# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 1248
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "latin1"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "latin1"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    str_0 = "The name of the cherry-picked module attribute; can be an empty str."
    str_1 = "latin1"
    dict_0 = {str_0: str_0, str_1: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    bytes_0 = b"\xb4s\xb5\xec"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_6)


def test_case_10():
    list_0 = []
    str_0 = "The name of the cherry-picked module attribute; can be an empty str."
    str_1 = "\ratil"
    dict_0 = {str_0: str_0, str_1: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    list_1 = [ordered_dict_0, dict_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "latin1"
    module_0.to_namedtuple(str_0)
