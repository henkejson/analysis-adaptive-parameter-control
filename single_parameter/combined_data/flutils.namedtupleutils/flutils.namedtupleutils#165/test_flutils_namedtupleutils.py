# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = 576.1
    module_0.to_namedtuple(float_0)


def test_case_1():
    str_0 = "p"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = "get_os_group"
    module_0.to_namedtuple(str_0)


def test_case_3():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_4():
    complex_0 = -2244.571699 - 1658j
    dict_0 = {complex_0: complex_0}
    list_0 = [complex_0, complex_0, dict_0, dict_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)
    float_0 = 576.1
    module_0.to_namedtuple(float_0)


def test_case_5():
    none_type_0 = None
    str_0 = "aRl0mUh\x0c*;3FE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    float_0 = 1251.966494
    int_0 = -293
    dict_0 = {float_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_2)
    module_2.object(*var_0, **var_0)


def test_case_7():
    str_0 = "p"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    none_type_0 = None
    str_0 = "aRl0mUh\x0c*;3FE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, none_type_0, dict_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\x11\x06\xa2\x0e7\xeag\xb7\xf4euG;I\x04c\xeb"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "`PB;6=%_Fx-\x0c"
    str_1 = " fields"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = False
    tuple_0 = (ordered_dict_0, bool_0)
    list_0 = [tuple_0, tuple_0, tuple_0, str_1]
    list_1 = [dict_0, bool_0]
    tuple_1 = (list_0, list_1, dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    int_0 = -293
    dict_1 = {int_0: int_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_0)
    list_2 = []
    module_1.namedtuple(list_2, list_1, defaults=tuple_1)
