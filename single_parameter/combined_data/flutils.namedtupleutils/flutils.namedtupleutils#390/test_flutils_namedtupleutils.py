# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    none_type_0 = None
    bytes_0 = b"\xae\x000\xe1\x92\xda`\xe3`|ib\x88\xc3\xf5\xec"
    tuple_0 = (bytes_0,)
    bool_0 = True
    tuple_1 = (bool_0, bytes_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "user_options"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "7z|j{83@h)X@"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -499.2403
    bool_0 = True
    tuple_0 = (float_0, bool_0, bool_0, bool_0)
    dict_0 = {tuple_0: tuple_0, bool_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, float_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xae\x000\xe1\x92\xda`\xe3`|ib\x88\xc3\xf5\xec"
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    str_0 = "\ryS"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)


def test_case_12():
    str_0 = "Zf1!{fl>=obG4^C ,"
    float_0 = 2876.83
    dict_0 = {str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, var_0, module=var_0)


def test_case_13():
    bytes_0 = b"\x86"
    float_0 = -178.87126
    bool_0 = False
    dict_0 = {float_0: float_0, bytes_0: float_0, float_0: bool_0}
    list_0 = [bytes_0, bytes_0, bytes_0, dict_0]
    module_0.to_namedtuple(list_0)
