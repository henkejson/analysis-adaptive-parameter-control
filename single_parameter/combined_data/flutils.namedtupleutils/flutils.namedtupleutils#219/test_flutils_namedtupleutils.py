# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 2035
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = -1351.9 + 1076.525j
    int_0 = -1201
    tuple_0 = (complex_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    int_0 = 2035
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xc9\x97a%\x80\xce\xd8x\x1e\xf3\xa9\x168\xe7\x1cE\x81"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "L+\x0c^3?:cylC38R]<"
    bool_0 = True
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        bool_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "Rz"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\x8d\x9e\x1c0vQ\xa2^\x1f\xfd\xa8{q\t\xb2\xbe"
    tuple_0 = (bytes_0,)
    dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0, bytes_0: tuple_0}
    tuple_1 = (tuple_0, dict_0, tuple_0)
    complex_0 = -2770.922 + 3840.230289j
    int_0 = -2087
    list_0 = [complex_0, int_0]
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_2 = (tuple_1, complex_0, tuple_1, list_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(tuple_2)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "\x0br"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_2.object()
    var_3 = module_0.to_namedtuple(ordered_dict_0)
