# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    complex_0 = 3424.122 - 467.5j
    list_0 = [complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xd6w0\x7fcvV\x13,9g\xba-"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"\x92^7\xad\x14\x06(\xc3g\x91\xb1"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = []
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "dI7'0R?KXWJKlK\"|l<L"
    int_0 = 146
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_1: bool_0, bool_0: int_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "ULTGAUh_EP"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(str_0, var_0)


def test_case_11():
    bytes_0 = b"\xf05\x83\xffd D\xd8S\x05\xbe\xca\x15\xd4\xe9\xb4\x0cu"
    int_0 = 2910
    dict_0 = {bytes_0: int_0, int_0: bytes_0, int_0: int_0}
    bytes_1 = b"exVqQwS\xdb\x96\x8e3\x8c?\xe5\xb7\x13`\x8c\xc2R"
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (bytes_0, dict_0, bytes_1, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "ULTGAUh_EP"
    none_type_0 = None
    str_1 = "\\(}:"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "\x0cULTCAUh_EP"
    none_type_0 = None
    str_1 = "\\(}:"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_1)
