# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    str_0 = "socket"
    dict_0 = {tuple_0: tuple_0, str_0: str_0, str_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\x8b\xd2?\xd9 l\xd0\xea+\xb5\xb5\xae\xd1$\xd4E"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b"\x9e\xb0"
    tuple_0 = (ordered_dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    bool_0 = True
    str_0 = "%YdE=>\x0b"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, dict_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = [bool_0, bool_0, bool_0]
    var_2 = module_0.to_namedtuple(list_1)
    int_0 = -120
    module_0.to_namedtuple(int_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"\xc1\xaf\x0b\xc3#D\x16j\xcd\xafs\x13\xe2i\xef7R"
    str_0 = "%YdE=>\x0b"
    dict_0 = {str_0: str_0, bool_0: str_0, str_0: str_0, bytes_0: bool_0}
    list_0 = [dict_0, dict_0, str_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    str_0 = "socket"
    dict_0 = {tuple_0: tuple_0, str_0: str_0, str_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_1 = (tuple_0, bool_0)
    bytes_0 = b"\xc1\xaf\x0b\xc3#D\x16j\xcd\xafs\x13\xe2i\xef7R"
    str_0 = "VI\t"
    tuple_2 = (tuple_1, bytes_0, str_0, str_0)
    dict_0 = {tuple_2: tuple_1, str_0: str_0, str_0: tuple_1}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, str_0, dict_0, str_0, dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    dict_1 = {tuple_0: bool_0, tuple_2: dict_0, bytes_0: var_1}
    module_0.to_namedtuple(dict_1)
