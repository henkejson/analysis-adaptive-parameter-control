# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -3435
    set_0 = {int_0, int_0, int_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "version"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "6@;5)t#\\"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "version"
    str_1 = ")s|BsVt"
    var_0 = module_1.namedtuple(str_0, str_1, rename=str_1)
    dict_0 = {str_0: str_0, str_1: var_0, var_0: str_1, var_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = True
    tuple_0 = (ordered_dict_0, var_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(var_3, str_0, rename=dict_0, defaults=var_3)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b'\xb8>)\xc44"\x06\xad\xe8\x8d'
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "version"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "version"
    str_1 = ")s|BsVt"
    str_2 = "camel_to_underscore"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_2, str_1: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"\xce\x0e\x88\xa7"
    module_1.namedtuple(bytes_0, bytes_0, rename=bytes_0)


def test_case_13():
    bytes_0 = b'"0'
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    str_0 = "\x0c\x0b\rh"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = False
    tuple_0 = (ordered_dict_0, ordered_dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xbeZ\xc4\xcf\xc62"
    module_0.to_namedtuple(bytes_0)
