# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 510
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "upV!e\rT(N"
    set_0 = {str_0, str_0, str_0, str_0}
    list_0 = [set_0, str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "#=q<P"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "#=q<P"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_8():
    tuple_0 = ()
    list_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    int_0 = -3153
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.OrderedDict(*var_0, **var_0)


def test_case_11():
    str_0 = "R\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(var_2)
    list_0 = [var_4]
    var_7 = module_0.to_namedtuple(list_0)
    var_8 = module_0.to_namedtuple(var_2)
    module_1.namedtuple(var_7, var_7, module=var_7)


def test_case_12():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"Z}\xa1v\xb8\xb6\x1b"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
