# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -168
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -1978
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "I"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "1~h4RQ:^$~{{n"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "I"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = 'Na-\n97.T"4\r#\x0c0'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "=$:oGe)&6n:9!yQD3dV"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0}
    tuple_1 = (dict_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"i\xfd\xc1F\n\xec>\x81\xfc\x15\x91\x1e_2\xd8.\xab"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = ""
    list_0 = [bytes_0, dict_0, str_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "beta\r"
    dict_0 = {var_0: var_0, str_0: bool_0, var_0: var_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(dict_0)
    list_0 = []
    var_3 = module_0.to_namedtuple(list_0)
    complex_0 = -693.5168314972549 + 1891.87j
    list_1 = [complex_0, str_0]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_0)
