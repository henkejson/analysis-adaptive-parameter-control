# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "t"
    dict_0 = {str_0: str_0, str_0: str_0}
    complex_0 = 1765.4937435719432 - 67.415j
    tuple_0 = (dict_0, dict_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "t"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "utf8"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\x0e\x92mM\x0c\xe8"
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bytes_0)


def test_case_7():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    complex_0 = 1751 - 67.415j
    tuple_0 = (dict_0, dict_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "dq`42\x0btRlQyqYbP"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\x0e\x92mM\x0c\xe8"
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bytes_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    str_0 = " '+@19H:\t_3)c"
    tuple_0 = (bool_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"Dx\x128p\xe8\xa3\xaaH\xd3B+"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 728
    list_0 = [dict_0, bytes_0, int_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "t"
    str_1 = "\rb"
    dict_0 = {str_1: str_0, str_0: str_1}
    complex_0 = 1751 - 67.415j
    tuple_0 = (dict_0, dict_0, complex_0)
    bool_0 = False
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (str_1, tuple_0, tuple_0, bool_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    module_0.to_namedtuple(str_0)
