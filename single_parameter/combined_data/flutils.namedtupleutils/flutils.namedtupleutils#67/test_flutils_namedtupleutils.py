# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -1748
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    str_0 = "num"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "6$1At?b>_@)'U,X"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    str_0 = "4)3D`"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_1 = "Oz@n\n{EO"
    module_0.to_namedtuple(str_1)


def test_case_8():
    bytes_0 = b"\xd7\xd4x(3)\xedJ"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0, bool_0)
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "\x0cnum"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 2969
    set_0 = {int_0}
    tuple_0 = (ordered_dict_0, int_0, set_0)
    tuple_1 = (tuple_0, str_0, int_0)
    tuple_2 = (tuple_1, dict_0, tuple_0, set_0)
    var_1 = module_0.to_namedtuple(tuple_2)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)
