# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    bool_0 = False
    str_0 = "N,_mQn"
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, str_0, bool_0, dict_0)
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\xdf\xa1`\xc8\xa1\x1a8\xe1$\xeed\xcb\x05R\x8e"
    module_1.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "jE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    bool_0 = False
    tuple_0 = (ordered_dict_0, ordered_dict_0, bool_0, ordered_dict_0)
    var_0 = module_1.to_namedtuple(tuple_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    complex_0 = -380.3 + 2862j
    var_1 = module_1.to_namedtuple(ordered_dict_0)
    var_2 = module_1.to_namedtuple(var_0)
    module_1.to_namedtuple(complex_0)


def test_case_7():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_8():
    str_0 = "bk606"
    bool_0 = False
    list_0 = [bool_0, str_0, bool_0, bool_0]
    str_1 = "\nC"
    dict_0 = {str_0: list_0, str_1: str_1}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    ordered_dict_1 = module_2.OrderedDict()
    object_0 = module_0.object(**ordered_dict_1)
    var_2 = module_1.to_namedtuple(var_0)
    var_3 = module_1.to_namedtuple(var_2)
    var_4 = module_1.to_namedtuple(var_2)
    none_type_0 = None
    var_5 = module_0.object()
    var_6 = module_1.to_namedtuple(list_0)
    module_1.to_namedtuple(none_type_0)


def test_case_9():
    bytes_0 = b"\xfd\xb4\xa6f{\x8f_h"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, bytes_0, dict_0]
    tuple_0 = (list_0,)
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    list_1 = [tuple_0, ordered_dict_0, bytes_0, list_0]
    module_1.to_namedtuple(list_1)
