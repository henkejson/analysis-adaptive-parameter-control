# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 720.20911 + 338.333772j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    int_0 = 319
    tuple_0 = (int_0,)
    tuple_1 = (int_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "Ge"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "H8~.EDHHeI!6\x0b"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    bytes_0 = b"\xe7\x10\xde"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "Jy8}p"
    tuple_0 = (str_0, str_0, str_0)
    int_0 = -851
    dict_0 = {
        int_0: tuple_0,
        tuple_0: str_0,
        int_0: tuple_0,
        str_0: str_0,
        str_0: int_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, tuple_0, rename=var_0)


def test_case_11():
    str_0 = "V*rUm="
    str_1 = "h\t"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_1)
