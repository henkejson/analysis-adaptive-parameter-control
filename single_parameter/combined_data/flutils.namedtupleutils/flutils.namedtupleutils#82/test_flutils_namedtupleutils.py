# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    complex_0 = -2479.728028 - 150.16j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = True
    str_0 = "7SL\r\r"
    list_0 = [bool_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "license"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"$8\xd9\x0f7\xf8li\x87\xff0:\x93{\x06"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict()
    list_0 = [ordered_dict_1]
    object_0 = module_2.object()
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    str_0 = "7SL\r\r"
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "n7@~$kHBWm,y:G)\x0cO?"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_1.OrderedDict()


def test_case_9():
    str_0 = "n7@~$kHBWm;,y:G)\x0cO?$"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    complex_0 = 3122.4925 - 2220j
    bool_0 = True
    tuple_0 = (bool_0,)
    complex_1 = 1164.2 - 3672.776918j
    dict_0 = {tuple_0: complex_0, complex_1: tuple_0, bool_0: bool_0, complex_1: bool_0}
    tuple_1 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    str_0 = "license"
    dict_1 = {str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(str_0)


def test_case_12():
    bytes_0 = b"\xba\x18\xe0\xea?\xdf\x04\xc2\x92\x0c\x8e\x8a\x89\xfc\xf7)"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    tuple_0 = (dict_0, bytes_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    complex_0 = 3122.4925 - 2220j
    bool_0 = True
    tuple_0 = (bool_0,)
    complex_1 = 1164.2 - 3672.776918j
    dict_0 = {tuple_0: complex_0, complex_1: tuple_0, bool_0: bool_0, complex_1: bool_0}
    tuple_1 = (complex_0, complex_0, tuple_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    str_0 = "\x0bNlicene"
    dict_1 = {str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(dict_1)
    module_1.namedtuple(tuple_1, tuple_1, defaults=var_3)
