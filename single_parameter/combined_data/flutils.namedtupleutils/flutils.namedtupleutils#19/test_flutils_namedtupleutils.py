# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 617.6 + 1203.0366j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    str_0 = "d"
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "d"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "\r$iP"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = 2
    bytes_0 = b"\xc8X=\xd5^\x9c\xc0\x0cY\x81\xf8 \xb1\xf2\xd7\x0e;b\x055"
    bool_0 = False
    tuple_0 = (int_0, bytes_0, bytes_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {bool_0: var_0}
    tuple_1 = (tuple_0, bool_0, dict_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "d"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    set_0 = {bool_1, tuple_0, bool_1, bool_1}
    tuple_1 = (tuple_0, bool_1, set_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_11():
    bytes_0 = b"\xb7\x19\xa5uh8\xbd\x88\x9a\xf8j\xcf2\x1el\x14M\xbfN"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = -505
    str_0 = "XT35hHG_\x0c"
    str_1 = ""
    bool_0 = True
    dict_0 = {str_0: bool_0, str_1: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(int_0)
