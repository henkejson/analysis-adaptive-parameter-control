# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    bytes_0 = b"\x8c\x83h\x9f\xb4>/\x85\xce\x88B\x9b\xcb\xd7\xf7\xa9-\x93n"
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_4():
    str_0 = "alpha"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_5():
    str_0 = "0rVxNtksQle%wS"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    int_0 = 3
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_9():
    bool_0 = False
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    bool_0 = True
    str_0 = "LB\x0b\x0bCyL0X\x0cOj_o\\;*3?\\"
    str_1 = "alpha"
    dict_0 = {str_0: str_0, str_1: bool_0, str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)


def test_case_11():
    str_0 = "alpha"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b""
    str_0 = "LB\x0b\x0bCyL0X\x0cOj_o\\;*3?\\"
    str_1 = "alpha"
    dict_1 = {bytes_0: bytes_0, bytes_0: str_0, str_1: bytes_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(dict_1)


def test_case_13():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "LB\x0b\x0bCyL0X\x0cOj_o\\;*3?\\"
    str_1 = "\nCpha"
    dict_1 = {str_0: dict_0, var_0: var_0, var_0: str_0, str_1: var_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    module_1.OrderedDict(**str_1)
