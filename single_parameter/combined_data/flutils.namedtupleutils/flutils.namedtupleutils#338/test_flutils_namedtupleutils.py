# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "/_"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "C`%SCXF"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    complex_0 = 2454.9371 + 324.66944j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    tuple_0 = (bool_0,)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    int_0 = -2338
    str_0 = '_.S}YJ"Q}'
    tuple_0 = (int_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "y"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_13():
    bytes_0 = b"\x11k\xc6\xe3S"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    list_0 = []
    str_0 = "pat\n"
    str_1 = "_qC3z%RIc9\x0c%"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    list_1 = [ordered_dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_1)
    tuple_0 = (var_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
