# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    list_0 = [set_0, bool_1]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "#b3"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "W"
    set_0 = {str_0}
    dict_0 = {str_0: set_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    float_0 = 983.13
    tuple_0 = (float_0, float_0)
    bytes_0 = b"a\xac\xaeK\xe1"
    dict_0 = {tuple_0: float_0, bytes_0: float_0, tuple_0: float_0}
    tuple_1 = (dict_0, bytes_0)
    module_0.to_namedtuple(tuple_1)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "]8()I<I\\xy\x0b^]6W\ng\nsU"
    set_0 = {str_0}
    dict_0 = {str_0: set_0, str_0: str_0}
    var_0 = module_2.object()
    var_1 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0}
    var_2 = module_0.to_namedtuple(dict_1)
    module_1.namedtuple(dict_1, bool_0, rename=str_0)


def test_case_12():
    str_0 = "\tm"
    set_0 = {str_0}
    dict_0 = {str_0: set_0, str_0: str_0}
    list_0 = [set_0, dict_0]
    tuple_0 = (str_0, dict_0, list_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_0 = True
    dict_1 = {bool_0: bool_0}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
