# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = 974.0
    module_0.to_namedtuple(float_0)


def test_case_1():
    int_0 = 70
    set_0 = {int_0}
    bytes_0 = b"L?\x10"
    tuple_0 = (set_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "-y\nbpZR/<T*'"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()


def test_case_9():
    dict_0 = {}
    int_0 = -2120
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict(*dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    dict_1 = {var_0: var_1, var_2: int_0, tuple_0: ordered_dict_0}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(int_0)


def test_case_10():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(var_5)
    bytes_0 = b"\xf4i\xc7\xd9s\x83\xa9\x8a\xed\xd8"
    dict_1 = {var_0: bytes_0, bytes_0: var_1, var_1: var_3}
    module_0.to_namedtuple(dict_1)


def test_case_11():
    str_0 = "The given 'identifier' must be a 'str'.  Got: %r"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    int_0 = -2120
    tuple_0 = (int_0,)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(dict_1)
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict(*dict_1)
    module_1.namedtuple(var_3, var_4, defaults=var_0)


def test_case_12():
    str_0 = "underscore_to_came\t"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    int_0 = -2120
    tuple_0 = (int_0,)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(tuple_0)
    var_6 = module_0.to_namedtuple(var_5)
    object_0 = module_2.object()
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict(*dict_1)
    var_7 = module_0.to_namedtuple(ordered_dict_1)
    var_8 = module_0.to_namedtuple(var_7)
    dict_2 = {var_5: ordered_dict_0}
    var_9 = module_0.to_namedtuple(dict_2)
    ordered_dict_2 = module_1.OrderedDict()
    var_10 = module_0.to_namedtuple(ordered_dict_0)
    var_11 = module_0.to_namedtuple(var_10)
    var_12 = module_0.to_namedtuple(var_11)
    bytes_0 = b"\xf4i\xc7\xd9s\x83\xa9\x8a\xed\xd8"
    dict_3 = {tuple_0: bytes_0, bytes_0: tuple_0, tuple_0: var_9}
    module_0.to_namedtuple(dict_3)
