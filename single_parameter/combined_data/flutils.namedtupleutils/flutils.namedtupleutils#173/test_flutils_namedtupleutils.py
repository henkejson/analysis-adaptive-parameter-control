# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    str_0 = "<~OONk"
    tuple_0 = (bool_0, str_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "NamedTuple"
    tuple_0 = (str_0,)
    dict_0 = {
        str_0: str_0,
        tuple_0: tuple_0,
        str_0: tuple_0,
        str_0: str_0,
        tuple_0: tuple_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"Bw\xdf"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    str_0 = "X"
    str_1 = "3K+1"
    dict_0 = {str_0: tuple_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*tuple_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"b\x06B\xc8\xf7u\x08 \x11\xa2-\x04\x97\xc6\xba"
    complex_0 = 1873.1698 + 397.34j
    dict_0 = {bytes_0: complex_0}
    bytes_1 = b"L$\x8e\xb9q\xe9\xe7\xb5\x9f\x8f\xc9e"
    float_0 = -1569.12
    tuple_0 = (dict_0, bytes_1, float_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "\x0cx"
    list_0 = [str_0]
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {str_0: str_0, tuple_0: tuple_0, str_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(var_3)
    dict_1 = {}
    module_1.namedtuple(dict_1, dict_1, defaults=dict_1, module=dict_1)
