# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -531.94
    module_0.to_namedtuple(float_0)


def test_case_1():
    none_type_0 = None
    str_0 = "qQI"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x0c+3\xbc\x0b_0!?\xbeU\x85\x11O]"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    int_0 = 5
    dict_0 = {int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    tuple_0 = (dict_0, var_0, var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(dict_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bytes_0 = b"\x90\x9b^\xbc+\xf3"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)


def test_case_8():
    str_0 = "%v!M8q{[X{:/3s$`e+N"
    bool_0 = True
    str_1 = "%U+"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "^<n#O\x0b=L'r,qb^0h"
    none_type_0 = None
    str_1 = "\nSQ"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (var_1,)
    var_2 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    set_0 = {bool_0, bool_0}
    module_0.to_namedtuple(set_0)


def test_case_11():
    bytes_0 = b"\x0e5\xf3"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = ()
    tuple_1 = (dict_0, tuple_0, dict_0, dict_0)
    str_0 = "[F\n3MPl88"
    tuple_2 = (tuple_1, bytes_0, str_0)
    module_0.to_namedtuple(tuple_2)
