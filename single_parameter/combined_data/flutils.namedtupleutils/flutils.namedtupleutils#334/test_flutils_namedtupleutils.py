# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 6
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    tuple_0 = (int_0, dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "utf8"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "AnsiTextWrapper"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "AnsiTextWrapper"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "utf8"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "utf8"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "An&iTetWrappr"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0, bool_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"\x9a\xea\xc1\xcd\xdaT7\xd0\x0c\xfb-\xfe"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    str_0 = "utf\x0c"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
