# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = ".V>C"
    set_0 = {str_0, str_0, str_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "m"
    list_0 = [str_0, str_0, str_0]
    str_1 = "7"
    dict_0 = {str_0: list_0, str_1: str_1, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "m"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "m"
    bool_0 = False
    list_0 = [str_0, str_0, bool_0]
    str_1 = "%y~??"
    dict_0 = {str_0: list_0, str_1: str_1, str_1: str_1, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    str_0 = '1JQnY\n-U"Zm'
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "m"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    dict_0 = {str_0: list_0, str_0: str_0, str_0: str_0, bool_0: str_0}
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)


def test_case_9():
    str_0 = "m"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    str_1 = "7"
    str_2 = "%y~??"
    str_3 = "7jO5o\n#G)n"
    dict_0 = {str_0: list_0, str_1: str_1, str_2: str_1, str_3: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    bytes_0 = b")\xc9u'\xb3,\xdc\x11\xa1\xda}\xe2\x1c3tkz\xc3"
    dict_1 = {bytes_0: var_0, var_1: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_10():
    str_0 = "m"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    str_1 = "\x0c\t\x0bGw"
    str_2 = "%y~??"
    dict_0 = {str_0: list_0, str_1: str_1, str_2: str_1, bool_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(dict_0, var_1)
