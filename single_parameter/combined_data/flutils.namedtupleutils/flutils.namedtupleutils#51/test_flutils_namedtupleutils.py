# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = -3002.19999 - 918.58301j
    tuple_0 = (complex_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = ";Z[$qknWRWieBURcS"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "-f:)$e@\\w<`t;|ZX_'"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "c6n4Y"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_0 = [var_0, var_0]
    var_2 = module_0.to_namedtuple(list_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: tuple_0}
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(dict_0)


def test_case_12():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"g6\x8eq\x8c\xbd\xa2\xad\xa2\x05\x12{L\x04\x11\n\xee\xa2\x96\xdd"
    tuple_1 = (bytes_0,)
    var_2 = module_0.to_namedtuple(tuple_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_1, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    float_0 = 1757.9
    bool_0 = False
    tuple_0 = (float_0, bool_0)
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, bool_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "\rc6n4Y"
    dict_1 = {str_0: tuple_0, var_0: str_0, var_0: bool_0, var_0: dict_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    complex_0 = -1222.5 + 153.8034j
    var_1 = module_0.to_namedtuple(dict_1)
    float_1 = 2050.10161
    var_2 = module_0.to_namedtuple(var_1)
    list_0 = [complex_0, float_1, complex_0, float_1]
    tuple_1 = (complex_0, float_1, list_0)
    bool_1 = False
    tuple_2 = (ordered_dict_0, bool_1, tuple_1)
    var_3 = module_0.to_namedtuple(tuple_2)
    module_0.to_namedtuple(float_0)
