# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b"j\xf2*\x84\xcf+\xc7\x88\xbd\xa2"
    tuple_0 = (bool_0, bool_0, set_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "Iv"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    str_0 = "N"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "f"
    list_0 = [str_0, str_0]
    float_0 = 3357.905
    dict_0 = {
        float_0: list_0,
        float_0: list_0,
        float_0: float_0,
        str_0: float_0,
        str_0: list_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_4)
    bool_1 = True
    var_7 = module_0.to_namedtuple(var_2)
    tuple_0 = (ordered_dict_0, var_7, bool_0, bool_1)
    var_8 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "as_escaped_utf8_literal"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_0 = b"o"
    tuple_0 = (ordered_dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "Iv"
    str_1 = "+x$joK4~33Mi"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, str_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"\x07\xd1\xd0\xb8{\xbc\x14\x07\xfc"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "f\n"
    list_0 = [str_0, str_0]
    float_0 = 3357.905
    dict_0 = {
        float_0: list_0,
        float_0: list_0,
        float_0: float_0,
        str_0: float_0,
        str_0: list_0,
    }
    bytes_0 = b"\x7f\xa8\xef"
    tuple_0 = (str_0, list_0, dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)
