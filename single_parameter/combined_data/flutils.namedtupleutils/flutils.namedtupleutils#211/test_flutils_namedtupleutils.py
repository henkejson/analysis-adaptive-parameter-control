# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    str_0 = "l"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, none_type_0: none_type_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xbb\x13\x83\xe1\xc2\x04\x98"
    module_1.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "l"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    tuple_0 = (var_0,)
    var_1 = module_1.to_namedtuple(tuple_0)


def test_case_9():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"\x18q\xbf\xbcQyxMC\x9c\x07\xe8\xb5\xab\x03!\xf1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_1.to_namedtuple(dict_0)


def test_case_12():
    none_type_0 = None
    str_0 = "IHB.nyK"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    var_2 = module_1.to_namedtuple(var_1)


def test_case_13():
    str_0 = "l"
    none_type_0 = None
    str_1 = "acVP1\x0c"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(dict_0)
    module_2.namedtuple(dict_0, dict_0, module=dict_0)
