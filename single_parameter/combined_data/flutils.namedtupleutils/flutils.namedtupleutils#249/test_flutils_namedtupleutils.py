# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -2471
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    object_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "pF"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "9T7EhYO`|3M|@%)LEv"
    str_1 = "sN|duX%Z:"
    str_2 = "r[a0{>B=Rf\r"
    int_0 = 792
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_2: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    int_0 = -56
    bytes_0 = b"\x0c|\xec\xc3\x96"
    dict_0 = {bytes_0: int_0}
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (int_0, dict_0, ordered_dict_0)
    list_0 = [tuple_0, int_0, dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "mN\r"
    str_1 = "sN|duX%Z:"
    str_2 = "r[a0{>B=Rf\r"
    int_0 = 792
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_2: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
