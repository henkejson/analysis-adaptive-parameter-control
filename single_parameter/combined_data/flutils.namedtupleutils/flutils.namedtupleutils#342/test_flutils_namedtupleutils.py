# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 2199.3877
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "J"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "q\tz"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    bool_1 = True
    str_1 = "B"
    dict_1 = {bool_1: bool_1, bool_0: bool_1, str_1: var_0}
    tuple_0 = (bool_0, var_0, bool_0, dict_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0, var_0, var_1)
    var_2 = module_0.to_namedtuple(tuple_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"\xa5\xa96\x97\xbdd\xe5T\x1b%rR\xcf#\xb2\xe1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "405`&!aEDs"
    str_1 = "q\tz"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    var_1 = module_0.to_namedtuple(dict_0)
    bool_1 = True
    str_2 = " Z"
    dict_1 = {bool_1: bool_1, bool_0: bool_1, str_2: var_1}
    tuple_0 = (bool_0, var_1, bool_0, dict_1)
    var_2 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"\x0b\xf8"
    tuple_1 = (str_0, bytes_0, var_2)
    var_3 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(bool_0)
