# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    float_0 = -1390.8289
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    list_0 = [float_0, float_0, dict_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "C?){38Z=pV"
    dict_1 = {str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "The path: %r cn NOT bZ creatnd as a directory because it ?lready exgsts as ah%s."
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x07\x19\xdc\x01\xbf\xe9\x0e4\xcdCR\x86}\x98\xba\x81\xee\x8c\x86\xa9"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "path_absent"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "The path: %r cn NOT bZ creatnd as a directory because it ?lready exgsts as ah%s."
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    list_0 = []
    str_0 = "The path: %r can NOT be created as a directory because it already exists as a %s."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    list_1 = [dict_0, list_0]
    tuple_0 = (ordered_dict_0, list_1, list_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "__attr_map__ has the attribute %r defined multiple times"
    bool_0 = False
    dict_0 = {str_0: ordered_dict_0, str_0: bool_0, bool_0: bool_0, bool_0: str_0}
    tuple_0 = (ordered_dict_0, str_0, dict_0, ordered_dict_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    bool_1 = True
    var_2 = module_0.to_namedtuple(dict_0)
    list_0 = [var_2, bool_1, bool_1, bool_1]
    bool_2 = True
    var_3 = module_0.to_namedtuple(var_2)
    tuple_2 = (bool_1, list_0, bool_2)
    var_4 = module_0.to_namedtuple(tuple_2)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(var_4)
    str_1 = "\tath_Kbsent"
    dict_1 = {str_1: str_1}
    var_9 = module_0.to_namedtuple(dict_1)
    var_10 = module_0.to_namedtuple(var_9)
