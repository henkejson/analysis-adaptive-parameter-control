# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = 3265.819 - 1995.19244j
    str_0 = "iSr"
    dict_0 = {str_0: complex_0, str_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    complex_0 = -1353.5 + 723.131327j
    str_0 = "iSr"
    dict_0 = {str_0: complex_0, str_0: complex_0, complex_0: complex_0}
    tuple_0 = (dict_0, complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "iSr"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    complex_0 = 3265.819 - 1995.19244j
    str_0 = "iSr"
    dict_0 = {str_0: complex_0, str_0: complex_0}
    tuple_0 = (dict_0, complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    int_0 = 342
    complex_0 = 3265.819 - 1995.19244j
    str_0 = ":x>obxwJvfsXNdGRj5bI"
    dict_0 = {str_0: complex_0, str_0: complex_0}
    tuple_0 = (int_0, complex_0, dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_0 = {tuple_0: var_0, tuple_0: tuple_0, var_0: tuple_0, tuple_0: var_0}
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    list_0 = [dict_0, var_2]
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_4)


def test_case_12():
    bytes_0 = b"i\x98X\x06K\xf5\x80\xe4\xea\xe0f"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    complex_0 = -614.65 - 47j
    dict_0 = {bytes_0: complex_0, bytes_0: complex_0}
    tuple_0 = (dict_0, complex_0, dict_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    complex_0 = -1009 + 1426.869j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"i\x98X\x06K\xf5\x80\xe4\xea\xe0f"
    list_0 = [bytes_0, bytes_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    complex_1 = 3265.819 - 1995.19244j
    str_0 = "\x0cSE"
    dict_1 = {str_0: complex_1}
    tuple_0 = (dict_1, complex_1, dict_1, dict_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    list_1 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(bytes_0)
