# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 3421.0
    module_0.to_namedtuple(float_0)


def test_case_1():
    int_0 = -322
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (set_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "as_ay_calables"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "?IF*sx3k5#<'?/sE"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "\tR%\t*KHC@["
    int_0 = 691
    tuple_0 = (int_0,)
    dict_0 = {str_0: str_0, tuple_0: tuple_0, int_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xec\xcd\xa2S"
    int_0 = 80
    dict_0 = {bytes_0: int_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "as_ay_calables"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
