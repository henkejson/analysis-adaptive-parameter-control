# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 3287
    module_0.to_namedtuple(int_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    complex_0 = 218.875 - 539.214383j
    list_0 = [ordered_dict_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "(|;` z\x0cec"
    tuple_0 = ()
    dict_0 = {str_0: str_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "(|;` z\x0cec"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "cached_property"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "cached_property"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b",\xb6\xeeX\xee# "
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, dict_0, bytes_0]
    bool_0 = False
    bool_1 = True
    tuple_0 = (list_0, bool_0, bool_1)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "l\t\t"
    str_1 = "path"
    str_2 = 'Fj%%h3"GM?P6/@PV'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_3 = "cached_property"
    dict_1 = {str_3: str_3, str_3: str_3}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(dict_1)
    list_0 = [var_1, ordered_dict_1, str_3]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_1)
    bytes_0 = b"~\xeb1\x7f\n\xe0\x82/\x97\x14\x06\xb4?*"
    module_0.to_namedtuple(bytes_0)
