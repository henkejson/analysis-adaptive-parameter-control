# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = "e"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xab\x94\xf6"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"\xdb\xf0\xfe?\xb9\x10n\x88\x9a\x1c\x85a\xd5\xc2\x89\xa1\xfaU"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "e"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    object_0 = module_1.object()


def test_case_11():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_2.OrderedDict(*var_1)
    var_2 = module_0.to_namedtuple(var_1)
    dict_0 = {var_1: var_0, var_1: var_1, var_1: var_2}
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_1)
    module_2.namedtuple(var_5, ordered_dict_1)


def test_case_12():
    str_0 = "}*P0{@!r!*Yszi"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_13():
    str_0 = "\x0cS"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.namedtuple(dict_0, var_0, module=var_0)
