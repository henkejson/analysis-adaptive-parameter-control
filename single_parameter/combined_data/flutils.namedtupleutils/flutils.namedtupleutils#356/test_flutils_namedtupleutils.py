# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = -581
    module_0.to_namedtuple(int_0)


def test_case_1():
    dict_0 = {}
    tuple_0 = (dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    float_0 = -635.82007
    bool_0 = False
    tuple_1 = (float_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    str_0 = "u7QT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"q\xa7\xbc@\x94\xb3\xc6\xbf\xa5"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    object_0 = module_2.object()
    bytes_0 = b"c\x07`~\x8c\xbb%\x86\x0e\xd5\xdf\xd4\x11w\xb0\xffz\x9a\xe8\xe3"
    int_0 = 987
    tuple_0 = (object_0, bytes_0, int_0)
    dict_0 = {object_0: tuple_0, bytes_0: int_0, object_0: object_0, int_0: bytes_0}
    tuple_1 = (tuple_0, dict_0, tuple_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_7():
    str_0 = "=&#=Fr!40"
    list_0 = [str_0, str_0, str_0]
    str_1 = "Ya>\n%&"
    dict_0 = {str_1: str_1, str_0: list_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "\x0c\x0blL1"
    list_0 = [str_0, str_0, str_0]
    str_1 = "YBs"
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    dict_1 = {str_0: str_0, var_1: list_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
