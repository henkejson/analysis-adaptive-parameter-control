# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 1212
    tuple_0 = (list_0, int_0, int_0, list_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "mFuaTP4`n;-B4:1k$zT"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "8<"
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = [var_0, str_0, tuple_0, str_0]
    list_1 = [list_0, str_0, list_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {
        var_0: ordered_dict_0,
        var_0: ordered_dict_0,
        var_0: var_0,
        var_0: ordered_dict_0,
    }
    str_0 = "Q"
    dict_1 = {var_0: dict_0, str_0: dict_0, str_0: dict_0, var_0: dict_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "9c0z)R\x0b4\x0b1"
    object_0 = module_2.object()
    dict_0 = {str_0: object_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    dict_0 = {
        none_type_0: ordered_dict_0,
        var_0: var_1,
        var_2: none_type_0,
        none_type_0: var_1,
    }
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [dict_0, var_5, var_0, dict_0]
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(list_0)
    list_1 = []
    var_9 = module_0.to_namedtuple(var_8)
    var_10 = module_0.to_namedtuple(list_1)
    var_11 = module_0.to_namedtuple(var_2)
    str_0 = "Z\t"
    str_1 = "RyUP?Pe"
    dict_1 = {var_0: var_1, var_2: var_11, str_0: var_4, str_1: var_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    var_12 = module_0.to_namedtuple(ordered_dict_1)
    var_13 = module_0.to_namedtuple(dict_1)
    var_14 = module_0.to_namedtuple(var_13)
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    bytes_0 = b"\xf3\xe4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)
