# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "Convert a given command into a tuple for use by\n    :obj:`subprocess.Popen`.\n\n    Args:\n        cmd (:obj:`Sequence <typing.Sequence>`): The command to be converted.\n\n    This is for converting a command of type string or bytes to a tuple of\n    strings for use by :obj:`subprocess.Popen`.\n\n    Example:\n\n        >>> from flutils.cmdutils import prep_cmd\n        >>> prep_cmd('ls -Flap')\n        ('ls', '-Flap')\n    "
    bool_0 = True
    list_0 = [str_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    int_0 = -4346
    str_0 = "Q,+#X&tQpr%RbbQ Qx."
    dict_0 = {str_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "G"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bytes_0 = b"C"
    int_0 = -1047
    tuple_0 = (bytes_0, int_0, int_0)
    tuple_1 = ()
    dict_0 = {tuple_0: int_0, int_0: tuple_0, bytes_0: int_0, tuple_1: tuple_1}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    tuple_0 = (list_0, list_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    int_0 = -4340
    str_0 = "g"
    dict_0 = {
        str_0: int_0,
        str_0: int_0,
        int_0: str_0,
        str_0: str_0,
        int_0: str_0,
        str_0: int_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    int_0 = -4340
    str_0 = "g\x0b"
    int_1 = 18
    tuple_0 = (int_0, str_0, int_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {
        str_0: int_0,
        var_0: int_0,
        int_0: int_1,
        str_0: int_1,
        tuple_0: int_1,
        int_1: int_0,
    }
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)
