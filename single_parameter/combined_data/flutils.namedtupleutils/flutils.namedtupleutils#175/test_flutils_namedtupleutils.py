# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x96\x7f6!F>\x1e"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "lX"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [var_0, var_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    bytes_0 = b"\t\xceY\xace\xe3"
    tuple_0 = ()
    tuple_1 = (dict_0, bool_1, bytes_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_10():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(*var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (ordered_dict_0, ordered_dict_0, ordered_dict_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(tuple_1)
    tuple_2 = (tuple_1,)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(tuple_2)
    var_6 = module_0.to_namedtuple(var_0)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(var_3)
    bytes_0 = b"\x04D+\x92S/\xc1"
    dict_1 = {bytes_0: bytes_0, bytes_0: ordered_dict_0}
    module_0.to_namedtuple(dict_1)


def test_case_11():
    str_0 = "{"
    str_1 = "lX"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "\tG"
    str_1 = "lX"
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, dict_0, str_0]
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    int_0 = 5513
    list_1 = [tuple_0, var_1, int_0, str_0]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(list_0)
    tuple_1 = ()
    var_6 = module_0.to_namedtuple(tuple_1)
    int_1 = -568
    dict_1 = {var_1: int_1, int_1: var_1}
    tuple_2 = (var_5, dict_1, var_5, var_5)
    tuple_3 = (tuple_2,)
    var_7 = module_0.to_namedtuple(tuple_3)
    var_8 = module_0.to_namedtuple(var_1)
    module_1.namedtuple(str_1, int_0, rename=int_1)
