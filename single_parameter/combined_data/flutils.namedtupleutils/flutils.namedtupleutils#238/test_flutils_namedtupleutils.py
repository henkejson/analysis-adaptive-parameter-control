# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    set_0 = set()
    int_0 = -1973
    tuple_0 = (set_0, int_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "_"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "strict"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "The name of the cherry-picked module attribute; can be an empty str."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    float_0 = 3884.650363
    int_0 = -2681
    bytes_0 = b"\xad\xa7>\x93\xa1T\xba\xdb\xf3\xfe"
    dict_0 = {float_0: float_0, float_0: float_0, int_0: bytes_0, bytes_0: float_0}
    list_0 = [float_0, dict_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "\x0cstrict"
    str_1 = 'LnsSg\t~OU"W$d '
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    list_0 = [ordered_dict_0, dict_0, dict_0, ordered_dict_0]
    module_2.object(*list_0)
