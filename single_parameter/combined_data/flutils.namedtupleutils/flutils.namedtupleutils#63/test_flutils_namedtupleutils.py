# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 1178
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bytes_0 = b"\x13Q\x00\xcd-4\x06/"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, dict_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "iOsT`<e]5^}\"5.'\\B"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    bool_0 = True
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {var_1: var_1}
    var_2 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b'\x87"\x9d\xa7\xbb\xc1]"N&'
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "Z%xs,w83[6~EDe,"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = module_0.to_namedtuple(var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    list_0 = []
    str_0 = "exists_as"
    dict_0 = {str_0: list_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    str_1 = "h.Ecp<fFZ3{<>PyVce"
    module_0.to_namedtuple(str_1)


def test_case_12():
    list_0 = []
    str_0 = "exists_as"
    dict_0 = {str_0: list_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_13():
    str_0 = ")2!EG$X#\r\x0cG*e"
    str_1 = "LL\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(dict_0)
    tuple_0 = (ordered_dict_1, ordered_dict_1)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    bool_0 = True
    var_5 = module_0.to_namedtuple(ordered_dict_1)
    var_6 = module_0.to_namedtuple(var_3)
    tuple_1 = (bool_0, bool_0)
    var_7 = module_0.to_namedtuple(tuple_1)
    var_8 = module_0.to_namedtuple(ordered_dict_1)
    list_0 = [tuple_1, var_0, bool_0, str_1]
    var_9 = module_0.to_namedtuple(var_7)
    var_10 = module_0.to_namedtuple(var_7)
    var_11 = module_0.to_namedtuple(tuple_1)
    var_12 = module_0.to_namedtuple(list_0)
    var_13 = module_0.to_namedtuple(var_6)
    dict_1 = {var_9: var_9}
    var_14 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(bool_0)
