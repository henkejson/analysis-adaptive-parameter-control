# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = "doc"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'g2"?Y/TU@?\x0bL32b{'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "doc"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    str_0 = "0`Bd2xxN{iPP~OX_w<f "
    dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: str_0, tuple_0: str_0}
    tuple_1 = (str_0, tuple_0, dict_0)
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    str_0 = "0`Bd2xxN{iPP~OX_w<f "
    dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: str_0, tuple_0: str_0}
    tuple_1 = (str_0, tuple_0, dict_0)
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    bytes_0 = b"u-\x9a\xe9UpR\xb7}z.\x00\xb6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "\tCL2"
    dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: str_0, tuple_0: str_0}
    var_1 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (str_0, tuple_0, dict_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object(*tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    list_0 = [var_4]
    var_6 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(object_0)
