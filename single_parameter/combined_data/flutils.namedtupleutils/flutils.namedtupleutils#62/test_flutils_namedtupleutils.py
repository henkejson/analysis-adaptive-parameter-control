# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 6
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -29
    str_0 = "has_attrs"
    dict_0 = {int_0: int_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "hasB_attrs"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "has_attrs"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "has_attrs"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "has_attrs"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    int_0 = 0
    str_0 = "\tE;"
    dict_0 = {int_0: int_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = ""
    bytes_0 = b"\x918\xd2\xfbu3\xbe\xe0\x92W\xdf"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: str_0, bytes_0: bytes_0, str_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = -6
    str_0 = "hqs_ttr\x0b"
    dict_0 = {int_0: int_0, str_0: int_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_2.object()
    module_0.to_namedtuple(str_0)
