# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = 975.2 + 4932.14j
    list_0 = [complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "is_loaded"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xc6\x97\xbf\\\xbeg"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b"2e\xd3\xd9t\xbe \t\xb2\x92\x88\x89\xdbU\n\xad\xc7?\x81\x98"
    int_0 = 1876
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    set_0 = set()
    dict_0 = {int_0: bytes_0, int_0: bytes_0}
    float_0 = 3389.173254
    tuple_0 = (list_0, set_0, dict_0, float_0)
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"2e\xd3\xd9t\xbe \t\xb2\x92\x88\x89\xdbU\n\xad\xc7?\x81\x98"
    int_0 = 1876
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    set_0 = set()
    dict_0 = {int_0: bytes_0, int_0: bytes_0}
    float_0 = 3389.173254
    tuple_0 = (list_0, set_0, dict_0, float_0)
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "is_l'oaded"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [var_0, var_0, ordered_dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    complex_0 = 3426.3 + 4884.11894j
    list_1 = [complex_0]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(list_1)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(var_6)
    none_type_0 = None
    str_0 = "9^"
    var_8 = module_0.to_namedtuple(var_7)
    str_1 = "\tQ"
    dict_0 = {var_0: none_type_0, str_0: list_1, str_1: list_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    var_9 = module_0.to_namedtuple(ordered_dict_1)
    object_0 = module_2.object()
    module_1.namedtuple(object_0, var_6)
