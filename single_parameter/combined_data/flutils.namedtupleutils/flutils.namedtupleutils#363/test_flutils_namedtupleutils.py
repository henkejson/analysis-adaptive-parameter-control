# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "as_escaped_utf8_literal"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'J0P|,"W"\n`)c^ch'
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = [var_1, var_0, list_0]
    var_2 = module_0.to_namedtuple(list_1)
    bool_1 = True
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "5)B/8=)oV`B"
    str_1 = "as_escaped_utf8_literal"
    dict_0 = {str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_1)


def test_case_11():
    str_0 = "as_ecaped_utf8_liera"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"\xff6!\x9far"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, bytes_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "5)B/8=)oV`B"
    str_1 = "ou\x0c"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_1, dict_1, bool_0, var_0, dict_1]
    list_1 = [var_0, dict_0, list_0]
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)
