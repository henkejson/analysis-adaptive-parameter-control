# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = -2151.73602 - 3153.364795j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = False
    str_0 = "cached_property"
    dict_0 = {str_0: bool_0}
    list_0 = [dict_0, dict_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b"\xc2\xa4\x1a\xc1pB\x15` >q\x84\xe8\x81\x93^"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xfe\x0e\xc7\xf4\xb8f\x1b\x01N\xe2"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = 1259.5
    bool_0 = False
    dict_0 = {float_0: float_0, float_0: float_0, bool_0: float_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, float_0, bool_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(float_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"\xc1Yh\x92\x01l"
    list_0 = [bytes_0]
    str_0 = "Item %r of the given 'cmd' is not of type 'str'.  Got: %r"
    str_1 = "yf&g"
    dict_0 = {str_0: list_0, str_1: list_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    str_2 = "i-zCN+G"
    tuple_0 = (list_0, str_2)
    tuple_1 = (list_0, ordered_dict_0, str_0, tuple_0)
    tuple_2 = (tuple_1,)
    var_0 = module_0.to_namedtuple(tuple_2)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_3)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "xq\r"
    bool_1 = True
    dict_0 = {str_0: bool_1, bool_1: bool_1}
    var_1 = module_0.to_namedtuple(dict_0)
    list_1 = [dict_0, bool_1, bool_1]
    var_2 = module_0.to_namedtuple(list_1)
    float_0 = -329.85371
    module_0.to_namedtuple(float_0)


def test_case_12():
    set_0 = set()
    list_0 = [set_0]
    str_0 = '\nrn:{":(`L\x0bnC'
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    bool_0 = False
    tuple_0 = (set_0, ordered_dict_0, ordered_dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    var_1 = module_0.to_namedtuple(tuple_1)
