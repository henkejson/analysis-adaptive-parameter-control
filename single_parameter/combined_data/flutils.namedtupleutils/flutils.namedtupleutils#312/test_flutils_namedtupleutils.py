# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_1():
    int_0 = 50855936
    list_0 = [int_0, int_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "fO"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x18\xf7\x9d\x9fZ\xa6\xcc\xcb\xc4T\xf0\xfc\x88W\xab"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "g`Z2`%p?=iR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    int_0 = -2409
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    int_1 = 128
    module_0.to_namedtuple(int_1)


def test_case_11():
    str_0 = "fO"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"d\xad/\x98\xb4-4}"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, bytes_0, dict_0, bytes_0]
    list_1 = [list_0, list_0, list_0, bytes_0]
    module_0.to_namedtuple(list_1)


def test_case_13():
    str_0 = "\tJ"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_1, list_0, defaults=var_0)
