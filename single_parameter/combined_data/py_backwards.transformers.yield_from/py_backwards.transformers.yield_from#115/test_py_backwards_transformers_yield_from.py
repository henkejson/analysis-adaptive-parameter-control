# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(none_type_0)


def test_case_1():
    a_s_t_0 = module_1.AST()
    yield_from_transformer_0 = module_0.YieldFromTransformer(a_s_t_0)


def test_case_2():
    bytes_0 = b"\x9c\xf9\x98\x12y\x98\x85qo\xf2#\xd6\xf8\xa2\xff\xf7"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [bytes_0, bytes_0, yield_from_transformer_0]
    try_0 = module_1.Try(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(try_0)


def test_case_3():
    bytes_0 = b"\x9c\xa3\xf9\x13\x12y\x98\x85q]\xf2#\xd6\xf8\xa2\xff\xf7"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [
        bytes_0,
        bytes_0,
        yield_from_transformer_0,
        bytes_0,
        yield_from_transformer_0,
    ]
    list_1 = [list_0]
    try_0 = module_1.Try(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(try_0)
