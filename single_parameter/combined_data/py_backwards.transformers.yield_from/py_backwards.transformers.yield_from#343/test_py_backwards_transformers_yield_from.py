# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    num_0 = module_0.Num()
    yield_from_transformer_0 = module_1.YieldFromTransformer(num_0)
    a_s_t_0 = yield_from_transformer_0.visit(num_0)


def test_case_1():
    num_0 = module_0.Num()
    yield_from_transformer_0 = module_1.YieldFromTransformer(num_0)


def test_case_2():
    str_0 = "tkinter.dnd"
    var_0 = module_2.parse(str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "Aq7bV\x0b"
    str_1 = "tkinter.dnd"
    dict_0 = {str_0: str_0, str_1: str_0}
    keyword_0 = module_0.keyword(**dict_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_1)
    yield_from_transformer_1 = module_1.YieldFromTransformer(keyword_0)
    a_s_t_0 = yield_from_transformer_0.visit(keyword_0)
    var_0 = module_0.AsyncWith(*dict_0, **dict_0)
    is_not_0 = module_0.IsNot(**dict_0)
    yield_from_transformer_2 = module_1.YieldFromTransformer(is_not_0)
    var_1 = yield_from_transformer_2.generic_visit(var_0)
    a_s_t_1 = yield_from_transformer_1.visit(var_1)
    var_1.visit(yield_from_transformer_0)
