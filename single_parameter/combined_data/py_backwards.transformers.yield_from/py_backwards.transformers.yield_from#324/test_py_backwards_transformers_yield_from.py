# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    index_0 = module_0.Index()
    yield_from_transformer_0 = module_1.YieldFromTransformer(index_0)
    var_0 = yield_from_transformer_0.visit(index_0)


def test_case_1():
    index_0 = module_0.Index()
    yield_from_transformer_0 = module_1.YieldFromTransformer(index_0)


def test_case_2():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    if_exp_0 = module_0.IfExp(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(list_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_exp_0)


def test_case_3():
    str_0 = ""
    list_0 = []
    l_shift_0 = module_0.LShift(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    async_for_0 = module_0.AsyncFor(*str_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(async_for_0)
    yield_from_transformer_2 = module_1.YieldFromTransformer(yield_from_transformer_0)
    yield_from_transformer_3 = module_1.YieldFromTransformer(async_for_0)
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_1.visit(var_0)
    yield_from_transformer_2.visit(yield_from_transformer_1)


def test_case_4():
    str_0 = "C"
    list_0 = []
    l_shift_0 = module_0.LShift(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(str_0)
    none_type_0 = None
    yield_from_transformer_2 = module_1.YieldFromTransformer(none_type_0)
    var_0 = module_2.parse(str_0)
    yield_from_transformer_3 = module_1.YieldFromTransformer(var_0)
    yield_from_transformer_4 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_3.visit(var_0)
    var_0.visit(var_0)
