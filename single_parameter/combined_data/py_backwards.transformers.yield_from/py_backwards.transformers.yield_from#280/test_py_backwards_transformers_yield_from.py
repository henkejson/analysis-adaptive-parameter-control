# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    str_0 = "K|8<_AMDZ"
    var_0 = module_0.parse(str_0, str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    var_1 = yield_from_transformer_0.visit(var_0)


def test_case_1():
    mod_0 = module_2.Mod()
    yield_from_transformer_0 = module_1.YieldFromTransformer(mod_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_2():
    none_type_0 = None
    module_0.literal_eval(none_type_0)


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    class_def_0 = module_2.ClassDef(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(class_def_0)
    a_s_t_0 = yield_from_transformer_0.visit(class_def_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(yield_from_transformer_0)
