# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    aug_store_0 = module_0.AugStore()
    yield_from_transformer_0 = module_1.YieldFromTransformer(aug_store_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    global_0 = module_0.Global()
    yield_from_transformer_0 = module_1.YieldFromTransformer(global_0)


def test_case_2():
    str_0 = "+9,prn#"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "cVz14~KZ/"
    str_1 = "cVz4~KZ/"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    list_0 = [str_1, str_0, yield_from_transformer_0]
    for_0 = module_0.For(*list_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(str_0)
    str_2 = "D\x0c"
    a_s_t_0 = yield_from_transformer_0.visit(for_0)
    return_0 = module_0.Return()
    module_2.parse(list_0, str_2)
