# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    return_0 = module_0.Return()
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)
    a_s_t_0 = yield_from_transformer_0.visit(return_0)


def test_case_1():
    return_0 = module_0.Return()
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)


def test_case_2():
    str_0 = "RlKYk_/a.Kt\nWAd"
    var_0 = module_2.parse(str_0, str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    return_0 = module_0.Return()
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)
    list_0 = [yield_from_transformer_0]
    str_0 = "SK\"E[MM'5<B5r[+"
    str_1 = "!@>Ogb"
    str_2 = "UnknownHandler"
    str_3 = "RlKYk_/a.Kt\nWAd"
    dict_0 = {str_0: list_0, str_1: str_1, str_2: return_0, str_3: return_0}
    interactive_0 = module_0.Interactive(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(interactive_0)
    module_2.increment_lineno(str_2)
