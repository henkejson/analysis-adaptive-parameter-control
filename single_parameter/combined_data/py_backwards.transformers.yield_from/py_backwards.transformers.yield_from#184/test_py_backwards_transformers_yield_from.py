# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bytes_0 = b"\x1a#R\x84\x1b\x92\xfd\x89=\r4P\xf9\xdaz"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    subscript_0 = module_1.Subscript()
    yield_from_transformer_0 = module_0.YieldFromTransformer(subscript_0)


def test_case_2():
    bytes_0 = b"\x1a#R\x84\x1b\x92\xfd\x89=\r4P\xf9\xdaz"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [bytes_0, yield_from_transformer_0]
    async_with_0 = module_1.AsyncWith(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_with_0)


def test_case_3():
    bytes_0 = b"\x1a#R\x84\x1b\x92\xfd\x89=\r4P\xf9\xdaz"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [bytes_0, yield_from_transformer_0]
    list_1 = [bytes_0, list_0, bytes_0]
    async_with_0 = module_1.AsyncWith(*list_1)
    var_0 = yield_from_transformer_0.visit(async_with_0)
