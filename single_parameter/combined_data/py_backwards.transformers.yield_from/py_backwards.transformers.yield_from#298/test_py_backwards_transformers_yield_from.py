# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    starred_0 = module_0.Starred()
    yield_from_transformer_0 = module_1.YieldFromTransformer(starred_0)
    a_s_t_0 = yield_from_transformer_0.visit(starred_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    float_0 = 240.90036146841962
    yield_from_transformer_0 = module_1.YieldFromTransformer(float_0)
    list_0 = [
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
        float_0,
    ]
    list_1 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        list_0,
        yield_from_transformer_0,
    ]
    async_for_0 = module_0.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    float_0 = 183.0
    yield_from_transformer_0 = module_1.YieldFromTransformer(float_0)
    dict_0 = {}
    and_0 = module_0.And(**dict_0)
    list_0 = [and_0, and_0, and_0, and_0, and_0]
    async_for_0 = module_0.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
