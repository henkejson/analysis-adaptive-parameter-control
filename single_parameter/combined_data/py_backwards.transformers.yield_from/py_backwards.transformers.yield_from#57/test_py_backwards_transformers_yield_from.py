# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    add_0 = module_0.Add()
    yield_from_transformer_0 = module_1.YieldFromTransformer(add_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    add_0 = module_0.Add()
    yield_from_transformer_0 = module_1.YieldFromTransformer(add_0)


def test_case_2():
    str_0 = "M:\\yJo7~K="
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    list_0 = [str_0, str_0, yield_from_transformer_0, str_0]
    async_function_def_0 = module_0.AsyncFunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_3():
    str_0 = "M:\\yJo7~K="
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    list_0 = [str_0, str_0, yield_from_transformer_0, str_0]
    list_1 = [str_0, str_0, list_0, list_0]
    dict_0 = {str_0: list_0, str_0: list_0}
    async_function_def_0 = module_0.AsyncFunctionDef(*list_1, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)
