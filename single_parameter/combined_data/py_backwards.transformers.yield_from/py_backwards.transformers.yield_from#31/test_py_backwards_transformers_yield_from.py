# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    raise_0 = module_0.Raise()
    yield_from_transformer_0 = module_1.YieldFromTransformer(raise_0)
    a_s_t_0 = yield_from_transformer_0.visit(raise_0)


def test_case_1():
    name_0 = module_0.Name()
    yield_from_transformer_0 = module_1.YieldFromTransformer(name_0)


def test_case_2():
    str_0 = "Wk"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "tk"
    str_1 = ";d2X%z/@h*&Vy"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    global_0 = module_0.Global()
    yield_from_transformer_1 = module_1.YieldFromTransformer(global_0)
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_1.visit(var_0)
    boolop_0 = module_0.boolop()
    dict_0 = {}
    node_transformer_0 = module_2.NodeTransformer(**dict_0)
    list_0 = [var_0, str_1, var_0, yield_from_transformer_1]
    try_0 = module_0.Try(*list_0)
    a_s_t_1 = yield_from_transformer_1.visit(try_0)
    var_1 = module_2.iter_fields(list_0)
    module_0.BoolOp(*var_0)
