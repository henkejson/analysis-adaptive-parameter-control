# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    expression_0 = module_0.Expression()
    yield_from_transformer_0 = module_1.YieldFromTransformer(expression_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    lambda_0 = module_0.Lambda()
    yield_from_transformer_0 = module_1.YieldFromTransformer(lambda_0)


def test_case_2():
    lambda_0 = module_0.Lambda()
    yield_from_transformer_0 = module_1.YieldFromTransformer(lambda_0)
    list_0 = [lambda_0, yield_from_transformer_0, yield_from_transformer_0, lambda_0]
    class_def_0 = module_0.ClassDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(class_def_0)


def test_case_3():
    lambda_0 = module_0.Lambda()
    yield_from_transformer_0 = module_1.YieldFromTransformer(lambda_0)
    list_0 = [lambda_0, yield_from_transformer_0, yield_from_transformer_0, lambda_0]
    str_0 = "body"
    dict_0 = {str_0: str_0, str_0: list_0}
    yield_from_transformer_1 = module_1.YieldFromTransformer(lambda_0)
    mod_0 = module_0.mod(**dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(mod_0)
