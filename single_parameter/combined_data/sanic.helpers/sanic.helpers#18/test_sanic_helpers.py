# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"\xd0\x01q\xb7\x94\xc6\xc2\xf5D\t\xc8\x17`\x96o\xd7\x01"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    list_0 = []
    module_0.is_hop_by_hop_header(list_0)


def test_case_5():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    default_1 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()


def test_case_6():
    none_type_0 = None
    var_0 = module_1.ismodule(none_type_0)
    var_1 = module_0.has_message_body(var_0)
    none_type_1 = None
    dict_0 = {
        var_0: none_type_0,
        var_1: none_type_1,
        none_type_1: none_type_1,
        var_1: none_type_1,
    }
    module_0.remove_entity_headers(var_1, dict_0)


def test_case_7():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = bool_0.__repr__()
    default_0 = module_0.Default()
    bool_1 = module_0.is_atty()
    dict_0 = {var_1: var_1, var_1: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = default_0.__repr__()
    int_0 = 204
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_0.__repr__()
    module_0.remove_entity_headers(var_5, bool_0)
