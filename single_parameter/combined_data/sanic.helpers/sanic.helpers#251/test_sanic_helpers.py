# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 221
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bytes_0 = b"\xb0N#\xdc\xbdD\xc4\x87"
    list_0 = []
    default_0 = module_0.Default(*list_0)
    dict_0 = {bytes_0: default_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    int_0 = 224
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.has_message_body(bool_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    str_0 = "A}wXd[YSd\x0cWAoe="
    dict_0 = {str_0: var_0, str_0: var_1}
    var_3 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_4 = module_0.has_message_body(bool_0)
    var_5 = module_0.remove_entity_headers(dict_0)
    str_1 = var_4.__str__()
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    module_0.is_entity_header(bool_0)


def test_case_9():
    str_0 = "content-location"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    module_0.is_entity_header(bool_0)


def test_case_10():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    str_0 = "content-location"
    var_3 = module_0.is_hop_by_hop_header(var_2)
    dict_0 = {str_0: var_0, str_0: var_2}
    var_4 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_5 = module_0.has_message_body(var_3)
    var_6 = module_0.has_message_body(var_3)
    str_1 = var_5.__str__()
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    module_0.is_entity_header(bool_0)
