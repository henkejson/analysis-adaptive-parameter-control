# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 373
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(int_0)


def test_case_1():
    bool_0 = module_0.is_atty()


def test_case_2():
    default_0 = module_0.Default()


def test_case_3():
    list_0 = []
    var_0 = list_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0, str_0)
    var_1 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    module_0.has_message_body(var_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = False
    module_0.is_entity_header(bool_1)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    var_1 = module_0.is_entity_header(var_0)
    default_1 = module_0.Default()
    var_2 = var_0.__repr__()
    str_1 = var_2.__str__()
    var_3 = module_0.has_message_body(var_1)
    bool_0 = module_0.is_atty()


def test_case_8():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0, str_0)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    var_2 = var_0.__repr__()
    var_3 = default_0.__repr__()
    var_4 = var_3.__repr__()
    list_0 = [bool_0]
    var_5 = module_1.ismodule(var_3)
    var_6 = module_0.is_hop_by_hop_header(var_3)
    var_7 = module_0.is_entity_header(var_4)
    var_8 = list_0.__repr__()
    var_9 = var_8.__repr__()
    str_1 = var_5.__str__()
    bool_1 = module_0.is_atty()
    dict_0 = {var_8: var_8, var_3: var_8, var_8: var_0, var_9: bool_0}
    str_2 = var_8.__str__()
    bool_2 = module_1.ismodule(bool_1)
    str_3 = default_0.__str__()
    var_10 = module_0.remove_entity_headers(dict_0)
    module_0.remove_entity_headers(bool_2)
