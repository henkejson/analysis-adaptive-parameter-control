# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"\x04V\xc4L\xf1x,\xbb\x9f\x14\x0e\xe7\xea\xb3\x80v\xab_t"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    str_0 = "response_bytes_left"
    bool_0 = module_0.is_atty()
    var_0 = module_0.is_hop_by_hop_header(str_0)
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_1.ismodule(default_0)
    var_1 = module_0.is_hop_by_hop_header(str_0)
    bool_0 = module_0.is_atty()


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    bool_3 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_4 = module_0.is_atty()


def test_case_7():
    int_0 = 206
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    module_0.remove_entity_headers(str_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_1 = module_1.ismodule(int_0)
    var_2 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    dict_0 = {str_0: var_2}
    var_3 = module_0.remove_entity_headers(dict_0)
    module_0.remove_entity_headers(var_1)
