# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b";<^\xb3\xd6+.\xe2>"
    module_0.has_message_body(bytes_0)


def test_case_1():
    float_0 = 355.078678
    module_0.remove_entity_headers(float_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = 287
    var_0 = int_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0, var_0)


def test_case_4():
    int_0 = 311
    var_0 = int_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0, var_0)
    var_2 = module_0.is_hop_by_hop_header(var_0)


def test_case_5():
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    int_0 = 202
    var_2 = module_0.has_message_body(int_0)
    var_3 = var_2.__repr__()
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    bytes_0 = b'\x1dh\xefE;R"\xb2\xab\x91b==\xe3'
    list_0 = []
    dict_0 = {}
    default_0 = module_0.Default()
    default_1 = module_0.Default(*list_0, **dict_0)
    str_0 = default_1.__str__()
    module_0.import_string(bytes_0)


def test_case_7():
    int_0 = -1690
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_8():
    int_0 = 360
    var_0 = int_0.__repr__()
    var_1 = module_0.has_message_body(int_0)
    str_0 = "Reloader"
    dict_0 = {var_0: str_0}
    var_2 = module_0.remove_entity_headers(dict_0, str_0)
    module_0.is_hop_by_hop_header(dict_0)


def test_case_9():
    int_0 = 304
    bool_0 = module_0.is_atty()
    var_0 = module_1.ismodule(bool_0)
    var_1 = int_0.__repr__()
    var_2 = module_0.has_message_body(int_0)
    var_3 = var_0.__repr__()
    var_4 = module_0.has_message_body(var_0)
    str_0 = "Reloadr"
    dict_0 = {var_1: str_0}
    var_5 = module_0.remove_entity_headers(dict_0, str_0)
    var_6 = module_0.is_hop_by_hop_header(var_3)
    var_7 = module_1.ismodule(var_0)
    module_0.is_entity_header(var_7)
