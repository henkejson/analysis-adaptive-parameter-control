# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "Rxz.y"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.Default(**dict_0)


def test_case_4():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    default_1 = module_0.Default(**var_0)
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    int_0 = 305
    var_0 = module_0.has_message_body(int_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()
    str_0 = var_0.__str__()


def test_case_8():
    str_0 = "last-modified"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.Default(**dict_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = dict_0.__repr__()
    var_3 = module_0.has_message_body(bool_2)
    var_4 = module_0.is_hop_by_hop_header(var_1)
    int_0 = 304
    var_5 = module_0.has_message_body(int_0)
    default_1 = module_0.Default()
    str_0 = default_1.__str__()
    float_0 = 72.7
    var_6 = module_0.has_message_body(float_0)
    var_7 = var_6.__repr__()
    bool_3 = module_0.is_atty()
    var_8 = var_3.__repr__()
    bool_4 = module_0.is_atty()
    var_9 = default_1.__repr__()
    dict_1 = {var_7: bool_3}
    var_10 = module_0.remove_entity_headers(dict_1)
    module_0.Default(*bool_2)


def test_case_10():
    str_0 = "last-modified"
    bool_0 = module_0.is_atty()
    dict_0 = {str_0: str_0}
    default_0 = module_0.Default()
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    module_0.has_message_body(default_0)
