# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    float_0 = 347.89
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    str_0 = "Scale the number of workers.\n\n        Args:\n            num_workers (int): The number of workers to scale to.\n        "
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    float_0 = -763.0
    module_0.is_entity_header(float_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_8():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    float_0 = 347.89
    var_1 = module_0.has_message_body(float_0)


def test_case_9():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(bool_0)
    int_0 = 204
    var_3 = var_2.__repr__()
    var_4 = var_3.__repr__()
    str_0 = var_1.__str__()
    var_5 = module_0.is_hop_by_hop_header(str_0)
    var_6 = var_3.__repr__()
    var_7 = module_0.has_message_body(bool_0)
    bool_2 = module_0.is_atty()
    str_1 = var_3.__str__()
    str_2 = default_0.__str__()
    var_8 = var_4.__repr__()
    str_3 = var_7.__str__()
    str_4 = default_0.__str__()
    str_5 = var_3.__str__()
    var_9 = module_1.ismodule(var_5)
    var_10 = var_1.__repr__()
    object_0 = module_2.object()
    dict_0 = {var_4: default_0}
    var_11 = var_6.__repr__()
    var_12 = module_0.remove_entity_headers(dict_0, var_4)
    var_13 = module_0.has_message_body(int_0)
    module_0.is_entity_header(dict_0)
