# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    dict_0 = {}
    module_0.has_message_body(dict_0)


def test_case_1():
    bytes_0 = b"\x7f\x06.F\x0b\x13\xb2\xbd"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    dict_0 = {}
    module_0.is_entity_header(dict_0)


def test_case_4():
    complex_0 = -2806.8389 + 945.590256j
    module_0.is_hop_by_hop_header(complex_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {var_0: bool_0, var_0: var_0}
    module_0.import_string(dict_0)


def test_case_7():
    bool_0 = False
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {str_0: bool_0, default_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    module_0.has_message_body(var_1)


def test_case_9():
    bool_0 = False
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(bool_0)
    var_2 = default_0.__repr__()
    module_0.remove_entity_headers(bool_1)
