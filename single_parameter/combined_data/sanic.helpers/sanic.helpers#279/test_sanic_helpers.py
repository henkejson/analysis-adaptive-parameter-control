# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.has_message_body(set_0)


def test_case_1():
    str_0 = "}<Ov="
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xd5\xb9\x95\x94"
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_4():
    tuple_0 = ()
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_5():
    list_0 = []
    var_0 = module_1.ismodule(list_0)
    str_0 = var_0.__str__()
    str_1 = "-X39Fcarp?"
    dict_0 = {}
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default(**dict_0)
    var_1 = default_0.__repr__()
    var_2 = module_0.is_entity_header(str_1)
    str_2 = var_1.__str__()
    var_3 = var_0.__repr__()
    var_4 = var_2.__repr__()
    str_3 = str_2.__str__()
    bool_1 = module_0.is_atty()
    module_0.is_entity_header(var_2)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    dict_0 = {}
    str_1 = str_0.__str__()
    str_2 = var_0.__str__()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_7():
    int_0 = 1281
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    int_1 = -2649
    str_0 = var_1.__str__()
    str_1 = var_1.__str__()
    var_2 = module_0.has_message_body(int_1)
    str_2 = var_2.__str__()
    var_3 = module_0.has_message_body(var_2)
    var_4 = var_3.__repr__()
    var_5 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    var_6 = module_0.Default()
    str_3 = var_6.__str__()
    var_7 = module_0.is_entity_header(str_0)
    var_8 = var_6.__repr__()
    str_4 = var_4.__str__()
    var_9 = module_0.is_entity_header(var_8)


def test_case_8():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_1.ismodule(int_0)
    var_2 = var_0.__repr__()
    bool_0 = var_0.__repr__()
    str_0 = module_0.is_entity_header(bool_0)
    var_3 = var_2.__repr__()


def test_case_9():
    str_0 = "}<Ov="
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    int_0 = 1281
    var_1 = module_1.ismodule(int_0)
    var_2 = var_0.__repr__()
    int_1 = 204
    str_2 = var_1.__str__()
    str_3 = str_2.__str__()
    var_3 = var_1.__repr__()
    var_4 = module_0.has_message_body(int_1)
    str_4 = int_1.__str__()
    var_5 = module_0.is_hop_by_hop_header(str_4)
    str_5 = var_0.__str__()
    var_6 = var_0.__repr__()
    var_7 = var_1.__repr__()
    str_6 = var_6.__str__()
    var_8 = module_0.has_message_body(var_1)
    var_9 = module_1.ismodule(int_1)
    var_10 = var_4.__repr__()
    var_11 = var_8.__repr__()
    bool_0 = module_0.is_atty()
    str_7 = var_2.__str__()
    var_12 = var_10.__repr__()
    object_0 = module_2.object()
    var_13 = module_0.is_entity_header(str_4)
    str_8 = var_2.__str__()
    var_14 = var_2.__repr__()
    module_0.import_string(var_1)
