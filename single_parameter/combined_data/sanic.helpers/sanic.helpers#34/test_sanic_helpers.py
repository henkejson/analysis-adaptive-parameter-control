# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.Default(**default_0)


def test_case_5():
    float_0 = 628.0264
    var_0 = module_0.has_message_body(float_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    var_1 = var_0.__repr__()
    str_2 = var_0.__str__()
    none_type_0 = None
    var_2 = module_0.has_message_body(var_0)
    module_0.import_string(none_type_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()


def test_case_7():
    str_0 = "expect"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {}
    var_1 = module_0.remove_entity_headers(dict_0)
    bytes_0 = b""
    var_2 = module_0.is_entity_header(bytes_0)
    default_0 = module_0.Default()
    var_3 = module_0.is_entity_header(bytes_0)
    bool_0 = module_0.is_atty()
    bytes_1 = b"\xebIQ\x81,"
    module_0.has_message_body(bytes_1)
