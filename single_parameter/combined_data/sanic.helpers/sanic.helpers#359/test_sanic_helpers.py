# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    int_0 = -585
    module_0.remove_entity_headers(int_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xd9\x9a\x19|\xb2`/\xe1\x18\xb0\x83w\x14\xb8\xb4y\xb2\xcf\xa9o"
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_4():
    bytes_0 = b"\xda\x18\xa7\x19\xc7\xe4Gn\xec}\xec\xd7Ry"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    int_0 = 3541
    var_0 = module_0.has_message_body(int_0)


def test_case_7():
    bytes_0 = b"Processing"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    complex_0 = -645.421 - 2445.1j
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()
    module_0.is_hop_by_hop_header(complex_0)
