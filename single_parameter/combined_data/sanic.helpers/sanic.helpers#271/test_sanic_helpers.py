# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    str_0 = "TScuQ o$=D\nn"
    module_0.has_message_body(str_0)


def test_case_1():
    str_0 = '7"Kf^\'s\r "\x0bLdX'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"Too Many Requests"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_0.__str__()
    var_1 = module_0.is_entity_header(bytes_0)
    str_1 = var_1.__str__()
    var_2 = var_1.__repr__()
    module_0.import_string(bytes_0)


def test_case_4():
    bool_0 = True
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    str_0 = default_0.__str__()
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    int_0 = 479
    var_0 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_7():
    bool_0 = True
    str_0 = bool_0.__str__()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    object_0 = module_1.object()
    str_1 = default_0.__str__()
    dict_0 = {str_0: bool_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.is_hop_by_hop_header(str_0)
    var_4 = module_0.has_message_body(var_3)
    var_5 = var_1.__repr__()
    var_6 = object_0.__repr__()
    str_2 = var_1.__str__()
    var_7 = object_0.__repr__()
    var_8 = var_1.__repr__()
    object_1 = module_1.object()
    var_9 = var_1.__repr__()
    int_0 = 433
    var_10 = module_0.has_message_body(int_0)
    object_2 = module_1.object()
    str_3 = var_10.__str__()
    str_4 = var_6.__str__()
    var_11 = module_0.is_hop_by_hop_header(var_6)
    bool_1 = module_0.is_atty()
    var_12 = module_0.is_hop_by_hop_header(var_6)
    bool_2 = module_0.is_atty()
    int_1 = 204
    var_13 = module_0.has_message_body(int_1)
    var_14 = module_0.has_message_body(var_3)
    var_15 = var_13.__repr__()
    var_16 = var_7.__repr__()
    module_0.is_hop_by_hop_header(var_4)
