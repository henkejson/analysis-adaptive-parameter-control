# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"Q\x1b\xcb\x94+\x1d\xe7NQ\x87\x19\xdb\r\xba\x13\x19ta"
    module_0.has_message_body(bytes_0)


def test_case_1():
    bytes_0 = b"Q\x1b\xcb\x94+\x1d\xe7NQ\x87\x19\xdb\r\xba\x13\x19ta"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    int_0 = -1796
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(var_0)
    str_0 = var_2.__str__()
    var_3 = default_0.__repr__()
    str_1 = var_3.__str__()
    str_2 = var_1.__str__()
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    bytes_0 = b"\xca"
    var_1 = module_0.is_entity_header(bytes_0)
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_2 = var_1.__str__()
    str_3 = var_1.__str__()
    bool_1 = module_0.is_atty()
    module_0.remove_entity_headers(var_0)


def test_case_7():
    int_0 = -1796
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(var_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_8():
    int_0 = 452
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    module_0.remove_entity_headers(int_0)


def test_case_9():
    bytes_0 = b"\x0c\xb5\xec\xda\x0e\x7f\xbe\x03\x82\xb5"
    var_0 = module_0.is_entity_header(bytes_0)
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    bytes_1 = b"Q\x1b\xcb\x94+\x1d\xe7NQ\x87\x19\xdb\r\xba\x13\x19ta"
    str_0 = var_1.__str__()
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1}
    var_2 = module_1.ismodule(dict_0)
    var_3 = var_2.__repr__()
    var_4 = module_0.remove_entity_headers(dict_0)
    var_5 = module_0.remove_entity_headers(var_4)
    int_0 = 304
    var_6 = module_0.has_message_body(int_0)
    var_7 = module_0.is_hop_by_hop_header(bytes_1)
    default_0 = module_0.Default()
    var_8 = module_0.has_message_body(var_0)
    var_9 = module_0.has_message_body(bool_0)
    var_10 = var_6.__repr__()
    bool_1 = module_0.is_atty()
    str_1 = var_6.__str__()
    var_11 = module_0.has_message_body(var_7)
    str_2 = var_3.__str__()
    str_3 = default_0.__str__()
    module_0.is_hop_by_hop_header(int_0)
