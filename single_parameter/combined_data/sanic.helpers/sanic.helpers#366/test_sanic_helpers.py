# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    tuple_0 = ()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    str_0 = "aPT"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    object_0 = module_1.object()
    bool_0 = True
    list_0 = [object_0, bool_0, object_0, object_0]
    tuple_0 = (object_0, bool_0, bool_0, list_0)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_1 = default_0.__repr__()
    module_0.remove_entity_headers(var_1)


def test_case_7():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    bool_1 = module_0.is_atty()
    str_0 = default_0.__str__()
    module_0.import_string(str_0, var_0)


def test_case_9():
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_1.__repr__()
    var_4 = module_0.has_message_body(bool_0)
    var_5 = var_4.__repr__()


def test_case_10():
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = bool_0.__str__()
    bool_1 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    var_2 = str_1.__repr__()
    var_3 = var_1.__repr__()
    module_0.Default(**var_1)


def test_case_11():
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = bool_0.__str__()
    var_1 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    var_2 = module_0.is_hop_by_hop_header(str_0)
    var_3 = module_0.has_message_body(var_2)
    var_4 = str_1.__repr__()
    default_0 = module_0.Default()
    int_0 = 204
    var_5 = module_0.has_message_body(int_0)
    module_0.has_message_body(str_1)
