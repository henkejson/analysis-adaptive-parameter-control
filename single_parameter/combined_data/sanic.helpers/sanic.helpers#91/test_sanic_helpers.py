# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 276
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    int_0 = 276
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(int_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "?9=8e@1\rMsw(=#K Q"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    int_0 = 1413
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    float_0 = 2051.0
    var_0 = module_0.has_message_body(float_0)
    default_1 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    int_0 = 663
    module_0.import_string(int_0, int_0)


def test_case_7():
    float_0 = 304.0
    var_0 = module_1.ismodule(float_0)
    var_1 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    var_2 = var_1.__repr__()
    var_3 = module_0.Default()
    var_4 = var_2.__repr__()
    bool_0 = module_0.is_atty()
    var_5 = var_4.__repr__()
    dict_0 = {var_0: float_0, var_2: var_2}
    var_6 = dict_0.__repr__()
    module_0.remove_entity_headers(dict_0, dict_0)
