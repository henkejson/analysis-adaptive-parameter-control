# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    int_0 = -2407
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"R\x9e!\xfaa\xc8\xebFT\x0f\xdf\x1d5\xac,\xb4\xeb\x8e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "MV>E=O U&.nZ$3Poq"
    var_0 = module_0.remove_entity_headers(dict_0, str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = False
    list_0 = [bool_0]
    complex_0 = 5870 - 969.2j
    tuple_0 = (list_0, complex_0)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_5():
    default_0 = module_0.Default()
    none_type_0 = None
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    module_0.remove_entity_headers(none_type_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_1 = default_0.__str__()
    dict_0 = {}
    str_2 = default_0.__str__()
    module_0.import_string(dict_0)


def test_case_7():
    int_0 = 116
    var_0 = int_0.__repr__()
    str_0 = var_0.__str__()
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_0.__repr__()
    var_3 = module_0.has_message_body(var_1)
    bool_0 = module_0.is_atty()
    dict_0 = {var_0: var_0, var_0: bool_0}
    var_4 = var_2.__repr__()
    var_5 = module_1.object()
    var_6 = module_0.remove_entity_headers(dict_0)
    module_0.import_string(var_0)


def test_case_8():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()
    int_0 = 204
    var_1 = int_0.__repr__()
    str_0 = var_1.__str__()
    var_2 = module_0.has_message_body(int_0)
    var_3 = var_1.__repr__()
    var_4 = module_0.has_message_body(var_2)
    bool_0 = module_0.is_atty()
    dict_1 = {var_1: var_1, var_1: bool_0}
    var_5 = module_0.is_hop_by_hop_header(var_1)
    var_6 = module_2.ismodule(int_0)
    var_7 = module_2.ismodule(var_2)
    var_8 = module_0.remove_entity_headers(dict_1)
    var_9 = var_3.__repr__()
    module_0.is_hop_by_hop_header(var_2)
