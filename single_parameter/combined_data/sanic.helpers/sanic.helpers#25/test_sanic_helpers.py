# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    bytes_0 = b"Use Pro\xc6\xcbxy"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    bytes_0 = b"\x1c>\x92\xf4\xd3t9\x87\xf3\x86\xca"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    default_1 = module_0.Default()
    var_0 = default_1.__repr__()
    var_1 = module_0.is_entity_header(var_0)
    var_2 = module_0.has_message_body(var_1)


def test_case_8():
    int_0 = 202
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    str_0 = var_0.__str__()
    var_1 = default_0.__repr__()
    str_1 = var_0.__str__()
    var_2 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    str_2 = default_0.__str__()
    var_3 = var_2.__repr__()
    str_3 = var_3.__str__()
    var_4 = var_1.__repr__()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_9():
    float_0 = 204.0
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    bool_1 = True
    str_0 = var_0.__str__()
    str_1 = default_0.__str__()
    var_1 = module_0.has_message_body(bool_1)
    none_type_0 = None
    var_2 = module_1.ismodule(none_type_0)
    str_2 = var_2.__str__()
    var_3 = var_0.__repr__()
    var_4 = str_2.__repr__()
    str_3 = var_4.__str__()
    var_5 = var_1.__repr__()
    bool_2 = module_0.is_atty()
    str_4 = default_0.__str__()
    var_6 = var_2.__repr__()
    str_5 = str_2.__str__()
    str_6 = var_0.__str__()
    dict_0 = {var_5: bool_2, var_5: str_2, bool_2: bool_1}
    module_0.remove_entity_headers(dict_0)
