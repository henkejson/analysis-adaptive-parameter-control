# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b"\xa9\xe8b\x8a\xbd\x06^\x94\xfeK\x13\xff\x86O\x02\xcf0\x19"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_5():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = var_0.__str__()
    str_2 = var_1.__str__()
    module_0.has_message_body(default_0)


def test_case_6():
    float_0 = 205.99209108088579
    var_0 = module_0.has_message_body(float_0)
    str_0 = float_0.__str__()
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_2 = var_0.__str__()
    var_1 = module_0.has_message_body(var_0)
    str_3 = var_0.__str__()
    dict_0 = {str_3: str_3}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = var_0.__repr__()
    object_0 = module_1.object()
    object_1 = module_1.object()


def test_case_7():
    str_0 = ",ZJC#Zy\r`!"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    float_0 = 204.0
    var_1 = module_0.has_message_body(float_0)
    str_1 = float_0.__str__()
    str_2 = var_1.__str__()
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_0.__repr__()
    str_3 = float_0.__str__()
    var_4 = var_2.__repr__()
    str_4 = var_1.__str__()
    dict_0 = {str_3: str_3}
    var_5 = module_0.is_hop_by_hop_header(var_3)
    var_6 = module_2.ismodule(dict_0)
    module_0.remove_entity_headers(str_0)
