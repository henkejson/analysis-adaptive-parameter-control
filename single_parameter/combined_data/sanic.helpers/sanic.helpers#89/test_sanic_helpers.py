# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    bool_1 = module_0.has_message_body(bool_0)


def test_case_1():
    tuple_0 = ()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"WH\x10<\xa8\xf2\x1f\x99\xf4"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    module_0.is_entity_header(bool_0)


def test_case_6():
    int_0 = 2079
    var_0 = module_0.has_message_body(int_0)
    bool_0 = var_0.__repr__()
    int_1 = 200
    var_1 = module_0.has_message_body(int_1)
    var_2 = module_0.has_message_body(var_1)
    str_0 = var_1.__str__()
    module_0.remove_entity_headers(str_0)


def test_case_7():
    int_0 = 2079
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    int_1 = 204
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    var_2 = module_0.has_message_body(int_1)
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    str_3 = "1ED"
    var_3 = module_0.is_entity_header(str_3)
    bool_1 = module_0.is_atty()
    module_0.remove_entity_headers(int_1)
