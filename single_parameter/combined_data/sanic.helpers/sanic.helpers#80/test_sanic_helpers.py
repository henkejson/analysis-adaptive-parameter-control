# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "'e(Bk%B;&tk"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_5():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()


def test_case_6():
    int_0 = 225
    var_0 = module_0.has_message_body(int_0)
    str_0 = int_0.__str__()


def test_case_7():
    dict_0 = {}
    bool_0 = module_0.is_atty()
    bytes_0 = b"!\xe4\xab\xab\x8dr\xd4\x8c.h\x1f\xd7dze"
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_0.__str__()
    var_3 = var_0.__repr__()
    str_1 = var_2.__str__()
    var_4 = module_1.ismodule(str_1)
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = module_1.ismodule(var_2)
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    var_7 = var_4.__repr__()
    var_8 = bool_0.__repr__()
    var_9 = var_5.__repr__()
    var_10 = str_2.__repr__()
    int_0 = 204
    var_11 = module_0.has_message_body(int_0)
    dict_1 = {var_7: var_7}
    var_12 = module_0.remove_entity_headers(dict_1)
    str_3 = var_0.__str__()
    object_0 = module_2.object(*dict_0)
