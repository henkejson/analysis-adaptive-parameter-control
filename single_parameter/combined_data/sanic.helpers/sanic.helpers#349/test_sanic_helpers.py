# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"\x18"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    var_0 = module_1.ismodule(none_type_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(default_0)


def test_case_5():
    int_0 = 106
    var_0 = module_0.has_message_body(int_0)
    object_0 = module_2.object()
    module_0.import_string(var_0)


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()


def test_case_7():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = module_1.ismodule(var_0)
    bytes_0 = b"\xbe\x8d.F3^\xcc7\x86E\xaaI\xc4\x8a\xfa\xb9r\xc3\x08\x88"
    var_3 = var_1.__repr__()
    var_4 = module_0.is_entity_header(var_1)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_5 = module_0.is_entity_header(var_1)
    var_6 = module_0.remove_entity_headers(dict_0)
    var_7 = module_1.ismodule(int_0)
    bool_0 = module_0.is_atty()
    str_0 = var_7.__str__()
    var_8 = module_0.has_message_body(var_7)
    var_9 = var_7.__repr__()
    var_10 = var_4.__repr__()
    var_11 = module_0.is_entity_header(str_0)
    var_12 = var_10.__repr__()
    var_13 = module_1.ismodule(var_8)
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)
