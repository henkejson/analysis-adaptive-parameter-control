# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_1():
    bytes_0 = b"\xf1tD\xaa\xbe\x9f\x11M\xed\xbez\x92W\x08\x1a\x17\xc6\xaf\xd5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bytes_0 = b""
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_1.ismodule(list_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    float_0 = 304.0
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(float_0)
    str_2 = default_0.__str__()
    var_2 = var_0.__repr__()
    var_3 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    var_4 = module_0.is_hop_by_hop_header(str_2)
    module_0.is_entity_header(var_4)


def test_case_9():
    float_0 = 304.1481178330333
    var_0 = module_0.has_message_body(float_0)
    str_0 = var_0.__str__()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    module_0.is_entity_header(var_1)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    str_0 = var_0.__str__()
    float_0 = 304.0
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(float_0)
    var_2 = var_0.__repr__()
    var_3 = var_0.__repr__()
    module_0.is_hop_by_hop_header(var_0)


def test_case_11():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0, str_0)
