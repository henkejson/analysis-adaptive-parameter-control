# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.has_message_body(object_0)


def test_case_1():
    bool_0 = False
    module_1.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    default_0 = module_1.Default()


def test_case_4():
    bool_0 = module_1.is_atty()
    module_1.is_entity_header(bool_0)


def test_case_5():
    bool_0 = True
    module_1.is_hop_by_hop_header(bool_0)


def test_case_6():
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()
    var_1 = module_1.is_hop_by_hop_header(var_0)
    bool_0 = module_1.is_atty()
    object_0 = module_0.object()
    default_1 = module_1.Default()
    str_0 = default_0.__str__()
    module_1.is_entity_header(object_0)


def test_case_8():
    bool_0 = True
    var_0 = module_1.has_message_body(bool_0)
    default_0 = module_1.Default()


def test_case_9():
    float_0 = 434.28
    var_0 = module_1.has_message_body(float_0)
    module_1.remove_entity_headers(var_0)


def test_case_10():
    str_0 = "k#~PIU]2&MBYF\x0cn"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0, str_0)


def test_case_11():
    bytes_0 = b"k\x95#I\xa5E9\xe1\xb0"
    default_0 = module_1.Default()
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_1.remove_entity_headers(dict_0)
    bool_0 = module_1.is_atty()
    str_0 = default_0.__str__()
    str_1 = var_0.__str__()
    var_1 = module_1.remove_entity_headers(var_0)
    default_1 = module_1.Default()
    var_2 = module_1.is_hop_by_hop_header(bytes_0)
    var_3 = module_2.ismodule(bool_0)
    float_0 = 204.0
    var_4 = module_1.has_message_body(var_2)
    bool_1 = True
    default_2 = module_1.Default()
    str_2 = var_1.__str__()
    var_5 = module_1.has_message_body(float_0)
    var_6 = var_4.__repr__()
    var_7 = module_1.remove_entity_headers(var_0, var_0)
    object_0 = module_0.object()
    module_1.remove_entity_headers(bool_1)
