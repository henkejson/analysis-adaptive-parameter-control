# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    tuple_0 = ()
    module_0.has_message_body(tuple_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    dict_0 = {str_0: bool_0, bool_0: str_0, str_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    str_0 = "Resource type improperly identified as file. '"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    module_0.remove_entity_headers(bool_0, bool_0)


def test_case_6():
    none_type_0 = None
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.has_message_body(none_type_0)


def test_case_7():
    float_0 = -3998.0
    none_type_0 = None
    var_0 = module_1.ismodule(none_type_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(float_0)
    module_0.remove_entity_headers(none_type_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    var_1 = var_0.__repr__()
    str_0 = "*"
    dict_0 = {str_0: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    var_3 = str_1.__repr__()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_9():
    float_0 = 201.22192085477565
    var_0 = module_0.has_message_body(float_0)


def test_case_10():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    bytes_0 = b"]\xe9,\xb4\xcb\x903\xfb"
    bool_0 = module_0.is_atty()
    var_2 = module_0.is_entity_header(bytes_0)
    var_3 = module_0.has_message_body(var_2)
    module_0.remove_entity_headers(bytes_0)
