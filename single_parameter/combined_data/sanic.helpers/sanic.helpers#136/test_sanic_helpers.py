# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.has_message_body(list_0)


def test_case_1():
    int_0 = -46
    module_1.remove_entity_headers(int_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    int_0 = -2446
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_1.remove_entity_headers(dict_0)


def test_case_4():
    complex_0 = -3247.3 + 683.013138j
    module_1.is_hop_by_hop_header(complex_0)


def test_case_5():
    int_0 = 303
    bool_0 = module_1.is_atty()
    var_0 = module_1.has_message_body(int_0)
    default_0 = module_1.Default()
    var_1 = default_0.__repr__()
    module_1.is_entity_header(bool_0)


def test_case_6():
    int_0 = 400
    bool_0 = module_1.is_atty()
    var_0 = module_1.has_message_body(int_0)
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    var_1 = bool_0.__repr__()
    bool_1 = module_1.is_atty()
    var_2 = var_1.__repr__()
    var_3 = var_2.__repr__()
    var_4 = module_1.is_entity_header(var_2)
    str_1 = var_4.__str__()


def test_case_7():
    bool_0 = False
    bool_1 = module_1.is_atty()
    bool_2 = module_1.is_atty()
    var_0 = module_1.has_message_body(bool_0)
    module_1.is_hop_by_hop_header(bool_2)


def test_case_8():
    int_0 = 303
    bool_0 = module_1.is_atty()
    var_0 = module_1.has_message_body(int_0)
    bool_1 = module_1.is_atty()


def test_case_9():
    str_0 = "`Qn,= E[WU>(t"
    dict_0 = {str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 304
    bool_0 = module_1.is_atty()
    var_0 = module_1.has_message_body(int_0)
    default_0 = module_1.Default()
    bool_1 = module_2.ismodule(default_0)
    bool_2 = module_1.is_atty()
    default_1 = module_1.Default()
    var_1 = default_1.__repr__()
    str_0 = default_1.__str__()
    var_2 = var_0.__repr__()
    bool_3 = module_1.is_atty()
    set_0 = {var_0, default_0}
    module_1.is_hop_by_hop_header(set_0)
