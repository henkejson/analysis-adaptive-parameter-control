# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_1():
    str_0 = "S"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    list_0 = []
    module_0.remove_entity_headers(list_0, list_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    str_1 = ""
    default_0 = module_0.Default()
    var_1 = module_0.is_hop_by_hop_header(str_1)
    str_2 = var_1.__str__()


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    int_0 = 384
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_1.ismodule(default_0)


def test_case_6():
    int_0 = 365
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_7():
    str_0 = "S"
    dict_0 = {str_0: str_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    object_0 = module_2.object()
    default_0 = module_0.Default()
    bytes_0 = b"r\xe2\xa19\xcd?\x00\x0e\x10\xc6\x0f\xc8\xec\x9c\x83;;\x9fd"
    var_1 = module_1.ismodule(bytes_0)
    default_1 = module_0.Default()
    str_1 = default_0.__str__()
    var_2 = module_0.has_message_body(var_1)
    var_3 = module_0.is_entity_header(str_1)
    int_0 = 304
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_0.__repr__()
    bool_1 = module_0.is_entity_header(var_5)
