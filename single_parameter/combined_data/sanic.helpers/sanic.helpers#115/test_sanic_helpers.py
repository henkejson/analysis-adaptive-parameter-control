# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    int_0 = 406
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    default_0 = module_0.Default()
    module_0.remove_entity_headers(default_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bytes_0 = b"\x8a4\x0c\xecy\xd4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_0 = default_1.__str__()


def test_case_7():
    int_0 = 406
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_8():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = var_1.__str__()
    str_1 = '(h"7x\\1Y_('
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_2 = module_0.is_hop_by_hop_header(str_1)
    str_2 = module_1.ismodule(var_0)
    var_3 = module_1.ismodule(var_2)
    var_4 = module_0.is_hop_by_hop_header(str_1)
    object_0 = module_2.object()
    var_5 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    tuple_0 = (str_1, var_2)
    default_2 = module_0.Default()
    bool_1 = False
    var_6 = module_0.has_message_body(int_0)
    str_3 = default_1.__str__()
    var_7 = module_0.has_message_body(var_6)
    var_8 = module_0.has_message_body(var_4)
    var_9 = var_1.__repr__()
    var_10 = module_0.has_message_body(var_7)
    str_4 = var_4.__str__()
    var_11 = module_0.is_hop_by_hop_header(var_9)
    str_5 = var_0.__str__()
    str_6 = default_0.__str__()
    dict_0 = {str_2: var_4, tuple_0: var_7, bool_1: var_4, var_4: tuple_0}
    module_0.remove_entity_headers(dict_0)
