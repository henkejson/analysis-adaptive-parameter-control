# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bytes_0 = b"\xf1\xd4u\xca}+\xcf\xa3\xbe\xbc\x11\xa8#\xb6\xf4\xeb"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()


def test_case_7():
    int_0 = 405
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default(**var_0)
    bool_1 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_2 = var_0.__repr__()
    var_3 = default_0.__repr__()
    var_4 = module_0.has_message_body(bool_1)
    var_5 = var_4.__repr__()
    var_6 = module_0.has_message_body(var_4)
    var_7 = var_5.__repr__()
    object_0 = module_1.object()
    bool_2 = module_0.is_atty()
    int_0 = 304
    var_8 = module_0.has_message_body(int_0)
    str_1 = var_5.__str__()
    dict_1 = {var_2: var_4, var_7: dict_0, var_3: dict_0, var_5: var_4}
    var_9 = module_0.remove_entity_headers(dict_1)
    module_0.is_hop_by_hop_header(var_8)
