# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    set_0 = set()
    module_0.has_message_body(set_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\x04\x11Jb\xb2\x05~R5\xec\xad\xcf\x13{\x90"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bool_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    default_0 = module_0.Default()
    str_1 = default_0.__str__()


def test_case_7():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    module_0.Default(*none_type_0, **var_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    int_0 = 100
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_3 = var_0.__repr__()
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_4.__repr__()
    str_1 = default_0.__str__()
    str_2 = default_0.__str__()
    var_6 = var_4.__repr__()
    var_7 = var_6.__repr__()
    default_1 = module_0.Default()
    var_8 = var_2.__repr__()
    var_9 = module_0.has_message_body(bool_0)
    var_10 = var_6.__repr__()
    var_11 = module_0.is_entity_header(var_8)
    module_0.is_entity_header(var_0)
