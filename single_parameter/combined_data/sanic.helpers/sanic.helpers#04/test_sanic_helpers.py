# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.import_string(bool_0)


def test_case_1():
    bool_0 = False
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bytes_0 = b"\x8e\xf96f\xcda\xc1\xf6\x9f\x8e\x02\xdb\x16"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    module_0.has_message_body(default_0)


def test_case_6():
    int_0 = 152
    var_0 = module_0.has_message_body(int_0)
    str_0 = int_0.__str__()
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()
    str_1 = default_0.__str__()
    var_3 = module_0.is_hop_by_hop_header(var_1)
    var_4 = var_3.__repr__()
    dict_0 = {var_4: var_4, var_1: var_4, var_1: var_1}
    var_5 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    str_0 = int_0.__str__()
    str_1 = var_0.__str__()
    str_2 = str_1.__str__()
    default_0 = module_0.Default()
    var_1 = module_0.is_hop_by_hop_header(str_1)
    str_3 = default_0.__str__()
    str_4 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_1.__repr__()
    str_5 = var_3.__str__()
    var_4 = module_0.has_message_body(var_2)
    var_5 = default_0.__repr__()
    var_6 = module_0.is_entity_header(str_1)
    dict_0 = {
        var_5: var_5,
        bool_0: int_0,
        var_5: var_5,
        var_0: int_0,
        var_5: var_5,
        default_0: default_0,
    }
    module_0.remove_entity_headers(dict_0)
