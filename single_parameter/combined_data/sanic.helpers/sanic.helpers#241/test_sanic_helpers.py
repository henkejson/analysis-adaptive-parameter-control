# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "q4Y(>="
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    int_0 = 942
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    int_0 = 100
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    module_0.has_message_body(default_0)


def test_case_6():
    bool_0 = False
    int_0 = 11
    var_0 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()
    str_0 = var_0.__str__()
    default_0 = module_0.Default()
    bytes_0 = b""
    tuple_0 = (bool_0, bytes_0, bytes_0, bool_0)
    str_1 = default_0.__str__()
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)
    var_1 = var_0.__repr__()


def test_case_8():
    float_0 = 2351.177561
    var_0 = module_0.has_message_body(float_0)
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_9():
    str_0 = "q4Y(>"
    dict_0 = {str_0: str_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.is_entity_header(str_0)
    var_2 = module_1.ismodule(bool_0)
    var_3 = module_0.has_message_body(bool_0)
    var_4 = module_0.has_message_body(var_1)
    bool_1 = module_0.is_atty()
    int_0 = 204
    var_5 = module_0.has_message_body(int_0)
    str_1 = "#-OD-sVq';d-"
    var_6 = var_5.__repr__()
    var_7 = module_0.is_entity_header(str_1)
    str_2 = "3r0v|KfhTO_v@\x0cs2O"
    var_8 = module_1.ismodule(str_2)
    bool_2 = True
    var_9 = module_1.ismodule(bool_2)
    var_10 = var_9.__repr__()
    module_0.is_hop_by_hop_header(var_9)


def test_case_10():
    str_0 = "content-location"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.is_entity_header(str_0)
    var_2 = var_0.__repr__()
    var_3 = var_2.__repr__()
    str_1 = "#-OD-sVq';d-"
    var_4 = var_1.__repr__()
    var_5 = module_0.is_entity_header(str_1)
    str_2 = "3r0v|KfhTO_v@\x0cs2O"
    var_6 = module_1.ismodule(str_2)
    bool_0 = True
    var_7 = module_1.ismodule(bool_0)
    var_8 = module_0.is_hop_by_hop_header(var_4)
    str_3 = var_7.__str__()
    str_4 = var_4.__str__()
    module_0.import_string(var_0)


def test_case_11():
    str_0 = "content-location"
    dict_0 = {str_0: str_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_1 = module_0.is_entity_header(str_0)
    var_2 = var_0.__repr__()
    module_0.has_message_body(var_2)
