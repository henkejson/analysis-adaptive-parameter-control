# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    dict_0 = {}
    module_0.has_message_body(dict_0)


def test_case_1():
    str_0 = "t`*o"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    dict_0 = {}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_6():
    float_0 = 20.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_2 = default_1.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    bytes_0 = b"2\xf6?_E\x06l\x07\xef"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    int_0 = 183
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(bool_1)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    int_0 = 142
    var_1 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_9():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_10():
    bytes_0 = b"Create\x7fd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    default_0 = module_0.Default()
    bytes_0 = b"2\xf6?_E\x06l\x07\xef"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    int_0 = 204
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(bool_1)
