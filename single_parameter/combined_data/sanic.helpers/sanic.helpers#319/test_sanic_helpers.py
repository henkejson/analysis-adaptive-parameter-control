# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    float_0 = 15.0
    module_0.remove_entity_headers(float_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    float_0 = 13.391072
    set_0 = {float_0, float_0}
    module_0.is_entity_header(set_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_entity_header(default_0)


def test_case_6():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    bool_1 = default_0.__repr__()
    none_type_0 = None
    var_1 = module_0.has_message_body(int_0)
    module_0.import_string(none_type_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.is_entity_header(str_0)
    int_0 = 204
    var_1 = module_0.has_message_body(int_0)
    default_1 = module_0.Default()
    str_1 = "Ju"
    tuple_0 = (str_1,)
    str_2 = module_1.ismodule(var_1)
    bool_0 = module_1.ismodule(default_1)
    str_3 = default_0.__str__()
    bool_1 = module_0.is_atty()
    str_4 = "`g9)\x0b"
    dict_0 = {str_1: int_0, str_0: tuple_0, str_4: str_0, str_0: str_1}
    str_5 = dict_0.__str__()
    module_0.Default(**dict_0)


def test_case_8():
    bytes_0 = b"Rv\xd5\x07\xdd\xe7\xa7\xa2\xfd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
