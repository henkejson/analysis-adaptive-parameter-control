# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    complex_0 = -245.23 - 623.757j
    module_0.has_message_body(complex_0)


def test_case_1():
    str_0 = "Lax"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "UTF-8"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    str_0 = default_0.__str__()
    var_2 = module_0.has_message_body(var_0)


def test_case_5():
    str_0 = "EW^th>Cu^CF3a1R\x0bt6E"
    int_0 = 1051
    var_0 = module_0.has_message_body(int_0)
    str_1 = var_0.__str__()
    set_0 = {int_0, str_1, str_1}
    tuple_0 = (str_0, int_0, set_0)
    module_0.is_entity_header(tuple_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.has_message_body(bool_0)
    var_0 = module_0.has_message_body(default_0)


def test_case_7():
    int_0 = 304
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = "f"
    dict_0 = {str_0: str_0, str_0: str_0}
    default_1 = module_0.Default()
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()
    str_1 = dict_0.__str__()
    var_3 = str_0.__repr__()
    str_2 = var_0.__str__()
    var_4 = module_0.is_entity_header(str_0)
    bool_1 = module_0.is_atty()
    str_3 = default_1.__str__()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_8():
    int_0 = 304
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0}
    default_1 = module_0.Default()
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()
    str_1 = module_0.remove_entity_headers(var_2)
    var_3 = str_0.__repr__()
    str_2 = var_0.__str__()
    var_4 = module_0.Default()
    bool_1 = module_0.is_atty()
    str_3 = default_1.__str__()
    var_5 = module_1.object()
    module_0.remove_entity_headers(var_4)
