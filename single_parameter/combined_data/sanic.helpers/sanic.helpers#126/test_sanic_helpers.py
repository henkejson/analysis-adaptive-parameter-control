# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = True
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b'";\\\x7f'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_0 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    bool_1 = True
    list_0 = [bool_1]
    module_0.is_entity_header(list_0)


def test_case_7():
    int_0 = 318
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bytes_0 = b"0Q\xe7\xc4\x1a\x0b\xf4*\x07\xb9\x9f\xa2\xba"
    var_1 = bool_0.__repr__()
    var_2 = module_0.has_message_body(bool_0)
    dict_0 = {bytes_0: var_0, bytes_0: var_0}
    var_3 = module_0.has_message_body(var_2)
    var_4 = module_0.remove_entity_headers(dict_0)
    str_0 = var_4.__str__()
    str_1 = var_1.__str__()
    str_2 = bytes_0.__str__()
    int_0 = 304
    var_5 = module_0.has_message_body(int_0)
    var_6 = var_4.__repr__()
    var_7 = var_1.__repr__()
    default_0 = module_0.Default()
    var_8 = default_0.__repr__()
    var_9 = module_0.is_hop_by_hop_header(var_1)
    var_10 = module_0.is_hop_by_hop_header(var_1)
