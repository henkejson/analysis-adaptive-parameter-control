# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import inspect as module_0
import sanic.helpers as module_1


def test_case_0():
    int_0 = -748
    var_0 = module_0.ismodule(int_0)
    var_1 = module_1.has_message_body(var_0)
    bool_0 = module_1.is_atty()


def test_case_1():
    bytes_0 = b"\xafDz\xda\x16\x01\x05FP{\xd7\x0b\x14\\\x11\x95\x94\xa39\x9c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_2():
    bytes_0 = b""
    module_1.remove_entity_headers(bytes_0, bytes_0)


def test_case_3():
    bool_0 = module_1.is_atty()


def test_case_4():
    bool_0 = True
    module_1.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = False
    var_0 = module_1.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = module_1.Default()
    var_2 = var_1.__repr__()
    module_1.remove_entity_headers(var_0)


def test_case_6():
    bool_0 = False
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    var_0 = module_1.has_message_body(bool_0)
    str_1 = var_0.__str__()
    var_1 = str_1.__repr__()
    var_2 = var_1.__repr__()
    dict_0 = {str_1: bool_0, var_0: var_0, var_0: var_0, var_0: var_1, bool_0: bool_0}
    bool_1 = module_1.is_atty()
    module_1.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 307
    var_0 = module_1.has_message_body(int_0)
    var_1 = int_0.__repr__()
    module_1.Default(**var_0)


def test_case_8():
    int_0 = 304
    bool_0 = module_1.is_atty()
    bool_1 = module_1.is_atty()
    var_0 = module_1.has_message_body(int_0)
    str_0 = var_0.__str__()
    int_1 = -675
    module_1.remove_entity_headers(int_1)
