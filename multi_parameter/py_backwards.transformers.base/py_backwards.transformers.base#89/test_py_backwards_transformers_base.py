# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bytes_0 = b"\xe9=\x9c\x81\xa4\xfe]\xda\x0b$F\x9f*rK\xb2\x18"
    base_node_transformer_0 = module_0.BaseNodeTransformer(bytes_0)


def test_case_1():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(list_0)
    import_from_0 = module_1.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit(import_from_0)


def test_case_2():
    bytes_0 = b"c\xf6}r\x01`\x10yg\xa0w\xc1>\xdf\xea\xc3"
    list_0 = [bytes_0, bytes_0, bytes_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(list_0)
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit(import_from_0)


def test_case_3():
    bytes_0 = b"\x92\x04r\xb0P\xeb"
    dict_0 = module_2.iter_fields(bytes_0)
    bit_or_0 = module_1.BitOr()
    none_type_0 = None
    base_import_rewrite_0 = module_0.BaseImportRewrite(none_type_0)
    none_type_1 = None
    list_0 = [none_type_1]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
