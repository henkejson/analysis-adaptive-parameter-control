# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    yield_from_0 = module_1.YieldFrom()
    list_0 = [yield_from_0, yield_from_0, yield_from_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    yield_from_0 = module_1.YieldFrom()
    base_node_transformer_0 = module_0.BaseNodeTransformer(yield_from_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(yield_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    yield_from_0 = module_1.YieldFrom()
    var_0 = module_2.walk(yield_from_0)
    list_0 = [yield_from_0, var_0, yield_from_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    yield_from_0 = module_1.YieldFrom()
    var_0 = module_2.iter_child_nodes(yield_from_0)
    list_0 = [yield_from_0, var_0, yield_from_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(import_from_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
