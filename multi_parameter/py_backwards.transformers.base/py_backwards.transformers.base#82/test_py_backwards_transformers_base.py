# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    import_0 = module_0.Import()
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_0)


def test_case_1():
    operator_0 = module_0.operator()
    list_0 = [operator_0]
    base_import_rewrite_0 = module_1.BaseImportRewrite(operator_0)
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    base_import_rewrite_0 = module_1.BaseImportRewrite(list_0)
    import_from_0 = module_0.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "configparser"
    list_0 = [str_0, str_0]
    base_import_rewrite_0 = module_1.BaseImportRewrite(str_0)
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    none_type_0 = None
    list_0 = [none_type_0]
    generator_exp_0 = module_0.GeneratorExp(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(generator_exp_0)
    var_0 = base_import_rewrite_0.generic_visit(generator_exp_0)
    str_0 = "He 962M\nEt|4C"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bit_and_0 = module_0.BitAnd(**dict_0)
    var_1 = module_2.iter_child_nodes(bit_and_0)
    base_import_rewrite_1 = module_1.BaseImportRewrite(bit_and_0)
    dict_1 = {}
    base_import_rewrite_2 = module_1.BaseImportRewrite(dict_1)
    import_from_0 = module_0.ImportFrom(*list_0, **dict_1)
    base_import_rewrite_1.visit_ImportFrom(import_from_0)
