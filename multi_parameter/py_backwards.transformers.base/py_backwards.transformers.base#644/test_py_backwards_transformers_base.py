# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    slice_0 = module_0.slice()
    base_import_rewrite_0 = module_1.BaseImportRewrite(slice_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [bool_0, tuple_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(bool_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bool_0 = False
    base_import_rewrite_0 = module_1.BaseImportRewrite(bool_0)
    none_type_0 = None
    none_type_1 = None
    base_import_rewrite_1 = module_1.BaseImportRewrite(none_type_1)
    tuple_0 = (bool_0,)
    list_0 = [none_type_0, bool_0, tuple_0]
    str_0 = "Um{\rGL6EqBu?`s"
    dict_0 = {str_0: list_0}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_2 = module_1.BaseImportRewrite(import_from_0)
    base_import_rewrite_2.visit_ImportFrom(import_from_0)
