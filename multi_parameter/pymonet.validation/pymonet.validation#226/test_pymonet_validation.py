# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "'C>\\=<3;\x0b>xL+XA^\r|G"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_maybe()


def test_case_1():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_2():
    str_0 = "2MkF^'/h N;l97zBOE-"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    str_0 = "3YTOp-\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Map[B]\n        :returns: new Map with concated all values\n        :rtype: Map[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    str_0 = '"lLM"#M?mr<;i'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    str_0 = "]WPgZaFc-N"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_7():
    str_0 = 'J\r;X"[z#E"}Z_}/'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = "io/,|sSbcan86P"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_9():
    str_0 = "2PjB$Oz_>Q5;\n#Zkr\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_10():
    str_0 = "P"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bytes_0 = b"\xb78\xd09\xfd\x93\x1e[\xde\xee\xbf\x16"
    int_0 = 1204
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bytes_0)
    var_1.to_box()


def test_case_12():
    str_0 = "}144"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_13():
    str_0 = "U>{{k'.-"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_15():
    str_0 = "io/,r|sebkan86P4"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_16():
    tuple_0 = ()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_17():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.to_maybe()
