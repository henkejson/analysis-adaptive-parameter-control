# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "o?LDKPaoT"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(validation_0)


def test_case_1():
    float_0 = 5256.9687
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.bind(var_0)


def test_case_2():
    str_0 = "Max[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    validation_2 = module_0.Validation(set_0, set_0)
    var_2 = validation_2.to_maybe()
    var_2.bind(var_1)


def test_case_4():
    float_0 = -1589.919
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.__str__()
    var_2 = var_0.__str__()
    var_3 = validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\x97VQ_"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_box()
    validation_1.map(var_1)


def test_case_8():
    complex_0 = 4326.071 + 936.48j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(complex_0, complex_0)
    validation_1.ap(validation_0)


def test_case_9():
    bool_0 = True
    str_0 = "5]%IA'^-%k`ZcV\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(bool_0)


def test_case_10():
    str_0 = "&1"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.to_maybe()
    validation_0.ap(str_0)


def test_case_11():
    bool_0 = False
    float_0 = -1112.309256
    set_0 = {float_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, float_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.ap(var_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"\xd8/\xb4!\xc7i\xd0\x16\x96\xcc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_0.is_success()


def test_case_13():
    bool_0 = False
    str_0 = "5]%IA'^-%k`ZcV\x0b"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_2.to_lazy()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    validation_2 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.to_either()
    var_2 = validation_2.__str__()
    var_3 = validation_2.__str__()
    var_4 = validation_0.__str__()
    var_5 = validation_1.is_fail()
    var_6 = validation_1.is_success()
    var_7 = validation_1.__eq__(validation_2)
    var_8 = var_5.__eq__(var_6)
    var_7.is_fail()
