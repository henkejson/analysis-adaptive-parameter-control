# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_try()
    var_1.to_maybe()


def test_case_1():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__str__()
    var_1.to_box()


def test_case_2():
    bool_0 = False
    bool_0.is_fail()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    dict_0.bind(dict_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(none_type_0)


def test_case_6():
    int_0 = 412
    float_0 = -2250.281057
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(int_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_8():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.to_box()
    var_5 = validation_0.to_try()
    var_6 = var_3.bind(var_4)
    validation_0.ap(validation_0)


def test_case_9():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_try()
    var_3 = validation_0.__str__()
    var_4 = var_1.to_box()
    var_4.bind(var_2)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.to_either()


def test_case_11():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_lazy()


def test_case_12():
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_maybe()
    var_1.to_box()


def test_case_13():
    str_0 = "\n    Immutable list is data structure that doesn't allow to mutate instances\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    bytes_0 = b".1O\xfa\xf9n\xd0"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_1.__str__()
    var_3 = var_0.to_lazy()
    var_4 = var_0.to_try()
    var_5 = var_4.__str__()
    validation_1.ap(none_type_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()
