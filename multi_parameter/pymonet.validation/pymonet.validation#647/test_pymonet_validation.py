# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "\n6\x0c>q'mZaTDV"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_2.map(str_0)


def test_case_1():
    str_0 = '">'
    str_1 = "\n6\x0c>q'mZaTDV"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_1)
    var_0 = validation_0.__eq__(str_1)
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(str_1, str_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_box()
    var_5 = validation_0.__eq__(var_4)
    var_4.ap(var_5)


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    str_0 = "\n    Data type for storage any type of data\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_6():
    float_0 = 859.8
    str_0 = "C\\$yfBCtoZD"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(float_0)


def test_case_7():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.ap(dict_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.map(none_type_0)


def test_case_9():
    float_0 = -2588.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = var_0.to_either()
    validation_1.to_try()


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.__str__()
    var_3 = var_2.__str__()
    var_4 = validation_1.to_either()
    var_5 = validation_1.to_try()
    var_3.to_try()


def test_case_12():
    bool_0 = False
    dict_0 = {}
    tuple_0 = (dict_0,)
    bytes_0 = b">\xe3Q\x9d\xd3>\x1d\x1bi\x90U2Q\xcd\xd7\x00\xe3?!"
    list_0 = [bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_4 = module_0.Validation(bool_0, list_0)
    var_5 = var_4.__str__()
    var_5.ap(tuple_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_maybe()
    var_0.ap(none_type_0)


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_1, bool_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = var_0.to_maybe()
    var_0.to_box()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_16():
    str_0 = '">'
    str_1 = "\n6\x0c>q'mZaTDV"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_1)
    var_0 = validation_0.__eq__(str_1)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_1 = validation_1.to_box()
    var_2 = var_0.__eq__(str_0)
    validation_2 = module_0.Validation(var_2, str_1)
    var_3 = var_2.__eq__(var_0)
    var_4 = validation_0.to_maybe()
    var_2.to_box()
