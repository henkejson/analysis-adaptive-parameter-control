# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    bytes_0 = b"q\x93\xf6\x82"
    validation_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(bytes_0)
    validation_1.is_success()


def test_case_2():
    bytes_0 = b"e\xed\xda\xf2B"
    set_0 = set()
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    validation_0.bind(bytes_0)


def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_1.is_success()


def test_case_4():
    int_0 = 366
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    int_0 = -104
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_8():
    bool_0 = True
    int_0 = 2048
    tuple_0 = (bool_0, int_0)
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(tuple_0)


def test_case_9():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_either()
    bytes_0 = b"q\x93\xf6"
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_3 = validation_2.to_box()
    var_2.map(validation_1)


def test_case_10():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_either()
    bytes_0 = b"q\x93\xf6"
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__eq__(bytes_0)
    var_3 = validation_2.to_lazy()
    validation_0.is_success()


def test_case_11():
    bool_0 = True
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(bool_0)
    var_3.to_either()


def test_case_12():
    float_0 = 3856.3
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_13():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.is_success()


def test_case_14():
    str_0 = "hvvQ)5SE"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.is_fail()
    none_type_1 = None
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.bind(none_type_1)
    var_2.to_maybe()


def test_case_15():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    str_0 = "ch[jR/.@9pPd%="
    var_2 = validation_0.__eq__(str_0)
    none_type_0 = None
    list_0.bind(none_type_0)
