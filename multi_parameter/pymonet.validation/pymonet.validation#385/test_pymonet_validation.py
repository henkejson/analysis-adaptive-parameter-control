# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 2912
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(int_0, var_1)
    var_2 = validation_0.to_try()
    validation_2 = module_0.Validation(validation_0, str_0)
    var_3 = validation_0.__eq__(validation_2)
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.to_maybe()
    var_3.to_try()


def test_case_1():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.is_success()


def test_case_2():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    tuple_0 = ()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(tuple_0)


def test_case_4():
    bytes_0 = b"\x13:\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = validation_0.to_try()
    var_0 = validation_0.to_maybe()
    validation_1.to_box()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    complex_0 = -1270.08 - 1063.04j
    int_0 = -3252
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(complex_0)


def test_case_9():
    dict_0 = {}
    tuple_0 = (dict_0,)
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"\xf4\xa2\xf0\x98\xac\x80\xb8\xd8U\xe70\x95uQ\x0f\xfb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bool_0)


def test_case_11():
    bytes_0 = b"\x01\xeboQ\xea\x97q\x0e\x8b\xc3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = validation_0.to_maybe()
    var_4 = var_1.to_maybe()
    var_5 = validation_0.to_maybe()
    var_6 = var_3.__str__()
    var_7 = validation_0.to_try()
    var_8 = validation_0.to_box()
    var_9 = var_3.to_either()
    var_8.map(var_5)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()


def test_case_14():
    bytes_0 = b"\x13:\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    bytes_0.is_success()


def test_case_15():
    int_0 = 2871
    str_0 = "w1\\h+u%Tp"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(validation_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_1.to_box()


def test_case_16():
    int_0 = -1025
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    validation_0.ap(int_0)
