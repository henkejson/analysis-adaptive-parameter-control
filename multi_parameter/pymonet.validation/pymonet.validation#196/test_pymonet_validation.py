# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 2646
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_1():
    bytes_0 = b"~\xde\xdc7\x8e\x02\xfb7\xef\x84H\x1f4\xa7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    var_0.ap(var_0)


def test_case_3():
    str_0 = '?DD=6\n"kGms'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    bool_0 = True
    bytes_0 = b"&'dn\x02\xed/"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(bool_0)
    validation_0.ap(validation_0)


def test_case_5():
    bytes_0 = b"&'dn\x02\xed/"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_7():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_fail()
    var_1.map(var_0)


def test_case_8():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, str_0)
    validation_0.map(list_0)


def test_case_9():
    int_0 = -1249
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(int_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_12():
    int_0 = 2646
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(dict_0)
    var_3 = validation_0.to_either()
    var_2.ap(var_2)


def test_case_14():
    bool_0 = False
    bytes_0 = b"'\x1c7dn\x02\xed/"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.bind(var_1)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_maybe()
    var_0.ap(var_0)


def test_case_16():
    int_0 = 2646
    bytes_0 = b"&'dn\x02\xed/"
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(int_0)
    tuple_0 = (validation_0, validation_0)
    validation_1 = module_0.Validation(tuple_0, var_0)
    var_2 = validation_1.__eq__(validation_0)
