# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_0.bind(validation_0)


def test_case_1():
    str_0 = "j"
    int_0 = 2608
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.is_success()


def test_case_2():
    str_0 = "j"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    str_0 = "\n5G>ZyghLB[0YL;'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_1.to_box()
    var_3 = validation_0.__eq__(validation_0)
    var_2.bind(var_2)


def test_case_4():
    bool_0 = False
    var_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    str_0 = "j"
    var_0 = module_0.Validation(str_0, str_0)
    var_1 = var_0.is_success()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "\n5G>ZyghLB[0YL;'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    bool_0 = False
    validation_1 = module_0.Validation(var_0, bool_0)
    var_1 = validation_0.__str__()
    var_2 = validation_1.to_box()
    var_2.ap(validation_1)


def test_case_8():
    str_0 = "\n5G>ZyghLB[0YL;'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(var_1, none_type_0)
    validation_2 = module_0.Validation(var_1, validation_1)
    var_2 = validation_0.to_box()
    var_3 = validation_1.__eq__(str_0)
    validation_1.bind(validation_2)


def test_case_9():
    str_0 = "\n5G>ZyghLB[0YL;'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = var_1.to_box()
    str_1 = "\n5G>ZyghLB[0YL;'"
    validation_1 = module_0.Validation(str_1, str_1)
    validation_2 = module_0.Validation(str_1, var_2)
    var_4 = validation_0.__str__()
    var_5 = validation_2.to_box()
    var_6 = validation_0.__eq__(str_0)
    validation_0.ap(str_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "jAW{,L9"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    str_0 = "~Ceo1\\"
    tuple_0 = ()
    validation_0 = module_0.Validation(str_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.__eq__(var_1)
    var_4 = var_1.__eq__(var_2)
    var_1.to_either()


def test_case_14():
    int_0 = -747
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_maybe()
    var_2.ap(none_type_0)


def test_case_15():
    str_0 = "\n5G>ZyghLB[0YL;'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    bool_0 = True
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_2.to_box()
    var_3 = validation_0.__eq__(validation_1)
    validation_2.bind(var_3)


def test_case_16():
    float_0 = 2335.439
    tuple_0 = ()
    validation_0 = module_0.Validation(float_0, float_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.__str__()
    var_0.bind(validation_0)
