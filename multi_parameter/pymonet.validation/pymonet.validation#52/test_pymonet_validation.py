# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    int_0 = 1989
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.__str__()


def test_case_1():
    str_0 = "{\x0ci"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_1.is_success()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    int_0 = 314
    list_0 = [int_0, int_0, int_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(list_0)
    validation_1 = module_0.Validation(var_1, list_0)
    var_2 = validation_1.is_fail()
    var_2.to_either()


def test_case_4():
    tuple_0 = ()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(tuple_0)


def test_case_5():
    str_0 = "b=\x0cw(9DuWUu{sb=XP"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_7():
    float_0 = 1015.325
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_8():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Max[B]\n        :returns: new Max with largest value\n        :rtype: Max[A | B]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    list_0 = [validation_0]
    var_2 = validation_0.__eq__(list_0)
    var_3 = validation_0.to_maybe()
    var_1.ap(var_1)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_10():
    bytes_0 = b"f\xa4\\\xa6\xb9\t\xa2;5\xc4\td"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_11():
    str_0 = ")xs![CfsV4Ej"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(str_0)
    var_1.is_fail()


def test_case_12():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(validation_0, var_1)
    var_2 = var_0.__str__()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_either()
    var_5 = validation_0.__str__()
    validation_2 = module_0.Validation(var_5, validation_1)
    var_6 = var_1.__str__()
    validation_2.__str__()


def test_case_13():
    str_0 = ")xs![CfsV4Ej"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(validation_0, var_1)
    var_2 = var_0.__str__()
    var_3 = validation_1.__eq__(validation_0)
    var_2.bind(validation_1)
