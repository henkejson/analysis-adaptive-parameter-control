# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    str_0 = 'rM-%B:ka$\nyH2E"'
    str_1 = "G?=F["
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.__eq__(str_0)
    var_0.bind(bool_0)


def test_case_1():
    str_0 = "<Au!)X "
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, str_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_try()
    var_4 = validation_0.to_either()
    var_5 = var_4.to_maybe()
    validation_1.bind(none_type_0)


def test_case_2():
    str_0 = "<Au!)X "
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_maybe()
    validation_1 = module_0.Validation(str_0, none_type_0)
    var_4 = var_3.to_try()
    none_type_0.to_maybe()


def test_case_3():
    int_0 = 928
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = -437
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.map(validation_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(validation_0)


def test_case_8():
    none_type_0 = None
    str_0 = "[*_F8<&vY.f\x0cz"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    validation_0.ap(none_type_0)


def test_case_9():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(list_0)


def test_case_10():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, bool_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(bool_0, bool_1)
    validation_1.is_fail()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    str_0 = "<Au!)X "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(tuple_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_14():
    str_0 = "<Au!)X "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_15():
    str_0 = "<Au!)X "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, var_0)
    tuple_0 = (var_0, var_0, var_0)
    validation_2 = module_0.Validation(tuple_0, validation_1)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.map(var_0)


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_try()
