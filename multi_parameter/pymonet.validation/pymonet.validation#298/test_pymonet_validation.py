# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.to_lazy()
    validation_1 = module_0.Validation(list_0, validation_0)
    var_4 = validation_1.__eq__(var_2)
    validation_2 = module_0.Validation(validation_1, validation_0)
    var_5 = var_3.to_try()
    var_6 = validation_0.to_box()
    var_5.to_maybe()


def test_case_1():
    str_0 = "BUfg,YZg`z^u"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.__str__()
    var_4 = var_2.to_try()
    var_5 = var_4.__eq__(var_2)
    validation_1 = module_0.Validation(var_3, var_3)
    var_6 = validation_0.to_try()
    var_7 = validation_1.to_try()
    var_8 = var_6.__eq__(var_2)
    var_9 = validation_1.is_success()
    var_3.is_fail()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_3():
    bytes_0 = b"\xce\xf9EY\x98N==\xa2*$"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = var_2.__str__()
    var_1.is_fail()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = validation_0.__eq__(list_0)
    validation_1 = module_0.Validation(var_2, list_0)
    var_4 = var_2.to_try()
    var_5 = var_0.to_box()
    var_4.is_fail()


def test_case_5():
    int_0 = 1141
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_0.to_box()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_9():
    int_0 = 551
    int_1 = 876
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.bind(int_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"\x03"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_11():
    int_0 = 672
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bytes_0 = b"\xbc\x1e6\x99"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, var_1)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = var_2.to_lazy()
    var_6 = var_1.__eq__(var_1)
    validation_2 = module_0.Validation(list_0, validation_0)
    var_7 = var_6.__eq__(var_5)
    validation_3 = module_0.Validation(list_0, validation_2)
    var_8 = var_2.to_try()
    var_9 = validation_1.is_fail()
    var_10 = var_5.ap(var_9)
    var_10.to_box()
