# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    str_0 = "8b17\x0b"
    float_0 = 769.854246
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__str__()
    var_1.bind(none_type_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    validation_0.bind(tuple_0)


def test_case_2():
    bytes_0 = b"\xe4\xf1\xbd\x91\xd9H\x9al\x11\xa0x:HL\x93\xcb\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.bind(var_1)
    var_1.to_lazy()


def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_4():
    bytes_0 = b"1@"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bytes_0 = b"\xe7\xd7\xb4.\xd4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xe4\xf1\xbd\x91\xd9H\x9al\x11\xa0x:HL\x93\xcb\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    float_0 = 498.396
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.map(bytes_0)


def test_case_8():
    float_0 = 2846.6
    bytes_0 = b"\xe0d\x9a\xfd\xfc\x0c\xc4\xb5\x7f"
    validation_0 = module_0.Validation(bytes_0, float_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = module_0.Validation(validation_0, validation_1)
    validation_1.ap(validation_0)


def test_case_9():
    float_0 = 2178.5
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()


def test_case_10():
    bytes_0 = b"=\xe6\x81\x9bjF\x10\xe2f@;hm"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    bytes_1 = b"{\xd8\x0b0\x0ft\xf4\x7f\xcd\xa5\xd2\xd8\x12\x11wx"
    validation_1 = module_0.Validation(validation_0, bytes_1)
    validation_0.map(var_0)


def test_case_11():
    bytes_0 = b"\xe4\xf1\xbd\x91\xd9H\x9al\x11\xa0x:HL\x93\xcb\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_2 = var_0.to_either()
    var_2.bind(bytes_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    str_0 = "8b17\x0b"
    float_0 = 769.854246
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = validation_1.__eq__(str_0)
    var_2 = var_1.__str__()
    none_type_0.ap(var_0)


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    str_0 = "8b17\x0b"
    var_2 = var_0.to_maybe()
    float_0 = 769.854246
    validation_1 = module_0.Validation(float_0, float_0)
    var_3 = validation_1.__eq__(str_0)
    var_4 = var_3.__str__()
    var_5 = var_2.ap(var_0)
    tuple_0 = (dict_0, var_0)
    validation_2 = module_0.Validation(var_5, tuple_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = (dict_0, var_0)
    validation_2 = module_0.Validation(var_0, tuple_0)
    var_1 = validation_2.__eq__(validation_0)
    validation_3 = module_0.Validation(var_0, var_0)
    var_2 = validation_2.__str__()
    var_3 = validation_0.is_fail()
    validation_3.to_maybe()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = (dict_0, var_0)
    validation_2 = module_0.Validation(var_0, tuple_0)
    var_1 = validation_2.__eq__(validation_2)
    validation_3 = module_0.Validation(var_0, var_0)
    var_1.is_fail()
