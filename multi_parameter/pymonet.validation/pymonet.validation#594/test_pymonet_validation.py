# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -390.52514 + 1203.26j
    set_0 = {complex_0, complex_0, complex_0}
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = var_0.__str__()
    var_1.ap(complex_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.to_lazy()
    var_1.is_success()


def test_case_2():
    list_0 = []
    complex_0 = 2337.56 + 1197j
    int_0 = -3423
    validation_0 = module_0.Validation(int_0, complex_0)
    validation_1 = module_0.Validation(complex_0, list_0)
    var_0 = validation_1.to_either()
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_3():
    bytes_0 = b"af\xfc\xecq\xce\xc3\xd0\xe4\xbfksU6\xc5"
    list_0 = [bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_4():
    bytes_0 = b"\xd4[C\x956"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_success()


def test_case_5():
    complex_0 = 663.7 + 429.16912j
    validation_0 = module_0.Validation(complex_0, complex_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.to_lazy()
    validation_2 = module_0.Validation(var_2, list_0)
    validation_3 = module_0.Validation(var_2, var_2)
    validation_3.is_fail()


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(dict_0, none_type_1)
    validation_0.map(none_type_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b"\x93\x8bK"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_10():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(list_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_1.to_box()
    var_0.is_fail()


def test_case_12():
    int_0 = 1600
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_15():
    str_0 = "CHRl\\.6o~`7Z"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = var_0.__eq__(str_0)
    var_2 = validation_0.__str__()
    var_1.ap(str_0)


def test_case_16():
    bytes_0 = b"%\xaao;\xab\xc2!"
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.map(bytes_0)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_2, list_0)
    validation_3 = module_0.Validation(var_2, var_2)
    validation_3.is_fail()
