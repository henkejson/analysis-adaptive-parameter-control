# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(none_type_0)
    var_2.to_either()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    bool_0 = True
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = var_0.__eq__(bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_lazy()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bytes_0 = b"\xda\xf8\xd4\xd5E\x06b\xb2\xaf \xe5\xb0\xf9\xa6j\x82\x83"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.is_success()
    var_1.to_either()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"8\xaeE\xab\xda\xb3z:\x80\xdd\xea\x9b\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_8():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Map[B]\n        :returns: new Map with concated all values\n        :rtype: Map[A]\n        "
    int_0 = 2034
    bool_0 = False
    dict_0 = {str_0: str_0, int_0: int_0, int_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    bool_1 = True
    validation_0 = module_0.Validation(none_type_0, bool_1)
    validation_0.ap(dict_0)


def test_case_9():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = validation_0.to_either()
    var_4 = var_1.__eq__(var_2)
    var_5 = var_2.__eq__(var_1)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_6 = validation_0.to_box()
    var_7 = validation_0.__eq__(validation_1)
    var_3.bind(var_4)


def test_case_10():
    bytes_0 = b"(c7zM\xeb\x1f\x16\x81\xc8e"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_1.__eq__(none_type_0)
    validation_0.is_fail()


def test_case_11():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(int_0)
    var_1.to_maybe()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xda\xf8\xd4\xd5E\x06b\xb2\xaf \xe5\xb0\xf9\xa6j\x82\x83"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.is_success()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_try()
    var_5 = var_3.to_box()
    var_6 = var_4.__eq__(validation_0)
    var_7 = var_3.bind(var_6)
    var_4.to_either()


def test_case_14():
    bytes_0 = b"iv\xb9_\xd6\xc7\x17t\x82\x90\xe0\x06\x08\xa9\xe1\x81L\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = validation_0.to_either()
    var_4 = var_1.__eq__(var_2)
    var_5 = var_2.__eq__(var_1)
    var_6 = var_3.__str__()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, var_1)
    var_7 = validation_0.__eq__(validation_0)
    validation_1.is_success()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    set_0.to_maybe()
