# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "$&z"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    str_0 = "U"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_3():
    str_0 = "\\Qt1+o_qtuZ-uO<r(Ln"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_4():
    str_0 = "\n        Take mapper function and returns result of them called with Right value.\n\n        :param mapper: function to apply on Right value\n        :type mapper: Function(A) -> Either[B]\n        :returns: result of mapper\n        :rtype: Either[B]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_5():
    str_0 = 't\rLa@iepx#"Tt4qIH'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()


def test_case_8():
    str_0 = "\x0bG}}"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_9():
    bytes_0 = b'?\x85\x87\x0b"\xef,\xf3\x19q\xd2hfAV\x03\xf7*\x8e'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_10():
    str_0 = "\x0bG}}"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_11():
    str_0 = "~rf[#B0v"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_12():
    str_0 = "\x0bG}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    str_0 = "u*?7|y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.is_fail()


def test_case_14():
    str_0 = "2Jq3Mctk4"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_15():
    str_0 = 'OLa@ie2x+#"Tt40qMH'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.is_fail()
    validation_2 = module_0.Validation(var_3, validation_0)
    var_5 = var_2.to_either()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_0.bind(var_0)
