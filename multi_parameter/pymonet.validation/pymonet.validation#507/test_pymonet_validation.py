# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "_);"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(str_0)
    var_1.map(str_0)


def test_case_1():
    complex_0 = 1879.7463 + 787.606j
    dict_0 = {complex_0: complex_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "_);"
    str_1 = "Pi_"
    validation_1 = module_0.Validation(str_1, str_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.to_try()
    var_1.to_lazy()


def test_case_3():
    int_0 = -774
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.to_lazy()
    validation_1.to_try()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "Hk@I"
    tuple_0 = (str_0,)
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(tuple_0, none_type_1)
    validation_0.map(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(none_type_0)
    validation_0.bind(var_0)


def test_case_8():
    str_0 = "(#=)X"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(str_0)


def test_case_9():
    str_0 = "G4\\<\rmh_q\nBtL%."
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_box()


def test_case_10():
    str_0 = "]sHet5.=,\tfZZb84;0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.is_success()


def test_case_11():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_13():
    dict_0 = {}
    str_0 = "_);"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(dict_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_3 = validation_1.to_either()
    var_4 = validation_1.__eq__(str_0)
    var_4.map(str_0)


def test_case_14():
    float_0 = -306.791
    str_0 = "'d"
    validation_0 = module_0.Validation(float_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, none_type_0)
    validation_2 = module_0.Validation(float_0, validation_0)
    var_1 = validation_1.__eq__(validation_2)
    var_2 = validation_0.to_lazy()
    module_1.object(*none_type_0, **var_2)


def test_case_15():
    dict_0 = {}
    str_0 = "_);Y"
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_maybe()
    str_1 = "Pi_"
    validation_1 = module_0.Validation(str_1, str_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_maybe()
    validation_1.ap(var_2)
