# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    float_0 = -105.6794
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    float_0.to_maybe()


def test_case_1():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_0.to_either()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.to_box()
    validation_2 = module_0.Validation(dict_0, var_1)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    str_0 = "&\\"
    var_4 = validation_0.is_fail()
    none_type_0 = None
    validation_3 = module_0.Validation(str_0, none_type_0)
    validation_2.__str__()


def test_case_3():
    str_0 = "J[f<P@<n.v/\x0bnT"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_0.to_try()


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_1.bind(validation_0)


def test_case_5():
    str_0 = "N"
    list_0 = []
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_0.map(str_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    int_0 = 135
    bool_0 = True
    validation_0 = module_0.Validation(int_0, bool_0)
    validation_0.__str__()


def test_case_8():
    int_0 = -376
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    float_0 = 885.1
    int_0 = -4198
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(float_0)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"/ \"\xbd.?'\xae\x7f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_3 = validation_0.to_box()


def test_case_11():
    object_0 = module_1.object()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    tuple_0 = ()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(dict_0, bool_0)
    var_0.to_box()
