# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    dict_0 = {}
    int_0 = -4452
    var_1 = validation_0.__eq__(int_0)
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_2 = validation_1.is_success()


def test_case_1():
    bytes_0 = b"H\xea\xfa\xd4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.ap(var_0)


def test_case_2():
    bytes_0 = b"H\xd8\xfa\x9a\xd4"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = var_0.map(list_0)
    var_2 = var_0.to_box()
    var_3 = var_2.to_maybe()
    var_4 = validation_0.to_maybe()
    validation_0.map(none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_fail()


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.bind(validation_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(dict_0, bool_0)
    validation_0.ap(var_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_9():
    str_0 = "\n        Applies the function inside the Lazy[A] structure to another applicative type for notempty Lazy.\n        For empty returns copy of itself\n\n        :param applicative: applicative contains function\n        :type applicative: Lazy[Function(A) -> B]\n        :returns: new Lazy with result of contains function\n        :rtype: Lazy[B]\n        "
    int_0 = -2668
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    bytes_0 = b"\\\xc5)\xa6@%\xad\x99\xbb\x07("
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_1.to_box()
    validation_2 = module_0.Validation(int_0, str_0)
    var_2 = validation_1.to_box()
    validation_3 = module_0.Validation(bytes_0, var_2)
    var_3 = validation_2.__eq__(validation_0)
    validation_4 = module_0.Validation(var_3, validation_1)
    var_3.map(validation_3)


def test_case_10():
    int_0 = 1
    str_0 = "`ln5\x0b{4eZ5}K"
    int_1 = -2668
    bytes_0 = b"\\\xc5)\xa6@%\xad\x99\xbb\x07("
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(int_1, str_0)
    var_2 = validation_1.to_maybe()
    validation_2 = module_0.Validation(int_0, int_1)
    var_3 = validation_2.to_lazy()
    none_type_0 = None
    validation_3 = module_0.Validation(none_type_0, none_type_0)
    validation_3.is_fail()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_0.map(none_type_0)
    validation_1.__str__()


def test_case_12():
    bytes_0 = b"H\xd8\xfa\x9a\xd4"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.map(list_0)
    var_3 = var_0.to_box()
    var_4 = validation_0.to_box()
    var_5 = validation_0.to_maybe()
    validation_0.map(none_type_0)


def test_case_13():
    str_0 = "P"
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.ap(none_type_0)
    var_2.to_box()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
