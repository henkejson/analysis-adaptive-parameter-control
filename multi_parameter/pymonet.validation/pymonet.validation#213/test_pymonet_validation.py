# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_box()


def test_case_1():
    str_0 = ";KQR~hk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    var_0.to_try()


def test_case_2():
    str_0 = "EJ\r=\x0c#<a"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.to_try()
    var_5 = var_3.to_box()
    var_0.to_try()


def test_case_3():
    str_0 = ";KQR~hk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_0.to_lazy()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"\xad\x97\xb6k\xc3\x89\xbe\x91\xfeM"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_0.to_maybe()


def test_case_6():
    float_0 = -2639.30857
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.map(none_type_0)


def test_case_8():
    bytes_0 = b"\x1c\x7f\rK\xf5Xz\xf5\xd4\xcd&\x9f\x12\x1eQ\xfb\x12\xc6-"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    tuple_0 = (bool_1, bool_2)
    validation_0 = module_0.Validation(tuple_0, bool_2)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    validation_0.ap(bool_0)


def test_case_10():
    str_0 = ";KQR~hk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_try()
    str_0.is_success()


def test_case_11():
    tuple_0 = ()
    bool_0 = False
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_maybe()
    float_0 = 2535.4
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.to_maybe()


def test_case_12():
    str_0 = "EJ\r=\x0c#<a"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_try()


def test_case_13():
    str_0 = ";KQR~hk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(str_0)
    validation_1 = module_0.Validation(var_2, var_2)
    var_4 = validation_0.__eq__(validation_1)
    var_5 = validation_0.to_box()
    var_6 = var_5.to_maybe()
    var_0.ap(var_6)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.bind(set_0)


def test_case_15():
    tuple_0 = ()
    bool_0 = True
    dict_0 = {tuple_0: tuple_0, bool_0: tuple_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.__str__()
    float_0 = 2535.4
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.to_maybe()
