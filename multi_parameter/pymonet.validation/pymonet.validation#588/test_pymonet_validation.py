# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    bytes_0 = b"bn\xfc\xce\xe4"
    none_type_1 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_1)


def test_case_1():
    int_0 = 2394
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_2():
    str_0 = "]A,NW6M[ 0;"
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    str_0 = ']A,NW"rK6M[ 0'
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = validation_0.is_fail()


def test_case_4():
    complex_0 = -1106.89051 - 884.9224j
    float_0 = -2221.6021
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.map(complex_0)


def test_case_5():
    none_type_0 = None
    str_0 = '],NW"rK6M[ 0'
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(bytes_0, none_type_1)
    var_1 = validation_1.__eq__(str_0)
    validation_0.bind(bytes_0)


def test_case_6():
    str_0 = "["
    tuple_0 = (str_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(tuple_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_8():
    none_type_0 = None
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(var_1, bytes_0)
    var_2 = validation_1.to_either()
    var_3 = validation_1.__eq__(validation_1)
    var_4 = var_0.__eq__(none_type_1)
    module_1.object(*var_1)


def test_case_9():
    bytes_0 = b"H\xbe\xd4\xd5'\xdfV\x87c\t\x17\xd4\xe2\xb5\x19M\xf64"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.bind(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = ']A,NW"rK6M[ 0'
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = validation_0.to_try()
    bytes_0 = b"j:\xf5\xcf\x06\xdc\xacBT\x18\x82\x89\x19\xe0\xf5A\x87\xf8"
    validation_2 = module_0.Validation(str_0, bytes_0)
    var_1 = validation_0.__eq__(none_type_1)
    var_2 = validation_2.__str__()
    object_0 = module_1.object()


def test_case_11():
    str_0 = "]A,NW6M[ 0;"
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_0.__str__()


def test_case_12():
    none_type_0 = None
    str_0 = ']ANW"r6M[ 0'
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(str_0)


def test_case_13():
    str_0 = ']A,NW"rK6M[ 0'
    bytes_0 = b"bn\xfc\xce\xe4"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(bytes_0)


def test_case_14():
    none_type_0 = None
    str_0 = "]A,NW6M[a 0;"
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    var_2 = var_1.to_either()
    var_3 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_1, var_3)
    var_4 = validation_2.__eq__(bytes_0)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"bn\xfc\xce\xe4"
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, validation_0)
    var_0.to_either()


def test_case_16():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_1.bind(validation_0)


def test_case_17():
    none_type_0 = None
    str_0 = "]A,NW6M[ 0;"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    bytes_0 = b"bn\xfc\xce\xe4"
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_2 = validation_0.to_maybe()
    none_type_1 = None
    set_0 = set()
    validation_2 = module_0.Validation(none_type_1, set_0)
    var_3 = validation_2.to_either()
    var_4 = validation_1.__eq__(validation_2)
    validation_3 = module_0.Validation(bytes_0, none_type_1)
    var_5 = validation_2.__eq__(var_1)
