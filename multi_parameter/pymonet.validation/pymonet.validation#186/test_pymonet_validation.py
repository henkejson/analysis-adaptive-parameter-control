# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_box()


def test_case_1():
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_0.to_box()
    var_3 = var_2.__str__()
    var_4 = validation_0.is_fail()
    var_5 = var_2.__eq__(var_2)
    var_6 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\x97\xec.\x86BS\xff\x114A\xaf`\xa2\xc9\x93r\x9d\xd7Z^"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_box()
    var_3.ap(none_type_0)


def test_case_3():
    float_0 = -3869.3
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    int_0 = -1464
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_fail()
    var_4 = var_1.__eq__(int_0)
    var_5 = int_0.__eq__(var_4)
    var_4.is_success()


def test_case_6():
    bytes_0 = b"\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    validation_0.map(validation_0)


def test_case_7():
    float_0 = -950.143679
    str_0 = "y\x0cNz@UJ&Q]-"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(float_0)


def test_case_8():
    bytes_0 = b"\xd3;\xdf+U\x14\xcfX\xa7\x85!t6\x96\xa8"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(set_0)


def test_case_9():
    list_0 = []
    float_0 = 2471.25004
    validation_0 = module_0.Validation(list_0, float_0)
    var_0 = validation_0.to_box()


def test_case_10():
    float_0 = -1344.00163
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    bytes_0 = b"*4nd\x90\xc8\x7fp\xd8UP\xeeb\xcb\xf0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_12():
    int_0 = 1
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, int_0)
    validation_0.to_try()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_0.to_box()
    var_4 = var_1.ap(dict_0)
    bytes_0 = b"\xa2v/=r\xf8\xdb6\x11\xf3"
    var_5 = var_1.map(bytes_0)
    validation_1 = module_0.Validation(dict_0, var_5)
    var_6 = var_5.__str__()
    var_1.is_fail()


def test_case_14():
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = var_1.__str__()
    var_3 = validation_0.is_fail()
    var_2.to_box()


def test_case_15():
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_1.__str__()
    var_1.to_either()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.map(validation_0)


def test_case_17():
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, var_0)
    var_1.to_maybe()


def test_case_18():
    bytes_0 = b"r\xf1,\x0bFD\xd1\x90\xd8y "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = var_2.map(var_1)
    var_4 = validation_0.__eq__(var_3)
    validation_2 = module_0.Validation(var_0, var_0)
    var_5 = var_1.map(validation_2)
    var_6 = var_3.__eq__(validation_1)
    var_7 = validation_1.__eq__(validation_2)
    var_8 = var_5.to_lazy()
    var_9 = var_8.to_box()
    var_10 = var_9.__str__()
    var_6.map(var_7)
