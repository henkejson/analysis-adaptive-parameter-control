# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_0.to_try()


def test_case_1():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.__eq__(object_0)
    validation_0.to_maybe()


def test_case_2():
    bytes_0 = b"Q\xb2\xf05\xfcY\xc6\xd5\xc4\xad"
    int_0 = 1
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(validation_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    var_1.is_success()


def test_case_3():
    bytes_0 = b"Q\xb2\xf05\xfcY\xc6\xd5\xc4\xad"
    int_0 = 1
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(validation_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.to_either()
    var_1.is_success()


def test_case_4():
    object_0 = module_1.object()
    str_0 = "|<[\t,|j5\x0b-5"
    dict_0 = {}
    int_0 = -536
    validation_0 = module_0.Validation(int_0, str_0)
    object_1 = module_1.object(**dict_0)
    none_type_0 = None
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.is_fail()
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_3 = validation_1.to_maybe()
    validation_2 = module_0.Validation(var_0, none_type_0)
    var_2.map(none_type_0)


def test_case_5():
    float_0 = -1684.76374
    list_0 = [float_0, float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    object_0 = module_1.object()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_box()
    validation_1 = module_0.Validation(float_0, var_2)
    tuple_0 = (object_0, var_2, var_2)
    validation_2 = module_0.Validation(validation_1, tuple_0)
    validation_3 = module_0.Validation(float_0, object_0)
    var_5 = validation_2.is_fail()
    var_5.to_maybe()


def test_case_6():
    complex_0 = 811.10596 + 2277.70188j
    validation_0 = module_0.Validation(complex_0, complex_0)


def test_case_7():
    complex_0 = 811.10596 + 2277.70188j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_either()


def test_case_8():
    complex_0 = -196 - 4832j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, complex_0)
    validation_0.is_fail()


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_success()
    validation_0.map(var_1)


def test_case_10():
    bytes_0 = b"{\xed\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    validation_0.bind(bytes_0)


def test_case_11():
    complex_0 = 811.10596 + 2277.70188j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.ap(complex_0)


def test_case_12():
    bytes_0 = b"{\xed\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = var_1.to_either()
    bytes_1 = b"'\xb78v\x7f9B5\x811\x9b\xac>\xe4O\xb6E\xe1\xd3\xa8"
    var_3 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(var_3, bytes_1)
    var_0.bind(var_1)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_1.is_success()


def test_case_16():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    dict_0 = {}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.__str__()
    var_0.to_box()


def test_case_17():
    float_0 = -1684.76374
    list_0 = [float_0, float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_3 = module_0.Validation(list_0, var_0)
    var_4 = validation_0.to_try()
    var_5 = validation_0.__eq__(var_3)
    var_5.to_either()
