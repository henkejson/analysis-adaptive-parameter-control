# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = validation_0.__str__()
    var_0 = validation_1.__eq__(dict_0)
    var_1 = validation_0.__eq__(var_0)


def test_case_2():
    bytes_0 = b"f\xdd=x\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = module_0.Validation(validation_0, dict_0)
    var_1.bind(var_0)


def test_case_5():
    bytes_0 = b"\x17\x05]\x06\x16\xfd\x85,k\xbd\xcd0RB6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, dict_0)
    var_0 = validation_1.to_maybe()


def test_case_8():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_1.to_maybe()


def test_case_9():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    object_0 = module_1.object()
    validation_0.bind(none_type_0)


def test_case_11():
    complex_0 = -1917 + 3327.75j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.ap(complex_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_13():
    bytes_0 = b"\x06\xe98\xb2\x0e\x04\xf3\xbd]\xde\xe4V\x83\x02\xb3\xcb\xb8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()


def test_case_14():
    bytes_0 = b"\x17\x05]\x06\x16\xfd\x85,k\xbd\xcd0RB6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(validation_0)
    var_3 = var_1.to_maybe()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_17():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_0 = validation_0.__eq__(validation_1)
    module_1.object(**bool_0)
