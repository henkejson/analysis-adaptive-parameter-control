# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x7fs\xee\xdb\xbfJ\xd8\x17\xc9V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, var_0)
    none_type_0 = None
    var_1 = validation_1.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"\x7fs\xee\xdb\xbfJ\xd8\x17\xc9V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = validation_0.__str__()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_3():
    int_0 = 1
    bytes_0 = b"\x01|\xf0\x93|{h\xa3?|\xbf-\xd0\xfe\x82\xbc\x7f\xbcN\xe5"
    dict_0 = {int_0: int_0, int_0: bytes_0, bytes_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_6():
    int_0 = -4921
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    bytes_0 = b"\x88\xdby\xb4<\x13\xf1?\xb8\x00yo\xf9x"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.bind(bool_0)


def test_case_8():
    int_0 = 2505
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(int_0)


def test_case_9():
    bytes_0 = b"\x7fs\xee\xdb\xbfJ\xd8\x17\xc9V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_try()
    bool_0 = True
    tuple_0 = (var_2, bool_0)
    validation_1 = module_0.Validation(tuple_0, var_2)
    bytes_1 = b'F\x91X\xc6 "\xd9\x1a\xe6L\xdd\x06\x13YV\xd2\xdb\xb4\xfe\xf4'
    var_3 = var_0.__eq__(bytes_1)
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_4 = validation_0.__eq__(var_2)
    var_5 = var_1.__str__()
    var_6 = validation_2.to_box()


def test_case_10():
    str_0 = "<n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_11():
    float_0 = 2866.1823
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.to_either()
    var_3 = validation_1.__eq__(var_2)
    var_3.is_fail()


def test_case_13():
    bytes_0 = b"\x7fs\xee\xdb\xbfJ\xd8\x17\xc9V"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_0, validation_0)


def test_case_14():
    none_type_0 = None
    float_0 = 1483.65
    tuple_0 = ()
    tuple_1 = (float_0, tuple_0, float_0, float_0)
    validation_0 = module_0.Validation(tuple_1, tuple_1)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(float_0, tuple_1)
    var_1 = tuple_1.__eq__(none_type_0)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = validation_1.__str__()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()
