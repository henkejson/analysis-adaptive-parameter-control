# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 4754
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = var_0.to_try()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.ap(none_type_0)


def test_case_2():
    bytes_0 = b"a\x86\xd3\x08\x83\x01hp"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    int_0 = -2754
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_5():
    complex_0 = -1040.474739 - 3059.96665j
    int_0 = 1416
    list_0 = [int_0, int_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.map(complex_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_7():
    int_0 = -259
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(int_0)


def test_case_8():
    bytes_0 = b"p\x8d\x80\xc3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = var_0.to_lazy()
    var_3 = var_2.__str__()
    var_3.is_success()


def test_case_9():
    bool_0 = True
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.to_try()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_11():
    bytes_0 = b"p\x8d\x80\xc3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.is_success()
    var_2.to_box()


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(none_type_0)


def test_case_13():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    var_5 = validation_0.to_maybe()
    var_1.to_box()


def test_case_14():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = module_0.Validation(none_type_0, validation_0)
    var_2 = var_1.__eq__(validation_0)
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    var_5 = validation_0.to_maybe()
    var_2.to_box()
