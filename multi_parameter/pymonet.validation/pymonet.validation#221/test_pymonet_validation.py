# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_box()


def test_case_2():
    int_0 = 488
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"\x15\x1aI\xbc\\\x17\xfa"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.__eq__(validation_1)
    var_4 = validation_1.is_success()
    var_5 = validation_1.to_box()
    var_6 = var_5.to_lazy()
    var_7 = validation_1.__str__()
    var_8 = var_6.ap(int_0)
    var_3.to_try()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_5():
    float_0 = -333.54214
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.map(bool_0)


def test_case_7():
    complex_0 = -1403.67 - 2718.87j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.bind(none_type_0)


def test_case_8():
    int_0 = 488
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"\x15\x1aI\xbc\\\x17\xfa"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.__eq__(validation_1)
    var_4 = validation_1.is_success()
    validation_0.ap(var_3)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_11():
    int_0 = 488
    bytes_0 = b"\x15\x1aI\xbc\\\x17\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_success()
    var_4 = validation_0.to_box()
    var_5 = var_4.to_lazy()
    var_6 = validation_0.__str__()
    var_7 = var_5.ap(int_0)
    var_8 = var_5.__str__()
    var_9 = validation_0.is_fail()
    var_10 = var_3.__str__()
    var_11 = validation_0.to_lazy()
    var_12 = var_11.to_either()
    var_4.to_box()


def test_case_12():
    int_0 = 488
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_success()
    var_4 = validation_0.to_box()
    var_5 = var_4.to_lazy()
    var_6 = var_5.ap(int_0)
    var_7 = var_5.__str__()
    var_3.is_success()


def test_case_13():
    int_0 = 488
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"\x15\x1aI\xbc\\\x17\xfa"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.to_either()
    var_3 = validation_1.to_maybe()
    var_4 = validation_1.__eq__(validation_1)
    var_5 = validation_1.is_success()
    int_0.to_lazy()


def test_case_14():
    bytes_0 = b"\xd6p\xbd\x96\xee9(\r$\x8f\x8cu\xef"
    str_0 = "$gNwmm'qQB4b!Q*"
    list_0 = [str_0]
    bytes_1 = b"\xf3&\x1f\x084\x17&\xef"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(list_0)
    var_1.bind(bytes_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_16():
    int_0 = 488
    bytes_0 = b"\x15\x1aI\xbc\\\x17\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(int_0, validation_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__eq__(validation_1)
    var_2.is_success()
