# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    float_0 = -3727.15454
    int_0 = 0
    list_0 = []
    tuple_0 = (int_0, list_0)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.__eq__(float_0)


def test_case_1():
    list_0 = []
    object_0 = module_1.object(*list_0)
    validation_0 = module_0.Validation(object_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    bytes_0 = b"\xc2\xfdd/\xe4}\xf2;_"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.bind(none_type_0)
    var_3 = validation_0.__str__()
    var_4 = var_0.__str__()
    var_5 = validation_0.is_success()
    var_6 = validation_0.to_try()
    var_7 = var_0.__str__()
    var_4.to_lazy()


def test_case_3():
    str_0 = "\x0bopB"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()


def test_case_4():
    bytes_0 = b"\xc2\xfdd/\xe4}\xf2;_"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_0.to_maybe()


def test_case_5():
    int_0 = -2445
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"E\xc8\xeb\xc3\xc1\xfc\xc1\xb4\x98W"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bytes_1 = b"b*?\xd6'Z"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.map(dict_0)


def test_case_8():
    none_type_0 = None
    int_0 = 1276
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_9():
    str_0 = "B64?A{A\tnF}Fc:\nG/O D"
    tuple_0 = (str_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(tuple_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_maybe()
    var_2.is_fail()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_0.to_lazy()


def test_case_13():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, bool_1)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_1.is_fail()


def test_case_14():
    none_type_0 = None
    str_0 = "\x0bopB"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = var_2.__str__()
    bool_0 = False
    validation_1 = module_0.Validation(var_1, bool_0)
    var_5 = validation_1.to_lazy()
    validation_2 = module_0.Validation(var_0, var_2)
    var_6 = var_5.map(none_type_0)
    validation_3 = module_0.Validation(var_5, validation_1)
    var_7 = validation_0.__eq__(validation_2)
    validation_4 = module_0.Validation(var_0, var_2)
    var_8 = validation_1.__eq__(var_6)
    var_9 = validation_4.to_lazy()
    var_10 = validation_1.to_box()
    var_11 = var_5.ap(var_10)
    var_12 = var_9.to_box()
    var_1.is_fail()


def test_case_15():
    bytes_0 = b"\xbf\xf6\xd5\xa9?;\x08\xd34\xb5"
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bytes_0)
    var_1.ap(bytes_0)


def test_case_16():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = var_2.__str__()
    bool_0 = False
    validation_1 = module_0.Validation(var_1, bool_0)
    var_5 = validation_1.to_lazy()
    validation_2 = module_0.Validation(var_0, var_2)
    var_6 = var_5.map(none_type_0)
    var_6.to_either()
