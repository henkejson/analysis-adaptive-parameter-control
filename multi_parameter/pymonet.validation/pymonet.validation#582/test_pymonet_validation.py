# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = var_0.__str__()
    var_1.to_either()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"\xbd\xd22N\x18\x1a\x11\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = var_2.__str__()
    var_4 = validation_0.to_either()
    var_5 = validation_0.__str__()
    var_1.is_fail()


def test_case_3():
    str_0 = "NsJ.%?SW),"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_4():
    int_0 = 5
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    int_0 = -1128
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_6():
    float_0 = 1707.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xbd\xd22N\x18\x1a\x11\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    int_0 = 0
    validation_1 = module_0.Validation(int_0, int_0)
    var_1 = validation_0.to_either()
    var_2 = var_0.to_try()
    validation_2 = module_0.Validation(var_0, bytes_0)
    var_3 = validation_2.__str__()
    validation_1.map(var_3)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_9():
    bytes_0 = b"\xbd\xd22N\x18\x1a\x11\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    bool_0 = False
    int_0 = 0
    validation_1 = module_0.Validation(int_0, int_0)
    var_1 = validation_1.__eq__(bool_0)
    var_2 = var_1.__str__()
    var_3 = var_0.to_either()
    validation_0.ap(var_0)


def test_case_10():
    bytes_0 = b"\xf2\xa7-\xf9\xd1\x07\x8c\x03M\xfd\xf8S\xd9k\xb4@Bs{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_11():
    float_0 = 838.803767
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    validation_0.bind(validation_0)


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    str_0 = "{}$W#\x0bIZi[|L7e"
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_1.to_try()
    var_1 = validation_0.__str__()
    var_2 = var_0.map(var_1)
    var_3 = validation_1.to_maybe()
    var_1.ap(str_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(none_type_0, validation_0)
    validation_0.to_maybe()


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = var_0.__eq__(validation_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_0.__eq__(validation_0)
    bool_1 = True
    var_3 = var_1.__eq__(bool_1)
    var_0.is_success()


def test_case_15():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_1)
    var_0 = validation_0.to_either()
    var_0.bind(bool_0)


def test_case_16():
    bytes_0 = b"\xbd\xd22N\x18\x1a\x11\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = var_0.__eq__(var_2)
    var_4 = validation_0.__str__()
    var_1.to_either()


def test_case_17():
    bytes_0 = b"\xbd\xd22N\x18\x1a\x11\xa2"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    bool_0 = False
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_1 = validation_0.is_fail()
    var_2 = var_0.__str__()
    var_3 = var_0.__eq__(dict_0)
    validation_1.__str__()
