# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__str__()


def test_case_1():
    str_0 = "1"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_2():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()


def test_case_3():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()


def test_case_4():
    bytes_0 = b"R5`9\xd0nsO\xcb\xf3R\x9b\x9bu\x0c\xf3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    object_0 = module_1.object()
    none_type_0 = None
    str_0 = "P%B 2B~z\\g~)*N7m"
    validation_1 = module_0.Validation(str_0, str_0)
    validation_1.map(none_type_0)


def test_case_5():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_box()
    validation_1 = module_0.Validation(var_1, var_1)
    var_3 = validation_0.to_either()
    str_0 = "@"
    validation_0.bind(str_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.to_box()
    validation_1.ap(validation_1)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(var_1, validation_0)
    validation_2 = module_0.Validation(bool_0, list_0)
    var_2 = validation_2.to_either()
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.__eq__(list_0)
    var_5 = var_2.to_lazy()
    var_4.map(list_0)


def test_case_8():
    bytes_0 = b"\xbc\x9at"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()


def test_case_9():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_box()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_2 = module_0.Validation(var_1, validation_1)
    var_3 = validation_0.to_either()
    var_4 = validation_2.to_lazy()
    var_5 = var_4.to_box()
    var_6 = var_3.to_lazy()
    var_7 = var_4.__str__()
    var_7.to_try()


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_11():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0.is_fail()


def test_case_12():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_13():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = var_0.__str__()


def test_case_14():
    bytes_0 = b"\x14t\xc1,\xe2\xbcU\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.is_fail()


def test_case_15():
    bytes_0 = b"\xd1\xb7)0\xa3\x0c?\xd1\x1c\x17"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.is_fail()
    validation_1 = module_0.Validation(validation_0, var_4)
    validation_2 = module_0.Validation(bytes_0, validation_0)
    validation_2.to_try()
