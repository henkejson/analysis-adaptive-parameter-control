# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_either()


def test_case_1():
    list_0 = []
    bytes_0 = b"\x9c\x0coQ\xa0\\\xe3\xa2,\xf4\x93y\xccPo\xe9\xc06\xaf"
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(list_0)
    var_2 = var_1.__str__()
    var_3 = validation_0.__eq__(var_0)
    var_4 = validation_0.to_either()
    var_5 = validation_0.is_fail()
    var_6 = var_1.map(set_0)
    var_6.is_success()


def test_case_2():
    bytes_0 = b"\x9d\xe8\x04:3\xf9\x00J\xb5u\xd8\xa4\xec1\xc1\x82\xb3.\x05"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    tuple_0 = ()
    float_0 = -3798.91754
    validation_0 = module_0.Validation(float_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_5():
    float_0 = -163.782
    var_0 = float_0.__str__()


def test_case_6():
    float_0 = -2130.34
    var_0 = module_0.Validation(float_0, float_0)


def test_case_7():
    float_0 = -163.782
    list_0 = []
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.__str__()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    str_0 = 'gQQO"(SA6'
    list_0 = [str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    validation_1 = module_0.Validation(int_0, dict_0)
    validation_0.map(dict_0)


def test_case_10():
    bool_0 = True
    set_0 = {bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(validation_1)


def test_case_11():
    float_0 = -818.446176
    float_1 = -802.970215
    validation_0 = module_0.Validation(float_1, float_1)
    validation_0.ap(float_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.bind(none_type_0)


def test_case_13():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    bytes_0 = b"\xc3"
    list_0 = [bytes_0, bytes_0, bytes_0]
    float_0 = -163.782
    list_1 = []
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(list_0, float_0)
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_0.to_either()
    var_4 = var_0.__str__()
    var_5 = validation_0.is_fail()
    var_6 = validation_0.to_try()
    var_5.ap(var_6)


def test_case_16():
    bytes_0 = b"\xc3"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = []
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_0.__eq__(bytes_0)
    var_5 = var_4.__str__()
    var_0.is_fail()
