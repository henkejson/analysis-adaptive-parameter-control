# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = 'jq~I M|A6\r5"'
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.to_try()


def test_case_1():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.bind(none_type_0)


def test_case_2():
    bytes_0 = b"\xfe\x7ff\x01'{\xe2<2\x8c<7\x94h_D\xdc\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_3():
    bytes_0 = b"\x17\x9f`|\xd5/"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_maybe()
    var_2.ap(none_type_0)


def test_case_4():
    bytes_0 = b"8\x85\xc8\x1f\xa0\x02\xd6P\xcbF\xea\xdd)?\xd2\xa8J\x16\x92"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    complex_0 = -349 + 1484j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_0.map(dict_0)


def test_case_7():
    set_0 = set()
    bytes_0 = b"8\x85\xc8\x1f\xa0\x02\xd6P\xcbF\xea\xdd)?\xd2\xa8J\x16\x92"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(set_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_9():
    str_0 = ""
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_11():
    float_0 = -1242.48
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(float_0)
    var_1.to_maybe()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.ap(var_0)
    var_3 = validation_0.__eq__(tuple_0)
    var_2.to_box()


def test_case_13():
    bytes_0 = b'"\xf4\x9b'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_0.to_lazy()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_maybe()
    var_3 = validation_0.__eq__(tuple_0)
    var_4 = var_2.to_box()
    var_5 = validation_0.to_either()
    var_1.ap(tuple_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    dict_0 = {}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    bool_0 = True
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.to_maybe()
    validation_2 = module_0.Validation(validation_0, var_1)
    validation_3 = module_0.Validation(var_1, bool_0)
    var_2 = validation_1.__eq__(none_type_0)
    validation_3.is_fail()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    dict_0 = {}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    bool_0 = True
    var_0 = validation_1.to_maybe()
    validation_2 = module_0.Validation(validation_0, var_0)
    validation_3 = module_0.Validation(var_0, bool_0)
    var_1 = validation_1.__eq__(none_type_0)
    validation_3.is_fail()


def test_case_17():
    str_0 = ""
    list_0 = [str_0, str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_18():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()
