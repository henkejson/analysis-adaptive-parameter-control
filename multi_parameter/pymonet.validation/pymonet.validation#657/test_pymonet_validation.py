# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.__str__()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_5 = validation_1.__eq__(bool_0)
    var_6 = validation_0.to_box()
    validation_1.to_maybe()


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.__str__()
    var_5 = var_4.__eq__(bool_0)
    var_6 = validation_0.to_box()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)


def test_case_4():
    float_0 = 216.0
    validation_0 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(validation_1)
    validation_1.is_fail()


def test_case_6():
    bool_0 = True
    float_0 = 5375.22
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(bool_0)


def test_case_7():
    int_0 = 3875
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_9():
    str_0 = "9l!xd"
    set_0 = {str_0}
    bool_0 = True
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_11():
    str_0 = "\n        Take function and applied this function on current box value and returns mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: B\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_1.to_maybe()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    bool_0 = False
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_1.__eq__(bool_0)
    validation_1.ap(dict_0)


def test_case_14():
    bool_0 = False
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_fail()
    var_3 = var_0.__str__()
    var_3.to_box()


def test_case_15():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = validation_0.is_fail()
    var_5 = validation_0.__str__()
    var_6 = validation_0.to_lazy()
    var_7 = validation_0.__str__()
    var_8 = validation_0.to_box()
    var_9 = var_6.to_maybe()
    var_9.to_maybe()


def test_case_16():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = validation_0.is_fail()
    var_5 = validation_0.__str__()
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_6 = validation_2.__eq__(bool_0)
    var_7 = validation_0.to_box()
    var_8 = validation_1.__eq__(validation_2)
    validation_2.to_maybe()
