# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    list_0 = [validation_0, validation_0]
    validation_1 = module_0.Validation(list_0, list_0)
    validation_0.to_maybe()


def test_case_1():
    list_0 = []
    none_type_0 = None
    bytes_0 = b"q"
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.map(none_type_0)


def test_case_2():
    str_0 = '4"1{g67oLz~f]*+'
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_4():
    bool_0 = True
    bytes_0 = b"\xbb\xb4\x83\r\xc5\x85\xd1lX\xab\xc1"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()
    var_2.is_success()


def test_case_6():
    str_0 = "21\t{aK?&{"
    none_type_0 = None
    str_1 = "c"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.ap(none_type_0)
    var_3 = var_2.bind(str_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_9():
    int_0 = 1662
    tuple_0 = (int_0, int_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_0.bind(int_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_11():
    bytes_0 = b"%\xda\x00!\xf5"
    str_0 = ";ob^8\t,lSh."
    bool_0 = False
    bytes_1 = b"3}6\xa7\xcc\xcaCV\xe6\xcb"
    tuple_0 = (bytes_0, str_0, bool_0, bytes_1)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(tuple_0)


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_success()
    validation_0.ap(set_0)


def test_case_13():
    str_0 = '4"1{g67oLz~f]*+'
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_15():
    float_0 = 291.735
    validation_0 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_0.to_either()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()
