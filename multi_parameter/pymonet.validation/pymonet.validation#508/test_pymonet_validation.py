# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"+\x05\x87T\xf1X\xc9\xc4\x87\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_1.is_success()


def test_case_1():
    list_0 = []
    list_1 = []
    list_2 = [list_1]
    validation_0 = module_0.Validation(list_0, list_2)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    var_2.is_success()


def test_case_3():
    int_0 = -5502
    int_1 = 1281
    dict_0 = {int_1: int_1, int_1: int_1}
    dict_1 = {int_1: dict_0, int_1: int_1, int_1: int_1}
    validation_0 = module_0.Validation(dict_1, dict_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(int_0)
    var_1.is_success()


def test_case_4():
    bytes_0 = b"+\x05\x87T\xf1\xc9\xc4\x87\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.is_success()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    var_3.to_maybe()


def test_case_8():
    int_0 = -1012
    list_0 = []
    validation_0 = module_0.Validation(int_0, list_0)
    validation_0.map(int_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.bind(bool_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = var_1.__str__()
    validation_0.bind(none_type_0)


def test_case_13():
    complex_0 = 2331.46 + 2283.17j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_14():
    bool_0 = True
    list_0 = [bool_0]
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_success()
    var_2.to_either()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_maybe()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = var_0.__eq__(var_1)
    var_5 = var_2.__str__()
    var_6 = var_0.bind(validation_0)
    var_6.to_box()
