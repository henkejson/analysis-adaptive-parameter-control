# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"&`\xad\xa5\x81,(\x99\xfbx\x90"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_try()


def test_case_1():
    bytes_0 = b"m,\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\x19m\xbc\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    str_0 = 'c[zn(B"Sj\rJ`^>'
    bool_0 = True
    str_1 = "!}wp5"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(bool_0)
    var_2.ap(str_0)


def test_case_4():
    bytes_0 = b"\x19m\xbc\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bytes_0 = b"\x19m\xbc\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\x19m\xbc\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_8():
    bytes_0 = b"\x19m\xbc\xb8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_9():
    str_0 = "Y*U$hMK}|f_"
    int_0 = 854
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(str_0)


def test_case_10():
    int_0 = 85
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    str_0 = "U\nQz0p5D2`x@W/QB"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    validation_1 = module_0.Validation(str_0, str_0)
    var_3 = validation_0.__str__()
    var_4 = var_1.to_try()
    validation_0.map(var_3)


def test_case_12():
    str_0 = "U\nQz0p5D2`x@W/QB"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_0.map(var_1)


def test_case_13():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    var_2.to_maybe()


def test_case_14():
    list_0 = []
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.to_maybe()
    var_1.map(list_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()


def test_case_16():
    list_0 = []
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__str__()
    validation_1 = module_0.Validation(validation_0, var_2)
    var_3 = validation_0.__eq__(validation_1)
    var_3.to_either()
