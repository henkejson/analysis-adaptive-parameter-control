# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"a\xcf;"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.__eq__(var_1)
    var_4 = validation_0.to_maybe()
    var_5 = validation_0.to_either()
    bool_0 = False
    var_6 = var_3.__eq__(bool_0)
    var_6.is_fail()


def test_case_1():
    float_0 = 4777.671582
    dict_0 = {float_0: float_0, float_0: float_0}
    str_0 = "m4N?Q4fN"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.map(dict_0)


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    none_type_0 = None
    var_2 = validation_0.__eq__(none_type_0)
    var_2.to_maybe()


def test_case_3():
    bytes_0 = b"a\xcf;"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = var_0.__eq__(var_2)
    var_3.is_fail()


def test_case_4():
    str_0 = "nw8ZPO9W[3C~|8<!"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_try()
    var_4 = module_0.Validation(var_0, str_0)
    var_5 = validation_0.to_maybe()
    var_6 = validation_0.to_maybe()
    var_7 = var_4.to_lazy()
    var_7.is_success()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    float_0 = 2986.1839
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_0.is_success()


def test_case_7():
    bytes_0 = b"a\xcf;"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.to_either()
    var_4 = var_2.__eq__(var_3)
    var_4.is_fail()


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.ap(bool_0)


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_0.to_either()


def test_case_13():
    int_0 = -1832
    str_0 = "n\ns="
    validation_0 = module_0.Validation(str_0, str_0)
    int_1 = 889
    validation_1 = module_0.Validation(int_1, int_1)
    var_0 = validation_1.__eq__(validation_0)
    var_0.ap(int_0)


def test_case_14():
    bytes_0 = b"a\xcf;"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(var_0)
    var_4 = validation_0.to_maybe()
    var_5 = validation_0.to_either()
    var_6 = var_3.__eq__(var_5)
    var_6.is_fail()
