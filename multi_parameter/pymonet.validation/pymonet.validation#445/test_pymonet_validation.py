# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    bool_0 = False
    set_0 = {bool_0, bytes_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_try()


def test_case_1():
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.to_maybe()
    int_0 = 847
    var_0.ap(int_0)


def test_case_2():
    dict_0 = {}
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_2.map(bytes_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    str_0 = "7\ru"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_5():
    str_0 = "5y5+?M$u2bn\\=jL\x0c/U#"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_0.bind(validation_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(bool_0)


def test_case_7():
    str_0 = 'OnX!M"s$1('
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    validation_0.bind(none_type_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_9():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_10():
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(validation_0, var_1)


def test_case_11():
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    bool_0 = False
    set_0 = {bool_0, bytes_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(set_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_0.map(var_0)
    int_0 = 847
    var_4 = var_2.ap(int_0)
    var_5 = var_2.to_maybe()
    var_1.to_maybe()


def test_case_12():
    dict_0 = {}
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(var_0)
    var_3 = var_0.__str__()
    var_4 = var_2.__str__()
    var_0.map(var_0)


def test_case_13():
    str_0 = "oaK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_0.map(validation_0)


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.map(validation_1)


def test_case_15():
    dict_0 = {}
    bytes_0 = b"\xf7W\x9a\x0em\xf5(\xd6!\xe9\r"
    bool_0 = True
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__str__()
    validation_1 = module_0.Validation(bool_0, bytes_0)
    var_3 = validation_1.__eq__(validation_0)
    var_1.to_maybe()
