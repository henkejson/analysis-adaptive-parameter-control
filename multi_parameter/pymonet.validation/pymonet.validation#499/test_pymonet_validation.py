# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_fail()


def test_case_1():
    bool_0 = False
    bytes_0 = b"\xa4F\xd6Q\xe6\xaf\xe4\xd2P4\r0\xa4\xf4~\xf9/\xac"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(bytes_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    tuple_0 = ()
    bytes_0 = b"_\x97\x85\xa7\xab\xf8\xcf\x9dr\tf\x89\x14tnX\x8d\xa5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.bind(tuple_0)
    var_3 = validation_0.is_success()
    var_4 = var_2.ap(var_3)
    var_5 = var_1.ap(var_0)
    var_6 = var_5.to_lazy()
    var_7 = var_4.__str__()
    validation_1 = module_0.Validation(var_4, var_6)
    var_6.is_success()


def test_case_4():
    str_0 = "\x0b ?8cC,epQ.<[X^"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(validation_0)


def test_case_8():
    bool_0 = False
    float_0 = 3362.01
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(validation_0)


def test_case_10():
    int_0 = 688
    dict_0 = {}
    tuple_0 = (dict_0,)
    validation_0 = module_0.Validation(int_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(tuple_0)
    var_0.is_success()


def test_case_11():
    int_0 = -659
    float_0 = -775.714
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.bind(int_0)


def test_case_12():
    int_0 = -636
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.is_fail()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    list_0 = []
    int_0 = 2007
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(list_0)
    var_1.ap(list_0)


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_success()
    var_4 = var_2.to_lazy()
    var_5 = var_2.to_either()
    var_4.to_lazy()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_try()
