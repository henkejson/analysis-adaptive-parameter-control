# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    str_0 = ""
    tuple_0 = (str_0,)
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.ap(tuple_0)


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = var_0.to_box()
    var_3 = validation_0.is_success()
    var_4 = var_0.to_lazy()
    var_5 = validation_0.__eq__(var_4)
    var_6 = var_4.ap(var_0)
    var_7 = var_0.to_box()
    var_5.bind(var_6)


def test_case_4():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_success()
    var_4 = var_0.to_lazy()
    var_5 = validation_0.__eq__(validation_0)
    var_5.ap(validation_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    int_0 = -2480
    set_0 = {int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_9():
    int_0 = 883
    set_0 = {int_0}
    float_0 = -2275.6
    set_1 = {float_0, float_0}
    validation_0 = module_0.Validation(set_1, set_1)
    validation_0.bind(set_0)


def test_case_10():
    bytes_0 = b""
    set_0 = {bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(bytes_0)


def test_case_11():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_success()
    var_3.is_fail()


def test_case_12():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_success()
    var_4 = module_0.Validation(str_0, var_0)
    var_5 = var_4.to_lazy()
    var_6 = var_2.to_lazy()
    var_7 = var_6.__eq__(var_1)
    var_8 = var_5.to_maybe()
    var_9 = var_8.to_either()
    var_8.map(var_8)


def test_case_13():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_box()
    var_3 = var_0.to_lazy()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = var_2.__str__()
    var_6 = var_2.to_either()
    var_7 = var_5.__eq__(var_3)
    var_8 = validation_0.to_maybe()
    var_9 = var_3.to_try()
    var_10 = var_8.bind(var_9)
    var_11 = var_8.to_lazy()
    var_12 = var_0.to_box()
    var_2.bind(var_3)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(tuple_0)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_16():
    str_0 = "One[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = var_2.to_box()
    var_4 = validation_0.to_box()
    var_5 = validation_0.is_success()
    var_6 = validation_0.__str__()
    var_7 = validation_0.__eq__(validation_0)
    var_8 = var_0.__eq__(validation_0)
    var_9 = validation_0.to_either()
    var_10 = var_6.__eq__(var_3)
    var_11 = var_1.to_try()
    var_7.ap(validation_0)
