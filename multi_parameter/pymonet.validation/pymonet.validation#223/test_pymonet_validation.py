# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__eq__(validation_0)


def test_case_1():
    bytes_0 = b"B\x1b\xf3X\xb9\xef\x9b-}\xcam\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    validation_1 = module_0.Validation(tuple_0, tuple_0)


def test_case_3():
    str_0 = "}V v B[&ab~^%Qgi"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    none_type_0.to_lazy()


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_6():
    int_0 = 3609
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b'\xf8=p\xe8\x7fx\x16"\xd4\x01\xc28\xfe\xe9\x84\x1a\xbe\x85'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_8():
    str_0 = 'Y$oOomTmB\r"57q#a'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_9():
    int_0 = -766
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(validation_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(validation_0)


def test_case_11():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    str_0 = '!+$oOnTiB6v"57q5#a'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_15():
    str_0 = '!@$oOom#mB6v")7q#a'
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, str_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_try()


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_1.to_box()


def test_case_18():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_1)
    var_2 = var_0.to_try()
