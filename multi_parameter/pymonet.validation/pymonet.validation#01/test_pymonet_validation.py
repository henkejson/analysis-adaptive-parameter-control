# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 2048
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.map(var_0)
    var_0.to_maybe()


def test_case_1():
    bytes_0 = b"\xaaQT\x8a\xad\xe1\xcd\x8aN"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    validation_0.map(validation_0)


def test_case_2():
    bytes_0 = b"$2\x07\xa271\xf8\xb2\xdcR\xad5V\x93\xc9\xeb\xdb"
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.map(bytes_0)


def test_case_3():
    str_0 = "Lazy[T, W]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.to_maybe()
    validation_1.__str__()


def test_case_4():
    int_0 = -76
    none_type_0 = None
    str_0 = "z+^\\b!'?2"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.bind(int_0)
    var_2.is_success()


def test_case_5():
    int_0 = 2048
    int_0.is_success()


def test_case_6():
    int_0 = 2048
    var_0 = module_0.Validation(int_0, int_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_8():
    bytes_0 = b"x\xbe\x90:T\xdb\xd8"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_try()


def test_case_9():
    bytes_0 = b"\x1d"
    str_0 = "EWO\\hR6"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bytes_0)


def test_case_10():
    int_0 = 0
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    validation_0.bind(int_0)


def test_case_11():
    complex_0 = -1818.32 - 1784.8j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.ap(complex_0)


def test_case_12():
    str_0 = " ;XB\x0biTMXj\x0cBP Bxm##"
    list_0 = [str_0, str_0]
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.map(list_0)


def test_case_13():
    int_0 = 2048
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_try()
    var_3.is_success()


def test_case_14():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_0.ap(bool_0)


def test_case_15():
    int_0 = 2048
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(var_0)
    var_3 = var_0.__str__()
    var_1.to_lazy()


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_17():
    str_0 = "Lazy[T, W]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    var_4 = var_3.__str__()
    validation_2 = module_0.Validation(var_3, validation_1)
    var_5 = validation_2.__eq__(validation_1)
    var_6 = validation_2.to_box()
    var_0.is_success()


def test_case_18():
    str_0 = "Lazy[T, W]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    dict_0 = {}
    validation_1 = module_0.Validation(var_0, dict_0)
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_1.to_maybe()
    var_3 = var_2.__str__()
    var_4 = validation_1.is_fail()
    validation_2 = module_0.Validation(var_0, var_1)
    var_5 = var_3.__eq__(validation_1)
    var_5.to_box()
