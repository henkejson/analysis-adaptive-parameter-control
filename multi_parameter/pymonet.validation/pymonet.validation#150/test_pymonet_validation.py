# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "v&PZJb X$6TZe"
    bytes_0 = b"F\xd3ZL3\xd7\x1b\xf1VY"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = "All[value={}]"
    var_0 = module_0.Validation(str_0, str_0)
    var_1 = var_0.__str__()
    validation_0 = module_0.Validation(str_0, str_0)
    var_0.map(var_1)


def test_case_2():
    int_0 = 1
    bytes_0 = b"\x0c\xf6\xd9\xb9C\xa0"
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    tuple_0 = (int_0, int_0, bytes_0, list_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    float_0 = -1567.2
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(float_0)
    var_3 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bytes_0 = b"F\xd3ZL3\xd7\x1b\xf1VY"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    bool_0 = True
    var_1 = validation_0.__eq__(bool_0)
    var_2 = var_0.__str__()


def test_case_5():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_fail()
    var_3 = var_0.to_box()


def test_case_6():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_7():
    str_0 = "v&PZJb X$6TZe"
    bytes_0 = b"F\xd3ZL3\xd7\x1b\xf1VY"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(str_0, var_0)
    validation_1.ap(validation_1)


def test_case_8():
    int_0 = 258
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.bind(none_type_0)
    validation_0.__str__()


def test_case_11():
    int_0 = 1
    bytes_0 = b"\x0c\xf6\xeb\xf2\xd9\xb9C\xa0"
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    tuple_0 = (int_0, int_0, bytes_0, list_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_box()
    var_3.is_fail()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_1.bind(set_0)


def test_case_13():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    bytes_0 = b"\x0c\xf6\xeb\xf2\xd9\xb9C\xa0"
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    tuple_0 = (int_0, int_0, bytes_0, list_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_1)
    float_0 = -1567.2
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.__eq__(float_0)
    var_3 = validation_1.__str__()
    var_4 = validation_1.__str__()
    var_2.is_fail()


def test_case_14():
    int_0 = 1
    bytes_0 = b"\x0c\xf6\xeb\xf2\xd9\xb9C\xa0"
    list_0 = [bytes_0, bytes_0, int_0, bytes_0]
    dict_0 = {}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.__str__()
    var_0.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_1.bind(set_0)
