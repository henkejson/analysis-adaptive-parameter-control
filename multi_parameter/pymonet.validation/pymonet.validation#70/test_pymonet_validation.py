# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"ho\x17v\x9ei"
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = 'TSZ(bt+G&fa"UXFtd\\'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()


def test_case_2():
    none_type_0 = None
    str_0 = "3.g7:6C}/"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_3():
    float_0 = 803.3
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    float_0 = 803.3
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_5():
    str_0 = "\r~\x0c:\x0b~J\tIr;M2&-i"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_6():
    int_0 = -1246
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.map(validation_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_8():
    none_type_0 = None
    str_0 = "3.g7:6C}/"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = var_1.__eq__(validation_0)
    var_3 = var_0.to_try()
    validation_0.bind(var_3)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.__str__()
    var_3.to_box()


def test_case_10():
    float_0 = 803.3
    validation_0 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.is_fail()


def test_case_11():
    bytes_0 = b"2ml\xb6vF\x85\xc2\xd1{\xc1\x9b\x97L\xceJ~\xb6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_success()
    var_3 = validation_0.is_success()
    var_0.is_success()


def test_case_12():
    float_0 = 565.075986
    str_0 = "sMA`?)f"
    bool_0 = True
    validation_0 = module_0.Validation(str_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(float_0)


def test_case_13():
    str_0 = "\n        Transform Validation to Box.\n\n        :returns: Box with Validation value\n        :rtype: Box[A]\n        "
    dict_0 = {}
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    int_0 = -1751
    validation_1 = module_0.Validation(int_0, int_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0}
    validation_2 = module_0.Validation(dict_1, dict_1)
    validation_1.to_either()


def test_case_14():
    set_0 = set()
    bytes_0 = b"\xd4\xcc\xbf\xa7\xff\x18"
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.ap(bytes_0)


def test_case_15():
    set_0 = set()
    bytes_0 = b"\xd4\xcc\xbf\xa7\xff\x18"
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.ap(bytes_0)
