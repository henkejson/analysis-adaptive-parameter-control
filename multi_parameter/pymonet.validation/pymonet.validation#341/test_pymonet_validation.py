# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_box()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.is_fail()
    var_2.to_try()


def test_case_2():
    bytes_0 = b"Z\xc7\xb0\x13\xf7\xe7\xde^"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.to_maybe()
    var_3 = validation_0.is_success()
    none_type_0 = None
    var_4 = validation_0.__str__()
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_5 = validation_2.is_fail()
    var_5.to_box()


def test_case_3():
    none_type_0 = None
    dict_0 = {}
    tuple_0 = ()
    tuple_1 = (dict_0, dict_0, tuple_0)
    validation_0 = module_0.Validation(tuple_1, dict_0)
    var_0 = validation_0.to_either()
    var_0.bind(none_type_0)


def test_case_4():
    bytes_0 = b"\xc8\xf6\xbd\xe8T\x94\xba\x19q\x06?\xdc\xb9\xcb\x96\xa3\x97\x83"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.map(bytes_0)


def test_case_5():
    bytes_0 = b"\xac\xb4_FE\xbc\xe3\x04\x1b\xb6W\xe6n\xcb>\xd3\x17"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    validation_1 = module_0.Validation(var_1, validation_0)
    validation_1.to_either()


def test_case_6():
    float_0 = -1961.377586
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_8():
    float_0 = -1386.513
    str_0 = "K"
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(float_0)
    validation_0.bind(float_0)


def test_case_9():
    int_0 = 2914
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_11():
    none_type_0 = None
    int_0 = 1
    tuple_0 = (int_0,)
    int_1 = 1349
    str_0 = "<`Db,k wsC"
    list_0 = [int_1, int_1, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(tuple_0)
    var_2 = var_1.bind(none_type_0)
    var_2.to_maybe()


def test_case_12():
    bytes_0 = b"\xf2S\xa7\xfa 3\x1d\x8f0g\xf5ty\x92\t\x82M\xbe>"
    int_0 = 2914
    validation_0 = module_0.Validation(bytes_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bytes_0, int_0)
    var_1 = validation_1.__eq__(validation_1)
    validation_0.ap(validation_0)


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_1.is_success()


def test_case_14():
    int_0 = 2914
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(int_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    str_0 = "K"
    var_1.ap(str_0)
