# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(var_0)
    validation_0.is_fail()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_3():
    str_0 = "\n    Return increased by 1 argument.\n\n    :param value:\n    :type value: Int\n    :returns:\n    :rtype: Int\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_0.to_either()


def test_case_4():
    none_type_0 = None
    none_type_0.to_try()


def test_case_5():
    int_0 = 1130
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(tuple_0)


def test_case_9():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    validation_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_0.__str__()


def test_case_12():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    bool_0 = True
    tuple_1 = (tuple_0, dict_0, dict_0, bool_0)
    list_0 = [tuple_1]
    str_0 = "^[oF)]?EZapSjWY6V+#6"
    tuple_2 = (list_0, bool_0, str_0)
    tuple_3 = (tuple_2, bool_0)
    validation_0 = module_0.Validation(tuple_3, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.__eq__(str_0)
    validation_0.map(tuple_3)


def test_case_13():
    none_type_0 = None
    float_0 = 2578.8
    list_0 = [float_0]
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, bool_0)
    validation_1.bind(none_type_0)


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = validation_0.to_maybe()
    validation_2 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_2.__eq__(tuple_0)
    var_0.bind(none_type_0)


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_1 = validation_0.to_either()
    var_2 = validation_1.__eq__(tuple_0)
    var_2.to_maybe()


def test_case_16():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = module_0.Validation(tuple_0, none_type_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.is_success()
    validation_0.bind(tuple_0)
