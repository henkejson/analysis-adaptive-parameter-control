# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = True
    float_0 = 1088.5
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.__eq__(bool_0)
    var_0.bind(validation_0)


def test_case_1():
    str_0 = "ImmutableList{}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(str_0)


def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.map(var_0)


def test_case_7():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_8():
    int_0 = 2688
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.ap(int_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_1.__eq__(validation_1)
    var_1.to_maybe()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    int_0 = 1009
    bytes_0 = b"(\x11!F"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(int_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.ap(var_2)
    var_4 = var_2.__str__()
    var_4.is_success()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_1.ap(var_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_0.ap(var_0)


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_1.to_maybe()
    var_4 = var_3.map(var_1)
    var_5 = validation_1.__eq__(var_3)
    var_5.to_maybe()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_2 = validation_1.__eq__(validation_1)
    var_3 = var_1.map(validation_0)
    var_4 = validation_0.__eq__(validation_1)
    validation_1.is_success()
