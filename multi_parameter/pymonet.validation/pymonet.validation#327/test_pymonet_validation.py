# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"c@0\x19"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(bytes_0, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.bind(bytes_0)


def test_case_1():
    bytes_0 = b"\xff{9\x0ewG\xa2\x08,X\xef\xd2\x9e\xdbN~f\\\xafX"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    str_0 = "E\tSL\x0bgiJ.*X\x0b!?tT9t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_3():
    int_0 = 1
    set_0 = {int_0, int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(int_0)
    none_type_0 = None
    list_0 = []
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_2 = validation_1.to_maybe()
    var_2.to_maybe()


def test_case_4():
    bytes_0 = b"c@0\x19"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.is_fail()
    var_0.is_fail()


def test_case_5():
    int_0 = 3349
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    float_0 = -1045.8
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_either()


def test_case_7():
    int_0 = -1972
    validation_0 = module_0.Validation(int_0, int_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    validation_1.is_fail()


def test_case_8():
    int_0 = -1493
    bool_0 = False
    validation_0 = module_0.Validation(int_0, bool_0)
    validation_0.map(bool_0)


def test_case_9():
    tuple_0 = ()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(tuple_0)


def test_case_10():
    dict_0 = {}
    str_0 = 'KB3Tp\t"xBb5Kd+<%Ak'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(dict_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, bool_1)
    validation_1.__str__()


def test_case_12():
    bytes_0 = b"G\xe40\xc7\xc6\xbdf\xea"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_either()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\xad\x91;I<\xcd\xbe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__eq__(bytes_0)
    var_3 = validation_0.is_fail()
    var_4 = validation_1.__eq__(bytes_0)
    var_5 = var_0.__str__()
    var_4.is_success()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.is_fail()
    validation_2 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_0.__eq__(validation_2)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_2.__str__()
    var_1.is_success()


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_2 = module_0.Validation(validation_1, validation_0)
    var_1 = validation_0.is_fail()
    var_0.ap(validation_1)


def test_case_18():
    bytes_0 = b"\xcaS\x9e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.is_fail()
    validation_2 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_0.__eq__(validation_2)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_2.__str__()
    var_1.is_success()
