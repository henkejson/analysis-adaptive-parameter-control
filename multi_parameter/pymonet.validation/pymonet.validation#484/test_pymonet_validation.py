# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 31.0
    bool_0 = False
    int_0 = 2543
    tuple_0 = (float_0, float_0, bool_0, int_0)
    validation_0 = module_0.Validation(tuple_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    none_type_0 = None
    tuple_0 = ()
    var_0 = tuple_0.__str__()
    set_0 = {tuple_0, none_type_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.__str__()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_2 = validation_1.to_lazy()
    var_2.is_fail()


def test_case_3():
    int_0 = -606
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(int_0)


def test_case_4():
    none_type_0 = None
    str_0 = "2%umTxMel\nv"
    dict_0 = {str_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.to_lazy()
    validation_1 = module_0.Validation(var_3, var_3)
    bool_0 = False
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_4 = validation_2.to_lazy()
    var_5 = var_4.to_either()
    validation_2.ap(var_4)


def test_case_5():
    str_0 = '-Uh)-csi,C)"A|G'
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_6():
    float_0 = 3156.139262
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    str_0 = "t*{IqZf6_L$q\x0b5\x0c\nvA"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bool_0)


def test_case_9():
    none_type_0 = None
    float_0 = 839.858421
    none_type_1 = None
    validation_0 = module_0.Validation(float_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_11():
    bytes_0 = b'K"\n'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_12():
    bool_0 = True
    bytes_0 = b"!r\x16y\x08b\x95|\x1b*\x90&-3`7\x93\x1a\xa0"
    list_0 = [bool_0]
    tuple_0 = (bool_0, bytes_0, bytes_0, list_0)
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, tuple_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_0)
    var_2 = validation_0.__eq__(none_type_0)
    var_2.is_success()


def test_case_14():
    bool_0 = True
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bool_0, var_0)
    var_2 = validation_1.__eq__(none_type_0)
    var_2.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_0)
    var_3 = var_2.to_maybe()
    var_4 = validation_0.__eq__(validation_1)
    var_2.is_success()


def test_case_16():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_0.to_either()
    var_2.bind(set_0)
