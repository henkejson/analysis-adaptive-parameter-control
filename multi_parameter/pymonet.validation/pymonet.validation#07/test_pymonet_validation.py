# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    tuple_0 = ()
    bytes_0 = b"G\x84|\xaavq"
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_maybe()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_success()
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_try()
    var_5 = validation_0.is_fail()
    var_4.map(var_5)


def test_case_4():
    float_0 = -416.87214
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = 1995
    float_0 = -1302.0
    tuple_0 = (float_0,)
    validation_0 = module_0.Validation(tuple_0, float_0)
    validation_0.map(int_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_9():
    bytes_0 = b"*\xab\xfc\x9b"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_10():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.to_either()
    var_1 = validation_0.to_box()
    var_2 = var_1.to_lazy()
    var_1.bind(dict_0)


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_3.is_fail()


def test_case_12():
    bytes_0 = b"]\xc1Hr\xd7\x11tK\x93j"
    dict_0 = {bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"\x10'\xc2T'f\x92\xa3\xf9#\x9c\x1f5b\xdcu\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    bool_0 = True
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_2 = var_1.to_maybe()
    var_2.is_fail()


def test_case_14():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    bool_0 = False
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_box()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_try()
    var_1.to_either()


def test_case_16():
    bool_0 = False
    int_0 = -2420
    set_0 = {bool_0, int_0}
    str_0 = "4BR.B9<|a+4O4i{<Y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(set_0)
    var_2.to_lazy()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    list_0 = [validation_0, validation_0, validation_0, none_type_0]
    validation_1 = module_0.Validation(validation_0, list_0)
    validation_1.__str__()
