# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_0.__str__()
    validation_0.map(none_type_0)


def test_case_1():
    bytes_0 = b"\xf9\xb0\xd0\xe5\x14\xc5"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_maybe()


def test_case_3():
    bytes_0 = b'\xfe\x9d\xe8!\x87\x17\x8fo"\x07n;\x1dC}\x96\x9e\xe4'
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    str_0 = "urt;'MyR"
    int_0 = 1008
    validation_0 = module_0.Validation(str_0, int_0)
    validation_0.to_try()


def test_case_5():
    float_0 = -5112.8284
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\xed\xfe\x0f\xdc-\xf0"
    tuple_0 = (bytes_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(tuple_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(none_type_0)


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.__eq__(none_type_0)
    var_3 = validation_0.__str__()
    var_0.map(var_3)


def test_case_9():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_1.ap(var_0)


def test_case_10():
    str_0 = "O3D!>\tIUBCs!"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(str_0)
    var_2.ap(str_0)


def test_case_11():
    str_0 = "ua$eoLalj"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    none_type_0 = None
    validation_1 = module_0.Validation(str_0, str_0)
    var_3 = validation_1.to_maybe()
    var_4 = var_3.map(none_type_0)
    var_5 = var_4.bind(str_0)
    var_6 = var_4.to_box()
    var_5.is_success()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_0.__str__()
    var_3 = var_1.to_box()
    var_3.ap(dict_0)


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.__str__()
    var_3 = var_0.to_either()
    var_1.is_fail()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    bytes_0 = b"\x18V\x9c\x92\xa7\x15\xb4\xfcR\x89\x95"
    var_2 = validation_0.is_fail()
    var_3 = module_0.Validation(var_2, var_2)
    var_4 = validation_0.__eq__(var_3)
    var_5 = var_1.ap(bytes_0)
    var_6 = var_5.ap(bytes_0)
    validation_1 = module_0.Validation(validation_0, var_3)
    var_7 = var_5.__eq__(bytes_0)
    none_type_0 = None
    validation_1.map(none_type_0)
