# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "|>~)|3O\rBepXF\\=DE;-\t"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_1():
    str_0 = "|>~)|3O\rBepXF\\=DE;-\t"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.to_try()


def test_case_2():
    none_type_0 = None
    bytes_0 = b"BfN8"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_either()


def test_case_3():
    str_0 = 'wj=J{rv"\tNNb=#b'
    bytes_0 = b"8)\x1b/\x00\xc3 O\x02\x03w\xee"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()


def test_case_4():
    int_0 = 246
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\x08$"
    bytes_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_8():
    bytes_0 = b"\x08$"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_9():
    str_0 = 'wj=J{rv"\tNNb=#b'
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.ap(validation_0)
    validation_0.map(none_type_0)


def test_case_10():
    bytes_0 = b"\xe0\xf1\x167\xda=\xe4\x8b\xf6\x1c\xfc\x1f\tr\xe4"
    str_0 = "bSKU7"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_11():
    str_0 = ""
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(str_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_0.to_box()
    validation_1.ap(validation_0)


def test_case_12():
    str_0 = "|>~)|3O\rBepXF\\=DE;-\t"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = var_1.to_try()


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_14():
    int_0 = -1243
    bytes_0 = b"\x1c.b\xb7VR\x04\xf6\x08\xe0U\x87\x9f\x811mr"
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_success()
    var_4 = var_0.to_maybe()
    var_4.to_maybe()


def test_case_15():
    tuple_0 = ()
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(tuple_0)
    var_1.to_box()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    int_0 = -254
    validation_1 = module_0.Validation(int_0, int_0)
    var_2 = validation_1.to_box()
    var_2.is_success()


def test_case_18():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(none_type_0, validation_1)
    validation_2.to_maybe()
