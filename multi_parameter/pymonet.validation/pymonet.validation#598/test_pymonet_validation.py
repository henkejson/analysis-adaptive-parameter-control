# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    str_0 = "f"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0]
    str_0 = 'SGwcNer"\x0bg;c>gUU'
    set_1 = {str_0}
    validation_0 = module_0.Validation(set_1, str_0)
    var_0 = validation_0.__str__()
    var_0.map(list_0)


def test_case_3():
    complex_0 = -1919.46304 + 2029.4j
    list_0 = [complex_0, complex_0, complex_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    validation_0.ap(validation_0)


def test_case_4():
    bytes_0 = b"rB\xbf7\x01\x08b\xa85\xaf^"
    none_type_0 = None
    bool_0 = True
    int_0 = -424
    list_0 = [int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.__eq__(none_type_0)
    var_2.bind(bytes_0)


def test_case_5():
    int_0 = -3414
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_either()


def test_case_7():
    int_0 = -3414
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_8():
    float_0 = 2017.16
    set_0 = {float_0, float_0, float_0}
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(set_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_10():
    int_0 = 3332
    set_0 = set()
    none_type_0 = None
    var_0 = set_0.__eq__(none_type_0)
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.ap(int_0)


def test_case_11():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_box()
    var_0.to_maybe()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_1.to_either()


def test_case_13():
    str_0 = "@yP`Qxru1Sn"
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(list_0)


def test_case_14():
    complex_0 = -677.9 + 737j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_16():
    bool_0 = True
    float_0 = 671.0
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: float_0}
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.map(dict_0)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_18():
    bytes_0 = b"\x17\xdb\x82\xe3\xddr"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = validation_0.to_box()
    var_3 = validation_1.__eq__(validation_0)
    var_4 = var_2.__eq__(var_0)
    var_5 = var_1.map(var_1)
    validation_0.ap(var_1)
