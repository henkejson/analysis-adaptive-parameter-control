# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, set_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_1():
    str_0 = "zfk%r<P5q@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.to_try()
    var_4 = validation_0.__str__()
    var_5 = validation_0.__eq__(var_1)
    var_3.to_lazy()


def test_case_2():
    str_0 = "zfk%r<P5q@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_try()
    var_2 = var_1.__eq__(var_1)
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_try()
    var_5 = validation_0.__str__()
    var_5.to_maybe()


def test_case_3():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    str_0 = ")hmn1XE&7r"
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.__eq__(var_1)
    var_2.bind(var_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    int_0 = 470
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_either()


def test_case_6():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_fail()
    var_2.ap(var_2)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, bool_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.to_box()
    validation_0.bind(var_0)


def test_case_9():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(list_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_11():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.to_either()


def test_case_12():
    int_0 = 3815
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_13():
    str_0 = "zfk%r<P5q@"
    validation_0 = module_0.Validation(str_0, str_0)
    bool_0 = True
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_1.to_lazy()
    var_0.to_try()


def test_case_14():
    tuple_0 = ()
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_2 = module_0.Validation(tuple_0, var_0)
    validation_2.is_fail()


def test_case_15():
    str_0 = "zfk%r<P5q@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.to_try()
    var_4 = validation_0.__str__()
    var_5 = var_3.__eq__(var_2)
    var_5.to_try()


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = validation_0.is_fail()
    var_2.map(var_2)


def test_case_17():
    set_0 = set()
    complex_0 = 966.9143 - 273.8083j
    validation_0 = module_0.Validation(complex_0, set_0)
    float_0 = -2179.25
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__str__()
    validation_1.is_fail()
