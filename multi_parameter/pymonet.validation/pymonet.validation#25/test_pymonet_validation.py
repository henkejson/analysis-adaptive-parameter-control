# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_0.to_box()


def test_case_1():
    bytes_0 = b"\xab\xd6\xf2\xf2\xe0\xe8\xdayp\xbb\xed>;~q"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    bytes_1 = b"@\xaf\xb0ga\x93\x91\xa5\xef\xb2\xc1\x86k+\xddSl\xdd\x7f\x12"
    var_2 = var_1.ap(bytes_1)
    var_3 = var_1.__eq__(bytes_0)
    var_4 = var_1.to_maybe()


def test_case_2():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_try()


def test_case_3():
    bytes_0 = b"\x81Q\xd6)\xa1\x12d\xfa1\xda\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bytes_0 = b"@\xaf\xb0ga\x93\x91\xa5\xef\xb2\xc1\x86k+\xddSl\xdd\x7f\x12"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    tuple_0 = ()
    validation_1 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_1.is_fail()
    var_0.is_fail()


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\x81Q\xd6)\xa1\x12d\xfa1\xda\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(none_type_0)


def test_case_7():
    float_0 = -224.3783
    validation_0 = module_0.Validation(float_0, float_0)
    bool_0 = False
    tuple_0 = (bool_0, bool_0, float_0)
    validation_0.bind(tuple_0)


def test_case_8():
    set_0 = set()
    list_0 = [set_0, set_0]
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    list_0 = [validation_0]
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_1.to_lazy()
    var_3 = var_0.to_try()
    var_3.to_maybe()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_11():
    float_0 = -1003.5
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_either()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    tuple_0.to_box()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_0.__str__()
    var_2.to_box()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    list_0 = [validation_0]
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_1.__eq__(list_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_0.__eq__(validation_1)
    var_3.to_try()
