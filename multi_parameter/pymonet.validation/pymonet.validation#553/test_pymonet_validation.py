# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 4962.0
    str_0 = "0?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.is_fail()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.__eq__(var_1)
    var_3 = validation_0.to_maybe()
    var_2.to_try()


def test_case_2():
    str_0 = "2-,r"
    set_0 = {str_0, str_0}
    set_1 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(set_1)
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_3():
    float_0 = -843.2267464834491
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_4():
    float_0 = -869.182
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_5():
    float_0 = 350.3
    int_0 = 1
    validation_0 = module_0.Validation(float_0, int_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\xed\x9bz\xf5\xbaB\x9aq\xc7\x80n1\xd7\xca\x15\xbd\xb6"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bytes_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.bind(none_type_0)


def test_case_8():
    complex_0 = -3193.133 - 3608.3157j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(complex_0)


def test_case_9():
    bytes_0 = b"\x85\xda!\x0281\xb1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    var_0.is_fail()


def test_case_11():
    str_0 = "2-,r"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_1.to_try()
    var_1 = var_0.__eq__(set_0)
    var_2 = validation_1.__eq__(var_1)
    var_3 = validation_0.to_maybe()
    var_2.to_try()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_1.to_try()
    var_1 = var_0.__eq__(set_0)
    var_2 = validation_1.__eq__(var_1)
    var_3 = validation_1.to_try()
    var_4 = validation_1.__str__()
    validation_1.ap(var_3)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_1.__str__()
    var_3 = validation_1.to_try()
    var_4 = validation_1.__str__()
    int_0 = 2352
    validation_2 = module_0.Validation(var_2, int_0)
    var_5 = var_2.__eq__(int_0)
    var_6 = validation_0.to_try()
    var_6.is_fail()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(dict_0)
    none_type_0 = None
    var_2 = module_0.Validation(dict_0, var_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.__eq__(var_2)
    var_5 = validation_0.to_try()
    validation_0.map(none_type_0)


def test_case_16():
    str_0 = "_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_4 = var_0.to_lazy()
    var_3.to_either()
