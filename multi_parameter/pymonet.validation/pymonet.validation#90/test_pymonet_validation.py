# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_success()


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_1.is_fail()


def test_case_2():
    bytes_0 = b"Q\xab\x80\xd0G\xbd\xf5\xbc\xa9\xbb\x0c\xa4\x06"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_3():
    bytes_0 = b"\xb2\x19>\xe1>\x9c-\xdfI\xa4\x012\xae\x19#\xbc\x03"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    none_type_0.to_box()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "J}f<Q5"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_maybe()
    str_1 = "`G"
    validation_1.map(str_1)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    validation_0.bind(validation_0)


def test_case_9():
    bytes_0 = b"\xd6o>X\xb2\x16x\xb1'\x9c\x08\xa3X\x99\xf1"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(bytes_0)


def test_case_10():
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0.is_fail()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    dict_0 = {}
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_1 = validation_0.__eq__(bool_0)
    var_2 = validation_1.to_maybe()
    var_3 = var_2.__eq__(var_1)
    var_4 = validation_1.is_success()
    validation_0.to_maybe()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.to_box()
    validation_1.is_success()


def test_case_15():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.ap(none_type_0)
