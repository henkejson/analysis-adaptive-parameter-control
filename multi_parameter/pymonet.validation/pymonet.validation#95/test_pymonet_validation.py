# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 3523
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = var_0.__eq__(int_0)
    var_1.is_success()


def test_case_1():
    tuple_0 = ()
    list_0 = [tuple_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()


def test_case_2():
    str_0 = "n@./nm4Vq*CD-M"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()


def test_case_3():
    int_0 = 516
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(set_0)


def test_case_6():
    int_0 = 465
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(dict_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    int_0 = 3361
    tuple_0 = (validation_0, int_0)
    int_1 = 1155
    validation_1 = module_0.Validation(int_1, int_1)
    validation_1.ap(tuple_0)


def test_case_8():
    int_0 = 516
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.ap(var_1)
    var_1.is_fail()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_1.to_box()


def test_case_10():
    bool_0 = True
    str_0 = "r-0lb;GX|2wJ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(bool_0)


def test_case_11():
    str_0 = "n@./nm4Vq*CD-M"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_12():
    int_0 = 3523
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = var_0.__eq__(int_0)
    var_2 = validation_0.to_box()


def test_case_13():
    tuple_0 = ()
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    float_0 = -1159.16
    validation_1 = module_0.Validation(tuple_0, float_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_box()


def test_case_14():
    list_0 = []
    list_1 = [list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.ap(list_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    int_0 = 516
    var_3 = validation_0.is_success()
    validation_1 = module_0.Validation(int_0, int_0)
    var_4 = validation_1.__eq__(dict_0)
    var_5 = validation_1.to_lazy()
    var_5.is_fail()
