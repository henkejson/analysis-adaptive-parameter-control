# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "O\x0bN~^E)'r4eoE|d"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()


def test_case_1():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.map(validation_0)


def test_case_2():
    str_0 = "O\x0bN~^E)'r4eoE|d"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_0.__str__()
    var_3 = validation_0.to_try()
    var_4 = var_3.__eq__(var_0)
    set_0 = set()
    bytes_0 = b"\xcd\xe1\xe8\x9da\xf7\x02\x7fU\x00\xefC_"
    validation_1 = module_0.Validation(bytes_0, set_0)
    var_5 = validation_1.__eq__(bytes_0)
    var_5.map(var_5)


def test_case_3():
    bytes_0 = b'\xa5\x92Q]j}\xb8\x06\x9f\x07\xd1\xaf\xd7\xa9O\xca/"o'
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bytes_0, bool_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_4():
    bytes_0 = b"\xcd\xe1\xe8\x9da\xf7\x02\x7fU\x00\xefC_"
    bytes_0.to_try()


def test_case_5():
    int_0 = 252
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    int_0 = 1923
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_9():
    int_0 = 1923
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_10():
    complex_0 = -1602.22 - 1027.13j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(complex_0)


def test_case_11():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_box()
    str_0 = "#\n"
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_0.to_try()
    var_3 = validation_1.is_success()
    var_4 = validation_1.to_either()
    var_5 = validation_1.to_maybe()
    var_6 = var_4.to_lazy()
    var_7 = var_5.to_lazy()
    var_7.to_lazy()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_14():
    bytes_0 = b"\xe6\xf8\x99\xa0-I\x11\xca6\xbdRll\n\xa7\xa3\x8d\xbf"
    set_0 = set()
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(bytes_0)


def test_case_15():
    float_0 = 2830.6
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(float_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_1.__eq__(var_2)
    validation_0.to_either()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_17():
    str_0 = "O\x0bN~^E)'r4eoE|d"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_fail()
    set_0 = set()
    bytes_0 = b"\xcd\xe1\xe8\x9da\xf7\x02\x7fU\x00\xefC_"
    validation_1 = module_0.Validation(bytes_0, set_0)
    var_5 = validation_1.__eq__(bytes_0)
    validation_2 = module_0.Validation(var_5, var_5)
    validation_3 = module_0.Validation(var_1, validation_1)
    var_6 = validation_1.to_either()
    var_6.is_success()


def test_case_18():
    str_0 = "O\x0bN~^E)'r4eoE|d"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_fail()
    set_0 = set()
    validation_1 = module_0.Validation(var_2, set_0)
    var_5 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(var_5, var_5)
    validation_3 = module_0.Validation(var_1, validation_1)
    validation_1.bind(set_0)
