# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, var_1)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.__eq__(none_type_0)
    validation_2 = module_0.Validation(bool_0, var_3)
    list_0 = [bool_0, bool_0, var_3]
    validation_3 = module_0.Validation(bool_0, list_0)


def test_case_1():
    str_0 = "V,\x0bvgw7%71=?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_2():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_4():
    bytes_0 = b"x\xc4}\xd3\xb5\xf6\x85\x16\xd1\xd6\x91"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.to_try()


def test_case_5():
    str_0 = "V,\x0bvgw7%71=?"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_6():
    int_0 = -3402
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(int_0)


def test_case_7():
    bool_0 = False
    int_0 = -1179
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(bool_0)


def test_case_8():
    str_0 = "V,\x0bvgw7%71=?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_9():
    float_0 = -1586.717706
    set_0 = {float_0, float_0, float_0, float_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    tuple_0 = ()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(tuple_0)
    var_1.to_maybe()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_12():
    bytes_0 = b"\x8d\xe4}{\x8a\xe9\x97\xacj\xa5=xa\x9e\xb1\xaa\xf2\xd3\xbd\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    bytes_0.is_fail()


def test_case_13():
    tuple_0 = ()
    float_0 = 961.573153
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, tuple_0)
    var_0 = validation_0.is_success()
    validation_1 = validation_0.__str__()
    validation_1.bind(none_type_0)


def test_case_14():
    bytes_0 = b"\x8d\xe4J{\x8a\xe9\x97\xacj\xa5=xa\x9e\xb1\xaa\xf2\xd3\xbd\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    var_2.is_success()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, var_0)
    validation_1.to_maybe()


def test_case_16():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    tuple_0 = ()
    validation_1 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_1.to_either()
    var_2 = var_1.to_try()
    var_3 = var_0.to_maybe()
    var_4 = var_3.to_box()
    var_5 = validation_0.__eq__(bool_0)
    var_5.is_success()


def test_case_17():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    tuple_0 = ()
    validation_1 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.to_box()
    var_4 = validation_0.__eq__(bool_0)
    var_4.is_success()


def test_case_18():
    bytes_0 = b"\x8d\xe4}{\x8a\xe9\x97\xdfj\xa5=xa\x9e\xb1\xaa\xf2\xd3\xbd\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = module_0.Validation(var_0, validation_0)
    var_2 = validation_0.is_success()
    var_3 = validation_0.__eq__(var_1)
    var_2.map(var_3)
