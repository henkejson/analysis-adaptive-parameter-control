# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.to_either()


def test_case_1():
    bytes_0 = b"\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_2():
    float_0 = 1868.0
    dict_0 = {float_0: float_0, float_0: float_0}
    list_0 = [dict_0, float_0, float_0]
    str_0 = '+fnFY"Fc}J'
    int_0 = -1168
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(str_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__eq__(list_0)
    var_2.to_either()


def test_case_3():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    complex_0 = -1537.9242 + 5845j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    bool_0 = True
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.is_fail()


def test_case_5():
    bytes_0 = b"\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.to_either()
    var_4 = validation_1.__eq__(var_3)
    var_5 = var_3.ap(var_2)
    var_6 = validation_0.to_lazy()
    var_7 = validation_0.to_lazy()
    validation_0.map(var_2)


def test_case_6():
    str_0 = "\\MUy\r"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(str_0)


def test_case_7():
    bytes_0 = b"\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    validation_0.ap(var_1)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_9():
    tuple_0 = ()
    str_0 = "&^4V%}U w"
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_2 = var_1.bind(tuple_0)
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_1.to_try()
    dict_0 = {var_3: var_1}
    validation_1 = module_0.Validation(dict_0, var_1)
    var_5 = validation_1.to_lazy()
    validation_1.to_maybe()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_11():
    bytes_0 = b"\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_try()
    var_1.to_lazy()


def test_case_12():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_either()
    validation_0.bind(var_2)


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, validation_0)
    var_0 = validation_0.__str__()
    validation_1.to_maybe()
