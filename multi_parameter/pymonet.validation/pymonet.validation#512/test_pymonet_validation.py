# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = 2159 - 1392.17j
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(complex_0)
    var_1.to_either()


def test_case_1():
    str_0 = ")IeE70!F\\QC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.bind(list_0)


def test_case_3():
    bytes_0 = b"\xb7\x17R\xbc\xe1\xc7\xa0g\x94\xa9)o\x95\x89\xc5=\xf7\xec?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_either()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 563
    int_1 = -1278
    list_0 = [int_1, int_1]
    dict_0 = {int_1: list_0}
    validation_0 = module_0.Validation(dict_0, int_1)
    validation_0.map(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"LkOO2\xd4U\x1e\x1b\x17\xbf"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_1 = module_0.Validation(set_0, bytes_0)
    validation_1.ap(validation_1)


def test_case_9():
    int_0 = 1251
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_11():
    bytes_0 = b"\xb7\x17R\xbc\xe1\xc7\xa0g\x94\xa9)o\x95\x89\xc5=\xf7\xec?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(var_0)
    var_5 = var_1.__str__()
    var_6 = var_1.__str__()
    var_1.to_box()


def test_case_13():
    str_0 = "Kmu.4rqZ &"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_14():
    int_0 = -3157
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_either()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(var_3)
    var_5 = validation_0.__str__()
    var_6 = var_3.to_either()
    var_7 = var_3.__str__()
    var_8 = validation_0.to_box()
    var_1.to_lazy()


def test_case_16():
    int_0 = -3157
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.__eq__(validation_1)
    int_0.to_try()


def test_case_17():
    bytes_0 = b"\xb4z\xb8."
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_maybe()
    var_3 = var_2.__str__()
    var_3.to_maybe()


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(var_0, var_1)
    var_5 = var_3.to_either()
    var_6 = validation_0.to_maybe()
    var_7 = var_5.__str__()
    validation_2 = module_0.Validation(var_2, validation_1)
    var_8 = var_2.to_box()
    validation_1.bind(var_7)
