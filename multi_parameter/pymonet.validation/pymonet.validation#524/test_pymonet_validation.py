# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0.map(list_0)


def test_case_1():
    int_0 = 251
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    int_0.map(var_2)


def test_case_2():
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()


def test_case_3():
    set_0 = set()
    float_0 = 4839.2
    tuple_0 = (set_0, float_0, float_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_7():
    object_0 = module_1.object()
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Last[B]\n        :returns: new Last with last value\n        :rtype: Last[A]\n        "
    dict_0 = {object_0: object_0, object_0: str_0}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(dict_0)


def test_case_8():
    none_type_0 = None
    int_0 = 2080
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_10():
    int_0 = -540
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_1 = {int_0: int_0, int_0: int_0, int_0: dict_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_1, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_11():
    bytes_0 = b"/\x84\t\x1fW\x9e\xb1=T\xb0\x81"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_0.ap(bytes_0)


def test_case_12():
    int_0 = 251
    list_0 = [int_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = var_0.__eq__(int_0)
    var_1.is_fail()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    validation_0.ap(var_1)


def test_case_14():
    bytes_0 = b"\xf7yg\xa2_\x06\xabWj"
    str_0 = "ewM3)"
    int_0 = -105
    tuple_0 = (bytes_0, str_0, int_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    set_0 = {int_0, str_0}
    float_0 = 4839.2
    tuple_1 = (set_0, float_0, float_0)
    validation_1 = module_0.Validation(tuple_1, tuple_1)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(tuple_0)
    validation_2 = module_0.Validation(float_0, var_2)
    var_3 = var_0.bind(var_2)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = var_3.ap(var_1)
