# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_box()
    var_3 = var_1.ap(var_0)


def test_case_1():
    bytes_0 = b"G\x1b\xa6\xf3\x8fa:\x08;\x18"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, var_1)
    validation_2 = var_0.__str__()
    var_2 = validation_0.__eq__(var_1)
    validation_3 = module_0.Validation(var_1, none_type_0)
    validation_2.map(var_1)


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_3():
    bytes_0 = b"\xdc\x93\xe4\x1cVe\x08\xf0\xf0zT\xb4\xdf\xc1OD\xb2\x90yN"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.__str__()
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_3 = var_2.to_maybe()


def test_case_4():
    bytes_0 = b"G\x1b\xa6\xf3\x8fa:\x08;\x18"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_2)
    validation_2 = module_0.Validation(validation_0, none_type_0)
    var_3 = validation_0.__eq__(var_2)
    validation_3 = var_3.__eq__(validation_2)
    validation_2.map(var_2)


def test_case_5():
    bytes_0 = b"G\x1b\xa6\xf3a:\x08;\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__str__()
    validation_1 = module_0.Validation(var_1, var_2)
    var_1.to_maybe()


def test_case_6():
    float_0 = 1854.2145
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_7():
    int_0 = 2630
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_8():
    bytes_0 = b"{\x88\xc1\x9b\x02{ly\xe1\xed\xa2\xd8\xe1?\xfe\xc7"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    validation_1.is_fail()


def test_case_9():
    bytes_0 = b"G\x1b\x1d\xf3\x95i\xd2H\xdf\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__str__()
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    validation_1.map(validation_1)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_11():
    bytes_0 = b"G\x1b\x1d\x82\x8fi\xd2H\xdf\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__str__()
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    validation_1.ap(validation_1)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_13():
    int_0 = 718
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.to_lazy()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__str__()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_3 = validation_1.__eq__(bytes_0)
    bool_0 = True
    validation_2 = module_0.Validation(bool_0, bool_0)
    validation_1.map(bytes_0)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_0.to_maybe()


def test_case_16():
    bytes_0 = b"G\x1b\xa6\xf3\x8fa:$;\x18"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_0, bytes_0)
    validation_2 = module_0.Validation(validation_1, none_type_0)
    var_2 = validation_1.__eq__(validation_2)
    var_0.map(validation_2)
