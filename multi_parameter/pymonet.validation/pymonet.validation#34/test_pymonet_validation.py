# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(validation_0)
    var_1.map(validation_0)


def test_case_1():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_either()


def test_case_2():
    str_0 = "6J&B~\r[d]9hV~"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    dict_0 = {}
    str_0 = "6J&B~\r[d]9hV~"
    validation_0 = module_0.Validation(dict_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_2.map(str_0)


def test_case_4():
    str_0 = "hL1"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_6():
    bytes_0 = b"n\x98\xba\xe59\xb2"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    str_0 = "rL!_>2l?}8\tC<!"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(none_type_0)


def test_case_8():
    bytes_0 = b"\x9b\x1e\xa7y\xdan\x07*\xb6\xc3\xec\x88\xfe[\xf5\xdb0"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_9():
    bool_0 = True
    tuple_0 = (bool_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(tuple_0)


def test_case_10():
    bool_0 = False
    set_0 = {bool_0}
    tuple_0 = (bool_0, set_0)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.__str__()
    var_3.to_maybe()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(none_type_0, validation_0)
    validation_0.map(validation_1)


def test_case_12():
    str_0 = "r3Y7K=$3DR"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_try()
    var_1.is_fail()


def test_case_13():
    dict_0 = {}
    str_0 = "6J&B~\r[d]9hV~"
    validation_0 = module_0.Validation(dict_0, str_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = var_0.__str__()
    var_1.map(var_4)


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_1.ap(var_2)


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_16():
    dict_0 = {}
    str_0 = "6J&B~\r[d]9hV~"
    validation_0 = module_0.Validation(dict_0, str_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_0.__str__()
    var_3 = validation_0.__eq__(validation_1)
    bool_0 = False
    validation_0.map(bool_0)
