# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_2():
    none_type_0 = None
    complex_0 = -2026.8 - 1365.138712j
    set_0 = {none_type_0, complex_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__str__()
    complex_0.bind(none_type_0)


def test_case_3():
    bytes_0 = b"XO\x05\xce\xa5v_"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_4():
    bool_0 = True
    str_0 = "|"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.map(bool_0)


def test_case_5():
    str_0 = "DbD\n"
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)


def test_case_7():
    int_0 = 2544
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, int_0)
    validation_0.to_try()


def test_case_8():
    bytes_0 = b"\xfb\xeb\x1f\x91)\x1a\xe0\xd5\xa0L\xfaKM"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_success()
    var_1.map(bytes_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_11():
    complex_0 = -2045.828 - 1840.339056j
    list_0 = [complex_0, complex_0, complex_0]
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(list_0)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_1.is_fail()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__eq__(none_type_0)
    var_2.to_either()


def test_case_14():
    bool_0 = True
    tuple_0 = ()
    object_0 = module_1.object(*tuple_0)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.map(tuple_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, var_0)
    validation_2 = validation_0.__eq__(validation_1)
    var_1 = validation_1.__eq__(validation_1)
