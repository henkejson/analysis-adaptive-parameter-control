# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    float_0 = 683.04467
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_either()


def test_case_1():
    str_0 = "\\n5;9X+3mFc_t\t&{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    int_0 = -1797
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(int_0)
    var_2 = var_1.to_box()
    dict_0.to_maybe()


def test_case_3():
    float_0 = 683.9783960730374
    dict_0 = {}
    validation_0 = module_0.Validation(float_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()


def test_case_4():
    str_0 = "\\n5;9X+3mFc_t\t&{"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    str_0 = "\\n5;9X+3mFc_t\t&{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    float_0 = 683.04467
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(float_0)


def test_case_7():
    object_0 = module_1.object()
    str_0 = "A\r?%M*1\t8LGPIV$`'AT#"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    float_0 = 683.9010367405224
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(var_0)


def test_case_9():
    bytes_0 = b"9[|\x9b\xa1\xd3[v\x10\x05D\xb1@\xa0\xda\x01\xbb\x90C"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.to_box()
    var_0.is_success()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    str_0 = "N\n&usKNc"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_3 = validation_1.to_lazy()
    var_4 = var_3.to_box()
    var_4.map(none_type_0)


def test_case_12():
    object_0 = module_1.object()
    str_0 = "E9\x0caTlB\\W0p;x 5FZ,tr"
    set_0 = {str_0, str_0}
    list_0 = [set_0, set_0]
    list_1 = []
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_try()
    var_0.bind(list_0)


def test_case_13():
    float_0 = 683.9783960730374
    dict_0 = {}
    validation_0 = module_0.Validation(float_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()


def test_case_14():
    bytes_0 = b"\x8d\x9awJ)&\x83\xc9\xcb\xe2\xfa!\x94\xd6\xfb"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_either()


def test_case_15():
    float_0 = 683.9783960730374
    dict_0 = {}
    validation_0 = module_0.Validation(float_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()


def test_case_16():
    none_type_0 = None
    float_0 = 683.9010367405224
    validation_0 = module_0.Validation(float_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, float_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.to_either()


def test_case_17():
    bytes_0 = b"\xb5\x83\x9b\xb5\xc8\xee\x0f"
    bytes_1 = b"h\x0cK\xdaoA{\xf6\xd1?u\x91\x0e\xca\xe7\x0e\x8a\x19\xf8\x91"
    validation_0 = module_0.Validation(bytes_1, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = var_0.to_try()
    var_3.is_fail()
