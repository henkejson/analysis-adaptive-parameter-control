# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "XcH!,1T0:f=B\x0bgex]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_0.to_lazy()


def test_case_1():
    none_type_0 = None
    bytes_0 = b"\xae\x82,\xa5\x19\x9c\xad\xca\r\t\xd53\x19\xb9\xbe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_try()


def test_case_2():
    bytes_0 = b"<\xec/\xe0\xb4\xdd./\x00c\x1c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.map(bytes_0)


def test_case_3():
    str_0 = "^x\x0cf>Com='[\\u\\Xf=+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    str_0 = "^x\x0cf_Com='[\\u\\Xf=+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_7():
    str_0 = "^x\x0cf_Com='[\\u\\Xf=+"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_8():
    bytes_0 = b"\xda"
    str_0 = "XcH!,1T0:f=B\x0bgex]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.__str__()
    var_6 = var_5.__str__()
    var_7 = var_5.__str__()
    validation_0.bind(bytes_0)


def test_case_9():
    str_0 = "^x\x0cf_Com='[\\u\\Xf=+"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_10():
    int_0 = 227
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_11():
    bytes_0 = b"\xda"
    str_0 = "XcH!,1T0:f=B\x0bgex]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.__str__()
    var_6 = var_5.__str__()
    var_7 = validation_0.to_try()
    var_8 = var_5.__str__()
    var_9 = var_4.to_try()
    validation_0.bind(bytes_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xda"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    int_0 = 0
    validation_1 = module_0.Validation(none_type_0, int_0)
    var_2 = var_1.ap(var_0)
    var_3 = validation_0.to_lazy()
    var_4 = validation_1.__eq__(validation_0)
    list_0 = [var_3, var_0, validation_1, validation_1]
    var_5 = var_1.__eq__(list_0)
    var_5.to_lazy()


def test_case_14():
    bytes_0 = b"\xda"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()
    str_0 = ""
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = var_1.ap(var_0)
    var_3 = validation_1.to_lazy()
    var_4 = validation_1.__eq__(validation_1)
    var_5 = validation_1.__str__()
    var_6 = validation_1.to_maybe()
    tuple_0 = (str_0, var_2)
    var_7 = var_1.__eq__(tuple_0)
    var_8 = var_0.__str__()
    var_7.to_lazy()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()
