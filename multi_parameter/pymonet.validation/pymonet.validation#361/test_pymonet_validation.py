# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    int_0 = 905
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_0, none_type_0)
    validation_1.is_success()


def test_case_1():
    bytes_0 = b"\x0eJ\x1f\x96\x8c\x85(\xce\x8b\xc7\xca\x07x\xcd\x99\xcc"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bytes_1 = b"Y\xc7\xe1:\xc6\xbdQ\xb3"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.map(list_0)


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    bytes_0 = b"\x03\xb3d\xe4\x87\xb8\xe8"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.__eq__(bytes_0)
    var_3 = validation_1.__eq__(none_type_0)
    var_4 = var_3.__str__()
    var_5 = var_1.__str__()
    validation_2 = module_0.Validation(none_type_0, var_1)
    var_1.map(var_5)


def test_case_3():
    int_0 = 905
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    int_0 = 905
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(none_type_0)


def test_case_6():
    str_0 = "Lazy[T, U]"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xb1#\x1ac\\\xe9\xef\xd5WP\x84'\xaa~\x14=\x96\x03"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    validation_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    int_0 = 905
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = validation_0.to_lazy()
    var_0.is_success()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_0.__eq__(none_type_0)
    var_3 = var_0.to_maybe()
    var_4 = var_0.ap(var_3)
    var_2.map(none_type_0)


def test_case_10():
    none_type_0 = None
    float_0 = 59.096639
    validation_0 = module_0.Validation(none_type_0, float_0)
    validation_0.to_try()


def test_case_11():
    bytes_0 = b"\x03\xb3d\xe4\x87\xb8\xe8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = var_1.__str__()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_0.map(validation_1)


def test_case_12():
    none_type_0 = None
    int_0 = 905
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0 = b"ff\xc5\xe4#R\x115\xecd^5h\xe4\x96\x15=)q\x06"
    set_0 = {none_type_0, bytes_0, bytes_0}
    validation_1 = module_0.Validation(set_0, bytes_0)
    validation_0.is_success()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    bytes_0 = b"\x03\xb3d\xe4\x87\xb8\xe8"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_either()
    var_4 = var_2.__eq__(validation_0)
    var_5 = var_1.to_box()
    var_6 = var_5.to_maybe()
    var_7 = validation_0.to_either()
    var_8 = var_7.to_try()
    var_6.bind(var_5)


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    bytes_0 = b"\x03\xb3d\xe4\x87\xb8\xe8"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_0.__str__()
    validation_1.bind(list_0)


def test_case_15():
    bytes_0 = b"\x03\xb3d\xe4\xb8\xe8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(bytes_0, validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.is_fail()
    var_3 = var_0.__eq__(bytes_0)
    var_1.bind(var_1)


def test_case_16():
    bytes_0 = b"\x03\xb3d\xe4\x87\xb8\xe8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.to_either()
    var_4 = var_3.__eq__(none_type_0)
    var_5 = var_2.__str__()
    var_6 = var_3.__str__()
    bool_0 = False
    validation_1 = module_0.Validation(bytes_0, var_4)
    validation_1.map(bool_0)
