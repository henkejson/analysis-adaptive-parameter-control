# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.ap(bool_0)


def test_case_1():
    bytes_0 = b'{\xb8"6l\xfc\xb8Np\xde\xeb\xfd\x14=\x8d~'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    bytes_0 = b"\x9cD\x16\xfb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    validation_0.ap(validation_0)


def test_case_3():
    bytes_0 = b"!;jyM\xb5\xd4\x08Q\xb5\xe6/\xff"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(dict_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_6():
    float_0 = 2789.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_8():
    bytes_0 = b'{\xb8"6l\xfc\xb8NpT\xfd\xa1\x14\x17\x8d~'
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_9():
    int_0 = -1586
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0]
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.bind(list_0)


def test_case_10():
    float_0 = 3671.5989
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(set_0)
    var_1.to_either()


def test_case_13():
    int_0 = 1
    set_0 = {int_0, int_0, int_0}
    float_0 = 608.5
    set_1 = {float_0, float_0, float_0}
    validation_0 = module_0.Validation(set_1, set_1)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.__str__()
    var_3 = var_1.to_either()
    var_4 = validation_0.__eq__(set_0)
    var_0.ap(float_0)


def test_case_14():
    int_0 = 1
    float_0 = 608.5
    set_0 = {float_0, int_0, float_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    validation_1 = module_0.Validation(set_0, validation_0)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_0.__str__()
    validation_2 = module_0.Validation(var_3, var_0)
    validation_2.is_fail()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_0.to_maybe()
