# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_success()


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_try()


def test_case_2():
    bytes_0 = b"s\xe1\x8dFt\xf0\xf3\xbd\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_box()
    var_3 = var_2.__eq__(bytes_0)
    var_3.to_either()


def test_case_3():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_4():
    bytes_0 = b"\xe0tx\x9a{f4\x9a\xb1\xc00\x99\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_5():
    bytes_0 = b"s\xe1\x8dFt\xf0\xf3\xbd\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_8():
    bytes_0 = b"s\xe1\x8dFt\xf0\xf3\xbd\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_maybe()
    validation_0.ap(var_2)


def test_case_9():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.bind(bool_0)


def test_case_10():
    str_0 = "\x0cE"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(var_0)


def test_case_11():
    list_0 = []
    list_1 = [list_0]
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(list_1, list_0)
    var_2 = validation_1.__eq__(var_0)
    var_3 = validation_1.to_maybe()
    var_4 = validation_0.is_success()


def test_case_12():
    int_0 = -1272
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    float_0 = 2107.5
    validation_0.map(float_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.bind(bool_0)


def test_case_15():
    bytes_0 = b"s\xe1\x8dFt\xf0\xf3\xbd\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = module_0.Validation(validation_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    var_1.ap(bytes_0)


def test_case_16():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()
