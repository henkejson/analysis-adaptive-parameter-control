# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(list_0)
    var_1.map(validation_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_0.to_try()


def test_case_2():
    none_type_0 = None
    str_0 = "3z[ByJ"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(list_0, list_0)


def test_case_4():
    bytes_0 = b":\xc0\xd2\x93\x03$\xf6\xdc\x9d"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.map(validation_0)


def test_case_8():
    int_0 = -310
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(int_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b"\xa5\xe5&e(\x15\xfb"
    list_0 = [bool_0, bytes_0, bool_0, bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(list_0)


def test_case_10():
    str_0 = 'a-UI"E\rL^'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(str_0, none_type_0)


def test_case_11():
    int_0 = -313
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.__eq__(var_0)
    var_3 = var_0.__str__()
    var_4 = var_0.to_box()
    validation_0.to_maybe()


def test_case_13():
    int_0 = -461
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_lazy()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()


def test_case_16():
    none_type_0 = None
    str_0 = "3z[ByJ"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_17():
    str_0 = "\n^3/U<dK4]o"
    validation_0 = module_0.Validation(str_0, str_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.is_fail()
