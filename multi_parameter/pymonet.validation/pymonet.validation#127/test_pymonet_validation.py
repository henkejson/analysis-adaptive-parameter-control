# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x9b\xa0\x1ft\x9d2)R\x80o'j\xf3\xfb\xe4m\x85B\x94\xd8"
    bool_0 = True
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.ap(bytes_0)


def test_case_1():
    str_0 = "_=7\x0b "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.bind(str_0)


def test_case_2():
    str_0 = "8\x0c6|.*A}~4.s[k"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_0.ap(var_0)


def test_case_3():
    str_0 = "8\x0c6|.*A}~4.s[k"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x07\x0f\xaeR%\t\x1e\t\x85R"
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_try()
    var_4 = validation_0.to_maybe()
    var_5 = var_4.to_box()
    var_6 = var_0.to_box()
    var_7 = var_1.__eq__(var_6)
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_8 = validation_1.to_lazy()
    var_9 = var_6.to_either()


def test_case_4():
    bytes_0 = b""
    bytes_0.to_lazy()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    int_0 = -118
    validation_0 = module_0.Validation(none_type_0, int_0)
    validation_0.map(bool_0)


def test_case_8():
    complex_0 = 2644.601701 + 2718.5j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(complex_0)


def test_case_9():
    bool_0 = False
    str_0 = ")C"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.ap(str_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = var_1.__str__()
    var_3 = validation_0.__eq__(dict_0)
    float_0 = 800.475233
    validation_1 = module_0.Validation(float_0, float_0)
    var_4 = validation_1.to_lazy()
    var_5 = var_4.to_either()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_2, var_3)
    var_1.to_lazy()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_1, var_2)
    var_0.to_lazy()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_either()
    var_1.to_box()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()
    var_1.to_box()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(dict_0, var_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_1 = var_0.__eq__(bytes_0)
    var_2 = validation_1.__eq__(validation_0)
    var_2.bind(bytes_0)


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, dict_0)
    bytes_0 = b"\xa8f\x11\x88\xdd4w\x0f\xaeR%\t\x1e\t\x85R"
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.__eq__(bytes_0)
    var_3 = validation_0.__eq__(validation_1)
    var_0.bind(dict_0)
