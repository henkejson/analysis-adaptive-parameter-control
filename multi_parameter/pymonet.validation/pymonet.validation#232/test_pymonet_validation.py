# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "y@P5Af||s4.divH(G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = validation_0.is_fail()
    var_1 = validation_0.__eq__(validation_1)


def test_case_1():
    bytes_0 = b"\xf41"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, bytes_0)


def test_case_2():
    str_0 = "y@P5Af||u4.dMvH(G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    str_0 = "A[ZK% 2&(`;Z"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(none_type_0)


def test_case_5():
    int_0 = -1637
    int_1 = 1
    tuple_0 = (int_0, int_1, int_1)
    bool_0 = True
    dict_0 = {int_0: int_0, int_0: int_0, int_0: tuple_0, bool_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(validation_0, int_1)
    validation_1.bind(validation_1)


def test_case_6():
    bool_0 = False
    int_0 = -19
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(bool_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_8():
    str_0 = "y@P5Af||s4.divH(G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.to_lazy()
    var_6 = var_5.__eq__(var_0)
    var_1.is_success()


def test_case_9():
    str_0 = "y@P5Af||s4.divH(G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_10():
    str_0 = "y@P5Af||s4.divH(G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(var_1)


def test_case_11():
    str_0 = "`\n?XB9P."
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(str_0)


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_0.to_lazy()


def test_case_13():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_maybe()
    var_2.map(var_0)


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, bytes_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_maybe()
