# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    tuple_0 = ()
    str_0 = "Maybe[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(tuple_0, str_0)
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_lazy()


def test_case_1():
    int_0 = 176
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.__eq__(var_0)
    var_0.to_maybe()


def test_case_2():
    bytes_0 = b"\xbfR\xeb\x98\xc9\xb2\xe28\xf3\xb5W\xba\x06\x8f0G\xc9\xd7\x18u"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    str_0 = "\\r:F\ttP''8Heol\": "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    str_0 = "u2&S'{RpunTtT<8S"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_success()


def test_case_7():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.is_fail()


def test_case_8():
    int_0 = 176
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    validation_0.map(var_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0]
    tuple_0 = (list_0, list_0)
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(list_0, tuple_0)
    var_1 = validation_1.to_either()
    validation_0.ap(var_0)


def test_case_11():
    str_0 = "u2&S'{RpunTtT<8S"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_fail()
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_12():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    str_0 = "Maybe[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(var_0)
    var_4 = var_1.to_box()


def test_case_14():
    tuple_0 = ()
    str_0 = "\\r:F\ttP''8Heol\": "
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_try()


def test_case_15():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    str_0 = "Maybe[U]"
    validation_1 = module_0.Validation(str_0, str_0)
    int_0 = 0
    validation_2 = module_0.Validation(validation_1, int_0)
    validation_3 = module_0.Validation(tuple_0, str_0)
    validation_2.to_try()


def test_case_17():
    none_type_0 = None
    list_0 = [none_type_0]
    tuple_0 = (list_0, list_0)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.to_try()
    var_1.ap(none_type_0)


def test_case_18():
    tuple_0 = ()
    str_0 = "Maybe[U]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(str_0)
    dict_0 = {}
    validation_1 = module_0.Validation(tuple_0, dict_0)
    var_2 = validation_1.to_either()
    var_3 = validation_0.to_try()
    var_1.to_maybe()
