# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_1():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_1 = validation_0.to_either()
    validation_2 = module_0.Validation(var_0, validation_0)
    var_2 = validation_1.__eq__(var_0)
    var_3 = validation_0.is_success()


def test_case_2():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()


def test_case_3():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.to_maybe()
    var_4 = validation_0.is_success()
    validation_2 = module_0.Validation(none_type_0, var_0)
    var_5 = validation_1.to_try()
    var_6 = var_5.__eq__(var_0)
    var_3.is_success()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    set_0 = set()
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(set_0)


def test_case_8():
    int_0 = -3190
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_success()
    var_4 = validation_1.is_success()
    var_5 = var_0.__eq__(var_4)
    var_6 = validation_0.__str__()
    validation_0.ap(var_6)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = validation_1.to_maybe()
    validation_2 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_2.__eq__(none_type_0)
    var_3 = validation_1.is_success()
    var_4 = validation_2.to_lazy()
    validation_2.bind(var_4)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xa4\x8cW\xb2\x9f [\x05\xa0\x93J\xaaE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    var_3 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_14():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_success()
    var_3 = validation_1.is_success()
    var_4 = var_3.__str__()
    var_5 = var_2.__str__()
    var_5.to_lazy()


def test_case_15():
    bytes_0 = b"6\x8b\xd3*<\xfe'`\xcfBy\xd3\x7fB\x14j\x84.\xb0\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_1.to_maybe()
    validation_2 = module_0.Validation(none_type_0, var_0)
    validation_3 = module_0.Validation(bytes_0, var_1)
    var_2 = validation_1.__eq__(validation_3)
    var_1.is_success()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.to_maybe()
    var_4 = validation_0.is_success()
    var_5 = validation_1.is_success()
    var_6 = validation_0.__str__()
    var_7 = validation_0.__str__()
    validation_0.ap(var_7)
