# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bytes_0 = b""
    list_1 = [bytes_0, bytes_0, bytes_0, bytes_0]
    none_type_1 = None
    validation_0 = module_0.Validation(list_1, none_type_1)
    var_0 = validation_0.__eq__(list_0)
    var_0.ap(none_type_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    str_0 = "Q6/&q-"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = var_1.__str__()
    var_2.map(var_2)


def test_case_3():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    int_0 = -2068
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_either()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    str_0 = "P^O"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bool_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"4\x03\xec\xf3\xa7\x07\xb2\xc9\xb9\xe0\xe8\xdc\xeb_G\t"
    bool_1 = True
    tuple_0 = (bool_0, bytes_0, bool_1, bool_1)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.bind(bool_1)


def test_case_9():
    int_0 = -751
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(int_0)


def test_case_10():
    int_0 = -3259
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_11():
    bool_0 = False
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = var_0.to_box()
    var_4 = var_1.__str__()
    validation_1 = module_0.Validation(var_3, validation_0)
    list_1 = [var_2]
    validation_2 = module_0.Validation(bool_0, list_1)
    var_5 = var_3.__eq__(validation_1)
    var_6 = validation_2.to_either()
    var_7 = validation_1.to_lazy()
    var_8 = var_4.__str__()
    var_7.is_fail()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = var_0.to_box()
    var_4 = var_1.__str__()
    validation_1 = module_0.Validation(var_3, validation_0)
    var_5 = validation_1.to_box()
    var_6 = validation_0.__eq__(var_0)
    validation_2 = module_0.Validation(var_5, var_5)
    var_7 = validation_0.to_either()
    validation_2.__str__()


def test_case_14():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.is_fail()
    var_1.to_box()
