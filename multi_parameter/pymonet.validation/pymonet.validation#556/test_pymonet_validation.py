# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    object_0 = module_1.object()
    validation_0 = module_0.Validation(bool_0, object_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_2():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(tuple_0)


def test_case_3():
    str_0 = "l*Xa\\22c\\&fQJl"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(str_0)
    var_1.to_lazy()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = 1787
    tuple_0 = (int_0,)
    tuple_1 = ()
    list_0 = [tuple_1, tuple_1, tuple_1]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.map(tuple_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    validation_0.ap(list_0)


def test_case_10():
    bool_0 = True
    float_0 = -1249.53684
    object_0 = module_1.object()
    list_0 = [float_0, object_0]
    validation_0 = module_0.Validation(list_0, object_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.map(bool_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_1.is_fail()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    validation_0.to_try()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    list_0.is_fail()


def test_case_14():
    str_0 = "117(YPM)*,h"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_15():
    none_type_0 = None
    str_0 = "\n    Return first argument.\n\n    :param value:\n    :type value: Any\n    :returns:\n    :rtype: Any\n    "
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = var_0.to_either()
    var_1.ap(var_2)


def test_case_16():
    none_type_0 = None
    str_0 = "\n    Return first argument.\n\n    :param value:\n    :type value: Any\n    :returns:\n    :rtype: Any\n    "
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_1, str_0)
    none_type_0.bind(none_type_0)


def test_case_17():
    none_type_0 = None
    str_0 = "\n    Return first argument.\n\n    :param value:\n    :type value: Any\n    :returns:\n    :rtype: Any\n    "
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = module_0.Validation(validation_0, none_type_0)
    var_2 = var_0.map(var_1)
    var_3 = var_1.__eq__(validation_0)
    var_3.ap(none_type_0)


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.to_either()
