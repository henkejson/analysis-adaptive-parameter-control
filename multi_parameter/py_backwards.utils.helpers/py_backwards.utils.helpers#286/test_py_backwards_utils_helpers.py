# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    complex_0 = 2561.649 + 1735.719j
    none_type_0 = module_0.debug(complex_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.debug(callable_0)
    var_0 = module_1.purge()
    module_0.VariablesGenerator(*var_0)


def test_case_3():
    dict_0 = {}
    callable_0 = module_0.eager(dict_0)
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)
    variables_generator_1 = module_0.VariablesGenerator(**dict_0)
    none_type_0 = None
    callable_1 = module_0.eager(none_type_0)
    variables_generator_2 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_2)


def test_case_4():
    str_0 = "dbm.ndbm"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_0.__call__(callable_0, callable_0, qualname=callable_0, start=callable_0)
