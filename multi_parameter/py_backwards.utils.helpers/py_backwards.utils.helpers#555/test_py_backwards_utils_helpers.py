# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    tuple_0 = ()
    none_type_0 = module_0.debug(tuple_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    callable_0 = module_0.eager(none_type_1)
    variables_generator_0 = module_0.VariablesGenerator()
    callable_1 = module_0.eager(none_type_1)
    module_0.get_source(callable_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(variables_generator_0)
    tuple_0 = ()
    none_type_1 = module_0.debug(tuple_0)


def test_case_5():
    variables_generator_0 = module_1.purge()
    callable_0 = module_0.eager(variables_generator_0)
    callable_1 = module_0.eager(callable_0)
    str_0 = "Python to python compiler that allows you to use some Python 3.6 features in older versions."
    none_type_0 = None
    callable_1.__call__(
        callable_1, variables_generator_0, qualname=none_type_0, start=str_0
    )
