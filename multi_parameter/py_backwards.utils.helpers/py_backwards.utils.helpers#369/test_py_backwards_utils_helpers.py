# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    float_0 = 1341.5634208777121
    none_type_0 = module_0.debug(float_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = 'Z-)(MqPo0"l`L~\x0c&%\x0b[<'
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    str_1 = "ifilterfalse"
    str_2 = '-SV32G\x0cEAE]#*|Z"-V'
    dict_0 = {str_1: none_type_1, str_2: none_type_1, str_2: none_type_1}
    callable_0 = module_0.eager(dict_0)
    none_type_2 = module_0.debug(none_type_1)
    callable_1 = module_0.eager(callable_0)
    none_type_3 = module_0.warn(str_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    none_type_2 = module_0.debug(none_type_0)
    callable_0 = module_0.eager(bool_0)
    callable_0.__call__(none_type_0, none_type_1, type=none_type_1)
