# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    variables_generator_0 = module_0.purge()
    none_type_0 = module_1.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    bool_0 = False
    none_type_0 = module_1.debug(bool_0)
    int_0 = 3113
    none_type_1 = module_1.warn(int_0)
    callable_0 = module_1.eager(none_type_0)
    none_type_2 = module_1.warn(bool_0)


def test_case_3():
    bool_0 = False
    module_1.get_source(bool_0)


def test_case_4():
    str_0 = "cUBbQ1;]"
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    bool_0 = True
    callable_0 = module_1.eager(bool_0)
    str_0 = "z]aWK.Z|xbq5++"
    none_type_0 = module_1.warn(str_0)
    callable_1 = module_1.eager(callable_0)
    none_type_1 = module_1.debug(callable_0)
    none_type_2 = None
    callable_2 = module_1.eager(none_type_2)
    callable_3 = module_1.eager(callable_2)
    list_0 = [callable_0, bool_0]
    callable_1.__call__(
        callable_0, none_type_2, module=none_type_1, type=callable_2, start=list_0
    )
