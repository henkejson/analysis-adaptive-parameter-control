# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    str_0 = "zT1wq<8a0"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    int_0 = 1099
    callable_0 = module_0.eager(int_0)
    list_0 = [callable_0]
    str_0 = "zT1wqf8a0"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.VariablesGenerator(*list_0, **dict_0)


def test_case_3():
    str_0 = "^uo7R#neq2k"
    none_type_0 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    var_0 = module_1.escape(str_0)
    module_0.get_source(var_0)


def test_case_4():
    complex_0 = -452.6 + 3013.418j
    none_type_0 = module_0.warn(complex_0)


def test_case_5():
    bytes_0 = b"\xe4\x0e\x03\x80XM\x9cvVa="
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    module_1.sub(bytes_0, callable_0, bytes_0)
