# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import py_backwards.exceptions as module_1


def test_case_0():
    float_0 = 1283.611
    none_type_0 = module_0.debug(float_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    float_0 = 757.7801
    bool_0 = False
    dict_0 = {float_0: float_0, bool_0: bool_0, bool_0: bool_0, float_0: float_0}
    none_type_0 = None
    transformation_error_0 = module_1.TransformationError(
        dict_0, dict_0, none_type_0, bool_0
    )
    callable_0 = module_0.eager(transformation_error_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    dict_0 = {}
    module_0.get_source(dict_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(variables_generator_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    str_0 = "b3'yqOsBm/TJy5-;ay"
    callable_0.__call__(str_0, none_type_0, module=none_type_0, type=none_type_0)
