# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import builtins as module_1
import re as module_2


def test_case_0():
    complex_0 = -475 - 2107.4385j
    none_type_0 = module_0.debug(complex_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    complex_0 = -475 - 2107.4385j
    none_type_0 = module_0.debug(complex_0)
    callable_0 = module_0.eager(none_type_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator()
    variables_generator_2 = module_0.VariablesGenerator()
    str_0 = "Compiles:\n        super()\n    To:\n        super(Cls, self)\n        super(Cls, cls)\n            \n    "
    callable_0 = module_0.eager(str_0)
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(none_type_0)
    variables_generator_3 = module_0.VariablesGenerator()
    exception_0 = module_1.Exception()
    module_0.get_source(exception_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    var_0 = module_2.purge()
    callable_0 = module_0.eager(var_0)
    callable_1 = module_0.eager(callable_0)
    none_type_0 = module_0.debug(var_0)
    bool_0 = False
    callable_0.__call__(bool_0, callable_0, module=none_type_0)
