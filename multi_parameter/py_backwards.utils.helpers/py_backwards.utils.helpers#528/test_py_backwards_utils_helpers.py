# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_1.eager(none_type_0)
    none_type_1 = module_1.debug(callable_0)


def test_case_3():
    variables_generator_0 = module_1.VariablesGenerator()
    module_1.get_source(variables_generator_0)


def test_case_4():
    bytes_0 = b'"\xc6|\xa10\xce\xd3\x14\x89\xe9\xdf\xf7\xc4'
    str_0 = "26\nu<=~ZqLk"
    none_type_0 = module_1.warn(str_0)
    callable_0 = module_1.eager(bytes_0)
    none_type_1 = module_1.debug(callable_0)
    none_type_2 = module_1.debug(none_type_1)
    module_1.get_source(bytes_0)


def test_case_5():
    bytes_0 = b'"\xc6|\xa10\xce\xd3\x14\x89\xe9\xdf\xf7\xc4'
    str_0 = "26\nu<=~ZqLk"
    none_type_0 = module_1.warn(str_0)
    callable_0 = module_1.eager(bytes_0)
    none_type_1 = module_1.debug(callable_0)
    set_0 = {str_0, str_0, none_type_0, none_type_1}
    var_0 = module_1.eager(callable_0)
    var_0.__call__(callable_0, bytes_0, start=set_0)
