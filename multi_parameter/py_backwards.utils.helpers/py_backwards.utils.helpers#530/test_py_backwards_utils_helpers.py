# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0]
    callable_0 = module_0.eager(list_0)


def test_case_3():
    str_0 = ")e*A\x0c<op~>g\ti9d"
    none_type_0 = module_0.warn(str_0)
    bool_0 = True
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(bool_0)


def test_case_4():
    int_0 = -910
    none_type_0 = module_0.debug(int_0)
    none_type_1 = module_0.warn(int_0)


def test_case_5():
    complex_0 = -1607.4 + 2148j
    callable_0 = module_0.eager(complex_0)
    str_0 = "3.0"
    callable_0.__call__(str_0, str_0, complex_0)
