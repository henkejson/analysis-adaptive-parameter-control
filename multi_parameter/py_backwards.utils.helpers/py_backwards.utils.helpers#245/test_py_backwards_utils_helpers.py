# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"W\xc5\xc0\xc6"
    callable_0 = module_0.eager(bytes_0)


def test_case_3():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.warn(none_type_0)
    callable_0 = module_0.eager(none_type_1)
    callable_1 = module_0.eager(callable_0)
    dict_0 = {}
    variables_generator_1 = module_0.VariablesGenerator(**dict_0)
    module_0.get_source(none_type_1)


def test_case_4():
    var_0 = module_1.purge()
    none_type_0 = module_0.warn(var_0)


def test_case_5():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)
    none_type_1 = module_0.warn(none_type_0)
    callable_0 = module_0.eager(none_type_1)
    callable_0.__call__(
        none_type_1, callable_0, none_type_1, qualname=bool_0, type=none_type_1
    )
