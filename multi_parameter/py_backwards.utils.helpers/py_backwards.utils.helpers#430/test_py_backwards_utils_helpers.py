# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1
import py_backwards.exceptions as module_2


def test_case_0():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    dict_0 = {}
    variables_generator_0 = module_0.VariablesGenerator(**dict_0)
    module_1.search(bool_0, bool_0)


def test_case_3():
    set_0 = set()
    none_type_0 = module_0.debug(set_0)
    var_0 = module_2.CompilationError(
        none_type_0, none_type_0, none_type_0, none_type_0
    )
    module_0.get_source(set_0)


def test_case_4():
    float_0 = 6043.58971
    none_type_0 = module_0.warn(float_0)


def test_case_5():
    var_0 = module_1.purge()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(callable_0)
    str_0 = ". L!{F@"
    callable_1 = module_0.eager(var_0)
    callable_2 = module_0.eager(callable_1)
    callable_0.__call__(str_0, str_0, type=callable_0)
