# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_0)


def test_case_3():
    var_0 = module_1.purge()
    module_0.get_source(var_0)


def test_case_4():
    int_0 = -914
    none_type_0 = module_0.debug(int_0)
    str_0 = "k?{^T,xU3rGu|J["
    str_1 = "PF#BY+T3"
    none_type_1 = module_0.warn(str_1)
    module_0.VariablesGenerator(**str_0)


def test_case_5():
    bool_0 = False
    bytes_0 = b"=$/\xab\xff\x80?\xee\xd5\x0e\x86\xef!"
    callable_0 = module_0.eager(bytes_0)
    callable_1 = module_0.eager(bool_0)
    none_type_0 = module_0.warn(callable_1)
    none_type_1 = module_0.warn(bool_0)
    none_type_2 = module_0.debug(callable_1)
    none_type_3 = None
    callable_2 = module_0.eager(callable_1)
    callable_1.__call__(callable_2, none_type_3)
