# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    str_0 = "\x0cG}]:"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    callable_0 = module_0.eager(dict_0)
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_3():
    dict_0 = {}
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator(**dict_0)
    module_0.get_source(dict_0)


def test_case_4():
    str_0 = '"'
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(variables_generator_0)
    none_type_1 = None
    bool_0 = False
    none_type_2 = module_0.debug(bool_0)
    callable_0 = module_0.eager(none_type_1)
    callable_1 = module_0.eager(callable_0)
    variables_generator_1 = module_0.VariablesGenerator()
    str_0 = '"R+\rzswgw'
    str_1 = '+witCb>j3."!)7|`H'
    none_type_3 = module_0.warn(str_1)
    none_type_4 = module_0.warn(str_0)
    none_type_5 = module_0.debug(callable_0)
    callable_2 = module_0.eager(none_type_1)
    none_type_6 = module_0.debug(callable_0)
    none_type_7 = module_0.debug(callable_0)
    callable_3 = module_0.eager(callable_1)
    callable_4 = module_0.eager(none_type_1)
    callable_2.__call__(
        none_type_6, str_0, none_type_2, qualname=none_type_1, start=none_type_4
    )
