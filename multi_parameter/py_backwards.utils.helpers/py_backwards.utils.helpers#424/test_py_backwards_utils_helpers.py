# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_1)
    variables_generator_2 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_0)
    variables_generator_3 = module_0.VariablesGenerator()


def test_case_3():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)
    module_0.get_source(none_type_0)


def test_case_4():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "2M-%+@\\\t^8"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    callable_0 = module_0.eager(none_type_1)
    callable_0.__call__(variables_generator_0, none_type_1, qualname=none_type_0)
