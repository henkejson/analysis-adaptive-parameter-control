# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    variables_generator_0 = module_0.purge()
    none_type_0 = module_1.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    str_0 = "SocketServer"
    none_type_0 = module_1.warn(str_0)
    complex_0 = -1494.3213 + 3282.447j
    callable_0 = module_1.eager(complex_0)
    none_type_1 = None
    none_type_2 = module_1.warn(none_type_1)
    callable_1 = module_1.eager(none_type_1)
    callable_2 = module_1.eager(none_type_1)
    module_1.get_source(none_type_2)


def test_case_3():
    variables_generator_0 = module_1.VariablesGenerator()
    module_1.get_source(variables_generator_0)


def test_case_4():
    str_0 = "L.&=5K^qCZ'?t@"
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    str_0 = "ifilterfalse"
    str_1 = "j$K<.GRtijWz%5<869*;"
    none_type_0 = module_1.warn(str_1)
    none_type_1 = module_1.warn(str_0)
    var_0 = module_0.purge()
    callable_0 = module_1.eager(var_0)
    callable_0.__call__(callable_0, str_0, start=str_0)
