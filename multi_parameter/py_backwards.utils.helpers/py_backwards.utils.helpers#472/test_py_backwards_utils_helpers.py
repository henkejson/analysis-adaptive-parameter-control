# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1
import inspect as module_2


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    bytes_0 = b"NV\x8d'\xdd\xb1\x96;o\xbb\xcb\x03,"
    none_type_0 = module_1.debug(bytes_0)
    none_type_1 = None
    callable_0 = module_1.eager(none_type_1)
    module_2.getsource(none_type_1)


def test_case_3():
    bytes_0 = b"NV\x8d'\xdd\xb1\x96;o\xbb\xcb\x03,"
    none_type_0 = module_1.debug(bytes_0)
    none_type_1 = None
    callable_0 = module_1.eager(none_type_1)
    str_0 = ";w\r|XC?I[* *Ia\rDLW"
    none_type_2 = module_1.warn(str_0)
    var_0 = module_0.purge()
    module_1.get_source(var_0)


def test_case_4():
    bytes_0 = b"NV\x8d'\xdd\xb1\x96;o\xbb\xcb\x03,"
    none_type_0 = module_1.warn(bytes_0)


def test_case_5():
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_0 = module_1.warn(variables_generator_0)
    callable_0 = module_1.eager(none_type_0)
    none_type_1 = module_1.debug(callable_0)
    none_type_2 = module_1.warn(variables_generator_0)
    none_type_3 = module_1.debug(callable_0)
    callable_0.__call__(
        none_type_1, none_type_1, qualname=none_type_3, start=callable_0
    )
