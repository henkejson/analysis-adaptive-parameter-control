# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"0P\x97"
    var_0 = module_1.finditer(bytes_0, bytes_0)
    var_1 = var_0.__dir__()
    callable_0 = module_0.eager(var_1)


def test_case_3():
    bool_0 = True
    module_0.get_source(bool_0)


def test_case_4():
    str_0 = "f"
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(str_0)
    callable_0 = module_0.eager(none_type_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(variables_generator_0)
    none_type_1 = module_0.debug(variables_generator_0)
    callable_0 = module_0.eager(none_type_0)
    bool_0 = False
    callable_0.__call__(
        none_type_0, variables_generator_0, module=bool_0, qualname=bool_0
    )
