# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    complex_0 = 387.293 - 3507.967j
    none_type_0 = module_0.debug(complex_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = 'vi4Ep$i\x0b%*kn"zOkDy'
    callable_0 = module_0.eager(str_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_4():
    str_0 = 'vi4Ep$i\x0b%*kn"zORDy'
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    str_0 = 'K@/\r*z+8h\x0b"wn3W4;rq_'
    none_type_1 = module_0.warn(str_0)
    variables_generator_1 = module_0.VariablesGenerator()
    none_type_2 = module_0.warn(str_0)
    bytes_0 = b"N\n\xdb\x87\xd2\n\x97\xd2\xe5"
    variables_generator_2 = module_0.VariablesGenerator()
    callable_1 = module_0.eager(bytes_0)
    none_type_3 = module_0.debug(callable_1)
    none_type_4 = module_0.warn(str_0)
    callable_0.__call__(
        callable_1, callable_0, qualname=none_type_3, type=variables_generator_2
    )
