# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "z@!,1\tm(bTAqN>"
    callable_0 = module_0.eager(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(callable_0)
    none_type_1 = module_0.debug(callable_0)
    module_1.fullmatch(none_type_1, callable_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    module_0.get_source(none_type_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    none_type_2 = module_0.warn(none_type_1)


def test_case_5():
    bool_0 = False
    callable_0 = module_0.eager(bool_0)
    tuple_0 = (bool_0,)
    none_type_0 = module_0.debug(tuple_0)
    str_0 = "uses_qufery"
    none_type_1 = module_0.debug(str_0)
    callable_0.__call__(tuple_0, none_type_1, start=callable_0)
