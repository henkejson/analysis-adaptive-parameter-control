# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    module_0.FormatterPlugin()


def test_case_1():
    transport_plugin_0 = module_0.TransportPlugin()
    none_type_0 = None
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(none_type_0)


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    bytes_0 = b"\xae\x90\xb5)\xe4\x7f\xbe~\xb8\xda\xfbf"
    str_0 = "/? "
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    base_plugin_0 = module_0.BasePlugin()
    converter_plugin_0.convert(bytes_0)


def test_case_4():
    str_0 = "format_options"
    auth_plugin_0 = module_0.AuthPlugin()
    none_type_0 = None
    str_1 = "interpret_nested_json"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_metadata(none_type_0)
    str_3 = "(l*,eDfeD\\<nA2qqK"
    str_4 = formatter_plugin_0.format_body(formatter_plugin_0, str_3)
    auth_plugin_0.get_auth()


def test_case_5():
    str_0 = "format_options"
    auth_plugin_0 = module_0.AuthPlugin()
    none_type_0 = None
    str_1 = "interpret_nested_json"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    none_type_1 = None
    str_2 = "(l*,eDfeD\\<nA2qqK"
    str_3 = formatter_plugin_0.format_body(formatter_plugin_0, str_2)
    set_0 = {none_type_1}
    tuple_0 = (str_0, set_0)
    str_4 = formatter_plugin_0.format_headers(none_type_1)
    module_0.TransportPlugin(*tuple_0)
