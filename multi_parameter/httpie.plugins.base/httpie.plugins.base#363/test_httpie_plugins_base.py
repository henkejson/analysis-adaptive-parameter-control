# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0
import builtins as module_1


def test_case_0():
    auth_plugin_0 = module_0.AuthPlugin()


def test_case_1():
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth()


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    dict_0 = {}
    str_0 = "\\yozYlo#STF"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    auth_plugin_0 = module_0.AuthPlugin(**dict_0)


def test_case_4():
    auth_plugin_0 = module_0.AuthPlugin()
    bytes_0 = b"T\xbf}"
    str_0 = "7y$2G9uH=Z"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    converter_plugin_0.convert(bytes_0)


def test_case_5():
    module_0.FormatterPlugin()


def test_case_6():
    str_0 = "_DN"
    list_0 = [str_0]
    str_1 = "format_options"
    dict_0 = {str_1: str_1}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_body(str_0, list_0)
    object_0 = module_1.object()
    dict_1 = {}
    auth_plugin_0 = module_0.AuthPlugin(**dict_1)
    auth_plugin_0.get_auth(object_0)


def test_case_7():
    str_0 = "_DN"
    list_0 = [str_0]
    str_1 = "format_options"
    dict_0 = {str_1: str_1}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_headers(list_0)
    str_3 = formatter_plugin_0.format_body(str_0, list_0)
    object_0 = module_1.object()
    dict_1 = {}
    auth_plugin_0 = module_0.AuthPlugin(**dict_1)
    auth_plugin_0.get_auth(object_0)


def test_case_8():
    str_0 = "_DN"
    list_0 = [str_0]
    str_1 = "format_options"
    dict_0 = {str_1: str_1}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_body(str_0, list_0)
    object_0 = module_1.object()
    dict_1 = {}
    str_3 = formatter_plugin_0.format_metadata(str_0)
    auth_plugin_0 = module_0.AuthPlugin(**dict_1)
    auth_plugin_0.get_auth(object_0)
