# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, timer_error_0)
    timer_0.stop()


def test_case_3():
    str_0 = "2~Fi&lkrO?J]Q5 |kX"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    bool_0 = False
    timer_0 = module_0.Timer(logger=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_2 = timer_0.__enter__()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_8():
    bool_0 = True
    str_0 = "b~Smd\rA"
    timer_0 = module_0.Timer(str_0, bool_0, str_0)
    timer_1 = timer_0.__enter__()
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_2 = module_0.Timer(initial_text=bool_0)
    var_0 = timer_2.__repr__()
    timer_3 = timer_2.__enter__()
    var_1 = var_0.__eq__(var_0)
    timer_error_1 = module_0.TimerError(*var_0)
    none_type_0 = timer_2.__exit__()
    timer_1.__exit__()


def test_case_9():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = module_0.Timer(timer_0, timer_0, bool_0)
    var_0 = timer_0.__repr__()
    timer_2 = timer_1.__enter__()
    var_1 = var_0.__eq__(var_0)
    timer_error_1 = module_0.TimerError()
    timer_1.__exit__()
