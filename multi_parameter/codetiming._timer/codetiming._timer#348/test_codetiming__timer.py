# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    complex_0 = 3437.9392 + 5293j
    var_1 = timer_0.__eq__(var_0)
    var_2 = timer_0.__eq__(timer_0)
    timer_1 = module_0.Timer(complex_0, initial_text=complex_0)
    timer_2 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_3 = timer_1.__enter__()
    timer_error_0.__getitem__(timer_error_0)


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    str_0 = "seconds"
    timer_0 = module_0.Timer(initial_text=str_0)
    str_1 = "(H&bpvowA|wk]^u^"
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_error_2 = module_0.TimerError()
    timer_0.total(str_1)


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    str_0 = "(H&bpvowA|wk]^u^"
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_0.total(str_0)


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_7():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    str_0 = "(H&bpvowA|wk]^u^"
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_error_1 = timer_0.__call__(timer_0)
    timer_0.total(str_0)


def test_case_8():
    str_0 = "7d{x;."
    timer_0 = module_0.Timer(str_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    var_1 = var_0.__eq__(str_0)
    var_1.stop()
