# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = timer_0.__eq__(var_0)
    var_2 = timer_0.__repr__()
    var_3 = timer_0.__eq__(timer_0)
    timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = None
    none_type_2 = timer_1.start()
    var_0 = timer_1.__eq__(none_type_1)
    var_1 = timer_1.__repr__()
    var_2 = var_1.__iter__()
    var_3 = var_2.__eq__(var_1)
    none_type_3 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    var_4 = var_0.__repr__()
    var_0.__contains__(none_type_1)


def test_case_5():
    str_0 = "T"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    none_type_0 = None
    var_1 = timer_0.__call__(none_type_0)
    none_type_1 = timer_0.start()
    var_2 = timer_0.__eq__(var_1)
    var_3 = timer_0.__repr__()
    none_type_2 = timer_0.__exit__()
    var_4 = var_0.__repr__()
    var_5 = var_0.__eq__(var_1)


def test_case_6():
    timer_0 = module_0.Timer()
    bool_0 = True
    timer_1 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_1.start()
    var_0 = timer_1.__eq__(none_type_0)
    timer_1.__or__(timer_1)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    none_type_0 = timer_0.start()
    list_0 = []
    str_0 = "trn@9@$U"
    dict_0 = {str_0: str_0}
    module_0.FloatArg(*list_0, **dict_0)


def test_case_8():
    str_0 = "T"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    var_1 = var_0.__repr__()
    none_type_0 = None
    var_2 = timer_0.__call__(str_0)
    timer_1 = module_0.Timer(none_type_0, var_2, str_0)
    none_type_1 = timer_1.start()
    timer_1.__exit__()
