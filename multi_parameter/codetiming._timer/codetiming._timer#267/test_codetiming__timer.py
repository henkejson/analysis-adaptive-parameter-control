# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    bool_0 = False
    str_0 = "S$\\h=:B(z]\x0cNd\x0b#i"
    timer_0 = module_0.Timer(text=str_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(bool_0, bool_0)
    timer_error_0 = module_0.TimerError()
    timer_1.stop()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    float_arg_1 = module_0.FloatArg()
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    str_0 = ","
    float_0 = timer_0.stop()
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_3 = module_0.Timer(text=timer_2, initial_text=str_0)
    none_type_2 = timer_3.start()
    float_1 = timer_3.stop()
    module_0.TimerError(*float_1)


def test_case_8():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    timer_0 = module_0.Timer(none_type_0, logger=dict_0)
    none_type_1 = None
    timer_1 = timer_0.__enter__()
    list_0 = [dict_0, none_type_0, none_type_1, dict_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_error_1 = module_0.TimerError()
    str_0 = "]\x0c)b>K-8p"
    dict_1 = {none_type_1: none_type_0, str_0: none_type_0}
    timer_2 = module_0.Timer(initial_text=dict_1)
    none_type_2 = timer_2.start()


def test_case_9():
    none_type_0 = None
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    str_0 = ","
    dict_0 = {str_0: str_0, str_0: str_0}
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(dict_0)
    str_1 = "x>$"
    timer_2 = module_0.Timer(str_1, none_type_0, var_0)
    none_type_1 = timer_2.start()


def test_case_10():
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
