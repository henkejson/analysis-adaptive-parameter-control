# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()


def test_case_2():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    timer_0 = module_0.Timer(text=float_arg_0)
    timer_0.__exit__()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.__repr__()
    timer_0.__enter__()


def test_case_4():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "I@"
    int_0 = 976
    timer_0 = module_0.Timer(text=str_2, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__eq__(user_dict_0)
    list_0 = []
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__(*list_0)
    module_0.FloatArg(**var_0)


def test_case_5():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    timer_0 = module_0.Timer(str_0, initial_text=str_1)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()


def test_case_6():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "\rp"
    int_0 = 1000
    timer_0 = module_0.Timer(text=str_2, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__eq__(user_dict_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__(*var_0)


def test_case_7():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "I@"
    int_0 = 1000
    timer_0 = module_0.Timer(text=str_2, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__eq__(user_dict_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_0.__enter__()


def test_case_8():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "I@"
    int_0 = 986
    timer_0 = module_0.Timer(text=str_2, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__eq__(user_dict_0)
    none_type_0 = None
    timer_1 = module_0.Timer(initial_text=var_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__(*var_0)


def test_case_9():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "I@"
    list_0 = []
    none_type_0 = None
    timer_0 = module_0.Timer(text=list_0, initial_text=str_2, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError()
    timer_0.__exit__()


def test_case_10():
    str_0 = "2jv$~*pQz#"
    str_1 = "Q0?oBf[`^qF4[V^\r&"
    dict_0 = {str_0: str_0, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    str_2 = "I@"
    int_0 = 1000
    timer_0 = module_0.Timer(text=str_2, initial_text=int_0, logger=int_0)
    none_type_0 = None
    var_0 = user_dict_0.setdefault(none_type_0, timer_0)
    timer_1 = module_0.Timer(text=var_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__(*user_dict_0)
