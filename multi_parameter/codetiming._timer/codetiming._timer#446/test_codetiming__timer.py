# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    var_0 = timer_0.__eq__(none_type_1)
    var_1 = timer_1.__eq__(var_0)
    none_type_2 = timer_0.start()
    var_0.__call__(none_type_2)


def test_case_6():
    str_0 = "Elapsed time: {:0.4f} seconds"
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.start()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_8():
    bytes_0 = b"\xb5X\xf3\xfd\xe2\xf7\xf3)&\x98BV*\xd4\xf1e\xa8"
    timer_0 = module_0.Timer(bytes_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__call__(none_type_0)
    timer_error_0 = module_0.TimerError()
    var_1 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()
    var_0.get(timer_error_0)


def test_case_9():
    list_0 = []
    tuple_0 = (list_0,)
    timer_0 = module_0.Timer(initial_text=tuple_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    timer_error_0 = module_0.TimerError(*list_0)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_1.__exit__()


def test_case_10():
    int_0 = -3067
    str_0 = "<YaxFeWr2E0ky$g\x0cg1"
    timer_0 = module_0.Timer(str_0, initial_text=int_0)
    none_type_0 = None
    list_0 = [none_type_0, int_0]
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(int_0)
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0.start()
