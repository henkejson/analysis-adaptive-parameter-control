# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bytes_0 = b"\xa3\x0c\xbd\xc0\x18\x8e"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    bytes_0 = b"\xa3\x0c\xbd\xc0\x18\x8e"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    bytes_0 = b"\xa3\x0c\xbd\xc0\x18\x8e"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    str_0 = "=JpDf\x0c=d.Y^7~\x0cqNg\n8"
    dict_0 = {str_0: str_0}
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=str_0)
    user_dict_0 = module_1.UserDict(**dict_0)
    var_0 = user_dict_0.copy()
    timer_0.start()


def test_case_7():
    list_0 = []
    timer_0 = module_0.Timer(logger=list_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_0.__eq__(timer_1)
    timer_2 = module_0.Timer(var_1, var_1)
    none_type_0 = timer_0.__exit__()
    timer_0.stop()


def test_case_8():
    bytes_0 = b"\xa3\x0c\xbd\xc0\x18\x8e"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    none_type_2 = None
    var_0 = timer_2.__eq__(none_type_2)
    timer_3 = module_0.Timer(none_type_0)


def test_case_9():
    bytes_0 = b"\xa3O\xbd\xc0\xab\x8e"
    var_0 = module_2.dataclass(init=bytes_0, order=bytes_0)
    timer_0 = module_0.Timer(text=var_0, initial_text=var_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()
