# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=bool_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    timer_0.__exit__()


def test_case_4():
    str_0 = "L8.7z<Z0TDq\t"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_5():
    complex_0 = 15.933 - 2082j
    none_type_0 = None
    timer_0 = module_0.Timer(complex_0, complex_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__eq__(none_type_0)
    timer_2 = module_0.Timer(text=complex_0)
    timer_3 = timer_0.__enter__()
    none_type_1 = None
    var_1 = timer_2.__call__(none_type_1)
    timer_0.items()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    float_0 = -2016.4889
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0, logger=float_0)
    timer_0.__enter__()


def test_case_7():
    bytes_0 = b"\x07H\x0b\xf6\xe0UKU2\x92\xf4h\x03\x18\x86\xd8\xe7\xb8i\x96"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(bytes_0)
    timer_0.__exit__(*var_0)


def test_case_8():
    str_0 = ";"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_1 = timer_1.__call__(str_0)
    timer_2 = module_0.Timer(str_0, var_1, var_1)
    timer_3 = timer_2.__enter__()
    timer_3.stop()
