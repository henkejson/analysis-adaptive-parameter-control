# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    var_0 = timer_0.__repr__()
    var_1 = module_1.dataclass(
        init=timer_0, order=var_0, unsafe_hash=timer_0, frozen=float_arg_0
    )
    timer_1 = timer_0.__enter__()
    var_2 = timer_0.__repr__()
    var_3 = var_2.__eq__(var_1)
    timer_1.start()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_0.__iter__()


def test_case_3():
    str_0 = "#~"
    timer_0 = module_0.Timer(str_0)
    timer_0.stop()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    var_0 = timer_0.__repr__()
    var_1 = module_1.dataclass(
        init=timer_0, order=var_0, unsafe_hash=timer_0, frozen=float_arg_0
    )
    timer_1 = timer_0.__enter__()
    var_2 = timer_0.__repr__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(none_type_0, timer_0, none_type_0)
    none_type_1 = timer_1.start()
    var_0 = timer_1.__repr__()
    none_type_2 = timer_1.__exit__()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_1, none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timers_0 = module_2.Timers()
    var_0 = timers_0.keys()
    var_1 = var_0.__contains__(float_arg_0)
    var_2 = var_1.__or__(none_type_0)
    var_3 = timers_0.items()
    timers_0.pop(var_1)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_0 = module_1.field(
        default_factory=float_arg_0, compare=none_type_0, metadata=none_type_0
    )
    timer_0 = module_0.Timer(float_arg_0, initial_text=var_0)
    none_type_1 = timer_0.start()
    var_0.__call__(timer_0)


def test_case_10():
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(initial_text=str_0)
    var_1 = timer_1.__eq__(timer_0)
    float_arg_1 = module_0.FloatArg()
    none_type_0 = timer_1.start()
    module_0.TimerError(*float_arg_1, **var_1)
