# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0)
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    str_0 = "(%<c"
    timer_0 = module_0.Timer(text=str_0, initial_text=timer_error_0)
    none_type_0 = timer_0.start()
    module_0.TimerError(**none_type_0)


def test_case_6():
    str_0 = "F4rI"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__repr__()
    var_0.__enter__()


def test_case_7():
    float_0 = -3011.0
    timer_0 = module_0.Timer()
    list_0 = [float_0]
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, logger=none_type_0)
    str_0 = "\rh{#"
    timer_2 = module_0.Timer(text=str_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__(*list_0)
    var_0 = timer_1.__call__(timer_1)
    var_1 = timer_1.__eq__(str_0)
    var_0.__exit__(*list_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0, float_arg_0, float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(var_0, var_0, float_arg_0)
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()
    timer_0.start()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(var_0, var_0, float_arg_0)
    none_type_0 = timer_2.start()
    timer_2.__exit__()
