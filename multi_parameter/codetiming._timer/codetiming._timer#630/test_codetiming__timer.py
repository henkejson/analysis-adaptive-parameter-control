# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_1.start()


def test_case_2():
    float_0 = 3539.08823
    timer_0 = module_0.Timer(float_0)
    timer_1 = timer_0.__enter__()
    str_0 = ":}g;e1P9"
    bool_0 = False
    user_dict_0 = module_1.UserDict()
    var_0 = float_0.__eq__(str_0)
    var_0.apply(var_0, bool_0)


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    none_type_1 = timer_1.start()
    timer_0.__exit__()


def test_case_4():
    str_0 = ""
    timer_0 = module_0.Timer(str_0, str_0)
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_0.start()
    var_0 = timer_0.__repr__()
    module_0.FloatArg(*var_0, **var_0)


def test_case_5():
    str_0 = ""
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=str_0)
    timer_1 = module_0.Timer(str_0, str_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    none_type_3 = timer_1.start()
    none_type_4 = timer_0.start()
    float_arg_1 = module_0.FloatArg()
    bytes_0 = b"\x95\xfc*'"
    timer_2 = module_0.Timer(none_type_1, initial_text=str_0)
    module_2.dataclass(
        timer_0,
        repr=bytes_0,
        eq=bytes_0,
        unsafe_hash=float_arg_0,
        frozen=none_type_3,
        slots=float_arg_0,
    )


def test_case_6():
    int_0 = 842
    timer_0 = module_0.Timer(initial_text=int_0)
    var_0 = module_2.field(default=timer_0, kw_only=timer_0)
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()
    var_0.start()


def test_case_7():
    str_0 = ""
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=str_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    none_type_3 = timer_0.start()
    timer_0.start()


def test_case_8():
    str_0 = "@"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=str_0)
    timer_1 = module_0.Timer(str_0, str_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    none_type_3 = timer_1.start()
    none_type_4 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_0.keys()


def test_case_9():
    str_0 = ""
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=str_0)
    timer_1 = module_0.Timer(str_0, timer_0)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0.keys()


def test_case_10():
    str_0 = "^i+lit{q~%'L"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__enter__()


def test_case_11():
    str_0 = ""
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=str_0)
    timer_1 = module_0.Timer(str_0, str_0)
    timer_2 = module_0.Timer(timer_1, none_type_0, timer_1)
    var_0 = timer_0.__repr__()
    none_type_1 = timer_2.start()
    timer_2.__exit__()
