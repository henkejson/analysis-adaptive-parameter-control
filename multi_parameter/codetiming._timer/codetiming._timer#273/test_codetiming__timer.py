# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, initial_text=timer_error_0)
    str_0 = "_o\x0c2HQ:\\#M+ChR"
    timer_1 = module_0.Timer(timer_0, initial_text=str_0, logger=timer_error_0)
    timer_2 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    timer_2.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(
        text=none_type_0, initial_text=none_type_0, logger=none_type_0
    )
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    str_0 = "bV`Sq_z'\x0bJ_Yg?"
    timer_1 = timer_0.__repr__()
    dict_0 = module_1.dataclass(repr=none_type_2, eq=none_type_2, slots=str_0)
    var_0 = timer_0.__call__(none_type_0)
    var_1 = var_0.__eq__(none_type_1)
    var_2 = module_1.field(init=dict_0, repr=dict_0, kw_only=dict_0)
    var_3 = var_2.__repr__()
    timer_0.stop()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    none_type_1 = timer_0.__eq__(timer_0)
    none_type_2 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(initial_text=none_type_1)
    var_0 = timer_1.__enter__()
    var_1 = var_0.__eq__(none_type_1)
    var_2 = var_1.__eq__(var_1)
    var_3 = module_1.field(compare=none_type_1, kw_only=var_2)
    var_4 = var_1.__repr__()
    var_5 = var_0.__repr__()
    timers_0 = module_2.Timers()
    var_6 = var_1.__eq__(var_4)
    var_1.clear()


def test_case_6():
    none_type_0 = None
    str_0 = "~6,]"
    timer_0 = module_0.Timer(none_type_0, str_0, str_0, str_0)
    timer_0.start()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, none_type_1, none_type_1)
    none_type_2 = timer_0.start()
    none_type_3 = timer_0.__exit__()
    timer_1 = module_0.Timer(initial_text=none_type_2)
    dict_0 = {}
    var_0 = none_type_2.__eq__(none_type_2)
    var_1 = module_1.field(init=dict_0, repr=dict_0, kw_only=dict_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__repr__()
    timers_0 = module_2.Timers()
    var_4 = var_2.__eq__(dict_0)
    var_5 = var_1.__repr__()
    timer_0.clear()


def test_case_8():
    none_type_0 = None
    str_0 = "bV`Sq_z'\x0bJ_Yg?"
    timers_0 = module_1.dataclass(order=none_type_0, unsafe_hash=str_0, frozen=str_0)
    set_0 = {none_type_0}
    timer_0 = module_0.Timer(set_0)
    none_type_1 = timer_0.start()
    timer_0.__exit__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    str_0 = "bV`Sq_z'\x0bJ_Yg?"
    timer_2 = module_0.Timer()
    dict_0 = {str_0: none_type_1}
    module_0.FloatArg(**dict_0)
