# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    bytes_0 = b"s\x13\xe0o\xd1\x16]\xdf|\xbf\xca\xca\x87\x8d\xe1z"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__(*bytes_0)


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    bytes_0 = b"s\x13\xe0o\xd1\x16]\xdf|\xbf\xca\xca\x87\x8d\xe1z"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    bytes_0 = b"/\xfa\x87\xc58\xb3t\x82\xff\xdc"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = module_1.field(default_factory=bytes_0, compare=timer_0)
    none_type_0 = timer_1.__eq__(timer_1)
    timer_2 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    timer_1.stop()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0)
    timer_1 = timer_0.__enter__()
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    float_0 = timer_0.__call__(dict_0)
    var_0 = timer_1.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer(logger=var_0)
    timer_3 = timer_2.__enter__()
    var_1 = timer_3.__repr__()
    timer_1.__exit__()


def test_case_8():
    bytes_0 = b"\x96U\x10j\x01\x8f\xbc[\x9c\x8au\xbe+"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bytes_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.__eq__(none_type_0)
    timer_0.start()


def test_case_9():
    bytes_0 = b"\x96U\x10j\x01\x8f\xbc[\x9c\x8au\xbe+"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    str_0 = "'*09k3_];_-N-"
    timer_1 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_0.__eq__(timer_2)
    float_1 = timer_2.stop()
    float_arg_0 = module_0.FloatArg()
    var_0.__getitem__(none_type_0)


def test_case_10():
    bytes_0 = b"m"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bytes_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_11():
    bytes_0 = b"m"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, bytes_0, bytes_0, none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer()
    var_0 = none_type_1.__eq__(float_0)
    list_0 = []
    timer_0.__exit__(*list_0)
