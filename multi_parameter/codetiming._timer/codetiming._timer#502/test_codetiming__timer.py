# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    str_0 = "aAc\r;X:]R"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    str_0 = "aAc\r;X:]u"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    str_0 = "aAc\r;X:]u"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_6():
    str_0 = "aAc\r;X:]R"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    user_dict_0 = module_1.UserDict()
    none_type_0 = timer_0.__exit__()
    var_0 = user_dict_0.__iter__()
    var_0.__getitem__(user_dict_0)


def test_case_7():
    str_0 = "ozvPD K"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    var_0 = timer_0.__call__(none_type_0)
    var_0.clear()


def test_case_8():
    str_0 = "aAc\r;X:]R"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    user_dict_0 = module_1.UserDict()
    none_type_1 = timer_1.__exit__()
    var_0 = user_dict_0.__iter__()
    timer_2 = timer_1.__enter__()
    var_1 = user_dict_0.__iter__()
    var_1.start()


def test_case_9():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.update()
    var_1 = var_0.__eq__(var_0)
    timer_0 = module_0.Timer(text=var_1, initial_text=var_1)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_10():
    str_0 = "aAc\r;X:]R"
    bool_0 = True
    timer_0 = module_0.Timer(str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = -684.0
    module_1.UserDict(**float_0)


def test_case_11():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.update()
    var_1 = module_2.dataclass(init=var_0, order=user_dict_0, slots=var_0)
    timer_0 = module_0.Timer(text=var_1, initial_text=var_1)
    timer_1 = timer_0.__enter__()
    user_dict_1 = module_1.UserDict()
    timer_0.__exit__()
