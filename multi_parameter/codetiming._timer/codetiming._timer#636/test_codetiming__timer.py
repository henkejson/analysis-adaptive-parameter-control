# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_1)
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0, logger=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_1.__call__(timer_1)
    timer_0.start()


def test_case_5():
    str_0 = "Q^J:q{HIt87N%X"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=str_0)
    var_0 = timer_0.__call__(timer_0)
    timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    timer_2 = module_0.Timer(timer_0, timer_1, var_0)
    timer_3 = timer_2.__enter__()
    var_0.__exit__(*var_0)


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(initial_text=var_0)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_3.__exit__()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_0.__exit__()


def test_case_9():
    str_0 = "&QJ\r.cKsb\x0c"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__len__()
    var_2 = timer_0.__call__(var_0)
    var_3 = var_0.__len__()
    timer_2 = module_0.Timer(var_3, var_2, logger=var_2)
    timer_3 = timer_2.__enter__()
    timer_3.__exit__()
