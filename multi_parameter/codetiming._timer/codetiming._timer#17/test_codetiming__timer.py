# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    list_0 = [timer_0, timer_0]
    timer_0.__exit__(*list_0)


def test_case_2():
    int_0 = -786
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__repr__()
    timer_0.start()


def test_case_5():
    int_0 = -786
    none_type_0 = None
    timer_0 = module_0.Timer(int_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_0.stop()


def test_case_6():
    str_0 = "/N>Q(hO@ymPv$:@@Ch%0"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_1 = timer_1.__repr__()


def test_case_7():
    int_0 = -786
    int_1 = -794
    timer_0 = module_0.Timer(int_0, initial_text=int_1, logger=int_0)
    timer_0.start()
