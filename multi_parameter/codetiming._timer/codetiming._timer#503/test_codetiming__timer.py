# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    str_0 = 'DG@&TqwTK"8Dyh2\\??}'
    bytes_0 = b"\x82o\xb0\xc2\xa1\xdb"
    bool_0 = False
    tuple_0 = (bool_0, str_0, bytes_0, bool_0)
    str_1 = "93jX|4Iu/+9l."
    dict_0 = {str_0: tuple_0, str_0: bytes_0, str_1: str_0}
    timer_0 = module_0.Timer(str_1, initial_text=dict_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_8():
    none_type_0 = None
    str_0 = "name"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = module_0.Timer(logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    timer_1.__exit__(*timer_1)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    str_0 = 'DG@&TqwTK"8Dyh2\\??}'
    bool_0 = False
    bytes_0 = b"\x82o\xb0\xc2\xa1\xdb"
    bool_1 = False
    tuple_0 = (bool_0, str_0, bytes_0, bool_1)
    str_1 = "93jX|4Iu/+9l."
    timer_0 = module_0.Timer(str_1, initial_text=str_1)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    module_0.FloatArg(**tuple_0)
