# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_1.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0.pop(timer_0)


def test_case_7():
    int_0 = -878
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_8():
    str_0 = "<\t&O7e\t"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    str_1 = "Timer started"
    dict_0 = {str_1: str_1}
    module_0.TimerError(**dict_0)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    str_0 = "UdBC ~^S\x0b>3dAs8%pK7["
    str_1 = "7z4F{F|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_1)
    timer_0.__enter__()


def test_case_10():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = module_0.Timer(var_0, timer_0, var_0, timer_error_0)
    timer_2 = module_0.Timer(logger=var_0)
    var_1 = timer_2.__repr__()
    float_arg_0 = module_0.FloatArg()
    timer_1.__enter__()
