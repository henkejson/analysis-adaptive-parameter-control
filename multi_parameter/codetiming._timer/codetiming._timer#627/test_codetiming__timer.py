# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    list_0 = [timer_0]
    none_type_1 = timer_0.__exit__(*list_0)
    var_0 = timer_0.__eq__(none_type_1)
    timer_0.__exit__(*list_0)


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_8():
    str_0 = "H,&3\\'!\tc"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.max(timer_1)


def test_case_9():
    int_0 = 3274
    var_0 = module_1.dataclass(init=int_0, frozen=int_0)
    timer_0 = module_0.Timer(var_0)
    none_type_0 = timer_0.start()
    var_1 = var_0.__repr__()
    none_type_1 = timer_0.__exit__()
    var_0.__exit__(*var_0)


def test_case_10():
    bool_0 = True
    str_0 = "S*4hw\t\x0bU"
    timer_0 = module_0.Timer(str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    module_0.FloatArg(*none_type_0)


def test_case_11():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_2.__exit__()
