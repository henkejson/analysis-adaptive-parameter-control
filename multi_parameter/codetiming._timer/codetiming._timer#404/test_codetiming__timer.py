# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "-hJ+~5b0`P\nA"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    module_0.TimerError(**timer_0)


def test_case_4():
    none_type_0 = None
    str_0 = "OCv T^rCAI3`<"
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    timer_error_0 = module_1.field(default=none_type_0, metadata=str_0)
    timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_arg_0 = timer_0.__repr__()
    none_type_2 = timer_0.__exit__()
    none_type_3 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    str_0 = "^+n^MC\t'T#9"
    timer_0 = module_0.Timer(logger=str_0)
    none_type_0 = timer_0.start()


def test_case_7():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    str_0 = "OCv T^rCAI3`<"
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(none_type_0, str_0, str_0)
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    timer_0.__exit__()


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=bool_0)
    timer_0.start()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = None
    none_type_3 = None
    timer_1 = module_0.Timer(none_type_2, timer_0, none_type_3)
    float_arg_0 = timer_0.__call__(none_type_0)
    none_type_4 = timer_1.start()
    timer_2 = module_0.Timer(none_type_0, float_arg_0, float_arg_0)
    float_0 = timer_1.stop()
    timer_error_0 = module_0.TimerError()
    timer_1.__exit__()
