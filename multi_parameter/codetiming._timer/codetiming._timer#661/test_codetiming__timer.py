# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_2 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    timer_2.stop()


def test_case_6():
    bytes_0 = b"e\xbf7"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_1.__enter__()


def test_case_7():
    str_0 = "Z\t-^1"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_error_0)
    timer_1 = module_0.Timer(str_0, initial_text=float_arg_0, logger=none_type_0)


def test_case_8():
    str_0 = "/"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    timer_1.add(str_0, timer_1)


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_1, logger=float_arg_0)
    timer_1 = module_0.Timer()
    list_0 = []
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0.start()
