# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.__exit__()
    timer_0.stop()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_arg_1 = module_0.FloatArg()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_0.start()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = module_1.field(kw_only=none_type_0)
    timer_0.clear()


def test_case_6():
    none_type_0 = None
    str_0 = "T"
    timer_0 = module_0.Timer(none_type_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    timer_2 = module_0.Timer(timer_error_0)
    timer_3 = timer_1.__enter__()


def test_case_7():
    complex_0 = -1177.7 + 1809.8593j
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = None
    timer_1 = timer_0.__enter__()
    float_arg_1 = module_0.FloatArg()
    list_0 = [complex_0, none_type_0, none_type_1]
    none_type_2 = timer_1.__exit__(*list_0)
    timer_1.stop()


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(initial_text=float_arg_0)
    timer_2 = timer_1.__enter__()
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_2.__repr__()
    none_type_1 = timer_1.__exit__(*var_0)
    float_0 = timer_0.stop()
    none_type_2 = timer_0.start()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0)
    timer_2 = timer_1.__enter__()
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_2.__exit__()
    timer_2.stop()


def test_case_10():
    complex_0 = -1177.7 + 1809.8593j
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(complex_0, initial_text=float_arg_0, logger=complex_0)
    timer_0.__enter__()
