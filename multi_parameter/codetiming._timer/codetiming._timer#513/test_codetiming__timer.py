# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.field(init=float_arg_0, repr=timer_0)
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_0.start()
    var_0 = timer_1.__call__(none_type_2)


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()
    var_0 = timer_1.__repr__()
    var_1 = var_0.__len__()
    var_2 = var_1.__repr__()
    var_2.update()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__(*timer_1)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    str_0 = "R7NrE7g\trG4,is="
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__(*none_type_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer(float_arg_0, timer_0, float_arg_0)
    timer_2 = timer_1.__enter__()
    list_0 = []
    none_type_1 = timer_2.__exit__(*list_0)
    var_0 = timer_1.__call__(timer_0)
    var_0.__len__()
