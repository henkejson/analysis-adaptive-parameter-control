# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    float_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    str_0 = "u]7#6}'j_"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.stop()


def test_case_3():
    str_0 = "u]7#6}'ja_"
    timer_0 = module_0.Timer(text=str_0)
    none_type_0 = None
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_1.stop()


def test_case_4():
    tuple_0 = ()
    bool_0 = False
    timer_0 = module_0.Timer(bool_0, tuple_0)
    timer_0.__exit__()


def test_case_5():
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(str_0)
    dict_0 = {}
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_1 = timer_1.__eq__(var_0)
    var_2 = timer_0.__eq__(dict_0)
    timer_2 = module_0.Timer(var_0, timer_0, var_0, dict_0)
    timer_error_0 = module_0.TimerError(**dict_0)
    none_type_0 = timer_1.__exit__()
    var_3 = timer_0.__eq__(var_0)
    var_4 = timer_2.__eq__(var_0)
    var_5 = timer_0.__repr__()
    var_2.pop(var_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    str_0 = "H:+o'V%k5V"
    none_type_0 = timer_0.start()
    list_0 = [none_type_0, none_type_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__call__(str_0)
    timers_0 = module_1.Timers()
    str_0.start()


def test_case_7():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    var_0 = list_0.__repr__()
    timer_0 = module_0.Timer(text=list_0, initial_text=list_0)
    timer_1 = timer_0.__enter__()
    none_type_0.__exit__()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, logger=none_type_0)
    dict_0 = {}
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_1 = timer_1.__eq__(var_0)
    var_2 = timer_0.__eq__(dict_0)
    timer_2 = module_0.Timer(var_0, timer_0, var_0, dict_0)
    timer_error_0 = module_0.TimerError(**dict_0)
    none_type_1 = timer_1.__exit__()
    var_3 = var_1.__repr__()
    var_2.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    str_0 = "H:+o'V%k5V"
    var_0 = timer_0.__eq__(none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [none_type_1, none_type_1]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_error_0 = module_0.TimerError()
    var_1 = timer_0.__call__(str_0)
    var_2 = timer_0.__call__(str_0)
    timers_0 = module_1.Timers()
    var_3 = var_2.__eq__(var_1)
    var_3.start()


def test_case_10():
    str_0 = "c>Owpfr\n3TkN&-^v"
    timer_error_0 = module_0.TimerError(*str_0)
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__eq__(timer_error_0)
    none_type_0 = timer_0.start()
    list_0 = [none_type_0, none_type_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_error_1 = module_0.TimerError()
    timer_0.stop()
