# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, initial_text=none_type_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_0.__exit__()


def test_case_4():
    str_0 = "p\\Wu%Bry\r"
    tuple_0 = ()
    timer_0 = module_0.Timer(initial_text=str_0, logger=tuple_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, initial_text=none_type_0)
    var_0 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_0.min(timer_2)


def test_case_7():
    str_0 = '>1eg?\tc^|*w+^v"i|a|'
    str_1 = ""
    str_2 = "ib;1<>6o"
    timer_0 = module_0.Timer(str_1, initial_text=str_2)
    var_0 = timer_0.__eq__(str_1)
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    timer_1 = timer_0.__enter__()
    module_0.TimerError(**dict_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(var_0)
    timer_2 = module_0.Timer(var_0, var_0)
    var_2 = var_1.__repr__()
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()
    var_3 = timer_1.__repr__()


def test_case_9():
    dict_0 = {}
    timer_0 = module_0.Timer(text=dict_0, initial_text=dict_0, logger=dict_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__call__(dict_0)
    var_0.__delitem__(timer_1)


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    str_0 = "Timer {name} started"
    timer_1 = module_0.Timer(str_0, float_arg_0, float_arg_0)
    none_type_0 = timer_1.start()
    var_0 = timer_0.__eq__(timer_0)
    timer_2 = timer_0.__enter__()
    timer_1.stop()
