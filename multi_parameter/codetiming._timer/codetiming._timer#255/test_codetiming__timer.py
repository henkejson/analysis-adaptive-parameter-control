# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()


def test_case_2():
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    bytes_0 = b"\xf9\xc0G\xc8\x90:G!\x04\x19\x85\xc7\xce\x10\xe9j\xd6"
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    timer_0 = module_0.Timer(set_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__repr__()
    timer_0.__exit__(*set_0)


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    int_0 = -464
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_7():
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_8():
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(str_0)


def test_case_9():
    str_0 = "milliseconds"
    bool_0 = True
    timer_0 = module_0.Timer(str_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    str_1 = "XJ5o"
    var_0 = timer_1.__eq__(str_1)
    float_0 = timer_1.stop()
    list_0 = [str_1, var_0]
    timer_0.__exit__(*list_0)


def test_case_10():
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    none_type_0 = timer_0.__repr__()
