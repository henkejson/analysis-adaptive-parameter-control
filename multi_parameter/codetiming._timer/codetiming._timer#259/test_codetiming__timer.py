# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1
import collections as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    context_decorator_0 = module_1.ContextDecorator()
    timer_0 = module_0.Timer(
        initial_text=context_decorator_0, logger=context_decorator_0
    )
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    str_0 = "3s+.u9zijX{c"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_0.__exit__()


def test_case_3():
    bool_0 = False
    timer_0 = module_0.Timer(logger=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_0)
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer()
    timer_3 = timer_1.__enter__()
    var_0.keys()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_1 = module_0.Timer()
    timer_2 = timer_1.__enter__()
    user_dict_0 = module_2.UserDict()
    var_0 = user_dict_0.__copy__()
    var_1 = timer_1.__repr__()
    timer_0.stop()


def test_case_5():
    context_decorator_0 = module_1.ContextDecorator()
    timer_0 = module_0.Timer(
        initial_text=context_decorator_0, logger=context_decorator_0
    )
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer()
    timer_3 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_0.__copy__()


def test_case_6():
    bool_0 = False
    timer_0 = module_0.Timer(logger=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_0)
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    timer_2 = module_0.Timer()
    var_1 = timer_1.__repr__()
    timer_3 = module_0.Timer(initial_text=var_1, logger=var_1)
    timer_error_1 = module_0.TimerError()
    timer_3.__enter__()


def test_case_7():
    bool_0 = False
    timer_0 = module_0.Timer(logger=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(bool_0)
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(initial_text=timer_1)
    var_1 = timer_0.__repr__()
    list_0 = [timer_2, bool_0, var_0, timer_2]
    timer_3 = module_0.Timer(text=var_0, initial_text=list_0)
    timer_error_0 = module_0.TimerError(*var_1)
    timer_4 = timer_3.__enter__()
    timer_4.stop()


def test_case_8():
    context_decorator_0 = module_1.ContextDecorator()
    bool_0 = True
    timer_0 = module_0.Timer(context_decorator_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer()
    var_0 = timer_2.__repr__()
    var_1 = timer_1.__repr__()
    var_1.__copy__()
