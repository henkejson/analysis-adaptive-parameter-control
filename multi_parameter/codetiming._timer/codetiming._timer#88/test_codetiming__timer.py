# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import time as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    bytes_0 = b""
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    var_0 = timer_0.__eq__(bytes_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    var_0 = timer_1.__call__(none_type_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    timer_3 = module_0.Timer(logger=float_0)
    module_1.struct_time(*var_0, **var_0)


def test_case_4():
    timer_0 = module_0.Timer()
    dict_0 = {}
    timer_1 = timer_0.__enter__()
    var_0 = module_2.field(repr=timer_0, kw_only=dict_0)
    timer_0.start()


def test_case_5():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_0.__or__(timer_error_0)


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_1.__eq__(timer_0)
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = module_0.Timer(logger=var_0)
    var_0.__ior__(timer_2)


def test_case_7():
    str_0 = "4"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_1, initial_text=none_type_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_2.stop()
    timer_error_0 = module_0.TimerError()
