# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    int_0 = -334
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    float_0 = timer_0.__call__(timer_0)
    var_0 = timer_0.__call__(float_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__eq__(float_0)
    var_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = module_1.dataclass(order=var_0, kw_only=timer_0)
    list_0 = []
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_1 = timer_0.__enter__()
    var_0.__call__(timer_1)


def test_case_5():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(initial_text=var_0)
    timer_2 = module_0.Timer(var_0, initial_text=var_0, logger=var_0)
    timer_3 = timer_2.__enter__()
    timer_0.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(text=var_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_2.__exit__()


def test_case_7():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    float_arg_0 = module_0.FloatArg()


def test_case_8():
    timer_0 = module_0.Timer()
    str_0 = "A+G`2=sS"
    timer_1 = module_0.Timer(str_0, timer_0, str_0, str_0)
    timer_1.__enter__()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_10():
    bytes_0 = b"<\x87\xf7\x9eN\xbala\xab-HJ\xe5x\xf0\xa5"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bytes_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_1.__repr__()
    var_0.copy()
