# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    exception_0 = module_1.Exception()
    timer_0 = module_0.Timer(initial_text=exception_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    exception_0 = module_1.Exception()
    timer_0 = module_0.Timer(initial_text=exception_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_3():
    exception_0 = module_1.Exception()
    timer_0 = module_0.Timer(initial_text=exception_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__repr__()
    var_2 = timer_0.__repr__()


def test_case_5():
    str_0 = "[S"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(str_0)


def test_case_6():
    str_0 = "._"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    none_type_2.__len__()


def test_case_8():
    str_0 = "._"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__(*var_0)
    var_1 = var_0.__len__()
    var_1.__len__()


def test_case_9():
    complex_0 = -764.314247 - 1034j
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(complex_0, initial_text=complex_0)
    float_arg_1 = module_0.FloatArg()
    timer_1 = module_0.Timer(float_arg_1, initial_text=float_arg_1)
    timer_2 = module_0.Timer()
    none_type_0 = timer_1.start()
    none_type_1 = timer_2.start()
    var_0 = timer_1.__call__(none_type_0)
    timer_2.start()
