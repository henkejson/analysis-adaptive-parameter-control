# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_3():
    str_0 = "!<m>LL5\\pQGZ"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    float_arg_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_5():
    int_0 = 97
    none_type_0 = None
    timer_0 = module_0.Timer(int_0, logger=none_type_0)
    var_0 = timer_0.__call__(int_0)
    var_0.__call__(int_0)


def test_case_6():
    str_0 = "!<m>LL5\\pQGZ"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_7():
    str_0 = "j8yq"
    timer_0 = module_0.Timer(initial_text=str_0)
    var_0 = timer_0.__call__(str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    str_1 = "`0]Qk@\rka("
    timer_1 = module_0.Timer(str_0, str_1, var_0)
    float_0 = timer_0.stop()
    timer_2 = timer_1.__enter__()
    float_arg_1 = module_0.FloatArg()
    timer_3 = module_0.Timer(str_0, var_0)
    module_1.field(init=float_arg_1, repr=float_arg_1, metadata=float_arg_1)


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.__setitem__(bool_0, bool_0)
