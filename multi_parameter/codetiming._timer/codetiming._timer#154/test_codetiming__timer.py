# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2
import contextlib as module_3


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = module_1.dataclass(
        none_type_0, eq=none_type_0, kw_only=none_type_0, slots=none_type_0
    )
    timer_2 = module_0.Timer(timer_1, float_arg_0, logger=var_0)
    timer_1.start()


def test_case_2():
    str_0 = "oB>]~G,m\x0bV\tw T11,(5f"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__eq__(timer_error_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0, logger=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_0.__call__(timer_0)
    var_1 = module_1.dataclass(init=timer_0, unsafe_hash=none_type_1, slots=none_type_2)
    timer_2 = module_0.Timer(none_type_1, var_1, timer_0)
    timer_0.start()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0, logger=timer_0)
    none_type_1 = timer_1.start()
    timer_0.__setitem__(none_type_1, timer_0)


def test_case_6():
    bytes_0 = b"<\x9f\xf9\xdfG\xe2\xba2=S\xdb\x17D8"
    none_type_0 = None
    list_0 = [bytes_0, none_type_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0 = module_0.Timer(text=bytes_0, logger=none_type_0)
    bool_0 = True
    none_type_1 = timer_0.start()
    module_2.UserDict(bool_0)


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0, logger=timer_0)
    none_type_0 = timer_1.start()
    var_0 = none_type_0.__repr__()
    var_0.start()


def test_case_8():
    bytes_0 = b"1\x08\x94"
    timer_0 = module_0.Timer(bytes_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(timer_1)
    var_0.__delitem__(float_0)


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = None
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_1, logger=none_type_1)
    none_type_2 = timer_1.start()
    none_type_3 = timer_1.__exit__()
    timer_0.start()


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0, logger=timer_0)
    none_type_1 = timer_1.start()
    int_0 = 1467
    timer_2 = module_0.Timer(timer_0, initial_text=int_0, logger=timer_0)
    none_type_2 = timer_2.start()
    context_decorator_0 = module_3.ContextDecorator()
    var_0 = module_1.dataclass(
        init=timer_1,
        repr=timer_0,
        order=none_type_2,
        unsafe_hash=none_type_2,
        frozen=timer_1,
        match_args=context_decorator_0,
        kw_only=context_decorator_0,
        slots=int_0,
    )
    var_0.__setitem__(none_type_2, context_decorator_0)
