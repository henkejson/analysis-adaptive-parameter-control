# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    int_0 = -301
    timer_0 = module_0.Timer(initial_text=int_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    str_0 = ""
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(str_0)
    timer_0.start()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_0.stop()


def test_case_6():
    str_0 = "name"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    list_0 = [none_type_0]
    timer_error_0 = module_0.TimerError(*list_0)
    float_0 = timer_0.stop()
    timer_error_1 = module_0.TimerError()
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    timer_1.__exit__(*list_0)


def test_case_8():
    none_type_0 = None
    str_0 = "\x0bs9#lrr1\x0cP&\\nGi+r!>{"
    timer_0 = module_0.Timer(none_type_0, str_0)
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_error_0 = module_0.TimerError()
    list_0 = []
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(*list_0, **dict_0)
    float_0 = timer_1.stop()
    var_0 = timer_1.__repr__()
    var_1 = timer_0.__eq__(timer_2)
    timer_3 = module_0.Timer(logger=none_type_0)
    float_arg_1 = module_0.FloatArg()
    timer_4 = timer_0.__enter__()
