# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, float_arg_0, float_arg_0)
    list_0 = []
    float_arg_1 = module_0.FloatArg(*list_0)
    timer_1 = module_0.Timer()
    timer_0.__exit__()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, float_arg_0, float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = ""
    list_0 = [timer_0, str_0]
    none_type_0 = timer_0.__exit__(*list_0)
    timer_2 = module_0.Timer(text=str_0, logger=str_0)
    timer_error_0 = module_0.TimerError()
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_3.__exit__()
    none_type_2 = timer_3.start()
    timer_2.start()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, float_arg_0, float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_1.__exit__()
    timer_error_1 = module_0.TimerError()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_0, logger=timer_0)
    timer_error_0 = module_0.TimerError()
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_3.__exit__()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_2.start()
    none_type_2 = timer_1.__exit__()
    list_0 = []
    float_arg_0 = module_0.FloatArg(*list_0)
    var_0.__enter__()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    list_0 = []
    float_arg_1 = module_0.FloatArg(*list_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_0.__exit__(*list_0)


def test_case_9():
    dict_0 = {}
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    context_decorator_0 = module_1.ContextDecorator(**dict_0)
    float_0 = timer_0.stop()
    timer_2 = timer_1.__enter__()
    float_1 = timer_1.stop()
    list_0 = [context_decorator_0, context_decorator_0]
    timer_3 = module_0.Timer(dict_0)
    module_0.FloatArg(*list_0, **dict_0)


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, float_arg_0, float_arg_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(text=none_type_0, initial_text=var_0)
    var_1 = timer_0.__eq__(float_arg_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    timer_0.__exit__()
