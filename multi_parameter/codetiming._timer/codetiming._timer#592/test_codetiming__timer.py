# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    float_arg_1 = module_0.FloatArg()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    str_0 = "1HF03q..{!w7VO0AI9l"
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1.start()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.field(default_factory=none_type_0, repr=none_type_0)
    var_0.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = module_0.Timer(text=timer_0, logger=float_arg_0)
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_2 = timer_1.__enter__()
    timer_2.stop()
