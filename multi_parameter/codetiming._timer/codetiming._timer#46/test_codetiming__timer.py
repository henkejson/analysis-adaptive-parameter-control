# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(timer_error_0, logger=none_type_0)
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__eq__(timer_error_0)
    none_type_1 = None
    timer_1 = timer_0.__enter__()
    timer_error_0.setdefault(none_type_1)


def test_case_6():
    str_0 = "tyT(R+"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(text=float_arg_0, initial_text=float_arg_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = None
    none_type_2 = timer_0.__exit__()
    var_1 = timer_1.__eq__(none_type_1)
    timer_3 = module_0.Timer()
    none_type_3 = timer_2.start()
    timer_2.__ror__(none_type_3)


def test_case_9():
    str_0 = "\x0cC1S"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_10():
    base_exception_0 = module_1.BaseException()
    timer_0 = module_0.Timer(
        text=base_exception_0, initial_text=base_exception_0, logger=base_exception_0
    )
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    none_type_0 = timer_1.start()
    timer_1.__enter__()


def test_case_11():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    base_exception_0 = module_1.BaseException()
    timer_0 = module_0.Timer(
        text=base_exception_0, initial_text=base_exception_0, logger=base_exception_0
    )
    var_0 = timer_0.__call__(float_arg_0)
    timer_1 = module_0.Timer(text=var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    timer_1.__exit__()
