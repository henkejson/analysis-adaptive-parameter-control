# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    float_arg_1 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    timer_2 = module_0.Timer(var_0, initial_text=var_0, logger=none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    module_0.TimerError(**var_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    bool_0 = True
    timer_1 = module_0.Timer(logger=bool_0)
    none_type_0 = timer_0.start()


def test_case_7():
    str_0 = "BU\x0c8T]~r;R-~GPD;(w"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(none_type_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__call__(none_type_0)
    timer_1.__enter__()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(none_type_0, timer_0)
    var_0.__iter__()


def test_case_9():
    none_type_0 = None
    str_0 = "BU\x0c8T]~r;R-~GPD;(w"
    timer_0 = module_0.Timer(str_0, str_0, none_type_0, none_type_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_0)
    timer_1 = module_0.Timer(text=var_0)
    timer_2 = module_0.Timer(text=float_arg_0, logger=none_type_0)
    var_1 = timer_2.__eq__(none_type_1)
    var_2 = var_1.__eq__(var_0)
    timer_3 = timer_1.__enter__()
    var_3 = timer_2.__call__(var_1)
    timer_3.start()


def test_case_10():
    str_0 = "BU\x0c8T]~r;R-~GPD;(w"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(var_0, initial_text=timer_0, logger=var_0)
    timer_2 = module_0.Timer(text=var_0, initial_text=str_0)
    var_1 = timer_2.__eq__(none_type_0)
    timer_1.__enter__()


def test_case_11():
    none_type_0 = None
    str_0 = "BU\x0c8T]~r;R-~GPD;(w"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(none_type_1, initial_text=str_0, logger=none_type_1)
    timer_3 = module_0.Timer(none_type_0, timer_1, timer_2)
    timer_4 = timer_3.__enter__()
    none_type_2 = timer_4.__exit__()
    str_1 = "e\x0b^j'nhC'(A+1\nl*<"
    timer_5 = module_0.Timer(str_1, timer_1)
    timer_1.__enter__()
