# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 5
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = 1605 + 13.29642j
    tuple_0 = (complex_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    int_0 = -882
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_3():
    bytes_0 = b";\x08\xf7\xc6@,p1\xf1\xd2\t\x0fk\xcdt"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "exists_as"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    str_0 = "#:"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: bool_0}
    tuple_0 = (dict_0, bool_0, str_0, bool_0)
    tuple_1 = (str_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "The path: %r can NOT be created as a directory because it already exists as a %s."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0, str_0, ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    tuple_1 = (tuple_0, ordered_dict_1)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_9():
    str_0 = "#:"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: bool_0}
    tuple_0 = (dict_0, bool_0, str_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xc1X\xbd\xe0\x04\xa9\x834H$\xaeMc\x91\x99\xa0 9R0"
    int_0 = 421
    dict_0 = {bytes_0: bytes_0, int_0: int_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = " xists_as"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(dict_1)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(dict_0)
    var_9 = module_0.to_namedtuple(var_6)
    bool_0 = True
    var_10 = module_0.to_namedtuple(var_3)
    module_0.to_namedtuple(bool_0)
