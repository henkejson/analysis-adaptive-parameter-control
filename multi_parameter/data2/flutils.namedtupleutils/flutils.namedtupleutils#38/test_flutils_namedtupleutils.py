# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    complex_0 = -5548.270232 - 1850.31223j
    dict_0 = {complex_0: complex_0}
    tuple_0 = (complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bytes_0 = b"\xd0BW\x9f7\x14^\x94\x94\x0e]@=\x87^"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "nm\x0byEE<rUU"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "dl"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "eD\\XN\x0b~g`S5@"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "qOC*y\\{W"
    str_1 = "\nl"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_1, dict_1]
    var_2 = module_0.to_namedtuple(list_0)
    object_0 = module_2.object()
    list_1 = [bool_0, list_0, var_2]
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_3)
    ordered_dict_1 = module_1.OrderedDict()
    var_6 = module_0.to_namedtuple(list_0)
    ordered_dict_2 = module_1.OrderedDict()
    var_7 = module_0.to_namedtuple(dict_1)
    list_2 = []
    var_8 = module_0.to_namedtuple(list_2)
    var_9 = module_0.to_namedtuple(var_8)
    var_10 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(object_0)
