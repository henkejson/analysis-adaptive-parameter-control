# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -480
    module_0.to_namedtuple(int_0)


def test_case_1():
    none_type_0 = None
    str_0 = "or6m"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "V/?SQNTjd_=Q&w"
    str_1 = "cached_property"
    set_0 = set()
    dict_0 = {str_0: str_0, str_1: set_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x8a\x1d\xbdcDx8#r\xbf\xc0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "directory_present"
    tuple_0 = (str_0, str_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: tuple_0, var_0: var_0, var_0: var_0, var_0: tuple_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    str_0 = "K<~a"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"?\xba`z2\x04\xe9\xed\xba\xa1\xcdd0V\x04\xf7\x8c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    dict_1 = {bytes_0: tuple_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_11():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_1: bool_1}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "Pr8\r"
    dict_1 = {str_0: str_0, str_0: str_0}
    tuple_0 = (str_0, dict_1, str_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    list_0 = [dict_1]
    var_2 = module_0.to_namedtuple(list_0)
    bool_2 = True
    tuple_1 = (list_0, bool_2, var_2)
    var_3 = module_0.to_namedtuple(tuple_1)
    module_1.namedtuple(bool_0, var_0)
