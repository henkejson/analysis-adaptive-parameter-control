# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "qH"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xf7B\xe4\xf1zb\x05\xd7\x08\xe3\x85"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = ()
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(var_0)
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_6 = module_0.to_namedtuple(list_0)
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(var_4)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_5)
    var_11 = module_0.to_namedtuple(var_9)
    list_1 = []
    var_12 = module_0.to_namedtuple(list_1)
    var_13 = module_0.to_namedtuple(var_7)
    var_14 = module_0.to_namedtuple(var_12)
    var_15 = module_0.to_namedtuple(var_7)
    dict_1 = {var_2: var_1}
    var_16 = module_0.to_namedtuple(dict_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "qH"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xf7B\xe4\xf1zb\x05\xd7\x08\xe3\x85"
    module_0.to_namedtuple(bytes_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "W{Qj]/"
    dict_0 = {str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    bytes_0 = b"\x1aY"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "Z/%p{t"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_1 = "CC\r"
    dict_1 = {str_1: str_1, str_1: str_1}
    var_1 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()
    list_0 = [dict_1, str_1, dict_1, dict_1, str_1, str_1, str_1, dict_1]
    bool_0 = False
    tuple_0 = (list_0, bool_0, bool_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    int_0 = -729
    module_0.to_namedtuple(int_0)
