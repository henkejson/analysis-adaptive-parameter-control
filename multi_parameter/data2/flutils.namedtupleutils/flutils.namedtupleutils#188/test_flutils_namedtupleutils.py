# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 987.0
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "user_options"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x9d\xf9u\xd7\xba\xfe;\xef\xde|\xb3k"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = 'I*T$t\\T2/"\rQK'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    dict_1 = {bool_0: str_0, bool_0: bool_0, var_0: dict_0}
    tuple_0 = (bool_0, dict_1)
    tuple_1 = (var_0, bool_0, bool_0, tuple_0)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    str_0 = "user_options"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = 'I*T$t\\T2/"\rQK'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = 'I*T$t\\T2/"\rQK'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = -1707
    bytes_0 = b"H\x1401\xda\x1dJ\xa8\xa5c\x0f"
    str_0 = "\x0cjiJ|6F"
    int_1 = 2460
    dict_0 = {str_0: int_1, int_0: int_0, str_0: int_1, bytes_0: int_0}
    set_0 = {int_0}
    list_0 = []
    tuple_0 = (dict_0, set_0, int_0, list_0)
    tuple_1 = (bytes_0, str_0, bytes_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_13():
    str_0 = "F\x0c"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    tuple_0 = (bool_0, dict_0)
    tuple_1 = (var_0, bool_0, bool_0, tuple_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
