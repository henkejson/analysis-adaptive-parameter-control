# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1308
    module_0.to_namedtuple(int_0)


def test_case_1():
    float_0 = -2112.2
    list_0 = [float_0, float_0]
    int_0 = 24
    dict_0 = {float_0: list_0, int_0: list_0, float_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    tuple_0 = (var_1, bool_0)
    tuple_1 = (list_0, tuple_0)
    list_1 = [tuple_1, list_0, dict_0, tuple_0]
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(list_1)


def test_case_2():
    bytes_0 = b"(3\x96m?1\xdd\x85\x0c\xc4\xa4\x8e"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bool_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"`\xaf\x15]\x8d\xd2\x87\xd4gO\xb9\\\xb2"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -2112.2
    list_0 = [float_0, float_0]
    int_0 = 24
    dict_0 = {float_0: list_0, int_0: list_0, float_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_7():
    str_0 = "prep_cmd"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "O%tSpEd(s0J\\{c!"
    str_1 = "prep_cmd"
    dict_0 = {str_1: str_1, str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_1.OrderedDict()
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "prep_cmd"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_13():
    list_0 = []
    str_0 = "y5}\x0b[P{#F"
    dict_0 = {str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_1)
    dict_2 = {}
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    str_1 = "to "
    dict_3 = {str_1: var_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_3)
    list_1 = [dict_2, dict_1, dict_3]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(bool_0)
