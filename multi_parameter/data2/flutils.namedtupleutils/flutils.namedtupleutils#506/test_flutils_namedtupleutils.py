# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = -281
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "download_url"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "Tj\\"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    int_0 = -1388
    module_0.to_namedtuple(int_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "dow[9oad_ur"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    list_0 = [ordered_dict_1, ordered_dict_1]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(var_2)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_4)
    var_11 = module_0.to_namedtuple(var_3)
    var_12 = module_0.to_namedtuple(var_10)
    var_13 = module_0.to_namedtuple(var_10)
    var_14 = module_0.to_namedtuple(var_10)
    var_15 = module_0.to_namedtuple(var_0)
    var_16 = module_0.to_namedtuple(var_6)
    var_17 = module_0.to_namedtuple(ordered_dict_0)
    var_18 = module_0.to_namedtuple(var_7)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"n\xf1\xf8"
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "NY\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    list_0 = []
    list_1 = [list_0, list_0]
    var_3 = module_1.OrderedDict(*list_0)
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_3)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
