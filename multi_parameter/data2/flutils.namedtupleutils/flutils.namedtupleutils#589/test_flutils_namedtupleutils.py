# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = -377.0
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ")hR0gy'Q6\x0c|1e\\cd?)KB"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "version"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0}
    dict_0 = {bool_0: bool_0}
    tuple_0 = (set_0, bool_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "version"
    str_1 = "=v%9"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    bytes_0 = b"\xb4\xa2o1\\\xb5\xd6\xf0\xdb\xa2"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "version"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    object_0 = module_2.object()
    str_0 = "\x0cO"
    dict_0 = {object_0: object_0, object_0: object_0, object_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    complex_0 = -1126.12651 + 628.145226092543j
    list_0 = [complex_0, var_0, complex_0]
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_3)
    none_type_0 = None
    var_5 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(none_type_0)
