# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = ""
    set_0 = {str_0, str_0, str_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "DG"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    str_0 = 'T605*3Cm$y*KpI6qS"_\n'
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    float_0 = 760.0
    dict_0 = {float_0: float_0}
    bytes_0 = b"4\xf1\xfc\x9f"
    tuple_0 = (float_0, dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "DG"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [str_0]
    tuple_0 = (ordered_dict_0, list_0)
    tuple_1 = ()
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_2)


def test_case_7():
    str_0 = "}<|{\x0bP2'TfFEC*m5"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [str_0]
    tuple_0 = (ordered_dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    float_0 = 760.0
    dict_0 = {float_0: float_0}
    bytes_0 = b"4\xf1\xfc\x9f"
    tuple_0 = (float_0, dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    float_0 = -1014.3462
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, var_0, float_0, float_0]
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = "\x0bh"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    list_1 = [str_0]
    tuple_0 = (ordered_dict_0, list_1)
    var_2 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object(*var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_5)
    dict_2 = {var_0: tuple_0}
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(var_7)
    ordered_dict_1 = module_1.OrderedDict(**dict_2)
    var_9 = module_0.to_namedtuple(var_6)
    var_10 = module_0.to_namedtuple(ordered_dict_1)
    var_11 = module_0.to_namedtuple(var_2)
    var_12 = module_0.to_namedtuple(var_5)
    none_type_0 = None
    var_13 = module_0.to_namedtuple(var_1)
    var_14 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(none_type_0)
