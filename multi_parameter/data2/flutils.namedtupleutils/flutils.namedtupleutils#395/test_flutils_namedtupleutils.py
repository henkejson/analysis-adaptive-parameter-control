# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = 130.091428 - 1784.2223j
    list_0 = [complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "finalize_options"
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "finalize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "finalize_options"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = " Cannot be a builtin name."
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "finalize_options"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: list_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_11():
    int_0 = 515
    bytes_0 = b'fm4\x96\xe9\xbf\xd5\xace\xc5I"\xc2&\x19\xf7\xc5\xb8'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: int_0}
    str_0 = "B1_O9{Us8t+6"
    tuple_0 = (bytes_0, int_0, dict_0, str_0)
    tuple_1 = (int_0, tuple_0, bytes_0)
    bool_0 = True
    tuple_2 = (tuple_1, bool_0, bytes_0)
    module_0.to_namedtuple(tuple_2)


def test_case_12():
    str_0 = "liv "
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "finalize_options"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)
