# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    object_0 = module_0.object()
    str_0 = "has_any_attrs"
    dict_0 = {str_0: object_0, str_0: object_0, object_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_2():
    str_0 = "has_any_attrs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b""
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "W x\\({=zX\x0cPc#oLPsz"
    tuple_0 = (str_0,)
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_8():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_9():
    object_0 = module_0.object()
    str_0 = "has_any_aQtr$"
    dict_0 = {str_0: object_0, str_0: object_0, object_0: str_0}
    list_0 = module_1.to_namedtuple(dict_0)
    var_0 = module_1.to_namedtuple(list_0)
    object_1 = module_0.object(*var_0)


def test_case_10():
    object_0 = module_0.object()
    str_0 = "__name__"
    dict_0 = {str_0: object_0, str_0: object_0}
    list_0 = [dict_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"z\xf2t\x97\xea4\x89\xaa\xbca"
    float_0 = -2670.361953
    dict_0 = {bytes_0: float_0, float_0: bytes_0}
    module_1.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "Fm\n"
    none_type_0 = None
    str_1 = ""
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    object_0 = module_0.object()
    var_1 = module_1.to_namedtuple(var_0)
    module_1.to_namedtuple(str_0)
