# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 80
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"Y*\xd6\xe8\xbd&\x11FW\xa9B9+"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    str_0 = "brj"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    list_0 = []
    str_0 = "{X1@qY;|VhMMoBp\\"
    bool_0 = False
    str_1 = "brj"
    dict_0 = {str_0: bool_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    bytes_0 = b"5\xd5\xd7)\xc0\xf5\x9e\xb8\x89+mgd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    bool_0 = False
    int_0 = 2492
    list_0 = [bool_0, int_0, bool_0]
    tuple_0 = (bool_0, int_0, list_0)
    list_1 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_1)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_2)
    str_0 = "yCb0\x0c"
    dict_1 = {str_0: var_8}
    var_9 = module_0.to_namedtuple(dict_1)
    var_10 = module_0.to_namedtuple(var_8)
    var_11 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_0)
