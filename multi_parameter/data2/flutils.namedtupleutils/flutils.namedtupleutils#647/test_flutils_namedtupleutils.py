# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_2():
    str_0 = "normalize_path"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "Cv)b,MgiMt%"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -616.05487
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "*p-|I"
    dict_0 = {str_0: str_0}
    tuple_0 = ()
    tuple_1 = (str_0, dict_0, tuple_0)
    tuple_2 = (tuple_1, str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "\nO27i"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
