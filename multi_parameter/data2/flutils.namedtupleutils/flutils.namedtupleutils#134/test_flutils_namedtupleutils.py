# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "c"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"~a\x11K\xc9rz\xe7\x1c\x08"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "gr[m/3(\x0b"
    dict_0 = {str_0: str_0}
    tuple_0 = (str_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (ordered_dict_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_1.namedtuple(var_1, tuple_0, rename=tuple_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_1.namedtuple(var_0, list_0, module=none_type_0)


def test_case_10():
    bytes_0 = b"\xb69"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, bytes_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "c\x0c\r"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: set_0, str_0: str_0, str_0: set_0, str_0: set_0}
    tuple_0 = (dict_0,)
    list_0 = [str_0]
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    module_1.namedtuple(list_0, tuple_0)
