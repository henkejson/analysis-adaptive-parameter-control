# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    dict_0 = {bool_0: bool_0, tuple_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xfc\xfc"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "index"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "index"
    str_1 = "__attr_map__ has the attribute %r defined multiple times"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"q\xc6]\xe0"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "v\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    int_0 = -2295
    tuple_1 = (tuple_0, tuple_0, int_0)
    bytes_0 = b"\x87"
    list_1 = [tuple_1, var_0, tuple_1, str_0]
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    dict_1 = {tuple_0: list_0}
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bytes_0)
