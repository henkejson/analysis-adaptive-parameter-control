# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 739
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "X10!,Bkrw?>'K{{}"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "license"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "validate_ideYntifier"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "+w5z93^H7 vbd^mX3?f"
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    dict_0 = {}
    bool_0 = False
    tuple_0 = (dict_0, dict_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    object_0 = module_2.object()
    var_4 = module_0.to_namedtuple(var_3)
    dict_1 = {var_1: var_1, var_2: var_3, var_2: ordered_dict_0}
    var_5 = module_0.to_namedtuple(dict_1)
    var_6 = module_0.to_namedtuple(dict_1)
    var_7 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(object_0)


def test_case_10():
    bytes_0 = b"\xfd\xd6\xaf\xc9"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, dict_0]
    list_1 = [list_0, dict_0, bytes_0]
    module_0.to_namedtuple(list_1)


def test_case_11():
    str_0 = "\tvalidate_identifier"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {}
    bool_0 = False
    tuple_0 = (dict_1, dict_1, dict_1, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_1)
    none_type_0 = None
    var_4 = module_0.to_namedtuple(dict_1)
    ordered_dict_1 = module_1.OrderedDict()
    object_0 = module_2.object()
    var_5 = module_0.to_namedtuple(var_4)
    dict_2 = {var_2: object_0, none_type_0: var_4, none_type_0: ordered_dict_1}
    var_6 = module_0.to_namedtuple(dict_2)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(none_type_0)
