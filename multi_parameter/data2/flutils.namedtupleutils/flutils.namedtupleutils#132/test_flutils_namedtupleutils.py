# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -105
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -107
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "L]e|5t+d"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "initial_indent_len"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "initial_indent_len"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "piiFPC8\\w9"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "initial_indent_len"
    str_1 = "X|\x0cc24"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, str_1: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    int_0 = 1024
    dict_0 = {int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    int_1 = -105
    module_0.to_namedtuple(int_1)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(ordered_dict_0)
    var_7 = module_0.to_namedtuple(var_4)
    bytes_0 = b"]\xed\xc9\x84k\xaf#_S\xdb"
    var_8 = module_0.to_namedtuple(var_4)
    var_9 = module_0.to_namedtuple(var_6)
    str_0 = "B"
    dict_0 = {bytes_0: bytes_0, str_0: str_0}
    var_10 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\tk"
    str_1 = "B)"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, str_1: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
