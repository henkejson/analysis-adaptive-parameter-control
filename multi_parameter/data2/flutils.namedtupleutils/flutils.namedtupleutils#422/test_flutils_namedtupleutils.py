# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 2921.623647
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    list_0 = [dict_0, float_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "is_subclass_of_any"
    module_0.to_namedtuple(str_0)


def test_case_4():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_5():
    str_0 = "RJ\"z_2A1ol[N'2%/X"
    str_1 = "f"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: ordered_dict_0, str_0: str_0, str_1: str_0, str_0: ordered_dict_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "f"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: ordered_dict_0, str_0: str_0, str_0: str_0, str_0: ordered_dict_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"@\x10"
    int_0 = 2883
    dict_0 = {bytes_0: int_0, bytes_0: bytes_0, int_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = " qV"
    int_0 = -1357
    str_1 = "RJ\"z_2A1ol[N'2%/X"
    str_2 = "f"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: int_0, str_1: str_1, str_2: str_0, str_0: ordered_dict_0}
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_1, int_0, int_0, ordered_dict_1)
    tuple_1 = (tuple_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_2)
