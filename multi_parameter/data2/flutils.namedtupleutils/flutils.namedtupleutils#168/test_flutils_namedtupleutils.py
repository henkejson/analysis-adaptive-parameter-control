# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [bool_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_2():
    str_0 = "C"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "_u+y+"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    tuple_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = -1580
    dict_0 = {int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "C"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    list_0 = []
    tuple_0 = (list_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    bytes_0 = b";\x8d\xa8\x1aM\xa3\x04\xd0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "bJf%c\td\\=1KU||E)H#"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_14():
    str_0 = "\x0cQ"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0]
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = []
    bytes_0 = b"/\xa5\x1d\xea|<AO\xbd"
    var_2 = module_0.to_namedtuple(dict_0)
    list_2 = [bytes_0, var_1, bytes_0, var_2]
    var_3 = module_0.to_namedtuple(list_2)
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_4)
