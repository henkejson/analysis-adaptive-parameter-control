# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -1890
    module_0.to_namedtuple(int_0)


def test_case_1():
    set_0 = set()
    tuple_0 = (set_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "attr_map"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "AId[/M\x0cZ_YGjfJ}j^S0j"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    complex_0 = 87.8581 + 28.770042j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xa6T\x01\xca\xd5\x7f\x86\x92{\xf6w\xd6\xa7"
    module_0.to_namedtuple(bytes_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "attr_map"
    str_1 = "'"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = ()
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(tuple_0)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(var_2)
    var_9 = module_0.to_namedtuple(ordered_dict_0)
    var_10 = module_0.to_namedtuple(var_9)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"\x13\x14\xd9\xa2\x88\xc2\x11\x813\xd5\xcaQ\x87"
    int_0 = 2185
    tuple_0 = (int_0, int_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: tuple_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "pos"
    none_type_0 = None
    str_1 = "e<*noH"
    str_2 = "f?6\x0cR"
    str_3 = "qKr5M}  ao"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_4 = "\tlqSh"
    ordered_dict_1 = module_1.OrderedDict()
    dict_1 = {str_4: str_4, str_4: ordered_dict_1}
    tuple_0 = (dict_1, str_4)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(ordered_dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    module_1.OrderedDict(*var_0)
