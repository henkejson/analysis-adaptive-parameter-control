# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 5854.613
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 2227.0
    set_0 = {float_0, float_0}
    bytes_0 = b"\xd5\xbd\xe2\x19\x1aS\xa6\xecc"
    dict_0 = {float_0: set_0, bytes_0: bytes_0, bytes_0: float_0, float_0: bytes_0}
    tuple_0 = (set_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "W\r_~)"
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: str_0, str_0: tuple_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "$j~q6Q17L"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = ".Z{F&$_ r)E;"
    list_0 = [str_0, str_0]
    var_2 = module_0.to_namedtuple(list_0)
    int_0 = 1
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(int_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    int_0 = 1
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(int_0)


def test_case_11():
    list_0 = []
    str_0 = "unicode_escape"
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_2, str_0, module=var_3)


def test_case_12():
    list_0 = []
    str_0 = "unicode_escape\x0c"
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(list_0)
    list_1 = [var_2]
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_0)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(var_0)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_1)
    var_11 = module_0.to_namedtuple(var_9)
    var_12 = module_0.to_namedtuple(var_7)
    var_13 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    list_2 = [list_0, str_0, var_8, ordered_dict_0]
    var_14 = module_0.to_namedtuple(list_2)
    var_15 = module_0.to_namedtuple(list_2)
    var_16 = module_0.to_namedtuple(list_2)
    bool_0 = False
    module_0.to_namedtuple(bool_0)
