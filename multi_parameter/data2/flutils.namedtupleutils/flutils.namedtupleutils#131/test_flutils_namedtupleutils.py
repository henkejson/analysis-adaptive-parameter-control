# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 1140
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "P"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "C!*V7e(:@"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = ':vWaL(iJ<n3" WIl'
    str_1 = "r26{P\x0c"
    list_0 = []
    dict_0 = {str_0: str_0, str_1: str_0, str_1: list_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_2 = "-*B"
    module_0.to_namedtuple(str_2)


def test_case_10():
    bool_0 = True
    bytes_0 = b"9O\x94\xff\x1e\x17*\xae\xd4\xd6\x1e\xf4\x1d\xae\x12"
    tuple_0 = (bool_0, bytes_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: var_0, tuple_0: bool_0, bytes_0: var_0, var_0: var_0}
    list_0 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "\rt4z6"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    tuple_0 = (bool_0,)
    dict_1 = {tuple_0: bool_0}
    tuple_1 = (dict_1, tuple_0, bool_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    bool_1 = False
    list_0 = [var_2, bool_1]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(dict_0)
    var_7 = module_0.to_namedtuple(tuple_0)
