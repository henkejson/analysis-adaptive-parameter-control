# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ">8qvv![\rO"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    int_0 = 70
    tuple_0 = (dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "pos"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "."
    str_1 = ";^mfp'6\r=fAq\x0bp"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    complex_0 = 1123.7 + 2067.99j
    float_0 = -262.121
    dict_0 = {complex_0: float_0}
    str_0 = "The given 'identifier' cannot be empty"
    tuple_0 = (complex_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "pos"
    dict_1 = {str_1: str_1}
    var_1 = module_0.to_namedtuple(dict_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_0)
    bytes_0 = b"$\x93\x9d\xbbo\x0bh\xf0\x8e\xf4i"
    var_5 = module_0.to_namedtuple(tuple_0)
    dict_2 = {complex_0: complex_0, bytes_0: var_5}
    module_0.to_namedtuple(dict_2)


def test_case_11():
    complex_0 = 1123.7 + 2067.99j
    float_0 = -262.121
    dict_0 = {complex_0: float_0}
    str_0 = "The given 'identifier' cannot be empty"
    tuple_0 = (complex_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "po\n"
    dict_1 = {str_1: str_1}
    var_1 = module_0.to_namedtuple(dict_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_3)
    tuple_1 = (str_1, dict_1, ordered_dict_0, var_0)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_0)
