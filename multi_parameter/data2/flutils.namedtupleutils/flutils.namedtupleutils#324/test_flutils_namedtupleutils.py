# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = -1404.5
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = -947.892903
    tuple_0 = (float_0,)
    list_0 = [tuple_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = '"'
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "dvLv"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    bytes_0 = b"@\x05\xc9\xe4k\x1b\xca"
    str_0 = "1A'U?-8d\tEe{T"
    tuple_0 = (dict_0, bytes_0, str_0, dict_0)
    tuple_1 = (tuple_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "}v3Y'-&!u\tMEA_389(R"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    str_0 = "}v3Y'-&!u\tMEA_389(R"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    int_0 = 5
    float_0 = -2948.02
    dict_0 = {int_0: int_0, int_0: int_0, float_0: int_0}
    tuple_0 = (int_0, int_0, int_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "dvL"
    list_0 = [str_0, str_0]
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(list_0)
    dict_1 = {str_0: list_0}
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = "\x0ccztyv\n"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(**var_0)


def test_case_13():
    bytes_0 = b"^\xfbdu\x8a\xb7\xcc\xf7@|\x91\xac\xbb"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_0)
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (bytes_0, bool_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)
