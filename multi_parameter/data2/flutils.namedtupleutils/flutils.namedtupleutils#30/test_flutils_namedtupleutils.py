# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 1154
    list_0 = [int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_2():
    bool_0 = False
    str_0 = "EC"
    dict_0 = {str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "ZFICSwG$9#4"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    str_0 = "EC"
    dict_0 = {bool_0: bool_0, str_0: bool_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    bool_0 = True
    str_0 = "%>j]w\x0cef,z3tHPl"
    complex_0 = 4981.21 - 574.98396j
    bool_1 = False
    tuple_0 = (bool_0, str_0, complex_0, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(complex_0)


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "Y#"
    dict_0 = {str_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "c3BUR\x0b"
    str_1 = ">Xw\nG\nu2G8m7"
    str_2 = "E~W6weD?i>l2<6V'"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_2: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_1)
    complex_0 = -181.397032 - 1603.294j
    module_0.to_namedtuple(complex_0)


def test_case_11():
    bytes_0 = b"x\x0f\x8b\x14\xfc\x1c\xf9 \x18\xa3_\xd0qc\xb6a\x98\xdaR"
    str_0 = " "
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: str_0}
    module_0.to_namedtuple(dict_0)
