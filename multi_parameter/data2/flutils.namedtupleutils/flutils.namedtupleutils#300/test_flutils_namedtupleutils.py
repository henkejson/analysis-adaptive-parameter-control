# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 1713.7891
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "fL_"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "ssu(%f-&1m\x0c\\7"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"\xabr\x97,\xd6Q\xe2\xdf\xa2Q\x8c\xea"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (bytes_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    bytes_0 = b"\x85\xa9\x17\xc8<\xe2=E^z\x03I\xdee2`\xcf\xa5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    float_0 = 1711.856239811437
    float_1 = 1855.9
    dict_0 = {float_0: float_0, float_1: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)


def test_case_11():
    bool_0 = True
    str_0 = "LRJ~xr0ELW0irP=F&"
    dict_0 = {str_0: bool_0}
    tuple_0 = (bool_0, str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (tuple_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    list_0 = []
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(list_0)


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "3WB}IEi{"
    set_0 = set()
    tuple_0 = (dict_0, str_0, bool_0, set_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_1 = True
    str_1 = "\rfL_"
    dict_1 = {str_1: bool_1}
    tuple_1 = (bool_1, str_1, dict_1)
    var_3 = module_0.to_namedtuple(tuple_1)
    var_4 = module_0.to_namedtuple(tuple_0)
    tuple_2 = (tuple_1,)
    var_5 = module_0.to_namedtuple(tuple_2)
    list_0 = []
    var_6 = module_0.to_namedtuple(list_0)
    var_7 = module_0.to_namedtuple(var_5)
    module_0.to_namedtuple(bool_1)
