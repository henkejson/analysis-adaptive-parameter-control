# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "v"
    var_0 = module_1.namedtuple(str_0, str_0)
    dict_0 = {str_0: str_0, str_0: var_0}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "__cherry_pick__"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    float_0 = 474.72823
    int_0 = -405
    dict_0 = {float_0: float_0, float_0: float_0, int_0: int_0}
    bytes_0 = b"\xa3\xa3G\x80~\x06\xe4\xffl\xe5*\x1f\xe4\xe6\x7f\xe6\x84"
    tuple_0 = (float_0, dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    str_0 = "O"
    tuple_0 = (dict_0, str_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    str_0 = "jh!H^\x0c\neAT|c_["
    str_1 = "validate_identifier"
    dict_0 = {str_1: str_1, str_0: str_0, str_1: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_1, ordered_dict_0, dict_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)


def test_case_8():
    str_0 = "validate_identifier"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"d\xcf\x86w\xeddx"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    dict_0 = {}
    str_0 = "O"
    tuple_0 = (dict_0, str_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "jh!H^\x0c\neAT|c_["
    str_1 = "validate_identif0ier"
    dict_0 = {
        str_1: str_1,
        str_1: str_1,
        str_0: str_0,
        str_1: str_1,
        str_0: str_0,
        str_1: str_1,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_1)


def test_case_13():
    str_0 = "B|Im."
    str_1 = "\x0bflHs1Lj6"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, ordered_dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = -411
    module_0.to_namedtuple(int_0)
