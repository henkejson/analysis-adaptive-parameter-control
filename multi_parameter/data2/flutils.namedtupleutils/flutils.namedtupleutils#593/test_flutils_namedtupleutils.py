# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1203
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 860
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x12E\x89p\xe12\xdd\xc4\x9b"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "initial_indent_len"
    dict_0 = {str_0: str_0}
    tuple_0 = (dict_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "FhK0>T!9RMjkq}"
    list_0 = [str_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0}
    int_0 = 845
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(int_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(bool_0, dict_0)


def test_case_11():
    bytes_0 = b"#\xd2\xff\xac\xfcM8\x077"
    list_0 = []
    dict_0 = {bytes_0: list_0}
    tuple_0 = ()
    tuple_1 = (list_0, dict_0, tuple_0)
    int_0 = -3036
    tuple_2 = (bytes_0, tuple_1, int_0)
    module_0.to_namedtuple(tuple_2)


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "\x0byE0h"
    list_0 = [dict_0, str_0, bool_0, str_0]
    dict_1 = {str_0: str_0, str_0: str_0, str_0: list_0}
    int_0 = 1625
    list_1 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(dict_1)
    object_0 = module_2.object()
    int_1 = 4815
    tuple_0 = (object_0, var_1, var_3, int_1)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(list_1)
    module_1.namedtuple(tuple_0, var_2, defaults=var_0)
