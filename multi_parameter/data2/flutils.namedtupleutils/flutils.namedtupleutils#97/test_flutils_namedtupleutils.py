# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "K"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    bytes_0 = b"\xa2\xd6\n\xb8\xc6\xa3~\xa0\\\x838\x87\x91\x01\x9b^\xe6>"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    int_0 = 1
    dict_0 = {int_0: int_0, int_0: bytes_0, bytes_0: bytes_0}
    bytes_1 = b"\x0c`\xe4\xa5D\xd0\xf9\xd8~\x1e\xe3Q\x80\xf3\xd3\xd9\x1f"
    tuple_0 = (bytes_0, set_0, dict_0, bytes_1)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    float_0 = 2795.4170399269487
    tuple_0 = (str_0, dict_0, dict_0, float_0)
    list_0 = [tuple_0, float_0, float_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "K"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "K\x0c\t"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    float_0 = 2796.738805
    tuple_0 = (str_0, dict_0, dict_0, float_0)
    list_0 = [tuple_0, float_0, float_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
