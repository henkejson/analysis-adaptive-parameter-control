# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "patch"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xf3\x90N\xd3\xe5D{&\x0b!+\x89\xad\x87\xa4Lg\xe1\x99\xb0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "n"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "%8{>I(cfUCE[7"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = -3274
    module_0.to_namedtuple(int_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "%8{>I(cfUCE[7"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = True
    tuple_0 = (ordered_dict_0, bool_0, ordered_dict_0, bool_0)
    int_0 = -1764
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(int_0)


def test_case_12():
    str_0 = "%8{>I(cfUCE[7"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    bytes_0 = b"\x9b\x86\xa49\x14\x12\xf8\xb9\xa3|\xf8:"
    tuple_0 = (ordered_dict_0, bool_0, ordered_dict_0, bytes_0)
    tuple_1 = (tuple_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    int_0 = -3274
    var_5 = module_0.to_namedtuple(var_1)
    dict_1 = {
        var_1: str_0,
        var_5: ordered_dict_0,
        var_1: var_3,
        var_1: tuple_1,
        int_0: tuple_0,
        bytes_0: ordered_dict_0,
    }
    module_0.to_namedtuple(dict_1)


def test_case_13():
    str_0 = "n "
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    bytes_0 = b"\x86\xa49\x14\x12\xf8\xb9\xa3|\xf8"
    tuple_0 = (ordered_dict_0, bool_0, ordered_dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    int_0 = -1740
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_0)
    dict_1 = {var_4: ordered_dict_0, var_0: var_2, var_0: var_0, int_0: tuple_0}
    var_5 = module_0.to_namedtuple(dict_1)
    module_1.OrderedDict(**ordered_dict_0)
