# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    str_0 = ")M\t?I}*\n|[\rcym#TBlp"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (bool_0, str_0, str_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    str_0 = "FIFO"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = ".\x0cQ\\'<@"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "yk|W-9xx^ys\\!"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(var_5)
    var_10 = module_0.to_namedtuple(var_4)
    var_11 = module_0.to_namedtuple(var_10)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"Oj\xa4\x11Z"
    int_0 = -384
    dict_0 = {bytes_0: bytes_0, int_0: int_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = " u"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)
