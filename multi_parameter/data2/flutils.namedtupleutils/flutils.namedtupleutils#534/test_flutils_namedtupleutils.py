# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "is_subclass_of_any"
    int_0 = -362
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0, int_0: int_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b',\x9e\x90"R\x1d\x06\xed\xe4\xaef;\xb0\x8cK\x8c\xdb'
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "is_subclass_of_any"
    int_0 = -362
    dict_0 = {str_0: str_0, str_0: str_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    set_0 = set()
    dict_0 = {}
    list_0 = [set_0, dict_0]
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "\x0bv((>HKX}"
    int_0 = -374
    dict_0 = {str_0: str_0, str_0: str_0, int_0: str_0}
    tuple_0 = (int_0, str_0, int_0, int_0)
    tuple_1 = (dict_0, int_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    str_0 = "\n.68o$*S L,q8kp C&k$"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b',\x9e\x90"R\x1d\x06\xed\xe4\xaef;\xb0\x8cK\x8c\xdb'
    module_0.to_namedtuple(bytes_0)


def test_case_11():
    bytes_0 = b"\xa7iqc\xa0U\x97R\xecH\xec\xebIS"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\x0bdis_subclass_of_any"
    int_0 = -374
    dict_0 = {str_0: str_0, str_0: str_0, int_0: str_0}
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(dict_0)
    str_1 = "DAuh<"
    tuple_0 = (int_0, str_1, int_0, int_0)
    tuple_1 = (dict_0, int_0, tuple_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    ordered_dict_1 = module_1.OrderedDict()
    tuple_2 = (ordered_dict_1, ordered_dict_0, ordered_dict_1, var_0)
    var_2 = module_0.to_namedtuple(tuple_2)
    var_3 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_1)
