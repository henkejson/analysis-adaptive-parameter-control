# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -404
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -404
    list_0 = [int_0, int_0]
    dict_0 = {int_0: list_0, int_0: int_0, int_0: int_0, int_0: list_0}
    tuple_0 = (dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    int_0 = -404
    list_0 = [int_0]
    dict_0 = {int_0: list_0, int_0: int_0, int_0: int_0, int_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xc0L\n!\xf8"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "vYrA"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    int_0 = 8
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    str_0 = "N)Y\tvM5:\\L8pZTX6"
    str_1 = "__attr_map__ has the attribute %r defined multiple times"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    bytes_0 = b"\x1f8o\xa0\xcc^\xe3\xf9"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0]
    dict_0 = {bytes_0: list_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: list_0}
    tuple_1 = (dict_0, bytes_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    bytes_0 = b"L\n!\xf8"
    float_0 = -55.5
    tuple_0 = (bytes_0, float_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "vYrA\x0c"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
