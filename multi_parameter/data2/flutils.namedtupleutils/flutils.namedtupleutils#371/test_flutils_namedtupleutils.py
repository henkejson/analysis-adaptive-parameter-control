# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0, var_0, var_0)
    list_0 = [var_0, bool_0, var_0, tuple_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "b2AoG8aVjqDy"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "OI*\x0cvr"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "b2AoG8aVjqDy"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    str_0 = "{N+\\?Iz}"
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"A\n"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)


def test_case_11():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "b2C5oG8aVjqDD"
    str_1 = "2YTb!:Ss\x0b(wHk]q<v"
    str_2 = "\nL"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(str_2, tuple_0, defaults=dict_0)
