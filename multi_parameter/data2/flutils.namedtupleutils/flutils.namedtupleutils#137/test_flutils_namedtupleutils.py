# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bytes_0 = b"\x13\xd3"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "a{ld\\F6{'ySx||"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = ")eer\rl"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    bool_0 = False
    dict_1 = {var_0: var_0, var_0: bool_0}
    ordered_dict_1 = module_1.OrderedDict(*list_0, **dict_1)
    list_1 = [ordered_dict_1, ordered_dict_1, dict_1, list_0, str_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    str_0 = "nioeHesae"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = ":nioeHescae"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "icode_esca!e"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()


def test_case_11():
    str_0 = "e\r"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(none_type_0)
