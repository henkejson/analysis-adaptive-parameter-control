# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    int_0 = -673
    tuple_0 = (int_0, int_0)
    var_0 = module_1.to_namedtuple(tuple_0)
    dict_0 = {}
    var_1 = module_1.to_namedtuple(dict_0)
    var_2 = module_1.to_namedtuple(var_0)
    module_0.object(*var_2)


def test_case_2():
    int_0 = -3795
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_1.to_namedtuple(dict_0)
    str_0 = ""
    module_1.to_namedtuple(str_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "b%^D"
    module_1.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "~D[WM61w"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_7():
    str_0 = "python_requires"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    object_0 = module_0.object()


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_2.OrderedDict()
    ordered_dict_1 = module_2.OrderedDict(**ordered_dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    list_0 = [ordered_dict_1, var_0]
    tuple_0 = (list_0, var_0, var_0)
    list_1 = [tuple_0, var_0, ordered_dict_0]
    var_1 = module_1.to_namedtuple(list_1)


def test_case_11():
    bool_0 = True
    bytes_0 = b"4\xca\xe6\xfb\xeb.m\xda\xfd\x02\x00\xf2"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bytes_0: bool_0}
    module_1.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = False
    str_0 = "\nython_requires"
    dict_0 = {str_0: bool_0, bool_0: str_0, str_0: bool_0}
    bool_1 = False
    tuple_0 = (bool_0, str_0, dict_0, bool_1)
    var_0 = module_1.to_namedtuple(tuple_0)
    var_1 = module_1.to_namedtuple(var_0)
    list_0 = []
    var_2 = module_1.to_namedtuple(list_0)
    module_1.to_namedtuple(bool_1)
