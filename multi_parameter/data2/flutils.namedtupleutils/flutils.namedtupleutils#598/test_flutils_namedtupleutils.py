# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    bytes_0 = b"\x15E\xb3\x13@\xc9\xd7\xf1\x88\x81\x14\xa6\xfa\x91"
    list_0 = [bool_0, bool_0, bool_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    float_0 = 2589.13
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bytes_0 = b'"`'
    list_0 = [dict_0, float_0, float_0, bytes_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"\xecnl\xa1\x15\xd8j<\xd4z\xc8\xbdN"
    str_0 = "lj9\\_VRe"
    list_0 = [bytes_0, bytes_0, bytes_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    float_0 = 2589.13
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bytes_0 = b'"`'
    list_0 = [dict_0, float_0, float_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "<VY'Y\x0cB3\"K=("
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (var_1, var_1, var_1)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"\x8a \xdbW\xac\xf3\xf2\x9a\xf5\x7fk"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "b64"
    str_1 = "__attr_map__ contains an invalid item of: "
    dict_0 = {str_0: str_1, str_0: str_1, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(var_3)
    dict_0 = {var_5: var_3}
    var_6 = module_0.to_namedtuple(dict_0)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_0)
    list_0 = [var_3]
    var_9 = module_0.to_namedtuple(var_7)
    var_10 = module_2.object(*var_9)
    var_11 = module_0.to_namedtuple(var_8)
    var_12 = module_0.to_namedtuple(ordered_dict_0)
    var_13 = module_0.to_namedtuple(var_8)
    var_14 = module_0.to_namedtuple(var_0)
    var_15 = module_0.to_namedtuple(ordered_dict_0)
    var_16 = module_0.to_namedtuple(ordered_dict_0)
    var_17 = module_0.to_namedtuple(list_0)
    str_0 = " b94"
    str_1 = "__attr_map__ contains an invalid item of: "
    dict_1 = {str_0: var_7, var_3: var_10, str_1: var_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    var_18 = module_0.to_namedtuple(dict_1)
    var_19 = module_0.to_namedtuple(var_18)
    bytes_0 = b"~O\xb7n\x8b\x9c"
    module_0.to_namedtuple(bytes_0)
