# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = -774
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "Z"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"id=\xcf\x003\xa1-\x8e\xb5p\x1e\xd8P\x06"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = ",&|3g!\x0cYJ"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    set_0 = {var_0, var_0, var_0}
    none_type_0 = None
    module_1.namedtuple(set_0, none_type_0)


def test_case_7():
    str_0 = "Z"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    float_0 = 562.256
    ordered_dict_1 = module_1.OrderedDict(**ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"A\x8b\x1d\xb1'\x02\x07\xda\\\x82+\xb8\xb5\xa5\x7f<"
    dict_0 = {bool_0: bool_0, bytes_0: bytes_0, bool_0: bytes_0, bool_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "Z "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    dict_2 = {str_0: var_1, var_1: dict_1}
    var_2 = module_0.to_namedtuple(dict_2)
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_1)
    tuple_0 = (dict_1,)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(tuple_0)
    var_8 = module_0.to_namedtuple(var_3)
    var_9 = module_0.to_namedtuple(var_5)
    var_10 = module_0.to_namedtuple(var_9)
    var_11 = module_0.to_namedtuple(var_7)
    var_12 = module_0.to_namedtuple(var_0)
    var_13 = module_0.to_namedtuple(dict_0)
    var_14 = module_0.to_namedtuple(var_9)
    var_15 = module_0.to_namedtuple(var_11)
    var_16 = module_0.to_namedtuple(var_8)
    var_17 = module_0.to_namedtuple(var_9)
    var_18 = module_0.to_namedtuple(var_12)
    var_19 = module_0.to_namedtuple(var_4)
    var_20 = module_0.to_namedtuple(var_19)
    var_21 = module_0.to_namedtuple(dict_2)
    var_22 = module_0.to_namedtuple(var_13)
    var_23 = module_0.to_namedtuple(dict_1)
    ordered_dict_1 = module_1.OrderedDict()
    module_1.namedtuple(tuple_0, var_16, defaults=var_17)
