# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    str_0 = "w"
    dict_0 = {str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    str_0 = "w"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "Wn}Pl3vH0Yd?>'5&*vr"
    int_0 = 1187
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: int_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    float_0 = 1152.0605
    module_0.to_namedtuple(float_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bool_0 = False
    str_0 = "w"
    dict_0 = {str_0: bool_0}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\xf95\x148"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "."
    dict_0 = {str_0: str_0, str_0: bytes_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(*list_0, **dict_0)


def test_case_12():
    tuple_0 = ()
    bytes_0 = b"\x03\xaf5\x9c\xdc\xbe\xce\x83d\x04\x8a\xc5\xc7\x9e"
    dict_0 = {tuple_0: bytes_0, bytes_0: tuple_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "w"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    bool_0 = False
    str_0 = " w"
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {str_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)
