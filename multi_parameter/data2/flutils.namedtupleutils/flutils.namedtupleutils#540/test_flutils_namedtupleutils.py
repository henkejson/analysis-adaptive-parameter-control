# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    list_0 = [tuple_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "\x0b.<Tqf'5q6!VO*K\x0b"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"-y|A\xe8\xb9[\xe0\x06P\x96\x1d\x13\xee*\xea\x13\xab"
    list_1 = [bytes_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(list_1)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "Ij"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object()


def test_case_12():
    bytes_0 = b"^\xbdX\xde\x84\x18\x04\xe5w\x1ek\x1cJ\xaa\x93"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bytes_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {bytes_0: var_1, var_0: var_0, var_0: var_1}
    module_0.to_namedtuple(dict_1)


def test_case_13():
    list_0 = []
    str_0 = "!8\rk|D,3zy\t'}DbWWJj("
    str_1 = "Ij"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_14():
    list_0 = []
    str_0 = "Ij"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_15():
    list_0 = []
    str_0 = "!8\rk|D,3zy\t'}DbWWJj("
    str_1 = "\x0ca_j"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (var_0, var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    bool_0 = True
    dict_1 = {var_1: dict_0, tuple_0: tuple_0, tuple_0: dict_0}
    var_2 = module_0.to_namedtuple(dict_1)
    object_0 = module_2.object()
    module_0.to_namedtuple(bool_0)
