# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    complex_0 = -792.278417 - 208.6j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    int_0 = -813
    dict_0 = {}
    tuple_0 = (int_0, int_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "YnW0]S)ZF?2VLcB $$$"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "YnW0]S)ZF?2VLcB $$$"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "g1"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, dict_0, dict_0, str_0]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_1)
    list_1 = [var_5, var_5, str_0]
    var_7 = module_0.to_namedtuple(list_1)
    var_8 = module_0.to_namedtuple(var_7)
    var_9 = module_0.to_namedtuple(var_4)
    var_10 = module_0.to_namedtuple(list_1)
    var_11 = module_0.to_namedtuple(var_0)
    var_12 = module_0.to_namedtuple(dict_0)
    var_13 = module_0.to_namedtuple(var_4)
    var_14 = module_0.to_namedtuple(list_1)
    var_15 = module_0.to_namedtuple(var_14)
    dict_1 = {var_5: var_15}
    var_16 = module_0.to_namedtuple(var_3)
    var_17 = module_0.to_namedtuple(dict_1)
    var_18 = module_0.to_namedtuple(var_2)
    int_0 = 1929
    module_0.to_namedtuple(int_0)


def test_case_7():
    str_0 = "YnW0]S)ZF?2VLcB $$$"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_2.object(**dict_0)


def test_case_8():
    str_0 = "YnW0]S)ZF?2VLcB $$$"
    dict_0 = {str_0: str_0}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "is_list_like"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_2.object(**dict_0)


def test_case_11():
    str_0 = "is_list_like"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "\x0bv"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, dict_0, dict_0, str_0]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(dict_0)
    list_1 = [var_5, var_5, str_0]
    var_6 = module_0.to_namedtuple(list_1)
    var_7 = module_0.to_namedtuple(var_4)
    var_8 = module_0.to_namedtuple(list_1)
    var_9 = module_0.to_namedtuple(var_0)
    var_10 = module_0.to_namedtuple(dict_0)
    var_11 = module_0.to_namedtuple(var_4)
    var_12 = module_0.to_namedtuple(var_6)
    var_13 = module_0.to_namedtuple(list_1)
    var_14 = module_0.to_namedtuple(var_13)
    dict_1 = {var_5: var_14}
    var_15 = module_0.to_namedtuple(dict_1)
    var_16 = module_0.to_namedtuple(var_2)
    int_0 = 1929
    module_0.to_namedtuple(int_0)


def test_case_13():
    bytes_0 = b"s%\xfd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
