# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_1, bool_1, bool_1]
    tuple_0 = (bool_0, bool_1, bool_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "convert_escaped_unicode_literal"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "%s"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    bytes_0 = b"\xbb\xdd\xa5\xdfD-\xffI\xf3\xefs"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    int_0 = -3225
    str_0 = "K\n"
    dict_0 = {int_0: int_0, int_0: int_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [var_2, var_3, var_3, ordered_dict_0]
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_1.OrderedDict()
    var_8 = module_0.to_namedtuple(var_6)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_12():
    int_0 = -3225
    str_0 = "path/absent"
    dict_0 = {int_0: int_0, int_0: int_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(dict_0, dict_0, rename=var_1)
