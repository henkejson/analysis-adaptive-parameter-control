# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    str_0 = "__class__"
    tuple_0 = (bool_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = True
    str_0 = "unicode_escape"
    dict_0 = {bool_0: str_0, bool_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = ">QD|"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    bool_0 = True
    str_0 = "K/.e\x0b@Mzr(ieECY@]Z"
    dict_0 = {tuple_0: bool_0, bool_0: tuple_0, str_0: tuple_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [bool_0, bool_0, bool_0]
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(dict_0)
    var_8 = module_0.to_namedtuple(list_0)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_9)
    var_11 = module_0.to_namedtuple(var_10)
    list_1 = [var_8]
    var_12 = module_0.to_namedtuple(var_3)
    var_13 = module_0.to_namedtuple(var_3)
    var_14 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(str_0)


def test_case_10():
    bytes_0 = b"\xe2g\xab\x8a:u\xcfB\x97\xe51\xd9"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = True
    str_0 = "\runicGde_escape"
    dict_0 = {var_0: bool_0, bool_0: var_0, str_0: var_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_0)
    list_0 = [bool_0, bool_0, bool_0]
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(list_0)
    str_1 = "@Y;reZSg:+o]``U8<x"
    module_0.to_namedtuple(str_1)
