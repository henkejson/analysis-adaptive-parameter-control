# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 3360
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (int_0, dict_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "p"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "ZBx"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"\x95"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "\tBD?{b3yx\x0cnuZqCrn45p"
    int_0 = -1675
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "p"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "initial_indeRnt_lZ\n"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(*var_0, **var_0)
