# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 2781
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "\x0bF!9Y7\rqd|gkV_L<?"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xa2p\xce\x94ki\xb0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "has_an_callbles"
    tuple_0 = (str_0,)
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: bool_0, tuple_0: tuple_0, tuple_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "has_an_callbles"
    tuple_0 = (str_0,)
    dict_0 = {str_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "+hak~o$b_Kg.1K\r[`k"
    dict_0 = {str_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    float_0 = 1571.9
    str_1 = "has_any_callables"
    tuple_0 = (str_1,)
    bool_0 = False
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_1 = {str_1: bool_0, bool_0: float_0, tuple_0: tuple_0, tuple_0: float_0}
    bytes_0 = b"\x1f\xe5A1\x8e\x00y\xf0H\xf7\x86h\xcb"
    bytes_1 = b"-V\xfdl"
    list_1 = [dict_0, float_0, dict_0]
    tuple_1 = (bytes_1, list_1)
    dict_2 = {float_0: bytes_1, bytes_0: var_0, bytes_0: tuple_1}
    tuple_2 = (bytes_0, dict_1, var_0, dict_2)
    module_0.to_namedtuple(tuple_2)


def test_case_11():
    str_0 = "aYG6Kz\x0b"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {var_0: str_0, var_0: var_0}
    list_0 = [dict_1, dict_0]
    list_1 = [list_0, list_0, dict_0, list_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_1)
    str_1 = "+hak~o$b_Kg.1K\r[`k"
    dict_2 = {str_1: str_1}
    list_2 = [dict_2]
    var_3 = module_0.to_namedtuple(list_2)
    float_0 = 1571.9
    var_4 = module_0.to_namedtuple(list_2)
    list_3 = [float_0, float_0, float_0, float_0, float_0]
    str_2 = "has_any_callables"
    tuple_0 = (str_2,)
    list_4 = [list_3, tuple_0, float_0, str_2]
    bool_0 = False
    var_5 = module_0.to_namedtuple(tuple_0)
    dict_3 = {str_2: bool_0, bool_0: float_0, tuple_0: tuple_0, tuple_0: float_0}
    tuple_1 = (list_4, dict_3, bool_0)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(var_6)
    module_0.to_namedtuple(bool_0)
