# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1584
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xb0\x81\x01\xbc\x92+\xd0\xea\x0b\x93\xb5\xd1$\x98"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "x2N"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "x2N"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = []
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    ordered_dict_0 = module_1.OrderedDict(*var_1)
    list_1 = [var_1, list_0]
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(list_1)


def test_case_8():
    bool_0 = False
    bytes_0 = b"\xd8\xd6\x07p\xe8\xcf/\xb8<\xe7"
    tuple_0 = (bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bytes_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    set_0 = {var_0, var_0, var_0, bool_0}
    module_0.to_namedtuple(set_0)


def test_case_10():
    str_0 = "OLMzK-=^ru9.Iwo-c=i"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    complex_0 = 889.5 + 2062.3j
    tuple_0 = (ordered_dict_0, complex_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)


def test_case_11():
    bytes_0 = b"i\xb3\x07\xcd\xe2\xca*\xd1z\x06\x13"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, bytes_0]
    int_0 = 1428
    set_0 = set()
    tuple_0 = (list_0, int_0, set_0, bytes_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "x2\r"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_2.object()
    module_0.to_namedtuple(var_1)
