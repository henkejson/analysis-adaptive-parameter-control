# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    int_0 = -1085
    module_0.to_namedtuple(int_0)


def test_case_1():
    object_0 = module_1.object()
    tuple_0 = ()
    dict_0 = {object_0: object_0, object_0: tuple_0, object_0: object_0}
    list_0 = []
    tuple_1 = (object_0, dict_0, list_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    str_0 = "`$G8u`.nR/d.\x0cBl"
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "path_absent"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x7f\xacz\xbb\x03\x9a\xe8\\\x1c\xe0\xc8\xd2F"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    float_0 = -215.0
    object_0 = module_1.object()
    dict_0 = {
        float_0: float_0,
        object_0: object_0,
        object_0: object_0,
        object_0: float_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    list_0 = []
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b">"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "<"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_13():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    str_0 = "path_absent\x0c"
    var_3 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_2.OrderedDict(*var_2)
    var_4 = module_0.to_namedtuple(var_2)
    tuple_0 = (var_2, ordered_dict_0)
    var_5 = module_0.to_namedtuple(tuple_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_6 = module_0.to_namedtuple(dict_0)
    module_2.OrderedDict(**var_5)
