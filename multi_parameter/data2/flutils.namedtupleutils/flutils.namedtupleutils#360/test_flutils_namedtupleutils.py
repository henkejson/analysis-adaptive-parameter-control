# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 128
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = False
    list_1 = [list_0, bool_0, list_0, bool_1]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "latin1"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "latin1"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = 't_r&A"aHb'
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = 't_r&A"aHb'
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    float_0 = -2003.5999877310599
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    str_1 = "latin1"
    dict_1 = {var_3: str_1, str_1: ordered_dict_0, str_0: str_1}
    tuple_0 = (var_1, float_0, var_2, dict_1)
    var_4 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "T5Kin6ly"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"}\xa7\xca\xab\xcd\xc9\xa0\xc4\x91E\xd2\x1cA\x04\xfd3\xdc\xce\x0c\x86"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "D\x0c "
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [var_0, var_0]
    float_0 = -2005.394
    var_1 = module_0.to_namedtuple(dict_0)
    tuple_0 = (list_0, float_0, str_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(ordered_dict_1)
    var_8 = module_0.to_namedtuple(ordered_dict_1)
    module_2.object(**tuple_0)
