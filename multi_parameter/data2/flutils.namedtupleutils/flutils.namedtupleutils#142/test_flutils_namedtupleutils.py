# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_1.to_namedtuple(list_0)
    var_1 = module_1.to_namedtuple(list_0)


def test_case_2():
    str_0 = "C8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "C8"
    module_1.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_5():
    int_0 = 8
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    object_0 = module_0.object()


def test_case_6():
    str_0 = "test_suite"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "C8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_8():
    str_0 = ",EJ\\K2\r:"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    var_2 = module_1.to_namedtuple(var_1)
    ordered_dict_0 = module_2.OrderedDict(*var_2)
    var_3 = module_1.to_namedtuple(ordered_dict_0)
    var_4 = module_1.to_namedtuple(ordered_dict_0)
    var_5 = module_1.to_namedtuple(var_4)
    var_6 = module_1.to_namedtuple(var_4)
    var_7 = module_1.to_namedtuple(var_4)
    var_8 = module_1.to_namedtuple(ordered_dict_0)
    bool_0 = False
    var_9 = module_1.to_namedtuple(var_3)
    tuple_0 = (bool_0, var_4, ordered_dict_0)
    var_10 = module_1.to_namedtuple(var_9)
    var_11 = module_1.to_namedtuple(tuple_0)
    var_12 = module_1.to_namedtuple(dict_0)
    bool_1 = False
    module_1.to_namedtuple(bool_1)


def test_case_9():
    int_0 = 8
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    object_0 = module_0.object()
    var_2 = module_1.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_11():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    var_2 = module_1.to_namedtuple(ordered_dict_0)
    var_3 = module_1.to_namedtuple(var_0)
    var_4 = module_1.to_namedtuple(var_3)
    var_5 = module_1.to_namedtuple(ordered_dict_0)
    var_6 = module_1.to_namedtuple(var_2)
    var_7 = module_1.to_namedtuple(var_0)
    var_8 = module_1.to_namedtuple(var_5)
    var_9 = module_1.to_namedtuple(var_3)
    bytes_0 = b"\xfd$\xa2\xda{?"
    bool_0 = True
    dict_0 = {var_0: var_1, var_3: bytes_0, bytes_0: bool_0, var_5: var_2}
    module_1.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\rs0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = module_1.to_namedtuple(dict_0)
    var_0 = module_1.to_namedtuple(tuple_0)
    var_1 = module_1.to_namedtuple(dict_0)
    var_2 = module_1.to_namedtuple(var_1)
    module_1.to_namedtuple(str_0)
