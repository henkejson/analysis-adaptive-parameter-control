# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1955
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "underscore_to_camel"
    int_0 = 2413
    dict_0 = {str_0: str_0, int_0: str_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "J{e[kqy,\"Jev6M'R("
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "0%7xBj_*?"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bytes_0 = b"\xa2\xad\xd0\x8583\xc7\x95"
    int_0 = -2210
    dict_0 = {bytes_0: int_0, bytes_0: int_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"<\x0c\x05\r\xe1\xd4\x07%\t\x07\xae\xdf"
    list_0 = [bytes_0]
    list_1 = [list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_11():
    str_0 = "J{e[kqy,\"Jev6M'R("
    int_0 = 2416
    dict_0 = {str_0: str_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = "underscore_to_camel"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\tX"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\xd9O\x04"
    module_0.to_namedtuple(bytes_0)
