# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "Vo"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "append"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    int_0 = 4015
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, int_0, rename=var_0, defaults=var_0)


def test_case_6():
    str_0 = "WxIwfx#N\x0cQ[\r"
    set_0 = {str_0, str_0, str_0}
    bool_0 = False
    tuple_0 = (str_0, set_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "Zrd=|B06\r"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    str_0 = "Vo"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "V\r"
    none_type_0 = None
    str_1 = "eUl|E J!)Gh ES"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [str_0, ordered_dict_0, str_0, str_1, str_1]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = (var_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_1)


def test_case_12():
    bytes_0 = b"[\x1c\xe1\x06\x13\xaa\xf3 m\x03\xf8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    list_0 = [dict_0, bool_0, bytes_0]
    module_0.to_namedtuple(list_0)
