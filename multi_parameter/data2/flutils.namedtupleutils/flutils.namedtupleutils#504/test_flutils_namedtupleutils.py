# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 3888
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_1.OrderedDict(*none_type_0)


def test_case_2():
    str_0 = "_y4'(&@bWu(<HYdp,-"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x9cj1\x89\xa5\xe6\xd5\x9f\x11\x1a\x0cj\xa1\xc6\x1a\xbc\xb0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    none_type_0 = None
    complex_0 = -5010.77 + 405.50238j
    dict_0 = {none_type_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"M"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "q_file__"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = " m"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    list_0 = []
    var_3 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)


def test_case_13():
    object_0 = module_2.object()
    bytes_0 = b""
    dict_0 = {object_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, object_0: object_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    module_0.to_namedtuple(list_0)
