# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -123
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"\xff"
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xd3\x88\xfb#\xaa$\x96T5\x1et"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"O\xa5\xa2\x94"
    str_0 = "download_url"
    dict_0 = {str_0: bytes_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    int_0 = -1452
    str_0 = "K$Q\nwvM*]>4sc\\-~09"
    set_0 = {int_0}
    tuple_0 = (int_0, int_0, str_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "__attr_map__ must be a tuple not %r"
    str_1 = "iZ1(+,%5Q\nm3CQZtKkl"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_1, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    complex_0 = 3801.981 - 2107.0523j
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(complex_0, complex_0, rename=complex_0)


def test_case_11():
    bytes_0 = b"O\x947"
    float_0 = 118.196929
    str_0 = "\rzO|,:.X<)Ne$jf_~jx"
    bytes_1 = b">\xcb\x84|i\x9a\xe8`\xfeY]\xec\x9f\xbe."
    tuple_0 = (bytes_0,)
    dict_0 = {str_0: bytes_1, bytes_0: str_0}
    tuple_1 = (str_0, str_0, bytes_1, tuple_0)
    tuple_2 = (tuple_1, dict_0)
    tuple_3 = (bytes_0, bytes_0, float_0, tuple_2)
    module_0.to_namedtuple(tuple_3)


def test_case_12():
    bytes_0 = b"O\xa5\xa2\x94"
    float_0 = 131.30634437567502
    str_0 = "\rwlAad_Url"
    dict_0 = {str_0: bytes_0}
    tuple_0 = (dict_0, dict_0)
    tuple_1 = (bytes_0, bytes_0, float_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)
