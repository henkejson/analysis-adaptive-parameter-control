# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    int_0 = 20
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (int_0, dict_0)
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_2():
    complex_0 = 1356.77 - 2469.3396j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x91\xcf\xe3]\x85>m\xf6`\xcf\xc0\xb7\xb2k\x0f\x05\x8eS"
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"F7\xd35\xb5\x0e}\n\x93\xb3\xb7q\xf4\x15\x98M\xe5"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_1.to_namedtuple(list_0)
    var_1 = module_1.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "as_escaped_unicode_literal"
    str_1 = ":\x0bN[|H\tD75"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b'E"\xda;V\x14/\xd6.\xb7@'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -830
    tuple_0 = (dict_0, bytes_0, int_0, int_0)
    module_1.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "as_escaped_unicode_literal"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_13():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)
    bytes_0 = b""
    bool_0 = False
    str_0 = "i\x0b"
    dict_0 = {str_0: bytes_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    tuple_1 = (bytes_0, bool_0, ordered_dict_0)
    var_1 = module_1.to_namedtuple(tuple_1)
    module_1.to_namedtuple(bool_0)
