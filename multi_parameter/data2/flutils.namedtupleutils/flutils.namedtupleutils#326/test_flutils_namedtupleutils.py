# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 264.6
    module_0.to_namedtuple(float_0)


def test_case_1():
    complex_0 = -427.321 - 1994.84826j
    list_0 = [complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "W7J\\UW}/=0Ne~="
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "CwN-OYBkGL*<"
    int_0 = 3584
    dict_0 = {int_0: int_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_10():
    bytes_0 = b"\xc9)*\xa3\xef\xcdp\x00I"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "CwN-OYBkGL*<"
    int_0 = 3584
    dict_0 = {int_0: int_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (str_0, int_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "exists_as"
    float_0 = -1092.6
    dict_0 = {float_0: float_0, str_0: str_0}
    tuple_0 = (str_0, dict_0, float_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_13():
    str_0 = "exist_as"
    bool_0 = True
    dict_0 = {bool_0: bool_0, str_0: str_0}
    tuple_0 = (str_0, bool_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    str_0 = "\x0bycexists_as"
    bool_0 = True
    float_0 = -1092.6
    dict_0 = {float_0: float_0, str_0: str_0}
    tuple_0 = (str_0, bool_0, float_0, dict_0)
    bool_1 = True
    bytes_0 = b"\xc3\xf4Q\xc2\x84\xf7\xf7\x9a\xbf\xfdnp3\x01\x15\xc5"
    tuple_1 = (tuple_0, bool_1, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    dict_1 = {}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
