# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 143
    module_0.to_namedtuple(int_0)


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "eO"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "wi<O~d}!m"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bool_0 = False
    bytes_0 = b"j\xc4\x91\x90\x84B\xd9"
    int_0 = -589
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bool_0: int_0}
    tuple_0 = (bool_0, dict_0, bytes_0)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = " substituted in sys.modules during a lazy load"
    dict_0 = {str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = True
    module_1.namedtuple(bool_0, bool_0)


def test_case_10():
    str_0 = "eO"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bool_0 = False
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    object_0 = module_2.object(*var_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(dict_0)
    str_0 = "\nt"
    list_0 = [var_0, object_0, str_0]
    dict_1 = {var_2: object_0, bool_0: bool_0, bool_0: bool_0, str_0: list_0}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_2.object(*var_2)
    bytes_0 = b"\xb7\xcdC\xfa\xc3\xf4"
    var_6 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bytes_0)
