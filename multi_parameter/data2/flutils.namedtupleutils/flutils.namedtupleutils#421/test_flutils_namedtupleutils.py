# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 714.0
    tuple_0 = (float_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bytes_0 = b"\xd3U\xaf"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xfcF\xf8"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, dict_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_8():
    str_0 = "strict"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "strict"
    str_1 = ",9 <^n\\h`~3~\n|"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_0: str_0}
    bool_0 = True
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)


def test_case_12():
    str_0 = "strict"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "strict"
    str_1 = "XJ\\c`I8?z1i/hv"
    str_2 = "The name of the cherry-picked module attribute; can be an empty str."
    str_3 = "\x0cl"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_3: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_1, bool_0]
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(list_0)
