# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    tuple_0 = (bool_0, list_0, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "r"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xc8\xb7\xb2\xdfM"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    tuple_1 = (tuple_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = [tuple_0, tuple_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "r"
    str_1 = ".3)G/\x0b0^"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = "r"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"\xf7\x1f5\xfcg\xd8N\x89\x00N[\x98\x85\xf3"
    object_0 = module_2.object()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, object_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    object_0 = module_0.to_namedtuple(var_0)
    str_0 = "\x0bp"
    str_1 = ".3)G/\x0b0^"
    dict_0 = {
        str_0: var_0,
        object_0: var_0,
        str_0: object_0,
        object_0: var_0,
        str_0: object_0,
        str_1: var_0,
    }
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(tuple_0)
