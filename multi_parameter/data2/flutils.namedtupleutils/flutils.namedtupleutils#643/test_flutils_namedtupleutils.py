# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -1182
    bytes_0 = b"\xd4\xa7\x04\xcb"
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_1}
    tuple_0 = (int_0, bytes_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    list_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\xa3\xb3"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "minor"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)


def test_case_6():
    str_0 = "7_]k4KYv1r,j"
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "minor"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"`\x0b\xf5\xf7\xb0\x1e/e"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(list_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "__%s__"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_2)
    complex_0 = 2076.34 - 721.92924j
    tuple_1 = (var_1, complex_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_0.to_namedtuple(var_6)
    var_9 = module_0.to_namedtuple(tuple_1)
    var_10 = module_0.to_namedtuple(tuple_1)
    var_11 = module_0.to_namedtuple(var_6)
    var_12 = module_0.to_namedtuple(var_4)
    var_13 = module_0.to_namedtuple(var_7)
    var_14 = module_0.to_namedtuple(tuple_1)
    var_15 = module_0.to_namedtuple(var_9)
    bool_0 = False
    var_16 = module_0.to_namedtuple(var_7)
    var_17 = module_0.to_namedtuple(var_13)
    module_0.to_namedtuple(bool_0)


def test_case_12():
    str_0 = "\tMs"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
