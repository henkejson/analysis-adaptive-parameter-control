# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 2
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = False
    tuple_0 = (int_0, int_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    int_0 = 2
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = ","
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "is_subclass_of_any"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    int_0 = 2
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    int_0 = 2
    bytes_0 = b'7r\xba\xeb\xf0"\xdeS\x83yQ\xb0'
    dict_0 = {
        int_0: int_0,
        int_0: bytes_0,
        int_0: int_0,
        bytes_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "B:sIgYr+Q&E"
    str_1 = "is_subclass_of_any"
    dict_0 = {str_1: str_1, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "is_subclass_of_any"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    str_0 = "H=wc"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: bool_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    int_0 = 4
    str_1 = "d7n\rX=\x0ca@P9~r$"
    str_2 = "B:sIgYr+][Q&E"
    str_3 = "\x0bs_subclaHs_of_any"
    dict_1 = {str_1: str_1, str_2: str_2, str_3: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    tuple_1 = (int_0, int_0, ordered_dict_0, ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    bool_1 = False
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_1)
