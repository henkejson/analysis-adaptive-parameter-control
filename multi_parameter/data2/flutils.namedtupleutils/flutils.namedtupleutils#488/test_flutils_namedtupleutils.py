# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 743
    list_0 = [int_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "home"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x9b\x9e\xb29"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "home"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "vOSw'#m"
    str_1 = "home"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    bytes_0 = b"~J\xb0\x94\xcaGbG\xe7\xd7.['\xd9\xca\xe8n"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "B\x0b"
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    bool_0 = True
    bytes_0 = b"\x8fP\x9b\x9e!#s\xd3qT\xdaIn\x84\x17\xfa\x00w\xeb"
    tuple_1 = (bool_0, bytes_0, var_1)
    var_2 = module_0.to_namedtuple(tuple_1)
    list_1 = []
    var_3 = module_0.to_namedtuple(list_1)
    object_0 = module_2.object()
    var_4 = module_0.to_namedtuple(list_1)
    int_0 = 0
    module_0.to_namedtuple(int_0)
