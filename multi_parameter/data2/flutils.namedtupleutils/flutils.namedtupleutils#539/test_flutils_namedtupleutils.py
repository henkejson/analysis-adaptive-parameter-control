# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    complex_0 = 1350.09 - 2206.98j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1, bool_0)
    tuple_1 = (bool_0, bool_0, tuple_0)
    str_0 = "L"
    list_0 = [tuple_0]
    tuple_2 = (tuple_1, str_0, list_0, bool_1)
    var_0 = module_0.to_namedtuple(tuple_2)
    bool_2 = False
    bool_3 = True
    dict_0 = {bool_2: var_0, bool_2: bool_3}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "KP6wKZ"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "descriptLion"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    bytes_0 = b"8\"\xd6\xf7\xd2\x8a\xd1o\x9b\xdef5\xc12f\x1c\xc3N'!"
    object_0 = module_2.object()
    dict_0 = {bytes_0: bytes_0, object_0: bytes_0}
    list_0 = [dict_0]
    bool_0 = True
    tuple_0 = (bytes_0, list_0, list_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "descriptLion"
    str_1 = "\r1BE-(\x0c}Qvp$l2MG*"
    dict_0 = {str_0: str_1, str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "descriptLion"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "descriptLion"
    str_1 = "\x0cmZZV"
    str_2 = "\r1oBE-(}Qvp$\\2MG*"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_2: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    list_1 = [list_0, str_2, str_2]
    var_0 = module_0.to_namedtuple(list_1)
    list_2 = [var_0, var_0, var_0]
    var_1 = module_0.to_namedtuple(list_2)
    tuple_0 = ()
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_1.OrderedDict(**dict_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"\x13"
    tuple_1 = (bytes_0,)
    var_5 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(str_1)
