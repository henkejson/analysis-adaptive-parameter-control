# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.decorators as module_0


def test_case_0():
    none_type_0 = None
    str_0 = "tXAV`iW'aMwe^\x0c6!iI\n0"
    tuple_0 = (str_0,)
    cached_property_0 = module_0.cached_property(tuple_0)
    var_0 = cached_property_0.__get__(none_type_0, none_type_0)


def test_case_1():
    str_0 = "Wraps the single paragraph in the given ``text`` so every line is\n        at most ``width`` characters long. All wrapping options are taken\n        from instance attributes of the\n        :obj:`~flutils.txtutils.AnsiTextWrapper` instance.\n\n        Args:\n            text (str): The text to be wrapped.\n\n        Returns:\n            A ``List[str]`` of output lines, without final newlines.\n            If the wrapped output has no content, the returned list is\n            empty.\n        "
    cached_property_0 = module_0.cached_property(str_0)
    cached_property_0.__get__(str_0, cached_property_0)


def test_case_2():
    str_0 = "Wraps the single paragraph in the given ``text`` so every line is\n        at most ``width`` characters long. All wrapping options are taken\n        from instance attributes of the\n        :obj:`~flutils.txtutils.AnsiTextWrapper` instance.\n\n        Args:\n            text (str): The text to be wrapped.\n\n        Returns:\n            A ``List[str]`` of output lines, without final newlines.\n            If the wrapped output has no content, the returned list is\n            empty.\n        "
    cached_property_0 = module_0.cached_property(str_0)
