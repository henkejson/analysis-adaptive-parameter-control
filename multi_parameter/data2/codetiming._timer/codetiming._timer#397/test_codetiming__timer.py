# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "Fndc*6q!Dz3\nOf"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    str_0 = "+ktfBRwv!\t#_1yftmb"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(str_0, str_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    bytes_0 = b"\xc2!i\xa3@_\x8c"
    dict_0 = {}
    timer_error_0 = module_0.TimerError(*bytes_0, **dict_0)
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=dict_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_1.field(hash=dict_0)


def test_case_7():
    str_0 = "Fnd@k*6q!D)(3\nf"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_8():
    str_0 = "_fjkFTEBpX\t83"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_9():
    str_0 = "Fnd@k*6q!D)(3\nf"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(timer_0, initial_text=timer_0, logger=str_0)
    timer_1.__enter__()


def test_case_10():
    str_0 = "Fnd@k*6q!D)(3\nf"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(text=str_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_0.stop()


def test_case_11():
    str_0 = "Fnd@k*6q!D)(3\nf"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
