# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    complex_0 = 493.9117686016847 + 1585.033j
    timer_0 = module_0.Timer(initial_text=complex_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.dataclass(repr=timer_0, match_args=timer_0)


def test_case_4():
    str_0 = ".Ufo#Gh_T>sNam"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    var_1 = var_0.__len__()
    var_1.__contains__(var_0)


def test_case_5():
    complex_0 = 511 + 1585.033j
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer(initial_text=complex_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    str_0 = "qC~_ |~(\x0cBEf\x0b\n:v(JD2"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    float_0 = 2605.412
    var_0 = timer_0.__eq__(float_0)
    none_type_1 = timer_0.start()
    float_1 = timer_0.stop()
    timer_1 = module_0.Timer(none_type_0, logger=none_type_0)
    timers_0 = module_2.Timers()
    var_1 = timer_1.__eq__(none_type_1)
    var_2 = timers_0.__iter__()
    var_2.setdefault(timer_1)


def test_case_7():
    complex_0 = 511 + 1585.033j
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(complex_0)
    var_0 = timer_0.__call__(timer_error_0)
    none_type_0 = None
    var_0.__call__(none_type_0)


def test_case_8():
    complex_0 = 493.9117686016847 + 1585.033j
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    str_0 = "Z~p&L&I^xW7RW@?%MH"
    timer_0 = module_0.Timer(str_0, initial_text=complex_0)
    var_0 = timer_0.__call__(str_0)
    var_0.__call__(complex_0)


def test_case_9():
    complex_0 = 493.9117686016847 + 1585.033j
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer(initial_text=complex_0)
    timer_1 = module_0.Timer(text=timer_0)
    var_0 = timer_1.__call__(dict_0)
    none_type_0 = None
    var_0.__call__(none_type_0)
