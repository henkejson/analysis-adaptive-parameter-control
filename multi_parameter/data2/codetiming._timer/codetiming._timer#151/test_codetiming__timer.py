# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_4():
    str_0 = "S6z;0+"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    str_0 = "S6z;0+"
    none_type_3 = timer_0.start()
    dict_0 = {str_0: none_type_3}
    module_0.FloatArg(*none_type_3, **dict_0)


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0)
    var_0 = timer_0.__eq__(float_arg_0)
    timer_1 = module_0.Timer(var_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    var_1 = timer_1.__eq__(var_0)
    timer_error_0 = module_0.TimerError()
    timer_1.stop()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    str_0 = "S6z;0+"
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=none_type_0, initial_text=timer_0, logger=timer_0)
    var_0 = timer_0.__call__(timer_0)
    timer_2 = timer_1.__enter__()
    list_0 = [timer_0, none_type_0]
    var_1 = timer_1.__eq__(list_0)


def test_case_9():
    float_0 = 4129.86
    str_0 = "Nw>G"
    str_1 = "@mu=q=\t%S~H@L>Q^XL"
    timer_0 = module_0.Timer(str_1, initial_text=float_0)
    timer_1 = timer_0.__enter__()
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    user_dict_0 = module_1.UserDict(**dict_0)
    var_0 = user_dict_0.__contains__(float_0)
    var_0.update()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    timer_1.start()
