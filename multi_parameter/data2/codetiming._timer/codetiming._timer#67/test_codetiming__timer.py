# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(str_0, str_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    dict_0 = {}
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_1 = timer_0.__eq__(none_type_0)
    none_type_1 = timer_0.start()
    var_2 = timer_0.__eq__(float_arg_0)
    float_0 = timer_0.stop()
    none_type_2 = timer_0.start()
    context_decorator_0 = module_1.ContextDecorator(**dict_0)
    var_1.__exit__()


def test_case_6():
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_error_0 = module_0.TimerError(*str_0)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()


def test_case_8():
    int_0 = 729
    str_0 = "C@\tB-]bMEI3BZ=|%03\x0cg"
    timer_0 = module_0.Timer(initial_text=str_0, logger=int_0)
    timer_0.start()


def test_case_9():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    var_1 = module_2.field(
        default_factory=var_0, init=var_0, repr=var_0, compare=timer_0
    )
    var_1.__exit__()


def test_case_10():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    none_type_0 = None
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_0, logger=var_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_2.__exit__()
