# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "Rz$|G0\x0cW"
    none_type_0 = None
    var_0 = module_1.dataclass(
        repr=str_0, unsafe_hash=none_type_0, match_args=str_0, slots=str_0
    )
    var_1 = var_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=none_type_0)
    timer_error_0 = module_0.TimerError()
    timer_0.stop()


def test_case_3():
    str_0 = "Rz$|G0\x0cW"
    none_type_0 = None
    var_0 = module_1.dataclass(
        repr=str_0, unsafe_hash=none_type_0, match_args=str_0, slots=str_0
    )
    var_1 = var_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=none_type_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    str_0 = "Rz$|G0\x0cW"
    none_type_0 = None
    var_0 = module_1.dataclass(
        repr=str_0, unsafe_hash=none_type_0, match_args=str_0, slots=str_0
    )
    var_1 = var_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    float_0 = timer_0.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_7():
    str_0 = "?\nS\x0b[vPWY"
    timer_0 = module_0.Timer(str_0)
    timer_1 = module_0.Timer(initial_text=str_0)
    timer_2 = timer_0.__enter__()
    str_1 = ".V<;\x0br_"
    str_2 = "AWVaw\r\r"
    none_type_0 = timer_1.start()
    var_0 = timer_1.__repr__()
    none_type_1 = timer_0.__exit__()
    float_arg_0 = module_0.FloatArg()
    str_3 = '\x0c#POK#SHE\x0c"])uq8\t'
    dict_0 = {str_1: var_0, str_2: str_1, str_3: str_3, str_1: var_0}
    float_arg_1 = module_0.FloatArg()
    module_2.Timers(**dict_0)


def test_case_8():
    str_0 = "No<Hnct#q0|%\nw}Iu6-["
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_9():
    str_0 = "Rz$|G0\x0cW"
    none_type_0 = None
    var_0 = module_1.dataclass(
        repr=str_0, unsafe_hash=none_type_0, match_args=str_0, slots=str_0
    )
    var_1 = var_0.__repr__()
    timer_0 = module_0.Timer(text=var_0, initial_text=var_0, logger=var_0)
    timer_0.__enter__()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    var_0 = module_1.field(default=bool_0, init=bool_0, hash=bool_0)
    var_1 = var_0.__eq__(none_type_0)
    str_0 = "Z_<0)aP "
    timer_0 = module_0.Timer(bool_0, str_0, bool_0)
    var_2 = timer_0.__repr__()
    none_type_1 = timer_0.start()
    timer_0.__enter__()
