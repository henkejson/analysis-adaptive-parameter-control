# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_2():
    list_0 = []
    timer_0 = module_0.Timer(text=list_0)
    timer_0.__exit__()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    dict_0 = {var_0: none_type_0}
    user_dict_0 = module_1.UserDict(**dict_0)
    var_1 = var_0.__repr__()
    user_dict_0.__setitem__(timer_1, timer_error_0)


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()
    timer_3 = module_0.Timer()
    timer_0.start()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    bytes_0 = b"DB\x109\xf1X\xf7\xad\xab\xd9\x7ft\xa5\xa6\x87\xd5\xe4\xdf"
    timer_error_1 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(bytes_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_2.field()
    var_0.__or__(var_0)


def test_case_6():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    float_arg_1 = module_0.FloatArg()
    var_0 = module_2.field()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_1.__eq__(str_0)
    var_2.__setitem__(float_arg_1, var_1)


def test_case_7():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    str_0 = "minutes"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, str_0, float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = module_2.field()
    var_0.__or__(var_0)


def test_case_8():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    str_0 = "minutes"
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_1, logger=none_type_0)
    var_0 = timer_0.__call__(str_0)
    var_1 = timer_0.__call__(none_type_0)
    timer_1 = timer_0.__enter__()
    var_2 = timer_0.__repr__()
    str_1 = "%k7+"
    timer_2 = module_0.Timer(str_1)
    float_0 = timer_0.stop()
    float_arg_1 = module_0.FloatArg()
    var_3 = module_2.field()
    var_3.__or__(var_3)
