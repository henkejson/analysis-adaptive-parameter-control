# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    float_arg_1 = module_0.FloatArg()
    timer_0.__enter__()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    str_0 = "?JXI8S_qxL*wig"
    timer_0 = module_0.Timer(text=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    none_type_1 = timer_0.start()
    timer_0.stop()


def test_case_5():
    none_type_0 = None
    str_0 = "milliseconds"
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    str_1 = 'yVzS"'
    str_2 = "oG=13lUn$1@.J,kbG6"
    var_0 = timer_1.__call__(timer_0)
    dict_0 = {str_1: str_1, str_1: str_1, str_2: str_2}
    user_dict_0 = module_1.UserDict(**dict_0)
    timer_2 = timer_1.__enter__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(none_type_0)


def test_case_7():
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_0 = module_0.Timer(initial_text=str_0)
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    timer_1 = timer_0.__enter__()
    module_2.field(init=dict_0, repr=dict_0, metadata=timer_0)


def test_case_8():
    bytes_0 = b"AS\xea\x11\xe1\xe0\xcb\xd7"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = module_0.Timer(bytes_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__repr__()
    none_type_0 = timer_2.__exit__()
    var_0.__setitem__(bytes_0, none_type_0)


def test_case_9():
    bytes_0 = b"S\xea\x11\xe1\xe0\xcb\xd7"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = None
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__(*bytes_0)
    timer_1.__exit__()
