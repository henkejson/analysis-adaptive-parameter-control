# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    str_0 = "Q-\\+LhGzuHVHq\x0c\r`]}"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=str_0)
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__eq__(timer_2)
    timer_3 = timer_0.__enter__()


def test_case_5():
    str_0 = "Q-\\+LhGzuHVHq\x0c\r`]}"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    timer_2.__exit__()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(timer_0, initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_0.__call__(timer_2)
    timer_1.__exit__()


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\xeb|\xf7\xdeIM\xaf\xad?\xa8~\r\xde"
    bool_0 = True
    timer_0 = module_0.Timer(bytes_0, bytes_0, bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(none_type_0)
    var_0.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = var_0.__iter__()
    var_1.__len__()


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    bytes_0 = b"\x9a\xactK\xd8\xd5\xb3\xfb\x96\xb1\xf42\xda`pRX"
    dict_0 = {bytes_0: timer_1}
    bool_0 = True
    float_0 = 953.767502
    list_0 = [dict_0, bool_0, float_0]
    timer_0.__exit__(*list_0)
