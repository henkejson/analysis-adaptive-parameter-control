# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "T"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(str_0)
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()
    var_1 = timer_2.__repr__()
    timer_0.__enter__()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0, logger=none_type_0)
    timer_0.__exit__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_0.stop()


def test_case_5():
    str_0 = "T"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(str_0)
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0, logger=timer_error_0)
    timer_0.start()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_2 = timer_1.start()
    dict_0 = {}
    var_0 = timer_0.__call__(none_type_2)
    var_0.update(**dict_0)


def test_case_8():
    str_0 = "T"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(str_0)
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()
    var_1 = timer_2.__repr__()
    timer_0.__enter__()


def test_case_9():
    bytes_0 = b"\xe7^\xa5\x9aG/\xeb\x12\x96\xef\x06\xcd\xfe\xdc\xf9\xeb\x8c-\x19"
    var_0 = module_1.dataclass(eq=bytes_0, order=bytes_0)
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(bytes_0, var_0, var_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__repr__()
    timer_1.stop()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_error_0 = module_0.TimerError()
    timers_0 = module_2.Timers()
    list_0 = []
    timer_error_1 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_2 = module_0.Timer(initial_text=float_arg_0)
