# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.min(none_type_0)


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__eq__(float_arg_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    str_0 = "OYL6u>%R9I"
    timer_0 = module_0.Timer(initial_text=str_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_error_0.apply(timer_error_0, timer_error_0)


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_7():
    timer_error_0 = module_0.TimerError()
    str_0 = "pl2'O`C'0D"
    timer_0 = module_0.Timer(timer_error_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    str_1 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_1 = module_0.Timer()
    var_0 = timer_1.__repr__()
    none_type_1 = timer_0.__exit__()
    timers_0 = module_1.Timers()
    none_type_2 = timer_0.start()
    var_1 = timer_1.__eq__(none_type_1)
    var_2 = timer_0.__repr__()
    var_3 = var_2.__eq__(str_1)
    var_0.pop(var_2)


def test_case_8():
    timer_error_0 = module_0.TimerError()
    dict_0 = {timer_error_0: timer_error_0}
    timer_0 = module_0.Timer(initial_text=dict_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_1)
    float_0 = timer_0.stop()
    none_type_2 = timer_1.start()
    var_0 = timer_0.__repr__()
    none_type_3 = timer_1.__exit__()
    module_1.Timers(*dict_0)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    dict_0 = {timer_error_0: timer_error_0, timer_error_0: timer_error_0}
    timer_0 = module_0.Timer(initial_text=dict_0)
    none_type_0 = timer_0.start()
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_1 = module_0.Timer(text=timer_0, logger=str_0)
    float_0 = timer_0.stop()
    none_type_1 = timer_1.start()
    var_0 = timer_0.__repr__()
    timer_1.__exit__()


def test_case_10():
    str_0 = "u!X&7^gE(k[:mmk;:!5"
    var_0 = module_2.field(compare=str_0, metadata=str_0)
    timer_0 = module_0.Timer(str_0, str_0, var_0)
    timer_1 = timer_0.__enter__()
    set_0 = set()
    none_type_0 = timer_0.__exit__()
    none_type_1 = None
    var_1 = module_2.dataclass(match_args=set_0, kw_only=none_type_1)
    var_1.__setitem__(timer_0, var_1)
