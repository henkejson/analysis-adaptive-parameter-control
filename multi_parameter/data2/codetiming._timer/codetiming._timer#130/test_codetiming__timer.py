# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    timer_3 = module_0.Timer()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_7():
    str_0 = "m'j?CtNUUr"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_9():
    bool_0 = False
    str_0 = "m'j?CbUr"
    timer_0 = module_0.Timer(str_0, logger=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    var_0 = module_1.dataclass(none_type_0, kw_only=bool_0)
    timer_0 = module_0.Timer(none_type_0, var_0)
    none_type_1 = timer_0.start()
    timer_0.__exit__()


def test_case_11():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    none_type_0 = timer_0.start()
    timer_0.__exit__()
