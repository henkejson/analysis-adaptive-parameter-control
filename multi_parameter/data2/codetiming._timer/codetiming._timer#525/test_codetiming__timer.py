# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(text=str_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_1.start()
    var_1 = timer_1.__eq__(none_type_0)
    timer_1.start()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    list_0 = [timer_0, none_type_0]
    timer_0.__exit__(*list_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    float_arg_0 = module_0.FloatArg()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_1.__call__(timer_0)
    none_type_1 = timer_0.__exit__(*var_0)
    list_0 = [var_0, var_0]
    module_1.ContextDecorator(*list_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    float_arg_0 = module_0.FloatArg()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__call__(none_type_0)
    str_0 = "\tv2UU;P\t-,%Ifp ~:0UR"
    timer_0.max(str_0)
