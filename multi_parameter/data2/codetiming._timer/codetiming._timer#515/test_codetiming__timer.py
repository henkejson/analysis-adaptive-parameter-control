# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    bytes_0 = b"\xbeN0\xb2"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    bytes_0 = b"\xbeN0\xb2"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    bytes_0 = b"\xbeN0\xb2"
    none_type_0 = None
    timer_0 = module_0.Timer(bytes_0, initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    timer_2.start()


def test_case_6():
    str_0 = "74Lzc1)aPb[|bb\t"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_2 = timer_0.__enter__()
    timer_1.start()


def test_case_7():
    bytes_0 = b"\xbeN0\xb2"
    var_0 = module_1.dataclass(repr=bytes_0, frozen=bytes_0)
    timer_0 = module_0.Timer(text=var_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_8():
    bytes_0 = b"\xbeN0\xb2"
    bool_0 = True
    timer_0 = module_0.Timer(bytes_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    module_2.Timers(*bytes_0)
