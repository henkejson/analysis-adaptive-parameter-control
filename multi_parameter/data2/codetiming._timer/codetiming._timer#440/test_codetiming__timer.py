# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    str_0 = "o0"
    timer_0 = module_0.Timer(text=str_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(none_type_0)
    var_0 = timer_2.__eq__(timer_2)
    none_type_1 = timer_0.__exit__()
    var_0.items()


def test_case_5():
    int_0 = -4080
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    none_type_0 = timer_1.start()
    timer_1.start()


def test_case_7():
    str_0 = "amRe"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_0.values()


def test_case_8():
    str_0 = "name"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.values()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = None
    timer_2 = module_0.Timer(text=timer_0, initial_text=none_type_1)
    timer_3 = timer_2.__enter__()
    float_0 = timer_3.stop()
    timer_4 = timer_3.__enter__()
    float_1 = timer_0.stop()
    none_type_2 = timer_3.__exit__()
    timer_5 = timer_2.__enter__()


def test_case_10():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=bool_0)
    str_0 = "@ 6-^"
    tuple_0 = (str_0,)
    var_0 = timer_0.__repr__()
    list_0 = [tuple_0, tuple_0, str_0]
    var_1 = timer_0.__call__(list_0)
    str_1 = "-aS25Ffp^@"
    dict_0 = {str_1: str_1, str_1: str_1}
    user_dict_0 = module_1.UserDict(**dict_0)
    timer_0.__enter__()
