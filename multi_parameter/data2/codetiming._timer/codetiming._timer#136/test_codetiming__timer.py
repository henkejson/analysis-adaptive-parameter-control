# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    float_1 = timer_0.__repr__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_0.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_1.__enter__()
    timers_0 = module_1.Timers()
    var_0 = timers_0.__iter__()
    timer_4 = module_0.Timer(text=var_0, logger=var_0)
    timer_5 = timer_4.__enter__()


def test_case_8():
    timers_0 = module_1.Timers()
    var_0 = timers_0.__iter__()
    timer_0 = module_0.Timer(initial_text=var_0)
    timer_1 = timer_0.__enter__()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_1.__enter__()
    float_1 = timer_2.stop()
    timers_0 = module_1.Timers()
    var_0 = timer_2.__repr__()
    timer_4 = module_0.Timer(initial_text=var_0)
    timer_4.__enter__()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_1.__enter__()
    float_1 = timer_2.stop()
    timers_0 = module_1.Timers()
    timer_4 = module_0.Timer(none_type_0)
    var_0 = timers_0.__iter__()
    timer_5 = module_0.Timer(initial_text=var_0)
    var_1 = timers_0.__iter__()
    timer_6 = module_0.Timer(timer_4, initial_text=var_1)
    timer_7 = timer_6.__enter__()
    timer_8 = module_0.Timer(text=var_1)
    timer_9 = timer_5.__enter__()


def test_case_11():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [timer_0, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    str_0 = "Timer"
    timer_1 = module_0.Timer(str_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_3 = timer_2.__enter__()
    float_1 = timer_3.stop()
    timers_0 = module_1.Timers()
    var_0 = timers_0.__ror__(list_0)
    var_1 = timers_0.keys()
    var_2 = timers_0.__len__()
    dict_0 = {float_0: var_2}
    var_1.get(dict_0)
