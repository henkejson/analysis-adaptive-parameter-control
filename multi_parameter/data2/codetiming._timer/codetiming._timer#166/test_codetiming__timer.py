# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    none_type_1 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    list_0 = []
    timer_0.__exit__(*list_0)


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    bool_0 = True
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=bool_0, logger=timer_0)
    none_type_0 = timer_2.start()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_6():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    bool_0 = True
    timer_1 = module_0.Timer(initial_text=bool_0, logger=timer_0)
    none_type_0 = timer_1.start()


def test_case_7():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_0.start()


def test_case_8():
    str_0 = "%xk=+UB,"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    list_0 = []
    var_0 = module_1.field(default_factory=list_0, metadata=none_type_0)
    timer_0.update(**str_0)


def test_case_9():
    str_0 = "%xxk=SUB,"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, str_0, none_type_0, none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__call__(none_type_1)
    timers_0 = module_2.Timers()
    var_0.__setitem__(var_0, timers_0)


def test_case_10():
    set_0 = set()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(logger=set_0)
    bool_0 = True
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(bool_0, initial_text=bool_0, logger=timer_0)
    none_type_0 = timer_2.start()
    float_0 = timer_2.stop()


def test_case_11():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    float_0 = timer_1.stop()
