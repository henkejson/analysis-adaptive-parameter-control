# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_arg_0 = timer_0.__repr__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__call__(timer_0)
    var_0 = timer_1.__call__(timer_0)


def test_case_4():
    list_0 = []
    timer_0 = module_0.Timer(logger=list_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(list_0)
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    var_1 = timer_0.__eq__(bool_0)
    module_0.FloatArg(*var_1)


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    str_0 = "F\x0cd_,0_V_G%ReT"
    none_type_0 = timer_0.__exit__()
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_1.start()
    timer_error_1 = timer_0.__repr__()
    timer_error_2 = module_0.TimerError()
    timer_2 = module_0.Timer()
    none_type_2 = timer_2.__call__(str_0)
    none_type_3 = timer_0.__exit__()
    var_0 = timer_0.__repr__()


def test_case_7():
    int_0 = 403
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=int_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.__exit__()


def test_case_8():
    int_0 = 403
    timer_0 = module_0.Timer(logger=int_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_1.__enter__()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    float_arg_0 = module_0.FloatArg()
    timer_2 = timer_0.__enter__()
    list_0 = [timer_1, timer_2]
    module_0.FloatArg(*list_0)


def test_case_10():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__eq__(timer_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__eq__(none_type_0)
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(logger=float_arg_0)
    timer_2.__setitem__(none_type_0, float_arg_0)


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    bytes_0 = b"\xdck\xe3\xb2\xa7\x97\xb7-\xd6&\xa5\xff\x94K+\xbb>$\x07"
    none_type_0 = timer_1.start()
    var_0 = timer_1.__call__(none_type_0)
    bytes_1 = b"\xb4\x0er\x9b\xb3\xde\xb1\x832o\xf9\x03\xf7\x7f\x1fy:\xef\xf6\x0c"
    var_1 = module_1.field(default=bytes_0, init=bytes_0, repr=bytes_1)
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(bytes_1, initial_text=var_1)
    var_2 = var_1.__repr__()
    var_2.clear()
