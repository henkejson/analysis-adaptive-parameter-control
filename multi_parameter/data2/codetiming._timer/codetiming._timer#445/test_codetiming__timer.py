# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    none_type_0 = None
    str_0 = "<)K'\x0bKP_"
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(none_type_0, str_0, str_0, none_type_0)
    list_0 = [str_0, timer_0]
    timer_0.__exit__(*list_0)


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_0.__exit__()
    timer_0.__or__(timer_0)


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    str_0 = "u\x0bj?!j2v;\nhkX*fs"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_7():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    list_0 = [dict_0]
    timer_0 = module_0.Timer(none_type_0, initial_text=list_0)
    timer_1 = timer_0.__enter__()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_1.stop()


def test_case_8():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    none_type_0 = None
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()


def test_case_9():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_0 = module_1.dataclass(repr=none_type_0, kw_only=dict_0, slots=none_type_0)
    timer_0 = module_0.Timer(var_0, initial_text=var_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_1 = timer_0.__enter__()
    float_arg_1 = module_0.FloatArg()
    timers_0 = module_2.Timers(**dict_0)
    var_1 = timers_0.__iter__()
    var_2 = var_1.__iter__()
    var_3 = var_1.__repr__()
    var_4 = module_1.field(
        default_factory=var_3, hash=timer_0, compare=none_type_0, metadata=var_3
    )
    float_arg_2 = module_0.FloatArg()
    none_type_2 = timer_1.__exit__()
    dict_1 = {}
    timers_0.__contains__(dict_1)


def test_case_10():
    str_0 = "minutes"
    timer_0 = module_0.Timer(initial_text=str_0)
    timers_0 = module_2.Timers()
    timer_1 = timer_0.__enter__()
    timers_0.__ior__(timer_0)


def test_case_11():
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    none_type_0 = None
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_12():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_0 = module_1.dataclass(repr=none_type_0, kw_only=dict_0, slots=none_type_0)
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_1, var_0, var_0)
    none_type_2 = timer_0.start()
    timer_0.stop()
