# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    float_0 = -651.97402
    timer_0 = module_0.Timer(text=float_0, logger=float_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    int_0 = -7
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    var_1 = timer_0.__eq__(var_0)
    timer_error_0 = module_0.TimerError()
    var_2 = module_1.field(repr=int_0, kw_only=int_0)
    timers_0 = module_2.Timers()
    var_3 = timers_0.__iter__()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    list_0 = []
    timer_0 = module_0.Timer(logger=list_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_7():
    int_0 = 60
    timer_0 = module_0.Timer(int_0, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_0.start()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    str_1 = "4"
    var_0 = module_1.dataclass()
    var_0.__delitem__(str_1)


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0)
    none_type_1 = timer_0.start()
    list_0 = [none_type_1, none_type_1, none_type_1, none_type_1]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_0.__exit__()
