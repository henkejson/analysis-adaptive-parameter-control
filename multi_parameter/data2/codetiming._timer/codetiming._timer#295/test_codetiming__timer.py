# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__call__(bool_0)
    timer_1.start()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    none_type_2 = module_1.dataclass(
        order=none_type_1,
        unsafe_hash=none_type_0,
        match_args=none_type_0,
        slots=none_type_0,
    )
    var_0 = timer_0.__eq__(none_type_2)
    var_1 = var_0.__eq__(none_type_1)
    timer_0.__exit__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    none_type_1 = timer_1.start()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=bool_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    var_0 = timer_1.__eq__(timer_2)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.__exit__()
    var_1 = timer_0.__eq__(var_0)
    var_1.__len__()


def test_case_7():
    str_0 = "seconds"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_0.__contains__(timer_1)


def test_case_8():
    timer_0 = module_0.Timer()
    bool_0 = True
    none_type_0 = None
    timer_1 = module_0.Timer(bool_0, initial_text=none_type_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer()
    var_0 = timer_2.__repr__()
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.__exit__()
    dict_0 = {}
    list_0 = [timer_1, dict_0, dict_0, none_type_1]
    timer_1.__exit__(*list_0)


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_3 = timer_0.__enter__()
    none_type_0 = None
    timer_4 = module_0.Timer(text=none_type_0)
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.__exit__()
    var_0 = timer_2.__eq__(timer_0)
    timer_1.__exit__(*var_0)


def test_case_10():
    timer_error_0 = module_0.TimerError()
    str_0 = "A<<!0!H7o5f\t"
    timer_error_1 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(text=str_0)
    dict_0 = {bool_0: str_0, bool_0: bool_0}
    timer_1 = module_0.Timer(str_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_2 = timer_1.__enter__()
    module_0.FloatArg(**dict_0)
