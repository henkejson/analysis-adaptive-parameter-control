# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    bool_0 = False
    timer_0 = module_0.Timer(logger=bool_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()
    timers_0 = module_1.Timers()
    var_0 = timers_0.__eq__(bool_0)
    var_0.stop()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_8():
    complex_0 = -23.589485 + 1248.8228j
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, complex_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__repr__()
    timer_0.__exit__()


def test_case_9():
    int_0 = 2878
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=int_0, logger=int_0)
    list_0 = [int_0, int_0]
    var_0 = timer_0.__repr__()
    str_0 = "K"
    timer_1 = module_0.Timer(int_0, list_0, str_0)
    timer_2 = module_0.Timer()
    none_type_0 = timer_1.start()
    timer_0.stop()
