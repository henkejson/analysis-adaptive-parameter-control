# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    timer_0 = module_0.Timer(object_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.__eq__(timer_1)
    timer_1.start()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.start()
    timer_error_1 = module_0.TimerError()
    var_0 = timer_0.__eq__(timer_0)
    float_0 = timer_0.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(initial_text=float_0, logger=float_0)
    timer_2.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__repr__()
    timer_2.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_2 = module_0.Timer(timer_0, initial_text=str_0)
    timer_3 = timer_2.__enter__()
    var_0 = timer_1.__repr__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()
    var_0 = timer_1.__call__(timer_0)
    timer_2 = module_0.Timer(none_type_0, var_0, var_0)
    timer_3 = timer_2.__enter__()
    timer_3.stop()
