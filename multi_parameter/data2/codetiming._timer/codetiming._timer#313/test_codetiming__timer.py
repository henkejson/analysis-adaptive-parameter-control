# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_2.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_arg_0 = timer_0.__eq__(timer_0)


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_0.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_0)


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    bytes_0 = b".@\x9f1\x11\r"
    var_0 = module_1.field(repr=timer_0, compare=bytes_0)
    var_0.keys()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    bytes_0 = b".@\x9f1\x11\r"
    list_0 = [none_type_0, none_type_0, none_type_0]
    none_type_1 = timer_1.__exit__(*list_0)
    var_0 = module_1.field(init=none_type_0, kw_only=none_type_1)
    var_0.setdefault(bytes_0)


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_9():
    str_0 = "]qr"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    float_arg_0 = module_0.FloatArg()


def test_case_10():
    str_0 = "]qr"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(none_type_0)
    none_type_1 = timer_1.__exit__()
    var_1 = timer_0.__call__(none_type_0)
    none_type_2 = None
    var_2 = module_1.field(
        default=timer_1, hash=none_type_2, metadata=str_0, kw_only=none_type_2
    )
    timer_1.__exit__(*none_type_0)


def test_case_11():
    none_type_0 = None
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(none_type_0, timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_0.__call__(none_type_0)
    none_type_2 = timer_1.__exit__()
    var_0 = timer_1.__eq__(none_type_0)
    list_0 = [none_type_1, var_0, var_0, none_type_1]
    module_0.FloatArg(*list_0, **var_0)


def test_case_12():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = module_0.Timer(timer_1, initial_text=timer_1)
    timer_3 = timer_0.__enter__()
    none_type_1 = timer_2.start()
    none_type_2 = timer_0.__exit__()
    var_0 = timer_2.__repr__()
    module_0.FloatArg(*var_0)
