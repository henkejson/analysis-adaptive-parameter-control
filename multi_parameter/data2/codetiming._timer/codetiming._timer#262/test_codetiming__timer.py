# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import contextlib as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0)
    timer_0.__exit__()


def test_case_3():
    str_0 = "b2~"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    str_0 = "b2~"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    list_0 = []
    timer_0 = module_0.Timer(initial_text=list_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__(*list_0)


def test_case_6():
    str_0 = "TimeRr star*I&qed"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.copy()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = module_1.field(repr=none_type_0, compare=none_type_0)
    var_1 = var_0.__repr__()
    module_0.FloatArg(*var_1, **var_1)


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    var_0 = module_1.field(repr=none_type_0, compare=none_type_0)
    var_1 = var_0.__repr__()
    module_0.FloatArg(*var_1, **var_1)


def test_case_9():
    bytes_0 = b"\xee>\xbb\xc6?"
    var_0 = module_1.dataclass(
        repr=bytes_0, eq=bytes_0, frozen=bytes_0, match_args=bytes_0
    )
    timer_0 = module_0.Timer(var_0, var_0, bytes_0, var_0)
    timer_0.start()


def test_case_10():
    bytes_0 = b"\xee>\xbb\xc6?"
    var_0 = module_2.ContextDecorator()
    timer_0 = module_0.Timer(var_0, var_0, bytes_0, var_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.start()
    var_0.__len__()
