# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    str_0 = "Z^>"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_2.__exit__()
    timer_1.start()


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_1, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_2 = timer_0.__exit__()
    timer_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    str_0 = "e5*]~}(SIj\n[[$_K>et"
    timer_1 = module_0.Timer(str_0)
    var_0 = timer_1.__call__(timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_0.stop()


def test_case_6():
    str_0 = "Z^>"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_7():
    str_0 = "Z^>"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_2.__exit__()
    timer_2.stop()


def test_case_8():
    str_0 = "Z^>"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(initial_text=timer_1)
    var_0 = timer_0.__eq__(str_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_1.stop()


def test_case_9():
    none_type_0 = None
    str_0 = "Z^>"
    timer_0 = module_0.Timer(text=none_type_0, logger=str_0)
    var_0 = timer_0.__eq__(none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(var_0, str_0, var_0)
    var_1 = timer_0.__eq__(none_type_0)
    timer_3 = timer_2.__enter__()
    var_0.__exit__()
