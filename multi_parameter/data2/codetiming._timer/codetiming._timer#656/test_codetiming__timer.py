# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_2():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.__exit__(*dict_0)


def test_case_3():
    str_0 = ">V#.L7(\x0cIc"
    list_0 = [str_0, str_0]
    int_0 = -1904
    complex_0 = 1577.3065 - 2269.98224j
    timer_0 = module_0.Timer(str_0, int_0, complex_0)
    timer_1 = timer_0.__enter__()
    timers_0 = module_1.Timers()
    float_arg_0 = module_0.FloatArg()
    list_0.__getitem__(list_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    timer_error_0 = module_0.TimerError(*var_0)
    var_0.keys()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(timer_0)
    timer_0.__enter__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    timer_0 = module_0.Timer(
        text=none_type_1, initial_text=none_type_2, logger=none_type_1
    )
    var_0 = timer_0.__eq__(none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_3 = timer_1.__exit__()
    timer_0.__exit__()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0, logger=none_type_1)
    timer_1 = timer_0.__enter__()
    none_type_2 = timer_1.__exit__()
    timer_0.__exit__()


def test_case_9():
    str_0 = "q9XE8oNXJG{"
    str_1 = "AesJ."
    set_0 = {str_1, str_1, str_1, str_0}
    timer_0 = module_0.Timer(initial_text=str_0, logger=set_0)
    var_0 = timer_0.__repr__()
    timer_0.__enter__()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    list_0 = [timer_0, timer_0, timer_0]
    none_type_0 = timer_2.__exit__(*list_0)
    none_type_1 = timer_2.start()
    float_0 = timer_2.stop()
    bytes_0 = b"\x19-kFz\xa6\xccY\xb4\x06i/.\xb1\x9d"
    var_0 = timer_0.__eq__(bytes_0)
    var_0.__contains__(float_0)
