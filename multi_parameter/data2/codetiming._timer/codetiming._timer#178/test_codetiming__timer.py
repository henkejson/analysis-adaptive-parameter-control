# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(str_0)
    timer_2 = module_0.Timer(text=var_0)
    timer_0.__enter__()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(timer_0)


def test_case_5():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(str_0)
    none_type_0 = timer_0.__exit__()
    timer_0.stop()


def test_case_6():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, timer_1)
    float_0 = timer_1.stop()
    var_0 = timer_0.__repr__()
    var_1 = timer_2.__eq__(timer_2)
    var_2 = timer_0.__repr__()
    timer_3 = timer_2.__enter__()
    timer_3.stop()


def test_case_7():
    str_0 = "Timer is running. Use .stop() to stop it"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(none_type_0)
    var_1 = var_0.__eq__(none_type_0)
    none_type_1 = timer_0.__exit__()
    var_0.stop()


def test_case_8():
    str_0 = "Timer is running. Use .stop() to stop it"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_0.copy()


def test_case_9():
    bool_0 = True
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(str_0, bool_0, bool_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=str_0)
    timer_2.stop()
