# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_0.__exit__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    str_0 = "[TX9;X6/!l[81D0<"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_1.stop()


def test_case_6():
    user_dict_0 = module_1.UserDict()
    timer_0 = module_0.Timer(initial_text=user_dict_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_7():
    user_dict_0 = module_1.UserDict()
    str_0 = "lO!mRg|C:m&S},C"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__enter__()


def test_case_8():
    user_dict_0 = module_1.UserDict()
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(user_dict_0)
    var_0.__exit__()


def test_case_9():
    user_dict_0 = module_1.UserDict()
    none_type_0 = None
    var_0 = module_2.dataclass(none_type_0, order=user_dict_0, kw_only=none_type_0)
    timer_0 = module_0.Timer(text=var_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_10():
    user_dict_0 = module_1.UserDict()
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
