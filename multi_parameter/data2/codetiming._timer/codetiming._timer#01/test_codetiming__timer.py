# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import collections as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=none_type_0)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.start()
    list_0 = []
    timers_0 = module_1.Timers(*list_0)
    var_0 = list_0.__repr__()
    none_type_2 = timer_0.__exit__()
    var_1 = var_0.__iter__()
    var_2 = var_1.__eq__(none_type_2)
    var_3 = timers_0.update()
    var_3.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    str_0 = "%]?\tmXxZ?]y%W?"
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    bytes_0 = b"k\xe3\xa1\xeca8A\x9a"
    var_0 = timer_0.__call__(bytes_0)
    timer_1 = module_0.Timer(bytes_0, bytes_0, bytes_0, bytes_0)
    timer_1.start()


def test_case_7():
    none_type_0 = None
    str_0 = ";23=^4LBe_gGEv"
    dict_0 = {str_0: str_0}
    user_dict_0 = module_2.UserDict(**dict_0)
    var_0 = user_dict_0.values()
    var_1 = var_0.__repr__()
    timer_0 = module_0.Timer(none_type_0, var_0, var_0)
    timer_1 = timer_0.__enter__()
    var_2 = timer_0.__repr__()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    var_3 = timer_2.__eq__(timer_2)
    var_3.clear()


def test_case_8():
    none_type_0 = None
    str_0 = "%]?\tmXxZ??y%W?"
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    timer_1 = module_0.Timer(text=timer_0)
    var_0 = timer_0.__repr__()
    timer_2 = module_0.Timer()
    timer_3 = timer_1.__enter__()
    list_0 = []
    none_type_1 = timer_3.__exit__(*list_0)
    none_type_1.__enter__()
