# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    str_0 = "--j=GH]w'\rmwAZ^"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_5():
    str_0 = "O"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    timer_1 = var_0.__enter__()
    timer_0.__exit__(*var_0)


def test_case_7():
    none_type_0 = None
    str_0 = "54ZjL;\nX]\nX*K[\x0b06V1\\"
    timer_0 = module_0.Timer(text=none_type_0, initial_text=str_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    module_1.dataclass(float_arg_0)


def test_case_8():
    str_0 = "--j=GH]w'\rmwAZ^"
    bool_0 = True
    timer_0 = module_0.Timer(str_0, str_0, bool_0, str_0)
    timer_0.__enter__()


def test_case_9():
    str_0 = "--j=GH]w'\rmwAZ^"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_1.__exit__()
