# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    float_arg_0 = timer_0.__call__(timer_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    float_arg_0 = module_0.FloatArg()
    timer_1.stop()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    str_0 = "a8"
    timer_1 = module_0.Timer(none_type_0, initial_text=str_0)
    var_0 = timer_0.__eq__(timer_0)
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_1.start()
    module_0.FloatArg(*var_0, **var_0)


def test_case_6():
    bool_0 = True
    tuple_0 = (bool_0,)
    timer_0 = module_0.Timer(tuple_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    var_0 = module_1.dataclass(
        repr=none_type_0, frozen=none_type_0, kw_only=none_type_0
    )
    var_0.copy()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    var_0 = timer_0.__call__(none_type_1)
    timer_0.start()


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0,)
    timer_0 = module_0.Timer(tuple_0, initial_text=bool_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    none_type_1 = timer_0.__exit__()
    var_0 = module_1.dataclass(
        repr=none_type_0, frozen=none_type_0, kw_only=none_type_1
    )
    var_0.copy()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    dict_0 = {}
    int_0 = 2811
    list_0 = [timer_0, int_0, timer_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError(**dict_0)
    var_0 = timer_0.__call__(none_type_1)
    timer_0.start()


def test_case_10():
    bool_0 = True
    tuple_0 = (bool_0,)
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, bool_0, tuple_0)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.start()
    timer_0.__exit__()


def test_case_11():
    bool_0 = True
    tuple_0 = (bool_0,)
    timer_0 = module_0.Timer(tuple_0, initial_text=bool_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__repr__()
    list_0 = [none_type_0, tuple_0, tuple_0]
    timer_error_1 = module_0.TimerError(*list_0)
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_1.__eq__(timer_1)
    timer_1.__exit__()
