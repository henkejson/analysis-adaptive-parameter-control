# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -1952
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "Re"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "H#mo)9OA6?74WC| r"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "y%25Jw"
    int_0 = 469
    dict_0 = {str_0: str_0, str_0: int_0, str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "D;\\{)kNsw\r}Ln@F"
    int_0 = 469
    dict_0 = {str_0: str_0, str_0: int_0, str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    complex_0 = 570.45646 + 1452.55233j
    list_0 = [complex_0, complex_0, complex_0]
    bool_0 = False
    dict_0 = {complex_0: list_0, complex_0: bool_0, complex_0: complex_0}
    tuple_0 = (complex_0, list_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_1 = []
    str_0 = "]x=\x0b:qo"
    module_1.namedtuple(str_0, list_1)


def test_case_11():
    bytes_0 = b"5\x11\xe6\x03\x0c\xcbr"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    list_0 = []
    str_0 = "hil "
    dict_0 = {str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    bool_0 = False
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_1 = True
    tuple_0 = (bool_0, dict_0, bool_1)
    var_2 = module_0.to_namedtuple(tuple_0)
    int_0 = -1952
    list_1 = [int_0, int_0, ordered_dict_0, var_0, str_0, int_0]
    var_3 = module_0.to_namedtuple(list_1)
