# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 436.20636
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)


def test_case_2():
    str_0 = "inr"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "S(Xs!e"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    str_0 = "get_os_group"
    tuple_0 = (bool_0, str_0)
    dict_0 = {bool_0: str_0, tuple_0: str_0, str_0: bool_0}
    list_0 = [tuple_0, dict_0, bool_0]
    tuple_1 = (tuple_0, dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    str_1 = "A?kV>\x0ci"
    module_0.to_namedtuple(str_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    float_0 = -1838.6
    module_0.to_namedtuple(float_0)


def test_case_10():
    bytes_0 = b"r\x15\x91\x88\xc5\x04\x9f6\xb3\xd7\xe5TC\xed\xf5q\x99Z"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "j\n\r"
    str_1 = "8DI'#i*Q\x0c99\x0cPvt&G"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
