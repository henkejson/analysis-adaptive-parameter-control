# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    bool_0 = True
    bytes_0 = b"A\x15"
    str_0 = " $"
    tuple_2 = (tuple_1, bool_0, bytes_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_2)


def test_case_2():
    str_0 = "h6&8Et\x0b0{[9>"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xc2E\x0ej\xd4\x15\xeb\xb0mH\xf1\x13\xcf"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    str_0 = "**=+R"
    dict_0 = {bool_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_1 = "F"
    dict_1 = {str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_1)


def test_case_7():
    str_0 = "F"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_11():
    int_0 = -5052
    bytes_0 = b""
    dict_0 = {int_0: int_0, int_0: bytes_0, bytes_0: int_0, bytes_0: int_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = True
    str_0 = "**=+R"
    dict_0 = {bool_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    str_1 = "F\r"
    dict_1 = {str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_1.OrderedDict()
    list_0 = [bool_0]
    var_5 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xc2E\x0ej\xd4\x15\xeb\xb0mH\xf1\x13\xcf"
    tuple_0 = (var_3, bytes_0)
    var_6 = module_0.to_namedtuple(tuple_0)
    var_7 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bytes_0)
