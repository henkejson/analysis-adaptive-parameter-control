# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    set_0 = set()
    str_0 = "name"
    dict_0 = {str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b"K\xac"
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_4():
    str_0 = "name"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, none_type_0, rename=none_type_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(var_4)
    dict_0 = {var_5: var_4, var_4: var_1}
    var_6 = module_0.to_namedtuple(dict_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "}|D\x0bC@Hv&3cr"
    str_1 = "doc"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    str_0 = "l5\nOLZz}'`.)"
    bytes_0 = b"\xfd\x97\xb5G"
    dict_0 = {bytes_0: bytes_0, str_0: str_0}
    tuple_0 = (str_0, bytes_0, bytes_0, dict_0)
    bool_0 = True
    tuple_1 = (tuple_0, dict_0, bool_0, bool_0)
    module_0.to_namedtuple(tuple_1)


def test_case_13():
    str_0 = "description"
    str_1 = "\x0bY\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1}
    tuple_0 = (str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    ordered_dict_0 = module_1.OrderedDict()
    dict_1 = {str_1: var_1, var_1: ordered_dict_0, str_1: var_0}
    list_0 = [dict_1, dict_1, dict_0, ordered_dict_0]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(str_0)
