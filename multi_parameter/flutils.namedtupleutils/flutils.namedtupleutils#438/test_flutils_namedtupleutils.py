# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bytes_0 = b"\xaeKqb\x00\xcd\xe0\x06h\x0b\x0f\xc4a\xb1\x0c\x1d{\x1a`1"
    dict_0 = {}
    tuple_0 = (bytes_0, dict_0)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "Dht0vZy"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "4Z[aJg=i\r-ph0Iohsh"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "PcF?beaZ]8:'iVI|9Em"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b'[U"\x07\xb8+c\x10\xb0\xcc\x05-'
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bytes_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"\xaeKqb\x00\xcd\xe0\x06h\x0b\x0f\xc4a\xb1\x0c\x1d{\x1a`1"
    dict_0 = {bool_0: bytes_0, bool_0: bytes_0, bytes_0: bool_0}
    tuple_0 = (bytes_0, dict_0)
    str_0 = "7*-OQ^j."
    tuple_1 = (bool_0, tuple_0, str_0, str_0)
    module_0.to_namedtuple(tuple_1)


def test_case_11():
    bool_0 = False
    bytes_0 = b"\xaeKqb\x00\xcd\xe0\x06h\x0b\xad\xc4a\xb1\x0c\x1d{\x1a`1"
    dict_0 = {bool_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    str_0 = "7*-OQ^j."
    tuple_1 = (bool_0, tuple_0, str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bool_1 = False
    list_0 = [var_0, bool_1, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(tuple_1)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "Dht0vZy"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    list_0 = []
    object_0 = module_2.object(*list_0)
    str_0 = "\x0bSV"
    dict_0 = {object_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = True
    var_2 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xaeKqb\x00\xcd\xe0\x06h\x0b\xad\xc4a\xb1\x0c\x1d{\x1a`1"
    dict_1 = {bool_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict()
    str_1 = "7*-OQ^j."
    tuple_0 = (bool_0, ordered_dict_0, str_1, str_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    str_2 = "Item %r of the given 'cmd' is not of type 'str'.  Got: %r"
    dict_2 = {str_2: ordered_dict_0, var_5: ordered_dict_0, str_0: var_5}
    var_6 = module_0.to_namedtuple(dict_2)
