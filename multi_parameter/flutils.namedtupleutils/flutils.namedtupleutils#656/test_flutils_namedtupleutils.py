# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -2687.49198
    module_0.to_namedtuple(float_0)


def test_case_1():
    int_0 = -240
    str_0 = "e0slknic5p})[{v\x0bLv"
    tuple_0 = (int_0, int_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_2():
    str_0 = "A"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "to_namedtuple"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "A"
    str_1 = '\x0b"691'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_2)
    bytes_0 = b"\xf0\xceSl\x19ee\xa9"
    module_0.to_namedtuple(bytes_0)


def test_case_11():
    str_0 = "A"
    str_1 = "\x0bP691"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [dict_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_1.namedtuple(dict_0, var_0, rename=ordered_dict_0)


def test_case_12():
    bytes_0 = b"\x17\xed\x91o\xa1\xfd\xd6\xd0\xe7[\n\x9f8\x1c\xb7E\x03\x04"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
