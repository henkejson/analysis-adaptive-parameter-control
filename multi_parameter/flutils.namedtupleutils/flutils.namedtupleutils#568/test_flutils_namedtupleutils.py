# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 2147.71
    bool_0 = False
    tuple_0 = (float_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = ".X'1q\"2Wm/iam'$TTy"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x98\xe1|&i\xeb*\xd6iKB\xcb\x1c"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"\xca\xbe\x99\xbbD\x8d\\\xccQ"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b')\xb4!\xda\x8e^"OG\x15\xfc\xe6N\xab\x8f\x97\xd7x '
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "s`1qhr#JM0/U\no"
    tuple_0 = (str_0, str_0, str_0, str_0)
    str_1 = ".X'1q\"2Wm/iam'$TTy"
    dict_0 = {tuple_0: tuple_0, str_0: str_1, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, dict_0, module=var_0)


def test_case_12():
    str_0 = "chown"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    list_0 = [var_1]
    var_2 = module_0.to_namedtuple(list_0)
    str_0 = "pa_g\t"
    dict_1 = {str_0: str_0, str_0: str_0}
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    var_6 = module_0.to_namedtuple(list_0)
    module_1.namedtuple(ordered_dict_0, dict_1, module=var_4)
