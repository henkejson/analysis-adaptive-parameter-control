# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    complex_0 = 1697.79003 + 729.9767j
    bytes_0 = b"\x1ew\x08GB0?\x8b\x16\x8c\xebm\xab"
    tuple_0 = (var_1, complex_0, bytes_0, var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    module_2.object(**var_3)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x08\xeb\x1a-\r~\x99\xb6\x95\x82\xc9\xda\xb1\x14?\xc5\xd0\xe2b"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "nEHSJ"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    dict_0 = {var_0: var_0, var_1: var_2}
    var_4 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "Yth.%5}K\to"
    str_1 = "nEHSJ"
    dict_0 = {str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(**dict_0)


def test_case_10():
    bytes_0 = b"\xd5\xdc\xdc\x85\xd2z\x85kh\xf57y1t\xed\xe9,\xdeJ"
    bytes_1 = b"ov%t\xc4=e\xbb\x99T"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_1, bytes_0: bytes_0, bytes_1: bytes_1}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "nEHSJ"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "Wh\t"
    bool_0 = False
    dict_0 = {str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict(*ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_1)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    bool_1 = True
    var_5 = module_0.to_namedtuple(var_4)
    dict_1 = {var_3: ordered_dict_1, var_5: bool_1, var_5: var_3}
    list_0 = [var_2, dict_1]
    var_6 = module_0.to_namedtuple(list_0)
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(dict_1)
    var_9 = module_0.to_namedtuple(dict_1)
    var_10 = module_0.to_namedtuple(dict_1)
    var_11 = module_0.to_namedtuple(var_7)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
