# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "B2"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "B2"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    object_0 = module_2.object()
    dict_0 = {object_0: object_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "uwu9(p_?Cz#UxeL"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_11():
    bytes_0 = b"\xb5\x11\xa8\xf2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    dict_1 = {tuple_0: dict_0}
    var_0 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\x0cB2"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
