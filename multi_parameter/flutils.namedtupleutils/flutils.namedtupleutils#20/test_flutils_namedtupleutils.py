# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bytes_0 = b""
    tuple_0 = (bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    tuple_1 = (bool_0,)
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    dict_1 = {
        object_0: object_0,
        object_0: dict_0,
        object_0: object_0,
        object_0: dict_0,
    }
    var_0 = module_0.to_namedtuple(dict_1)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "@k\\;y5:("
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "xk\\;y5:("
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    object_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    str_0 = "is_package"
    dict_0 = {
        str_0: str_0,
        str_0: list_0,
        str_0: list_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    ordered_dict_0 = module_2.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "underscore_to_camel"
    bool_0 = False
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\xa4\xc4\xae\xdb\x07"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    list_0 = []
    str_0 = "oX\rc\x0b&?bp"
    str_1 = "is_package"
    dict_0 = {
        str_0: str_0,
        str_1: list_0,
        str_0: list_0,
        str_0: str_1,
        str_0: str_0,
        str_1: str_1,
    }
    ordered_dict_0 = module_2.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    list_0 = []
    str_0 = "!"
    str_1 = "oX\rc\x0b&?bp"
    str_2 = "\rs_patckage"
    dict_0 = {
        str_0: str_0,
        str_2: list_0,
        str_0: list_0,
        str_0: str_2,
        str_1: str_0,
        str_2: str_2,
    }
    ordered_dict_0 = module_2.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = -174
    tuple_0 = (ordered_dict_0, ordered_dict_0, int_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
