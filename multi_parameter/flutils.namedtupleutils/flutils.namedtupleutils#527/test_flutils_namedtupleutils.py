# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -403.0
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "utf8"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x13\x1c`W\x9fjD\xf7B'\xa55\xaf\x08\xecI\xb1\xae\xbc"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "iZ}&\x0bh!4|+\r#"
    bool_1 = True
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, str_0, bool_1]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_7():
    str_0 = "utf8"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    none_type_0 = None
    str_0 = "4F<\tTd@0<Vf_{cYy"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    set_0 = set()
    int_0 = 4
    bytes_0 = b"\xbd\xf82\xce\xec/\xe2\xc4p"
    list_0 = []
    tuple_0 = (bytes_0, int_0, bytes_0, list_0)
    bool_0 = False
    list_1 = [tuple_0, bytes_0, list_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {bool_0: bool_0, bytes_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_1 = (list_1, var_0, set_0, ordered_dict_0)
    module_0.to_namedtuple(tuple_1)


def test_case_11():
    set_0 = set()
    bool_0 = True
    int_0 = 4
    bytes_0 = b"\x96,T\xf9o\x05\x83\xce \xaf"
    list_0 = []
    tuple_0 = (bool_0, int_0, bytes_0, list_0)
    bool_1 = False
    list_1 = [tuple_0, bytes_0, list_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    str_0 = "h6U\x0c"
    dict_0 = {bool_1: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_1 = (list_1, bool_0, set_0, ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    module_1.OrderedDict(**int_0)
