# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_1():
    int_0 = 6
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = ".6wFZ=,\x0c?2"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x97\x12\x9erPJ7\x90\x81\xfe!\x8e"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"\xb5)"
    list_0 = [bytes_0, bytes_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    bytes_0 = b"0\xb7\xb5\xed$C,\x81UY\x13\xc7c\x8c\xd2T\x800\x8e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    ordered_dict_0 = module_1.OrderedDict()
    int_0 = -2004
    list_1 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(list_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "r"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    tuple_0 = (var_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_1 = {var_0: dict_0, bool_0: bool_0, var_0: var_0}
    var_2 = module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "r"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0bnmRW"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    bytes_0 = b"\x91\\-\xdc}"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_1.OrderedDict()
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_0)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(dict_1)
    var_9 = module_0.to_namedtuple(var_1)
    dict_2 = {var_2: dict_0, var_9: var_3, var_2: var_1}
    var_10 = module_0.to_namedtuple(dict_2)
    var_11 = module_0.to_namedtuple(var_2)
    bool_1 = True
    module_0.to_namedtuple(bool_1)
