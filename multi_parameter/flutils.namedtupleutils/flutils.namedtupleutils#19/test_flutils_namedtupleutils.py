# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    float_0 = -1089.411598
    tuple_0 = (dict_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "bash"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    bytes_0 = b"\xf9\xdf\x19\xf4_^\xcec\xbe0\xadd\xe7\xe0\xe6\xbd\xa9\xdf\xccI"
    float_0 = -1089.411598
    tuple_0 = (float_0,)
    tuple_1 = (bytes_0, tuple_0)
    dict_1 = {float_0: object_0, object_0: tuple_1}
    tuple_2 = (dict_1, float_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    tuple_3 = ()
    var_1 = module_0.to_namedtuple(tuple_3)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = 'd+\x0c!+Mc"H|.mnoB'
    bool_0 = False
    str_1 = "bash"
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: str_1, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    tuple_0 = (dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xc7\x14'h\xc9A-,\xb4\x01~\xe1\xa7F\xdf\xdb\x1dg\xb3"
    dict_1 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_11():
    bool_0 = False
    str_0 = 'd+\x0c!+Mc"H|.mnoB'
    str_1 = "\x0bk"
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: str_1, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
