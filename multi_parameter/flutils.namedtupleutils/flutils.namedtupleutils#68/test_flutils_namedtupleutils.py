# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1656
    module_0.to_namedtuple(int_0)


def test_case_1():
    float_0 = 34.679852
    complex_0 = -1834.4 - 237.923j
    bool_0 = False
    complex_1 = 3418 + 1347.8165j
    bytes_0 = b"\x9bi\xb6\xf5\xf7\xdc\xd5\xae"
    tuple_0 = (bool_0, bool_0, complex_1, bytes_0)
    tuple_1 = (float_0, complex_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    int_0 = 2
    tuple_2 = (var_0, var_0, var_0, int_0)
    var_1 = module_0.to_namedtuple(tuple_2)


def test_case_2():
    str_0 = "bash"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    bytes_0 = b"\xbe#VFY\xa00\x1er\x9fz\x82b"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0]
    int_0 = 2890
    tuple_1 = (list_0, int_0, bool_0, list_0)
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_2)


def test_case_6():
    str_0 = "y.8KnP!9zp{lx1:"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_1 = (var_0, var_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_8():
    str_0 = "y.8KnP!9zp{lx1:"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "get_os_user"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_1)


def test_case_11():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_2: bool_1}
    bytes_0 = b"V\xe5\xd3\xccP,y3~`yA"
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (bool_0, dict_0, bytes_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    str_0 = "y.8KnP!9zp{lx1:"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_1 = (dict_1,)
    list_0 = [dict_1, tuple_1]
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(list_0)
    dict_2 = {var_3: var_5, bytes_0: dict_1}
    module_0.to_namedtuple(dict_2)


def test_case_12():
    str_0 = " ash"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    list_0 = [dict_0, tuple_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)
