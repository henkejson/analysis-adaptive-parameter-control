# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    none_type_0 = None
    str_0 = "directoryXpresent"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b"j\x9ag,S0V\xf1"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bool_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = '"x;&)J"/'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "directoryXpresent"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    float_0 = -680.6
    str_0 = "4\\/SaYK+\r\tVK4GG2qU<|"
    dict_0 = {float_0: float_0, float_0: float_0, float_0: str_0, str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(float_0)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "e53Ro!@nq^"
    none_type_0 = None
    str_1 = "ADF-M#\x0coF"
    str_2 = "\tJ"
    str_3 = "c5?L:uV*CKLn"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)
