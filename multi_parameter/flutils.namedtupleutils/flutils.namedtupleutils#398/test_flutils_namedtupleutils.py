# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    list_1 = [bool_0, bool_0, bool_0]
    var_1 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(bool_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"I;\xde\xa2\x04\x15LS#!\x00\x9c\x9f\xd6\xd5"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "T"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "T"
    set_0 = set()
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (set_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    list_0 = [dict_0, dict_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "T"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0, var_0, tuple_0, var_0)
    str_0 = "The given value for 'pre_release', %r, can only be one of: 'a', 'alpha', 'b', 'beta', None."
    bool_0 = False
    dict_0 = {tuple_1: tuple_1, str_0: bool_0}
    tuple_2 = (dict_0,)
    var_1 = module_0.to_namedtuple(tuple_2)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "The given value for 'pre_release', %r, can only be one of: 'a', 'alpha', 'b', 'beta', None."
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_13():
    str_0 = "Zq~?np\\xx"
    bytes_0 = b"vM\x1c\x94?\xe0{\xd9\xee\xec\xeb\xc9\xe1\xe2\xcb"
    int_0 = 2632
    tuple_0 = (str_0, bytes_0, int_0)
    bool_0 = True
    dict_0 = {tuple_0: int_0, bytes_0: int_0, str_0: bool_0, bytes_0: str_0}
    tuple_1 = (dict_0, bool_0)
    module_0.to_namedtuple(tuple_1)


def test_case_14():
    str_0 = "\tz"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_1.OrderedDict()
    bool_0 = True
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)
