# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_2():
    complex_0 = -379.02 - 937.8347j
    dict_0 = {complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x0b\x82H\x05N'\xa3\xc4em*\xf0\xa8M\x7f"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "NvamedTuple"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "o'i|UVaN'"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "`5Wm2(B:3~LY-^]"
    str_1 = "*HzYPZ+Lw*Cy:SS}7''"
    str_2 = "`s'kvD9q A:0"
    dict_0 = {str_0: str_1, str_2: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    complex_0 = 2731.1 + 3999.2j
    bytes_0 = b""
    dict_0 = {complex_0: complex_0, complex_0: complex_0, bytes_0: complex_0}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_13():
    str_0 = "\x0bsky"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    set_0 = {object_0, var_1}
    module_0.to_namedtuple(set_0)
