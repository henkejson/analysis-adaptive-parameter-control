# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 3193
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = ";QKg% \\x"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    int_0 = 3193
    tuple_0 = (ordered_dict_0, int_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x0b\xc1\xb3\xc1d\x8c\xd9Kq\x1cF"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = ";QKg% \\x"
    str_1 = "initialize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = ";QKg% \\}x"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"\x0b\xc1\xb3\xc1d\x8c\xd9Kq\x1cF"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "I{%d"
    set_0 = {str_0, str_0, str_0}
    module_0.to_namedtuple(set_0)


def test_case_12():
    int_0 = -1613
    bool_0 = True
    dict_0 = {int_0: bool_0, bool_0: int_0}
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0, bool_0: dict_0}
    list_0 = [dict_1]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_13():
    bytes_0 = b"\xb7\xbec6UJ\xdb\xd5\x91\xc6\xd3\xff,\x17\x8a\xb2\x81\x1b\xa7\xef"
    bool_0 = True
    dict_0 = {bytes_0: bool_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    str_0 = ";QKg% \\x"
    str_1 = "\rq01L"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    int_0 = 3193
    tuple_0 = (ordered_dict_0, int_0)
    object_0 = module_2.object()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(object_0)
