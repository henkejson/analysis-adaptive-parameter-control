# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "cqc"
    float_0 = -2975.0952
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "doc"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'a_<s;@H1;|/B"3'
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    none_type_0 = None
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(none_type_0, none_type_0)


def test_case_7():
    bytes_0 = b"\xa9?/i4Q]2|\xff\xf1\xa1z"
    bytes_1 = b"\x00^\x03+\xfbSe\xc1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_1: bytes_1, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "cqc"
    float_0 = -1561.0
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0, str_0: float_0}
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b'Q\xab\xb6"\x84:\xe2\xae\\\xc4\x1f\xe6m\x05\x12\x18\x06\x00f>'
    list_1 = [var_0, bytes_0, bytes_0]
    module_2.object(*list_1)


def test_case_10():
    str_0 = "\tqCK"
    float_0 = -1561.0
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0, str_0: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_2.object()
    none_type_0 = None
    var_7 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    str_0 = "[q\\"
    float_0 = -1561.0
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0, str_0: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_2.object()
    list_1 = [str_0, var_0, dict_0]
    var_7 = module_0.to_namedtuple(list_1)
    var_8 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(float_0, var_3)
