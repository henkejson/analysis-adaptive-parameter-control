# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    object_0 = module_1.object()
    int_0 = -360
    set_0 = {int_0, int_0, int_0}
    tuple_0 = (object_0, int_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "X"
    bytes_0 = b"\xf29\xf24"
    dict_0 = {str_0: str_0, str_0: bytes_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"v\xc0?\xe8k\xa2\x7f\xa61\xc4\xe7\xe1\x92\x87}"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"\xe2\xfa\x08Q\xee\x90\t\x19"
    module_0.to_namedtuple(bytes_0)


def test_case_6():
    str_0 = "|`."
    str_1 = "X"
    bytes_0 = b"\xf29\xf24"
    dict_0 = {str_0: str_0, str_1: bytes_0, str_1: str_1}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "X"
    bytes_0 = b"\xf29\xf24"
    dict_0 = {str_0: str_0, str_0: bytes_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    set_0 = set()
    module_0.to_namedtuple(set_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "|`."
    str_1 = "X"
    bytes_0 = b"\xf29\xf24"
    dict_0 = {str_0: str_0, str_1: bytes_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"\x17-\xf4\xef\xd7'\xb0\x90\x9ec>\xf4\xe4\xcdN"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "a;*&X]W^:"
    str_1 = "\tas_any_attrs"
    int_0 = 1
    str_2 = "Q/V"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: int_0, str_2: str_2}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(var_0)
    list_0 = [dict_1, dict_1]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(dict_1)
    ordered_dict_1 = module_2.OrderedDict()
    var_5 = module_0.to_namedtuple(ordered_dict_1)
    list_1 = []
    var_6 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(none_type_0)
