# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = -780.75045
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 1278.0
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_1 = {bool_0: bool_0, bool_0: dict_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_1)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "PP"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    str_0 = "g"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    str_0 = "![^U_"
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    float_0 = 2497.52289
    module_1.namedtuple(float_0, float_0)


def test_case_10():
    bytes_0 = b"\x02sps\x0el#"
    bool_0 = True
    int_0 = 128
    str_0 = "cDDT|H.$HCF`W`%T`Ys"
    complex_0 = -2065.6381 + 107.38j
    dict_0 = {bytes_0: str_0, str_0: complex_0, str_0: complex_0}
    tuple_0 = (bytes_0, bool_0, int_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "g"
    str_1 = "BqUadGrbDeo26(s1@ob,"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    list_0 = [bool_0, bool_0]
    ordered_dict_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "g"
    str_1 = "RjA\x0c"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(list_0)
    ordered_dict_1 = module_1.OrderedDict()
    object_0 = module_2.object()
    ordered_dict_2 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(var_1)
    int_0 = 88
    tuple_0 = (int_0, int_0, int_0)
    tuple_1 = (tuple_0,)
    bool_0 = True
    var_4 = module_1.OrderedDict()
    dict_1 = {int_0: tuple_1, int_0: tuple_1, tuple_0: int_0, bool_0: tuple_0}
    var_5 = module_0.to_namedtuple(dict_1)
    var_6 = module_0.to_namedtuple(var_5)
    module_1.namedtuple(object_0, list_0)
