# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    complex_0 = 827 + 194.96476j
    set_0 = {complex_0}
    tuple_0 = (set_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xd3\x1a\xf1\xf3<\x13FC\x86\x95\xd4&\xa6\x10;\x94\x97*"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    str_0 = "home"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = ",5EXn}R*n\\L_"
    bool_0 = True
    str_1 = "home"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = True
    bytes_0 = b"\x13\xf8\xa7\xfa\xcc\xcc\xe4Nn7\xa9\xac\x87\xd6\x82Q\x19\xb9\x19"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "y2\x0b ?Udtjdv]Go"
    ordered_dict_0 = module_1.OrderedDict()
    str_1 = ".D^w0_d'nV]t"
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_2 = ",5EXn}R2n\\L_"
    bool_0 = False
    str_3 = " home"
    dict_0 = {str_0: ordered_dict_0, str_1: str_0, str_2: bool_0, str_3: str_1}
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_1]
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = []
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_1)
    var_8 = module_0.to_namedtuple(var_3)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_7)
    var_11 = module_0.to_namedtuple(var_3)
    var_12 = module_0.to_namedtuple(var_11)
    var_13 = module_0.to_namedtuple(var_5)
    var_14 = module_0.to_namedtuple(list_1)
    var_15 = module_0.to_namedtuple(var_11)
    var_16 = module_0.to_namedtuple(var_12)
    var_17 = module_0.to_namedtuple(var_3)
    var_18 = module_0.to_namedtuple(var_15)
    tuple_0 = ()
    var_19 = module_0.to_namedtuple(tuple_0)
    ordered_dict_2 = module_1.OrderedDict()
    var_20 = module_0.to_namedtuple(tuple_0)
    var_21 = module_0.to_namedtuple(var_20)
    list_2 = [var_4, bool_0]
    var_22 = module_0.to_namedtuple(list_2)
    var_23 = module_0.to_namedtuple(var_14)
    var_24 = module_0.to_namedtuple(list_2)
    module_0.to_namedtuple(str_2)
