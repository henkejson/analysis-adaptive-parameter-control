# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    float_0 = 299.0
    dict_0 = {float_0: float_0}
    complex_0 = 2400.66888 + 571.013406j
    list_0 = [dict_0, float_0, complex_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "beta"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    bytes_0 = b"!\xe8%"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bytes_0: bool_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_7():
    bytes_0 = b"Jo\xe9\x9d\xc8\xc3"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bytes_0)


def test_case_8():
    bytes_0 = b"\xf3\xea\x870v\x9cS\xa7\xd4\xf9\xa8\xfcd\xecQ\xaf"
    list_0 = [bytes_0, bytes_0]
    list_1 = [list_0, bytes_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_9():
    str_0 = "beta"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    float_0 = 299.0
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "beta"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()


def test_case_13():
    str_0 = "`kc"
    str_1 = "i$FAM/fGAA6Kl^"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_0: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(**dict_0)


def test_case_14():
    bool_0 = False
    str_0 = "beht\x0b"
    dict_0 = {str_0: str_0, str_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
