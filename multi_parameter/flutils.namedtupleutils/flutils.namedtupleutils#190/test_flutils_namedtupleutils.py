# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = " Cannot be a builtin name."
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b"a\xd4h\x92\xc8\x8dT\x11\xed\xa9\xc4\x91"
    list_0 = [ordered_dict_0, ordered_dict_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b"a\xd4h\x92\xc8\x8dT\x11\xed\xa9\xc4\x91"
    list_0 = [ordered_dict_0, ordered_dict_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "\t|F5Vl?XAP\\,"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "s37bn0r"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    list_0 = []
    str_0 = "G+"
    str_1 = "\tsi"
    dict_0 = {str_0: list_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    float_0 = 892.73657
    bytes_0 = b"0?\x9f6\x11\xe9\\\xa6d\xb9\x0f"
    dict_0 = {float_0: float_0, float_0: bytes_0, bytes_0: bytes_0, bytes_0: float_0}
    str_0 = ""
    tuple_0 = (float_0, bytes_0, dict_0, str_0)
    module_0.to_namedtuple(tuple_0)
