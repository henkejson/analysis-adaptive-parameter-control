# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = -3443
    str_0 = 'oJ#%4TtK>"'
    dict_0 = {int_0: int_0, int_0: int_0, str_0: str_0}
    list_0 = []
    tuple_0 = (int_0, int_0, dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(var_0, var_0, defaults=dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\x8f"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    tuple_1 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "PM"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    int_0 = -3443
    str_0 = 'oJ#%4TtK>"'
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = module_0.to_namedtuple(dict_0)
    list_1 = [str_0, dict_0, list_0, str_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_9():
    int_0 = -3443
    str_0 = 'oJ#%4TtK>"'
    dict_0 = {int_0: int_0, int_0: int_0, str_0: str_0}
    list_0 = [str_0, dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    bytes_0 = b"2\xba\x0c\xa6\xb9~"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\x0cc"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = -3443
    str_1 = 'oJ#%4TtK>"'
    dict_1 = {int_0: int_0, int_0: int_0, str_1: str_1}
    var_1 = module_0.to_namedtuple(dict_1)
    list_0 = []
    tuple_0 = (int_0, int_0, dict_1, list_0)
    list_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_0)
    bool_0 = False
    tuple_1 = (bool_0, var_4)
    var_8 = module_0.to_namedtuple(tuple_1)
