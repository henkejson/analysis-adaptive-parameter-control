# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_2():
    str_0 = "WL5"
    dict_0 = {str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"d\xa1\x01\xc5<\x0f\xf1\x84\xcb\x85P\xc0(\xaf\x10f'\xf3J"
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_8():
    str_0 = "npG# >"
    dict_0 = {str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    none_type_0 = None
    var_1 = module_1.to_namedtuple(var_0)
    module_2.namedtuple(none_type_0, none_type_0, rename=none_type_0)


def test_case_9():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_10():
    float_0 = -2686.979
    str_0 = ""
    int_0 = 1609
    dict_0 = {float_0: int_0, float_0: str_0, int_0: str_0}
    tuple_0 = (str_0, str_0, int_0, dict_0)
    tuple_1 = (float_0, float_0, tuple_0, int_0)
    var_0 = module_1.to_namedtuple(tuple_1)
    bool_0 = False
    module_1.to_namedtuple(bool_0)


def test_case_11():
    bytes_0 = b"\x99\x1f\xee3\x9d"
    object_0 = module_0.object()
    str_0 = "pre_txt"
    list_0 = [bytes_0, object_0, str_0, str_0]
    str_1 = "\x0bv@+s"
    dict_0 = {str_1: object_0, object_0: list_0}
    tuple_0 = (list_0, str_1, dict_0)
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: tuple_0, str_0: dict_0}
    module_1.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "WL\t"
    dict_0 = {str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    module_1.to_namedtuple(str_0)
