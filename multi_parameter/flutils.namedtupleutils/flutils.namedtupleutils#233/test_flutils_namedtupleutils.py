# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "}D0\n'Ki/\x0c4Cl5.'"
    bool_0 = False
    tuple_0 = (dict_0, str_0, bool_0)
    list_0 = [tuple_0, tuple_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xc6\xbb;"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"x\x13\xeb\\X\x90\x8a\xa4M\x0b\xa7\xe1\xbd\xc0"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    str_0 = "iG"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "~m=p^>"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "~m=p^>"
    dict_1 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    bool_1 = False
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_1)


def test_case_11():
    bytes_0 = b"\x11\x98\x00\xe2\xec\x89\x80\x95\xb7\xf7\x9al"
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, bool_0: bool_0}
    float_0 = -1193.42489
    float_1 = -3122.0
    str_0 = '"2x-yVXm;'
    tuple_0 = (str_0,)
    list_0 = [bytes_0]
    tuple_1 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    bytes_1 = b'\x83\xc7"Q\x06q\xa5\xcau_\x15\xae\x05\x0b\x88\xe7\xbf`'
    bool_1 = True
    list_1 = [bytes_1, bool_1, bool_1]
    var_1 = module_0.to_namedtuple(list_1)
    list_2 = [float_0, float_0]
    tuple_2 = (float_0, float_1, tuple_0, list_2)
    tuple_3 = (dict_0, bytes_0, tuple_2)
    module_0.to_namedtuple(tuple_3)


def test_case_12():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "G "
    dict_1 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    bool_1 = True
    var_5 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_1)
