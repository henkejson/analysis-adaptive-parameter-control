# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    complex_0 = -369.5 - 4414.2j
    str_0 = "maintainer_email"
    dict_0 = {str_0: complex_0, str_0: complex_0, str_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b"6\xb5\x83\n\x1bG\xe3\x12f\x93M(\x0f\x1d=\r\x96\xff\x9e"
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_4():
    bytes_0 = b"\x0b\x84\xd8\xda.DV{\xb7\xfa"
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0, var_0)
    dict_0 = {var_0: bytes_0, bytes_0: tuple_1, bytes_0: tuple_0}
    tuple_2 = (tuple_0, dict_0, dict_0)
    module_0.to_namedtuple(tuple_2)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    int_0 = -1044
    dict_0 = {int_0: int_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    float_0 = -1778.043619
    module_0.to_namedtuple(float_0)


def test_case_8():
    bytes_0 = b"@\xe4\xb3*\xb0a\x94\xa47Vr\xe9q\x88\x8bo \x9d\xd0\xb9"
    bool_0 = False
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bytes_0: bool_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    complex_0 = -2699.5 + 1859.64j
    str_0 = "maintainer_email"
    str_1 = "$B"
    dict_0 = {str_0: complex_0, str_1: complex_0, str_0: complex_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = True
    str_2 = "P]hd.=}oLt}bJ1"
    tuple_0 = (complex_0, ordered_dict_0, bool_0, str_2)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_2)


def test_case_13():
    str_0 = "\tr9"
    tuple_0 = ()
    tuple_1 = (str_0, tuple_0)
    dict_0 = {tuple_1: tuple_1, str_0: str_0}
    tuple_2 = (tuple_1, dict_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    list_0 = [var_0, tuple_1]
    module_1.OrderedDict(*list_0, **dict_0)
