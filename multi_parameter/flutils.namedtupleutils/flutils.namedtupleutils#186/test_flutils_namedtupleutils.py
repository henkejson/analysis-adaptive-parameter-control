# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    none_type_0 = None
    str_0 = "sockut"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "Zg]:"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_0, bool_1: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, bool_0, bool_0, bool_1]
    tuple_0 = (list_0, bool_1, var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_4)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bytes_0 = b"\x9c"
    bool_0 = True
    list_0 = [bytes_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_1 = b"&^]\xc7\xc6l\x96\x95T\x08\\\xdaW\xb6\xaa\xe1\x16B\xb7"
    module_0.to_namedtuple(bytes_1)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "sXyG6q\tCsB\x0c!cC'@.l"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    str_1 = "Zg]:"
    module_0.to_namedtuple(str_1)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)


def test_case_12():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"8\xe6"
    dict_0 = {tuple_0: tuple_0, tuple_0: var_0, bytes_0: tuple_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "+-Ef_axz>t)B]57(["
    none_type_0 = None
    str_1 = " Yet"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    str_2 = "IYc![j<raid7"
    module_0.to_namedtuple(str_2)
