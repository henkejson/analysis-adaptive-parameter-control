# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 70
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = -4502
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_2():
    float_0 = -4102.523831
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "_\\1"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "ZqaB"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "ZqaB"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    int_0 = -4502
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"U\xe0"
    dict_0 = {}
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: dict_0}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "placeholder_len"
    none_type_0 = None
    str_1 = ""
    str_2 = "z=3LmV:PWT"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 1024
    module_0.to_namedtuple(int_0)


def test_case_13():
    str_0 = "\x0bqWB"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(dict_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    module_1.OrderedDict(**var_2)
