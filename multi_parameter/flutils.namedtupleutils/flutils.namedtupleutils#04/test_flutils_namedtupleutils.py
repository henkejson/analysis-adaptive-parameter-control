# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "zLUvp.&"
    ordered_dict_0 = module_1.OrderedDict()
    float_0 = 991.26
    str_1 = 'R.j5S|MV"L779'
    tuple_0 = (str_0, ordered_dict_0, float_0, str_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bytes_0 = b"\x94\x13\xb2\x99+\xbf\xee\x07\xfa\xca\x84\xe5\x87\xdaT\xe1\x8a\x1d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'R.j5S|MV"L779'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    complex_0 = -1266.95 - 3017.044j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "-\tRSgaQ3o.2Ox`z1t"
    module_1.namedtuple(dict_0, var_1, defaults=str_0, module=var_0)


def test_case_7():
    str_0 = "A"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "{}\n"
    str_1 = "\rYknBW\\:7F"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0]
    module_1.namedtuple(list_0, var_0)


def test_case_11():
    str_0 = "cJ\x0b "
    str_1 = ":yR9~npD}%3zp\x0c^1;"
    dict_0 = {str_1: str_0, str_0: str_0, str_1: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, var_0, defaults=dict_0)
