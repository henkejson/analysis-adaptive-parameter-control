# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 1027.21
    list_0 = [float_0, float_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = '+vF"EhDYI'
    set_0 = {str_0, str_0, str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 's\x0bq"q;:'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    int_0 = -2051
    tuple_0 = (int_0, int_0, int_0)
    int_1 = 1151
    dict_0 = {tuple_0: tuple_0, int_1: int_0}
    tuple_1 = (tuple_0, int_1, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(int_0)


def test_case_7():
    str_0 = "\tFW1w8E!>7t=1j4R"
    str_1 = "vQt"
    set_0 = {str_1, str_1, str_1, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_1: set_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "vzyt"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_0 = b""
    tuple_0 = (ordered_dict_0, bytes_0, bytes_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "vzyt"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    str_0 = "gn?Jn~PNa TCOS#8/?!P"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(dict_0, var_0)


def test_case_13():
    str_0 = "gn?Jn~PNa TCOS#8/?!P"
    str_1 = "\tzi"
    set_0 = {str_1, str_1, str_1, str_0}
    dict_0 = {str_0: str_0, str_0: str_0, str_1: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(str_0)


def test_case_14():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    bytes_0 = b"\xf9"
    list_1 = []
    dict_0 = {bytes_0: list_1}
    complex_0 = 659 - 359.46237j
    tuple_0 = (dict_0, bool_0, complex_0, bool_0)
    tuple_1 = (list_0, bool_1, list_0, tuple_0)
    module_0.to_namedtuple(tuple_1)
