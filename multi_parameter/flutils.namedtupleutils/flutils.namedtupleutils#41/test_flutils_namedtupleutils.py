# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    set_0 = set()
    tuple_0 = (set_0,)
    var_0 = module_1.to_namedtuple(tuple_0)
    module_1.to_namedtuple(set_0)


def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    str_0 = "version"
    list_0 = [str_0]
    dict_0 = {str_0: tuple_0, str_0: tuple_0, tuple_0: list_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    module_1.to_namedtuple(bool_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "7P:]uLG\t+[!Qt{y"
    module_1.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    bool_0 = True
    bytes_0 = b"\xb2"
    dict_0 = {bool_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, dict_0]
    module_1.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    var_2 = module_1.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "3z^t<Gle>JP"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0]
    var_0 = module_1.to_namedtuple(list_0)
    float_0 = -1379.0
    var_1 = module_1.to_namedtuple(var_0)
    tuple_0 = (float_0, var_1, var_1)
    var_2 = module_1.to_namedtuple(tuple_0)
    var_3 = module_1.to_namedtuple(var_2)
    bool_0 = True
    tuple_1 = (bool_0,)
    var_4 = module_1.to_namedtuple(tuple_1)
    list_1 = [var_4, bool_0, bool_0, var_4]
    var_5 = module_1.to_namedtuple(list_1)


def test_case_10():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_1,)
    str_0 = "\x0cersFoS"
    list_0 = [str_0]
    bytes_0 = b"\xd7\x16\x84\xac\x01\x96(\x1c2\xe2\x10\x03d"
    str_1 = "\\u{:0>4}"
    tuple_1 = (tuple_0, list_0, bytes_0, str_1)
    dict_0 = {str_1: tuple_0, str_0: tuple_1, tuple_0: list_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(tuple_1)
    tuple_2 = (bool_0, var_0, tuple_0, tuple_0)
    var_2 = module_1.to_namedtuple(var_0)
    var_3 = module_1.to_namedtuple(tuple_2)
    module_2.namedtuple(var_0, str_1)
