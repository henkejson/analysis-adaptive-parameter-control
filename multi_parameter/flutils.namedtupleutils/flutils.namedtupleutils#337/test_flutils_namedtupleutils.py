# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "\x0b(:tqI4\\8z"
    dict_0 = {str_0: str_0, str_0: str_0}
    bytes_0 = b"H\xc3\x9dj\xaeU\t\x9d\xe3\x03iwT\xcc\x8f(*\xdc\x1b"
    dict_1 = {str_0: str_0}
    list_0 = [dict_0, dict_1, dict_0]
    bool_0 = True
    tuple_0 = (dict_0, bytes_0, list_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "R6*_mI{M"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"\xd5L\x01\x0e_\xf2\x96\x1ck!\xc8*\x8c$\x86\x97s\x84+"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bytes_0 = b"p\xe5\xb0\xf7\xd54B98\x92n[\xa0\xcc\xb7\xa9\xceX=G"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    bool_0 = False
    float_0 = -926.21581
    dict_0 = {bool_0: bool_0, float_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_11():
    str_0 = "Ppcn).c\nl/Z=aR$M"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    str_0 = "b64"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    float_0 = -413.51
    list_0 = [float_0]
    str_0 = "}qPs\r5#%\rO"
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (list_0, str_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(dict_1)
    str_1 = " b64"
    dict_2 = {str_1: var_3, str_1: var_3, var_3: var_3}
    ordered_dict_0 = module_1.OrderedDict(**dict_2)
    var_7 = module_0.to_namedtuple(ordered_dict_0)
    var_8 = module_0.to_namedtuple(var_7)
    var_9 = module_0.to_namedtuple(var_7)
