# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    none_type_0 = None
    str_0 = "Ju"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_2():
    str_0 = "encoding"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xe4>\xef{\x89'vt\x03\xa0c7\x9cH\xb08\x04\x08`\xaf"
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_7():
    str_0 = "%s.%s"
    str_1 = "encoding"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"\xf6J\xa8\x9c\x1d\x1b\x918x\xbd"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    bool_1 = True
    tuple_0 = (dict_0, dict_0, bool_0, bool_1)
    module_1.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_10():
    int_0 = -840
    list_0 = [int_0]
    tuple_0 = ()
    tuple_1 = (int_0, int_0, list_0, tuple_0)
    var_0 = module_1.to_namedtuple(tuple_1)


def test_case_11():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_1.to_namedtuple(dict_0)
    tuple_0 = ()
    tuple_1 = (var_0, var_0, var_0, tuple_0)
    var_1 = module_1.to_namedtuple(tuple_1)


def test_case_12():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "Ju"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_14():
    str_0 = "%s.%s"
    none_type_0 = None
    str_1 = "B\"'G>7MVX{>-&e)"
    str_2 = "Ju\x0c"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    module_1.to_namedtuple(none_type_0)
