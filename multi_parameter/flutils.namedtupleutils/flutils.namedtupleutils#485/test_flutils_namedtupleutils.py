# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 2722
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "minor"
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "w0OyVn"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_11():
    bytes_0 = b"q\x11\x18P\xb1\xf7\xe0\x08\xf1\xb1\x15\xb6\x94\xa7\x9a\xd3*J"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "H\x0co\\m/QNyz\r"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    dict_1 = {bool_0: set_0}
    list_0 = [set_0, bool_0, dict_1, set_0]
    var_3 = module_0.to_namedtuple(var_0)
    str_1 = ""
    list_1 = [tuple_0, str_1, list_0, str_1]
    var_4 = module_0.to_namedtuple(list_1)


def test_case_13():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = " M"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
