# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 2709
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_1.object(*var_1)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_1)
    list_0 = [var_4, int_0, var_1, object_0]
    var_6 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(object_0)


def test_case_2():
    float_0 = -3361.02
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "}SHQqniY|"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    int_0 = 2729
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_2.OrderedDict()
    object_0 = module_1.object(*ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "BRS"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "]ZOhapG*t\x0c1G?Kp-GE"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b"\x93\x8e\x1f\xb0"
    tuple_0 = (bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_2.namedtuple(tuple_0, tuple_0)


def test_case_10():
    str_0 = "]ZOhapG*t\x0c1G?Kp-GE"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    int_0 = -5388
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    object_0 = module_1.object(*var_1)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_2)
    list_0 = [var_5, int_0, var_2, object_0]
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_1.object()
    var_9 = module_0.to_namedtuple(dict_0)
    var_10 = module_0.to_namedtuple(var_1)
    str_0 = "C\t"
    str_1 = ",6wH0"
    dict_1 = {str_0: str_0, str_1: var_5, str_0: var_10}
    ordered_dict_0 = module_2.OrderedDict(**dict_1)
    var_11 = module_0.to_namedtuple(list_0)
    var_12 = module_0.to_namedtuple(ordered_dict_0)
    var_13 = module_0.to_namedtuple(list_0)
    ordered_dict_1 = module_2.OrderedDict()
    var_14 = module_0.to_namedtuple(var_9)
    var_15 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(var_8)


def test_case_12():
    bytes_0 = b"\n\xea\x12\xf5"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
