# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = -652.9977 + 2398.665539j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    int_0 = -1433
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "."
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    list_0 = []
    str_0 = "prep_cmd"
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"y\x9a&q"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "ZKC AW0e<3{^dPe"
    str_1 = "prep_cmd"
    dict_0 = {str_1: var_0, str_0: var_0, str_1: list_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    list_1 = [ordered_dict_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_11():
    str_0 = "(&5e{Oxi)u*8I`"
    str_1 = "\x0cU4B"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_1)
