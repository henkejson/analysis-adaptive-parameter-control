# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 70
    set_0 = {int_0, int_0}
    dict_0 = {int_0: int_0, int_0: int_0, int_0: set_0, int_0: int_0}
    tuple_0 = (dict_0, set_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "C9YY?"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "has_attrs"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_8():
    str_0 = "/"
    float_0 = 789.48378
    bytes_0 = b""
    dict_0 = {float_0: str_0, bytes_0: float_0, bytes_0: float_0}
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (str_0, dict_0, ordered_dict_0)
    list_0 = [tuple_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    str_0 = "Ct\\"
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    object_0 = module_2.object()
    var_6 = module_0.to_namedtuple(var_2)
    dict_1 = {var_2: var_6, str_0: var_3}
    tuple_0 = (dict_1, var_5)
    var_7 = module_0.to_namedtuple(tuple_0)
    var_8 = module_0.to_namedtuple(var_0)
    var_9 = module_0.to_namedtuple(var_4)
    var_10 = module_0.to_namedtuple(var_1)
    tuple_1 = (var_0, var_7, var_10)
    var_11 = module_0.to_namedtuple(var_8)
    var_12 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(str_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    list_0 = [dict_0]
    var_3 = module_0.to_namedtuple(list_0)
    var_4 = module_0.to_namedtuple(var_2)
    str_0 = "C\n"
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_1)
    var_8 = module_0.to_namedtuple(var_6)
    object_0 = module_2.object()
    var_9 = module_0.to_namedtuple(var_2)
    dict_1 = {var_2: var_3, str_0: var_4}
    tuple_0 = (dict_1, var_8)
    var_10 = module_0.to_namedtuple(tuple_0)
    var_11 = module_0.to_namedtuple(var_5)
    var_12 = module_0.to_namedtuple(list_0)
    var_13 = module_0.to_namedtuple(list_0)
    var_14 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_0)
