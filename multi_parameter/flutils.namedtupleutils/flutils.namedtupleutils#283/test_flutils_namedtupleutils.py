# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "path"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "l/A|m\tu'S<3Ox),"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "path"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "path"
    str_1 = "A module that manages attributes pointing to lazy-loaded-modules\n    and lazy-loaded-module-attributes.\n    "
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_1.object()


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    list_0 = [object_0, dict_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(object_0)


def test_case_12():
    bool_0 = True
    bytes_0 = b"6aE"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bytes_0: bool_0}
    tuple_0 = (bytes_0, bool_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_13():
    int_0 = 167
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "path\r"
    str_1 = "A module that manages attributes pointing to lazy-loaded-modules\n    and lazy-loaded-module-attributes.\n    "
    str_2 = "\n57@vT>"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(dict_0)
    list_1 = [var_2, var_2]
    var_6 = module_0.to_namedtuple(list_1)
    list_2 = [var_1, var_1, var_1]
    var_7 = module_0.to_namedtuple(list_2)
    var_8 = module_0.to_namedtuple(var_6)
    tuple_0 = (str_2,)
    var_9 = module_0.to_namedtuple(tuple_0)
    var_10 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_0)
