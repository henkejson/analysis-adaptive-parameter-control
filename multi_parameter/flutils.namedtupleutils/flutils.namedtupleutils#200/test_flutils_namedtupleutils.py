# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 3592
    str_0 = "beta"
    dict_0 = {str_0: str_0, str_0: int_0, str_0: int_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "]O#\x0b\r^!{{U>Ct|[m "
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    bytes_0 = b"\xd0}\x18\x00}\x8aP\x8b\x83_"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = module_0.to_namedtuple(ordered_dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "beta"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\xd7?\xb5^0\xfb"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = 566
    str_0 = "1WJ\\i/@$"
    tuple_0 = (int_0, str_0)
    dict_0 = {tuple_0: tuple_0, str_0: int_0, tuple_0: int_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    int_0 = 3583
    str_0 = "\x0bZ"
    tuple_0 = (int_0, str_0)
    dict_0 = {tuple_0: tuple_0, str_0: int_0, tuple_0: int_0, int_0: str_0}
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(dict_0, var_1, rename=int_0, defaults=var_0)
