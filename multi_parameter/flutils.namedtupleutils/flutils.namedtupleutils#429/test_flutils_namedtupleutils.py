# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    int_0 = 630
    module_0.to_namedtuple(int_0)


def test_case_1():
    dict_0 = {}
    tuple_0 = (dict_0,)
    bool_0 = False
    tuple_1 = (dict_0, tuple_0, dict_0, bool_0)
    bool_1 = True
    tuple_2 = (dict_0, tuple_1, bool_1)
    list_0 = [tuple_2]
    bytes_0 = b""
    tuple_3 = (list_0, tuple_2, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_3)
    bool_2 = True
    set_0 = set()
    tuple_4 = (bool_2, set_0)
    list_1 = [tuple_4, set_0, tuple_4, set_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_2():
    int_0 = -2977
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = ".H=/d.8Sbn]PTgn"
    module_0.to_namedtuple(str_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "#.H=/d.8Sbn]PTgn"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "encode"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.object(**var_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    str_0 = "0OhIc~yH',+N#0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    object_0 = module_1.object()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_2 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "V"
    dict_0 = {str_0: str_0}
    bytes_0 = b"\x086\xeaI\xa9\xcd7\xa0\xf9d\xceMiX\xfa\xa6"
    set_0 = set()
    dict_1 = {}
    list_0 = [str_0, str_0, set_0, dict_1]
    tuple_0 = (bytes_0, list_0)
    tuple_1 = (dict_1, str_0, dict_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    dict_2 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_1 = [set_0, dict_2, dict_2, var_0, var_0]
    module_0.to_namedtuple(list_1)


def test_case_13():
    str_0 = "\x0bZQNz6"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    str_1 = "V"
    dict_1 = {str_1: str_1}
    set_0 = set()
    dict_2 = {}
    list_0 = [str_1, str_1, set_0, dict_2]
    ordered_dict_1 = module_2.OrderedDict(**dict_1)
    dict_3 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_1 = [set_0, dict_3, dict_3, ordered_dict_1, ordered_dict_1]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_1)
    module_2.OrderedDict(*list_0, **dict_3)
