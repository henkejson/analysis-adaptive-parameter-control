# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "convert_escaped_unicode_literal"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = '4\\f+&u8\n~J"\t"2SA'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    dict_0 = {var_0: var_1, bool_0: bool_0}
    list_0 = [dict_0, dict_0]
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(list_0)
    list_1 = []
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(list_1)
    var_6 = module_0.to_namedtuple(var_4)


def test_case_7():
    str_0 = 'z"X?<zH5>nVa[\nh-5c'
    tuple_0 = (str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    dict_0 = {var_3: var_1, str_0: tuple_0, var_3: var_3}
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_4)
    list_0 = []
    var_8 = module_0.to_namedtuple(list_0)
    var_9 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_8, var_9, rename=var_4)


def test_case_8():
    bytes_0 = b"\xccP5\n[P\xba\x9eS\xc4\xc7\xce"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "f8\x0b"
    tuple_0 = (str_0, str_0)
    var_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_1)
    dict_0 = {var_3: var_2, str_0: tuple_0, var_3: var_3}
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_3)
    none_type_0 = None
    object_0 = module_2.object()
    module_0.to_namedtuple(none_type_0)
