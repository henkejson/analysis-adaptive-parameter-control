# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 0
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "%s%s%s"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "Q\x0c5~"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "Z"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 0
    module_0.to_namedtuple(int_0)


def test_case_10():
    bytes_0 = b"\xf1\xfc\xaaS"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    bool_0 = False
    list_0 = []
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: list_0}
    tuple_0 = (dict_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "c"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = -4540
    tuple_1 = (dict_1, str_0, str_0, int_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = "E\t"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = -4540
    tuple_0 = (dict_0, str_0, str_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "comans"
    tuple_1 = (tuple_0, dict_0, var_0, str_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    var_2 = module_0.to_namedtuple(var_0)
    bool_0 = False
    tuple_2 = (bool_0, var_2, tuple_0)
    module_1.namedtuple(tuple_1, tuple_0, rename=tuple_2, defaults=var_2)
