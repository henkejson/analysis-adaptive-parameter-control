# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    complex_0 = -186.81658 - 1639.912j
    tuple_0 = (ordered_dict_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "b"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"-\x05C\x97\x82)\x15\xdf\x07U\x8c\x90\xe7z\xde\x81"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [bool_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_1)
    tuple_0 = ()
    var_3 = module_0.to_namedtuple(var_2)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    str_0 = "-sqL8K"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    int_0 = -2314
    str_0 = "v]E"
    tuple_0 = (int_0, str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\x9e\xcb\xab\xc7\x9e\x9c\xfc\x1d}e\x962\x0f\x92\xa0\xf1\xaa"
    dict_0 = {bytes_0: bytes_0}
    list_1 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_1)


def test_case_10():
    str_0 = "\x0cL8K"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_2)
