# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = -1286.255 - 1526.341j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    int_0 = -2757
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    bytes_0 = b"%\x07\x19(\xe9k\x14\xb7\xcc3\xb2\xab\xd0\xda\x12"
    module_0.to_namedtuple(bytes_0)


def test_case_2():
    str_0 = "origin"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "(+J%?t(KeUb83"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = '\x0c-GAHA(E0MvXq"{8'
    bool_0 = False
    str_1 = "origin"
    dict_0 = {str_0: bool_0, str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    list_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = "\t}-h\x0cdX}uk"
    module_0.to_namedtuple(str_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(dict_0, var_1)


def test_case_11():
    bool_0 = False
    str_0 = "origin"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, str_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_12():
    str_0 = '\x0c-GAHA(E0M"Xq"{'
    bool_0 = False
    str_1 = "origin\x0c"
    dict_0 = {str_0: bool_0, str_0: str_0, str_1: str_0}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    tuple_0 = (var_1,)
    var_2 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_1)


def test_case_13():
    float_0 = 2938.634447
    bytes_0 = b"r\xbd\xee\x9f\x81\xfd\xa5\xc3\x14A"
    list_0 = [float_0]
    dict_0 = {bytes_0: list_0}
    bool_0 = False
    tuple_0 = (float_0, list_0, dict_0, bool_0)
    tuple_1 = (float_0, bytes_0, tuple_0)
    module_0.to_namedtuple(tuple_1)
