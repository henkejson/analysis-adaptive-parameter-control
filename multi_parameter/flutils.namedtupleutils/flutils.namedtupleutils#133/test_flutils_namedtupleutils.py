# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 2498
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xc0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    bool_0 = False
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, bool_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    int_0 = -513
    str_0 = "EjTJV9oW?(]=y3.0\ro7"
    dict_0 = {str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (int_0, ordered_dict_0)
    bool_0 = False
    tuple_1 = (int_0, tuple_0, bool_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    bytes_0 = b"\x8b"
    bool_0 = False
    bytes_1 = b"\x86\x97\x0e6"
    bool_1 = True
    dict_0 = {bytes_0: bool_0, bytes_1: bytes_1, bool_1: bytes_1, bool_1: bytes_1}
    tuple_0 = (dict_0,)
    tuple_1 = (bytes_0, bool_0, bytes_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_11():
    str_0 = "c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "\tfMoXV"
    int_0 = 384
    list_0 = [int_0, int_0, str_0]
    float_0 = 1468.7
    dict_0 = {str_0: float_0, float_0: float_0}
    tuple_0 = (list_0, float_0, dict_0)
    tuple_1 = (str_0, int_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)
