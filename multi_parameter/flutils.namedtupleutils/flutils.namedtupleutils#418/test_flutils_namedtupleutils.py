# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = -918
    module_0.to_namedtuple(int_0)


def test_case_1():
    list_0 = []
    str_0 = "initial_indent_len"
    str_1 = "?W/A"
    dict_0 = {str_1: list_0, str_0: str_0, str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    list_1 = [bool_0, bool_0, bool_0, bool_0]
    var_2 = module_0.to_namedtuple(list_1)


def test_case_2():
    bytes_0 = b"H\xb2\x8fI\xd4"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "le*}q5H8c\\`\rr"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "initial_indent_len"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    list_0 = []
    str_0 = 'V?13Px&pD"b'
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    module_2.object(**dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    module_1.OrderedDict(*var_1)


def test_case_12():
    float_0 = -3721.112137
    tuple_0 = (float_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = []
    str_0 = "iitial_indet_len"
    dict_0 = {str_0: str_0, var_0: var_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_1.OrderedDict()
    var_3 = module_2.object()
    list_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)


def test_case_13():
    float_0 = -3721.112137
    tuple_0 = (float_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    str_0 = "\x0ciitial_indet_len"
    str_1 = "2a"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_0)
    var_7 = module_0.to_namedtuple(dict_0)
    int_0 = 97
    module_0.to_namedtuple(int_0)
