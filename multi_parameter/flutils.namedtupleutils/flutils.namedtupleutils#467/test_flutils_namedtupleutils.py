# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"H\xb5,3\x95r5\xcc\xc6\xb3\xd6\xb1\x99Q"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    list_1 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "rigin"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    int_0 = 5266
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    list_1 = [list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_10():
    int_0 = 5266
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    none_type_0 = None
    str_0 = "rigin"
    str_1 = ".N}xm-V=;flXv{'"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_12():
    bytes_0 = b"\x012\x14\xa6!\xa2\xa1\x84R\xd9L\xa2"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    list_0 = []
    str_0 = ')=-F2:wA"t\'M8"SU'
    str_1 = "nd$EuGQTq|',^s*fU}6F"
    none_type_0 = None
    str_2 = "B+`0U\\\n>o'Z:(s`X"
    str_3 = "\tiMn"
    str_4 = ".N}xm-V=;flXv{'"
    dict_0 = {
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
        str_4: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    str_5 = "?BS"
    dict_1 = {str_0: str_0, str_0: ordered_dict_0, str_5: none_type_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
