# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = []
    int_0 = -1906
    tuple_0 = (ordered_dict_0, list_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "z8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xa8\x8f\xf0\xd5y"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "z8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    none_type_0 = None
    str_0 = "@(SKAx;T"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"\xe7i\xb6\xe0\x8c\x9b\xfa\x0f0_y"
    bool_0 = True
    float_0 = -2064.0
    list_0 = [bool_0, bool_0, float_0]
    dict_0 = {bytes_0: bytes_0, bool_0: list_0, bytes_0: list_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0,)
    list_0 = [tuple_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\xa8\x8f\xf0\xd5y"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    int_0 = 24
    dict_0 = {int_0: int_0, int_0: int_0}
    var_1 = module_0.to_namedtuple(dict_0)
    module_2.object(**dict_0)


def test_case_13():
    str_0 = "nE 3#Vg96_NNZZ7Y"
    str_1 = "`!{[,<vjJx\\vmqRyL$g$"
    str_2 = "tin "
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_2)
    dict_2 = {str_0: dict_1, var_3: var_3}
    var_6 = module_0.to_namedtuple(dict_2)
    var_7 = module_0.to_namedtuple(dict_2)
    var_8 = module_0.to_namedtuple(var_2)
    var_9 = module_0.to_namedtuple(dict_0)
    complex_0 = -1901.990728 - 795.1984195776768j
    module_0.to_namedtuple(complex_0)
