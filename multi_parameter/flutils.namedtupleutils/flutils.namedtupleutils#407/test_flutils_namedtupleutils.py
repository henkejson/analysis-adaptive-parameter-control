# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 4150.257779 - 1412.33134j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"T\xce_\x8e\x14\x0b\xbf\x98\xac`\xce\xf1\xc8\xee\xfc\xf5hC\xe0"
    module_0.to_namedtuple(bytes_0)


def test_case_2():
    str_0 = "y2EbE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"T\xce_\x8e\x14\x0b\xbf\x98\xac`\xce\xf1\xc8\xee\xfc\xf5hC\xe0"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b"\xd2\x12\x16\xff\x0e\xd2\x18\t#1)"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {bytes_0: bytes_0, tuple_0: bytes_0}
    dict_1 = {tuple_0: tuple_0, tuple_0: dict_0, bytes_0: dict_0, bytes_0: dict_0}
    tuple_1 = (tuple_0, dict_1, dict_0, bytes_0)
    module_0.to_namedtuple(tuple_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    float_0 = 2867.426
    str_0 = "Zx&$]?FCmT,"
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0}
    tuple_0 = (float_0, str_0, float_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "The given 'identifier' must be a 'str'.  Got: %r"
    str_1 = "bzF=7O]9g"
    str_2 = "y20b\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
