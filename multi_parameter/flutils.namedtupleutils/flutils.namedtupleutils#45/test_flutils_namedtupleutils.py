# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 1
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "dWvxh"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "z<p@  Q#=N5C"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "dWvxh"
    str_1 = "\n"
    dict_0 = {str_0: str_1, str_0: str_0, str_1: str_1, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"NY\x18_^\x1a\xc0\xc3-y:F\xf4\xcdL "
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [bool_0]
    tuple_0 = (dict_0, dict_0, list_0)
    list_1 = [tuple_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_12():
    list_0 = []
    str_0 = "dWvxh"
    str_1 = " V"
    bool_0 = True
    dict_0 = {str_0: list_0, str_0: str_0, str_1: str_1, str_1: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    object_0 = module_2.object(*list_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_2.object()
    var_5 = module_0.to_namedtuple(var_1)
    module_1.namedtuple(var_1, bool_0, rename=var_0, module=var_0)
