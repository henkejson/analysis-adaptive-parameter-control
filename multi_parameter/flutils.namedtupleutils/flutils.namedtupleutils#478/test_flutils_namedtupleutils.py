# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 5
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 354
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    str_0 = "o"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"{("
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    int_0 = -3454
    set_0 = {int_0, int_0, int_0}
    dict_0 = {int_0: int_0}
    tuple_0 = (int_0, set_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "3mT:\\9SM74Utfq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    float_0 = 875.45
    dict_0 = {float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "@7txP.aCZ.cG"
    tuple_0 = (var_0, str_0, var_0, dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "c\n"
    str_1 = "3mT:\\9SM74Utfq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xfb9\x99\x15A<\xed!\xe5 \x86\xa3Q\x9b\xaf"
    module_1.namedtuple(bytes_0, bytes_0, module=str_0)


def test_case_12():
    bytes_0 = b"\x9f\xaa\x11bU\xad\xded"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
