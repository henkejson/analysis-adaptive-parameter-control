# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_1 = True
    tuple_0 = (dict_0, bool_1, bool_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bool_1)


def test_case_2():
    str_0 = "Y\t"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "Td)81)\x0bn_:+p\x0c.g"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "HNC"
    bool_0 = True
    dict_0 = {bool_0: str_0, str_0: str_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\x99\x90Q\x1d\xc2Y%\x8a\\\x17\x12\xc0\x18\xc7K"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, bytes_0, bool_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "8yA[+j!+V.\x0ce/"
    dict_0 = {str_0: str_0}
    tuple_0 = (str_0,)
    tuple_1 = (dict_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    str_1 = "NamedTuple"
    module_0.to_namedtuple(str_1)
