# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 784
    float_0 = -852.0036
    dict_0 = {int_0: int_0, float_0: float_0, float_0: int_0}
    bool_0 = True
    tuple_0 = (int_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_1.object(*var_0)


def test_case_2():
    str_0 = "m"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "Ax8qY*M"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    int_0 = 784
    bytes_0 = b"\x05\xfeHs\x86\xa5p\x91\xca\x98Kb\xc5\xd4\x93d"
    dict_0 = {
        int_0: bytes_0,
        bytes_0: int_0,
        int_0: int_0,
        int_0: bytes_0,
        bytes_0: bytes_0,
        int_0: bytes_0,
    }
    bool_0 = True
    tuple_0 = (int_0, dict_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = "aR-fdK*?2v:L4"
    dict_0 = {str_0: str_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 1160
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bool_1 = True
    tuple_1 = (int_0, dict_1, bool_1)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_2)
    list_0 = [var_2]
    var_5 = module_1.object()
    var_6 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "m"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0cm"
    dict_0 = {str_0: str_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)
