# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    list_0 = []
    set_0 = set()
    str_0 = ":\n\n "
    tuple_0 = (set_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "pre_txt"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "L ^|0y"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    var_1 = module_0.to_namedtuple(tuple_1)
    tuple_2 = ()
    dict_0 = {tuple_0: tuple_0, tuple_2: tuple_2, tuple_2: tuple_2, tuple_2: tuple_2}
    tuple_3 = (tuple_0, dict_0)
    var_2 = module_0.to_namedtuple(tuple_2)
    tuple_4 = (var_2, var_2, tuple_3)
    var_3 = module_0.to_namedtuple(tuple_4)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "RD\r/>H"
    dict_0 = {str_0: str_0}
    int_0 = -1545
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_10():
    list_0 = []
    set_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "pre_txt"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    int_0 = -940
    str_0 = "eDa~"
    bytes_0 = b"\xc3\xfb\xe8\xb2"
    dict_0 = {str_0: bytes_0, int_0: int_0, int_0: str_0, bytes_0: int_0}
    dict_1 = {int_0: int_0, int_0: dict_0}
    var_0 = module_0.to_namedtuple(dict_1)
    str_1 = "pre_txt"
    dict_2 = {str_1: str_1}
    bool_0 = False
    tuple_0 = (dict_2, bool_0)
    list_0 = [tuple_0, dict_2, int_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "pretxt "
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(dict_0, var_0, rename=dict_0)
