# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    module_0.FormatterPlugin()


def test_case_1():
    auth_plugin_0 = module_0.AuthPlugin()
    str_0 = "Content processing options"
    transport_plugin_0 = module_0.TransportPlugin()
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    auth_plugin_0.get_auth(password=auth_plugin_0)


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    bytes_0 = b"\xf0i\xdd\x10\xb94\x00\x08\xde\x15AU"
    str_0 = "A\n~2ls:QP|3"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    converter_plugin_0.convert(bytes_0)


def test_case_4():
    str_0 = 'tQVy9o QW",vS<'
    str_1 = "\n    Propagate the top-level list, if that’s what we got.\n\n    "
    float_0 = 190.5
    str_2 = "format_options"
    dict_0 = {str_1: float_0, str_1: float_0, str_2: str_2}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = formatter_plugin_0.format_headers(str_0)
    bool_0 = False
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(bool_0)


def test_case_5():
    str_0 = 'tQVy9o QW",vS<'
    str_1 = "\n    Propagate the top-level list, if that’s what we got.\n\n    "
    float_0 = 190.5
    str_2 = "format_options"
    dict_0 = {str_1: float_0, str_1: float_0, str_2: str_2}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = "e"
    str_4 = formatter_plugin_0.format_body(str_2, str_0)
    converter_plugin_0 = module_0.ConverterPlugin(str_3)
    str_5 = formatter_plugin_0.format_headers(str_0)
    bool_0 = False
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(bool_0)


def test_case_6():
    str_0 = 'tQVy9o QW",vS<'
    auth_plugin_0 = module_0.AuthPlugin()
    str_1 = "\n    Propagate the top-level list, if that’s what we got.\n\n    "
    float_0 = 190.5
    str_2 = "format_options"
    dict_0 = {str_1: float_0, str_1: float_0, str_2: str_2}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = formatter_plugin_0.format_headers(str_0)
    bool_0 = False
    str_4 = '-"'
    str_5 = formatter_plugin_0.format_metadata(str_4)
    auth_plugin_1 = module_0.AuthPlugin()
    auth_plugin_1.get_auth(bool_0)
