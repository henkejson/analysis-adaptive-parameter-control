# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    auth_plugin_0 = module_0.AuthPlugin()


def test_case_1():
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth()


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    str_0 = "format"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)


def test_case_4():
    str_0 = "02d"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    bytes_0 = b"\x15\xeb\xcc\xc8\xac\x9e\xca\x02\x14xL\xf6\xc4"
    converter_plugin_0.convert(bytes_0)


def test_case_5():
    module_0.FormatterPlugin()


def test_case_6():
    str_0 = "9format"
    str_1 = "format_options"
    str_2 = "=GV@\r2h<d{6"
    list_0 = [str_1, str_2]
    dict_0 = {str_1: str_1, str_2: str_0, str_1: list_0, str_2: list_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_3 = formatter_plugin_0.format_metadata(str_1)
    converter_plugin_0 = module_0.ConverterPlugin(str_1)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)


def test_case_7():
    str_0 = "9format"
    str_1 = "format_options"
    list_0 = [str_1, str_0]
    dict_0 = {str_1: str_1, str_0: str_0, str_1: list_0, str_0: list_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = "zc.{r~}4"
    str_3 = formatter_plugin_0.format_body(str_2, formatter_plugin_0)
    str_4 = formatter_plugin_0.format_metadata(str_1)
    converter_plugin_0 = module_0.ConverterPlugin(str_1)
    str_5 = formatter_plugin_0.format_headers(dict_0)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)
