# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    subscript_0 = module_0.Subscript()
    base_node_transformer_0 = module_1.BaseNodeTransformer(subscript_0)


def test_case_1():
    bit_or_0 = module_0.BitOr()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bit_or_0)
    dict_0 = {
        base_import_rewrite_0: bit_or_0,
        base_import_rewrite_0: base_import_rewrite_0,
        base_import_rewrite_0: bit_or_0,
        base_import_rewrite_0: base_import_rewrite_0,
        base_import_rewrite_0: bit_or_0,
        base_import_rewrite_0: base_import_rewrite_0,
    }
    import_from_0 = module_0.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bit_or_0 = module_0.BitOr()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bit_or_0)
    none_type_0 = None
    list_0 = [none_type_0, base_import_rewrite_0, none_type_0]
    str_0 = "=AdvOe5rznOTV5d"
    aug_assign_0 = module_0.AugAssign()
    str_1 = "0e7}1;5Li\x0bBT?"
    dict_0 = {
        str_0: aug_assign_0,
        str_1: str_0,
        str_0: list_0,
        str_0: base_import_rewrite_0,
    }
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    base_node_transformer_0 = module_1.BaseNodeTransformer(str_1)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bit_or_0 = module_0.BitOr()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bit_or_0)
    str_0 = "\x0c"
    dict_0 = {
        base_import_rewrite_0: str_0,
        base_import_rewrite_0: bit_or_0,
        base_import_rewrite_0: base_import_rewrite_0,
        base_import_rewrite_0: bit_or_0,
        str_0: base_import_rewrite_0,
        str_0: bit_or_0,
        str_0: bit_or_0,
    }
    import_from_0 = module_0.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    bit_or_0 = module_0.BitOr()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bit_or_0)
    str_0 = ""
    dict_0 = {
        base_import_rewrite_0: str_0,
        base_import_rewrite_0: bit_or_0,
        base_import_rewrite_0: base_import_rewrite_0,
        base_import_rewrite_0: bit_or_0,
        str_0: base_import_rewrite_0,
        str_0: bit_or_0,
        str_0: bit_or_0,
    }
    import_from_0 = module_0.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
