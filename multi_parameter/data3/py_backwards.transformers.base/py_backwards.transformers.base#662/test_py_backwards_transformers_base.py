# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    tuple_0 = module_0.Tuple()
    base_import_rewrite_0 = module_1.BaseImportRewrite(tuple_0)


def test_case_1():
    excepthandler_0 = module_0.excepthandler()
    base_import_rewrite_0 = module_1.BaseImportRewrite(excepthandler_0)
    list_0 = [excepthandler_0, excepthandler_0, excepthandler_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = "s8qC9P>ho^M7\nF\r}[k["
    dict_0 = {str_0: str_0}
    or_0 = module_0.Or(**dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(or_0)
    excepthandler_0 = module_0.excepthandler()
    base_import_rewrite_1 = module_1.BaseImportRewrite(excepthandler_0)
    list_0 = [excepthandler_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    none_type_0 = None
    list_1 = [none_type_0]
    import_from_1 = module_0.ImportFrom(*list_1)
    base_import_rewrite_1.visit_ImportFrom(import_from_1)


def test_case_3():
    excepthandler_0 = module_0.excepthandler()
    base_import_rewrite_0 = module_1.BaseImportRewrite(excepthandler_0)
    list_0 = [excepthandler_0, excepthandler_0, excepthandler_0]
    list_1 = [base_import_rewrite_0, list_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    excepthandler_0 = module_0.excepthandler()
    list_0 = []
    base_import_rewrite_0 = module_1.BaseImportRewrite(excepthandler_0)
    expr_0 = module_0.expr()
    base_node_transformer_0 = module_1.BaseNodeTransformer(expr_0)
    list_1 = [base_node_transformer_0, list_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
