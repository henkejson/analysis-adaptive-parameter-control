# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    continue_0 = module_0.Continue()
    base_import_rewrite_0 = module_1.BaseImportRewrite(continue_0)


def test_case_1():
    ellipsis_0 = module_0.Ellipsis()
    base_node_transformer_0 = module_1.BaseNodeTransformer(ellipsis_0)
    base_node_transformer_1 = module_1.BaseNodeTransformer(ellipsis_0)
    none_type_0 = None
    none_type_1 = None
    base_node_transformer_2 = module_1.BaseNodeTransformer(none_type_1)
    list_0 = [none_type_0, none_type_0]
    str_0 = "[d>F{J%;F3YMq\tPa"
    dict_0 = {str_0: str_0}
    base_node_transformer_3 = module_1.BaseNodeTransformer(str_0)
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = "[d>F{J%;F3YMq\tPa"
    dict_0 = {str_0: str_0}
    import_from_0 = module_0.ImportFrom(*dict_0, **dict_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_from_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    ellipsis_0 = module_0.Ellipsis()
    var_0 = module_2.walk(ellipsis_0)
    list_0 = [var_0, var_0]
    str_0 = "[d>F{J%;F3YMq\tPa"
    dict_0 = {str_0: str_0}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    import_from_1 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(var_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_1)


def test_case_4():
    ellipsis_0 = module_0.Ellipsis()
    var_0 = module_2.iter_child_nodes(ellipsis_0)
    list_0 = [var_0, var_0, var_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(import_from_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
