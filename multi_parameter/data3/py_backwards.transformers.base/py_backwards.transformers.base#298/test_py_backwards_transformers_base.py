# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    withitem_0 = module_0.withitem()
    base_import_rewrite_0 = module_1.BaseImportRewrite(withitem_0)


def test_case_1():
    bool_0 = True
    base_import_rewrite_0 = module_1.BaseImportRewrite(bool_0)
    list_0 = [bool_0, bool_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    str_0 = ""
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: str_0}
    invert_0 = module_2.walk(bool_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(invert_0)
    list_0 = [bool_0, dict_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    dict_0 = {}
    base_import_rewrite_0 = module_1.BaseImportRewrite(dict_0)
    list_0 = [base_import_rewrite_0, dict_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    none_type_0 = None
    base_import_rewrite_0 = module_1.BaseImportRewrite(none_type_0)
    none_type_1 = None
    base_node_transformer_0 = module_1.BaseNodeTransformer(none_type_1)
    dict_0 = {}
    while_0 = module_0.While()
    base_import_rewrite_1 = module_1.BaseImportRewrite(while_0)
    list_0 = [none_type_1, dict_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_0 = base_import_rewrite_1.visit_ImportFrom(import_from_0)
