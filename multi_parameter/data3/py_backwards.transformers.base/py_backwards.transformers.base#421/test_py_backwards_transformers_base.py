# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bytes_0 = b"\x14\x11\xe3P\x0f"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)


def test_case_1():
    bytes_0 = b"\\P"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    import_from_0 = module_1.ImportFrom(*bytes_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bytes_0 = b"G\x16\\\x0f"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    dict_0 = {
        base_import_rewrite_0: bytes_0,
        bytes_0: base_import_rewrite_0,
        base_import_rewrite_0: bytes_0,
        bytes_0: bytes_0,
    }
    import_from_0 = module_1.ImportFrom(*dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bytes_0 = b""
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    dict_0 = {
        base_import_rewrite_0: bytes_0,
        bytes_0: base_import_rewrite_0,
        base_import_rewrite_0: bytes_0,
        base_import_rewrite_0: bytes_0,
        bytes_0: bytes_0,
    }
    import_from_0 = module_1.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    bytes_0 = b"G\x0ck4n"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
