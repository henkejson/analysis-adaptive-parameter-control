# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    except_handler_0 = module_0.ExceptHandler()
    base_import_rewrite_0 = module_1.BaseImportRewrite(except_handler_0)


def test_case_1():
    bytes_0 = b"\xc7\xbed"
    base_import_rewrite_0 = module_1.BaseImportRewrite(bytes_0)
    import_from_0 = module_0.ImportFrom(*bytes_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bytes_0 = b"\xd2\xd3[\x7fUf\x84\x0c\x85\xfe"
    base_import_rewrite_0 = module_1.BaseImportRewrite(bytes_0)
    list_0 = []
    list_1 = [base_import_rewrite_0, list_0, base_import_rewrite_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bytes_0 = b">\xae#\x17\x1d\xe2\xb9\xb1i\xcf\xdb=\x13V\xa9@H\x01\xc8"
    base_import_rewrite_0 = module_1.BaseImportRewrite(bytes_0)
    list_0 = [base_import_rewrite_0, bytes_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    bytes_0 = b"\xd2\xd3[\x7fUf\x84\x0c\x85\xfe"
    base_import_rewrite_0 = module_1.BaseImportRewrite(bytes_0)
    none_type_0 = None
    list_0 = [none_type_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
