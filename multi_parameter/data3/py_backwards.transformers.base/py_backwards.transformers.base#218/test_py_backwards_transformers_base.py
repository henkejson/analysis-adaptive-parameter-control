# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    global_0 = module_0.Global()
    base_import_rewrite_0 = module_1.BaseImportRewrite(global_0)


def test_case_1():
    bin_op_0 = module_0.BinOp()
    list_0 = [bin_op_0, bin_op_0]
    base_import_rewrite_0 = module_1.BaseImportRewrite(bin_op_0)
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bin_op_0 = module_0.BinOp()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bin_op_0)
    str_0 = "*rK"
    str_1 = "|H"
    dict_0 = {str_0: str_1, str_0: str_1, str_1: str_1}
    import_from_0 = module_0.ImportFrom(*dict_0, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bin_op_0 = module_0.BinOp()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bin_op_0)
    base_node_transformer_0 = module_1.BaseNodeTransformer(base_import_rewrite_0)
    none_type_0 = None
    str_0 = "*rK"
    str_1 = "@"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    import_from_0 = module_0.ImportFrom(*dict_0, **dict_0)
    import_from_1 = module_0.ImportFrom()
    list_0 = [none_type_0, base_import_rewrite_0]
    import_from_2 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_2)


def test_case_4():
    bin_op_0 = module_0.BinOp()
    base_import_rewrite_0 = module_1.BaseImportRewrite(bin_op_0)
    str_0 = "*rK"
    str_1 = ""
    dict_0 = {str_0: str_1, str_0: str_1, str_1: str_1}
    import_from_0 = module_0.ImportFrom(*dict_0, **dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
