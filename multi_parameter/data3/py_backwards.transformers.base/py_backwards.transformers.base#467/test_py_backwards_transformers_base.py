# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    base_import_rewrite_0 = module_0.BaseImportRewrite(none_type_0)


def test_case_1():
    async_function_def_0 = module_1.AsyncFunctionDef()
    list_0 = [async_function_def_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(async_function_def_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    none_type_0 = None
    base_import_rewrite_0 = module_0.BaseImportRewrite(none_type_0)
    list_0 = [none_type_0, base_import_rewrite_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    str_0 = "O!9qaIq\x0ciG*!;sLm.o"
    assign_0 = module_1.Assign()
    base_import_rewrite_0 = module_0.BaseImportRewrite(assign_0)
    list_0 = [assign_0, str_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    str_0 = 'mEE"'
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_1}
    assign_0 = module_1.Assign()
    base_import_rewrite_0 = module_0.BaseImportRewrite(assign_0)
    import_from_0 = module_1.ImportFrom(*dict_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
