# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bytes_0 = b"\xf2j\xf3O\x05k\x1b\x9fj9\xce_\x16K"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    bytes_0 = b"\xa1c;"
    function_def_0 = module_1.FunctionDef(*bytes_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)


def test_case_3():
    bytes_0 = b"\xff\xd8\x85\x1f\x12`8B\xa2+\xbc"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_1 = [list_0, list_0, yield_from_transformer_0, bytes_0]
    dict_0 = {}
    try_0 = module_1.Try(*list_1, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(try_0)
