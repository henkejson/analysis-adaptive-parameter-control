# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    mat_mult_0 = module_0.MatMult()
    yield_from_transformer_0 = module_1.YieldFromTransformer(mat_mult_0)
    a_s_t_0 = yield_from_transformer_0.visit(mat_mult_0)


def test_case_1():
    mat_mult_0 = module_0.MatMult()
    yield_from_transformer_0 = module_1.YieldFromTransformer(mat_mult_0)


def test_case_2():
    return_0 = module_0.Return()
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)
    list_0 = [none_type_0]
    module_0 = module_0.Module(*list_0)
    var_0 = yield_from_transformer_0.visit(module_0)


def test_case_3():
    return_0 = module_0.Return()
    list_0 = [return_0]
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)
    list_1 = [yield_from_transformer_0, list_0, return_0]
    with_0 = module_0.With(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(with_0)


def test_case_4():
    dict_0 = {}
    pow_0 = module_0.Pow(**dict_0)
    var_0 = module_2.dump(pow_0)
    var_1 = module_2.parse(var_0)
    var_2 = module_2.copy_location(var_1, pow_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_2)
