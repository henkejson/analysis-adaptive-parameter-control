# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(none_type_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    bytes_0 = b" \r"
    var_0 = module_1.parse(bytes_0, bytes_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bytes_0 = b"U\r"
    var_0 = module_1.parse(bytes_0, bytes_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_4():
    bytes_0 = b"U\r"
    var_0 = module_1.parse(bytes_0, bytes_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)
    var_1 = module_1.iter_child_nodes(var_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(yield_from_transformer_0)
    yield_from_transformer_2 = module_0.YieldFromTransformer(yield_from_transformer_0)
    yield_from_transformer_3 = module_0.YieldFromTransformer(var_0)
    yield_from_transformer_4 = module_0.YieldFromTransformer(yield_from_transformer_3)
    yield_from_transformer_5 = module_0.YieldFromTransformer(yield_from_transformer_1)
    expression_0 = module_2.Expression(*var_1)
    a_s_t_1 = yield_from_transformer_4.visit(expression_0)
    var_0.generic_visit(yield_from_transformer_2)
