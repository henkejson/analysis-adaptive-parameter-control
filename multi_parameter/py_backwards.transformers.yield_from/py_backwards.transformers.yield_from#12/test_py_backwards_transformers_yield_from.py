# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    assign_0 = module_0.Assign()
    yield_from_transformer_0 = module_1.YieldFromTransformer(assign_0)
    a_s_t_0 = yield_from_transformer_0.visit(assign_0)


def test_case_1():
    assign_0 = module_0.Assign()
    yield_from_transformer_0 = module_1.YieldFromTransformer(assign_0)


def test_case_2():
    str_0 = "\rP"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    var_0 = module_2.parse(str_0, str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "\r^Pk"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    list_0 = [yield_from_transformer_0, str_0, yield_from_transformer_0]
    str_1 = "CompilationResult"
    str_2 = "r<h"
    str_3 = ""
    dict_0 = {str_1: str_0, str_2: str_0, str_3: list_0}
    if_exp_0 = module_0.IfExp(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_exp_0)
    call_0 = module_0.Call()
    yield_from_transformer_1 = module_1.YieldFromTransformer(call_0)
    module_2.literal_eval(str_1)
