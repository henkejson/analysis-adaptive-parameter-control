# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bool_0 = False
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    bool_0 = False
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    async_function_def_0 = module_1.AsyncFunctionDef(*list_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(async_function_def_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_3():
    bool_0 = True
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, list_0]
    async_function_def_0 = module_1.AsyncFunctionDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    async_function_def_0 = module_1.AsyncFunctionDef(*list_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(async_function_def_0)
    none_type_0 = None
    var_0 = module_2.dump(async_function_def_0, include_attributes=none_type_0)
    var_1 = module_2.parse(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_1)
