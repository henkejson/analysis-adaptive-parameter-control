# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bool_0 = True
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    cmpop_0 = module_1.cmpop()
    yield_from_transformer_0 = module_0.YieldFromTransformer(cmpop_0)


def test_case_2():
    str_0 = "y"
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    not_0 = module_1.Not()
    yield_from_transformer_0 = module_0.YieldFromTransformer(not_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(not_0)
    list_0 = [not_0, yield_from_transformer_1, yield_from_transformer_1]
    async_for_0 = module_1.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_1.visit(async_for_0)
    assert_0 = module_1.Assert()
    a_s_t_1 = yield_from_transformer_1.visit(assert_0)
    yield_from_transformer_2 = module_0.YieldFromTransformer(not_0)
