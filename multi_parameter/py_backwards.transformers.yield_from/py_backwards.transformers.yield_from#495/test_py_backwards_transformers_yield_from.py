# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bytes_0 = b"\x80\xf5\xb6\xf0\xdf\xdak\xbdA\x13"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    yield_from_transformer_0.visit(bytes_0)


def test_case_1():
    bytes_0 = b"\x80\xf5\xb6\xf0\xdf\xdak\xbdA\x13"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)


def test_case_2():
    bytes_0 = b"\x80\xf5\xb6\xf0\x16\xdak\x85A\x13"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0, bytes_0]
    for_0 = module_1.For(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(for_0)


def test_case_3():
    bytes_0 = b"\x80\xcf\xf5\xb6\xf0\x16\xdak\x85A\x13"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0, bytes_0]
    list_1 = [list_0, yield_from_transformer_0, list_0, yield_from_transformer_0]
    for_0 = module_1.For(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(for_0)
