# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    keyword_0 = module_0.keyword()
    yield_from_transformer_0 = module_1.YieldFromTransformer(keyword_0)
    a_s_t_0 = yield_from_transformer_0.visit(keyword_0)


def test_case_1():
    bit_and_0 = module_0.BitAnd()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_and_0)


def test_case_2():
    bit_and_0 = module_0.BitAnd()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_and_0)
    str_0 = "c"
    var_0 = module_2.parse(str_0)
    var_1 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bit_and_0 = module_0.BitAnd()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_and_0)
    list_0 = [bit_and_0, yield_from_transformer_0, bit_and_0]
    str_0 = "c"
    dict_0 = {str_0: str_0, str_0: bit_and_0, str_0: bit_and_0}
    try_0 = module_0.Try(*list_0, **dict_0)
    var_0 = yield_from_transformer_0.visit(try_0)
    module_2.dump(var_0, include_attributes=var_0)
