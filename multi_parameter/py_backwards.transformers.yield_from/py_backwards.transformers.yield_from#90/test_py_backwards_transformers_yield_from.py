# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    l_shift_0 = module_0.LShift()
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    str_0 = "BYug#!(pZ"
    var_0 = module_2.parse(str_0, str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "Yug#!(pZ"
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "ttk"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: str_0}
    class_def_0 = module_0.ClassDef(*list_0, **dict_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(class_def_0)
    a_s_t_0 = yield_from_transformer_0.visit(class_def_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(a_s_t_0)
    tuple_0 = ()
    module_2.NodeTransformer(**tuple_0)
