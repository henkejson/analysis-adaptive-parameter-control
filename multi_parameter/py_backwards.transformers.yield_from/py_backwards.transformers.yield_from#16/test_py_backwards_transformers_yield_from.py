# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    bool_0 = True
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    bool_0 = True
    yield_from_transformer_0 = module_0.YieldFromTransformer(bool_0)


def test_case_2():
    str_0 = "s"
    var_0 = module_1.parse(str_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bit_and_0 = module_2.BitAnd()
    list_0 = [bit_and_0, bit_and_0, bit_and_0]
    str_0 = "Ny&9.Iutl4|y`&cG's"
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0, str_0: list_0}
    while_0 = module_2.While(*list_0, **dict_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)
