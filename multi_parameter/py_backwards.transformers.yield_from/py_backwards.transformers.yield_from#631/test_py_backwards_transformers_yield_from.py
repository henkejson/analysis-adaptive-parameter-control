# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    if_exp_0 = module_0.IfExp()
    yield_from_transformer_0 = module_1.YieldFromTransformer(if_exp_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_exp_0)


def test_case_1():
    comprehension_0 = module_0.comprehension()
    module_2.literal_eval(comprehension_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    while_0 = module_0.While(*list_1)
    yield_from_transformer_0 = module_1.YieldFromTransformer(list_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    if_0 = module_0.If(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(if_0)
    boolop_0 = module_0.boolop()
    yield_from_transformer_1 = module_1.YieldFromTransformer(boolop_0)
    a_s_t_0 = yield_from_transformer_1.visit(if_0)
    var_0 = module_2.walk(boolop_0)
    var_1 = yield_from_transformer_1.visit(boolop_0)
    module_2.literal_eval(var_0)
