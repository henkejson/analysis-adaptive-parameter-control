# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x91\xc4\x08\xfa\x98\xfb\xf7\x8f\xd6vM_\x1e\x1a`\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x91\xc4\x08\xfa\x98\xfb\xf7\x8fvM_\x1e\x1a`\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_0)


def test_case_3():
    int_0 = -946
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.bind(int_0)
    var_3 = var_2.to_box()
    bool_2 = maybe_0.__eq__(bool_1)
    var_4 = var_3.to_try()
    bool_3 = False
    maybe_1 = module_0.Maybe(int_0, bool_3)
    var_5 = var_3.to_lazy()


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_3 = maybe_1.filter(dict_0)
    var_4 = maybe_0.to_validation()
    var_5 = var_2.to_lazy()
    var_6 = maybe_1.map(maybe_0)
    maybe_2 = module_0.Maybe(var_2, var_1)
    var_7 = maybe_2.to_try()
    var_8 = var_3.bind(var_1)
    bool_2 = var_4.__eq__(var_2)
    var_9 = maybe_2.ap(var_2)
    maybe_3 = module_0.Maybe(var_8, var_1)
    var_10 = var_8.to_validation()
    var_11 = var_5.bind(bool_1)
    var_7.to_lazy()


def test_case_5():
    int_0 = 0
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.map(int_0)


def test_case_6():
    bytes_0 = b"\xb4\xb2\xe3\xa59\x001i\xbb\xc8e"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = var_2.__eq__(none_type_0)
    maybe_1.ap(bool_1)


def test_case_9():
    complex_0 = -1809.24 - 595j
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(dict_0)


def test_case_11():
    bytes_0 = b"\x91\xc4\x08\xfa\x98\xfb\xf7\x8fvM_\x1e\x1a`\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.bind(bytes_0)
    none_type_0 = None
    var_2 = var_1.get_or_else(none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = var_0.__eq__(bytes_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_0.to_try()
    var_3.map(var_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_either()
    var_0.ap(none_type_0)


def test_case_14():
    float_0 = -842.47385
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.bind(var_2)
    var_0.filter(var_2)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_16():
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Maybe with previous value\n        :rtype: Maybe[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    int_0 = -655
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_18():
    int_0 = 916
    dict_0 = {int_0: int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.to_try()
    dict_0.to_lazy()


def test_case_19():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    bytes_0 = b"*\xa9e8^\xce!$.'354$\xed\xa6`"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    bytes_0 = b"\xb3\x94\xae"
    str_0 = "mP`YC='ef"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.ap(bytes_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_either()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = var_2.__eq__(none_type_0)
    var_2.ap(none_type_0)


def test_case_23():
    bytes_0 = b"\x91\xc4\x08\xfa\x98\xfb\xf7\x8fvM_\x1e\x1a`\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(maybe_1)
