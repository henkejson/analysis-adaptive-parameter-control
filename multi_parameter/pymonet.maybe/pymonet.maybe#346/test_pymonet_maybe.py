# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "TT.$2nJUl\x0c&XB"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_2():
    bytes_0 = b"u\xfcpzK\x9d"
    int_0 = 1
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(list_0, bytes_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_try()
    var_3 = maybe_0.ap(var_2)
    var_4 = var_3.to_either()
    var_5 = maybe_0.bind(int_0)
    var_6 = var_0.bind(var_0)
    var_7 = var_0.get_or_else(var_5)
    bool_0 = var_3.__eq__(maybe_0)
    var_8 = var_6.get_or_else(var_6)
    var_9 = var_8.to_either()
    var_10 = var_9.bind(var_5)


def test_case_3():
    float_0 = 1047.1231
    int_0 = 1595
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.get_or_else(int_0)
    var_3 = var_1.ap(bool_0)
    var_4 = var_1.map(var_2)
    var_2.to_either()


def test_case_4():
    bytes_0 = b"u\xfcpzK\x85"
    int_0 = 1
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, list_0)
    var_1 = maybe_1.filter(bytes_0)
    maybe_2 = module_0.Maybe(list_0, bytes_0)
    var_2 = maybe_2.to_either()
    set_0 = set()
    maybe_3 = module_0.Maybe(set_0, set_0)
    var_3 = maybe_1.ap(maybe_3)
    var_4 = var_3.to_either()
    var_5 = maybe_1.bind(int_0)
    var_6 = var_1.bind(var_1)
    var_7 = maybe_1.ap(maybe_2)
    maybe_3.map(maybe_3)


def test_case_5():
    bytes_0 = b"u\xfcpzK\x85"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.filter(list_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_0.bind(bytes_0)
    maybe_1.filter(set_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    str_0 = "yd \tc66n`#`]<cTB8B"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    none_type_0 = None
    bool_1 = var_1.__eq__(none_type_0)
    var_2 = maybe_0.ap(str_0)
    var_1.ap(var_1)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.filter(var_3)
    list_0 = []
    var_5 = var_2.filter(var_1)
    var_6 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.ap(bool_0)


def test_case_9():
    bytes_0 = b"u\xfcpzK\x85"
    list_0 = [bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.filter(list_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(set_0)


def test_case_10():
    bytes_0 = b"u\xfcpzK\x85"
    int_0 = 1
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(list_0, bytes_0)
    var_1 = maybe_1.to_box()
    set_0 = set()
    maybe_2 = module_0.Maybe(set_0, set_0)
    var_2 = maybe_0.ap(maybe_2)
    var_3 = var_2.to_either()
    var_4 = maybe_1.bind(var_3)
    var_5 = var_4.get_or_else(maybe_1)
    maybe_2.filter(set_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_box()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_0.bind(maybe_0)


def test_case_13():
    int_0 = 2563
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.bind(int_0)


def test_case_14():
    bool_0 = True
    float_0 = -1051.231516
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_16():
    bool_0 = True
    int_0 = 1193
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(bool_0)


def test_case_17():
    float_0 = 2423.5
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(float_0)


def test_case_18():
    bytes_0 = b""
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_box()
    var_1.bind(var_2)


def test_case_20():
    object_0 = module_1.object()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(none_type_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = var_0.__eq__(var_1)
    var_2 = maybe_0.to_either()
    bool_3 = maybe_0.__eq__(bool_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.to_either()
    var_5 = maybe_0.bind(bool_2)
    var_1.get_or_else(var_3)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0.ap(var_0)


def test_case_23():
    int_0 = -5073
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()
    var_5 = var_4.ap(none_type_0)
    var_5.to_box()
