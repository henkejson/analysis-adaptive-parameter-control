# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.ap(bool_0)
    var_2 = maybe_0.map(var_1)
    bool_2 = maybe_0.__eq__(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_1.filter(var_3)
    var_5 = var_2.to_lazy()
    var_6 = var_5.to_try()


def test_case_3():
    str_0 = "i?LW,JVDiv&\\m$6w7?n5"
    set_0 = {str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.ap(set_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2 = var_0.map(maybe_0)
    var_3 = maybe_0.filter(var_0)
    maybe_1.filter(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    complex_0 = -1825.4278 + 28.5j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_validation()
    bool_1 = False
    var_3 = var_2.to_box()
    var_4 = maybe_0.bind(var_2)
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    var_2.to_validation()


def test_case_7():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(int_0)


def test_case_8():
    float_0 = -3243.8
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(none_type_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xb5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_10():
    float_0 = 5306.2
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_validation()
    var_1.bind(var_2)


def test_case_11():
    float_0 = -1046.2255
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_2.map(var_1)
    var_4 = maybe_0.map(float_0)
    bool_0 = maybe_0.__eq__(var_4)
    var_5 = maybe_0.to_either()
    bool_1 = var_1.__eq__(var_2)
    var_6 = maybe_0.to_try()
    var_5.to_either()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(none_type_0)
    var_1 = maybe_0.get_or_else(bool_1)
    var_2 = maybe_1.map(var_1)
    bool_2 = False
    var_3 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_2, none_type_0)
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.map(var_4)
    bool_3 = maybe_0.__eq__(none_type_0)
    var_6 = maybe_0.to_validation()
    var_7 = var_4.filter(var_6)
    var_8 = maybe_0.filter(bool_0)
    var_9 = maybe_2.to_either()
    var_10 = var_8.to_try()
    module_1.Generic(**var_0)


def test_case_13():
    complex_0 = -2424.32443 - 396.4129j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_14():
    int_0 = -622
    int_1 = 1111
    list_0 = [int_1]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(int_0)


def test_case_15():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(none_type_0)
    var_1 = maybe_1.map(var_0)
    bool_2 = False
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_2, none_type_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = maybe_0.map(var_3)
    bool_3 = maybe_0.__eq__(none_type_0)
    var_5 = maybe_0.to_validation()
    bool_4 = maybe_1.__eq__(var_5)
    var_6 = var_1.to_try()
    bool_5 = maybe_1.__eq__(var_1)
    var_7 = var_3.filter(var_5)
    var_8 = maybe_0.filter(bool_0)
    var_9 = maybe_0.to_try()
    var_10 = var_7.to_box()
    var_11 = maybe_2.to_lazy()


def test_case_16():
    str_0 = "yuwl\r"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(str_0)
    var_2 = var_0.map(maybe_0)
    var_3 = maybe_0.ap(var_2)
    var_4 = var_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_4.to_validation()


def test_case_17():
    str_0 = ">KJiyXn;Mjy;(Y"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    float_0 = -3243.8
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_0.filter(bool_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_validation()
    maybe_1.bind(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b""
    bool_2 = True
    bool_3 = False
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, bytes_0)
    var_1 = maybe_1.get_or_else(bool_3)
    maybe_2 = module_0.Maybe(bool_3, bool_2)
    var_2 = maybe_2.ap(none_type_1)
    var_3 = var_2.to_box()
    maybe_3 = module_0.Maybe(bool_2, bool_3)
    var_4 = maybe_1.to_try()
    var_5 = var_2.to_try()
    maybe_3.ap(bytes_0)
