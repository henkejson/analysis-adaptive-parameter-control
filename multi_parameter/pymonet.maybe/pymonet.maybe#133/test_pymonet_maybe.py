# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = ")1<J"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(bool_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_1.ap(var_0)
    var_3 = var_2.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_2 = module_0.Maybe(var_1, maybe_1)
    bool_2 = var_3.__eq__(var_0)
    maybe_1.bind(var_1)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, dict_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = 284
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(var_1, var_1)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.bind(var_1)
    var_3 = maybe_1.to_validation()
    var_1.get_or_else(var_3)


def test_case_11():
    str_0 = "\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    set_0 = {str_0, str_0, str_0}
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    var_1 = var_0.to_try()
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_2 = maybe_2.get_or_else(maybe_1)
    none_type_0 = None
    bool_2 = maybe_2.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)


def test_case_12():
    float_0 = -1515.207
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_0)


def test_case_14():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)


def test_case_15():
    bool_0 = False
    float_0 = -4006.0
    set_0 = {float_0, float_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    var_3.ap(bool_0)


def test_case_16():
    int_0 = 1156
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_0.to_lazy()


def test_case_17():
    int_0 = -1830
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    int_0 = 278
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, maybe_0)
    var_2 = maybe_0.ap(var_0)
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = var_1.to_either()
    bool_2 = maybe_1.__eq__(var_2)
    tuple_0 = (maybe_0,)
    var_4 = var_3.ap(tuple_0)
