# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(maybe_0)
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = var_3.to_try()
    var_5 = maybe_0.to_validation()
    bool_2 = var_4.__eq__(var_4)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_2.to_validation()
    var_1 = maybe_0.to_either()
    maybe_3 = module_0.Maybe(none_type_0, bool_0)
    var_2 = var_1.to_box()
    maybe_4 = module_0.Maybe(maybe_1, maybe_3)
    var_3 = maybe_0.filter(var_2)
    var_4 = var_0.to_box()
    var_5 = var_1.to_validation()
    bool_1 = maybe_4.__eq__(var_0)


def test_case_4():
    bytes_0 = b'\xed\x06"\xcb\xcb&\xd4\xfd\xe7'
    complex_0 = 421.859952 - 809.26j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_1.ap(bytes_0)
    var_4 = var_2.to_try()
    var_5 = var_2.map(var_4)
    var_3.to_either()


def test_case_5():
    float_0 = 2703.01
    list_0 = [float_0]
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    maybe_0.map(list_0)


def test_case_6():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.bind(bool_1)
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(bool_1, var_2)
    var_3 = maybe_1.filter(bool_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_2.to_validation()
    maybe_2.filter(var_4)


def test_case_7():
    str_0 = "\n        Returns Lazy with function returning argument.\n\n        :param value: value to return by Lazy constructor_fn\n        :type value: Any\n        :returns: Lazy with function returning argument\n        :rtype: Lazy[Function() -> A]\n        "
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_0.bind(str_0)


def test_case_8():
    bytes_0 = b"\xc7\xec\xdb\xf2\x02rl?\xd3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(bytes_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b'\xed\x06"\xcb\xcb&\xd4\xfd\xe7'
    complex_0 = 421.859952 - 809.26j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_1.ap(bytes_0)
    var_4 = var_2.to_try()
    var_4.to_lazy()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.filter(maybe_0)
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = maybe_0.filter(var_2)
    var_5 = maybe_1.to_try()
    var_6 = var_4.get_or_else(var_4)
    var_7 = var_3.to_try()
    bool_2 = maybe_1.__eq__(var_7)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    str_0 = "09C.z^Y>\rGk="
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.filter(str_0)


def test_case_14():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.ap(dict_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_box()
    var_2.bind(bool_0)


def test_case_16():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.map(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_3 = maybe_1.to_validation()
    var_4 = var_1.to_either()
    bool_1 = False
    maybe_2 = module_0.Maybe(var_1, bool_1)
    var_5 = maybe_1.to_box()
    maybe_2.filter(var_5)


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(none_type_0)


def test_case_18():
    int_0 = -2853
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    bool_0 = True
    list_0 = []
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(bool_0)


def test_case_20():
    str_0 = "b7E+aj,:I)"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.to_lazy()
    var_0.to_box()


def test_case_21():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(bool_1, var_2)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_3 = maybe_2.to_validation()
    maybe_2.filter(var_3)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = var_0.bind(maybe_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_2, var_2)
    bool_1 = maybe_2.__eq__(var_1)
    var_3 = maybe_1.to_box()
    var_4 = var_0.filter(var_2)
    bool_2 = var_0.__eq__(var_4)
    var_5 = var_2.to_try()
    var_6 = var_2.to_validation()
    var_7 = var_4.to_either()
    var_8 = var_7.to_box()
    var_5.to_validation()
