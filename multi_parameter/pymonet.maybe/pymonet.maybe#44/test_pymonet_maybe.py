# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x9b87\xc0\xa1(\xfc\xc3U)\x96\xdb\x85\x00\x1f\xf9]"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()


def test_case_3():
    set_0 = set()
    list_0 = [set_0, set_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(list_0)


def test_case_4():
    str_0 = "8Q"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    list_0 = [str_0, str_0, str_0]
    complex_0 = -1682 - 1857.2204j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.map(list_0)
    var_4 = var_3.to_validation()


def test_case_5():
    str_0 = "^ti=zg!Do]kpFD^iNC4"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(str_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_1)
    var_1 = maybe_0.filter(bool_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    int_0 = -411
    float_0 = -1725.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(int_0)


def test_case_9():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(tuple_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(bool_0)


def test_case_12():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    str_0 = "g.4mN`s<zkIvYLLV\x0bS&"
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_1.map(list_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.map(var_4)
    var_6 = maybe_1.get_or_else(maybe_1)
    var_7 = var_4.to_validation()
    bool_1 = False
    maybe_2 = module_0.Maybe(str_0, bool_1)
    var_0.bind(var_4)


def test_case_13():
    complex_0 = 3894.584 + 2113.248099j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()


def test_case_14():
    bool_0 = False
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(var_1)


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_1)
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.get_or_else(bool_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    maybe_0.bind(bool_0)


def test_case_17():
    object_0 = module_1.object()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_18():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_0.ap(dict_0)


def test_case_19():
    none_type_0 = None
    object_0 = module_1.object()
    none_type_1 = None
    maybe_0 = module_0.Maybe(object_0, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_21():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    var_1.to_box()


def test_case_22():
    bytes_0 = b"\x9b87\xc0\xa1(\xfc\xc3U)\x96\xdb\x85\x00\xf9]"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = var_0.to_box()
    maybe_2 = module_0.Maybe(var_0, var_1)
    var_2 = maybe_1.ap(maybe_0)
    bool_0 = maybe_2.__eq__(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.to_box()
    var_5 = maybe_0.to_either()
    var_6 = maybe_2.to_box()
    var_7 = maybe_2.get_or_else(var_0)
    var_8 = var_0.bind(var_7)
    var_9 = var_8.filter(var_7)
    var_10 = var_7.to_box()
    var_11 = var_9.to_box()
    bool_1 = False
    maybe_3 = module_0.Maybe(maybe_1, bool_1)
    var_12 = maybe_3.to_box()
    maybe_3.filter(var_5)
