# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "~Tz^c#\x0c5c*0&?V>'"
    set_0 = {str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.to_lazy()
    tuple_0 = maybe_0.ap(var_0)
    bool_1 = maybe_1.__eq__(maybe_1)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_0 = var_1.__eq__(var_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1.get_or_else(maybe_0)


def test_case_4():
    float_0 = -4212.017
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = maybe_0.to_validation()
    var_5 = var_4.to_lazy()
    var_6 = var_4.to_lazy()
    var_7 = var_5.to_try()
    var_7.to_either()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_try()
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.bind(bool_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 0
    var_0 = maybe_0.to_try()
    bool_0 = var_0.__eq__(int_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    maybe_0.bind(bool_1)


def test_case_8():
    list_0 = []
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.ap(list_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_0.map(var_0)


def test_case_10():
    complex_0 = 444.3097 + 3614.8201j
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_try()


def test_case_11():
    int_0 = -989
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_1.map(var_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.to_validation()
    var_0.map(var_2)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.get_or_else(none_type_0)
    bool_0 = var_1.__eq__(var_0)
    var_4 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    var_3.get_or_else(maybe_0)


def test_case_17():
    int_0 = 2799
    list_0 = []
    tuple_0 = ()
    bool_0 = True
    tuple_1 = (tuple_0, bool_0)
    tuple_2 = (int_0, list_0, tuple_1)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, tuple_2)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_either()
    var_0.filter(var_1)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
