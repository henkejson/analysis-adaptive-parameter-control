# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    complex_0 = -622.6074 + 650.9j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    bool_0 = False
    bool_1 = False
    var_0 = maybe_0.ap(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_either()
    var_4 = maybe_0.to_validation()
    bool_2 = maybe_1.__eq__(bytes_0)


def test_case_3():
    str_0 = "s2"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.map(maybe_0)
    var_3 = var_2.bind(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_4 = maybe_1.to_try()
    var_5 = var_3.ap(var_4)
    maybe_1.filter(str_0)


def test_case_4():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1.map(var_0)


def test_case_5():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    var_0 = maybe_0.filter(str_0)
    none_type_0 = None
    var_1 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_2 = var_1.ap(var_0)
    bool_0 = True
    var_3 = maybe_0.bind(bool_0)
    var_4 = var_0.get_or_else(none_type_0)
    var_5 = var_1.to_lazy()


def test_case_6():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    maybe_0.bind(var_1)


def test_case_7():
    float_0 = 2996.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.ap(float_0)


def test_case_8():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    bool_0 = False
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_either()
    var_4 = maybe_0.to_validation()
    bool_1 = maybe_1.__eq__(bytes_0)


def test_case_9():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    bool_0 = False
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(bytes_0)


def test_case_10():
    bytes_0 = b"\x8b\xa4\x7f7\xd0\xdf\xfe\xec\xcf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(bytes_0)
    var_2 = maybe_0.get_or_else(var_1)
    var_0.map(var_1)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\x9cr#FN\xcf(*<op\xc316\xb6\x9a\xe6B"
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_1 = b"\x1c\xd5"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_1, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.get_or_else(bytes_0)
    var_1.bind(none_type_0)


def test_case_12():
    float_0 = 1984.01205
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    list_0 = [dict_0, object_0, dict_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.map(list_0)


def test_case_14():
    str_0 = "zDV+\x0cHypC/gIRVG"
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.ap(str_0)


def test_case_15():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.map(bool_0)


def test_case_16():
    int_0 = 2313
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    str_0 = "["
    bytes_0 = b"\x9bZ\x94dC"
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_4.to_lazy()
    var_5.get_or_else(str_0)


def test_case_17():
    float_0 = 2780.72
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(bytes_0)
    var_2.to_try()


def test_case_19():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(str_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_0.to_box()
    var_4 = var_1.to_validation()
    maybe_1 = module_0.Maybe(var_3, var_4)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_5 = maybe_1.to_either()
    var_4.bind(var_0)


def test_case_20():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(var_2, maybe_0)
    bool_0 = var_1.__eq__(var_1)
    var_3 = maybe_1.to_either()
    var_4 = var_2.to_box()
    var_5 = var_3.to_try()
    maybe_2 = module_0.Maybe(var_3, bool_0)
    var_6 = var_0.bind(var_2)
    var_7 = var_1.to_either()
    var_5.to_lazy()


def test_case_21():
    bytes_0 = b"\x1c#\x15\xc2\x17\xb6\x08\xfe\x16\xf7?\xae/|3wR\xb4"
    str_0 = "q"
    maybe_0 = module_0.Maybe(str_0, bytes_0)
    bool_0 = False
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.get_or_else(var_0)
    bool_1 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bytes_0)
    var_3 = maybe_1.bind(str_0)
    var_4 = var_1.get_or_else(str_0)
    var_5 = var_1.map(var_1)
    bool_2 = var_0.__eq__(bytes_0)
    var_6 = var_1.filter(var_0)
    maybe_2 = module_0.Maybe(var_3, var_5)
    var_7 = maybe_0.ap(var_1)
    var_8 = maybe_2.to_either()
    var_9 = var_0.bind(var_8)
    bytes_0.get_or_else(bytes_0)


def test_case_22():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.get_or_else(var_1)
    maybe_1.filter(var_1)
