# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = var_0.to_either()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_3 = var_2.to_box()


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(var_1)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.map(var_1)


def test_case_4():
    bool_0 = True
    tuple_0 = ()
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.map(bool_0)
    var_1 = maybe_1.bind(bool_0)
    var_2 = maybe_1.to_try()


def test_case_5():
    str_0 = "WM*[!!C,~?4:\r}`J{jvz"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(str_0)


def test_case_6():
    bytes_0 = b'\xb0\x11\xe5U\x1b\xc2sh\xb5\x9a\xb7FSR"'
    none_type_0 = None
    float_0 = -862.209014
    maybe_0 = module_0.Maybe(float_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.filter(bytes_0)
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = var_2.to_box()
    var_5 = var_1.to_lazy()
    bool_0 = var_5.__eq__(float_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\x0f?\x00\x1cRh"
    dict_0 = {none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_box()
    var_1.to_try()


def test_case_10():
    none_type_0 = None
    bytes_0 = b"\x0f?\x00\x1cRh"
    dict_0 = {none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_try()
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_2.to_box()


def test_case_14():
    bytes_0 = b"\x04\x03:\xbe2:\xc9\xe4\xe7%x-\xeek\xd0\x92\xd9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_box()
    var_4 = var_3.to_validation()
    var_5 = maybe_0.to_lazy()
    var_0.bind(var_5)


def test_case_15():
    bool_0 = True
    tuple_0 = ()
    int_0 = 86
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bool_0)


def test_case_16():
    complex_0 = -2929.498 - 4887j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\x0f?\x00\x1cRh"
    dict_0 = {none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_validation()
    maybe_1.filter(var_1)


def test_case_18():
    str_0 = "`8r'\"F>fTwr%A&L`aP46"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_3.to_try()
    var_4.to_either()


def test_case_19():
    int_0 = -3024
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    maybe_1.map(var_1)


def test_case_20():
    none_type_0 = None
    bytes_0 = b"\x0f?\x00\x1cRh"
    dict_0 = {none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_2)
    maybe_1.filter(bool_0)
