# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 21
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = maybe_1.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_3():
    bytes_0 = b"\nz8\x800\xb2`"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_lazy()
    maybe_1.filter(var_1)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_0.to_try()
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_1 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_2)
    maybe_1.bind(var_0)


def test_case_8():
    str_0 = "One[value={}]"
    str_1 = "3DZhRPIWA\x0c5\rIac\x0cX"
    bytes_0 = b"*\xc5\x93\xc6\x9a\xfa"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(str_1)
    var_1 = var_0.to_try()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.ap(str_0)


def test_case_9():
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = True
    tuple_1 = (bool_1,)
    bool_2 = False
    maybe_0 = module_0.Maybe(tuple_1, bool_2)
    maybe_0.filter(tuple_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.to_validation()


def test_case_11():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(generic_0)
    list_0 = [var_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)
    bytes_0 = b"[b\x98\xa5\xb5\xfc\xf0\x05\xbe\xb7'\xe6"
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bytes_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_0.ap(var_1)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(var_1)


def test_case_17():
    str_0 = "8E2q3l\tZ^3pN;>-V!E"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(str_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_try()
    var_6 = maybe_0.to_either()
    var_7 = maybe_0.to_either()
    var_8 = var_6.bind(var_1)
    maybe_2 = module_0.Maybe(var_1, var_3)
    var_9 = var_3.to_validation()
    var_10 = maybe_0.ap(str_0)
    var_2.filter(maybe_1)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_19():
    bytes_0 = b"\nz8\x800@\xb2`"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(maybe_1, var_3)
    var_4 = var_2.to_lazy()
    var_5 = var_2.map(var_0)
    var_6 = var_2.filter(var_1)
    var_7 = maybe_1.to_lazy()
    none_type_0 = None
    bool_2 = var_5.__eq__(maybe_1)
    var_8 = var_2.get_or_else(var_2)
    var_9 = maybe_0.bind(var_4)
    var_10 = var_9.filter(var_8)
    var_11 = var_9.to_either()
    var_12 = var_2.to_box()
    var_12.ap(none_type_0)


def test_case_20():
    str_0 = "<E]]qVv7sp#2:)ta9 "
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.map(var_0)
