# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 765
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xc4\xfc!\xe2~\xd2|\x84\xac\xba\xe3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_1.to_try()


def test_case_3():
    int_0 = 2682
    bytes_0 = b"\x12F\xa5G\xa0OXh"
    int_1 = 2171
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_1, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.map(int_0)


def test_case_4():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = (dict_0, maybe_0)
    maybe_0.map(tuple_0)


def test_case_5():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    str_0 = ")?Z/!\"{\x0b^G'/l5D?dj"
    bool_0 = True
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(maybe_2)
    var_3 = var_0.bind(var_1)
    var_4 = var_2.bind(var_1)
    bool_2 = var_3.__eq__(var_4)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    maybe_0.bind(var_1)


def test_case_7():
    bytes_0 = b"+"
    int_0 = 765
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    str_0 = ")?Z/!\"{\x0b^G'/l5D?dj"
    bool_0 = True
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.ap(maybe_0)


def test_case_10():
    bytes_0 = b"xo\xa5\xff\xf6\x9c\x06\xa6\xc8AA\x11x5\x94\xd0"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(none_type_1)


def test_case_11():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    str_0 = ")?Z/!\"{\x0b^G'/l5D?dj"
    bool_0 = True
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_lazy()
    var_4 = var_2.bind(generic_0)
    var_5 = var_0.get_or_else(none_type_0)


def test_case_12():
    str_0 = "Dx\\qve}\n_YyN)GV\ri]"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = maybe_1.to_try()
    var_1.to_validation()


def test_case_13():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(list_0)
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_2 = var_0.map(maybe_1)
    var_3 = maybe_1.to_either()
    var_4 = var_2.bind(var_3)
    var_5 = maybe_0.to_lazy()
    bool_1 = var_2.__eq__(var_5)
    var_6 = var_4.ap(var_3)
    bool_2 = var_6.__eq__(var_0)
    var_7 = maybe_0.to_validation()
    var_8 = var_6.get_or_else(bool_1)
    maybe_1.filter(var_8)


def test_case_14():
    int_0 = -941
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    bool_1 = True
    str_0 = "NHB(<tm`1w"
    bool_2 = False
    maybe_1 = module_0.Maybe(str_0, bool_2)
    maybe_1.ap(bool_1)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    str_0 = ")?Z/!\"{\x0b^G'/l5D?dj"
    bool_0 = True
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(var_1)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.ap(maybe_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_18():
    float_0 = -2119.1517
    list_0 = [float_0]
    list_1 = [float_0, float_0, list_0]
    list_2 = [list_0, float_0, list_1]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_2, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(list_1)
    var_3 = var_1.to_lazy()
    none_type_1 = None
    str_0 = 'c1m(<XXfRM{*ec"'
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_4 = maybe_1.to_try()
    var_4.ap(none_type_1)


def test_case_19():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(list_0)
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_2 = var_0.map(maybe_1)
    var_3 = maybe_1.to_either()
    var_4 = var_2.bind(var_3)
    var_5 = maybe_0.to_lazy()
    bool_1 = var_2.__eq__(var_5)
    var_6 = var_5.to_validation()
    var_7 = var_2.map(var_5)
    var_8 = var_4.ap(var_3)
    bool_2 = var_8.__eq__(var_0)
    var_9 = maybe_0.to_validation()
    var_10 = var_4.ap(var_4)
    var_11 = var_8.get_or_else(bool_1)
    maybe_1.filter(var_11)


def test_case_20():
    int_0 = -989
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, var_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    var_3 = var_0.map(int_0)
    var_4 = maybe_1.ap(maybe_1)
    var_5 = var_0.get_or_else(int_0)
    var_5.filter(var_4)


def test_case_21():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(list_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_4 = var_0.map(maybe_1)
    var_5 = var_4.to_validation()
    var_6 = var_3.to_lazy()
    bool_1 = False
    var_7 = maybe_1.to_box()
    var_8 = var_3.ap(bool_1)
    none_type_1 = None
    var_9 = var_4.bind(var_5)
    maybe_2 = module_0.Maybe(var_3, var_3)
    var_10 = var_8.to_lazy()
    bool_2 = var_5.__eq__(maybe_0)
    var_11 = var_2.to_box()
    bool_3 = var_4.__eq__(var_10)
    var_12 = var_6.to_validation()
    bool_4 = var_1.__eq__(bool_3)
    maybe_3 = module_0.Maybe(none_type_1, var_8)
    var_13 = maybe_3.ap(var_12)
    var_14 = maybe_3.filter(var_1)
    var_15 = var_0.filter(var_12)
    var_16 = var_8.to_either()
    var_17 = var_4.to_lazy()
    var_18 = var_12.to_either()
    var_19 = var_2.map(var_12)
    var_20 = var_19.ap(var_17)
    bool_5 = maybe_1.__eq__(maybe_1)
