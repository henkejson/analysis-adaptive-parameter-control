# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = maybe_0.ap(maybe_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_2.filter(maybe_1)


def test_case_3():
    float_0 = 2868.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    tuple_0 = ()
    maybe_1 = module_0.Maybe(none_type_0, tuple_0)
    var_0 = maybe_1.ap(maybe_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_0, bool_0)


def test_case_4():
    bytes_0 = b"_R\x01\x9e\xe2\xbax\xf7l\xd5 \xfc\x13\x96\x85"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_1 = True
    bool_2 = False
    var_3 = var_2.filter(bool_2)
    var_4 = var_3.ap(var_0)
    var_5 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_6 = maybe_0.filter(var_1)
    bool_3 = False
    maybe_3 = module_0.Maybe(var_2, bool_3)
    bool_4 = maybe_2.__eq__(var_4)
    maybe_3.ap(maybe_3)


def test_case_5():
    int_0 = 1241
    dict_0 = {int_0: int_0}
    bool_0 = False
    float_0 = 1149.0
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.bind(dict_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_either()


def test_case_6():
    bool_0 = True
    bytes_0 = b"\xeb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bool_0)


def test_case_7():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    set_0 = set()
    str_0 = '3&Y/i>xX"6R\nS'
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.filter(set_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bool_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.bind(var_0)
    var_4 = maybe_0.get_or_else(var_2)
    var_5 = var_4.to_try()
    var_6 = maybe_1.to_try()


def test_case_10():
    tuple_0 = ()
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(tuple_0)


def test_case_11():
    float_0 = 1255.538252
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, var_1)
    maybe_2 = module_0.Maybe(maybe_1, var_1)
    var_2 = maybe_0.to_lazy()
    var_1.to_lazy()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_13():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_14():
    str_0 = "\n        Transform Maybe to Either.\n\n        :returns: Right monad with previous value when Maybe is not empty, in other case Left with None\n        :rtype: Either[A | None]\n        "
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    str_1 = "avPE\n/K"
    tuple_0 = (str_0, bool_0, str_1)
    bool_2 = False
    bool_3 = True
    maybe_1 = module_0.Maybe(str_0, bool_3)
    var_0 = maybe_1.ap(tuple_0)
    var_1 = var_0.ap(bool_2)
    var_2 = var_1.bind(bool_0)
    var_3 = var_2.to_box()
    maybe_2 = module_0.Maybe(tuple_0, bool_2)
    var_4 = maybe_2.to_lazy()
    var_5 = var_3.to_validation()
    var_6 = maybe_2.to_box()
    var_6.to_box()


def test_case_15():
    int_0 = 2830
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_2 = module_0.Maybe(maybe_1, int_0)
    var_2 = maybe_2.to_either()
    var_3 = var_0.to_either()
    var_2.to_either()


def test_case_16():
    int_0 = -1230
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.map(maybe_1)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    bool_1 = maybe_2.__eq__(int_0)


def test_case_17():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_1.to_try()
    var_1.to_box()


def test_case_18():
    int_0 = -1194
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(int_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.map(var_1)
    maybe_3 = module_0.Maybe(maybe_2, var_1)
    bool_1 = maybe_3.__eq__(int_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_validation()


def test_case_20():
    float_0 = 1255.538252
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, var_2)
    maybe_2 = module_0.Maybe(maybe_1, var_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.map(var_2)
    var_5 = var_2.to_either()
    var_6 = var_3.to_box()
    var_6.get_or_else(maybe_1)


def test_case_21():
    int_0 = -1194
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_2 = module_0.Maybe(maybe_0, maybe_1)
    var_1 = maybe_2.map(var_0)
    maybe_3 = maybe_1.map(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_2.filter(int_0)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_try()
    var_3 = maybe_2.bind(var_1)
    var_4 = maybe_2.to_try()
    bool_1 = maybe_0.__eq__(var_4)
    var_5 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_3)
    var_0.to_try()


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_try()
    maybe_2.bind(var_1)


def test_case_24():
    int_0 = -1194
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.map(maybe_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_1.filter(int_0)
    maybe_3 = module_0.Maybe(maybe_1, bool_0)
    var_3 = maybe_0.to_lazy()
    maybe_4 = module_0.Maybe(var_1, var_0)
    var_4 = maybe_0.to_lazy()
    bool_1 = var_2.__eq__(maybe_2)
    maybe_5 = module_0.Maybe(var_2, bool_1)
    maybe_6 = module_0.Maybe(var_3, int_0)
    var_5 = maybe_6.to_either()
    bool_2 = maybe_2.__eq__(maybe_2)
    var_6 = maybe_4.bind(var_3)
    var_7 = maybe_1.to_try()
    maybe_2.filter(var_6)
