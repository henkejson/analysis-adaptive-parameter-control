# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"FZl\xe1\x95\xc9\x86\xecs\r\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_validation()
    var_2.map(bytes_0)


def test_case_3():
    bytes_0 = b"\x08uZ\x91qo\x1aat"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.map(bool_0)


def test_case_5():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    tuple_0 = (set_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.to_try()
    var_5 = var_0.bind(none_type_0)
    bool_1 = var_1.__eq__(var_5)
    var_6 = var_1.to_validation()
    maybe_0.map(tuple_0)


def test_case_6():
    bytes_0 = b"\xf0Q"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    generic_0 = module_1.Generic()
    var_0 = maybe_0.get_or_else(generic_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_validation()
    var_2.get_or_else(generic_0)


def test_case_7():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(bool_0)


def test_case_8():
    none_type_0 = None
    set_0 = set()
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(set_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.filter(dict_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_12():
    bytes_0 = b"FZl\xe1\x95\xc9\x86\xecs\r\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_3.to_validation()
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_5 = maybe_0.to_box()
    var_6 = maybe_1.to_either()
    var_7 = maybe_1.filter(var_6)


def test_case_13():
    int_0 = 1509
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_0.bind(int_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_box()
    var_0.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = var_0.__eq__(var_0)
    bool_1 = False
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.bind(var_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_1)


def test_case_17():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.map(bool_0)
    var_3 = maybe_0.to_try()
    var_4 = var_3.bind(set_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bool_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_20():
    bytes_0 = b"FZl\xe1\x95\xc9\x86\xecs\r\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = var_3.to_validation()
    var_5 = var_3.to_validation()
    var_6 = var_3.filter(bytes_0)
    var_7 = var_1.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_8 = maybe_1.to_box()
    var_9 = var_3.filter(var_5)
    var_10 = var_1.to_try()
    var_10.filter(var_1)


def test_case_21():
    bytes_0 = b"FZl\xe1\x95\xc9\x86\xecs\r\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    bool_0 = var_0.__eq__(maybe_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.filter(var_1)
    object_0 = module_2.object()
    var_4 = var_3.get_or_else(object_0)
    var_4.filter(var_0)
