# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "c1.\x0c"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.filter(var_1)
    var_4 = maybe_0.get_or_else(bool_0)
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.map(var_5)
    var_5.filter(var_5)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.to_try()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.map(var_3)
    maybe_1.filter(var_4)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    str_0 = "(''*Gxq#yq?Oq^!`H"
    tuple_0 = (bool_0, bool_0, bool_0, str_0)
    tuple_1 = (bool_0, bool_0, tuple_0)
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    maybe_0.bind(var_1)


def test_case_7():
    float_0 = 105.3
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(float_0)


def test_case_8():
    bytes_0 = b"\x80\x94LJWY\xac\x0c\x9cZ\xaa\xdf$\xd6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    bool_0 = True
    var_2 = maybe_0.get_or_else(bool_0)
    bool_1 = False
    var_3 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    int_0 = 102
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    tuple_0 = ()
    bytes_0 = b""
    list_1 = [bytes_0, bytes_0]
    tuple_1 = (list_1,)
    none_type_0 = None
    maybe_1 = module_0.Maybe(tuple_1, none_type_0)
    maybe_1.ap(tuple_0)


def test_case_10():
    float_0 = 243.10561
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    bytes_0 = b"\xfc\xf3\xcd\xb9\xd9"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()
    var_3.get_or_else(bytes_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = var_1.to_box()
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.map(var_4)
    maybe_1.filter(var_5)


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(none_type_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    str_0 = "c1.\x0c"
    maybe_1 = module_0.Maybe(str_0, str_0)
    maybe_2 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.ap(none_type_1)
    var_2 = var_0.to_validation()


def test_case_15():
    bytes_0 = b"\x08"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.ap(bool_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_3.to_box()
    var_6 = maybe_0.map(var_5)
    maybe_1.filter(var_6)


def test_case_17():
    int_0 = 1119
    set_0 = {int_0}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(set_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_2)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.ap(bool_0)
    var_6 = maybe_0.bind(var_5)
    var_7 = var_6.filter(var_5)
    var_8 = var_6.to_box()
    var_9 = maybe_0.to_either()
    var_10 = maybe_0.map(var_9)
    maybe_1.filter(var_10)
