# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x02K\xb9\xb5\x97\x95\xcf\x07\x80f\xc1\xa7\x08\xecN\xee\xd3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_1 = module_0.Maybe(set_0, maybe_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = maybe_1.filter(var_0)
    bool_0 = var_0.__eq__(var_0)
    maybe_0.filter(var_1)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"=#C/\x04N5"
    none_type_1 = None
    bytes_1 = b"9\xc5l\\\xbb\xf4\x98\xba\xb8\xe4\xfc\n\x8cq"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    none_type_2 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_2, bool_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(none_type_1)
    var_3 = var_2.bind(bytes_0)
    bool_1 = var_3.__eq__(none_type_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bytes_0 = b"&\x08\xdd\xc5|\xa5w)\x1b\t\xb4\xcb\x92\xcd\xfa\xec\x91V\x0b"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_box()
    var_3 = var_0.ap(var_0)
    var_4 = var_3.bind(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    none_type_1 = None
    var_5 = maybe_1.get_or_else(none_type_1)
    var_6 = maybe_1.map(var_5)


def test_case_6():
    str_0 = "KFLFG,`"
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    maybe_0.bind(str_0)


def test_case_7():
    bytes_0 = b"\xbd}\xce\x96\x16\x19\xd9z\x80\xbe\x17\xf7\xb4\x97$i\xe4"
    int_0 = -5023
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_lazy()


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(none_type_0)


def test_case_11():
    str_0 = "u[1u9? N6A"
    dict_0 = {str_0: str_0}
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_1, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(bool_0)


def test_case_12():
    bytes_0 = b"\r\xe17\xb9\xb0o\x0bi\xc93\xd0"
    set_0 = {bytes_0, bytes_0}
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(set_0)
    var_1.to_either()


def test_case_13():
    float_0 = -5.6
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_0.get_or_else(float_0)


def test_case_14():
    float_0 = -737.801291
    str_0 = "q]buwWO3SzO(D"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_2.bind(float_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_16():
    bytes_0 = b"32q(JaM\xf2\xa2\xfb7I\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_1.to_either()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    float_0 = 2105.4667
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    int_0 = -1217
    maybe_0.filter(int_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.filter(var_0)
    var_5 = var_1.bind(var_0)
    var_6 = var_1.map(maybe_0)
    var_7 = var_2.to_box()
    var_7.filter(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = 2249.27769
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    int_0 = -98
    var_1 = maybe_1.to_validation()
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, int_0)
    var_2 = maybe_2.to_either()
    var_3 = maybe_0.to_try()
    str_0 = "Box[U]"
    var_4 = maybe_0.filter(str_0)
    bool_1 = maybe_2.__eq__(maybe_1)
    var_2.filter(var_2)


def test_case_21():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = var_0.ap(set_0)
    var_2 = maybe_1.filter(var_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_0.filter(var_2)


def test_case_22():
    float_0 = 2105.4667
    tuple_0 = (float_0, float_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    int_0 = -1217
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.ap(int_0)
