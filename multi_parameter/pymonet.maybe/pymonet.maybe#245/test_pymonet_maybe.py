# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    bool_2 = True
    maybe_1 = module_0.Maybe(list_0, bool_2)
    var_0 = maybe_1.to_try()
    bool_3 = maybe_0.__eq__(maybe_0)
    var_0.to_either()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.bind(bool_1)
    var_1 = maybe_1.to_try()
    var_2 = var_1.get_or_else(bool_1)
    var_3 = maybe_1.to_validation()
    var_1.to_lazy()


def test_case_4():
    int_0 = -3604
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = var_0.to_box()
    var_2 = maybe_1.map(maybe_0)
    maybe_0.filter(var_2)


def test_case_5():
    str_0 = "Igza#;R,=={tbK- w}"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = True
    bool_2 = False
    dict_0 = {bool_2: bool_2, bool_2: bool_2, bool_2: bool_2}
    bool_3 = False
    maybe_1 = module_0.Maybe(dict_0, bool_3)
    maybe_1.map(bool_1)


def test_case_6():
    set_0 = set()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bytes_0 = b"x\xe3\xa5\xb6 \xbe\xa2k\xae\x8b{\x91\x9e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.bind(set_0)


def test_case_7():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -811
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_2.get_or_else(maybe_1)
    var_1.bind(var_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_validation()


def test_case_9():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(list_0)


def test_case_10():
    int_0 = -3620
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    bytes_0 = b"\xe0\xe6\x98\xb4\xe2"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, var_0: var_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_box()


def test_case_12():
    none_type_0 = None
    int_0 = -730
    str_0 = "7sput:'mMq(N*5"
    str_1 = "u5G~\x0b&~ t >$OM04,,8`"
    tuple_0 = (str_1, str_1)
    set_0 = {str_0, tuple_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    list_0 = []
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_4 = maybe_2.to_validation()
    var_4.bind(list_0)


def test_case_13():
    int_0 = -3620
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_either()
    maybe_1.filter(var_2)


def test_case_14():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_either()
    bool_2 = True
    bytes_0 = b"\xc3\xb4S\x05@\x08\t\x89\xe9"
    bool_3 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_3)
    var_1 = maybe_1.to_box()
    var_1.ap(bool_2)


def test_case_15():
    int_0 = -3620
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_2.to_either()
    maybe_2.filter(var_2)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.bind(none_type_0)
    var_1.to_box()


def test_case_17():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    list_0 = []
    maybe_0 = module_0.Maybe(none_type_1, list_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_19():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    var_1 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_2 = maybe_1.to_lazy()
    var_3 = var_1.to_box()
    var_4 = var_2.to_validation()
    var_5 = var_4.to_lazy()
    var_6 = var_5.to_try()
    var_6.to_validation()


def test_case_20():
    bytes_0 = b"O\xda\x07\x98!"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    maybe_2.filter(bool_0)


def test_case_21():
    int_0 = -1261
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (maybe_0, set_0, set_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_try()
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.filter(var_3)
    var_5 = maybe_1.to_validation()
    var_6 = var_4.get_or_else(var_2)
    var_7 = var_2.filter(var_3)
    var_8 = var_1.to_box()
    var_9 = var_0.to_try()
    var_10 = maybe_0.filter(var_9)
    var_11 = var_3.to_box()
    maybe_2 = module_0.Maybe(var_8, var_2)
    var_12 = var_7.bind(var_8)
    var_12.to_either()


def test_case_22():
    bytes_0 = b"O\xda\x07\x98!"
    int_0 = -1261
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    maybe_2.filter(bool_0)
