# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1
import builtins as module_2


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    bool_0 = maybe_0.__eq__(generic_0)


def test_case_3():
    int_0 = 3360
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 131.61513
    bool_0 = True
    maybe_0 = module_1.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.map(var_2)


def test_case_4():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.to_either()
    var_5 = var_1.bind(var_2)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_6 = var_4.to_box()


def test_case_6():
    float_0 = 3042.575
    none_type_0 = None
    maybe_0 = module_1.Maybe(float_0, none_type_0)
    maybe_0.bind(float_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.ap(maybe_0)
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_1.Maybe(none_type_1, none_type_1)
    bool_1 = True
    maybe_1.ap(bool_1)


def test_case_9():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_10():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    object_0 = module_2.object()
    bool_1 = False
    maybe_0 = module_1.Maybe(object_0, bool_1)
    maybe_1 = module_1.Maybe(object_0, maybe_0)
    var_0 = maybe_1.get_or_else(list_0)


def test_case_11():
    float_0 = -1253.673612
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_1.Maybe(float_0, none_type_0)
    maybe_1 = module_1.Maybe(float_0, bool_0)
    var_0 = maybe_1.get_or_else(bool_0)
    maybe_0.filter(var_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_either()
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    maybe_1 = module_1.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    maybe_1 = module_1.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_validation()
    var_0.filter(var_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    maybe_1 = module_1.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    var_0.to_try()


def test_case_16():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_try()
    maybe_1.filter(maybe_1)


def test_case_17():
    bool_0 = True
    list_0 = [bool_0]
    bytes_0 = b"\x15\xdc\x8f\x08Q:\x0e\x9a\r}\xa8\x00h\x14\x88"
    bool_1 = True
    maybe_0 = module_1.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(list_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_either()
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    var_2 = var_1.to_try()
    none_type_0 = None
    maybe_2 = module_1.Maybe(var_2, none_type_0)
    var_3 = maybe_1.to_validation()
    maybe_1.filter(var_3)


def test_case_19():
    int_0 = 3360
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 131.61513
    bool_0 = True
    maybe_0 = module_1.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(float_0)
    var_3 = var_2.bind(var_1)
    var_4 = var_0.to_try()
    var_5 = maybe_0.to_box()
    var_3.to_validation()


def test_case_20():
    str_0 = "RItzZq=kd4p+\x0c\nRPNKd"
    float_0 = 6515.977
    bool_0 = False
    maybe_0 = module_1.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(float_0)
    var_1.to_validation()


def test_case_21():
    str_0 = "I1;m@dA}Y"
    maybe_0 = module_1.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    dict_0 = {str_0: str_0}
    bool_0 = True
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_1.Maybe(var_0, str_0)
    var_1 = maybe_1.filter(str_0)
    var_2 = maybe_0.filter(var_0)
    maybe_2 = module_1.Maybe(dict_0, bool_0)
    var_3 = var_1.to_either()
    var_4 = var_2.filter(var_2)
    var_5 = maybe_1.to_validation()
    var_6 = var_1.to_validation()
    var_7 = maybe_2.to_box()
    var_8 = var_0.map(var_6)
    var_9 = var_4.bind(var_3)
    var_10 = var_9.to_box()
    var_11 = maybe_2.to_validation()
    var_12 = var_2.filter(var_11)
    var_13 = var_0.filter(var_0)
    bool_2 = maybe_1.__eq__(var_12)
    var_14 = var_9.ap(var_10)
    var_15 = var_7.to_try()
    var_15.filter(maybe_2)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b",\xbc\xcec\x96l6\xfaf"
    bool_1 = True
    maybe_0 = module_1.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_1.ap(none_type_0)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_either()
    var_5 = var_4.to_lazy()
    var_6 = var_5.ap(none_type_0)
    var_7 = var_6.to_try()
    maybe_1 = module_1.Maybe(bool_0, bool_0)
    bool_2 = maybe_1.__eq__(bytes_0)
    maybe_2 = module_1.Maybe(set_0, bytes_0)
    var_8 = maybe_1.to_either()
    var_9 = maybe_1.to_either()
    var_10 = module_1.Maybe(var_7, maybe_2)
    var_11 = var_10.to_box()
    maybe_3 = module_1.Maybe(set_0, bytes_0)
    var_12 = maybe_3.get_or_else(maybe_1)
    var_13 = maybe_1.to_box()
    var_14 = maybe_1.to_either()
    var_15 = var_10.bind(var_11)
    var_16 = var_12.to_box()
    var_17 = maybe_2.to_validation()
    var_18 = maybe_2.filter(none_type_0)
    var_19 = var_18.filter(var_17)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_20 = var_18.ap(bool_0)
    var_21 = maybe_2.filter(bytes_0)
    var_22 = var_17.to_try()
    var_23 = maybe_2.to_either()
    var_24 = var_18.to_validation()
    var_25 = maybe_2.to_box()
    var_26 = var_19.to_either()
    var_27 = var_14.to_box()
    var_27.bind(var_26)
