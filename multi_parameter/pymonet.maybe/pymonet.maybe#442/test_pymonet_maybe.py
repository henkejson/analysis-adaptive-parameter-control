# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    str_0 = "\x0bAZhr*g7#bl]=[8"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.to_validation()
    var_4 = var_1.to_box()
    bool_2 = maybe_2.__eq__(maybe_2)
    bool_3 = var_1.__eq__(bool_1)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = var_2.to_either()
    maybe_3.filter(none_type_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_either()


def test_case_4():
    str_0 = "\x0bAZhr*g7#bl]=[8"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(str_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    float_0 = 900.39
    int_0 = 49
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.ap(float_0)
    bool_1 = False
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    none_type_1 = None
    var_2 = maybe_1.ap(none_type_1)
    var_3 = maybe_1.bind(var_2)
    var_4 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_5 = var_4.ap(bool_1)


def test_case_7():
    int_0 = 150
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_0.bind(tuple_0)


def test_case_8():
    tuple_0 = ()
    float_0 = 3077.8
    none_type_0 = None
    int_0 = 212
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(float_0)
    var_2 = var_1.get_or_else(tuple_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_10():
    int_0 = -1078
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    int_1 = 1220
    none_type_0 = None
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_1, none_type_0)
    var_2 = maybe_1.get_or_else(none_type_0)
    maybe_1.map(maybe_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_either()


def test_case_12():
    bytes_0 = b"\xeb\xfd,\x9c|\x05\xd6\x1b\xf3"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    list_0 = [maybe_0, bytes_0, maybe_0]
    bool_1 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.to_either()
    var_0.filter(list_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    maybe_2 = maybe_0.to_box()
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_0.map(none_type_0)


def test_case_15():
    none_type_0 = None
    int_0 = 1
    set_0 = {int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_16():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bytes_0 = b"L\xa0\x93\x82\x0c\x1b\x95s"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    dict_0 = {bytes_0: maybe_0, bool_0: maybe_0}
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    str_0 = "~m].\\rt /nA"
    bool_2 = True
    maybe_2 = module_0.Maybe(str_0, bool_2)
    var_0 = maybe_2.to_validation()
    var_0.filter(maybe_1)


def test_case_18():
    generic_0 = module_1.Generic()
    object_0 = module_2.object()
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(object_0)
    dict_0 = {
        generic_0: generic_0,
        generic_0: generic_0,
        generic_0: generic_0,
        generic_0: generic_0,
    }
    maybe_1 = module_0.Maybe(dict_0, generic_0)
    float_0 = -1242.14
    maybe_2 = module_0.Maybe(generic_0, float_0)
    var_2 = maybe_1.to_try()
    bool_1 = var_1.__eq__(var_0)
    var_3 = maybe_1.to_either()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_2)
    var_0 = maybe_2.to_lazy()
    var_1 = maybe_2.ap(maybe_1)
    bool_2 = True
    maybe_2.bind(bool_2)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(bool_2)
