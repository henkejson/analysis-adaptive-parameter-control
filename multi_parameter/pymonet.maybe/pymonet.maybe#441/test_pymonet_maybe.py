# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x86d/(\xbeO\xaa#\\"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.get_or_else(maybe_0)
    bool_1 = var_2.__eq__(var_0)
    var_4 = var_3.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    var_0 = maybe_1.to_validation()
    maybe_0.filter(var_0)


def test_case_4():
    int_0 = -2875
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    var_4 = maybe_1.map(maybe_1)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_1.to_box()
    var_7 = maybe_1.map(var_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\x84\x85\x14\xbe\xa7{\xef'\xf2\xc1q\x8c\xe15"
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Last[B]\n        :returns: new Last with last value\n        :rtype: Last[A]\n        "
    set_0 = {bytes_0, str_0, bytes_0}
    complex_0 = 145.8 - 2379.9644j
    str_1 = "lj!.@zqme^4/>bhP"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_1, bool_0)
    var_0 = maybe_0.map(complex_0)
    var_1 = var_0.ap(set_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_1.bind(var_1)


def test_case_7():
    int_0 = 1666
    int_1 = 854
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_8():
    float_0 = -254.827
    float_1 = -2825.0579
    bool_0 = False
    maybe_0 = module_0.Maybe(float_1, bool_0)
    maybe_0.ap(float_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = var_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_4 = maybe_1.get_or_else(var_2)
    var_5 = var_0.to_lazy()
    bool_1 = maybe_1.__eq__(none_type_0)
    var_6 = maybe_0.to_box()
    var_7 = var_0.to_box()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.ap(bool_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.to_either()
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_13():
    bytes_0 = b"\x86d/(\xbeO\xaa#\\"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.to_box()
    var_4 = var_0.filter(none_type_0)
    var_5 = maybe_0.get_or_else(var_2)
    var_6 = maybe_0.to_lazy()
    bool_1 = var_3.__eq__(maybe_0)
    var_7 = var_6.to_box()
    var_8 = var_2.to_box()


def test_case_15():
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        "
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(var_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = var_2.to_box()
    var_4 = maybe_0.filter(var_3)
    var_5 = var_4.get_or_else(maybe_0)
    var_6 = var_4.to_lazy()
    var_7 = var_6.to_box()
    var_8 = var_5.get_or_else(var_2)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    var_0 = maybe_0.to_lazy()
    bool_3 = maybe_1.__eq__(maybe_0)
    var_1 = var_0.to_box()
    var_2 = maybe_1.filter(var_0)
    var_3 = var_2.to_box()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(var_0)
