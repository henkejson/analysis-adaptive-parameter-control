# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 718
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    bool_1 = var_0.__eq__(bool_0)
    bool_2 = var_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_2 = maybe_2.to_either()
    maybe_2.filter(bool_2)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.filter(bool_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.map(var_1)
    maybe_1 = module_0.Maybe(var_3, var_2)
    var_4 = maybe_1.to_either()
    var_5 = var_3.to_lazy()
    var_6 = var_5.ap(var_3)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    bool_1 = var_0.__eq__(bool_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.ap(none_type_0)
    bool_2 = var_3.__eq__(maybe_1)
    var_4 = var_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_5 = maybe_2.to_either()
    maybe_2.filter(bool_2)


def test_case_7():
    bool_0 = False
    int_0 = -4310
    dict_0 = {int_0: int_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_10():
    set_0 = set()
    complex_0 = 980.72 - 1172.236418j
    bool_0 = False
    list_0 = [complex_0, complex_0, bool_0, bool_0]
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.ap(set_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    bool_1 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_box()
    var_4 = var_3.to_validation()
    var_5 = var_4.to_either()
    var_6 = maybe_0.filter(bool_1)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    bool_2 = var_0.__eq__(bool_0)
    var_2 = var_1.bind(none_type_0)
    var_3 = var_2.get_or_else(none_type_0)
    var_4 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_5 = var_0.to_box()
    var_6 = var_0.to_lazy()
    var_7 = var_6.bind(var_6)
    var_8 = var_0.to_validation()
    var_9 = var_6.to_try()
    var_10 = maybe_2.to_lazy()
    maybe_2.filter(var_10)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    int_0 = 2898
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(int_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_3 = maybe_1.filter(var_0)
    var_4 = maybe_1.ap(maybe_1)
    var_5 = var_0.to_validation()
    var_6 = var_3.to_validation()
    var_7 = maybe_1.get_or_else(var_6)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(bool_0)


def test_case_19():
    bytes_0 = b"[;\xdd\x836CTB\xb6"
    bytes_1 = b"9\x04 \x9c\x18"
    tuple_0 = (bytes_0, bytes_1)
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    set_0 = {tuple_0, bytes_1}
    int_0 = 593
    tuple_1 = (set_0, int_0)
    int_1 = 2906
    bool_0 = True
    maybe_1 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_1.map(tuple_1)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_20():
    bytes_0 = b"\x83\xaan\xd1\x8c\x80\xee\x07@\x96UD\xa4"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(bytes_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_1.to_try()
    var_1.to_lazy()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = var_1.__eq__(var_0)
    var_2 = var_0.filter(var_0)
    var_3 = var_2.get_or_else(var_0)
    var_4 = var_3.to_either()
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_5 = var_0.to_box()
    var_6 = maybe_1.to_lazy()
    var_7 = var_1.bind(var_3)
    var_8 = var_4.to_validation()
    var_9 = var_6.to_try()
    var_9.filter(var_3)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)
