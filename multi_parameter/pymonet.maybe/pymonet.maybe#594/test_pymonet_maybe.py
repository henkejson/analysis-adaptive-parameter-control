# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = 'w"\x0cH h4'
    set_0 = {bool_0, str_0, bool_0, str_0}
    maybe_1 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_0 = maybe_2.to_validation()
    var_1 = maybe_1.to_try()
    bool_2 = maybe_2.__eq__(var_1)
    var_2 = maybe_2.get_or_else(bool_1)
    var_3 = maybe_0.filter(var_2)
    bool_3 = var_2.__eq__(maybe_2)
    bool_4 = True
    var_4 = maybe_0.ap(bool_4)
    var_5 = maybe_0.to_either()
    var_6 = var_4.map(var_0)
    maybe_2.filter(bool_3)


def test_case_3():
    str_0 = "{Gi(X*]t["
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_either()
    maybe_1.map(maybe_1)


def test_case_4():
    bytes_0 = b"J\xdd\xef\xb5\xeb\xbd\x16\xf9\xfd\xfc\xa3\n A\x94z\xb1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.bind(none_type_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.filter(var_3)
    var_5 = var_3.map(var_1)
    var_5.to_lazy()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(bool_0)


def test_case_6():
    str_0 = "\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(str_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.bind(var_3)
    generic_0 = module_1.Generic()
    var_5 = var_2.ap(generic_0)


def test_case_7():
    float_0 = 1155.26438
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.ap(float_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_9():
    none_type_0 = None
    float_0 = -2963.5731
    set_0 = {float_0, float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_0.ap(none_type_0)


def test_case_10():
    list_0 = []
    bool_0 = False
    list_1 = [bool_0]
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.get_or_else(list_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_0.get_or_else(var_0)


def test_case_12():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.filter(int_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(var_2)


def test_case_14():
    none_type_0 = None
    int_0 = 793
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(none_type_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.ap(bool_0)
    var_3 = var_1.to_either()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.to_lazy()
    var_1.to_lazy()


def test_case_16():
    bytes_0 = b"\xc3\x8f\xfb"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_3 = var_2.to_box()
