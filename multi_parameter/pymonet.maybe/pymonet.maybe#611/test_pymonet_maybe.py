# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_either()
    bool_2 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.ap(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = var_2.ap(bool_1)
    var_5 = var_4.ap(var_4)
    var_6 = var_2.filter(var_5)
    maybe_0.filter(bool_0)


def test_case_3():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_2 = var_0.__eq__(maybe_0)
    var_0.to_validation()


def test_case_4():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.filter(bool_0)
    maybe_0.filter(bool_0)


def test_case_5():
    none_type_0 = None
    int_0 = 24
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(var_0)


def test_case_7():
    list_0 = []
    str_0 = "Bw;l"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(list_0)


def test_case_8():
    complex_0 = -48.00889 - 1007.949j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(bool_0)


def test_case_9():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.filter(bool_0)
    maybe_0.filter(bool_0)


def test_case_10():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.filter(tuple_0)


def test_case_11():
    tuple_0 = ()
    list_0 = [tuple_0]
    tuple_1 = (list_0, tuple_0)
    str_0 = "hd4"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_1)
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_box()


def test_case_12():
    bool_0 = True
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(bool_0)


def test_case_13():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_1.ap(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = var_2.filter(bool_0)
    maybe_0.filter(bool_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    str_0 = "Sum[value={}]"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.ap(str_0)


def test_case_16():
    bytes_0 = b"Sm\x0e\xe7Jxt\x19\xe0\xc3\xba6&\x95\xfb\x8a\xf5"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_17():
    float_0 = 1494.783
    tuple_0 = ()
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(dict_0)
    var_1 = var_0.filter(tuple_0)
    var_2 = var_1.map(float_0)
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_0.filter(var_1)


def test_case_19():
    set_0 = set()
    int_0 = 2622
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(set_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    int_0 = 1132
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.filter(bool_0)
    var_2 = var_0.to_try()
    var_3 = maybe_1.filter(var_0)
    var_4 = var_0.to_try()
    var_5 = var_3.to_try()
    var_6 = maybe_1.bind(var_5)
    var_7 = var_6.to_lazy()
    var_8 = var_7.to_validation()
    var_9 = maybe_0.to_lazy()
    var_10 = var_7.to_try()
    var_2.to_try()


def test_case_22():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_1.to_try()
    bool_2 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_1.ap(none_type_0)
    var_4 = var_3.map(bool_2)
    var_5 = var_3.to_lazy()
    var_6 = var_3.ap(bool_1)
    var_7 = var_6.ap(var_6)
    var_8 = var_6.filter(bool_2)
    var_9 = var_6.to_either()
    var_10 = maybe_0.ap(var_3)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_3, none_type_0)
    var_11 = maybe_2.to_lazy()
    var_11.get_or_else(bool_3)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_0.get_or_else(bool_0)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    str_0 = 'Ua,mM-\x0cQ8Ryn=lc`"?l'
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_lazy()
    none_type_1 = None
    var_1 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(none_type_1)
    var_2 = var_1.filter(maybe_1)
    var_3 = var_1.filter(bool_0)
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_1.to_box()
    var_7 = maybe_1.to_either()
    var_8 = maybe_1.to_try()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_9 = maybe_0.to_validation()
    var_10 = var_6.to_validation()
    var_11 = var_4.to_lazy()
    var_12 = var_9.to_either()
    var_13 = var_4.to_validation()
    var_14 = var_6.to_either()
    var_15 = var_2.filter(var_0)
    var_2.to_lazy()


def test_case_25():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_try()
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_0.ap(maybe_0)
