# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    complex_0 = -2196.62 - 616.47j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xb9\xe7\xcb["
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()


def test_case_3():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = var_0.__eq__(var_1)
    var_2 = var_0.get_or_else(var_0)
    var_3 = maybe_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_4():
    str_0 = "bH9dIO=w\n2Co+"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.map(var_0)


def test_case_5():
    none_type_0 = None
    int_0 = -218
    none_type_1 = None
    maybe_0 = module_0.Maybe(int_0, none_type_1)
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"$&;r\xcc\xf8\xbd\x84\xfa"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    str_0 = "-b\n;yp`pJmFBrOK6bqA"
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.to_box()
    var_4 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_5 = var_1.to_lazy()
    var_6 = maybe_0.bind(str_0)


def test_case_7():
    none_type_0 = None
    float_0 = -2604.95
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    set_0 = {none_type_0, none_type_0}
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.ap(none_type_0)
    var_3 = var_2.ap(set_0)
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_4 = maybe_2.to_try()
    maybe_1.bind(none_type_0)


def test_case_8():
    str_0 = "\n"
    bytes_0 = b"\t`\xa3~\xb5\xdeEreF"
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(str_0)


def test_case_9():
    bytes_0 = b"}\x17\xd2\xe8\x7fi\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = var_0.get_or_else(var_0)
    maybe_1.filter(maybe_0)


def test_case_10():
    complex_0 = -2196.62 - 616.47j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)


def test_case_11():
    complex_0 = -2196.62 - 616.47j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(complex_0)


def test_case_12():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_13():
    bytes_0 = b"}\x17\xd2\xe8\x7fi\x9f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(maybe_0)


def test_case_14():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()


def test_case_15():
    bytes_0 = b"f"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.bind(var_4)
    var_6 = var_4.to_either()


def test_case_16():
    bytes_0 = b"\xd6\xae\x11"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_try()
    complex_0 = 1785.05571 + 2715.669178j
    var_4 = var_3.map(complex_0)


def test_case_17():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.ap(var_0)
    var_3 = var_1.map(var_0)
    var_4 = var_3.bind(var_2)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_5 = maybe_1.to_try()
    bool_1 = var_1.__eq__(var_2)
    maybe_1.filter(var_2)


def test_case_18():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_0.to_validation()
    var_2 = var_0.get_or_else(var_0)
    var_3 = maybe_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_19():
    int_0 = 367
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(var_3)
    bool_2 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_4 = maybe_1.map(int_0)
    var_5 = var_4.map(int_0)
    var_6 = var_5.to_validation()
    maybe_2 = module_0.Maybe(int_0, bool_2)


def test_case_20():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.map(var_0)
    var_2 = var_1.bind(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_3 = var_2.map(var_2)
    bool_1 = var_0.__eq__(var_3)
    var_4 = var_0.get_or_else(var_0)
    var_5 = maybe_0.to_either()
    maybe_1.filter(maybe_0)


def test_case_21():
    bytes_0 = b"\xa5\xe43\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    str_0 = "-b\n;yp`pJmFBrOK6bqA"
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.ap(str_0)
    var_3 = maybe_0.bind(var_2)
    maybe_1 = module_0.Maybe(var_2, var_1)
    var_4 = maybe_0.map(var_2)
    bool_0 = maybe_1.__eq__(var_4)
    var_5 = var_3.get_or_else(var_2)
    var_6 = var_5.to_either()
    var_7 = var_1.filter(var_2)
