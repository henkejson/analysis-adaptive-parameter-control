# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -1145
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    str_0 = "v1M#i|-#kyOA"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_3():
    float_0 = -408.37
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_0)
    maybe_0.map(float_0)


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    tuple_0 = (maybe_0,)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_1.map(tuple_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    bool_3 = True
    var_1 = maybe_1.bind(bool_3)
    maybe_2 = module_0.Maybe(bool_2, var_0)
    maybe_3 = module_0.Maybe(bool_0, bool_3)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.to_try()
    var_5 = maybe_2.to_either()


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(bool_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    str_0 = '2h:#T>\x0bB\x0c.eyx"'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.map(maybe_0)
    var_3 = maybe_0.to_validation()
    var_3.bind(maybe_0)


def test_case_10():
    float_0 = -408.37
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    bool_0 = maybe_0.to_box()
    maybe_1 = maybe_0.to_either()
    var_0 = maybe_1.to_box()
    bool_1 = True
    maybe_2 = module_0.Maybe(float_0, float_0)
    maybe_3 = module_0.Maybe(var_0, dict_0)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.bind(bool_0)
    var_3 = maybe_0.get_or_else(bool_1)
    var_4 = maybe_3.to_validation()
    var_5 = maybe_3.bind(maybe_3)


def test_case_11():
    int_0 = 718
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bytes_0 = b"\xd8S\xd8"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_13():
    float_0 = -408.37
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    str_0 = ":w#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_1.map(dict_0)
    var_2 = maybe_0.filter(var_1)
    bool_1 = var_0.__eq__(var_0)


def test_case_14():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()


def test_case_15():
    float_0 = -605.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(maybe_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_0.map(var_0)
    int_0 = -262
    maybe_2 = module_0.Maybe(int_0, var_0)
    var_3 = maybe_0.to_lazy()
    var_0.to_either()


def test_case_16():
    str_0 = "LH]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    int_0 = 4200
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = var_0.__eq__(str_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_try()
    var_4 = var_2.to_validation()
    maybe_1.filter(var_2)


def test_case_19():
    float_0 = 1432.356914
    float_1 = 1010.393
    maybe_0 = module_0.Maybe(float_1, float_1)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_try()
    var_4.ap(float_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\xf7`mM\x15fp\x8c\x8f\xf7\xacm\xa7,C\x8e|"
    set_0 = {bytes_0, bool_0, bytes_0}
    str_0 = "v1M#i|-#kyOA"
    tuple_0 = (bytes_0, set_0, set_0, str_0)
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(none_type_0, tuple_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_try()
    var_2.to_either()


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_1.bind(var_0)


def test_case_22():
    bytes_0 = b"\x8fy\xef\x91\xa4"
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(var_1)
    var_4 = var_2.to_try()
    maybe_1 = module_0.Maybe(bytes_0, dict_0)
    var_5 = maybe_1.to_try()
    var_6 = maybe_1.to_box()
    dict_0.to_either()
