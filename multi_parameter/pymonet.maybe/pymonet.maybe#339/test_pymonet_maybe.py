# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "/"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(str_0)


def test_case_3():
    int_0 = 2710
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_try()
    var_0.to_box()


def test_case_4():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    maybe_0.map(var_2)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.bind(var_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.ap(none_type_0)


def test_case_6():
    complex_0 = 1715.239 - 1922.275j
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(complex_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_validation()
    var_5 = var_2.to_try()
    var_6 = maybe_0.to_validation()
    var_1.to_validation()


def test_case_9():
    int_0 = -359
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    bool_0 = False
    float_0 = -326.7
    bool_1 = False
    maybe_0 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_2.filter(var_0)


def test_case_12():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bytes_0 = b"~R\xf4\xeb\xd1\xc0f/\xa5\xdd&\xa2\x8e"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_1.to_either()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)


def test_case_16():
    str_0 = "<GA|OF,.\x0c"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(str_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    int_0 = -4538
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.map(var_0)
    var_4 = maybe_1.to_try()
    var_4.to_validation()


def test_case_18():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1.map(var_1)


def test_case_19():
    str_0 = "/"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_2 = maybe_0.filter(none_type_0)
    var_3 = var_1.ap(var_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_either()
    var_6 = maybe_1.to_try()
    list_0 = [maybe_1, var_4, bool_0]
    var_7 = maybe_1.get_or_else(list_0)
    var_8 = var_1.bind(var_6)
    maybe_2 = module_0.Maybe(var_5, var_6)
    maybe_3 = module_0.Maybe(none_type_0, var_6)
    var_9 = maybe_1.to_box()
    bool_1 = maybe_0.__eq__(maybe_2)
    var_10 = maybe_3.filter(var_3)
    bool_2 = True
    maybe_4 = module_0.Maybe(var_8, bool_2)
    var_6.to_box()
