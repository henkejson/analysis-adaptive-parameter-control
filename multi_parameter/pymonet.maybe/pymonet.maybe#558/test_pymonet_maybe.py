# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1980
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = var_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_1.filter(var_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_3 = maybe_1.filter(maybe_0)
    var_4 = maybe_0.get_or_else(maybe_1)
    maybe_2.filter(var_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_1.ap(maybe_1)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = var_0.map(var_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_3 = maybe_1.filter(maybe_0)
    var_4 = maybe_0.get_or_else(maybe_1)
    maybe_3 = module_0.Maybe(maybe_1, var_1)
    var_5 = maybe_2.to_box()
    maybe_2.filter(var_0)


def test_case_5():
    int_0 = 1291
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    maybe_0.map(int_0)


def test_case_6():
    none_type_0 = None
    float_0 = 1788.0
    dict_0 = {float_0: float_0, float_0: float_0}
    str_0 = "x"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.bind(dict_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(none_type_0)


def test_case_7():
    int_0 = 1
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(int_0)


def test_case_8():
    object_0 = module_2.object()
    float_0 = 781.737577
    maybe_0 = module_0.Maybe(object_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    maybe_1 = module_0.Maybe(object_0, object_0)
    bytes_0 = b"\xe5*]\x97S\xc2\xa1\xa3\t\t-\x84\xb7\x1bUL0."
    maybe_2 = module_0.Maybe(float_0, var_0)
    bool_0 = False
    var_2 = var_0.to_try()
    maybe_3 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_0.ap(maybe_0)


def test_case_9():
    float_0 = 1816.576
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(float_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_0.get_or_else(maybe_1)
    maybe_1.filter(var_0)


def test_case_11():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_1.ap(maybe_1)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = var_0.map(var_0)
    var_3 = maybe_1.to_either()
    bool_2 = False
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_4 = maybe_1.filter(maybe_0)
    var_5 = maybe_0.get_or_else(maybe_1)
    maybe_3 = module_0.Maybe(maybe_1, var_1)
    var_6 = maybe_2.to_box()
    maybe_2.filter(var_0)


def test_case_13():
    none_type_0 = None
    int_0 = 1180
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.ap(none_type_0)


def test_case_14():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_15():
    bytes_0 = b"L\xf0\xff\xe9\x94\xc4\x92rM{\xb5f\xff\xf2`\xf5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(var_0)
    var_2.to_either()


def test_case_16():
    complex_0 = -1692.073 + 3783j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(complex_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.filter(var_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_0, bool_2)
    var_2 = maybe_0.get_or_else(maybe_1)
    maybe_2.filter(var_1)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    maybe_0.ap(bool_1)
