# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    none_type_1 = None
    var_2 = var_1.to_box()
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(bool_1)


def test_case_3():
    bytes_0 = b"\xd1\xdb\xe2z:Uy\x83\x1a"
    bytes_1 = b'\x95\x15i\x14o\x98yh\xc74/\xe6\xd9\xe1\x98\x86!\xa3+"'
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0.filter(bytes_1)


def test_case_4():
    str_0 = "lEqd;6Sa{"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.to_try()
    var_2.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"I4\x81i\xcd\xb8\xe2~\xf9\x83\xe3\xc2Dh\xc8"
    object_0 = module_1.object()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_2.map(bool_0)
    var_1 = maybe_2.ap(maybe_1)
    var_2 = var_1.filter(none_type_0)
    bool_1 = var_2.__eq__(object_0)
    var_3 = var_1.to_validation()
    list_0 = [bool_0, bool_0, bytes_0]
    var_4 = maybe_2.bind(bool_1)
    int_0 = 0
    none_type_1 = None
    maybe_3 = module_0.Maybe(int_0, none_type_1)
    var_5 = maybe_3.get_or_else(list_0)


def test_case_7():
    int_0 = -1335
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_1.to_validation()
    maybe_1.bind(var_2)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    none_type_0 = None
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    bytes_0 = b"\x7f\xcek\x89x\x86"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(none_type_0)
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.filter(object_0)
    var_4 = maybe_1.get_or_else(bool_0)
    maybe_2 = module_0.Maybe(bool_0, var_4)
    var_4.to_either()


def test_case_10():
    none_type_0 = None
    bytes_0 = b"\x81\xb2\xe5\xc4\x92\xf4\xb9\x8a\xcc\x88\xe1\x05\xb8"
    none_type_1 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = True
    none_type_2 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_2)
    var_1 = maybe_1.get_or_else(var_0)
    var_1.to_box()


def test_case_11():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"t\x16\xbd\xef\xe6\x9e\x13\x86*\xef&?)\xb0"
    var_1 = var_0.bind(bytes_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_either()
    var_2.bind(var_2)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"I4\x81i\xcd\xb8\xe2~\xf9\x83\xe3\xc2Dh\xc8"
    object_0 = module_1.object()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_2.ap(maybe_1)
    var_3 = var_2.filter(none_type_0)
    bool_1 = var_3.__eq__(object_0)
    var_4 = var_2.to_validation()
    list_0 = [bool_0, bool_0, bytes_0]
    var_5 = maybe_2.bind(bool_1)
    int_0 = 0
    none_type_1 = None
    maybe_3 = module_0.Maybe(int_0, none_type_1)
    var_6 = maybe_3.get_or_else(list_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"I4\x81i\xcd\xb8\xe2~\xf9\x83\xe3\xc2Dh\xc8"
    object_0 = module_1.object()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_2.map(var_0)
    var_2 = maybe_2.ap(maybe_1)
    var_3 = var_2.filter(none_type_0)
    bool_1 = var_3.__eq__(object_0)
    var_4 = var_2.to_validation()
    list_0 = [bool_0, bool_0, bytes_0]
    var_5 = maybe_2.bind(bool_1)
    var_6 = maybe_1.filter(var_2)
    var_7 = maybe_2.to_validation()
    var_8 = var_5.ap(list_0)
    var_9 = var_6.to_lazy()


def test_case_16():
    bool_0 = False
    float_0 = -622.803
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()


def test_case_17():
    bytes_0 = b"j\xc4a"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = 2075.0
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(float_0, bool_1)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_0.to_either()
    var_2.to_either()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(maybe_0)


def test_case_21():
    bytes_0 = b"cP\xdc\x13\xdd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    bool_0 = var_0.__eq__(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    object_0 = module_1.object()
    maybe_2 = module_0.Maybe(object_0, object_0)
    var_1 = maybe_2.to_try()
    var_2 = maybe_0.ap(object_0)
    var_3 = var_1.get_or_else(var_2)
    var_4 = maybe_2.filter(object_0)
    var_5 = maybe_2.get_or_else(bool_1)
    bool_2 = maybe_1.__eq__(var_3)
    var_6 = maybe_2.to_either()
    var_7 = var_0.map(var_3)
    var_8 = var_6.to_lazy()
    var_9 = var_8.to_either()
    var_10 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(object_0, object_0)
    var_11 = var_8.to_validation()
    var_1.ap(maybe_1)


def test_case_22():
    str_0 = "#\n2g9>F+[r\n"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_2.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_3 = var_2.to_validation()
    maybe_3 = module_0.Maybe(var_3, var_2)
    var_4 = maybe_3.ap(maybe_0)
    var_5 = maybe_2.to_lazy()
    bool_2 = maybe_3.__eq__(var_0)
    bytes_0 = b"6\xfd#!\x02\xbfB\xb0)\x8fTL"
    var_6 = var_2.to_either()
    bool_3 = False
    var_7 = var_0.ap(bool_2)
    maybe_4 = module_0.Maybe(bytes_0, bool_3)
    var_8 = maybe_4.to_box()
    maybe_5 = module_0.Maybe(maybe_4, bool_3)
    var_9 = var_5.ap(var_4)
    var_10 = var_4.bind(var_9)
    bool_4 = True
    maybe_6 = module_0.Maybe(bool_4, bool_4)
    var_11 = var_1.to_box()
    var_12 = maybe_6.to_lazy()
    var_13 = var_12.ap(str_0)
    none_type_0 = None
    var_1.bind(none_type_0)
