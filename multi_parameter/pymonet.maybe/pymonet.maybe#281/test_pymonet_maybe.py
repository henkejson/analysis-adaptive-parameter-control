# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = 'PCwN swe7"Jb@/~V4l8c'
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_0.ap(var_0)
    var_3 = var_1.filter(maybe_1)
    var_4 = maybe_1.get_or_else(var_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_5 = maybe_1.to_try()


def test_case_3():
    str_0 = ""
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(list_0)
    maybe_1 = maybe_0.to_lazy()
    var_0 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_either()
    var_2 = var_0.to_either()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = var_1.to_try()
    var_4 = maybe_2.to_box()


def test_case_4():
    bool_0 = False
    float_0 = 5.673
    float_1 = 1211.46
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(float_1)
    var_1 = var_0.map(float_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(bool_0)
    var_4.to_lazy()


def test_case_5():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    dict_0 = {}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    bytes_0 = b"<|\xfc\xfdM\xf7?\x1d\x87S\xa0\xea2"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.get_or_else(list_0)
    var_1 = maybe_1.bind(bytes_0)
    var_2 = maybe_1.filter(list_0)


def test_case_7():
    object_0 = module_1.object()
    none_type_0 = None
    int_0 = -2764
    bool_0 = True
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (int_0, bool_0, bytes_0, set_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(bool_0)


def test_case_9():
    str_0 = "wcl<?tbl[\\**<"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_11():
    tuple_0 = ()
    bytes_0 = b"\xbe\t\xbb\x1e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_validation()


def test_case_12():
    bool_0 = False
    bool_1 = False
    str_0 = "V$"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.ap(bool_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_14():
    str_0 = ""
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(list_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_either()
    var_2 = var_0.to_either()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = var_1.to_try()
    bool_2 = maybe_2.__eq__(var_1)
    var_4 = maybe_2.to_box()


def test_case_15():
    float_0 = 1225.007013
    complex_0 = 1547.4 + 3247.98211j
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(complex_0)
    var_2.filter(float_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_20():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_validation()
    var_5 = var_4.to_box()
    var_0.to_either()


def test_case_21():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_0.ap(var_0)
    var_3 = maybe_1.filter(maybe_1)
    var_2.to_box()


def test_case_22():
    complex_0 = 1026.37 - 3513.52j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_1.ap(complex_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_6 = var_0.to_lazy()
    var_7 = maybe_1.to_try()
    maybe_3 = module_0.Maybe(complex_0, complex_0)
    bool_1 = False
    var_8 = var_0.to_box()
    bool_2 = maybe_2.__eq__(var_0)
    bool_3 = maybe_1.__eq__(bool_1)
    var_9 = var_0.to_either()
    int_0 = 3800
    var_10 = var_0.filter(int_0)
    str_0 = "f:RA]K16s<v-hPyp"
    bool_4 = True
    maybe_4 = module_0.Maybe(str_0, bool_4)
    var_11 = var_10.get_or_else(str_0)
    var_12 = var_7.bind(var_6)
    var_8.filter(var_2)
