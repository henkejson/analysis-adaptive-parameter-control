# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    object_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "'2Y8gBNKSDGI;L8"
    maybe_1 = module_0.Maybe(str_0, str_0)
    bool_1 = maybe_1.__eq__(str_0)
    var_0 = maybe_1.map(none_type_0)


def test_case_4():
    bytes_0 = b"\xe3\x0b\xc2w\xb0\xd6)b\xaa\xc6d{W\xaf\x05"
    int_0 = 1869
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.map(bytes_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_6():
    bytes_0 = b"\n\xca"
    str_0 = 'Ni\x0bIWgz-8aEz]=ex_m"'
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    int_0 = 1
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    maybe_2 = module_0.Maybe(bytes_0, int_0)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.get_or_else(int_0)
    var_2.get_or_else(int_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_0.ap(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_10():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.filter(var_1)
    maybe_0.filter(maybe_1)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    str_0 = "wV@\nbjpUoF(O@`'A"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_1.to_try()
    var_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    bytes_0 = b"\xfc\x9f\x02\xb3\xae\n/\xbai?\x08PU\xea\xfb\xa38\x11lx"
    bytes_1 = b"\x9d\x8f\xbfT\xd1\xaa>"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_1)
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_1)
    var_2 = maybe_1.to_validation()
    var_2.ap(bytes_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_2 = maybe_1.filter(var_0)
    maybe_0.filter(var_1)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_3 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_2.to_validation()
    var_4 = maybe_2.get_or_else(maybe_2)
    maybe_2.bind(var_4)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"\x8e\x00~\x98\x02\x83\xb5\x11e"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_validation()
    str_0 = "]r2-QNr@\x0c%"
    bool_2 = False
    maybe_2 = module_0.Maybe(str_0, bool_2)
    var_3 = maybe_2.to_validation()
    maybe_3 = module_0.Maybe(str_0, str_0)
    var_4 = maybe_3.to_box()
    var_5 = maybe_3.bind(var_4)
    var_6 = maybe_3.to_either()
    var_7 = maybe_2.to_try()
    var_7.filter(var_6)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.to_validation()
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_validation()
    bool_2 = False
    object_0 = module_1.object()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.get_or_else(bool_2)
    str_0 = "\x0b/4M\"YO?`@'"
    bool_3 = False
    maybe_1 = module_0.Maybe(str_0, bool_3)
    bool_4 = maybe_0.__eq__(maybe_0)
    maybe_1.bind(var_0)
