# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xde#-\xc5\xed\xdf{|"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(none_type_0)


def test_case_3():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(maybe_1)


def test_case_4():
    none_type_0 = None
    int_0 = 698
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.ap(none_type_0)


def test_case_5():
    none_type_0 = None
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_0.map(none_type_0)


def test_case_6():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.map(bool_0)
    var_3 = var_1.to_lazy()
    var_4 = var_0.to_box()
    var_5 = var_2.to_validation()
    var_6 = var_4.to_either()
    maybe_1.filter(maybe_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    var_0.filter(var_0)


def test_case_9():
    str_0 = "[(\n8U\\TtaK,!P;"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(str_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.map(bool_0)
    var_3 = var_1.to_lazy()
    var_4 = var_2.to_box()
    var_5 = var_0.to_validation()
    var_6 = var_0.get_or_else(var_3)
    maybe_1.filter(var_3)


def test_case_12():
    none_type_0 = None
    bytes_0 = b"i\x9aJu\x9c/\xfe\n\n\xbb\x91"
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.bind(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    maybe_1.filter(maybe_1)


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = maybe_1.get_or_else(bool_0)
    var_2.map(var_1)


def test_case_16():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = var_0.__eq__(bool_0)


def test_case_19():
    complex_0 = 463.576 - 2565.48461j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_1.to_try()


def test_case_20():
    bytes_0 = b"\x8f\x94e\xfa\x14\xdd\x8d\x96\x9f\xff\x96a"
    set_0 = {bytes_0, bytes_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_4 = var_3.to_try()
    var_4.to_box()


def test_case_21():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    dict_0 = {}
    bool_2 = False
    maybe_2 = module_0.Maybe(dict_0, bool_2)
    var_2 = maybe_2.to_either()
    var_3 = var_2.to_validation()
    var_3.bind(maybe_1)


def test_case_23():
    str_0 = "l&"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_1.get_or_else(none_type_0)
    var_0.to_try()


def test_case_24():
    int_0 = -561
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_0.map(var_1)
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0}
    maybe_2 = module_0.Maybe(none_type_0, dict_0)
    var_3 = maybe_0.bind(maybe_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_0.filter(var_4)
    var_6 = var_1.map(var_4)
    bool_1 = var_5.__eq__(maybe_2)
    var_7 = var_6.bind(bool_0)
    var_8 = module_0.Maybe(var_2, dict_0)
    var_9 = var_0.to_validation()
    var_10 = var_0.get_or_else(var_4)
    var_11 = maybe_0.ap(var_10)
    maybe_1.filter(var_11)
