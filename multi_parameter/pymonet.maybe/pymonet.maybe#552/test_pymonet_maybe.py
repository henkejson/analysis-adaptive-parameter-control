# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_either()


def test_case_3():
    complex_0 = 46.44925 - 2636j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.filter(var_1)
    bool_1 = var_2.__eq__(var_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.bind(maybe_0)
    var_3 = var_0.filter(maybe_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    complex_0 = 718.2225 - 67.281j
    maybe_0.map(complex_0)


def test_case_6():
    bytes_0 = b"O\xec\x1b"
    complex_0 = -1025 - 3538.54222j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(bytes_0)
    str_0 = "\n    The Try control gives us the ability write safe code\n    without focusing on try-catch blocks in the presence of exceptions.\n    "
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    complex_0 = 46.44925 - 2634.121657798521j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    set_0 = var_0.get_or_else(complex_0)
    var_1 = var_0.to_lazy()
    bool_1 = maybe_0.__eq__(set_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.to_box()
    var_4 = maybe_0.to_either()
    var_5 = var_0.filter(var_4)
    bool_2 = maybe_0.__eq__(bool_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.bind(var_1)
    var_4 = var_0.filter(maybe_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "51xH@$5#Nv5"
    float_0 = -1698.87458
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_1.bind(str_0)
    var_2 = var_1.to_box()
    bool_1 = var_2.__eq__(var_0)


def test_case_14():
    complex_0 = 46.44925 - 2636j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    maybe_1 = var_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = var_0.filter(var_1)
    bool_1 = maybe_0.to_box()


def test_case_15():
    str_0 = "\\,*}V"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(none_type_0)


def test_case_16():
    none_type_0 = None
    complex_0 = -1288.6321 - 214.47622j
    dict_0 = {complex_0: complex_0}
    maybe_0 = module_0.Maybe(dict_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = var_0.__eq__(var_0)


def test_case_18():
    float_0 = -1397.94
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_0.filter(maybe_0)
    var_4 = var_2.to_box()
    bool_0 = var_2.__eq__(var_3)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_1.ap(var_1)


def test_case_20():
    complex_0 = 46.44925 - 2636j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    set_0 = set()
    bool_1 = maybe_0.__eq__(set_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_either()
    dict_0 = {}
    var_3 = var_0.get_or_else(dict_0)
    maybe_1 = module_0.Maybe(set_0, var_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_4 = var_0.ap(var_1)
    var_5 = var_0.to_lazy()
    var_6 = var_5.to_box()
    var_7 = maybe_0.bind(bool_0)
    var_8 = var_7.filter(var_4)
    bool_3 = var_4.__eq__(maybe_0)


def test_case_21():
    complex_0 = 46.44925 - 2636j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    set_0 = set()
    bool_1 = maybe_0.__eq__(set_0)
    var_1 = module_0.Maybe(complex_0, bool_1)
    var_2 = maybe_0.to_either()
    dict_0 = {}
    var_3 = var_0.get_or_else(dict_0)
    maybe_1 = module_0.Maybe(set_0, var_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_4 = var_0.ap(var_1)
    var_5 = var_0.to_lazy()
    var_6 = var_0.to_lazy()
    bool_3 = maybe_1.__eq__(maybe_1)
    var_7 = var_4.bind(var_3)
    var_8 = maybe_0.filter(var_3)
    bool_4 = var_0.__eq__(maybe_0)
