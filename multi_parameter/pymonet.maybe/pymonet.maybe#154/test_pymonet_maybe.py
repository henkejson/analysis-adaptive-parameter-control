# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = var_0.map(var_0)
    var_0.to_try()


def test_case_3():
    float_0 = -3615.216062
    list_0 = [float_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.bind(list_0)


def test_case_4():
    bytes_0 = b"G\\#\x9a\xcfL\x96\xdc\xa7\xb5"
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(tuple_0, bytes_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_0.map(var_3)
    var_5 = var_3.to_try()
    var_2.to_either()


def test_case_5():
    str_0 = "Lazy[T, W]"
    list_0 = [str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_try()
    var_2.to_box()


def test_case_6():
    float_0 = 5677.696761
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_7():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.to_validation()
    var_4 = var_1.filter(maybe_0)
    bool_2 = bool_1.__eq__(bool_1)
    var_5 = var_2.to_try()
    var_5.to_lazy()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_10():
    bytes_0 = b"?\xa9E\x82!"
    set_0 = {bytes_0}
    float_0 = 4106.59528
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_0.to_lazy()


def test_case_11():
    int_0 = 1943
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)


def test_case_12():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()


def test_case_13():
    bytes_0 = b"\x99a\x02\xf3&\xd1e\xb0\x8cr\xfe\x1b}@"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    maybe_0.filter(var_1)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_validation()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_4 = maybe_0.to_try()
    var_5 = var_1.to_try()
    var_6 = var_4.map(maybe_0)
    var_6.to_box()


def test_case_16():
    bool_0 = True
    float_0 = 2405.764447
    bool_1 = False
    maybe_0 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(bool_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    var_0.map(var_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.bind(maybe_0)
    var_2 = maybe_1.bind(maybe_1)


def test_case_19():
    none_type_0 = None
    float_0 = -334.089
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.get_or_else(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_20():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(set_0, bool_1)
    str_0 = ";?n"
    bool_2 = True
    maybe_1 = module_0.Maybe(str_0, bool_2)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_try()
    var_2.get_or_else(maybe_0)


def test_case_21():
    bytes_0 = b"\x83F\xd8I\x94\xc1B&a^\xe7\x12\x93"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(bytes_0)


def test_case_22():
    bytes_0 = b"G\\#\x9a\xcfL\x96\xdc\xa7\xb5"
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(var_0)
    var_2 = var_1.to_try()
    var_1.map(var_1)
