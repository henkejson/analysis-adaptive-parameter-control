# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"%"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(bytes_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = var_1.filter(bool_0)
    var_3 = var_2.to_box()
    var_4 = var_2.to_try()
    var_5 = maybe_0.map(var_0)
    var_6 = maybe_0.to_validation()
    bool_2 = var_1.__eq__(bytes_0)
    var_6.map(var_0)


def test_case_3():
    bytes_0 = b"%"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_4():
    bytes_0 = b"%"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.get_or_else(bytes_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_2)


def test_case_5():
    float_0 = 1498.0
    bool_0 = True
    str_0 = "ktJ5MX@FzCi"
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.map(bool_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.ap(maybe_0)
    var_3 = var_0.map(var_2)
    var_4 = var_1.to_try()
    var_5 = var_1.map(var_1)
    var_0.to_lazy()


def test_case_7():
    bytes_0 = b"\xda\xf1:#9\xe8\xb7"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_box()


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\x18\x84\xd1\xc3\x08C\t\xdf\xd9\xbc\x9c\xc0\xfd"
    int_0 = 0
    set_0 = set()
    tuple_0 = (bytes_0, int_0, set_0)
    int_1 = -349
    bool_1 = False
    maybe_1 = module_0.Maybe(int_1, bool_1)
    maybe_1.ap(tuple_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: tuple_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    str_0 = "l\rG\\31BOZjpV+o?6\r"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_13():
    int_0 = -681
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_1.get_or_else(int_0)


def test_case_14():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_validation()
    var_4.ap(int_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_16():
    bytes_0 = b"\x1b4=?\xda"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_17():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = []
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.bind(set_0)
    var_1.to_box()


def test_case_18():
    bytes_0 = b"%"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_1 = var_0.to_box()
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.to_box()
    var_5 = var_4.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_6 = maybe_2.to_lazy()
    var_7 = var_6.to_either()
    var_8 = var_7.to_lazy()
    var_9 = var_8.ap(bool_0)
    var_10 = var_9.map(bool_0)
    var_11 = var_10.to_try()
    var_12 = var_11.map(var_5)
    var_13 = var_12.get_or_else(bool_0)
    var_13.map(bool_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(var_1)


def test_case_21():
    bytes_0 = b"%"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_5 = maybe_1.to_try()
    var_6 = maybe_1.filter(bytes_0)
    bool_1 = maybe_1.__eq__(var_6)
    float_0 = -2685.5261
    var_7 = var_6.filter(var_3)
    var_8 = var_7.to_box()
    var_9 = var_7.to_try()
    var_10 = maybe_1.map(var_5)
    var_11 = maybe_1.to_validation()
    bool_2 = var_11.__eq__(float_0)
    bool_3 = var_6.__eq__(bytes_0)
    var_11.map(var_5)


def test_case_22():
    bytes_0 = b"%"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1.filter(bool_0)
