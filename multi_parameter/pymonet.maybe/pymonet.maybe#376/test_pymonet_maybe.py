# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b")\xf2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xbdF\xf6~E\x86\xcf\x0e\xfc\xa1\xf9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(var_0)
    var_1 = maybe_0.map(var_0)
    bool_1 = maybe_0.__eq__(var_1)


def test_case_3():
    bytes_0 = b"\xbdF\xf6~E\x86\xcf\x0e\xfc\xa1\xf9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(var_0)
    bool_1 = maybe_0.__eq__(var_1)


def test_case_4():
    str_0 = "VS;/O\rg5QHy,|5i"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.get_or_else(maybe_2)
    var_2 = maybe_1.bind(var_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_3 = var_1.to_either()
    maybe_2.filter(bool_0)


def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_0.bind(tuple_0)


def test_case_6():
    str_0 = "VS;/O\rg5QHy,|5i"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    generic_0 = module_1.Generic()
    var_0 = maybe_1.ap(generic_0)
    var_1 = maybe_1.get_or_else(generic_0)
    var_2 = maybe_1.bind(var_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_3 = var_2.to_either()
    var_4 = var_2.filter(str_0)
    var_1.filter(generic_0)


def test_case_7():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    bytes_0 = b'\xc4"\xc021[\xd8\xbfH$\xbc*#\xc93'
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(generic_0)


def test_case_8():
    str_0 = "\n        Evaluate function and memoize her output or return memoized value when function was evaluated.\n\n        :returns: result of function in Lazy\n        :rtype: A\n        "
    int_0 = 769
    list_0 = [int_0, int_0, int_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.filter(str_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(list_0)


def test_case_9():
    bytes_0 = b"]x?P\xc3\x81\xa3J<%L\xa09"
    int_0 = 863
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    bool_0 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, bytes_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_2.get_or_else(bool_0)


def test_case_10():
    str_0 = "e>DKCO@ly'*Uac<]#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    int_0 = -18
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, none_type_0)


def test_case_14():
    str_0 = 'P+C\x0cg4"}DRLHos;f2N:3'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_17():
    str_0 = "Z:\n"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_1 = maybe_1.to_validation()
    maybe_1.map(var_0)


def test_case_18():
    bytes_0 = b"\xbdF\xf6~E\x86\xcf\x0e\xfc\xa1\xf9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(var_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_2 = maybe_1.filter(maybe_0)
    var_1.map(var_1)


def test_case_19():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    var_1 = var_0.ap(list_0)
    var_2 = var_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_20():
    str_0 = "VS;/O\rg5QHy,|5i"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.to_box()
    maybe_2 = maybe_1.to_box()
    var_0 = maybe_1.get_or_else(maybe_2)
    var_1 = module_0.Maybe(var_0, bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_2 = var_0.to_either()
    var_3 = maybe_0.filter(bool_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    maybe_0.map(var_1)


def test_case_22():
    str_0 = "2Z=Mp"
    maybe_0 = module_0.Maybe(str_0, str_0)
    str_1 = "YO{Y\x0c~e#"
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.ap(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_3 = maybe_1.ap(var_1)
    bool_1 = var_3.__eq__(str_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_4 = var_3.to_lazy()
    maybe_1.map(var_0)
