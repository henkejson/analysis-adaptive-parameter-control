# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "\x0b\tbEq^h/?!I#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_2.filter(bool_0)
    maybe_1.filter(maybe_0)


def test_case_3():
    str_0 = '.MesT#"'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = var_0.to_box()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.filter(bool_0)
    bool_2 = var_5.__eq__(var_1)
    var_6 = var_0.map(var_1)
    var_7 = maybe_1.to_validation()
    var_7.get_or_else(str_0)


def test_case_4():
    str_0 = "\n        :param fork: function to call during fork\n        :type fork: Function(reject, resolve) -> Any\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    float_0 = -516.0
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.filter(float_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.map(str_0)
    var_4 = var_3.to_either()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_box()
    maybe_1.map(var_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = var_0.ap(bool_0)
    var_2 = maybe_1.bind(maybe_0)


def test_case_7():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(var_1)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = var_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    str_0 = '.MesT#"'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_3 = var_0.get_or_else(maybe_1)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.filter(bool_0)
    bool_2 = var_5.__eq__(var_1)
    var_6 = var_0.map(var_1)
    var_7 = var_1.to_box()
    var_8 = maybe_1.to_validation()
    var_8.get_or_else(str_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_1.filter(var_0)
    var_3 = var_2.bind(var_0)
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_1.bind(var_1)
    maybe_0.filter(var_1)


def test_case_12():
    str_0 = '.MesT#"'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_validation()
    var_2.get_or_else(str_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(list_0)


def test_case_16():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_try()
    var_1.to_validation()


def test_case_17():
    str_0 = "\x0b\tbEq^h/?!I#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_2.filter(bool_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(maybe_0)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_validation()
    maybe_1.filter(var_0)


def test_case_19():
    str_0 = "t>oa0\nz\x0bHazy*>&"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = maybe_1.map(var_1)
    var_4 = maybe_1.to_box()
    var_5 = maybe_1.to_lazy()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = var_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(maybe_0)
    maybe_0.filter(var_2)


def test_case_22():
    str_0 = "\x0b\tbEq^h/?!I#"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    dict_0 = {bool_1: bool_0, str_0: bool_0, bool_2: maybe_2}
    maybe_3 = module_0.Maybe(maybe_2, dict_0)
    var_0 = maybe_3.to_validation()
    var_1 = maybe_2.to_try()
    maybe_1.filter(dict_0)
