# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    none_type_1 = None
    str_0 = "?0&w@_+(H,)Q\r}p"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(none_type_1)
    var_2 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(var_1)
    maybe_2 = var_1.filter(var_0)
    bool_2 = maybe_2.__eq__(maybe_2)
    var_2.bind(var_1)


def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_1 = None
    str_0 = "?0&w@_+(H,)Q\r}p"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_1.filter(none_type_1)
    var_3 = maybe_1.to_box()
    bool_1 = var_2.__eq__(tuple_0)
    maybe_2 = module_0.Maybe(var_3, none_type_1)
    var_3.bind(var_2)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    none_type_1 = None
    var_2 = var_0.bind(none_type_1)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_try()
    var_5 = var_0.map(var_0)


def test_case_5():
    int_0 = 988
    float_0 = 3350.0939
    str_0 = "?SPrw~2]Y"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(int_0)
    bool_0 = True
    bool_1 = var_1.__eq__(var_2)
    list_0 = [bool_0, bool_0, bool_0]
    bool_2 = False
    maybe_1 = module_0.Maybe(list_0, bool_2)
    maybe_1.map(var_2)


def test_case_6():
    list_0 = []
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_8():
    int_0 = 2767
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.filter(int_0)


def test_case_9():
    float_0 = 303.564
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(float_0)
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_2 = maybe_0.filter(maybe_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_3 = maybe_0.bind(var_1)
    var_4 = maybe_0.get_or_else(float_0)
    none_type_0 = None
    var_5 = var_3.bind(none_type_0)
    maybe_2 = module_0.Maybe(float_0, none_type_0)
    var_6 = maybe_2.to_either()


def test_case_10():
    bytes_0 = b"\xd0\xf1\xbb\x99\xf5\x80\x9f\xc5\xa7\x07"
    int_0 = -183
    dict_0 = {bytes_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0, dict_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_try()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_1 = maybe_2.to_either()
    var_2 = var_1.map(none_type_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_3.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_13():
    float_0 = -2300.704
    bytes_0 = b"\x99\xc0"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    dict_0 = {bool_0: float_0, float_0: bytes_0}
    maybe_1 = module_0.Maybe(bool_0, dict_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_2.ap(float_0)


def test_case_14():
    int_0 = 3387
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(int_0)
    var_1.to_lazy()


def test_case_15():
    float_0 = -590.9
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bytes_0 = b""
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.to_validation()
    list_0 = []
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_2.to_validation()
    var_1.bind(var_0)


def test_case_16():
    float_0 = -2300.704
    bytes_0 = b"\x99\xc0"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    dict_0 = {bool_0: float_0, float_0: bytes_0}
    maybe_1 = module_0.Maybe(bool_0, dict_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_try()
    var_3.ap(float_0)


def test_case_17():
    complex_0 = -674.561834 - 3236.0612j
    list_0 = [complex_0, complex_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    int_0 = 2811
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.ap(bool_0)
    var_5 = var_4.map(list_0)
    var_3.get_or_else(int_0)


def test_case_18():
    bytes_0 = b"\xd1\xee9\xf9j\x06\x03\xe3p\xe6\x15\xde.\xb9\x88ha"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.get_or_else(bytes_0)
    maybe_0.filter(var_1)
