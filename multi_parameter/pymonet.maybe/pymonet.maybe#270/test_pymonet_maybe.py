# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_3():
    float_0 = -1500.5841
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, dict_0)
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_0.to_box()
    float_1 = 1427.95
    maybe_2 = module_0.Maybe(float_1, float_1)
    var_3 = maybe_2.to_lazy()
    var_2.get_or_else(var_0)


def test_case_4():
    int_0 = -1001
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.map(int_0)


def test_case_5():
    bool_0 = True
    int_0 = -1292
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, int_0)
    var_1 = maybe_1.bind(bool_0)
    var_2 = var_1.to_box()
    none_type_1 = None
    var_3 = var_1.to_try()
    var_4 = maybe_1.filter(var_2)
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_1, bool_1)
    var_5 = var_2.to_lazy()
    var_6 = maybe_2.to_box()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_4 = var_1.to_try()
    maybe_0.bind(var_1)


def test_case_7():
    int_0 = -2038
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.to_validation()
    bool_0 = var_0.__eq__(var_0)
    var_3 = maybe_0.ap(maybe_0)
    var_4 = maybe_0.to_either()
    var_4.to_either()


def test_case_8():
    bytes_0 = b"\xcd\xde\xd1M\x8e"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    maybe_0.ap(bool_1)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(set_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_lazy()


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_1)
    var_0.to_either()


def test_case_12():
    none_type_0 = None
    bytes_0 = b"\xd2F\xa2\xb6S\xf9\x9bq+X\xe3S\xf8L\x03\x063E'\x19"
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()


def test_case_13():
    float_0 = -242.62656
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    str_0 = ""
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(str_0)
    var_3 = var_2.ap(float_0)


def test_case_14():
    str_0 = "4i&!cBrRO7md|9"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(str_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    bool_0 = var_1.__eq__(var_1)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(var_1)
    var_4 = maybe_1.ap(maybe_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_4.to_box()


def test_case_15():
    bytes_0 = b"\xaa\x0f\xba"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, dict_0]
    list_1 = [list_0]
    tuple_0 = (list_1,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, tuple_0)
    var_2 = maybe_0.to_try()


def test_case_16():
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_3 = maybe_1.to_lazy()


def test_case_17():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_try()
    var_1.to_try()


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_0)
    var_3 = var_0.to_try()
    var_3.ap(var_0)


def test_case_19():
    bytes_0 = b"\xa9\xdfK\xa2\xed\xa1\x8c\xe7L\xab,"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    float_0 = 2028.5802741748332
    var_2 = var_1.ap(float_0)
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_box()


def test_case_20():
    str_0 = "4i&!%BrRO7md|9"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(str_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    bool_0 = var_1.__eq__(var_1)
    var_2 = maybe_0.to_lazy()


def test_case_21():
    str_0 = "4i&!cBrRO7md|9"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(str_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    bool_0 = var_1.__eq__(var_1)
    var_2 = var_0.get_or_else(maybe_0)
    var_3 = var_2.map(var_2)
    var_4 = var_1.ap(bool_0)
    var_5 = maybe_1.to_either()
    var_6 = var_4.filter(var_0)
    bool_1 = var_6.__eq__(var_2)
    var_7 = var_1.filter(var_4)
    var_0.to_lazy()


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_1 = maybe_1.get_or_else(maybe_0)
    bool_1 = var_1.__eq__(var_1)
    var_0.bind(var_0)
