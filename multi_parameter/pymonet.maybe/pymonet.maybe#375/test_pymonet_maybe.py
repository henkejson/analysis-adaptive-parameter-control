# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_0.get_or_else(var_1)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.bind(none_type_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    int_0 = 3528
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    var_4 = var_2.to_try()
    bool_3 = maybe_2.__eq__(none_type_0)
    var_5 = maybe_2.to_box()
    maybe_3 = module_0.Maybe(int_0, bool_3)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.ap(var_1)
    var_2.get_or_else(bool_0)


def test_case_5():
    int_0 = -319
    set_0 = {int_0}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(set_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)


def test_case_7():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(int_0)


def test_case_8():
    complex_0 = 74.0608 + 96.044j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    str_0 = "eHvdYv,3.\rGsa!]"
    var_0 = maybe_0.to_box()
    bool_0 = var_0.__eq__(var_0)
    tuple_0 = ()
    var_1 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1.ap(str_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_10():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.ap(maybe_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(int_0)


def test_case_11():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_0.filter(int_0)


def test_case_12():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.filter(generic_0)
    var_1 = var_0.ap(generic_0)
    str_0 = "d1]=_Ff\t4="
    str_1 = ""
    bool_1 = True
    maybe_1 = module_0.Maybe(str_1, bool_1)
    var_2 = maybe_1.get_or_else(str_0)
    var_3 = var_1.to_either()
    var_3.to_either()


def test_case_13():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(int_0)


def test_case_14():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(none_type_0)


def test_case_16():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(int_0)


def test_case_17():
    int_0 = -1707
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    int_0 = 257
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    maybe_1.filter(int_0)


def test_case_19():
    bytes_0 = b"\xb5\x9bV."
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_validation()
    var_2.filter(bool_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    maybe_2 = module_0.Maybe(none_type_0, var_1)
    bool_0 = var_1.__eq__(var_1)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_0.to_validation()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_1, bool_2)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_try()
    bool_4 = var_2.__eq__(var_2)
    float_0 = -1814.0
    var_3 = maybe_1.filter(float_0)
    var_4 = var_3.filter(var_1)
    var_5 = var_4.to_validation()
    maybe_3 = module_0.Maybe(var_1, maybe_0)
    var_0.map(maybe_1)
