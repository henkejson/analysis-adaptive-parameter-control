# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(var_0)
    var_2 = maybe_0.filter(var_0)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)


def test_case_3():
    int_0 = -548
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.bind(int_0)
    var_2 = maybe_0.to_box()
    var_2.get_or_else(int_0)


def test_case_4():
    int_0 = 215
    list_0 = [int_0, int_0]
    int_1 = 42
    tuple_0 = (list_0, int_1)
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(tuple_0, list_0)
    var_0 = maybe_0.map(int_1)
    var_1 = var_0.map(none_type_1)
    var_2 = var_1.bind(none_type_0)
    bool_0 = var_2.__eq__(tuple_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_3 = maybe_1.to_try()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.ap(var_0)
    maybe_1.map(var_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = 645
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"'\xcf\x9c\xac\x820\xe6\x83\xf8\xf9\x1d\x9b\xa5\x88\x1f"
    var_1 = maybe_1.to_lazy()
    bool_1 = False
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_1.map(bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    maybe_2.filter(maybe_1)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    int_0 = 215
    list_0 = [int_0, int_0]
    tuple_0 = (list_0, int_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, list_0)
    var_0 = maybe_0.map(int_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = var_0.filter(none_type_0)
    maybe_1.filter(var_1)


def test_case_10():
    int_0 = 215
    list_0 = [int_0, int_0]
    tuple_0 = (list_0, int_0)
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(tuple_0, list_0)
    var_0 = maybe_0.map(int_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.get_or_else(none_type_1)
    var_3 = var_0.filter(var_2)
    maybe_1.filter(var_2)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_12():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_3.filter(var_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_box()
    var_2.get_or_else(var_3)


def test_case_15():
    float_0 = 548.5421
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_2.to_try()
    maybe_0.bind(float_0)


def test_case_16():
    str_0 = "k:4~:r`{@~>ph\r{"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(none_type_0)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.ap(list_0)
    var_2 = var_0.get_or_else(maybe_0)
    var_3 = var_1.get_or_else(var_1)
    var_4 = var_2.bind(var_3)
    var_5 = var_4.to_lazy()
    var_6 = var_2.bind(var_1)
    var_7 = var_1.get_or_else(var_6)
    var_8 = var_4.to_either()
    bool_1 = var_0.__eq__(bool_0)
    var_9 = var_1.to_either()
    maybe_1 = module_0.Maybe(var_2, var_3)
    var_10 = var_5.to_either()
    var_11 = var_8.to_box()
    var_12 = var_2.to_lazy()
    var_13 = var_11.to_try()
    maybe_2 = module_0.Maybe(var_1, bool_1)
    var_14 = var_3.to_either()


def test_case_19():
    int_0 = 215
    list_0 = [int_0, int_0]
    int_1 = 42
    tuple_0 = (list_0, int_1)
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(tuple_0, list_0)
    var_0 = maybe_0.map(int_1)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.ap(none_type_1)
    var_4 = maybe_0.to_box()
    var_5 = var_1.to_box()
    var_6 = var_2.bind(var_3)
    var_7 = var_6.to_lazy()
    var_8 = var_4.to_validation()
