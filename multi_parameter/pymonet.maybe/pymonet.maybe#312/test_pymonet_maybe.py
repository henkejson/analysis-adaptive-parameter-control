# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"A"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_validation()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(var_0)


def test_case_3():
    int_0 = -1519
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.get_or_else(int_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(int_0)
    var_4.filter(maybe_0)


def test_case_4():
    bytes_0 = b"P\x04"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(bytes_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    var_3 = maybe_0.bind(maybe_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.filter(var_5)
    var_7 = maybe_0.get_or_else(var_6)
    var_5.filter(var_6)


def test_case_5():
    str_0 = "4Gf_,_?$"
    set_0 = {str_0, str_0}
    str_1 = "YeVu8dh.d0(x0"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_1, bool_0)
    list_0 = [maybe_0, str_1, str_1]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.ap(set_0)
    generic_0 = module_1.Generic()
    bool_1 = False
    maybe_2 = module_0.Maybe(generic_0, bool_1)
    maybe_2.map(var_0)


def test_case_6():
    bytes_0 = b"j\x97\x81\xee\xde\xe44"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    str_0 = "o#x\\Lyx"
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.ap(str_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.to_lazy()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(var_0)


def test_case_7():
    int_0 = 2655
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(int_0)


def test_case_8():
    bytes_0 = b"\xeev\x9e\xc7o"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_9():
    int_0 = 2880
    none_type_0 = None
    bool_0 = False
    dict_0 = {int_0: int_0}
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(dict_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    int_0 = -2273
    bytes_0 = b"\x89\x15\xe2\xb4\xf1\xb4@\x90I\xcc\x04\xb60"
    maybe_0 = module_0.Maybe(int_0, bytes_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.get_or_else(none_type_0)


def test_case_11():
    none_type_0 = None
    generic_0 = module_1.Generic()
    list_0 = [generic_0, generic_0, generic_0]
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.bind(none_type_0)


def test_case_12():
    bytes_0 = b"\xeev\x9e\xc7o"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_14():
    bytes_0 = b"\xeev\x9e\xc7o"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    bytes_0 = b"\xdfi"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()


def test_case_16():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.ap(bool_0)
    var_3 = var_2.map(var_0)
    var_4 = var_3.bind(bool_0)
    var_4.get_or_else(bool_0)


def test_case_18():
    bytes_0 = b"\xeev\x9e\xc7o"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    maybe_1 = module_0.Maybe(set_0, bytes_0)
    var_1 = maybe_1.to_validation()
    var_1.map(var_0)


def test_case_21():
    object_0 = module_2.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    float_0 = -1704.478
    maybe_1 = module_0.Maybe(bool_0, float_0)
    var_1 = maybe_1.bind(var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_2.to_lazy()
    bool_2 = False
    var_3 = var_2.to_either()
    var_3.filter(bool_2)


def test_case_23():
    bytes_0 = b"\x97\xce\x07;"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.filter(bytes_0)


def test_case_24():
    bytes_0 = b"j\x97\x81\xee\xde\xe44"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(var_2)
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    str_0 = "o#x\\Lyx"
    var_4 = maybe_2.to_validation()
    bool_3 = maybe_0.__eq__(str_0)
    var_5 = var_3.to_validation()
    maybe_2.bind(var_5)


def test_case_25():
    bytes_0 = b"j\x97\x81\xee\xde\xe44"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = True
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, var_2)
    bool_3 = var_0.__eq__(maybe_1)
    var_3 = var_2.to_box()
    var_4 = var_0.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    var_5 = maybe_2.to_validation()
    var_6 = var_5.to_box()
    var_7 = var_3.to_validation()
    var_8 = maybe_2.ap(var_7)
    var_9 = maybe_2.bind(var_7)
    var_10 = maybe_2.map(var_7)
    var_11 = var_9.to_try()
    bool_4 = maybe_2.__eq__(bool_0)
    var_12 = maybe_2.filter(bool_4)
    var_13 = var_12.to_lazy()
    var_14 = maybe_2.to_validation()
    var_15 = var_8.filter(var_2)
    var_16 = var_9.to_box()
    var_17 = maybe_2.to_lazy()
    var_18 = var_12.to_lazy()
    none_type_0 = None
    bool_5 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_5)
    maybe_3.filter(var_5)
