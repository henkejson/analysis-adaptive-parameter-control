# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"u\xfc\xe7.\x90\x8c\x1fd\xa7{Dk\xea\x1a\xb7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "#!uY]&y.r\n\x0cF"
    float_0 = 1641.3
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(str_0)
    var_2 = maybe_0.ap(var_1)
    maybe_1 = module_0.Maybe(str_0, var_2)
    var_3 = maybe_0.to_try()
    var_4 = var_0.to_lazy()
    var_3.to_box()


def test_case_3():
    none_type_0 = None
    bytes_0 = b"C@s]\x1b"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.get_or_else(none_type_0)
    var_0.ap(var_0)


def test_case_4():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    dict_0 = {}
    var_0 = maybe_0.map(dict_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_1 = maybe_1.get_or_else(list_0)
    var_1.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    maybe_0.map(var_1)


def test_case_6():
    bytes_0 = b"\x00*\xd8\xdc\xb1\xc3\xdd\x02!\x9f\xd1\xfc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    object_0 = module_1.object()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    maybe_1.filter(var_1)


def test_case_7():
    bytes_0 = b"m:\xf8"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    maybe_1.bind(maybe_1)


def test_case_8():
    bytes_0 = b"\x00*\xd8\xdc\xb1\xc3\xdd\x02!\x9f\xd1\xfc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    none_type_0 = None
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.ap(none_type_0)
    var_3 = maybe_0.to_try()
    var_3.to_box()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b"\x00*\xd8\xdc\xb1\xc3\xdd\x02!\x9f\xd1\xfc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_12():
    bytes_0 = b"\xcb\x15R\x89\xae\xfdm\x8aL\xfb\x8a\x1a\x94\xd3\xb8H\xe1\xfc"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_1.filter(var_1)


def test_case_13():
    generic_0 = module_2.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_box()
    var_0.get_or_else(maybe_0)


def test_case_14():
    bytes_0 = b"\x00*\xd8\xdc\xb1\xc3\xdd\x02!\x9f\xd1\xfc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    object_0 = module_1.object()
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(var_0)


def test_case_15():
    bytes_0 = b"\x00*\xd8\xdc\xb1\xc3\xdd\x02!\x9f\xd1\xfc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_try()
    object_0 = module_1.object()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_3, bool_0)
    maybe_1.filter(var_2)


def test_case_16():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.to_try()
    maybe_0.map(var_1)


def test_case_17():
    str_0 = "~*1@/kKRT"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    none_type_0 = None
    var_3 = maybe_0.to_either()
    var_4 = var_0.bind(none_type_0)
    var_5 = var_4.ap(maybe_0)
    var_6 = var_3.ap(var_1)
    var_7 = var_6.to_try()
    var_8 = var_0.to_box()
    var_9 = var_0.to_either()


def test_case_18():
    str_0 = "#!uY]&y.r\n\x0cF"
    float_0 = 1641.3
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(str_0)
    var_2 = maybe_0.ap(var_1)
    maybe_1 = module_0.Maybe(str_0, var_2)
    var_3 = maybe_0.to_try()
    var_4 = var_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_1)
    var_3.to_box()


def test_case_19():
    str_0 = "{H1@/kKRT"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_20():
    int_0 = -524
    float_0 = 1641.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    int_1 = -156
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_validation()
    bool_3 = var_0.__eq__(int_0)
    maybe_2 = module_0.Maybe(int_1, bool_1)
    var_1 = maybe_2.to_validation()
    var_2 = var_1.to_try()
    maybe_2.bind(maybe_2)
