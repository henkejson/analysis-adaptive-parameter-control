# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    complex_0 = 1014.52887 + 3793.6j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xe4$\xbf\xd7'\x84X\xd5\xd5\x98K7dv9"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(none_type_0)
    bool_2 = False
    var_3 = maybe_0.get_or_else(bool_2)
    var_0.to_validation()


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_4():
    int_0 = -2369
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(int_0)
    var_1 = maybe_0.to_lazy()
    bool_3 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    var_2 = maybe_1.filter(bool_0)
    var_3 = maybe_1.filter(maybe_1)
    var_4 = var_3.map(var_1)
    var_5 = var_3.ap(int_0)
    maybe_0.filter(bool_0)


def test_case_5():
    complex_0 = 1267.124836 - 3148.74786j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(complex_0)
    maybe_0.map(bool_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\x0fZ\xd0\xf8z\xd9\xcc\x03\xfa\xd4\xde,\xd4\x89{\x80X+"
    tuple_0 = (bytes_0,)
    tuple_1 = (bytes_0, tuple_0)
    int_0 = 1669
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(tuple_1)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_7():
    int_0 = -2369
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = var_0.__eq__(bool_1)
    bool_3 = maybe_0.__eq__(int_0)
    var_1 = maybe_0.to_lazy()
    bool_4 = True
    maybe_1 = module_0.Maybe(var_1, bool_4)
    var_2 = maybe_1.filter(bool_0)
    bool_5 = True
    maybe_2 = module_0.Maybe(bool_0, bool_5)
    var_3 = maybe_2.filter(maybe_0)
    maybe_0.bind(maybe_2)


def test_case_8():
    bytes_0 = b"\xdd\x88"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.ap(bool_1)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_2 = maybe_0.filter(bool_2)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()


def test_case_9():
    int_0 = -2369
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    maybe_0.ap(var_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\xeb\x8ed1\xcb\xbaE\x97"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = True
    float_0 = 778.54
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_3 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_16():
    none_type_0 = None
    bytes_0 = b"\x0fZ\xd0\xf8z\xd9\xcc\x03\xfa\xd4\xde,\xd4\x89{\x80X+"
    tuple_0 = (bytes_0,)
    tuple_1 = (bytes_0, tuple_0)
    int_0 = 1669
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(tuple_1)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_1.to_lazy()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.get_or_else(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.to_validation()
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_20():
    int_0 = -2369
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_21():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(set_0)
    var_4 = var_0.to_either()


def test_case_22():
    int_0 = -2369
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(int_0)
    var_1 = maybe_0.to_lazy()
    bool_3 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    var_2 = maybe_1.filter(bool_0)
    var_3 = var_2.bind(int_0)
    var_4 = var_1.to_validation()
    var_4.filter(bool_0)


def test_case_23():
    bytes_0 = b"\xdd\x88"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.ap(bool_1)
    bool_2 = True
    var_2 = maybe_0.filter(bool_2)
    var_3 = maybe_0.ap(bool_1)
    var_4 = var_3.ap(bytes_0)
    var_5 = var_4.to_lazy()
