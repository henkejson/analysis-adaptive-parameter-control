# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    int_0 = 3427
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"J\xea\x01\x8b\xa8\x1c)\x8a\xcfzCr\x0ew\xd8?\x15?\xf0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\x8d\xe6\xab\xde"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(none_type_0)
    float_0 = -1385.2516
    bool_1 = maybe_0.__eq__(float_0)


def test_case_4():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.map(object_0)
    bool_1 = var_0.__eq__(object_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_0.to_try()


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [bool_0, bool_0, dict_0, bool_0]
    tuple_0 = (dict_0, list_0)
    tuple_1 = (tuple_0,)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.bind(var_0)
    var_0.map(var_0)


def test_case_7():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bytes_0 = b"\x08U\xb5H/\xb3\x19w\xbf0\xacBt\xfe\xefH\x9d"
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.bind(bytes_0)


def test_case_8():
    bytes_0 = b"\xb7?-\xd5\xda\xeb\x1d9\x9c\xbe\xae*h9@4CB\x87"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = dict_0.__eq__(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(dict_0, maybe_0)
    var_0 = maybe_1.ap(none_type_0)


def test_case_9():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    int_0 = 380
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)


def test_case_11():
    int_0 = 380
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    maybe_1.filter(int_0)


def test_case_12():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_2, bool_2)
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    bool_3 = maybe_1.__eq__(bool_1)
    var_0 = module_0.Maybe(bool_2, bool_3)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = var_0.get_or_else(bool_1)
    var_4 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(maybe_0, maybe_1)
    bool_4 = maybe_1.__eq__(bool_0)
    var_3.map(bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_1.get_or_else(var_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_17():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(object_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(var_0)


def test_case_18():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_20():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_0.to_either()
    var_0.get_or_else(bool_0)


def test_case_21():
    generic_0 = module_2.Generic()
    int_0 = 716
    set_0 = {generic_0, int_0, int_0, generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    var_2 = maybe_1.map(var_1)
    var_3 = var_2.get_or_else(set_0)
    var_3.to_box()


def test_case_22():
    bytes_0 = b"J\xea\x01\x8b\xa8\x1c)\x8a\xcfzCr\x0ew\xd8?\x15?\xf0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.bind(var_0)
    var_4 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_5 = maybe_0.map(var_0)
    var_6 = maybe_0.to_either()
    var_7 = var_6.to_try()
    var_8 = var_0.map(var_0)
    var_9 = var_7.bind(var_6)
    var_10 = maybe_1.to_try()
    var_11 = maybe_0.filter(var_6)
    var_12 = maybe_0.bind(var_6)
    var_13 = var_11.bind(var_6)
    var_14 = maybe_1.map(var_6)
    maybe_2 = var_11.ap(var_7)
    var_15 = var_8.to_box()
    bool_1 = var_0.__eq__(maybe_1)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(bool_0)
