# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "-EY@fnRPP+M0;rzbf3G"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    int_0 = 1667
    bytes_0 = b"\xd4>6u\xda\x17~H\x8f\x0f_l\xe6\xd6\x1d\xbex["
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = var_0.__eq__(bytes_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_box()
    var_4 = var_2.map(int_0)
    var_5 = var_4.to_try()
    var_5.to_either()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_5():
    bool_0 = False
    bytes_0 = b"\x1c9"
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_box()
    maybe_1.map(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = var_1.bind(var_1)
    var_3 = var_2.filter(none_type_0)
    var_4 = var_2.to_either()


def test_case_7():
    str_0 = "UPGOmo5?\r?b"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    int_0 = 209
    set_0 = {int_0, int_0, int_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(set_0, none_type_0)
    maybe_1.bind(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    bool_0.to_either()


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_10():
    bool_0 = False
    bool_1 = True
    bool_2 = True
    list_0 = [bool_2]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.ap(bool_0)


def test_case_11():
    generic_0 = module_1.Generic()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_2.to_validation()
    maybe_3 = module_0.Maybe(maybe_1, maybe_2)
    var_4 = maybe_3.bind(generic_0)
    var_5 = maybe_2.get_or_else(bool_0)
    var_6 = maybe_2.to_try()
    var_5.to_lazy()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(none_type_0)
    var_1 = maybe_0.to_try()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_either()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = var_2.to_try()
    var_4 = maybe_1.filter(bool_1)
    var_5 = maybe_1.ap(var_2)
    bool_2 = var_4.__eq__(var_4)
    var_6 = var_5.to_lazy()
    var_7 = var_4.get_or_else(var_2)
    var_8 = var_2.map(var_2)
    var_9 = var_7.to_validation()
    bool_3 = var_9.__eq__(var_9)
    bool_4 = False
    maybe_2 = module_0.Maybe(var_5, bool_4)
    maybe_2.filter(bool_4)


def test_case_15():
    str_0 = ";zrF\t^N\r20.e9)V;zK}"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    generic_0 = module_1.Generic()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.ap(bool_0)
    var_1.to_lazy()


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_18():
    none_type_0 = None
    none_type_0.ap(none_type_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.bind(bool_0)
    bool_1 = var_0.__eq__(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    maybe_1.filter(bool_2)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(maybe_0)
    var_3 = var_2.ap(maybe_0)
    var_4 = var_1.filter(var_3)
    bool_1 = var_3.__eq__(bool_0)
    var_5 = var_1.to_lazy()
    var_6 = var_3.to_box()
    var_7 = var_1.get_or_else(var_4)
    bool_2 = var_1.__eq__(var_7)
    bool_3 = var_7.__eq__(var_2)
    maybe_1 = module_0.Maybe(var_5, var_6)
    var_8 = maybe_1.map(bool_1)
    bool_4 = False
    maybe_2 = module_0.Maybe(var_8, bool_4)
    var_9 = var_8.to_either()
    var_10 = var_9.to_lazy()
    var_11 = maybe_2.ap(var_0)
    var_12 = var_11.filter(var_10)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.filter(bool_0)
    bool_1 = True
    bool_2 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.ap(bool_1)
    bool_3 = var_2.__eq__(var_2)
    var_4 = maybe_0.to_lazy()
    set_0 = {bool_0}
    var_5 = maybe_0.to_validation()
    var_6 = var_2.get_or_else(var_5)
    bool_4 = var_6.__eq__(var_0)
    none_type_0 = None
    bool_5 = var_5.__eq__(none_type_0)
    var_7 = var_0.map(var_0)
    maybe_1 = module_0.Maybe(set_0, var_6)
    var_8 = maybe_1.to_validation()
    var_9 = var_1.map(var_8)
    var_10 = var_1.bind(var_5)
    var_11 = var_10.to_lazy()
    bool_6 = maybe_1.__eq__(var_2)
    var_12 = var_0.to_validation()
    var_13 = var_12.to_lazy()
    var_14 = var_4.to_either()
    var_15 = var_3.to_either()
    bool_7 = var_10.__eq__(bool_4)
    var_16 = var_3.to_validation()
    var_17 = maybe_1.ap(none_type_0)
    var_18 = maybe_1.to_try()
