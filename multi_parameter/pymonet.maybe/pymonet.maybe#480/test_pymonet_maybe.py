# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    generic_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    str_0 = "$\nU\tf?Y|{r\\}4"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(str_0)
    var_2 = var_1.get_or_else(str_0)
    bool_1 = var_1.__eq__(str_0)
    var_3 = maybe_0.to_try()
    var_4 = var_0.ap(bool_0)
    var_5 = maybe_0.bind(var_2)
    var_6 = maybe_0.to_either()
    var_7 = var_1.to_box()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_5, bool_2)
    maybe_1.filter(var_6)


def test_case_3():
    str_0 = "$\nU\tf?Y|{r\\}4"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(str_0)
    var_2 = var_1.get_or_else(str_0)
    var_3 = var_0.ap(bool_0)
    var_4 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_4, bool_1)
    maybe_1.filter(var_4)


def test_case_4():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_1 = maybe_1.to_lazy()
    maybe_1.map(none_type_0)


def test_case_5():
    bytes_0 = b"\x1d\xac"
    float_0 = 4190.1
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.bind(bytes_0)
    var_3 = var_1.to_try()
    var_4 = maybe_0.get_or_else(float_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    int_0 = -1418
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_0.ap(int_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_1 = False
    var_2 = var_1.to_try()
    var_3 = var_1.filter(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = -3957
    list_0 = [int_0, int_0, int_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_validation()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    str_0 = "\n    Task are data-type for handle execution of functions (in lazy way)\n    transform results of this function and handle errors.\n    "
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.filter(str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0]
    maybe_2 = module_0.Maybe(list_1, list_1)
    var_2 = var_1.to_validation()
    var_3 = maybe_2.to_lazy()
    var_4 = var_1.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_3.to_try()
    var_6.to_validation()


def test_case_13():
    str_0 = "$\nU\tf?Y|{r\\}4"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(str_0)
    var_2 = var_1.get_or_else(str_0)
    var_3 = var_0.ap(bool_0)
    var_4 = maybe_0.bind(var_2)
    var_5 = maybe_0.to_either()
    var_6 = var_1.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_4, bool_1)
    maybe_1.filter(var_5)


def test_case_14():
    str_0 = "ImmutableList{}"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(maybe_1)


def test_case_15():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_try()
    var_1.to_box()


def test_case_17():
    str_0 = " Z`N\x0b$u"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()
    var_2.to_validation()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.to_try()
    var_3 = var_1.filter(var_0)
    bool_1 = var_1.__eq__(var_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_1 = False
    var_2 = var_1.to_try()
    var_3 = var_1.filter(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(var_1)


def test_case_20():
    str_0 = "$\nU\tf?Y|{r\\}4"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(str_0, bool_0)
    var_3 = maybe_2.to_validation()
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.bind(var_4)
    var_6 = maybe_2.to_either()
    var_7 = maybe_2.filter(var_4)
    var_8 = maybe_2.map(str_0)
    var_9 = var_8.get_or_else(str_0)
    bool_1 = var_8.__eq__(str_0)
    var_10 = var_6.to_try()
    var_11 = var_7.ap(bool_0)
    var_12 = var_2.to_validation()
    var_13 = var_12.to_box()
    var_14 = maybe_1.ap(var_8)
    var_15 = var_13.to_lazy()
    var_16 = maybe_2.to_either()
    var_17 = var_14.to_either()
    var_18 = var_7.to_validation()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1.to_validation()
