# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_0.filter(bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_1.filter(bool_0)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    int_0 = -113
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(int_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.get_or_else(var_0)
    var_2 = var_0.to_try()
    var_1.ap(bool_1)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.filter(bool_0)
    maybe_1.filter(bool_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    var_5 = maybe_0.map(var_3)
    var_6 = var_2.bind(var_1)
    var_3.filter(var_1)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\x91\xf1iX_q\xa5Q\xf9J"
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    maybe_1.bind(bytes_0)


def test_case_8():
    bytes_0 = b"\x11JLh\x99\x91\x05\xdb\xd1A\x93\t"
    int_0 = -166
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_either()
    bool_0 = var_1.__eq__(bytes_0)


def test_case_9():
    int_0 = 2554
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_0.filter(bool_0)
    maybe_1.filter(bool_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_12():
    float_0 = -1357.266268
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, float_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(var_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_box()
    var_3 = var_0.filter(bool_0)
    maybe_1.filter(bool_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    str_0 = "$G7\x0c!X8}h; >Tnp3\n5"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    var_5 = var_2.to_validation()
    var_6 = var_2.map(var_5)
    var_7 = var_3.bind(var_3)
    var_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bytes_0 = b"\xed\x16"
    complex_0 = -2053 - 2642j
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, var_3)
    var_4 = var_1.to_lazy()
    var_5 = maybe_1.get_or_else(var_2)
    bool_2 = var_3.__eq__(bool_0)
    bool_3 = maybe_1.__eq__(maybe_1)
    bool_4 = False
    maybe_3 = module_0.Maybe(complex_0, bool_4)
    var_6 = maybe_3.to_lazy()
    var_7 = var_6.to_box()
    bool_5 = var_7.to_try()
    var_7.map(bytes_0)


def test_case_22():
    bytes_0 = b"\t\x81\x8aG\xbc\xa6`\x15"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_0.to_validation()
    bool_1 = var_1.__eq__(maybe_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_try()
    none_type_0 = None
    bool_2 = var_1.__eq__(var_3)
    var_5 = var_4.filter(var_1)
    var_6 = var_3.bind(none_type_0)
    bool_3 = var_4.__eq__(var_1)
    var_7 = var_4.bind(var_4)
    var_8 = maybe_0.to_try()


def test_case_23():
    bytes_0 = b"\xed\xfd\xc1Z\xa67\xd1=\x06\xb1\x87La\x0b\xb9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_2.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_5 = var_3.filter(var_2)
    var_6 = maybe_0.filter(var_0)
    var_7 = var_3.get_or_else(maybe_0)
    var_8 = maybe_1.map(var_0)
    var_9 = maybe_0.ap(var_4)
    var_10 = var_5.map(var_0)
    bool_0 = maybe_0.__eq__(var_6)
    var_11 = var_0.bind(var_1)
    var_12 = var_6.filter(var_4)
    var_13 = var_8.to_box()
    var_1.ap(var_8)
