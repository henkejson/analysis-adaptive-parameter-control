# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = -247
    maybe_0.map(int_0)


def test_case_3():
    complex_0 = 4230.1164 + 370.7985j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(complex_0)


def test_case_4():
    str_0 = "Y\t2K]h&X6=A"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(var_1)
    var_1.to_try()


def test_case_5():
    bytes_0 = b"Sy\xbe\xf6\xb2s\xb0"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    bool_2 = False
    bytes_1 = b"\xab\xb5\x08\xa7gD\x04U\xdeo\xc3V\x07%F[,\x1e\xc5\x87"
    maybe_1 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_1.bind(bool_2)
    var_1 = var_0.filter(bool_1)
    var_2 = var_1.to_lazy()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    float_0 = 347.3937
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_5 = var_1.to_lazy()


def test_case_8():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(dict_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(none_type_0)


def test_case_11():
    str_0 = "\tbS7QAdNYG6AP["
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_1.to_box()
    var_4 = var_2.to_try()
    var_5 = var_2.get_or_else(var_1)
    var_6 = maybe_0.bind(var_2)
    var_1.to_either()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_1.get_or_else(none_type_0)
    var_4 = maybe_0.to_either()
    maybe_1.filter(var_2)


def test_case_13():
    complex_0 = 4230.1164 + 370.7985j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = var_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    float_0 = -1408.9339
    bool_0 = False
    set_0 = {float_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    float_0 = -3156.4
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    int_0 = -549
    dict_0 = {int_0: int_0}
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(dict_0)


def test_case_19():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_validation()
    var_3 = var_0.to_try()
    var_1.get_or_else(none_type_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(bool_1)


def test_case_21():
    float_0 = 347.3937
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_lazy()
    maybe_1 = var_4.to_box()
    var_5 = module_2.Generic()
    var_3.filter(bool_1)


def test_case_22():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.get_or_else(maybe_1)
    var_2 = var_1.get_or_else(var_1)
    var_3 = var_2.ap(var_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    maybe_3 = module_0.Maybe(bool_1, maybe_2)
    var_4 = var_1.to_box()
    var_5 = maybe_1.filter(none_type_0)
    var_6 = var_3.map(bool_1)
    bool_2 = maybe_1.__eq__(maybe_2)
    generic_0 = module_2.Generic()
    var_7 = maybe_1.to_either()
    var_8 = var_2.to_try()
    var_9 = var_2.to_lazy()
    bool_3 = True
    maybe_4 = module_0.Maybe(var_6, bool_3)
    maybe_2.filter(var_4)
