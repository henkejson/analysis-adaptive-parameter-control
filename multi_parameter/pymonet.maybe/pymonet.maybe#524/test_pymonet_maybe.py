# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    complex_0 = 2035.383 + 3538j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(complex_0)
    none_type_0 = None
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_either()
    var_4 = var_3.to_box()
    var_5 = var_2.to_lazy()
    var_6 = var_2.to_try()
    var_7 = maybe_0.filter(none_type_0)
    bool_0 = var_7.__eq__(var_1)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_8 = var_7.to_either()
    var_9 = var_1.to_validation()
    var_10 = maybe_0.filter(maybe_0)
    var_11 = var_1.to_try()
    bool_2 = var_2.__eq__(none_type_0)
    var_12 = var_7.to_box()
    var_2.get_or_else(bool_1)


def test_case_3():
    int_0 = 120
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = var_0.ap(var_0)
    none_type_0 = None
    bool_0 = var_1.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(var_0, maybe_1)
    var_2 = maybe_1.filter(bool_0)
    maybe_3 = module_0.Maybe(var_0, bool_0)
    maybe_3.filter(var_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    bool_1 = var_2.__eq__(bool_0)


def test_case_5():
    int_0 = 133
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(int_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.bind(var_0)
    var_3 = var_2.bind(var_1)
    var_4 = var_3.to_either()
    var_5 = var_0.ap(var_1)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_6 = maybe_1.map(var_3)
    var_1.to_box()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = True
    int_0 = 120
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.filter(int_0)
    var_3 = maybe_0.to_either()
    var_4 = var_0.to_either()
    var_5 = var_0.filter(var_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    bool_1 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.to_either()
    bool_2 = var_0.__eq__(maybe_1)
    var_1 = var_0.to_try()
    maybe_1.filter(bool_1)


def test_case_11():
    int_0 = 0
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_lazy()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_lazy()


def test_case_13():
    float_0 = -1203.851
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_0.map(float_0)


def test_case_14():
    int_0 = -94
    bytes_0 = b"\x9e\xec\xba\xba\x0cZ"
    list_0 = [bytes_0, bytes_0]
    dict_0 = {int_0: int_0, int_0: int_0, int_0: list_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_1.get_or_else(maybe_1)


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_lazy()
    var_4.get_or_else(tuple_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_17():
    float_0 = -1301.49191
    list_0 = [float_0, float_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, list_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    bytes_0 = b"\xf6\x8e\x83\xa4\x98U"
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.ap(var_2)
    var_4 = maybe_1.to_validation()
    var_4.get_or_else(bytes_0)


def test_case_18():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_try()
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = 120
    var_5 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_6 = maybe_1.get_or_else(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_19():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_try()
    var_3 = var_0.to_lazy()
    var_4 = var_2.filter(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = 120
    var_5 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_6 = maybe_1.get_or_else(maybe_0)
    var_7 = maybe_0.ap(maybe_0)
    maybe_2 = module_0.Maybe(bool_1, var_5)
    generic_0 = module_2.Generic()
    maybe_3 = module_0.Maybe(var_5, generic_0)
    var_8 = var_6.ap(bool_0)
    var_9 = var_6.filter(int_0)
    var_10 = maybe_1.to_either()
    none_type_0 = None
    bool_2 = var_8.__eq__(none_type_0)
    var_11 = maybe_0.get_or_else(var_9)
    maybe_4 = module_0.Maybe(var_7, var_11)
    var_12 = var_6.to_either()
    var_13 = var_6.filter(var_12)
    bool_3 = var_13.__eq__(maybe_3)
    var_14 = var_11.filter(var_1)
    var_15 = var_14.to_box()
    var_16 = var_10.to_box()
    var_17 = var_11.map(var_6)
    var_18 = maybe_3.to_try()
    var_2.to_lazy()


def test_case_20():
    str_0 = "27H[DC6$k,<5!V"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(str_0)
