# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"*\x1a{\x02\xfe\x1e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_lazy()
    bool_2 = var_1.__eq__(maybe_0)
    var_4 = var_1.bind(var_0)
    var_5 = var_3.to_try()
    maybe_1.filter(var_4)


def test_case_3():
    int_0 = 1075
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(maybe_0)
    bool_1 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_2 = module_0.Maybe(maybe_1, maybe_0)
    var_3 = maybe_2.map(var_0)
    none_type_0 = None
    var_4 = maybe_2.map(none_type_0)
    var_5 = maybe_2.bind(none_type_0)
    maybe_3 = module_0.Maybe(none_type_0, bool_0)
    var_6 = var_1.get_or_else(var_1)
    var_7 = var_6.to_validation()
    var_8 = var_4.map(var_4)
    var_9 = maybe_2.bind(var_5)
    var_10 = maybe_2.to_either()


def test_case_4():
    float_0 = 4243.173918
    maybe_0 = module_0.Maybe(float_0, float_0)
    bytes_0 = b"\x7f\xc9\x07\xd4\xcf\xa7\xa5!\xf6\xf54[\x16\xad\xb9"
    list_0 = []
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    int_0 = -2129
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(list_0, int_0)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.map(var_2)
    var_4 = maybe_1.ap(bytes_0)
    var_5 = var_4.map(bytes_0)
    var_6 = var_4.to_either()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.bind(var_0)
    var_5 = var_3.to_try()
    maybe_1.filter(var_4)


def test_case_7():
    none_type_0 = None
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_1.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    float_0 = 2764.281843
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.ap(float_0)
    var_3 = var_2.to_either()
    bool_0 = False
    var_4 = var_2.filter(var_1)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_5 = maybe_0.filter(maybe_0)
    var_3.filter(maybe_0)


def test_case_9():
    complex_0 = -2108.5492 - 152.69j
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_0.ap(complex_0)


def test_case_10():
    float_0 = 4121.59
    set_0 = {float_0}
    list_0 = []
    bytes_0 = b"\xc7^\x04\x18\xc2Gw\xe6\x82Ob"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_4 = var_3.get_or_else(set_0)


def test_case_11():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_12():
    tuple_0 = ()
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    maybe_0 = module_0.Maybe(generic_0, list_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.get_or_else(tuple_0)
    var_1.to_box()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"i\xeb\x03\xfc\x15\xd8ENR\xa2\n-\x8b"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.map(none_type_0)


def test_case_14():
    bytes_0 = b"\xa7\xc8\xa2\xba\x9f\xbb&\x99t\x9e\x18\xb1\xe2\\\xc9\xfa\x14"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_15():
    int_0 = 2823
    str_0 = "\x0b8%>Jko'wu%;"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(int_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = var_0.get_or_else(var_1)
    var_3 = var_1.to_try()
    var_3.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\xb5j\xb2\xe0\xfb\xb5R\xc2\xbc7\x85"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bytes_0)
    var_1.get_or_else(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_0.filter(var_1)


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_1.to_validation()


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    str_0 = ""
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    maybe_2 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_1.get_or_else(none_type_1)
    bool_0 = True
    maybe_3 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_3.filter(maybe_1)
    var_2 = maybe_3.ap(none_type_0)
    maybe_4 = module_0.Maybe(var_2, var_2)
    bool_1 = maybe_1.__eq__(bool_0)
    bool_2 = var_0.__eq__(maybe_3)
    var_3 = maybe_2.to_lazy()
    var_4 = var_2.to_box()
    var_5 = maybe_3.get_or_else(var_0)
    bool_3 = False
    maybe_5 = module_0.Maybe(maybe_0, bool_3)
    bool_4 = maybe_0.__eq__(maybe_5)


def test_case_22():
    str_0 = "_kx#74Z}CdE"
    str_1 = "Ez"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_1, bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    list_0 = [str_1]
    maybe_2 = module_0.Maybe(list_0, str_1)
    var_0 = maybe_2.ap(str_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    none_type_0 = None
    var_1 = var_0.to_validation()
    var_2 = maybe_2.bind(var_0)
    var_3 = var_0.to_lazy()
    var_4 = maybe_2.get_or_else(str_0)
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = maybe_3.to_validation()
    var_6 = maybe_3.to_either()
    var_6.to_either()
