# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    complex_0 = -117.701 + 1048.8725j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    object_0 = module_1.object()
    set_0 = set()
    str_0 = "+a"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(set_0)
    bool_1 = var_1.__eq__(object_0)


def test_case_3():
    bytes_0 = b"\x17\x14\xd6q%,\xda\x0f$>\x83k\xe6d\x97c\xd2\xe5\xc2\xc2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.ap(bytes_0)
    none_type_0 = None
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.bind(var_2)
    var_4 = maybe_0.ap(none_type_0)
    var_5 = var_4.filter(var_4)
    var_6 = var_4.ap(var_2)
    var_7 = var_1.map(var_1)
    var_8 = var_5.to_try()
    bool_0 = True
    var_9 = var_2.to_box()
    var_10 = maybe_0.map(bool_0)


def test_case_4():
    int_0 = 167
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.map(int_0)


def test_case_5():
    float_0 = -4673.882417
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.ap(maybe_0)


def test_case_6():
    int_0 = 1001
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(int_0)


def test_case_7():
    object_0 = module_1.object()
    set_0 = set()
    str_0 = "+a"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(set_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_0.filter(var_1)


def test_case_9():
    int_0 = 1232
    none_type_0 = None
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, tuple_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_1.get_or_else(var_0)
    var_2 = maybe_1.to_validation()
    var_2.ap(int_0)


def test_case_10():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_either()
    var_2.to_lazy()


def test_case_11():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    float_0 = 1565.101469
    bytes_0 = b"4\x12a\xc1\xf1"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.filter(float_0)
    var_4 = var_3.to_validation()
    var_5 = var_4.to_either()
    bool_2 = var_5.__eq__(var_2)


def test_case_12():
    bool_0 = False
    bytes_0 = b".p\xb1\xd4\xb6\xd3r\x13\xb8"
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.map(bool_0)


def test_case_13():
    float_0 = 2392.0
    set_0 = {float_0, float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.to_lazy()


def test_case_14():
    object_0 = module_1.object()
    str_0 = "+a"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0.to_try()


def test_case_15():
    float_0 = 2392.0
    set_0 = {float_0, float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.bind(set_0)


def test_case_16():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    bool_1 = False
    var_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_3 = maybe_1.map(var_0)
    var_4 = maybe_0.to_box()
    var_5 = var_4.to_lazy()
    bool_2 = True
    bool_3 = maybe_1.__eq__(bool_2)
    maybe_2 = module_0.Maybe(var_3, bool_1)
    bool_4 = maybe_1.__eq__(var_3)
    var_6 = var_0.to_either()
    bool_5 = maybe_2.__eq__(bool_1)
    var_4.filter(bool_5)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_box()
    var_4 = maybe_1.to_either()
    var_5 = var_4.to_lazy()
    maybe_1.bind(var_4)
