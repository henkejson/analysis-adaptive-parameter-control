# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    int_0 = 1528
    bool_1 = True
    maybe_2 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_2.__eq__(maybe_1)
    var_0 = maybe_0.get_or_else(maybe_1)
    var_1 = maybe_0.to_try()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)


def test_case_4():
    int_0 = -72
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_0.bind(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.ap(none_type_0)
    bool_2 = False
    var_3 = var_0.filter(var_0)
    none_type_1 = None
    var_4 = var_0.filter(none_type_1)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.map(var_5)
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_7 = var_4.to_try()
    var_8 = maybe_0.bind(var_7)
    maybe_2 = module_0.Maybe(bool_2, none_type_1)
    var_9 = maybe_2.to_box()
    var_10 = var_2.get_or_else(maybe_1)
    var_11 = var_10.to_try()
    bool_3 = maybe_2.__eq__(var_7)
    var_12 = var_0.bind(var_7)
    var_13 = var_9.to_either()
    maybe_1.map(var_12)


def test_case_6():
    complex_0 = -226 + 2652.3204j
    set_0 = {complex_0, complex_0, complex_0}
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = var_0.map(set_0)
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_validation()
    var_5 = var_3.map(var_4)
    var_6 = var_3.to_try()
    var_7 = var_3.to_box()
    var_8 = var_7.to_lazy()
    maybe_2 = module_0.Maybe(maybe_1, var_8)
    var_9 = var_8.to_either()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(var_0)


def test_case_8():
    bytes_0 = b"\xc1(\xf4\x93\xd0rT"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = maybe_1.ap(var_2)
    maybe_2 = module_0.Maybe(bool_0, bytes_0)
    var_4 = maybe_1.filter(var_2)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    bool_2 = var_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.ap(none_type_0)
    bool_3 = False
    var_3 = var_0.filter(var_0)
    none_type_1 = None
    var_4 = var_0.filter(none_type_1)
    maybe_1 = module_0.Maybe(bool_3, none_type_1)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.map(maybe_1)
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    maybe_3 = module_0.Maybe(none_type_1, none_type_0)
    var_7 = maybe_0.bind(maybe_3)
    maybe_4 = module_0.Maybe(bool_3, none_type_1)
    maybe_5 = module_0.Maybe(var_7, maybe_0)
    var_8 = maybe_4.to_box()
    maybe_6 = module_0.Maybe(bool_0, bool_0)
    var_9 = maybe_2.ap(var_0)
    bool_4 = maybe_0.__eq__(var_7)
    maybe_4.bind(var_8)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = False
    none_type_0 = None
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_2 = module_0.Maybe(bool_2, none_type_0)
    maybe_2.filter(none_type_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    int_0 = 1528
    bool_1 = True
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.get_or_else(maybe_1)
    maybe_0.filter(var_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    bool_2 = maybe_1.__eq__(bool_0)
    var_1 = maybe_0.to_lazy()
    bool_3 = var_1.__eq__(bool_0)
    bool_4 = False
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_try()
    var_4 = maybe_0.get_or_else(bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_4)
    var_5 = maybe_0.to_try()


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(list_0)


def test_case_14():
    bool_0 = True
    str_0 = "|v|\x0bVk~>AN%Brl"
    tuple_0 = (bool_0, str_0)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_validation()
    var_2.bind(var_1)


def test_case_15():
    set_0 = set()
    str_0 = "_H7#9)=~w8"
    tuple_0 = (set_0, str_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    int_0 = 3092
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_4 = maybe_2.map(none_type_0)
    var_5 = var_4.to_try()
    var_5.to_validation()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    var_1 = maybe_0.map(none_type_0)
    bool_2 = maybe_1.__eq__(bool_0)
    bool_3 = var_1.__eq__(var_1)
    var_2 = var_1.filter(var_1)
    bool_4 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_1.to_try()
    var_4 = var_1.to_try()
    var_5 = maybe_1.to_box()
    var_3.to_try()


def test_case_17():
    generic_0 = module_1.Generic()
    int_0 = -2615
    bytes_0 = b"\xb4f\xc2\xc5#l\xe66L\x03<"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(int_0)


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.get_or_else(bool_0)
    var_1.bind(var_0)


def test_case_19():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.to_box()
    float_0 = -2031.5023
    bool_1 = False
    maybe_2 = module_0.Maybe(float_0, bool_1)
    maybe_2.filter(var_1)


def test_case_22():
    none_type_0 = None
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_2.get_or_else(none_type_0)


def test_case_23():
    bytes_0 = b"|xX\x1e\x0b\xe0#\xba5\xa3Hi\xd8\xc0,B"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    none_type_0 = None
    var_2 = maybe_0.bind(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_4 = maybe_2.to_box()
    var_5 = var_4.to_lazy()
    bool_2 = var_0.__eq__(var_1)
    var_6 = var_1.to_try()
    var_7 = var_3.to_try()
    var_8 = maybe_0.get_or_else(var_3)
    bytes_1 = b"\xb7\xf6\x8c:"
    maybe_3 = module_0.Maybe(bytes_1, maybe_1)
    var_9 = var_2.to_try()


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_either()
    var_3 = var_0.ap(none_type_0)
    var_4 = var_0.filter(var_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_1)
    var_5 = maybe_0.bind(var_4)
    maybe_2 = module_0.Maybe(bool_0, none_type_1)
    maybe_3 = module_0.Maybe(var_2, var_3)
    bool_1 = var_3.__eq__(maybe_0)
    var_6 = var_1.to_validation()
    maybe_2.filter(none_type_1)


def test_case_25():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    none_type_0.ap(none_type_0)
