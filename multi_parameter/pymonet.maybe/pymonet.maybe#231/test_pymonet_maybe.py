# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "Rmv^Oc"
    bytes_0 = b"\xddqS"
    tuple_0 = (str_0, bytes_0)
    set_0 = {tuple_0, tuple_0, tuple_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_1 = var_1.__eq__(set_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.ap(var_1)
    var_3 = var_0.to_either()
    var_4 = var_0.map(var_1)
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.to_try()
    var_7 = maybe_0.bind(bool_0)
    var_8 = var_7.to_either()
    var_9 = var_6.map(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_10 = maybe_1.to_box()
    var_11 = var_6.bind(var_9)
    var_12 = var_1.to_either()
    var_13 = var_10.to_lazy()
    var_11.to_validation()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    none_type_0 = None
    set_0 = {bool_0, none_type_0}
    maybe_1 = module_0.Maybe(none_type_0, set_0)
    var_3 = maybe_1.filter(var_2)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    none_type_1 = None
    bool_1 = maybe_2.__eq__(none_type_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    str_0 = "*+e[m-"
    set_0 = {str_0, str_0, str_0, str_0}
    var_2 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.bind(set_0)
    var_5 = maybe_1.ap(var_0)
    var_6 = var_4.map(var_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    var_7 = maybe_1.filter(var_0)
    var_8 = var_7.to_validation()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    maybe_3 = module_0.Maybe(maybe_1, maybe_2)
    maybe_1.bind(none_type_0)


def test_case_7():
    bytes_0 = b"\xc2\x1eg\x9b,"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_1.to_box()
    var_3 = var_0.filter(bytes_0)
    var_4 = var_0.ap(var_2)


def test_case_8():
    bytes_0 = b"\xc2\x1eg\x9b,"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bytes_0)


def test_case_9():
    float_0 = -3245.3
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_box()


def test_case_10():
    str_0 = "2\x0c#7^P:[\t@jRFUO^\\2h"
    list_0 = [str_0, str_0, str_0]
    list_1 = []
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_either()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    str_0 = "*+e[m-"
    set_0 = {str_0, str_0, str_0, str_0}
    var_2 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.ap(var_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    var_5 = maybe_1.filter(var_0)
    var_6 = var_5.to_validation()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_2 = maybe_1.get_or_else(var_0)
    maybe_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    int_0 = 831
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_2.bind(none_type_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_0.to_lazy()


def test_case_15():
    int_0 = -152
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.to_either()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_try()
    var_1.filter(var_0)


def test_case_17():
    str_0 = ";,%q,ks<rGuKr"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    var_0 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_1.filter(bool_0)
    var_2 = var_1.to_lazy()
    var_2.get_or_else(none_type_0)


def test_case_19():
    bool_0 = True
    bytes_0 = b"\x0f\xf7\xa7G\x11/v7k\xc2\r,\x86w7\xfa"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(var_0)
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    bool_4 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_4)
    var_3 = maybe_2.to_lazy()
    var_4 = maybe_1.ap(var_2)
    bool_5 = True
    maybe_3 = module_0.Maybe(bool_0, bool_5)
    var_5 = maybe_2.to_box()
    var_6 = var_1.to_validation()
    bool_6 = maybe_3.__eq__(maybe_2)
    var_7 = var_1.get_or_else(var_3)
    maybe_4 = module_0.Maybe(bool_0, bool_0)
    var_8 = var_1.bind(bool_1)
    var_9 = maybe_4.to_either()
    var_10 = maybe_4.filter(var_9)
    var_11 = var_10.to_validation()
    var_12 = maybe_1.bind(var_4)
    var_13 = var_3.ap(maybe_1)
