# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"o\x1d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_3():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    list_0 = []
    complex_0 = -348.064 - 2660j
    list_1 = [list_0, complex_0, maybe_0]
    var_0 = maybe_0.map(list_1)
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.map(none_type_0)


def test_case_5():
    bytes_0 = b"*V\x9e\r\xd1\x0f\xc5\xcc\xf4\xdc_Dt\xd5\x92\xb3\x89\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_1 = maybe_0.to_either()
    maybe_2 = maybe_0.bind(var_0)
    var_2 = maybe_2.filter(maybe_0)
    var_3 = maybe_2.filter(maybe_2)
    bool_0 = maybe_2.__eq__(maybe_2)
    maybe_1.filter(bool_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bytes_0 = b"\xf4ZO\x97\x14\xd9\x9b\xab\x89\x96\xe0\xf7\xa0\xfc}nd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bytes_1 = b"\x8c\xfa"
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(bytes_1)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.ap(maybe_0)
    var_6 = var_3.to_validation()
    var_7 = var_6.to_box()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bytes_0 = b"J\x02\x88\xddr\xd7<E\x1c\xc57\x0f\xfdy\xccN'\xcf\x19\x01"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    maybe_0.filter(var_0)


def test_case_10():
    float_0 = 271.90781
    float_1 = -1424.060671
    maybe_0 = module_0.Maybe(float_1, float_1)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_try()


def test_case_11():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_1 = maybe_0.to_box()
    var_0.to_box()


def test_case_12():
    float_0 = 1858.638782
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_either()
    var_1.filter(var_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = maybe_0.to_either()
    maybe_0.filter(var_1)


def test_case_14():
    str_0 = "?A\x0b3"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(str_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_either()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_15():
    bytes_0 = b"J\x02\x88\xddr\xd7<E\x1c\xc57\x0f\xfdy\xccN'\xcf\x19\x01"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_0)


def test_case_16():
    int_0 = -1044
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    bytes_0 = b"J\x02\x88\xddr\xd7<E\x1c\xc57\x0f\xfdy\xccN'\xcf\x19\x01"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = True
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_2.filter(var_1)
    var_3 = maybe_1.to_try()
    var_4 = maybe_2.to_validation()
    bool_1 = maybe_2.__eq__(var_4)
    maybe_1.filter(bool_1)


def test_case_18():
    bytes_0 = b"J\x02\x88\xddr\xd7<E\x1c\xc57\x0f\xfdy\xccN'\xcf\x19\x01"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(bytes_0)
    var_1 = maybe_1.to_validation()
    maybe_0.filter(var_0)


def test_case_19():
    int_0 = -959
    bytes_0 = b"$\x9eS]\xe9{\x11\xcc"
    bool_0 = False
    tuple_0 = (bytes_0, bytes_0, bool_0)
    tuple_1 = (tuple_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_1, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(int_0)


def test_case_20():
    bytes_0 = b"*V\x9e\r\xd1\x0f\xc5\xcc\xf4\xdc_Dt\xd5\x92\xb3\x89\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = maybe_2.filter(maybe_2)
    var_4 = maybe_2.filter(var_1)
    bool_0 = maybe_2.__eq__(var_4)
    maybe_1.filter(bool_0)


def test_case_21():
    bytes_0 = b"*V\x9e\r\xd1\x0f\xc5\xcc\xf4\xdc_Dt\xd5\x92\xb3\x89\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_2.filter(var_1)
    var_3 = maybe_2.filter(maybe_2)
    bool_0 = maybe_2.__eq__(var_2)
    maybe_1.filter(bool_0)


def test_case_22():
    int_0 = 1738
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    maybe_0.filter(var_1)
