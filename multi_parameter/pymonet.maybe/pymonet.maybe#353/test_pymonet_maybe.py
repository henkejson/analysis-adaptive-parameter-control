# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -776
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x0ey\x9a"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_3():
    int_0 = -1792
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.map(maybe_0)
    bool_2 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.to_box()
    var_1.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    float_0 = -2753.168666
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.map(float_0)


def test_case_5():
    bytes_0 = b".\xebTT\x96'"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(bytes_0)


def test_case_6():
    bytes_0 = b"7;"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    int_0 = -3061
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.ap(bytes_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    int_0 = -1792
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = True
    var_0 = maybe_0.filter(bool_0)
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.to_box()
    var_1.to_box()


def test_case_9():
    int_0 = -1792
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_0.filter(bool_1)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    str_0 = ">JwQp-2>"
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)


def test_case_12():
    int_0 = 0
    complex_0 = 2123.505175 - 2431.905759j
    bool_0 = True
    dict_0 = {complex_0: complex_0, complex_0: bool_0, complex_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_1.get_or_else(int_0)


def test_case_13():
    list_0 = []
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, list_0)
    bool_1 = False
    list_1 = [bool_0, bool_1, bool_0, list_0]
    maybe_2 = module_0.Maybe(none_type_0, list_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.get_or_else(none_type_0)
    bool_2 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.to_lazy()
    var_1.to_validation()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(none_type_0)
    bool_1 = var_1.__eq__(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_16():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.bind(bool_0)
    bool_1 = var_1.__eq__(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.to_try()
    var_4 = var_3.map(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_5 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_6 = maybe_2.to_try()
    var_6.to_try()


def test_case_19():
    bytes_0 = b"\xaa\x9c\x82\xa3\x0c\x8e\x81\xe4"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_1 = var_0.bind(var_0)
    var_1.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.bind(bool_3)
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_3 = maybe_1.to_validation()
    var_0.get_or_else(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    int_0 = -913
    none_type_1 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_2)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_0, var_0)
    maybe_3 = module_0.Maybe(none_type_1, none_type_1)
    maybe_3.filter(int_0)
