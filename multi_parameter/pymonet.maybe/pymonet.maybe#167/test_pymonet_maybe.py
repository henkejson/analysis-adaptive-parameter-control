# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_3():
    generic_0 = module_1.Generic()
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(set_0)
    var_2 = var_1.map(none_type_0)
    object_0 = module_2.object()
    bool_1 = var_2.__eq__(object_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.bind(none_type_1)
    var_3 = var_2.ap(none_type_0)
    var_4 = var_3.map(none_type_1)
    var_5 = var_4.to_lazy()
    none_type_2 = None
    maybe_1 = module_0.Maybe(none_type_2, none_type_2)
    var_6 = maybe_1.to_box()
    bool_1 = var_2.__eq__(var_2)
    var_7 = maybe_1.to_validation()
    var_8 = maybe_0.to_try()
    bool_2 = var_5.__eq__(bool_1)
    var_9 = var_4.to_box()
    maybe_1.map(var_9)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.bind(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_1.to_box()
    bool_1 = var_2.__eq__(var_2)
    var_4 = module_0.Maybe(bool_0, var_1)
    var_5 = module_1.Generic()
    maybe_1.filter(maybe_1)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_7():
    tuple_0 = ()
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    tuple_1 = (var_0, var_0, var_0)
    maybe_1 = module_0.Maybe(tuple_1, var_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = var_1.ap(tuple_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    maybe_1.filter(maybe_1)


def test_case_11():
    generic_0 = module_1.Generic()
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.get_or_else(set_0)
    var_1.map(none_type_0)


def test_case_12():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_validation()
    var_4.bind(var_1)


def test_case_13():
    int_0 = -1132
    none_type_0 = None
    bytes_0 = b"\x07\x99.\xb2\xa5\xc9n\xbe\xd8F\xe7C\x87*4\xd8"
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(int_0)
    var_2 = var_1.to_box()


def test_case_14():
    bytes_0 = b"?\xd3_"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.bind(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_1.to_box()
    bool_1 = var_2.__eq__(var_2)
    var_4 = maybe_1.to_validation()
    var_5 = var_2.to_box()
    maybe_1.filter(maybe_1)


def test_case_16():
    float_0 = 241.3228
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_1.__eq__(none_type_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    str_0 = "pMC;))31Eq Kx"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.get_or_else(str_0)
    var_2 = maybe_0.to_box()
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_3 = maybe_1.to_try()
    var_3.ap(str_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_20():
    float_0 = 241.3228
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(var_1)
    var_3 = var_1.to_try()
    bool_1 = var_2.__eq__(var_3)
    bool_2 = True
    maybe_2 = module_0.Maybe(var_3, bool_2)
    var_4 = var_2.get_or_else(var_3)
    var_4.to_lazy()


def test_case_21():
    int_0 = -2330
    list_0 = [int_0, int_0, int_0, int_0]
    dict_0 = {}
    object_0 = module_2.object(**dict_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(list_0)


def test_case_22():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.bind(none_type_1)
    var_2 = var_1.ap(none_type_0)
    var_3 = var_2.map(none_type_1)
    var_4 = var_3.to_lazy()
    none_type_2 = None
    maybe_1 = module_0.Maybe(none_type_2, none_type_2)
    var_5 = maybe_1.to_box()
    var_6 = maybe_0.filter(var_4)
    var_7 = var_6.to_try()
    var_8 = var_4.ap(maybe_1)
    var_9 = var_4.to_try()
    bool_1 = var_3.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(var_3, none_type_0)
    var_9.filter(var_2)


def test_case_23():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.ap(maybe_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.filter(none_type_0)
    var_3 = var_2.bind(var_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_4 = maybe_2.ap(none_type_0)
    bool_3 = True
    maybe_3 = module_0.Maybe(none_type_0, bool_3)
    var_5 = maybe_2.to_try()
    var_6 = var_4.bind(var_0)
    var_7 = var_6.ap(none_type_0)
    var_8 = var_7.map(var_7)
    var_9 = var_8.get_or_else(var_7)
    none_type_2 = None
    maybe_4 = module_0.Maybe(none_type_2, none_type_2)
    var_10 = maybe_4.to_box()
    bool_4 = var_6.__eq__(var_6)
    var_11 = maybe_4.to_validation()
    var_12 = var_6.ap(var_11)
    maybe_4.filter(maybe_4)
