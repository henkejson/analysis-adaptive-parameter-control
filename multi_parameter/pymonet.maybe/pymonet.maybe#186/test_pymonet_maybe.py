# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"\xa24"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    int_0 = -436
    int_1 = -3072
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.map(int_0)
    none_type_0 = None
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_1.map(none_type_0)
    var_3 = maybe_1.to_either()
    bool_1 = var_2.__eq__(var_0)


def test_case_3():
    bool_0 = True
    bytes_0 = b"\x12)"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(maybe_0)
    var_4 = maybe_0.to_try()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    maybe_1 = module_0.Maybe(bool_1, set_0)
    var_1 = maybe_1.map(bool_1)


def test_case_5():
    int_0 = 970
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(int_0)


def test_case_6():
    float_0 = 2565.95
    bytes_0 = b"\x9c3]\xc6@\xfc\x1c\xc8"
    int_0 = -2325
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(float_0)


def test_case_7():
    int_0 = -553
    int_1 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_1, bool_0)
    maybe_0.bind(int_0)


def test_case_8():
    object_0 = module_2.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.ap(object_0)
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_9():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    tuple_0 = (maybe_0,)
    maybe_0.ap(tuple_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    maybe_1 = module_0.Maybe(bool_1, set_0)
    var_1 = maybe_1.map(bool_1)
    var_2 = var_1.filter(bool_1)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = module_0.Maybe(maybe_0, maybe_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_12():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_1.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    var_4 = maybe_0.to_either()
    maybe_0.filter(var_1)


def test_case_14():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_either()


def test_case_15():
    str_0 = "\n\nR`h7i\t"
    list_0 = [str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()


def test_case_16():
    list_0 = []
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(list_0)


def test_case_17():
    str_0 = "J<-C9)ofjvC1}\x0b"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    str_0 = "6)(k=mj'FQ GL=\x0b&3"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_19():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_try()
    maybe_1.ap(none_type_1)


def test_case_21():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_22():
    float_0 = -1314.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = False
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    set_0 = {bool_0}
    maybe_2 = module_0.Maybe(set_0, maybe_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()
    maybe_3 = module_0.Maybe(maybe_2, var_0)
    var_0.bind(var_2)


def test_case_23():
    none_type_0 = None
    float_0 = -1044.542
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_1.to_lazy()
    bool_3 = maybe_1.__eq__(maybe_0)
    module_2.object(*bool_3, **var_0)
