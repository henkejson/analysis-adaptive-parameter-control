# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x11\xa0\x1a\xfa\xa9\xdcy\x86ZV\xd4$T\xef\xee\xaa2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_0.to_box()
    maybe_1.filter(none_type_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_2.__eq__(none_type_1)
    maybe_3 = module_0.Maybe(bool_0, none_type_1)
    maybe_3.filter(var_1)


def test_case_4():
    str_0 = ":7S\tF17]C<.w<8Bn|!Y"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(str_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_1.get_or_else(var_0)
    bool_0 = True
    var_4 = var_0.ap(bool_0)
    var_5 = var_2.to_try()


def test_case_5():
    complex_0 = -569.49688 - 1168.8j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_0.bind(var_2)
    maybe_1.filter(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = var_0.to_box()
    maybe_1.filter(none_type_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = var_0.to_box()
    maybe_1.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_0.to_box()
    maybe_1.filter(none_type_0)


def test_case_12():
    float_0 = -3974.808872
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_box()


def test_case_13():
    bytes_0 = b"\x83\x1bf5\x04\x05lt}\xa4\x1do\x7fv\x91Ae\xc4\xa2d"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_2 = maybe_2.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_0.to_either()
    var_5 = var_3.map(none_type_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bytes_0 = b"D\x16\x01;\xb1W"
    tuple_0 = (bool_0, bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(tuple_0, bool_1)
    var_2 = maybe_2.to_try()
    var_3 = maybe_2.to_lazy()
    var_2.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = var_0.to_box()
    maybe_1.filter(none_type_0)


def test_case_17():
    bytes_0 = b"\x11\xa0\x1a\xfa\xa9\xdcy\x86ZV\xd4$T\xef\xee\xaa2"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.map(list_0)
    var_1 = var_0.ap(bytes_0)
    var_2 = var_1.filter(var_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_3 = var_1.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(var_3)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.to_validation()
    bool_1 = var_0.__eq__(var_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = var_0.to_box()
    maybe_1.filter(none_type_0)
