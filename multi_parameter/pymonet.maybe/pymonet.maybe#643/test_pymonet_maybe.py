# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -75
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_validation()
    var_0.bind(list_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.ap(var_1)
    bool_2 = var_3.__eq__(var_3)
    var_4 = var_3.filter(var_2)
    var_5 = maybe_0.to_validation()
    var_6 = var_0.get_or_else(bool_0)
    var_1.filter(var_1)


def test_case_4():
    int_0 = 4389
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.ap(int_0)
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_3.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.map(var_4)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.filter(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    float_0 = -436.0
    bool_2 = False
    maybe_1 = module_0.Maybe(float_0, bool_2)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()


def test_case_9():
    float_0 = -740.06
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(float_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    bool_0 = var_1.__eq__(var_1)
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    float_0 = 1510.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_0.map(none_type_0)


def test_case_13():
    complex_0 = 272.9338 - 2937.43j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, complex_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.ap(bool_1)
    var_1.to_either()


def test_case_14():
    str_0 = "m9\x0b7%H=IRK.IQS"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(str_0)
    var_1.filter(none_type_0)


def test_case_15():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(list_0)
    var_1.filter(list_0)


def test_case_16():
    generic_0 = module_1.Generic()
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_0.bind(var_1)


def test_case_17():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(list_0)
    list_0.ap(bool_0)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(var_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.to_validation()
    list_0 = [bool_0, maybe_1]
    var_2 = var_0.get_or_else(list_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_1.to_either()
    var_4 = var_2.ap(none_type_0)
    var_1.filter(maybe_1)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_either()
    var_0.to_validation()
