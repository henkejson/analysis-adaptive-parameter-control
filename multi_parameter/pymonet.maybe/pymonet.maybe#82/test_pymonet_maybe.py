# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.map(none_type_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.get_or_else(maybe_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    maybe_0.map(bool_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    dict_0 = {tuple_0: bool_0, tuple_0: bool_0, bool_0: tuple_0, tuple_0: bool_0}
    var_2 = maybe_0.bind(var_0)
    int_0 = -915
    tuple_1 = (dict_0, int_0, bool_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(tuple_1, dict_0)
    var_5 = maybe_1.to_validation()


def test_case_6():
    float_0 = 1553.2554
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    bytes_0 = b"\x1c_\xfdX\xf9\xa6\x130H"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.bind(none_type_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_0.get_or_else(var_0)
    bool_1 = var_2.__eq__(var_0)
    var_3 = var_0.to_either()
    var_4 = var_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    var_5 = var_0.to_lazy()
    var_6 = var_2.to_lazy()
    var_7 = var_1.filter(var_5)
    var_8 = var_0.to_try()
    maybe_1.filter(bool_2)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.ap(maybe_1)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(int_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    maybe_0.filter(var_1)


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.get_or_else(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_3 = var_0.to_lazy()
    var_4 = var_1.to_lazy()
    var_5 = var_0.filter(var_3)
    var_6 = var_0.to_try()
    maybe_1.filter(bool_2)


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.filter(list_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.map(var_4)


def test_case_18():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_validation()
    maybe_0.bind(var_2)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = False
    bytes_0 = b"\xf1\xeb\x868#\xe8\xb0\rG\xab\xc2\x0b\x17v"
    none_type_0 = None
    var_0 = maybe_1.get_or_else(none_type_0)
    set_0 = {bytes_0, bytes_0, bytes_0}
    var_1 = maybe_1.map(bool_2)
    maybe_2 = module_0.Maybe(set_0, bytes_0)
    var_2 = maybe_2.ap(bool_2)
    bool_3 = var_2.__eq__(maybe_2)
    var_3 = var_2.to_try()
    var_3.to_either()
