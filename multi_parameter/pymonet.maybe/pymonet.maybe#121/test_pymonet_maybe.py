# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pymonet.maybe as module_1


def test_case_0():
    object_0 = module_0.object()
    maybe_0 = module_1.Maybe(object_0, object_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b'\xed\xdch\n"/\xecSK#{'
    bool_0 = False
    maybe_0 = module_1.Maybe(bytes_0, bool_0)
    bool_1 = True
    set_0 = set()
    maybe_1 = module_1.Maybe(set_0, set_0)
    var_0 = maybe_1.to_try()
    bool_2 = maybe_1.__eq__(bool_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.get_or_else(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_box()
    var_2.filter(var_5)


def test_case_4():
    complex_0 = 2504.1162 + 2470.29563j
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.map(complex_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_2 = var_1.bind(bool_0)
    bool_2 = False
    maybe_1 = module_1.Maybe(var_0, bool_2)
    var_3 = var_1.to_validation()
    maybe_1.filter(var_3)


def test_case_6():
    str_0 = "s}Bd^j[,r8R"
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, str_0)
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    set_0 = {str_0, str_0}
    bool_0 = False
    maybe_2 = module_1.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_2.bind(var_0)


def test_case_7():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_1.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_1.Maybe(int_0, bool_0)
    maybe_1.ap(int_0)


def test_case_8():
    bytes_0 = b'\xed\xdch\n"/\xecSK#{'
    bool_0 = False
    maybe_0 = module_1.Maybe(bytes_0, bool_0)
    set_0 = set()
    maybe_1 = module_1.Maybe(set_0, set_0)
    var_0 = maybe_1.to_box()
    maybe_0.filter(var_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(bool_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_try()
    var_2.ap(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    maybe_1.bind(maybe_1)


def test_case_12():
    bytes_0 = b"D\x98\x89N\x97-"
    maybe_0 = module_1.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_0.ap(var_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_0)
    var_2.bind(var_2)


def test_case_16():
    float_0 = -1725.0
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.map(float_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(bool_0)
    maybe_1 = module_1.Maybe(var_1, var_1)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = var_0.to_either()
    var_3 = var_0.map(var_2)
    var_4 = var_1.to_box()
    var_5 = var_1.filter(bool_1)
    var_6 = maybe_1.to_box()
    var_7 = var_5.filter(var_4)
    var_8 = maybe_1.to_lazy()
    var_2.get_or_else(maybe_0)


def test_case_18():
    str_0 = "A7k-5L>9cH3G"
    int_0 = 2529
    maybe_0 = module_1.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_1.Maybe(int_0, bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.to_box()
    complex_0 = 2579.07804 - 1742j
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, complex_0: str_0}
    bool_1 = True
    maybe_2 = module_1.Maybe(str_0, bool_1)
    none_type_0 = None
    var_4 = maybe_2.to_either()
    var_5 = maybe_2.ap(bool_1)
    maybe_3 = module_1.Maybe(dict_0, none_type_0)
    bool_2 = maybe_3.__eq__(maybe_3)
    var_3.filter(var_5)
