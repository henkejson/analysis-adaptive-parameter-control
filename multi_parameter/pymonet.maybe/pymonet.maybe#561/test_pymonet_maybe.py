# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    object_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -716
    float_0 = 426.5244
    int_1 = 1559
    maybe_0 = module_0.Maybe(float_0, int_1)
    var_0 = maybe_0.get_or_else(int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0.to_box()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.map(bool_0)
    var_2 = var_1.filter(var_1)
    bool_2 = var_2.__eq__(var_1)
    bool_3 = maybe_2.__eq__(bool_2)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_validation()
    none_type_0.to_either()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.map(bool_0)
    var_3 = var_2.filter(var_2)
    var_4 = maybe_2.get_or_else(maybe_2)
    var_5 = var_4.get_or_else(var_1)
    bool_2 = var_2.__eq__(var_3)
    var_6 = var_2.to_box()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.map(bool_0)
    var_3 = var_2.filter(var_2)
    var_4 = maybe_2.get_or_else(maybe_2)
    var_5 = var_3.map(maybe_2)
    var_6 = var_4.bind(var_1)
    var_7 = maybe_1.to_either()
    var_8 = maybe_1.to_validation()
    var_9 = maybe_0.to_validation()
    maybe_1.map(var_9)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.to_try()
    var_1.to_lazy()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_8():
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(str_0)


def test_case_9():
    int_0 = -3274
    list_0 = [int_0, int_0, int_0, int_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -716
    float_0 = 426.5244
    int_1 = 1559
    maybe_0 = module_0.Maybe(float_0, int_1)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    bool_1 = True
    var_3 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_1.to_either()
    var_1.to_lazy()


def test_case_13():
    list_0 = []
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(list_0, none_type_1)
    var_2 = maybe_1.to_either()


def test_case_14():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    complex_0 = 1098.656877 - 2836.951426j
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(complex_0)


def test_case_16():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(bool_0)


def test_case_17():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_18():
    bytes_0 = b"\x8e&\xf2\x8a%n"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_20():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = False
    list_0 = [bool_2, bool_2, bool_2, bool_2]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_1.to_validation()
    var_2.get_or_else(bool_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.map(bool_0)
    var_3 = var_2.filter(var_2)
    var_4 = maybe_2.get_or_else(maybe_2)
    bool_2 = var_3.__eq__(var_2)
    bool_3 = maybe_2.__eq__(bool_2)
    var_5 = var_2.to_validation()
    var_6 = var_2.to_box()
    bool_4 = maybe_1.__eq__(var_2)
    var_1.ap(bool_4)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_2.map(bool_0)
    var_3 = var_2.filter(var_2)
    var_4 = maybe_2.get_or_else(maybe_2)
    bool_2 = maybe_1.__eq__(none_type_0)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_5 = var_2.to_validation()
    var_0.to_try()
