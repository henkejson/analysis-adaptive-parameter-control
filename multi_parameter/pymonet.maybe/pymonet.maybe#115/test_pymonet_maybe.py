# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = -1905
    bool_0 = True
    bool_1 = False
    float_0 = 1067.360872
    maybe_0 = module_0.Maybe(float_0, bool_1)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_1.__eq__(int_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    maybe_2.bind(int_0)


def test_case_3():
    str_0 = "1\x0b6[5i6%m_+K]nER1'Q"
    bytes_0 = b"\xc4?BR"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_2.ap(str_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.map(bool_0)
    bool_1 = False
    var_2 = maybe_0.ap(bool_1)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_box()


def test_case_6():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    str_0 = "yw"
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    bytes_0 = b"\xfb\xa9"
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    float_0 = 2013.338
    var_4 = var_2.to_box()
    bool_2 = False
    maybe_2 = module_0.Maybe(float_0, bool_2)
    maybe_2.filter(var_3)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_10():
    complex_0 = -1213.474 + 1020.97j
    bool_0 = True
    int_0 = -72
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.filter(complex_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_1 = maybe_1.to_validation()
    int_0 = 1195
    var_2 = maybe_1.get_or_else(var_1)
    module_1.Generic(*int_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    bool_1 = True
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_0.to_box()
    var_3.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.get_or_else(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.to_box()
    var_5 = maybe_0.to_try()
    var_6 = var_0.to_either()
    var_1.ap(bool_0)


def test_case_15():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(generic_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    maybe_0.filter(none_type_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(bool_0, var_2)
    var_3 = maybe_0.to_validation()
    var_3.get_or_else(bool_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_18():
    str_0 = '\tJ\rOLg\x0c"MoEpc_'
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(str_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(var_0)
    var_4 = var_2.bind(var_2)
    bool_1 = var_2.__eq__(var_4)
    var_5 = maybe_0.ap(var_2)
    var_6 = var_5.ap(var_2)
    var_7 = var_2.bind(str_0)
    var_8 = var_2.to_box()
    var_9 = var_4.ap(var_4)
    var_10 = var_5.to_validation()
    var_11 = var_8.to_try()


def test_case_19():
    str_0 = "lA02w"
    float_0 = 1334.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(float_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_3.to_box()
    var_5 = maybe_0.map(var_4)
    var_6 = maybe_0.ap(var_2)
    var_7 = maybe_0.to_validation()
    var_8 = var_3.map(var_1)
    var_9 = var_8.get_or_else(var_2)
    var_10 = var_4.ap(var_0)
    bool_0 = var_2.__eq__(var_7)
    var_11 = var_8.get_or_else(var_8)
    bool_1 = var_3.__eq__(maybe_0)
    var_12 = var_1.map(var_11)
    var_13 = module_1.Generic()
    var_14 = var_0.to_either()
    var_15 = maybe_0.ap(var_3)
    var_2.bind(var_0)


def test_case_20():
    generic_0 = module_1.Generic()
    complex_0 = -1075.5 + 5193.60588j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(generic_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.to_box()
    var_5 = var_3.ap(complex_0)
    var_6 = maybe_1.to_try()
    var_7 = maybe_0.filter(var_3)
    var_8 = var_7.ap(var_5)
    var_9 = maybe_0.ap(complex_0)
    var_10 = var_5.bind(var_8)
    var_11 = var_3.to_box()
    var_6.bind(var_11)


def test_case_21():
    str_0 = "lA02w"
    float_0 = 1334.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(float_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_3.to_box()
    var_5 = maybe_0.map(var_4)
    var_6 = maybe_0.ap(var_2)
    var_7 = maybe_0.to_validation()
    var_8 = var_3.map(var_1)
    var_9 = var_8.get_or_else(var_2)
    var_10 = var_4.ap(var_0)
    bool_0 = var_2.__eq__(var_7)
    var_11 = var_8.get_or_else(var_8)
    bool_1 = var_3.__eq__(maybe_0)
    var_12 = var_1.map(var_11)
    var_13 = var_0.to_either()
    bool_2 = var_8.__eq__(bool_1)
    maybe_1 = module_0.Maybe(var_12, bool_2)
    bool_3 = maybe_0.__eq__(var_3)
    bool_4 = False
    maybe_2 = module_0.Maybe(var_0, var_5)
    var_14 = var_13.ap(var_6)
    bool_5 = var_7.__eq__(bool_4)
    var_15 = var_1.to_box()
    bool_6 = maybe_0.__eq__(var_0)
