# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 1253
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    complex_0 = -398.78 + 2049.1009j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(maybe_0)


def test_case_3():
    complex_0 = -2055.22257 - 3138j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(complex_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    bool_3 = maybe_1.__eq__(maybe_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()
    maybe_1 = module_0.Maybe(var_4, var_3)
    var_5 = maybe_1.map(none_type_0)
    var_6 = var_5.to_box()


def test_case_5():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    none_type_0 = None
    bool_2 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_2)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, dict_0)
    none_type_1 = None
    bytes_0 = b"\x8d\x05\x14\xb9\x7fU\x9b~\x00\xd8\x95"
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.filter(bytes_0)
    var_3 = maybe_2.to_box()
    var_4 = maybe_2.to_try()
    var_5 = maybe_2.to_validation()
    maybe_1.map(none_type_1)


def test_case_6():
    none_type_0 = None
    str_0 = '7C\rC"8'
    list_0 = [str_0, str_0]
    none_type_1 = None
    maybe_0 = module_0.Maybe(list_0, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 831
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_2.to_box()


def test_case_8():
    complex_0 = -398.78 + 2049.1009j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(complex_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\x8d\x05\x14\xb9\x7fU\x9b~\x00\xd8\x95"
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.filter(bytes_0)
    maybe_0.filter(bool_0)


def test_case_10():
    complex_0 = -398.78 + 2049.1009j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = True
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = maybe_1.map(var_1)
    var_5 = var_4.to_try()
    var_6 = var_5.filter(var_3)
    var_7 = maybe_1.to_try()
    var_8 = var_0.to_either()
    var_9 = var_4.get_or_else(bool_0)
    var_10 = var_4.to_try()


def test_case_11():
    bytes_0 = b"\x1f\xa7U\xfd\xe1\xda"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.get_or_else(maybe_1)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    bool_2 = var_1.__eq__(maybe_0)


def test_case_12():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    dict_0 = {}
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.bind(dict_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.ap(none_type_1)
    generic_0 = module_1.Generic()
    maybe_2 = module_0.Maybe(generic_0, generic_0)
    var_1.get_or_else(var_2)


def test_case_13():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    complex_0 = -398.78 + 2049.1009j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_16():
    complex_0 = -398.78 + 2049.1009j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    complex_0 = -2055.22257 - 3138j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(bool_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_1.get_or_else(none_type_0)
    var_4 = maybe_1.to_try()
    var_4.ap(maybe_1)


def test_case_20():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    none_type_0 = None
    bool_2 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_2)
    maybe_1 = module_0.Maybe(bool_2, none_type_0)
    var_0 = maybe_1.get_or_else(bool_1)
    maybe_2 = module_0.Maybe(none_type_0, dict_0)
    bool_3 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_2.filter(var_0)
    var_2 = maybe_2.to_try()
    var_3 = maybe_2.to_validation()
    var_4 = maybe_0.map(var_3)
    var_5 = var_4.to_lazy()
    maybe_1.filter(var_4)


def test_case_21():
    complex_0 = -398.78 + 2049.1009j
    bool_0 = complex_0.__eq__(complex_0)


def test_case_22():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    none_type_0 = None
    bool_2 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_2)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, dict_0)
    bool_4 = maybe_2.__eq__(maybe_1)
    bytes_0 = b"\x8d\x05\x14\xb9\x7fU\x9b~\x00\xd8\x95"
    bool_5 = True
    maybe_3 = module_0.Maybe(bytes_0, bool_5)
    var_0 = maybe_3.filter(bytes_0)
    var_1 = maybe_2.to_box()
    var_2 = maybe_2.to_try()
    maybe_4 = module_0.Maybe(bool_1, var_2)
    var_3 = maybe_3.map(maybe_4)
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_validation()
    bool_6 = var_0.__eq__(var_1)
    dict_1 = {}
    bool_7 = True
    bool_8 = var_4.__eq__(var_2)
    var_6 = maybe_0.to_validation()
    var_7 = maybe_3.bind(maybe_4)
    maybe_5 = module_0.Maybe(dict_1, bool_7)
    var_8 = var_0.get_or_else(var_1)
    maybe_1.ap(bool_3)
