# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = -425
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    str_0 = "$@\x0cy\\"
    complex_0 = 812.84 - 1560.6418j
    bool_1 = True
    maybe_0 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(str_0)
    var_3 = var_2.ap(bool_0)
    var_4 = var_3.to_box()
    var_5 = var_4.to_try()


def test_case_3():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    maybe_0.map(var_1)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_lazy()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_7():
    bool_0 = False
    float_0 = 818.7
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: float_0, bool_0: float_0}
    float_1 = -3235.591
    list_0 = [float_1, float_1, float_1, float_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_lazy()


def test_case_8():
    float_0 = 2866.1
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.map(float_0)


def test_case_9():
    bytes_0 = b"\xc2\xf6\xaa9\x80\xd5\xac\x1a\r\xa65"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_0.to_either()


def test_case_10():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(var_0)


def test_case_11():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    bytes_0 = b"{y\xb6\x04#\x96\x80\xfc\x87\xa0L\xaf\x91\xf3*w"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_13():
    none_type_0 = None
    str_0 = "86p"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_box()
    var_1.get_or_else(none_type_0)


def test_case_14():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    str_0 = "\n,w>-2I*~`"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_0.map(str_0)


def test_case_17():
    str_0 = "uCa"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_try()
    var_2.bind(str_0)


def test_case_18():
    str_0 = "l\\_D_iAkOQx_"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    bytes_0 = b"^\xe6\x0eQ\xc0\xe6\xd8\xb0\t\xb0B$'\xfe:"
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    var_3 = maybe_1.to_validation()
    var_4 = var_3.to_try()
    var_4.ap(bytes_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1.bind(var_1)


def test_case_20():
    bool_0 = True
    str_0 = "$@\x0cy\\"
    complex_0 = 812.84 - 1560.6418j
    bool_1 = True
    maybe_0 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(str_0)
    var_3 = var_2.ap(bool_0)
    var_4 = var_3.to_box()
    var_5 = var_3.map(var_3)
    var_6 = var_2.bind(var_0)


def test_case_21():
    none_type_0 = None
    str_0 = "86p"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = module_0.Maybe(none_type_0, maybe_1)
    var_2 = var_1.get_or_else(none_type_0)
    var_3 = var_0.to_validation()
    var_4 = maybe_1.to_try()
    var_5 = var_3.to_lazy()
    var_6 = var_5.to_either()
    var_3.filter(var_3)


def test_case_22():
    float_0 = 2866.1
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.bind(float_0)


def test_case_23():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.ap(list_0)
    var_4 = var_1.to_validation()
    bool_2 = False
    maybe_2 = module_0.Maybe(var_1, bool_2)
    var_5 = maybe_0.to_try()
    var_6 = maybe_0.to_lazy()
    var_7 = var_3.to_lazy()
    maybe_2.filter(bool_1)


def test_case_24():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    var_1 = maybe_0.to_try()
    var_2 = var_0.filter(bool_1)
    list_1 = [list_0, bool_1]
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = var_0.to_try()
    list_2 = [list_0, var_0, bool_1, bool_2]
    bool_3 = False
    maybe_2 = module_0.Maybe(list_2, bool_3)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.to_validation()
    bool_4 = var_0.__eq__(maybe_1)
    var_6 = var_3.map(list_1)


def test_case_25():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(var_0)
