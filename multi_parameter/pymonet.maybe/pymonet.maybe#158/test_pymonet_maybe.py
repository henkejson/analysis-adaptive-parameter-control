# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 433.94338
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    var_0.to_validation()


def test_case_3():
    bool_0 = False
    int_0 = -678
    str_0 = "jC/>|'@}T$sk{xZg-?R"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_4():
    int_0 = -5047
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(int_0)


def test_case_5():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.bind(set_0)
    var_1 = var_0.ap(set_0)
    var_2 = var_1.filter(set_0)
    var_3 = var_2.ap(set_0)
    var_4 = var_3.get_or_else(set_0)
    var_4.filter(none_type_0)


def test_case_6():
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_try()
    bool_1 = True
    bool_2 = var_1.__eq__(bool_1)
    maybe_0.filter(bool_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    int_0 = 1
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_2.get_or_else(bool_0)
    var_4 = maybe_2.to_either()


def test_case_10():
    str_0 = "\n        Evaluate function and memoize her output or return memoized value when function was evaluated.\n\n        :returns: result of function in Lazy\n        :rtype: A\n        "
    complex_0 = -331.909 + 940.031585j
    tuple_0 = (complex_0,)
    set_0 = {tuple_0, str_0, tuple_0}
    int_0 = 1
    tuple_1 = (tuple_0, set_0, int_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.get_or_else(none_type_0)
    var_2 = maybe_1.to_box()
    int_1 = -692
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2.ap(int_1)


def test_case_11():
    bool_0 = False
    list_0 = []
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(bool_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_15():
    complex_0 = -1307.9244 + 2138.33j
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(none_type_0)
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_3 = maybe_1.to_validation()
    var_4 = var_3.to_try()
    var_5 = maybe_1.to_either()
    var_4.to_validation()


def test_case_16():
    object_0 = module_1.object()
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(object_0, bool_2)
    var_0 = maybe_0.filter(object_0)
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(object_0)


def test_case_17():
    str_0 = "S`$E&K\x0cEap2z"
    set_0 = {str_0}
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_1 = var_0.__eq__(set_0)
    maybe_0.map(var_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_either()
    var_5 = var_0.to_validation()
    var_6 = var_2.to_either()
    var_7 = var_3.to_try()
    bool_3 = False
    maybe_2 = module_0.Maybe(var_0, bool_3)
    bool_4 = True
    maybe_3 = module_0.Maybe(bool_1, bool_4)
    var_3.get_or_else(bool_1)


def test_case_20():
    float_0 = 433.94338
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(float_0)
    var_1 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2 = var_0.filter(var_1)
    var_3 = var_0.get_or_else(var_1)
    var_1.to_box()


def test_case_21():
    float_0 = 433.94338
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(float_0)


def test_case_22():
    float_0 = 433.94338
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(float_0)
    var_1 = var_0.to_try()
    var_2 = var_0.to_box()
    var_3 = var_0.map(var_2)
    var_4 = var_2.to_try()
    var_5 = var_0.ap(float_0)
    var_6 = maybe_0.map(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_5, none_type_0)
    var_7 = var_6.bind(float_0)
    var_8 = var_0.bind(bool_0)
    var_9 = var_7.to_validation()
    var_10 = var_9.to_lazy()
    bool_2 = True
    maybe_2 = module_0.Maybe(var_3, bool_2)
    var_11 = var_7.ap(var_2)
    var_12 = maybe_0.to_box()
    var_13 = var_12.to_validation()
    var_14 = var_2.to_lazy()
    var_15 = var_14.ap(var_11)
    var_16 = var_9.to_lazy()
    var_17 = var_4.get_or_else(var_3)
    maybe_3 = module_0.Maybe(none_type_0, var_15)
    var_18 = var_16.to_try()
    bool_3 = maybe_2.__eq__(maybe_3)
    var_19 = var_16.to_try()
    var_16.get_or_else(none_type_0)
