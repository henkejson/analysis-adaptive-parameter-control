# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    int_0 = -466
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_2)
    var_3 = var_2.to_either()


def test_case_3():
    str_0 = "^T%N\trb?DOw:vI]"
    dict_0 = {}
    bytes_0 = b"\xe9_"
    tuple_0 = (str_0, str_0, dict_0, bytes_0)
    maybe_0 = module_0.Maybe(tuple_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.filter(maybe_0)
    list_0 = [maybe_0]
    maybe_1 = module_0.Maybe(list_0, bytes_0)


def test_case_4():
    int_0 = 1905
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    var_0 = maybe_0.bind(bool_2)
    bool_3 = True
    bool_4 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_0.filter(bool_3)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = True
    int_0 = -466
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_box()


def test_case_8():
    bool_0 = True
    int_0 = 1728
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    int_0 = 3822
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bytes_0 = b"\xd0\x88\x924\xa6\xd3\xdb\xb2\xab\x1d\xd6\x00\xc7\xa90"
    maybe_1 = module_0.Maybe(bytes_0, maybe_0)
    var_0 = maybe_0.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(bool_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    complex_0 = 1201.805 - 1576.11523j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(none_type_0)


def test_case_14():
    generic_0 = module_1.Generic()
    bool_0 = False
    list_0 = [generic_0, bool_0]
    list_1 = [list_0, list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, list_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"+"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_either()
    int_0 = 1475
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.ap(var_4)
    var_6 = var_4.bind(bytes_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_box()
    var_3 = var_2.to_either()
    var_3.to_either()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.get_or_else(none_type_0)


def test_case_18():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_1, maybe_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_1.to_either()
    var_5 = var_3.to_validation()


def test_case_19():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = var_0.bind(set_0)
    bool_2 = maybe_1.__eq__(bool_1)
    var_3 = maybe_1.to_lazy()
    bool_3 = var_3.__eq__(maybe_1)
    var_4 = var_3.to_either()
    var_4.filter(none_type_0)


def test_case_20():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_0 = module_0.Maybe(maybe_0, maybe_1)
    bool_3 = maybe_0.__eq__(bool_2)
    var_1 = var_0.get_or_else(bool_1)
    var_2 = maybe_0.ap(bool_2)
    bool_4 = var_0.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(maybe_0, bool_3)
    var_1.to_try()


def test_case_21():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_either()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, var_1)
    var_2 = maybe_2.ap(var_0)
    var_3 = maybe_2.map(var_1)
    var_4 = maybe_2.to_box()
    maybe_3 = module_0.Maybe(maybe_2, var_0)
    var_5 = maybe_1.get_or_else(maybe_1)
    var_5.map(none_type_0)
