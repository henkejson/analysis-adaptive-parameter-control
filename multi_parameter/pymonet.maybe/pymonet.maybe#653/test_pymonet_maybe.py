# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    float_0 = -1068.0
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -1068.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_3():
    bytes_0 = b"G\xf5\x01\xe2\x05\x16\x7fs\x82\x0c\x07W\xac.^"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.map(bytes_0)
    var_3 = var_2.to_validation()
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.to_validation()
    var_6 = var_3.to_either()
    var_7 = var_5.to_lazy()
    var_8 = maybe_1.to_validation()
    var_6.get_or_else(var_4)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    object_0 = module_1.object()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(object_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    dict_0 = {}
    int_0 = -1319
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(dict_0)
    str_0 = ">"
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    tuple_0 = (maybe_0,)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    float_0 = -288.706
    var_0 = maybe_1.filter(float_0)
    var_1 = var_0.bind(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    bytes_0 = b"\xed"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_12():
    list_0 = []
    list_1 = [list_0]
    maybe_0 = module_0.Maybe(list_0, list_1)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = 2922.546
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(float_0, float_0)


def test_case_14():
    tuple_0 = ()
    set_0 = {tuple_0}
    maybe_0 = module_0.Maybe(set_0, tuple_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    str_0 = "[v=2/:0"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(list_0)
    var_2 = var_1.filter(none_type_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    tuple_0 = (maybe_0,)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_2 = maybe_0.to_validation()
    var_2.get_or_else(maybe_1)


def test_case_19():
    bool_0 = False
    list_0 = []
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    str_0 = "[\r',Pu\x0b&G| eQo)${"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_0.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    float_0 = 2922.546
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(float_0, float_0)


def test_case_23():
    bytes_0 = b":\x04\xc2I\x9cJ\x04"
    tuple_0 = (bytes_0,)
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bytes_1 = b"Bq\xf9\xd9"
    maybe_1 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.map(tuple_0)
    var_2 = var_0.to_try()
    bool_1 = False
    maybe_2 = module_0.Maybe(var_1, bool_1)
    none_type_0 = None
    bool_2 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_2)
    var_3 = maybe_3.to_validation()
    var_4 = var_3.to_either()


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_0.filter(var_0)
