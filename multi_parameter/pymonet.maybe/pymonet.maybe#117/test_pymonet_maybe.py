# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(var_1, var_1)
    bool_2 = maybe_0.__eq__(maybe_0)


def test_case_3():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(generic_0)
    bool_0 = False
    var_2 = var_1.to_box()
    var_3 = var_1.map(var_2)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.ap(maybe_0)
    bool_1 = maybe_0.__eq__(generic_0)
    bytes_0 = b"\x01\x17>\xb6\xca\xd2\xeey\xa25;<\xdf"
    var_5 = var_1.map(bool_0)
    bool_2 = True
    var_6 = maybe_0.get_or_else(maybe_1)
    var_7 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    var_8 = maybe_2.to_lazy()
    var_9 = maybe_0.to_box()
    maybe_1.map(var_9)


def test_case_4():
    float_0 = 3276.88
    bytes_0 = b"\xe9\n\\\x0f"
    generic_0 = module_1.Generic()
    int_0 = 749
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(generic_0)
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.ap(float_0)
    var_3 = var_2.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_0.map(maybe_0)


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.bind(var_2)
    var_4 = maybe_0.to_lazy()
    var_5 = var_2.bind(bool_1)
    var_6 = var_2.to_box()


def test_case_7():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(generic_0)
    bool_0 = False
    var_1 = var_0.to_box()
    var_2 = var_0.map(var_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_3 = maybe_1.ap(maybe_0)
    bytes_0 = b"\x01\x17>\xb6\xca\xd2\xeey\xa25;<\xdf"
    var_4 = var_0.map(bool_0)
    bool_1 = True
    var_5 = maybe_0.get_or_else(maybe_1)
    var_6 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    var_7 = maybe_2.to_lazy()
    var_8 = maybe_0.to_box()
    maybe_1.map(var_8)


def test_case_9():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()


def test_case_10():
    none_type_0 = None
    str_0 = 'Mi#Ru\x0cyog"R$eC.'
    set_0 = {str_0, str_0, str_0, str_0}
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(set_0)
    var_1.map(none_type_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.ap(bool_0)


def test_case_12():
    int_0 = -159
    bytes_0 = b"m\x18\x05N\xe1\x9c\xa9Hm\xa3\x8e\xad\x0f["
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_13():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.filter(generic_0)
    bool_0 = False
    var_2 = var_1.to_box()
    var_3 = var_1.map(var_2)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.ap(maybe_0)
    bool_1 = maybe_0.__eq__(generic_0)
    bytes_0 = b"\x01\x17>\xb6\xca\xd2\xeey\xa25;<\xdf"
    var_5 = var_1.map(bool_0)
    var_6 = var_5.to_lazy()
    bool_2 = True
    var_7 = maybe_0.get_or_else(maybe_1)
    var_8 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    var_9 = maybe_1.to_either()
    var_10 = var_5.to_try()
    maybe_3 = module_0.Maybe(generic_0, bool_0)
    var_11 = var_1.filter(var_4)


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_15():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_16():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(generic_0)
    bool_0 = False
    var_1 = var_0.to_box()
    var_2 = var_0.map(var_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_3 = maybe_1.ap(maybe_0)
    bool_1 = maybe_0.__eq__(generic_0)
    var_4 = var_0.map(bool_0)
    var_5 = var_4.to_lazy()
    var_6 = maybe_0.get_or_else(maybe_1)
    var_7 = var_2.map(var_6)
    maybe_2 = module_0.Maybe(generic_0, maybe_0)
    var_8 = maybe_0.to_either()
    var_9 = maybe_1.to_try()
    maybe_3 = module_0.Maybe(var_6, var_2)
    maybe_1.filter(var_5)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    bool_1 = False
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_3 = maybe_2.to_box()
    maybe_3 = module_0.Maybe(bool_2, maybe_2)
    var_3.map(var_2)


def test_case_18():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_0.filter(bool_0)


def test_case_19():
    float_0 = 674.14
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    float_1 = 3276.88
    bool_1 = False
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(float_1, bool_1)
    maybe_1.map(float_1)


def test_case_20():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.filter(generic_0)
    var_2 = var_1.to_box()
    var_3 = var_0.map(var_2)
    maybe_1 = module_0.Maybe(generic_0, var_2)
    var_4 = maybe_1.ap(var_1)
    maybe_2 = module_0.Maybe(generic_0, var_0)
    bool_0 = maybe_1.__eq__(maybe_2)
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.map(var_4)
    var_7 = var_3.get_or_else(maybe_1)
    var_8 = var_5.to_lazy()
    maybe_3 = module_0.Maybe(bool_0, var_2)
    var_9 = maybe_1.to_lazy()
    var_10 = var_6.to_box()
    var_11 = var_4.filter(var_10)
