# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"a\x98\xf4\xbd\xd5\xaf\xf5N;}\x89~\xad\x17\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.ap(none_type_0)
    var_3 = var_0.to_box()
    var_4 = var_1.to_lazy()
    var_5 = maybe_0.to_box()
    var_1.get_or_else(var_2)


def test_case_3():
    none_type_0 = None
    int_0 = -2538
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.filter(var_1)


def test_case_4():
    float_0 = -1875.9
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(float_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.filter(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"l:]\x7f"
    bool_0 = True
    int_0 = -191
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.ap(none_type_0)
    int_1 = 1
    maybe_1 = module_0.Maybe(int_1, none_type_0)
    var_2 = maybe_1.ap(var_0)
    var_3 = var_2.ap(int_1)
    var_4 = var_0.to_try()
    var_5 = var_3.get_or_else(bool_0)
    var_6 = var_2.to_box()
    var_7 = var_2.filter(var_6)
    maybe_1.bind(var_1)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"l:]\x7f"
    bool_0 = True
    int_0 = -191
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()


def test_case_8():
    str_0 = "i"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_try()


def test_case_9():
    str_0 = "i"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    int_0 = 908
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    list_0 = [none_type_0, none_type_0]
    var_1 = maybe_0.get_or_else(list_0)
    var_2 = maybe_0.to_box()
    var_2.get_or_else(int_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    str_0 = "6psT"
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_12():
    bytes_0 = b"\xca]_ \x119\xd7\xb8\xd0\x8a\xd2Nc\xc8\x1dH\xd0N"
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(bytes_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bytes_0 = b"x C\x06c\x95;\xc5+\x94\xfb"
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_validation()
    var_1.bind(bytes_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3.map(var_1)


def test_case_18():
    int_0 = -191
    int_0.ap(int_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"l:]\x7f"
    bool_0 = True
    int_0 = -191
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = var_2.get_or_else(maybe_0)
    var_4 = maybe_0.filter(maybe_0)
    var_5 = var_4.bind(int_0)
    var_6 = var_5.to_box()
    var_7 = var_4.to_lazy()
    bool_1 = var_1.__eq__(var_7)
    bool_2 = var_1.__eq__(var_5)
    var_8 = var_6.to_either()
    var_8.ap(bytes_0)


def test_case_20():
    bool_0 = True
    int_0 = -191
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    maybe_1.filter(var_1)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_22():
    none_type_0 = None
    bytes_0 = b"l:]\x7f"
    bool_0 = True
    int_0 = -191
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = var_2.get_or_else(maybe_0)
    var_4 = maybe_0.filter(maybe_0)
    var_5 = var_4.bind(int_0)
    var_6 = var_5.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_6, bool_1)
    var_7 = maybe_1.to_lazy()
    bool_2 = var_2.__eq__(var_2)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_8 = maybe_1.to_try()
    var_9 = var_7.to_either()
    var_10 = var_9.to_try()
    bool_4 = var_4.__eq__(var_8)
    maybe_2 = module_0.Maybe(var_9, var_8)
    var_11 = var_5.bind(var_6)
    var_12 = var_2.get_or_else(var_9)
    var_13 = var_2.to_either()
    var_14 = var_9.to_lazy()
    var_15 = var_11.to_lazy()
    bool_5 = var_10.__eq__(var_6)
