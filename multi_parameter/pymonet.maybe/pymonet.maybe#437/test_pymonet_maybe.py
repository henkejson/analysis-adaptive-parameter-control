# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -1943.0
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 27
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_1.map(int_0)
    var_3 = maybe_0.ap(maybe_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_4 = var_3.to_validation()
    maybe_0.bind(var_4)


def test_case_3():
    int_0 = 27
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_2.to_lazy()
    var_1 = maybe_1.get_or_else(none_type_0)
    var_2 = maybe_2.map(int_0)
    var_3 = maybe_1.ap(maybe_2)
    bool_2 = maybe_1.__eq__(var_2)
    var_4 = maybe_0.to_validation()
    maybe_1.bind(var_4)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = -2929.6526
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.map(var_0)
    bytes_0 = b"I\xb7\x8d\xc4"
    str_0 = "\r=7\\'"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    var_3 = maybe_1.filter(bytes_0)


def test_case_5():
    float_0 = 41.5624
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_0 = maybe_2.to_lazy()
    var_1 = maybe_1.get_or_else(maybe_2)
    maybe_0.map(maybe_1)


def test_case_6():
    float_0 = -4010.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.bind(var_0)


def test_case_7():
    complex_0 = -878.763 - 33.6782j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(complex_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_1.filter(maybe_0)


def test_case_8():
    none_type_0 = None
    float_0 = -2769.4
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_box()


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(bool_1)


def test_case_10():
    int_0 = -134
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.to_validation()


def test_case_11():
    bytes_0 = b"w\\Jz"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_validation()
    var_1.filter(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    float_0 = 1083.87472
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_15():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bytes_0 = b"\xb5\xe6\x84${K\x94e4\xd8\x00&\x86\x025"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_try()
    var_2.to_box()


def test_case_16():
    int_0 = -134
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.to_either()


def test_case_17():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_1.filter(var_2)
    var_6 = maybe_1.ap(bool_2)
    var_7 = var_6.ap(var_6)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_2, bool_3)
    maybe_2.filter(var_2)
