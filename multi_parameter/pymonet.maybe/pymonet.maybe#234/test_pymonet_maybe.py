# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = -199
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1 = module_0.Maybe(bool_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_0.to_box()
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.bind(bool_1)
    var_4 = maybe_0.to_box()


def test_case_3():
    int_0 = -199
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1 = var_0.map(var_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.to_box()
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.to_box()


def test_case_4():
    str_0 = "{z1N"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_4 = maybe_1.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.ap(var_5)


def test_case_5():
    str_0 = 'o"ZNE@g['
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.map(bool_0)
    var_1 = var_0.to_try()
    none_type_0 = None
    var_2 = maybe_1.map(none_type_0)
    none_type_1 = None
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_1.to_validation()
    str_1 = "& {\tyZ:J%t''6`ar3pM"
    maybe_2 = module_0.Maybe(str_1, none_type_1)
    var_6 = var_3.map(maybe_0)
    none_type_2 = None
    var_7 = maybe_1.get_or_else(var_5)
    var_8 = maybe_1.filter(none_type_2)
    var_9 = var_1.get_or_else(none_type_2)
    var_10 = var_1.filter(var_9)
    var_11 = var_2.ap(bool_0)
    var_12 = var_4.bind(var_11)
    maybe_2.map(none_type_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    bytes_0 = b""
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_validation()
    var_1.bind(bool_0)


def test_case_8():
    none_type_0 = None
    float_0 = 3058.28663
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(none_type_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.filter(maybe_0)


def test_case_11():
    int_0 = 0
    bytes_0 = b"\xf5\x94\xee\x8fX\xa9\r\x87\x01\xc0\xeaKv\x98#=P"
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.ap(bytes_0)
    var_3 = var_2.get_or_else(int_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.filter(maybe_2)
    var_2 = maybe_2.ap(var_1)
    bool_2 = maybe_1.__eq__(var_1)
    bool_3 = var_1.__eq__(var_2)
    var_3 = maybe_1.get_or_else(maybe_0)
    var_4 = maybe_2.to_lazy()
    bool_4 = maybe_2.__eq__(var_1)
    var_5 = var_1.to_either()
    var_6 = maybe_2.to_try()
    var_7 = var_4.to_box()
    var_6.to_lazy()


def test_case_13():
    float_0 = 3021.27
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_16():
    bytes_0 = b"\xf2nt\xc4E\xa3&\xc6\xb8\xbc\x19\xc1\xe7\x17\x8f"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    int_0 = -199
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_0.to_box()


def test_case_18():
    bytes_0 = b"\xd6\xf2qT\xb9\xf8y\xb4\xc0\xff\xfa[\xc0N\xa6\xe7\xe1Le"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(list_0)
    var_2 = var_0.to_validation()
    var_2.get_or_else(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_20():
    bytes_0 = b"\x94\xc1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = var_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_0)
    var_3 = var_0.to_either()
    var_4 = var_2.map(var_2)
    var_5 = var_1.to_validation()
    var_6 = var_2.to_box()
    var_7 = maybe_0.to_box()


def test_case_22():
    int_0 = -92
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_0.to_validation()
