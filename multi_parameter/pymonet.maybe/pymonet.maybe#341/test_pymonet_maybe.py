# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b'"\x87n\x91'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(bool_0)
    bool_2 = maybe_0.__eq__(var_0)


def test_case_4():
    str_0 = "\n        Take function and applied this function on current box value and returns mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: B\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_1.ap(str_0)
    var_3 = var_2.ap(str_0)
    var_4 = var_3.to_either()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.Generic(**dict_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_1)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.bind(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_2.get_or_else(bool_1)
    bool_2 = maybe_1.__eq__(var_3)


def test_case_7():
    bool_0 = True
    str_0 = "be<'CymT4j_RbX}mR("
    bool_1 = False
    list_0 = [bool_0, str_0, str_0]
    tuple_0 = (list_0,)
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    bool_2 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_lazy()
    maybe_1.bind(var_0)


def test_case_8():
    int_0 = -1376
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.ap(bool_1)
    var_1 = maybe_1.to_box()
    none_type_0 = None
    var_2 = maybe_1.filter(none_type_0)


def test_case_9():
    str_0 = "X"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    int_0 = -2484
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.ap(bool_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.map(var_0)


def test_case_12():
    str_0 = "X"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_13():
    object_0 = module_2.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    int_0 = 4257
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_1 = False
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    bool_3 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_box()
    var_2.to_box()


def test_case_15():
    str_0 = "g@WpKU#A]&8t):~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(none_type_0)


def test_case_17():
    complex_0 = 2831.423 + 645.5095j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    bool_0 = False
    dict_0 = {}
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(dict_0)


def test_case_19():
    str_0 = "pz\t@4\r\x0cgF<-"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_20():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    bool_0 = True
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.filter(bool_2)
    var_2 = var_1.ap(maybe_1)
    var_3 = var_2.bind(bool_1)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    maybe_3 = module_0.Maybe(var_3, maybe_1)
    var_4 = maybe_3.to_try()
    var_5 = var_3.to_either()
    var_6 = maybe_3.get_or_else(bool_0)
    bool_3 = maybe_3.__eq__(var_3)
    var_7 = var_2.to_box()
    maybe_4 = module_0.Maybe(var_5, bool_1)
    var_8 = var_2.get_or_else(bool_0)
    var_8.to_try()


def test_case_21():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, list_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_1.get_or_else(var_1)
    var_3 = maybe_0.get_or_else(bool_1)
    var_4 = maybe_1.to_box()
    bool_3 = False
    var_5 = var_2.get_or_else(bool_3)
    var_2.to_box()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_2)
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.bind(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(var_2, maybe_0)
    var_3 = maybe_2.to_try()
    var_4 = var_2.to_either()
    var_5 = maybe_2.get_or_else(bool_0)
    bool_3 = maybe_2.__eq__(var_2)
    var_6 = var_1.to_box()
    maybe_3 = module_0.Maybe(var_4, bool_1)
    var_7 = var_1.get_or_else(bool_0)
    var_7.to_try()
