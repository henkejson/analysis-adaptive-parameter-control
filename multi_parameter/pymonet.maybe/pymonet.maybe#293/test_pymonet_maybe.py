# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -205
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_1.to_lazy()
    int_0 = 2518
    bool_1 = maybe_0.__eq__(var_2)
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_4 = maybe_1.get_or_else(var_3)
    var_5 = maybe_1.to_try()
    bool_2 = var_2.__eq__(maybe_1)
    var_6 = var_3.to_validation()
    var_7 = var_6.to_lazy()
    var_8 = maybe_0.get_or_else(var_5)
    var_9 = maybe_1.to_lazy()
    var_9.get_or_else(int_0)


def test_case_3():
    none_type_0 = None
    str_0 = "hL(OE~\t!8R6^NED"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_try()
    bool_1 = var_0.__eq__(str_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_lazy()
    var_1.get_or_else(var_2)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(var_2)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.bind(maybe_0)


def test_case_6():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.ap(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_8():
    bool_0 = True
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_1)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_10():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    list_0 = []
    bool_1 = False
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_3 = maybe_0.to_box()
    bool_2 = False
    var_4 = var_0.to_box()
    var_5 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_6 = var_1.to_lazy()
    var_7 = maybe_1.to_lazy()
    maybe_3 = module_0.Maybe(none_type_0, bool_2)


def test_case_12():
    int_0 = 2664
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_13():
    float_0 = 3233.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_14():
    int_0 = -2529
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(int_0)


def test_case_15():
    float_0 = -131.960747
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bytes_0 = b"\x08\xe3\x1dp\x176@\x08g\xe4\xef\x1b\xfdVh"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_validation()
    var_1.filter(maybe_0)


def test_case_17():
    complex_0 = 1482.99189 - 1652.40199j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_0.ap(var_0)


def test_case_18():
    bool_0 = True
    bool_0.to_box()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    maybe_3 = module_0.Maybe(var_0, bool_1)
    var_3 = maybe_3.to_lazy()
    bool_2 = maybe_1.__eq__(var_0)
    bool_3 = True
    maybe_4 = module_0.Maybe(var_0, bool_3)
    var_2.to_try()


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_0.to_box()
    var_2 = maybe_1.ap(var_1)
    var_1.bind(var_1)
