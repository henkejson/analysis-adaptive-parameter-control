# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_lazy()
    var_0.bind(var_1)


def test_case_3():
    str_0 = "\x0cQ>6yxJ0R\rJ\\"
    str_1 = "inf"
    dict_0 = {str_1: str_1}
    maybe_0 = module_0.Maybe(dict_0, str_1)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_5():
    bytes_0 = b"D;\x96\xb874?\xc1\xb4"
    none_type_0 = None
    int_0 = -1894
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, set_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_try()
    var_2 = var_1.bind(none_type_0)
    var_2.to_lazy()


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.ap(var_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_1.to_validation()
    var_5.to_validation()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    bytes_0 = b"\xa9\xdc\x00!\xe2\xd0"
    maybe_0.ap(bytes_0)


def test_case_8():
    bytes_0 = b"C\x1e@\x1c\xb2\xd9\xabZ"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_9():
    int_0 = 1590
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    int_0 = -2013
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_validation()
    var_4 = var_2.to_validation()
    bool_1 = var_1.__eq__(maybe_0)
    bool_2 = var_4.__eq__(bool_0)


def test_case_11():
    int_0 = 286
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_either()


def test_case_12():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(dict_0)
    var_1 = maybe_0.to_either()
    bool_2 = True
    var_2 = var_1.ap(bool_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.to_validation()
    var_1.get_or_else(bool_2)


def test_case_13():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(var_0)
    var_2 = maybe_0.to_box()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    int_0 = 1590
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, int_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()


def test_case_17():
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.map(var_1)
    var_3 = var_0.ap(none_type_0)
    bool_1 = True
    var_4 = var_2.ap(bool_1)
    bool_2 = var_3.__eq__(var_1)
    var_5 = maybe_0.to_either()
    var_6 = var_2.ap(none_type_0)
    var_7 = var_5.to_box()
    var_8 = var_4.to_box()
    var_9 = var_0.to_box()
    var_10 = var_3.to_lazy()
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    var_11 = maybe_1.to_validation()
    var_12 = var_9.ap(var_3)
    var_13 = var_12.to_try()
    var_14 = var_0.to_validation()


def test_case_18():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(dict_0)
    var_1 = maybe_0.to_either()
    bool_2 = True
    var_2 = var_1.ap(bool_2)
    var_3 = var_0.to_box()
    var_4 = var_1.to_box()
    var_5 = maybe_0.to_lazy()
    var_6 = var_1.to_validation()
    var_1.get_or_else(var_4)


def test_case_19():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_20():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_either()
    var_3 = var_0.ap(bool_1)
    var_1.to_box()


def test_case_21():
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_0.ap(var_2)
    bool_1 = var_1.__eq__(var_3)
    var_4 = var_1.to_either()
    var_5 = var_2.ap(var_4)
    var_6 = var_1.to_box()
    var_7 = var_3.to_box()
    var_8 = var_0.to_lazy()
    bool_0.to_validation()


def test_case_22():
    str_0 = ""
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_validation()
    var_4 = maybe_0.to_validation()
    bool_2 = var_0.__eq__(maybe_1)
    var_5 = maybe_1.to_try()
    var_6 = var_0.map(var_4)
    var_7 = module_1.Generic()
    var_2.bind(var_2)
