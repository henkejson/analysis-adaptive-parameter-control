# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    set_0 = set()
    bytes_0 = b"x\xee(O}\x83R\x84x\t\x94\xa3]\xe4\xdbvT"
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_2 = maybe_1.__eq__(bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.map(set_0)
    var_1.filter(var_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    none_type_1 = None
    none_type_2 = None
    maybe_2 = module_0.Maybe(none_type_2, none_type_2)
    maybe_2.map(none_type_1)


def test_case_5():
    int_0 = 1923
    none_type_0 = None
    str_0 = "All[value={}]"
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(none_type_0)
    var_1 = var_0.ap(int_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    none_type_0 = None
    int_0 = 1423
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"p\x85\xc6\xfa\xa9F,n\x80\xa6\xa9\xca\x05\x1c\xac@bn"
    tuple_0 = (bytes_0,)
    bool_0 = False
    set_0 = {bool_0}
    tuple_1 = (tuple_0, set_0, bool_0)
    int_0 = -2516
    list_0 = [int_0, int_0]
    list_1 = [int_0, list_0, list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, int_0)
    var_0 = maybe_0.filter(tuple_1)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    maybe_1.filter(var_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_1.bind(var_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    int_0 = -841
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(int_0, var_1)
    var_2 = maybe_1.to_box()
    float_0 = 4445.0
    maybe_2 = module_0.Maybe(int_0, float_0)
    var_3 = var_1.to_lazy()


def test_case_14():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_1.to_either()


def test_case_15():
    none_type_0 = None
    bytes_0 = b"K\xa0\x9f\xcd#\xfb)4{\x1c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_16():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    int_0 = 323
    set_0 = {tuple_1, tuple_1, int_0, tuple_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_try()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_19():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, dict_0)
    var_0 = maybe_1.to_box()
    int_0 = -3605
    set_0 = {int_0, int_0, int_0, int_0}
    maybe_2 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_2.bind(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0.bind(var_0)


def test_case_21():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.ap(maybe_0)
    var_4 = var_1.map(var_2)
    var_5 = var_4.get_or_else(bool_1)
    var_6 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_5, var_5)
    var_7 = var_4.to_try()
    var_8 = maybe_0.filter(var_3)
    var_9 = maybe_0.to_either()
    var_10 = var_6.get_or_else(var_2)
    var_11 = var_7.get_or_else(maybe_0)
    var_12 = var_8.to_validation()
    var_13 = var_0.ap(var_8)
    bool_2 = var_11.__eq__(var_8)


def test_case_22():
    none_type_0 = None
    bytes_0 = b"\x93\xf2J<\x0b\x1d\xf8"
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_either()
    str_0 = "<l<q)6]zIzyz_'UDCv<"
    bool_0 = False
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_2.ap(str_0)


def test_case_23():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_2 = True
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.filter(maybe_0)
    var_5 = maybe_0.to_validation()
    bool_3 = var_4.__eq__(var_3)
    maybe_2 = module_0.Maybe(var_5, bool_2)
    var_6 = maybe_1.to_validation()
    var_7 = var_1.to_validation()
    str_0 = "Y"
    var_8 = var_4.get_or_else(bool_2)
    bool_4 = var_1.__eq__(str_0)
    bool_5 = False
    maybe_3 = module_0.Maybe(var_4, bool_5)
    var_9 = maybe_3.to_box()
    bool_6 = maybe_3.__eq__(maybe_1)
    var_10 = maybe_2.to_either()
    var_3.filter(bool_6)
