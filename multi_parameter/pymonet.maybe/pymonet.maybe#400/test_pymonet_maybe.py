# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = module_0.Maybe(var_0, var_0)
    var_2 = maybe_0.filter(bool_0)
    bytes_0 = b"\xa0\x19\xbfT\xb4[\x84~\xc0^"
    bool_1 = True
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    bool_2 = maybe_1.__eq__(var_2)
    int_0 = 0
    maybe_2 = module_0.Maybe(int_0, var_3)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.to_try()
    bytes_0 = b"\xa0\x19\xbfT\xb4\x84~\xc0^"
    bool_1 = True
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    bool_2 = maybe_1.__eq__(var_2)
    int_0 = 0
    maybe_2 = module_0.Maybe(int_0, var_3)


def test_case_4():
    str_0 = "*"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(str_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    bool_2 = False
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(var_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    maybe_1.ap(maybe_1)


def test_case_6():
    str_0 = "|C%(?_#v[Q"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "N`5gfv"
    list_1 = []
    maybe_0 = module_0.Maybe(str_0, list_1)
    maybe_0.bind(list_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.to_try()
    bytes_0 = b"\xa0\x19\xbfT\xb4\x84~\xc0^"
    bool_1 = True
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_4 = maybe_1.ap(var_0)


def test_case_9():
    float_0 = 1560.4471608246201
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    str_0 = "*"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(bool_1)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.get_or_else(var_0)
    var_3 = var_1.filter(var_2)
    var_4 = var_3.to_try()
    bool_2 = maybe_0.__eq__(bool_0)
    var_5 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    float_0 = 1561.875307
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_12():
    str_0 = "(E:FTzDRhck/uQUDwC]"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    str_0 = "Xjv2q2{SIzTksc|PG(?"
    str_1 = "*"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_1, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.bind(var_1)
    dict_0 = {}
    var_3 = var_2.get_or_else(dict_0)
    var_4 = var_2.filter(dict_0)
    var_5 = var_2.to_try()
    bool_2 = maybe_0.__eq__(str_0)
    var_6 = var_2.to_validation()
    var_7 = var_1.ap(var_2)
    none_type_0 = None
    var_8 = var_7.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_9 = maybe_1.to_either()
    var_10 = maybe_1.to_validation()
    maybe_1.filter(var_10)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    none_type_0 = None
    bytes_0 = b"\x93>\xb6\t\xdb\xe8\x8c\xe5\x84\xec`\x88\x0c\xab\xd5s\x01="
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.ap(none_type_0)
    var_3 = var_0.ap(var_2)
    var_4 = var_0.to_either()
    var_2.filter(var_4)


def test_case_16():
    bytes_0 = b"\x0b91\xcb\xd7\xf0\x8f)\xa6\xe4\xc8\xe06\x84\x82"
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(bytes_0)


def test_case_17():
    str_0 = "J\\r*$m}7GF"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    float_0 = 3772.3082
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_0 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_lazy()
    var_3.to_lazy()


def test_case_19():
    float_0 = -1138.0873
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    none_type_2 = None
    maybe_2 = module_0.Maybe(none_type_2, none_type_2)
    bool_2 = maybe_0.__eq__(maybe_2)
    var_1 = maybe_1.map(bool_1)
    var_2 = var_1.to_box()
    maybe_2.filter(var_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.filter(none_type_0)
