# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "v"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "v5e.(q>Bf)HH@"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()


def test_case_3():
    int_0 = 4092
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)


def test_case_4():
    float_0 = -1394.0
    list_0 = [float_0, float_0, float_0]
    complex_0 = -1157.3 + 1912.08j
    none_type_0 = None
    list_1 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(complex_0)
    var_2 = var_1.map(list_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    int_0 = -4334
    bool_1 = True
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_2.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_2.map(var_0)
    maybe_3 = module_0.Maybe(var_0, var_0)
    var_3 = maybe_2.bind(dict_0)
    var_4 = var_3.filter(dict_0)
    var_5 = var_2.to_lazy()
    maybe_4 = module_0.Maybe(var_2, bool_0)
    bool_2 = var_5.__eq__(dict_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    int_0 = -1185
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_0 = True
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    maybe_2.filter(bool_0)


def test_case_9():
    int_0 = -970
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = var_0.to_either()
    var_2.to_either()


def test_case_10():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_box()


def test_case_11():
    none_type_0 = None
    int_0 = 715
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.map(none_type_0)


def test_case_12():
    str_0 = "v5e.(q>Bf)HH@"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    bytes_0 = b"0\xc7\xb2\xfe\xed\xf94\xe0\x00\x9fN\xb1\xe0'\x90("
    var_2.map(bytes_0)


def test_case_13():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = var_1.__eq__(object_0)
    var_1.to_lazy()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    bytes_0 = b"\xb8wu\x82\xd0\x1e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()


def test_case_18():
    bytes_0 = b"\xdb\xc6\x98\xe2+\x97\x08\xe9B\xa6yt\x87\xa1\xff"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.bind(maybe_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_1.to_lazy()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0.get_or_else(bool_1)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(var_1)
    var_3 = var_1.to_box()
    var_2.to_validation()


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_try()
    int_0 = -1875
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_either()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_validation()
    var_4 = var_2.to_box()
    var_5 = maybe_0.to_validation()
    var_4.get_or_else(int_0)
