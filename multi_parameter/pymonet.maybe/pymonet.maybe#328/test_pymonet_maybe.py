# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 2897
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -953
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.ap(var_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = var_0.ap(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_3():
    str_0 = "v"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_validation()
    maybe_1.bind(var_2)


def test_case_4():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    maybe_0.map(generic_0)


def test_case_5():
    bool_0 = True
    bytes_0 = b"_,@\x19d=\xd3\x13\xcb\x80"
    int_0 = 1
    list_0 = [int_0, int_0]
    list_1 = [list_0, list_0, int_0, int_0]
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_box()
    var_1.bind(bool_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_7():
    int_0 = 1568
    none_type_0 = None
    complex_0 = 1418.43 - 274.42656j
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_1.get_or_else(int_0)
    var_2.to_lazy()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_10():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_validation()
    var_3.get_or_else(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_12():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_13():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_14():
    int_0 = -953
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.ap(var_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_3 = maybe_0.filter(var_1)
    var_4 = var_1.ap(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_15():
    str_0 = "All"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_try()
    var_2.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    float_0 = -299.222282
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_lazy()
    var_1.ap(bool_0)


def test_case_18():
    int_0 = -953
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.bind(var_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.map(var_0)
    var_4 = var_2.to_lazy()
    var_5 = var_1.ap(var_1)
    var_6 = maybe_0.map(var_0)
    var_7 = var_6.get_or_else(var_6)
    bool_0 = var_2.__eq__(var_5)
    bool_1 = var_1.__eq__(maybe_0)
    var_8 = var_2.filter(var_4)
    var_9 = var_4.ap(var_5)
    var_10 = var_2.to_box()
    var_11 = maybe_0.get_or_else(int_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    maybe_1.filter(var_11)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    int_0 = 2277
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_3)
    var_1 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(bool_2, var_1)
    var_2 = var_1.to_box()
    var_3 = maybe_2.map(bool_2)
    var_4 = var_1.to_box()
    var_5 = var_3.to_box()
    var_6 = maybe_2.to_either()
    maybe_4 = module_0.Maybe(var_4, var_0)
    var_7 = maybe_2.filter(int_0)
    var_0.to_validation()
