# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x81\xf0\x01\x1e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_1.to_box()


def test_case_3():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.get_or_else(set_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.to_lazy()
    str_0 = " l]E:Aj39qrB"
    bool_0 = True
    maybe_2 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_2.__eq__(var_1)


def test_case_4():
    float_0 = -3538.19147
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(float_0)
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.map(none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    none_type_2 = None
    bool_3 = False
    var_1 = var_0.bind(bool_2)
    var_2 = maybe_0.filter(bool_3)
    maybe_1 = module_0.Maybe(bool_0, none_type_2)


def test_case_6():
    int_0 = 429
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(int_0)


def test_case_7():
    none_type_0 = None
    str_0 = "\n        Take function and applied this function on current box value and returns mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: B\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_8():
    none_type_0 = None
    set_0 = {none_type_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_try()
    maybe_1.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    int_0 = 0
    int_1 = 128
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.map(var_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0.to_box()


def test_case_11():
    int_0 = -5722
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(int_0)
    none_type_0 = None
    int_1 = 2213
    maybe_1 = module_0.Maybe(int_1, int_1)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_validation()
    var_3.get_or_else(none_type_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_0.to_validation()


def test_case_13():
    bytes_0 = b"\xb2\xa0\x05&\xae\x11\x8c\x0end\x97\xcb\x05\xd4\xac\x97\x04\xc5\xe7\xc2"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(bytes_0)


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.map(none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_box()
    var_4 = var_0.to_box()


def test_case_15():
    str_0 = "x(torO2Q6W#"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_either()
    var_1.get_or_else(var_1)


def test_case_17():
    bytes_0 = b"\xe1\x84NRg7\x8ei\xcd\x9f\xf1Cn\x89\x90`\xe0\x94"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.filter(bytes_0)


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_1.bind(var_3)
    var_5 = var_4.get_or_else(var_1)


def test_case_19():
    bytes_0 = b"\xe1\x84NRg7\x8ei\xcd\x9f\xf1Cn\x89\x90`\xe0\x94"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    bool_1 = var_1.__eq__(var_1)
    var_2 = maybe_0.filter(bytes_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, var_0)
    var_3 = var_2.map(maybe_2)
    bool_2 = var_0.__eq__(maybe_2)
    var_4 = maybe_2.bind(var_2)
    var_5 = var_3.to_box()
    var_6 = var_2.ap(var_0)
    var_7 = var_2.to_either()
    var_8 = var_7.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_1.to_box()
