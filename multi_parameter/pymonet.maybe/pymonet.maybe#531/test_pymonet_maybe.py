# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"!\xa6\x9d\xae\xf2W>\xdf\xb9\x19\x1b\x9b\x07\xde/\x92\x11t"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_2)
    var_2.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_validation()
    bool_1 = var_1.__eq__(var_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_3.filter(maybe_1)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = var_0.to_box()
    maybe_1.map(var_3)


def test_case_6():
    str_0 = "i]R}DXb?u yXY5"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    tuple_0 = ()
    var_1 = maybe_0.ap(tuple_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.bind(var_0)
    var_4 = maybe_0.filter(var_2)


def test_case_7():
    bool_0 = True
    bool_1 = bool_0.__eq__(bool_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_validation()
    bool_1 = var_1.__eq__(var_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_3.filter(maybe_1)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_validation()


def test_case_12():
    float_0 = 1053.0499
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_1)
    var_2 = var_1.bind(none_type_0)
    var_2.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.filter(none_type_0)
    var_4 = var_1.ap(var_0)
    var_5 = var_0.map(var_2)
    var_6 = var_3.ap(none_type_0)
    var_7 = var_5.map(var_3)
    var_8 = maybe_0.to_either()
    var_9 = var_7.to_try()
    var_9.ap(var_8)


def test_case_16():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    maybe_1.filter(none_type_0)


def test_case_17():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    maybe_1.filter(none_type_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "\x0bBcv$X1 NF(DH1MLl."
    bool_1 = True
    var_0 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = var_1.to_validation()
    none_type_1 = None
    bool_3 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_3)
    var_4 = var_3.to_box()
    var_5 = maybe_0.filter(var_0)
    var_6 = var_4.to_lazy()
    var_7 = maybe_2.to_lazy()
    maybe_3 = module_0.Maybe(none_type_1, none_type_1)
    var_8 = var_7.to_try()
    var_9 = maybe_2.to_try()
    var_4.filter(var_1)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1302
    bool_1 = maybe_1.__eq__(int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_box()
    bool_2 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bool_1, maybe_1)
    var_3 = var_2.ap(var_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_2.to_validation()
    var_6 = maybe_2.bind(var_0)
    none_type_1 = None
    maybe_1.ap(none_type_1)
