# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\x81"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_0.ap(var_0)


def test_case_3():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(var_0)
    bool_2 = var_0.__eq__(bool_1)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = var_0.ap(var_3)
    var_5 = var_0.filter(var_4)
    var_6 = var_5.to_box()
    var_7 = var_5.to_lazy()
    var_8 = var_5.ap(var_0)
    var_9 = var_3.to_try()
    var_10 = var_1.bind(var_5)
    var_11 = var_10.filter(var_9)
    var_12 = var_0.to_try()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(var_2, tuple_0)
    maybe_1.filter(tuple_0)


def test_case_4():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    bytes_0 = b",\xb5z\xd1\xc9\xa9bp\xdb"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_5():
    bool_0 = False
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.map(bool_0)


def test_case_6():
    none_type_0 = None
    int_0 = 2963
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.filter(none_type_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bytes_0 = b"\x06Oq\xd2\x92\xce\xe9\xe8\xeeY\x06\x1e\xedV!e\xd3\xe2"
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    maybe_0.ap(dict_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bytes_0 = b"\xb3!"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = False
    int_0 = 55
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(bool_0)
    var_1.to_try()


def test_case_12():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bytes_1 = b"\xb9Gb\xd7\xf1"
    var_0.map(bytes_1)


def test_case_13():
    float_0 = -1381.8
    dict_0 = {}
    list_0 = [float_0, dict_0, dict_0]
    list_1 = [list_0]
    list_2 = [list_1]
    dict_1 = {}
    maybe_0 = module_0.Maybe(dict_1, dict_1)
    var_0 = maybe_0.to_either()
    var_0.filter(list_2)


def test_case_14():
    int_0 = 4127
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(var_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_17():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_box()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_1.get_or_else(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"\xb3!"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_1)


def test_case_20():
    complex_0 = 924 + 342.36j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    maybe_1.bind(maybe_0)
