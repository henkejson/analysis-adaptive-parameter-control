# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.bind(none_type_0)
    bool_1 = var_1.__eq__(maybe_1)
    var_2 = maybe_1.map(maybe_1)
    var_3 = var_2.filter(var_0)
    maybe_0.filter(none_type_0)


def test_case_3():
    str_0 = "go<-*w"
    float_0 = -1425.212
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.filter(var_1)
    bool_0 = var_2.__eq__(float_0)
    var_1.to_lazy()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.map(maybe_1)
    var_2 = var_1.filter(var_0)
    maybe_0.filter(none_type_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    maybe_0.map(bool_0)


def test_case_6():
    str_0 = "go<-*w"
    float_0 = -1425.212
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(str_0)
    maybe_1 = module_0.Maybe(var_0, float_0)
    var_1 = maybe_1.to_try()
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_7():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.bind(tuple_0)


def test_case_8():
    int_0 = 804
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(int_0)
    var_2 = var_1.to_either()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(none_type_0)


def test_case_10():
    float_0 = -2256.24
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_either()


def test_case_11():
    float_0 = -2256.24
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.map(var_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = maybe_0.filter(var_3)
    var_5 = maybe_0.ap(maybe_0)


def test_case_13():
    none_type_0 = None
    str_0 = "\\VE{`u:t*.]+9"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.ap(none_type_0)


def test_case_14():
    bool_0 = False
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(bool_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_16():
    bytes_0 = b"2\xabi\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_17():
    bytes_0 = b"\n\xee\x0b\x9b\xd4Fn\xe6\x83\xf4\xd7"
    tuple_0 = (bytes_0,)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()


def test_case_18():
    float_0 = -2256.24
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    tuple_0 = (list_0,)
    int_0 = -4353
    int_1 = 2578
    bool_1 = True
    maybe_0 = module_0.Maybe(int_1, bool_1)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()
    var_1.get_or_else(tuple_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_try()
    var_3 = var_1.to_lazy()
    var_0.to_validation()


def test_case_22():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_0.bind(var_1)
    int_0 = 118
    var_3 = maybe_0.map(int_0)
    var_4 = var_0.filter(none_type_0)
    bool_0 = var_4.__eq__(var_2)
    var_5 = var_2.to_lazy()
    var_6 = var_2.to_try()
    var_7 = var_5.to_validation()
    float_0 = -185.84
    var_8 = var_3.bind(float_0)


def test_case_23():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    generic_0.map(generic_0)
