# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"U\x8d\xbbC\xb7\x1f\x9a\x15\x00\x8c\x9czR"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 1744.4562
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 1
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.bind(int_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.bind(maybe_1)
    var_3 = var_1.map(maybe_0)
    var_4 = var_3.to_try()
    var_5 = maybe_1.bind(none_type_0)
    maybe_0.filter(maybe_1)


def test_case_4():
    float_0 = 181.250896
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_0.map(var_1)
    var_1.to_either()


def test_case_5():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_try()
    maybe_1.map(var_1)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 1
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.bind(int_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.bind(maybe_1)
    var_3 = var_1.map(maybe_0)
    var_4 = var_0.to_validation()
    var_5 = var_3.to_try()
    var_6 = maybe_1.bind(none_type_0)
    var_7 = var_0.ap(var_2)
    var_8 = var_1.to_box()
    maybe_0.filter(maybe_1)


def test_case_8():
    int_0 = -979
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_0.ap(int_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_10():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_12():
    float_0 = 1744.4562
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_13():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\xcf\xa5\x10m\xe9/L\x99\xf7/\xb1"
    tuple_1 = (bytes_0,)
    maybe_1 = module_0.Maybe(var_0, tuple_1)
    var_1 = maybe_1.map(tuple_0)


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()


def test_case_15():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_0.get_or_else(none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 1
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.bind(int_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_0.bind(maybe_1)
    var_3 = var_0.to_validation()
    var_4 = maybe_0.to_try()
    var_5 = maybe_1.bind(none_type_0)
    maybe_0.filter(maybe_1)


def test_case_18():
    bytes_0 = b"U\x8d\xbbC\xb7\x1f\x9a\x15\x00\x8c\x9czR"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.ap(bool_0)
    var_2 = maybe_1.ap(maybe_1)
    bool_3 = maybe_0.__eq__(var_1)
    var_3 = var_1.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.ap(bool_1)
    var_6 = var_2.to_try()
    bool_4 = True
    maybe_3 = module_0.Maybe(bool_3, bool_4)
    var_7 = var_2.filter(var_6)
    var_8 = maybe_2.to_lazy()
