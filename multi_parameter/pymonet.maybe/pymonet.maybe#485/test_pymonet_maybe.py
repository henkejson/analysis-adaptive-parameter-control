# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xf8\xb3]"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_1.bind(var_1)


def test_case_4():
    int_0 = -2030
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(int_0, list_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.get_or_else(bool_1)
    var_0.to_lazy()


def test_case_5():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.map(dict_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_2)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.filter(maybe_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_0, bool_2)
    maybe_2.filter(maybe_2)


def test_case_7():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    bytes_0 = b""
    str_0 = ";&J<XJ"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(bytes_0)


def test_case_9():
    none_type_0 = None
    dict_0 = {}
    bytes_0 = b"\x1e$\x9bz;k\xb5\xb0\xbe-:`1\xd8\x1a\x91\xb6\x1f\xeb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(dict_0)
    bool_0 = var_0.__eq__(none_type_0)


def test_case_10():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.bind(set_0)


def test_case_11():
    int_0 = 86
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.get_or_else(bool_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.get_or_else(int_0)
    var_4 = maybe_1.to_either()
    var_5 = var_0.to_either()


def test_case_12():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    complex_0 = 443.30793 + 1930j
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.get_or_else(maybe_0)
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_14():
    bytes_0 = b"\xae#\x99\xb0 \xc5k\x12\x17%E\x80\xe7\x07\x88"
    set_0 = {bytes_0, bytes_0}
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.filter(set_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_try()
    var_0.bind(none_type_0)


def test_case_16():
    tuple_0 = ()
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(tuple_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.to_try()
    var_3.ap(none_type_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    bool_1 = var_2.__eq__(maybe_0)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_4.bind(var_3)
    var_6 = var_4.filter(var_5)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    maybe_1.filter(var_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_0.filter(maybe_0)


def test_case_20():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_2, bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_4.bind(var_3)
    var_6 = var_4.filter(var_5)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_2, bool_3)
    maybe_2.filter(var_0)
