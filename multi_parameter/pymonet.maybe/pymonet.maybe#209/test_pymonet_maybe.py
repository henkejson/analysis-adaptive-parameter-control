# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_1.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.to_either()
    maybe_1.filter(var_1)


def test_case_3():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.filter(bytes_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_try()
    var_5 = var_4.filter(var_2)
    var_6 = var_1.ap(var_2)
    var_7 = var_1.to_validation()


def test_case_4():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.filter(bytes_0)
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_try()
    var_4 = var_1.to_box()
    bool_1 = var_0.__eq__(var_2)
    maybe_1 = module_1.Maybe(maybe_0, bool_1)
    var_5 = maybe_1.to_lazy()
    var_6 = var_1.to_try()
    maybe_1.map(var_4)


def test_case_5():
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.bind(var_0)
    var_4 = var_0.to_either()
    var_5 = maybe_0.filter(var_4)
    var_0.map(var_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()


def test_case_8():
    list_0 = []
    bool_0 = False
    maybe_0 = module_1.Maybe(list_0, bool_0)
    list_1 = [list_0, maybe_0, bool_0]
    maybe_1 = module_1.Maybe(list_1, bool_0)
    bool_1 = True
    maybe_2 = module_1.Maybe(bool_1, bool_1)
    maybe_0.ap(list_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b"\xa6\x12\xf2_\x94/Ccs\xa6"
    bool_1 = True
    maybe_0 = module_1.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_1.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_11():
    bytes_0 = b"b\xd9A0"
    bytes_1 = b"\xbaK\xe0\xb2\xe0\xa5m0\\([\x01\x00\x03J\x11'\\"
    maybe_0 = module_1.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_try()
    generic_0 = module_0.Generic()
    maybe_1 = module_1.Maybe(generic_0, generic_0)
    var_2 = maybe_1.get_or_else(var_1)
    var_2.to_validation()


def test_case_12():
    int_0 = -1063
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(int_0)
    var_1.filter(maybe_0)


def test_case_13():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bytes_0)
    var_2 = var_1.to_box()
    maybe_1 = module_1.Maybe(bytes_0, bool_1)
    var_3 = maybe_1.to_either()
    var_4 = var_0.to_either()
    maybe_1.filter(var_3)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(maybe_0)


def test_case_15():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bytes_0)
    maybe_1 = module_1.Maybe(bytes_0, bool_1)
    var_2 = maybe_1.to_either()
    var_3 = var_0.to_either()
    maybe_1.filter(var_2)


def test_case_16():
    str_0 = "A.i*8wQRn[6SX/"
    set_0 = {str_0, str_0, str_0}
    bool_0 = True
    tuple_0 = (set_0, set_0, bool_0)
    list_0 = [str_0, str_0, tuple_0, set_0]
    bool_1 = False
    maybe_0 = module_1.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()


def test_case_17():
    bytes_0 = b"\xd8j\xf0N\x04w\x05la\xa6.\x8eEm\xe6\xae\x82\x97"
    maybe_0 = module_1.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(bytes_0)


def test_case_18():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.filter(bytes_0)
    var_2 = var_1.to_try()
    var_3 = var_1.to_box()
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_1.Maybe(maybe_0, bool_1)
    var_4 = var_3.to_validation()
    var_5 = maybe_0.to_box()
    var_6 = maybe_0.to_lazy()
    var_7 = var_0.to_either()
    var_8 = maybe_1.to_try()
    var_9 = maybe_1.to_validation()
    var_10 = var_7.to_lazy()
    maybe_2 = module_1.Maybe(var_6, var_9)
    var_11 = var_0.get_or_else(var_4)


def test_case_19():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.get_or_else(var_1)
    var_5 = var_3.to_try()
    var_6 = var_4.to_try()
    bool_3 = var_4.__eq__(var_5)
    none_type_0 = None
    maybe_1 = module_1.Maybe(var_4, none_type_0)
    var_7 = var_3.to_try()
    var_8 = var_4.to_box()
    var_9 = var_4.to_lazy()
    var_4.filter(var_5)


def test_case_20():
    bytes_0 = b"\xba\xc0w\x83\x9c\xe5\x88\xde\xd1)mD\xec\xe5"
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_0.filter(bytes_0)
    var_4 = maybe_0.to_try()
    var_5 = var_3.to_try()
    var_6 = var_3.to_box()
    bool_2 = var_0.__eq__(var_4)
    maybe_1 = module_1.Maybe(maybe_0, bool_2)
    var_7 = var_3.to_try()
    var_8 = var_6.to_either()
    var_9 = var_3.map(var_8)
    var_10 = var_2.to_either()
    maybe_2 = module_1.Maybe(var_4, bool_2)
    var_11 = var_3.to_try()
    var_12 = maybe_0.to_either()
    var_13 = maybe_1.to_box()
    var_14 = maybe_1.to_either()
    bool_3 = maybe_1.__eq__(var_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.map(bool_1)
