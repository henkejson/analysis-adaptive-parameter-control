# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xc1\xf20%\xc3\xa5Pe\x94\xaaA"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    bool_2 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_2 = maybe_1.to_either()
    var_2.to_either()


def test_case_4():
    bytes_0 = b"\xee)\x8b\x18K+\x04\x10\xed\x95\x1b\x9f\xde\x8f\xd0"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()
    var_3 = var_0.get_or_else(none_type_0)
    bool_1 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_4 = var_2.ap(maybe_1)
    var_5 = var_2.map(var_2)


def test_case_5():
    bool_0 = False
    object_0 = module_1.object()
    bool_1 = False
    maybe_0 = module_0.Maybe(object_0, bool_1)
    maybe_0.map(bool_0)


def test_case_6():
    list_0 = []
    bytes_0 = b"Z\x07\x91wD"
    list_1 = [bytes_0, bytes_0]
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.bind(bool_1)
    maybe_1 = module_0.Maybe(list_1, bool_0)
    var_1 = maybe_1.bind(list_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.to_lazy()


def test_case_7():
    bytes_0 = b"Z\x07\x91wD"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.ap(var_0)
    bool_1 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_1, var_2)
    var_3 = maybe_0.ap(bytes_0)
    var_1.map(maybe_0)


def test_case_8():
    object_0 = module_1.object()
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_validation()


def test_case_10():
    object_0 = module_1.object()
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, object_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(object_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_0.filter(maybe_0)
    maybe_1.filter(object_0)


def test_case_11():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_try()


def test_case_12():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_13():
    str_0 = "\tOLt4e=\\:"
    dict_0 = {str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_14():
    set_0 = set()
    tuple_0 = (set_0,)
    maybe_0 = module_0.Maybe(set_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(tuple_0)
    var_2 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_0.bind(maybe_1)
    var_4 = var_2.ap(maybe_1)
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_box()
    var_7 = var_4.to_box()
    maybe_2 = module_0.Maybe(var_7, var_0)
    var_8 = var_1.bind(var_6)
    var_9 = maybe_1.to_either()
    var_10 = var_6.to_either()
    maybe_1.filter(var_10)


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_2.to_lazy()
    var_1 = maybe_2.to_lazy()


def test_case_16():
    list_0 = []
    bytes_0 = b"Z\x07\x91wD"
    list_1 = [bytes_0, bytes_0]
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.bind(bool_1)
    maybe_1 = module_0.Maybe(list_1, bool_0)
    var_1 = maybe_1.bind(list_0)
    var_2 = maybe_1.to_try()
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_try()
    var_4.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    object_0 = module_1.object()
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, object_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = var_0.to_box()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_0.filter(maybe_0)
    maybe_1.filter(object_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(maybe_0)


def test_case_20():
    bytes_0 = b"\xdc\xcc\xbe\x8cc\xd2\xa4\x9e\x97\x92\x0fY\xb5<-'vR\xec"
    tuple_0 = (bytes_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.bind(none_type_0)


def test_case_21():
    set_0 = set()
    tuple_0 = (set_0,)
    maybe_0 = module_0.Maybe(set_0, tuple_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = maybe_0.ap(tuple_0)
    var_2 = var_0.bind(var_1)
    var_3 = var_0.filter(tuple_0)
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_2)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_6 = var_5.bind(maybe_1)
    var_7 = var_4.ap(maybe_1)
    var_8 = var_1.to_box()
    var_9 = var_0.to_box()
    var_10 = var_7.bind(var_2)
    maybe_2 = module_0.Maybe(var_8, var_2)
    maybe_3 = module_0.Maybe(set_0, var_1)
    var_11 = maybe_1.to_either()
    var_12 = var_11.to_lazy()
    maybe_1.filter(var_12)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.get_or_else(var_1)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_1.to_either()
