# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1.to_either()


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.get_or_else(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_0.filter(maybe_0)
    var_3 = var_2.map(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_4 = var_2.get_or_else(maybe_1)
    var_5 = var_1.get_or_else(bool_0)
    maybe_1.filter(var_0)


def test_case_4():
    complex_0 = 1536.6534 + 2074.87212j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.map(complex_0)


def test_case_5():
    list_0 = []
    int_0 = 2402
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(maybe_0, list_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.ap(list_0)


def test_case_6():
    str_0 = "B//?$l\\a\x0bF|V"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.get_or_else(str_0)
    var_2 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(str_0, str_0)


def test_case_7():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_8():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(set_0)
    maybe_0.filter(var_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = none_type_0.__eq__(var_0)
    var_1 = var_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = var_0.to_either()
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    bytes_0 = b"H\xac\x08\xe9G}T\xdaaR\xaa\x92\xe91j)"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_3.get_or_else(bool_0)


def test_case_11():
    bytes_0 = b"\xd8\x19=\xd1\xbd\x980Y&\xc5\xc7"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "\n    Maybe type is the most common way of representing nothingness (or the null type).\n    Maybe is effectively abstract and has two concrete subtypes: Box (also Some) and Nothing.\n    "
    tuple_0 = (str_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(dict_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.get_or_else(var_0)
    bool_1 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(bool_1, var_0)
    var_2 = var_0.to_box()
    var_3 = var_0.filter(maybe_1)
    var_4 = var_0.to_lazy()
    var_5 = var_3.map(maybe_0)
    maybe_2 = module_0.Maybe(var_4, none_type_0)
    var_6 = maybe_0.to_validation()
    var_7 = var_3.get_or_else(maybe_2)
    var_8 = var_1.get_or_else(bool_0)
    maybe_2.filter(var_0)


def test_case_14():
    bytes_0 = b"'\xad\x9e\xfe>"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_1.filter(var_1)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.get_or_else(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_3 = var_0.to_either()
    maybe_1.filter(var_0)


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = maybe_1.__eq__(var_0)
    maybe_2 = maybe_1.bind(var_0)
    var_1 = maybe_0.map(bool_1)
    var_2 = var_0.to_box()
    var_3 = var_0.filter(maybe_2)
    str_0 = "yTM\n4L0j\\"
    var_4 = var_1.get_or_else(str_0)
    var_5 = var_3.to_lazy()
    var_4.to_try()


def test_case_17():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_2 = maybe_0.to_validation()
    bool_0 = False
    maybe_2 = module_0.Maybe(list_0, bool_0)
    var_3 = var_2.to_box()
    var_4 = maybe_1.bind(var_2)
    var_5 = var_4.to_either()
    var_6 = var_0.to_either()
    var_7 = maybe_1.filter(var_5)
    var_8 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(bool_0, var_6)
    var_9 = maybe_2.to_try()
    var_10 = maybe_2.get_or_else(var_3)
    maybe_2.bind(none_type_0)


def test_case_18():
    complex_0 = 1536.6534 + 2074.87212j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.ap(complex_0)


def test_case_19():
    bytes_0 = b"\x9b\t\xedS\x8du{\xaf\xdb\xfb\xbeb:"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_try()
    var_2.to_either()


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_1 = maybe_1.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_1, var_0)
    var_1 = var_0.to_box()
    var_2 = var_0.filter(maybe_2)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = var_4.to_either()
    var_6 = var_2.map(maybe_0)
    maybe_3 = module_0.Maybe(var_3, none_type_0)
    var_7 = maybe_0.to_validation()
    var_8 = var_2.get_or_else(maybe_3)
    var_9 = var_2.map(maybe_1)
    var_10 = var_1.to_try()
    var_11 = maybe_1.get_or_else(bool_0)
    maybe_3.filter(var_0)


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1.get_or_else(none_type_0)
