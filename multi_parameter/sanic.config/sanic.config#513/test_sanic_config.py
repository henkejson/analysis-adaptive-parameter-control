# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.update_config(config_1)
    config_2 = module_0.Config(keep_alive=config_1, converters=none_type_0)
    config_2.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    var_0.respond(var_0)


def test_case_3():
    str_0 = "+[~qDXs`SzR\t\x0bH"
    module_0.Config(str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.update_config(config_1)
    bytes_0 = b"Payment Required"
    module_0.Config(env_prefix=config_1, keep_alive=bytes_0, converters=var_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.respond(config_0)


def test_case_9():
    str_0 = "L.4Ck@Il"
    config_0 = module_0.Config(converters=str_0)


def test_case_10():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.__setitem__(config_0, str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "httponly"
    config_1 = module_0.Config()
    none_type_1 = config_0.register_type(config_0)
    config_1.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "httponly"
    module_0.Config(converters=str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_1)


def test_case_14():
    none_type_0 = None
    str_0 = "j3 \re'|4a"
    bool_0 = False
    str_1 = "D*/Jj>I4\\Hh"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: bool_0, str_1: none_type_0, str_2: none_type_0}
    module_0.Config(dict_0, keep_alive=none_type_0, converters=none_type_0)
