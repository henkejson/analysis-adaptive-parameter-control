# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    none_type_1 = None
    var_0 = module_1.isdatadescriptor(none_type_1)
    config_0 = module_0.Config(keep_alive=var_0, converters=none_type_0)
    var_0.respond(none_type_0)


def test_case_2():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    str_0 = "g-0"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.respond(none_type_0)


def test_case_4():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "CZbt=z-c!i\x0bR1O\r;JH^;"
    none_type_0 = None
    module_0.Config(str_0, keep_alive=none_type_0)


def test_case_8():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_9():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    var_0 = config_0.update_config(config_0)
    var_0.respond(none_type_0)


def test_case_10():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    module_0.Config(converters=bool_0)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    var_0 = module_1.getmembers(bool_0)
    str_0 = "+UHRb<.\t:e\nAQ  Lx\x0b"
    module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0, converters=str_0)


def test_case_13():
    bool_0 = False
    str_0 = "G"
    default_0 = module_2.Default()
    var_0 = default_0.__repr__()
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=var_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)
