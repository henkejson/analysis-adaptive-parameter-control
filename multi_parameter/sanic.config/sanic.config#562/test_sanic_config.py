# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_1 = module_1.getmembers(var_0)
    config_0 = module_0.Config(converters=var_1)


def test_case_2():
    int_0 = 5177
    module_0.Config(int_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    str_0 = "d01"
    config_1.update_config(str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = none_type_0.__bool__()
    config_1 = module_0.Config()
    var_1 = config_1.update_config(config_0)
    config_1.__getattr__(config_0)


def test_case_10():
    str_0 = "P"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_2)
    var_0 = config_1.update_config(config_1)
    config_0.register_type(none_type_2)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "!sMvxI$2"
    none_type_1 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    config_2 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_2.__setitem__(str_1, none_type_1)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "[/4d5; "
    dict_0 = {str_0: none_type_1, str_1: str_0, str_0: str_0}
    module_0.Config(dict_0, none_type_0)
