# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2
import sanic.http.http1 as module_3
import sanic.utils as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    object_0 = module_1.object()
    config_0 = module_0.Config(keep_alive=object_0)
    bool_0 = True
    var_0 = module_2.getmembers(bool_0)
    var_0.load_environment_vars()


def test_case_2():
    dict_0 = {}
    config_0 = module_0.Config(dict_0, dict_0)
    module_3.Http(dict_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "Version prefix for the Blueprint Group.\n\n        Returns:\n            str: Version prefix for the Blueprint Group.\n        "
    list_0 = [config_0, str_0]
    module_4.load_module_from_file_location(config_0, str_0, *list_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_5():
    bytes_0 = b'\xacn"e\x9a'
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(bytes_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    var_0 = module_2.isdatadescriptor(none_type_0)
    var_1 = var_0.__bool__()
    tuple_0 = (var_0, var_1)
    module_0.Config(converters=tuple_0)


def test_case_8():
    bytes_0 = b"\x01\xff\xa5\x1a\xc2\x97tQwN"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    config_0 = module_0.Config()
    config_0.__getattr__(list_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b"\xc8\x8c\xf86\x181\xc3W\xaa\xea!v\xc0\x14"
    str_0 = "bp\t&\r\r"
    str_1 = "I\x0cN=\r>]i7SfoP6"
    none_type_0 = config_0.__setitem__(str_1, str_1)
    module_4.load_module_from_file_location(bytes_0, str_0)


def test_case_10():
    bytes_0 = b'\xacn"e\x9a'
    str_0 = "_converters"
    set_0 = {bytes_0, bytes_0}
    config_0 = module_0.Config(env_prefix=str_0, converters=set_0)
    config_0.update_config(bytes_0)


def test_case_11():
    bytes_0 = b'\xacn"e\x9a'
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=bytes_0, converters=bytes_0)
    none_type_1 = config_0.register_type(bool_0)
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    var_0 = config_1.load_environment_vars()
    object_0 = module_1.object()
    var_1 = config_1.load_environment_vars()
    var_0.respond(object_0)


def test_case_12():
    object_0 = module_1.object()
    str_0 = "~*$IRH:AB?"
    module_0.Config(str_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)
