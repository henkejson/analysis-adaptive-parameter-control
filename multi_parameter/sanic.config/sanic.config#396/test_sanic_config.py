# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Too Many Requests"
    module_0.Config(env_prefix=bytes_0, converters=bytes_0)


def test_case_2():
    bool_0 = False
    str_0 = "sE?k'Dbe@\x0cM2.9"
    config_0 = module_0.Config(bool_0, str_0, bool_0)


def test_case_3():
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()
    module_0.Config(var_0, converters=var_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    int_0 = 831
    config_0 = module_0.Config(keep_alive=int_0)
    none_type_0 = None
    var_0 = module_2.isclass(config_0)
    var_1 = var_0.__bool__()
    none_type_1 = config_0.register_type(var_1)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    int_0 = 855
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=int_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_8():
    bytes_0 = b"\n\xab\xc1\x91\xe6*\xdd\xab\xaf\xe0\xfd"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.__instancecheck__(config_0, config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    str_0 = "P"
    var_1 = config_0.load_environment_vars(str_0)
    config_0.update_config(var_0)


def test_case_12():
    str_0 = "PH@=\n.%"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.__getattr__(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "sE?k'Dbe@\x0cM2.9"
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    var_1 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = "P"
    config_0.load_environment_vars(str_0)
