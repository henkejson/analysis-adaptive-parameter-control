# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import abc as module_2
import inspect as module_3
import sanic.errorpages as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "--reload-dir"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_0.__setitem__(var_0, var_0)


def test_case_2():
    str_0 = ",+@78A"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(config_0)
    module_1.load_module_from_file_location(str_0, var_0, **config_0)


def test_case_3():
    str_0 = ",+@78A"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_4():
    str_0 = ",+@78A"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.register_type(str_0)
    str_1 = "W)-($t3w.K\x0c0@j[$o2-"
    none_type_1 = config_0.__setitem__(str_1, str_0)
    none_type_2 = None
    module_1.load_module_from_file_location(str_0, none_type_2, **config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ",+@78A"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = config_0.update()
    config_0.update_config(str_0)


def test_case_7():
    str_0 = ",+@7kA"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=str_0)
    str_1 = "SNIC_NO_UVLOOP"
    none_type_1 = config_0.__setattr__(str_1, none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.update()
    module_2.ABCMeta()


def test_case_8():
    bytes_0 = b"(sF\xe2\xdb\xd8\x125\x10/\x89\x16\xcaMd\xda\xfe\xd0"
    var_0 = module_3.isclass(bytes_0)
    var_1 = module_0.Config(env_prefix=var_0, keep_alive=var_0, converters=var_0)
    module_4.check_error_format(bytes_0)


def test_case_9():
    str_0 = ",+@78A"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.__getattr__(config_0)


def test_case_10():
    bytes_0 = b"No Content"
    module_0.Config(converters=bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)
