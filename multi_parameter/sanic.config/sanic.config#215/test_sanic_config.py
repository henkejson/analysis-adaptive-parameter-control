# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G2H^+&J5A"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(none_type_0)


def test_case_2():
    bytes_0 = b"\x93\x1ff2\rr\xb4\xb5\x1dQ"
    str_0 = "read"
    var_0 = module_1.isclass(bytes_0)
    var_1 = var_0.__bool__()
    var_2 = module_1.isclass(str_0)
    config_0 = module_0.Config(var_0, keep_alive=var_1)
    var_2.__setattr__(var_2, str_0)


def test_case_3():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_4():
    str_0 = "xi"
    module_0.Config(str_0)


def test_case_5():
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, converters=none_type_0)
    module_2.Http(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "before_reload_trigger"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_9():
    bytes_0 = b"Uo}QY\x9c\xe8/\x10\xa88H\xc5>\xd6"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(bytes_0)


def test_case_10():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = []
    config_0.__getattr__(list_0)


def test_case_12():
    str_0 = "G"
    module_0.Config(env_prefix=str_0, converters=str_0)
