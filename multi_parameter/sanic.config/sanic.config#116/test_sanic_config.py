# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = -839
    str_0 = "\tFD9gm0)J^5"
    config_0 = module_0.Config(keep_alive=int_0)
    none_type_0 = config_0.register_type(str_0)
    module_0.DescriptorMeta(str_0)


def test_case_2():
    int_0 = -3358
    var_0 = module_1.getmembers(int_0)
    str_0 = "'&6(kJz"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    bytes_0 = b"K"
    var_0.__setattr__(bytes_0, str_0)


def test_case_3():
    str_0 = "*;?yUn-\x0cM;>u//~H3sg&"
    str_1 = "zzh$W\x0c7S!%JzNH_Su9p"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=str_0, converters=none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(bool_0, bool_0)
    config_0.__getattr__(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "(Vn"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "L>.i}yNC"
    config_0.update_config(str_0)


def test_case_14():
    bytes_0 = b"Mg7d\xd6Z\x17\xfaN"
    config_0 = module_0.Config(converters=bytes_0)
    none_type_0 = None
    var_0 = config_0.load_environment_vars()
    none_type_1 = config_0.update(**config_0)
    module_0.DescriptorMeta(none_type_0)
