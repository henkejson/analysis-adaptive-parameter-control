# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=none_type_0, converters=config_0)


def test_case_2():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    float_0 = -3939.915803
    module_0.Config(float_0)


def test_case_5():
    config_0 = module_0.Config()
    module_1.Http(config_0)


def test_case_6():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    var_1.respond(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    str_0 = "qfhEfQVEM\n"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    var_1 = config_0.update_config(config_0)
    var_2 = config_0.load_environment_vars()
    var_3 = module_2.isdatadescriptor(var_1)
    str_0 = "LOCAL_CERT_CREATOR"
    bool_0 = False
    config_0.__setattr__(str_0, bool_0)


def test_case_14():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(env_prefix=str_0, converters=config_0)


def test_case_15():
    str_0 = "S"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "hlvl"
    str_3 = "MOTD"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_1}
    module_0.Config(dict_0)
