# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xb9Q\xeb\x0bSE\x88r"
    var_0 = module_1.getmembers(bytes_0)
    config_0 = module_0.Config(converters=var_0)


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)


def test_case_3():
    bytes_0 = b"\xb9Q\xeb\x0bSE\x88r"
    var_0 = module_1.getmembers(bytes_0)
    module_0.Config(env_prefix=var_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = module_1.isclass(config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    config_1.__setitem__(config_1, none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(none_type_0)


def test_case_9():
    bytes_0 = b"\xb9Q\xeb\x0bSE\x88r"
    none_type_0 = None
    module_0.Config(bytes_0, converters=none_type_0)


def test_case_10():
    bytes_0 = b"\xb9Q\xeb\x0bSE\x88r"
    str_0 = "GRACEFUL_SHUTDOWN_TIMEOUT"
    str_1 = "http.lifecycle.complete"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1, str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=bytes_0)
    config_0.update_config(bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_1)
    config_0.register_type(var_1)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = " QZv*"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    module_0.DescriptorMeta(var_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=var_0)
    none_type_0 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_1)
    var_2 = module_1.getmembers(config_0)
    var_2.register_type(var_1)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=var_0)
    none_type_0 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.update(*list_0)
    str_0 = "{U/oPH};ceS2[3"
    var_0.__setattr__(str_0, var_0)


def test_case_17():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=var_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, var_0)
    none_type_1 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)
    none_type_2 = config_0.register_type(var_1)
    none_type_3 = config_0.register_type(var_0)
    none_type_4 = config_0.update(*list_0)
    dict_0 = {}
    config_2 = module_0.Config(dict_0, none_type_2, config_0)
    config_0.update_config(var_0)


def test_case_18():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)
