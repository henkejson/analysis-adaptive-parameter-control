# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    var_0 = config_1.update_config(config_0)


def test_case_2():
    list_0 = []
    config_0 = module_0.Config(env_prefix=list_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    str_0 = "\n\t"
    var_0 = module_1.isclass(str_0)
    var_1 = var_0.__bool__()
    bytes_0 = b"\xb7\xc8F\xa4\x1fe\x8e\x05k\x90\xe8\xdd\x17,\xac\x96X"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bytes_0)


def test_case_5():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "H"
    bool_0 = True
    module_0.Config(config_0, str_1, bool_0, converters=config_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = False
    config_0.__getattr__(bool_1)


def test_case_9():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_10():
    str_0 = "[BECqsxL@_"
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(keep_alive=none_type_1)
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1.__getattr__(config_0)


def test_case_11():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    none_type_1 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(env_prefix=none_type_1)
    var_1 = config_1.update_config(config_0)
    config_0.register_type(var_1)


def test_case_12():
    str_0 = ".iET5y<5"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config(config_0, var_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_1, str_1)
