# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2
import sanic.utils as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_0)


def test_case_2():
    default_0 = module_1.Default()
    config_0 = module_0.Config()
    var_0 = module_2.isdatadescriptor(default_0)
    config_1 = module_0.Config(config_0)
    module_3.load_module_from_file_location(var_0, *var_0, **config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "G"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "\t/obIF,"
    config_1 = module_0.Config(none_type_0)
    config_2 = module_0.Config(env_prefix=none_type_0, keep_alive=config_0)
    config_2.update_config(str_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    none_type_0 = None
    str_0 = "\t/obIF,"
    config_0 = module_0.Config(none_type_0, str_0, converters=str_0)
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "519#0k>y!1]"
    module_0.Config(none_type_0, str_0, converters=str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    none_type_2 = config_0.update()
    str_0 = "=mWLl"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {var_0: none_type_0, str_0: var_0, str_1: var_0, str_0: none_type_1}
    module_0.Config(dict_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = module_2.isclass(none_type_0)
    str_0 = "_"
    config_1 = module_0.Config(env_prefix=str_0)
    var_0.__subclasscheck__(config_0, str_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_2 = module_0.Config()
    none_type_2 = config_0.update()
    none_type_3 = config_2.update()
    config_3 = module_0.Config(var_0)
    str_0 = "G"
    var_1 = module_2.getmembers(none_type_0)
    config_0.load_environment_vars(str_0)
