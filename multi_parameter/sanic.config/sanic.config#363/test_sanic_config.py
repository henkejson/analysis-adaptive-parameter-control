# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Unauthorized"
    module_0.Config(env_prefix=bytes_0, keep_alive=bytes_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = "Y Ru9inT "
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_1.update_config(config_0)
    var_0.update_config(config_1)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    config_0.init_for_request()


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "Y Ru9inT "
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=none_type_0)
    dict_0 = {var_0: none_type_0, var_0: none_type_0}
    config_2.update(**dict_0)


def test_case_9():
    default_0 = module_2.Default()
    list_0 = [default_0, default_0, default_0]
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    bool_0 = False
    module_0.Config(keep_alive=bool_0, converters=list_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(converters=bool_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "; Routing "
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.register_type(str_0)
    none_type_2 = config_0.update()
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, config_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_0.update_config(none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = None
    none_type_2 = config_0.update(**config_0)
    config_1 = module_0.Config(config_0, converters=config_0)
    config_2 = module_0.Config(none_type_1, none_type_0, var_0)
    config_1.update_config(none_type_1)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    config_0.__setattr__(var_0, none_type_0)
