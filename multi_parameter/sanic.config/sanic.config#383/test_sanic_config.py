# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ":"
    str_1 = "M!(lF"
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_1, keep_alive=bool_0, converters=none_type_0
    )
    config_0.update_config(str_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0]
    str_0 = "KK9Sb"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    none_type_1 = config_0.update(*list_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0]
    none_type_0 = config_0.update(*list_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    var_1 = config_0.update_config(config_0)
    config_0.update_config(none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "E'g50Ik,Z^p0`m1[uT"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    none_type_1 = None
    config_1 = module_0.Config(keep_alive=none_type_1, converters=config_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_1)


def test_case_9():
    str_0 = "`7\\w^\x0c."
    module_0.Config(str_0, str_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = config_0.load_environment_vars()
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = None
    var_1 = config_0.update_config(config_0)
    config_0.update_config(none_type_2)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.register_type(config_0)
    config_0.register_type(none_type_1)


def test_case_12():
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = "INSPECTOR"
    str_2 = "aC"
    str_3 = "M 3/tU|1Qxnd@3d#"
    dict_1 = {str_1: str_1, str_1: str_1, str_2: str_1, str_3: str_1}
    config_0 = module_0.Config(dict_1)
    config_0.update_config(dict_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0]
    none_type_0 = config_0.update(*list_0)
