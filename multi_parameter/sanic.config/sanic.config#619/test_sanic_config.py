# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    str_0 = "<j|g@h0"
    config_0 = module_0.Config(converters=str_0)
    module_1.check_error_format(none_type_0)


def test_case_2():
    str_0 = '"!2|c0/\\^L|e*mP\x0b'
    list_0 = [str_0]
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    config_0.update_config(list_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_4():
    bytes_0 = b"\xa4r~\x14\t\xb8\xe4W\xe5\xb7\x8c\x88~\x1b\xb2\xa1"
    module_0.Config(env_prefix=bytes_0, converters=bytes_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config(bool_0)
    list_0 = []
    config_0.update_config(list_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_12():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.load_environment_vars(str_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
