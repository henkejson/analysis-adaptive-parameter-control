# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    complex_0 = 1180.5135 - 628j
    module_0.Config(converters=complex_0)


def test_case_2():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(str_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_1.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1.respond(none_type_1)


def test_case_3():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.getmembers(config_0)


def test_case_4():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(str_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_1.register_type(none_type_0)
    var_0 = config_1.update_config(config_1)
    config_0.load_environment_vars(str_0)


def test_case_5():
    local_cert_creator_0 = module_2.LocalCertCreator.TRUSTME
    bool_0 = False
    var_0 = module_0.Config(env_prefix=local_cert_creator_0, keep_alive=bool_0)
    var_0.__subclasscheck__(local_cert_creator_0, local_cert_creator_0)


def test_case_6():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    float_0 = 1424.056774
    module_0.Config(float_0)


def test_case_8():
    str_0 = "\n        Process a list of incoming events.\n        "
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = ""
    bytes_0 = b"J\xaf\x16\xf8!\x15\xc3\x0c\x13eY\xc05bY\xf1\xbb\x82\x82"
    module_0.Config(str_0, converters=bytes_0)


def test_case_11():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_12():
    str_0 = ""
    bytes_0 = b"J\xaf\x16\xf8\xc3\x0c\x13eY\xc05bY\xbb\x82\x82"
    none_type_0 = None
    config_0 = module_0.Config(str_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.update_config(bytes_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    var_0.update_config(var_0)


def test_case_14():
    str_0 = ""
    none_type_0 = None
    config_0 = module_1.getmembers(none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.__getattr__(config_1)


def test_case_15():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(str_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_1, config_0)
