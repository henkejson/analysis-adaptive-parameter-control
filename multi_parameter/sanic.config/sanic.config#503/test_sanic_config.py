# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    dict_0 = {}
    config_0 = module_0.Config(dict_0, keep_alive=dict_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_3():
    set_0 = set()
    config_0 = module_0.Config(set_0)
    none_type_0 = None
    module_1.load_module_from_file_location(config_0, none_type_0, *set_0, **config_0)


def test_case_4():
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=dict_0, converters=none_type_0
    )
    config_0.__getattr__(dict_0)


def test_case_5():
    none_type_0 = None
    str_0 = "-v"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    str_0 = "-v"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(config_0, str_0, none_type_0)
    none_type_1 = config_0.__setattr__(str_0, none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    bytes_0 = b"\xd5\xf7\x9c\xca\xaf`\xee\x0f\x83\xb4\x04\xe4\x0b\x8a\x9d\x9b\xc5\xdd"
    config_1 = module_0.Config(keep_alive=bytes_0)


def test_case_11():
    float_0 = 985.0
    module_0.Config(converters=float_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    str_0 = "/M]xw__L.l@<W+S#~,3K"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    none_type_1 = config_0.register_type(config_0)
    bytes_0 = b"\xd5\xf7\x9c\xca\xaf`\xee\x0f\x83\xb4\x04\xe4\x0b\x8a\x9d\x9b\xc5\xdd"
    config_0.update_config(bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    none_type_1 = None
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=none_type_1)
    var_1 = var_0.__bool__()
    var_2 = var_0.__repr__()
    str_0 = "/M]xw__L.l@<W+S#~,3K"
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    none_type_3 = config_1.update()
    config_0.register_type(config_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=var_0, converters=config_0)
    var_0.init_for_request()
