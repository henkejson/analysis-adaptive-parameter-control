# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "b?52<{OV_[q\x0c \n"
    dict_0 = {str_0: str_0}
    module_0.Config(dict_0, dict_0)


def test_case_2():
    config_0 = module_0.Config()
    bool_0 = False
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.register_type(bool_0)
    var_0 = module_1.getmembers(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    str_0 = "9q#$',\\v"
    str_1 = "?,K"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.Stream(**dict_0)


def test_case_5():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    bool_0 = False
    none_type_1 = config_0.register_type(bool_0)
    module_0.Config(env_prefix=list_0, keep_alive=bool_0, converters=none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "{\nFT*rK4R4@*_E !yzMJ"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    bool_0 = False
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.register_type(bool_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    complex_0 = -1090.9 + 698.9j
    none_type_0 = config_0.register_type(complex_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    local_cert_creator_0 = module_3.LocalCertCreator.TRUSTME
    config_0.update_config(local_cert_creator_0)


def test_case_12():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    bool_0 = False
    none_type_1 = config_0.register_type(bool_0)
    module_0.Config(none_type_1, keep_alive=bool_0, converters=list_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_0, none_type_0)
