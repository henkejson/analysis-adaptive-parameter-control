# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = 1834.0
    tuple_0 = (float_0,)
    module_0.Config(env_prefix=tuple_0)


def test_case_2():
    str_0 = "8%e\\"
    str_1 = "<gXO!++i30"
    str_2 = "from httpx import Client"
    str_3 = "\n        Force close the connection.\n        "
    dict_0 = {str_0: str_0, str_1: str_2, str_3: str_1, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    bool_0 = True
    float_0 = -1332.72056
    var_0 = module_1.isdatadescriptor(bool_0)
    var_0.__instancecheck__(float_0, float_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    int_0 = -200
    config_0 = module_0.Config()
    config_0.update_config(int_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_1.update_config(config_1)


def test_case_6():
    str_0 = "Q|L$gjB]*A'X(@r\rD"
    int_0 = 1000
    config_0 = module_0.Config(keep_alive=int_0, converters=str_0)
    config_0.update_config(int_0)


def test_case_7():
    dict_0 = {}
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_0.__getattr__(dict_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = module_1.getmembers(none_type_0)
    config_0.__setitem__(var_0, none_type_0)


def test_case_9():
    str_0 = "Q|L$gjB]*A'X(@r\rD"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_11():
    str_0 = "Q|L$gjU]*AXX(@r\rD"
    none_type_0 = None
    module_0.Config(none_type_0, keep_alive=none_type_0, converters=str_0)


def test_case_12():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.load_environment_vars(str_0)
