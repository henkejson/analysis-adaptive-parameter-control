# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Cz5/c\x0bM3\t/E|}N-Oha"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    var_1 = module_1.isclass(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    config_3 = module_0.Config(config_2, keep_alive=config_2)
    var_0 = module_1.isclass(config_0)
    config_0.load_environment_vars(config_2)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "E,67"
    str_1 = "E11KlP@:d/:\rjJ;a"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update()
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, converters=none_type_1)
    config_2 = module_0.Config(config_0, converters=config_1)
    var_0 = config_2.load_environment_vars()
    list_0 = [var_0, str_1, var_0, str_0]
    config_1.load_environment_vars(list_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "INSPECTOR_PORT"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_0.__getattr__(none_type_0)


def test_case_8():
    str_0 = "SANIC_"
    str_1 = "E11KlP@:d:\rjJa"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_1)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    var_1 = config_0.update_config(config_0)
    config_1.__setitem__(var_1, var_1)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=config_1, converters=config_0)
    module_0.DescriptorMeta(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=config_1, converters=config_0)
    config_3 = module_0.Config(keep_alive=var_0)
    bool_0 = False
    config_4 = module_0.Config(keep_alive=bool_0, converters=var_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_2.__setattr__(str_0, config_3)
