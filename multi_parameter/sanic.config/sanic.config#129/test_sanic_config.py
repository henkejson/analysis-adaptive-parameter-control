# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(none_type_0, var_0, var_0)
    config_1.update_config(none_type_0)


def test_case_2():
    str_0 = "--noisy-exceptions"
    config_0 = module_0.Config(keep_alive=str_0)
    str_1 = '[fgP17n"d'
    bool_0 = False
    config_1 = module_0.Config(config_0, keep_alive=bool_0)
    config_0.update_config(str_1)


def test_case_3():
    config_0 = module_0.Config()
    module_2.Http(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_7():
    int_0 = -339
    config_0 = module_0.Config()
    str_0 = '[fgP17n"d'
    bool_0 = False
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.update_config(int_0)


def test_case_8():
    config_0 = module_0.Config()
    bytes_0 = b"\xa6\xd8\xa3"
    none_type_0 = config_0.register_type(bytes_0)
    none_type_1 = None
    var_0 = module_1.getmembers(none_type_1)
    none_type_2 = None
    default_0 = module_1.getmembers(none_type_2)
    var_1 = default_0.__repr__()
    var_2 = var_1.__repr__()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.update()
    none_type_2 = config_0.register_type(config_0)
    none_type_3 = config_0.register_type(none_type_1)
    config_0.register_type(none_type_2)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    str_0 = '8AxCk@Mn\x0c\\|xj"_e-9'
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = config_0.update()
    none_type_3 = None
    none_type_4 = config_0.register_type(none_type_3)
    config_0.register_type(none_type_4)


def test_case_11():
    complex_0 = 3838.19 + 1942.99268j
    module_0.Config(converters=complex_0)


def test_case_12():
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0, converters=config_0)
