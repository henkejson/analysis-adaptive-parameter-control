# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_4():
    str_0 = "\x0b*]r@rh~7H!I3<@s"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_0.head_response_ignored(none_type_1, none_type_1)


def test_case_5():
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_6():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0, bool_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0}
    config_0 = module_0.Config(keep_alive=bool_0, converters=set_0)
    bool_1 = False
    config_1 = module_0.Config(env_prefix=bool_1)
    config_2 = module_0.Config(config_1)
    var_0 = module_1.getmembers(config_2, bool_1)
    config_1.update_config(bool_1)


def test_case_10():
    str_0 = "No Sanic apps have been registered."
    none_type_0 = None
    config_0 = module_0.Config()
    module_0.Config(none_type_0, none_type_0, config_0, converters=str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.register_type(bool_0)
    config_0.update_config(bool_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    var_1 = module_1.getmembers(config_1)
    bytes_0 = b"=\x87z\xbb\x89l\x92\xdaO=~o\xa6"
    config_0.update_config(bytes_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)
