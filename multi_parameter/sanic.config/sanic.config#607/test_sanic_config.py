# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b""
    none_type_0 = None
    none_type_1 = None
    var_0 = module_1.getmembers(none_type_1)
    var_1 = var_0.__repr__()
    var_1.__subclasscheck__(bytes_0, none_type_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    list_0 = []
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0.__setitem__(var_0, list_0)


def test_case_3():
    config_0 = module_0.Config()
    descriptor_meta_0 = module_1.getmembers(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_1)
    config_0.__getattr__(config_0)


def test_case_5():
    str_0 = "comment"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_6():
    str_0 = "C~ZkQAE41=yTGF "
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    var_0 = module_1.getmembers(none_type_0)
    config_0.respond(none_type_0)


def test_case_7():
    bytes_0 = b"OK"
    module_0.Config(bytes_0, converters=bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    stream_0 = module_2.Stream()
    config_0 = module_0.Config()
    config_0.update_config(stream_0)


def test_case_10():
    config_0 = module_0.Config()
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)
    config_0.update_config(none_type_0)


def test_case_11():
    str_0 = '7\r1:\tw\x0b/K"f\\`hevZT'
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setitem__(str_0, dict_0)
    none_type_1 = None
    config_0.__setattr__(none_type_1, none_type_1)


def test_case_12():
    bool_0 = True
    str_0 = "$]'`%k\x0bM pAEHS"
    str_1 = "LOCAL_CERT_CREATOR"
    str_2 = "touchup"
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: bool_0, str_0: str_2}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(dict_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = True
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_1)


def test_case_14():
    str_0 = "1/\r+X"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_0.Config(dict_0)


def test_case_15():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
