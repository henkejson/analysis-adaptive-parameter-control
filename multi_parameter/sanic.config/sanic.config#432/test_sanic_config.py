# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, none_type_0)
    none_type_1 = config_0.register_type(config_1)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    bool_0 = False
    config_0.__getattr__(bool_0)


def test_case_5():
    str_0 = "MeZ=3/c`{ayU<!xp"
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.update()
    config_1 = module_0.Config(converters=str_0)
    config_1.__getattr__(config_1)


def test_case_6():
    str_0 = "MeZ=3/c`{ayU<!xp"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_1 = module_0.Config(config_0, converters=str_0)
    bool_0 = True
    none_type_0 = None
    none_type_1 = config_1.register_type(none_type_0)
    config_1.update_config(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__setitem__(str_0, str_0)


def test_case_10():
    str_0 = "MeZ=3/c`{ayU<!xp"
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(bool_0)
    var_0 = module_1.isclass(bool_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "MeZ=3/c`{ayU<!xp"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config()
    none_type_1 = None
    config_2 = module_0.Config(env_prefix=none_type_1)
    none_type_2 = config_1.register_type(str_0)
    config_1.register_type(str_0)


def test_case_12():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "\t1ZB$2!@*Of2 1h\"}R'S"
    str_2 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_0}
    module_0.Config(dict_0)


def test_case_14():
    str_0 = "L"
    none_type_0 = None
    module_0.Config(none_type_0, str_0, converters=str_0)
