# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    int_0 = 307
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(dict_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    bytes_0 = b"Unsupported Media Type"
    module_0.Config(converters=bytes_0)


def test_case_6():
    str_0 = ")RBoSZBT!X@>a!~[-\t!"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config()
    none_type_1 = config_0.register_type(config_0)
    none_type_2 = config_1.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_1)
    config_0.register(str_0, none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    bytes_0 = b'"Q{\x0e=\xd5\xb8'
    config_0.update_config(bytes_0)


def test_case_8():
    bytes_0 = b"Jm\xfb=BM\xa5\xe5\x18\xde\xb0\xe8"
    module_0.Config(bytes_0, keep_alive=bytes_0, converters=bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = ".2y"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.log_response()


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    config_1.init_for_request()


def test_case_12():
    str_0 = "after_reload_trigger"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    str_1 = ""
    str_2 = 'zT2\\`<cvx<"zBpqJ'
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_1: none_type_0,
    }
    config_0 = module_0.Config()
    config_0.update(**dict_0)


def test_case_14():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "F, "
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
    module_0.Config(dict_0)
