# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    var_0.__instancecheck__(var_0, var_0)


def test_case_3():
    str_0 = "DK.J"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.isclass(str_0)
    var_1.respond(var_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = None
    none_type_2 = None
    config_1 = module_0.Config(none_type_2, none_type_2, none_type_1)
    var_0 = module_1.getmembers(config_0)
    var_1 = module_0.Config(converters=var_0)
    none_type_3 = config_1.update()


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "=o<1*p*.tC/("
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, config_0, var_0, var_0]
    none_type_1 = config_0.update(*list_0)
    config_0.update_config(none_type_1)


def test_case_7():
    none_type_0 = None
    bytes_0 = b")\x12\xd1\xef\xd09S\xdd\x02s\x80v\xac"
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.update()
    config_0.update_config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = None
    config_1 = module_0.Config(
        env_prefix=none_type_1, keep_alive=none_type_1, converters=none_type_1
    )
    none_type_2 = config_0.update(**config_0)
    config_1.update_config(none_type_2)


def test_case_9():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = None
    none_type_2 = None
    config_1 = module_0.Config(
        env_prefix=none_type_1, keep_alive=none_type_2, converters=none_type_1
    )
    var_0 = config_0.update_config(config_1)
    none_type_0.__setitem__(none_type_0, var_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_1 = module_0.Config(keep_alive=config_0)
    list_0 = []
    none_type_1 = config_0.update(*list_0, **config_0)
    config_0.__getattr__(config_1)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = None
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_1, converters=none_type_0
    )
    none_type_2 = config_0.update(**config_0)
    config_0.__getattr__(config_1)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    list_0 = []
    config_0.__setitem__(str_0, list_0)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    config_0.update(**var_0)


def test_case_17():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0, var_0]
    var_1 = config_0.load_environment_vars()
    none_type_0 = config_0.update(*list_0)
    list_1 = module_1.getmembers(config_0)
    config_0.update(*list_1)
