# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    str_0 = "!HLmL@X2Y\rmEO^"
    module_0.Config(converters=str_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    str_0 = var_0.__str__()
    config_1 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "2M[OIR{:R"
    set_0 = {str_0}
    list_0 = [set_0, set_0, str_0]
    module_0.Config(list_0, str_0, set_0)


def test_case_5():
    config_0 = module_0.Config()
    list_0 = config_0.load_environment_vars()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "U{uoJDC 3LHR{dMt-"
    none_type_0 = config_0.register_type(str_0)
    str_1 = "<>z~~|8_',*"
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_1)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "U{uoJDC 3LHR{dMt-"
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "U{uoJDC 3LHR{dMt-"
    list_0 = [str_0, config_0]
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    config_2 = module_0.Config(converters=list_0)
    config_2.__setattr__(config_0, bool_0)


def test_case_12():
    int_0 = 1959
    str_0 = "ZAUX\tpmHn0(N?q\\d"
    list_0 = [int_0, str_0, str_0, str_0]
    config_0 = module_0.Config(env_prefix=str_0)
    module_1.load_module_from_file_location(int_0, str_0, *list_0)
