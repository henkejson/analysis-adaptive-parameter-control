# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Aj.\x0bN"
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_1)


def test_case_2():
    int_0 = 985
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.Config(dict_0, dict_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = ",j\x0cg8CFL"
    var_0 = module_1.getmembers(config_0)
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    config_0.update_config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "\x0b,j\x0cg8CFL"
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    none_type_3 = config_0.__setattr__(str_0, none_type_1)
    config_0.__getattr__(config_0)


def test_case_5():
    bytes_0 = b"\t8\x9eR-\xc5S*\x94\xebr\xcb\xf3Oi\xc4}#\xed\xda"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    var_0 = module_1.getmembers(tuple_0)
    config_0 = module_0.Config(converters=var_0)
    var_0.__getattr__(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "\x0b,j5g8CFL"
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(str_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_1 = module_0.Config()
    config_1.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, none_type_0)
    config_0.__setitem__(config_0, config_1)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "\x0b,j5gC"
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_14():
    bytes_0 = b"\xdf\x9d\x8c@\xfc\x80\x03\xff^"
    dict_0 = {bytes_0: bytes_0}
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    str_0.__getattr__(dict_0)
