# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xf0|g\xff\xed["
    none_type_0 = None
    config_0 = module_0.Config(converters=bytes_0)
    config_0.__setattr__(none_type_0, bytes_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "iCH(Ubf%NrT4eH"
    config_1 = module_0.Config(env_prefix=str_0)
    config_0.__setitem__(config_1, config_1)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    tuple_0 = (var_0,)
    none_type_0 = config_0.register_type(tuple_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    str_0 = "iCH(Ubf%NrT4eH"
    config_0 = module_0.Config(env_prefix=str_0)
    tuple_0 = ()
    module_0.DescriptorMeta(tuple_0)


def test_case_9():
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "#;"
    dict_0 = {str_0: str_0, str_0: str_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    bytes_0 = b"\xf0|g\xff\xed["
    str_2 = "oUeJ{=~1T"
    none_type_0 = config_0.__setitem__(str_2, str_2)
    none_type_1 = None
    var_0 = module_1.getmembers(none_type_1, none_type_1)
    var_0.update_config(bytes_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    config_1.__setitem__(config_1, config_1)


def test_case_11():
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "#;"
    dict_0 = {str_0: str_0, str_0: str_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    config_0.update_config(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "#;"
    dict_0 = {str_0: str_0, str_0: str_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    config_0.update_config(str_1)


def test_case_14():
    str_0 = "LOCACERT_REATOR"
    str_1 = "#;"
    dict_0 = {str_0: str_0, str_0: str_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    none_type_0 = None
    module_0.Config(env_prefix=none_type_0, converters=str_0)


def test_case_15():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "#;"
    dict_0 = {str_0: str_0, str_0: str_1}
    module_0.Config(dict_0, converters=str_1)


def test_case_16():
    str_0 = "f&UIQl"
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)
    str_1 = "FJIa.wn3O#1'jR7\"zy/"
    none_type_1 = None
    none_type_2 = config_1.__setattr__(str_1, none_type_1)
    str_2 = ""
    config_1.load_environment_vars(str_2)
