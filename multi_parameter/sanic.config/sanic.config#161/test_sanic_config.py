# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_1 = module_0.Config(keep_alive=config_0)


def test_case_2():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = "L"
    bool_0 = False
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0, converters=var_0)


def test_case_7():
    str_0 = "L"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    module_0.Config(config_0, str_0, converters=config_0)


def test_case_8():
    str_0 = "??,g$?"
    bool_0 = False
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_9():
    bytes_0 = b""
    config_0 = module_0.Config(env_prefix=bytes_0)
    var_0 = module_1.getmembers(config_0)
    config_0.load_environment_vars(var_0)


def test_case_10():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "&b*(y}rviI2H$"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_1 = module_0.Config()
    float_0 = -1335.0496
    none_type_0 = config_1.__setattr__(str_0, config_1)
    none_type_1 = config_1.__setattr__(str_0, float_0)
    config_0.__getattr__(config_0)
