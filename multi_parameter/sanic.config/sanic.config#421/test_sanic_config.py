# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b'\tI"z'
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)


def test_case_3():
    str_0 = "Htm1Y/6K3&W"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    bool_0 = True
    module_0.Config(dict_0, keep_alive=bool_0)


def test_case_4():
    bytes_0 = b"Q\xfa\xc7\xac:\x8b\x18}\x91\x94j%\x8e\xa0\x03O?h"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    str_0 = "S"
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.getmembers(config_0)
    var_1 = config_1.update_config(config_1)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    bytes_0 = b"i\xba\x01\xdc\x80(\xd2>g\xea\xa1F*@r"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_1)
    config_1.update_config(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "~WcJ-*&\x0b"
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, str_0, converters=none_type_1)
    none_type_2 = config_0.__setattr__(str_0, none_type_0)
    none_type_3 = config_0.register_type(none_type_0)
    none_type_4 = config_0.__setitem__(str_0, config_0)
    config_0.register_type(none_type_3)


def test_case_11():
    str_0 = "S"
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(env_prefix=str_0, keep_alive=var_0, converters=str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    bytes_0 = b"Q\xfa\xc7\xac:\x8b\x18}\x91\x94j%\x8e\xa0\x03O?h"
    config_1 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_0)


def test_case_13():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update()
    var_0 = config_0.update_config(config_0)
