# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=var_0, converters=var_0)
    config_2 = module_0.Config(config_1, converters=config_0)
    config_0.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = True
    none_type_1 = config_0.register_type(bool_1)
    module_0.DescriptorMeta(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)


def test_case_4():
    str_0 = "t[a"
    module_0.Config(str_0, str_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_9():
    bytes_0 = b"\x11\x1f\xe4\xdaFM\xb4\xfcm\xc2_{\x9f\x1e%k"
    config_0 = module_0.Config(converters=bytes_0)
    config_0.update_config(bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    int_0 = 1308
    none_type_0 = config_0.register_type(int_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(config_0, var_0)


def test_case_12():
    stream_0 = module_2.Stream()
    list_0 = []
    str_0 = "@Pd%m@St\x0buWMD"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.isclass(var_0)
    var_1.respond(list_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_14():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    bool_0 = True
    bytes_0 = b"\xca\x06\xfbh:\x8el\xdd\xde"
    var_0 = module_1.isclass(bytes_0)
    var_0.respond(bool_0)
