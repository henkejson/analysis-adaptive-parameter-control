# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    config_0 = module_0.Config(keep_alive=local_cert_creator_0)
    float_0 = -668.0
    none_type_0 = config_0.register_type(float_0)


def test_case_2():
    str_0 = ",_K<]AHS_gf\x0b:"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = ",_K<]AHS_gf\x0b:"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [var_0, config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0, **config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    str_0 = "twuY\t\n"
    none_type_1 = None
    config_1 = module_0.Config(
        env_prefix=none_type_1, keep_alive=none_type_1, converters=none_type_1
    )
    var_0 = config_1.update_config(config_1)
    config_1.__getattr__(str_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_1.log_response()


def test_case_9():
    config_0 = module_0.Config()
    int_0 = 1314
    none_type_0 = config_0.register_type(int_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "{O~)\n&z/`oS5 g.tx"
    none_type_0 = config_0.update()
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_12():
    str_0 = "uWo|M$^CtlqCNBap=J"
    str_1 = "WW$!'2~gX@a"
    dict_0 = {str_1: str_1}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    list_0 = [config_0, config_0]
    none_type_1 = config_0.update(*list_0, **config_0)
    config_0.update_config(list_0)


def test_case_13():
    config_0 = module_0.Config()
    dict_0 = {}
    none_type_0 = config_0.register_type(dict_0)
    config_0.register_type(dict_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [var_0, config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0, **config_0)
    var_0.respond(var_0)
