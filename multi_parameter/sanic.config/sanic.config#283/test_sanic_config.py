# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x85U+\xdag\n\xa9E\x947F\xe7"
    config_0 = module_0.Config(converters=bytes_0)


def test_case_2():
    default_0 = module_1.Default()
    config_0 = module_0.Config()
    str_0 = "FC:"
    module_0.Config(str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.getmembers(none_type_0, none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"\x85U+\xdag\n\xa9E\x947F\xe7"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.__setattr__(bytes_0, none_type_0)


def test_case_12():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_13():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_15():
    str_0 = "P"
    bytes_0 = b"\xcf\xed\x99\x80\xa33\xff)\xec1\x1d`H\x86U"
    config_0 = module_0.Config()
    module_0.Config(env_prefix=str_0, converters=bytes_0)
