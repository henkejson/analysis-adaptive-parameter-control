# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_2():
    str_0 = "Pi l!#'8p<]ZhfZ"
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    none_type_0 = None
    str_1 = "touchup"
    int_0 = 3578
    str_2 = ">rxFJ`GNHOuQ"
    dict_0 = {str_1: str_0, str_0: int_0, str_2: local_cert_creator_0, str_1: str_2}
    config_0 = module_0.Config(dict_0, none_type_0, none_type_0)
    config_0.update_config(int_0)


def test_case_3():
    bytes_0 = b"c\x86r"
    list_0 = [bytes_0]
    var_0 = module_2.isdatadescriptor(list_0)
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(var_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(local_cert_creator_0)


def test_case_6():
    bytes_0 = b"c\x86r"
    list_0 = [bytes_0]
    var_0 = module_2.isdatadescriptor(list_0)
    config_0 = module_0.Config(keep_alive=var_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(config_0, var_0)


def test_case_10():
    str_0 = "Pi l!#'8p<]ZhfZ"
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.__getattr__(config_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = "5(wR["
    none_type_1 = config_0.register_type(str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(config_0)


def test_case_13():
    str_0 = "c^p#8?9w0+L3bm"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = None
    module_0.DescriptorMeta(none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [config_0, var_0]
    none_type_0 = config_0.update(*list_0)
    list_0.register_type(var_0)
