# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    tuple_0 = ()
    str_0 = ">XO"
    list_0 = [str_0, tuple_0, str_0]
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=list_0)
    config_0.update_config(tuple_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "_"
    var_0 = config_0.load_environment_vars(str_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "M@UP{$w\n{*"
    config_0.update_config(str_0)


def test_case_6():
    float_0 = -2946.134925
    list_0 = [float_0, float_0]
    module_0.Config(converters=list_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_11():
    int_0 = 2718
    module_0.Config(int_0, int_0, int_0)


def test_case_12():
    str_0 = "G"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "H"
    var_0 = config_0.load_environment_vars(str_0)
    config_0.__setitem__(var_0, config_0)
