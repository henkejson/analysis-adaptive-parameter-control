# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_0 = None
    config_2 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_3 = module_0.Config(keep_alive=config_0, converters=config_1)
    var_0 = config_0.update_config(config_3)


def test_case_2():
    config_0 = module_0.Config()
    bool_0 = False
    config_1 = module_0.Config(keep_alive=config_0)
    config_2 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    none_type_0 = None
    module_0.Config(none_type_0, config_2, bool_0)


def test_case_3():
    bytes_0 = b"Request Timeout"
    module_0.Config(bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.init_for_request()


def test_case_5():
    str_0 = "Z<gUCEpl48Z OJP~|H"
    var_0 = module_1.isdatadescriptor(str_0)
    var_1 = var_0.__bool__()
    module_0.Config(env_prefix=var_1, converters=str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    var_0 = module_1.isclass(none_type_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config(converters=none_type_0)
    none_type_2 = config_0.update()
    str_0 = "application/json"
    none_type_3 = config_1.__setitem__(str_0, str_0)
    config_1.update_config(none_type_3)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_9():
    int_0 = -1001
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(converters=none_type_1)
    config_2 = module_0.Config()
    str_0 = "U66jke=biV/[i[WGU"
    none_type_2 = config_2.__setattr__(str_0, int_0)
    config_0.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    config_2 = module_0.Config(config_0, keep_alive=bool_0)
    config_3 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_4 = module_0.Config(keep_alive=config_0, converters=config_0)
    str_0 = ""
    none_type_1 = config_2.__setattr__(str_0, config_4)
    config_2.load_environment_vars(str_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_2 = module_0.Config(converters=none_type_0)
    config_3 = module_0.Config()
    config_1.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = ""
    none_type_1 = config_0.__setattr__(str_0, config_0)
    config_0.load_environment_vars(str_0)
