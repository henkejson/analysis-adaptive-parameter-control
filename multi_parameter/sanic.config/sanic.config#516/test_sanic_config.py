# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "lPQ\x0cC^UwZ<m=}:"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_2():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    module_0.Config(config_0, config_0, config_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    bytes_0 = b"4\xebag\x87\x13J\xbay\xd7\xc5"
    config_0.update_config(bytes_0)


def test_case_7():
    str_0 = "'k\\Rql,SZj\"3xlw"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    none_type_1 = None
    none_type_2 = config_0.__setattr__(str_0, none_type_1)
    config_1 = module_0.Config(none_type_1)
    var_0 = config_1.update_config(config_1)
    none_type_3 = config_1.register_type(var_0)
    none_type_4 = config_0.register_type(var_0)
    none_type_5 = config_1.register_type(config_0)
    config_1.register_type(var_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    config_0.__getattr__(var_0)


def test_case_12():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = None
    config_1 = module_0.Config(none_type_0)
    var_0 = config_1.update_config(config_1)
    none_type_1 = config_0.register_type(var_0)
    var_1 = module_1.getmembers(none_type_0)
    config_0.load_environment_vars(str_0)


def test_case_13():
    str_0 = "_"
    str_1 = " J!CW"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.__setattr__(str_1, str_1)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_2 = None
    config_2 = module_0.Config(none_type_2)
    config_1.update_config(none_type_2)
