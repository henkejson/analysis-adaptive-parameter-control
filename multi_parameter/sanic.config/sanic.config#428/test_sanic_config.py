# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = -1552
    module_0.Config(converters=int_0)


def test_case_2():
    int_0 = 0
    config_0 = module_0.Config(int_0, keep_alive=int_0)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__bool__()
    var_2 = module_1.isdatadescriptor(config_0)
    var_2.register_type(var_1)


def test_case_3():
    str_0 = "0mf(QT$6tp6efk7iY^3"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    var_0.__setitem__(var_0, var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_5():
    config_0 = module_0.Config()
    module_1.getmembers(config_0, config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.__setitem__(bool_0, bool_0)


def test_case_9():
    none_type_0 = None
    list_0 = []
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1.update_config(list_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    int_0 = -23
    module_0.Config(int_0, keep_alive=int_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "O\\n2?ng"
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "0mf(QT$6tp6efk7iY^3"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=config_0)
    config_0.update_config(var_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_0, config_1)
