# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "logging.Formatter"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.load_environment_vars()
    none_type_1 = config_0.update()
    str_1 = "--http"
    none_type_2 = config_0.__setitem__(str_1, str_1)
    none_type_3 = config_0.register_type(config_0)
    config_0.__bool__()


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    int_0 = 307
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(int_0)
    config_0.__setattr__(config_0, int_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "logging.Formatter"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_0.__setattr__(config_0, none_type_0)


def test_case_8():
    str_0 = "=K5@9$swy{)b#=U<wlI^"
    var_0 = module_1.isdatadescriptor(str_0)
    var_1 = var_0.__bool__()
    module_0.Config(env_prefix=var_0, converters=str_0)


def test_case_9():
    dict_0 = {}
    bool_0 = True
    none_type_0 = None
    module_0.Config(bool_0, dict_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    int_0 = 307
    config_0 = module_1.isclass(int_0)
    none_type_0 = module_1.getmembers(int_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__setattr__(config_0, int_0)


def test_case_13():
    str_0 = "q:dm&Ym"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_14():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    str_0 = "Return all dynamic routes in the router.\n\n        _Dynamic routes \x0bre routes that contain path parameters._\n\n        Returns:\n            Dict[Tuple[str, ...], Route]: a dictionary of routes\n        "
    config_0.update_config(str_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)
