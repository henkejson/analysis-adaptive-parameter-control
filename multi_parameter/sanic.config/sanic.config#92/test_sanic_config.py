# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Use Proxy"
    bytes_1 = b"\x03}=\xd4#\xf5\x9f\x1d\xed\xd0G\x0b\xf2\x1f\xb3D\xb3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_1}
    bool_0 = False
    module_0.Config(env_prefix=dict_0, keep_alive=bool_0, converters=dict_0)


def test_case_2():
    str_0 = "=7nypVlfGnC,Pb,>"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = "'}:YB_G8"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update(**config_0)
    float_0 = 47.08373597025579
    config_1 = module_0.Config(config_0, converters=str_0)
    none_type_1 = config_0.register_type(float_0)
    none_type_2 = config_0.__setattr__(str_0, str_0)
    var_0 = config_1.update_config(config_1)
    config_0.__instancecheck__(config_0, var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    var_1 = config_0.update_config(config_0)


def test_case_5():
    str_0 = ""
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = module_1.isclass(none_type_0)
    var_0.respond(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    float_0 = 47.08373597025579
    config_1 = module_0.Config(config_0, converters=str_0)
    none_type_0 = config_0.register_type(float_0)
    config_0.__getattr__(float_0)


def test_case_10():
    str_0 = "'|:YB_G8"
    config_0 = module_0.Config(env_prefix=str_0)
    float_0 = 24.3
    none_type_0 = module_1.isdatadescriptor(float_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(config_0)
    config_3 = module_0.Config(config_0, keep_alive=config_1)
    var_0 = config_1.update_config(config_1)
    config_3.update_config(str_0)


def test_case_11():
    str_0 = "|;IoEIBXo.`"
    config_0 = module_1.isclass(str_0)
    module_0.Config(config_0, converters=str_0)


def test_case_12():
    str_0 = "'}:YB_G8"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "kNV$\rpB*?^?"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_1: str_1, str_2: none_type_0}
    module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_13():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(config_0, str_0, converters=str_0)
