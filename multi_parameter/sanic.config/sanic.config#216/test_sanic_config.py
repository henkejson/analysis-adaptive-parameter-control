# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.update()
    config_0.update_config(bool_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = config_0.update()
    module_0.Config(bool_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    list_0 = [var_1]
    none_type_0 = config_0.update(*list_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_5():
    str_0 = "Add a new exception handler to an already existing handler object.\n\n        Args:\n            exception (sanic.exceptions.SanicException or Exception): Type\n                of exception that needs to be handled.\n            handler (function): Reference to the function that will\n                handle the exception.\n\n        Returns:\n            None\n\n        "
    str_1 = "tb;"
    dict_0 = {str_0: str_0, str_1: str_0}
    none_type_0 = None
    module_0.Config(dict_0, dict_0, none_type_0, converters=str_1)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    list_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update_config(config_0)
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = module_1.getmembers(config_0)
    config_0.__getattr__(var_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.AUTO
    list_0 = []
    none_type_0 = config_0.update(*list_0)
    var_1 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    var_1 = module_1.getmembers(config_0)
    var_1.__new__(config_0, list_0, config_0, var_1, **config_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)
