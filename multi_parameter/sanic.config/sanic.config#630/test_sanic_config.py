# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(bool_0)


def test_case_4():
    int_0 = 1180
    module_0.Config(env_prefix=int_0)


def test_case_5():
    int_0 = -2489
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(int_0)


def test_case_6():
    str_0 = "H7s2sT5]$)&"
    none_type_0 = None
    module_0.Config(str_0, str_0, converters=none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "],z1lO9Bs]Ni;"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config()
    config_1.update_config(none_type_0)


def test_case_9():
    int_0 = -2486
    config_0 = module_0.Config()
    str_0 = "t)X"
    str_1 = "? zy"
    str_2 = "WEBSOCKET_PING_TIMEOUT"
    dict_0 = {str_0: str_0, str_1: int_0, str_2: str_1}
    config_1 = module_0.Config(dict_0, converters=str_0)
    var_0 = config_0.update_config(config_1)
    var_0.register_type(var_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(config_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_1.LocalCertCreator.MKCERT
    none_type_0 = config_0.register_type(var_0)
    config_0.update_config(var_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)
