# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "`"
    bool_0 = False
    dict_0 = {bool_0: str_0, str_0: str_0}
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=dict_0)
    config_0.update(*list_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    str_0 = "X|YcZO.K5_6BMSDvb\r"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = bool_0.__bool__()
    dict_0 = {str_0: str_0}
    module_0.Config(dict_0, var_0)


def test_case_5():
    str_0 = "message_fetched"
    bool_0 = False
    var_0 = module_1.isdatadescriptor(str_0)
    var_1 = var_0.__bool__()
    list_0 = [bool_0, bool_0, var_1]
    module_0.Config(env_prefix=list_0, converters=list_0)


def test_case_6():
    str_0 = "X|YcZO.K5_6BMSDvb\r"
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__setitem__(none_type_0, str_0)


def test_case_7():
    str_0 = "gTx~:"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_1.getmembers(config_0)
    config_1.__getattr__(config_1)


def test_case_9():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "d%38?3R0G<eowyC?;\\L"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)
