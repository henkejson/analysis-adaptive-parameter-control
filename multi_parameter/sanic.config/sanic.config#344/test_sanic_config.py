# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0)
    config_2 = module_0.Config(converters=config_0)
    none_type_0 = config_0.update(**config_0)
    config_0.update(*config_1, **config_2)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_3():
    str_0 = "E'UV\\s\t@wCF\x0c"
    module_0.Config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0)
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    config_2 = module_0.Config(converters=var_0)
    none_type_1 = config_0.register_type(config_1)
    none_type_2 = config_0.update(**config_0)
    config_0.respond(config_1)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.update(**config_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "6iQ"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_0.Config(config_1)
    var_1 = config_0.update_config(var_0)
    str_1 = "\\!#g=`!>~SGH~oi"
    var_0.update_config(str_1)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = config_0.update(**config_0)
    config_1.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0)
    none_type_0 = None
    config_2 = module_0.Config(converters=none_type_0)
    none_type_1 = config_1.register_type(none_type_0)
    config_1.register_type(none_type_1)


def test_case_13():
    str_0 = "H"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0)
    str_0 = "vMXt?_"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_1.__setattr__(str_0, str_0)
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_0.Config(dict_0, converters=config_0)
