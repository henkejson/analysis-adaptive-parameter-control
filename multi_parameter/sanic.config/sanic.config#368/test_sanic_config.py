# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    config_1 = module_0.Config(converters=config_0)
    bool_0 = False
    config_0.update_config(bool_0)


def test_case_2():
    list_0 = []
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    config_1 = module_0.Config(none_type_1, none_type_1, config_0)
    config_0.update_config(none_type_1)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )


def test_case_4():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_1)


def test_case_5():
    bytes_0 = b"%x\r\n%b\r\n"
    module_0.Config(converters=bytes_0)


def test_case_6():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(list_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    str_0 = "recv_buEuXffe"
    bytes_0 = b"\xc7\r\x99\xfa\xe1\x7f\xac\xa9J\x9e\xcd\xa3\xe1\x8a\xea\xeb"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bytes_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    var_0 = config_0.update_config(config_0)
    module_1.load_module_from_file_location(config_0, **config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "m`n0kZ1m"
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_13():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=list_0)
    config_0.__getattr__(list_0)


def test_case_14():
    str_0 = "27=]>oI&lr)DX'+(;\x0c\x0cT"
    str_1 = "7#\x0bt<u\n2"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = "MOTD_DISPLAY"
    float_0 = 2025.0
    str_4 = "Q}0T2vdUw/ddZif,ph"
    int_0 = 3692
    dict_0 = {str_0: str_1, str_2: str_1, str_3: float_0, str_4: int_0}
    module_0.Config(dict_0, str_1)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
