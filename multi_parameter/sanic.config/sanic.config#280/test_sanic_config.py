# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()


def test_case_2():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "Cannot append to a non-list object."
    config_1 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, bool_0)
    module_0.Config(str_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "Cannot append to a non-list object."
    config_1 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, bool_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    complex_0 = 709.904 + 573.68591j
    var_0 = module_1.isclass(complex_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "4V`I\nwOK2)O@`\n{Z\nl"
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.__setattr__(str_0, bool_0)
    none_type_3 = config_0.update()


def test_case_8():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "Cannot append to a non-list object."
    config_1 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, bool_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = module_1.isclass(bool_0)
    str_1 = "}M#;}n/X8"
    module_0.Config(converters=str_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=none_type_0, converters=config_1)
    str_0 = "Cannot append to a non-list object."
    config_3 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_1.__setattr__(str_0, none_type_0)
    config_0.__getattr__(config_2)


def test_case_12():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    bool_0 = False
    config_0.__setitem__(str_1, bool_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_1 = module_0.Config(var_0)
    config_2 = module_0.Config(config_0)
    config_3 = module_0.Config()
    str_1 = 'q6\x0b"UP7pdu*7bolv'
    config_4 = module_0.Config(converters=none_type_0)
    config_0.__setattr__(none_type_0, str_1)
