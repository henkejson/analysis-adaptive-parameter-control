# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    config_1.update_config(none_type_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "4Xu\x0c"
    config_1 = module_0.Config(config_0, converters=str_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_1 = module_1.getmembers(config_0, none_type_0)
    var_0 = module_1.isdatadescriptor(config_1)


def test_case_6():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [config_0, config_0, config_0]
    config_0.__getattr__(list_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    bytes_0 = b"\xb6Y"
    str_0 = "Ignorning invalid If-Modified-Since header received: '%s'"
    config_0 = module_0.Config()
    str_1 = "Path of the local HTTP request\n\n        Returns:\n            str: Path of the local HTTP request\n        "
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_1}
    none_type_0 = config_0.register_type(dict_0)
    none_type_1 = None
    config_1 = module_0.Config(dict_0, keep_alive=none_type_1)
    var_0 = config_1.__getattr__(str_1)
    config_1.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(bool_0)
    config_0.__setattr__(config_0, config_0)


def test_case_11():
    str_0 = "WU!E`Prst7O"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_12():
    str_0 = "EA\x0ce,j} E3sz>#B"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    int_0 = 100000000
    config_1 = module_0.Config()
    var_0.__setitem__(int_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    config_2 = module_0.Config()
    none_type_2 = config_2.register_type(config_2)
    var_0 = config_0.update_config(config_0)
    config_2.register_type(config_2)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    config_2 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, none_type_0)
