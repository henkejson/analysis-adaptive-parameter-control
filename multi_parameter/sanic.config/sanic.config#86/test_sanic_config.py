# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Unauthorized"
    config_0 = module_0.Config(converters=bytes_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"x8}\x94\xd7"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = module_1.isclass(none_type_0)
    var_0.__subclasscheck__(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "nQr\x0b\r"
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_1.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bytes_0 = b"Unauthorized"
    module_0.Config(bytes_0, keep_alive=bytes_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=none_type_0, converters=var_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "jD\tZ|C\t\\MRtG(5.\nJX1"
    module_0.Config(converters=str_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "OlV/)%+G\x0cZ]yo?;"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.update()
    none_type_2 = config_0.update(**config_0)
    config_0.__setattr__(none_type_1, none_type_1)


def test_case_12():
    bytes_0 = b"Use Proxy"
    module_0.Config(env_prefix=bytes_0)


def test_case_13():
    str_0 = "S"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = None
    var_0 = module_1.isdatadescriptor(none_type_1)
    var_0.update_config(none_type_1)


def test_case_14():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, str_0)
