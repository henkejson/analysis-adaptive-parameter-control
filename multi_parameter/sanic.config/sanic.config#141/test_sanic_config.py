# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "kF"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=dict_0, converters=dict_0)


def test_case_2():
    config_0 = module_0.Config()
    bool_0 = False
    config_0.__getattr__(bool_0)


def test_case_3():
    config_0 = module_0.Config()
    bool_0 = False
    config_0.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    float_0 = -1462.14
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(float_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "}R1'{nO!oV7`\t4DUjPj\""
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "\x0b)%\\~"
    config_1 = module_0.Config(config_0, str_0)
    config_1.__getattr__(config_1)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "\x0bu)%\\~"
    config_1 = module_0.Config(config_0, str_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "WBSOCKET_ING_TIEOUT"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    none_type_2 = config_0.register_type(config_0)
    config_0.register_type(config_0)
