# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    local_cert_creator_0 = module_1.LocalCertCreator.TRUSTME
    config_0 = module_0.Config(env_prefix=local_cert_creator_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(var_0)
    float_0 = 657.814898
    config_2 = module_0.Config(keep_alive=float_0)
    var_1 = module_2.isclass(var_0)
    var_1.__new__(none_type_1, var_1, var_0, none_type_1)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    str_0 = "{`R_rTN"
    dict_0 = {str_0: str_0}
    none_type_1 = None
    config_0 = module_0.Config(dict_0, str_0, none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = module_2.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    local_cert_creator_0 = module_1.LocalCertCreator.TRUSTME
    config_0 = module_0.Config(env_prefix=local_cert_creator_0, keep_alive=none_type_0)
    module_0.Config(converters=local_cert_creator_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    var_0 = module_2.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    bytes_0 = b"e\xaa:"
    config_2 = module_0.Config(
        env_prefix=none_type_0, keep_alive=var_0, converters=config_1
    )
    str_0 = "YJ4\t00m*"
    none_type_1 = config_0.__setitem__(str_0, bytes_0)
    var_0.update(*var_0, **config_0)


def test_case_10():
    none_type_0 = None
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    config_0 = module_0.Config(none_type_0, local_cert_creator_0)
    config_0.update_config(local_cert_creator_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(config_0)


def test_case_12():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update()
    config_0.load_environment_vars(str_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "AefAYse+9ZpX2nf\\hl$"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_0.Config(dict_0)
