# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Xl`{?4U'"
    var_0 = module_1.isclass(str_0)
    config_0 = module_0.Config(var_0, str_0, var_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "Xl`{?4U'"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, dict_0, converters=str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "Xl`{?4U'"
    var_0 = module_1.isclass(str_0)
    config_0 = module_0.Config(var_0, str_0, var_0, converters=str_0)
    config_0.__setitem__(config_0, str_0)


def test_case_7():
    str_0 = "Xl`{?4U'"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = "+3M"
    config_0 = module_0.Config(dict_0, str_1, dict_0, converters=str_0)
    config_0.__getattr__(dict_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_9():
    str_0 = "Xl`{?4U'"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = "+3M"
    config_0 = module_0.Config(dict_0, str_1, dict_0, converters=str_0)
    module_1.getmembers(config_0, config_0)


def test_case_10():
    str_0 = "Xt`{]4U&"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = "+3M'"
    config_0 = module_0.Config(dict_0, str_1, dict_0, converters=str_0)
    config_0.update_config(str_1)


def test_case_11():
    str_0 = "REAL_IP_HEADER"
    module_0.Config(converters=str_0)
