# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    list_0 = [config_0, config_0, config_0, config_0]
    config_1 = module_0.Config(keep_alive=config_0)
    var_1 = config_0.load_environment_vars()
    config_0.update_config(list_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    int_0 = 68
    module_0.Config(int_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_5():
    int_0 = 68
    config_0 = module_1.isclass(int_0)
    str_0 = "oqyMQTw;Z# LY-kXt3De"
    config_1 = module_0.Config(config_0, str_0)
    config_0.load_environment_vars()


def test_case_6():
    config_0 = module_0.Config()
    config_0.__bool__()


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__setitem__(config_0, config_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    dict_0 = module_1.getmembers(bool_0, none_type_0)
    config_0 = module_0.Config(none_type_0, converters=dict_0)
    none_type_1 = config_0.register_type(bool_0)
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(config_1)
    var_1 = config_1.load_environment_vars()
    config_1.update_config(bool_0)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(none_type_0, converters=dict_0)
    none_type_1 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(none_type_0, converters=dict_0)
    none_type_1 = config_0.register_type(bool_0)
    config_1 = module_0.Config()
    var_0 = module_2.LocalCertCreator.AUTO
    config_0.update_config(var_0)
