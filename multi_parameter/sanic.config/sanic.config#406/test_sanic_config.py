# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "Fb?of"
    var_0 = module_1.getmembers(config_0)
    var_1 = module_0.Config(converters=var_0)
    var_2 = var_1.load_environment_vars()
    module_2.Http(str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    str_0 = "Cookie key contains illegal characters"
    str_1 = "Method to extract and parse the form data from a request.\n\n        Args:\n            keep_blank_values (bool): Whether to discard blank values from the form data.\n\n        Returns:\n            Optional[RequestParameters]: The parsed form data.\n        "
    module_0.Config(env_prefix=str_1, converters=str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "Fb?of"
    none_type_1 = config_0.register_type(str_0)
    var_0 = module_1.getmembers(config_0)
    config_1 = module_0.Config(none_type_1, keep_alive=str_0)
    config_0.update_config(none_type_1)


def test_case_6():
    complex_0 = -860.817 - 282.247j
    module_0.Config(env_prefix=complex_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "Fb?of"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = ">3Jy3~*1|m/f\nBAfCi"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_1 = "Fb?of"
    none_type_2 = config_0.__setattr__(str_1, none_type_0)
    config_0.__getattr__(none_type_0)
