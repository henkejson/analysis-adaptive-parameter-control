# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    int_0 = -2534
    module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0, converters=int_0)


def test_case_2():
    str_0 = "cOFdCbqt}BE~zd"
    bool_0 = True
    dict_0 = {str_0: bool_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, none_type_0, dict_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    str_0 = "eNy}%"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, converters=str_0)
    config_1 = module_0.Config(converters=config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_1, var_0, var_0, config_1]
    none_type_0 = config_0.update(*list_0)
    var_0.load_environment_vars()


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = True
    str_0 = "!])mp"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.update()
    none_type_2 = config_0.register_type(bool_0)
    none_type_3 = config_0.update()
    config_0.update(**str_0)


def test_case_8():
    str_0 = "I_HE-s.S"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = config_0.update(**config_0)


def test_case_10():
    str_0 = "eNy}%"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, converters=str_0)
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(config_1)
    none_type_0 = config_1.update()
    config_1.__getattr__(dict_0)


def test_case_11():
    str_0 = "*E!:}IR~*6%@"
    dict_0 = {str_0: str_0}
    module_0.Config(dict_0, str_0, converters=str_0)
