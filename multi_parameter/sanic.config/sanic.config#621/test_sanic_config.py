# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    str_0 = "Task "
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    str_1 = ")~\n'*!;G5l4>P\x0by-nE'"
    none_type_2 = config_1.__setitem__(str_1, config_0)
    config_2 = module_0.Config(config_0, none_type_0, config_1, converters=config_0)
    dict_0 = {none_type_0: none_type_2}
    config_2.update_config(dict_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "&"
    config_1 = module_0.Config(env_prefix=str_0, converters=str_0)
    list_0 = []
    none_type_0 = config_0.update(*list_0, **config_0)
    config_1.__getattr__(str_0)


def test_case_7():
    str_0 = '~wv7$uuhct2lz72xk"L'
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_9():
    str_0 = "n-,+(vh#<"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = module_1.isdatadescriptor(none_type_1)
    var_1 = config_0.load_environment_vars()
    var_2 = config_0.update_config(config_0)
    config_0.register_type(config_0)


def test_case_10():
    str_0 = "n-,+(vh#<"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = module_1.isdatadescriptor(none_type_1)
    var_1 = config_0.load_environment_vars()
    var_2 = config_0.load_environment_vars()
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    bytes_0 = b"\xe7\\\x05 \xa9Ui\xf4\xb6\xc3\xb9"
    none_type_1 = config_0.register_type(bytes_0)
    config_0.__setattr__(str_0, none_type_0)


def test_case_12():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "Z"
    str_2 = '<rC5k"2<8"!8;"a^O Q'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_2: str_0}
    module_0.Config(dict_0, str_2)
