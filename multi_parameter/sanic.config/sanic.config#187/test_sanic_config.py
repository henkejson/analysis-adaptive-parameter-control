# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_2():
    float_0 = 1319.876977
    str_0 = "*hvbZ l1\x0c7D7/bTrxG-g"
    none_type_0 = None
    module_0.Config(float_0, str_0, converters=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    bytes_0 = b"\x98\x01}\xf9\xe7\xa8\x97d\xf1\xe4\xe5\xb9"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.load_environment_vars(none_type_0)


def test_case_7():
    bytes_0 = b"\x98\x01}\xf9\xe7\xa8\x97d\xf1\xe4\xe5\xb9"
    config_0 = module_0.Config()
    var_0 = module_1.isdatadescriptor(bytes_0)
    config_0.init_for_request()


def test_case_8():
    int_0 = 1836
    module_0.Config(converters=int_0)


def test_case_9():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_1 = module_0.Config(keep_alive=str_0)
    none_type_0 = config_1.register_type(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    str_0 = "k"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = config_0.update()
    config_1 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1.register_type(str_0)


def test_case_12():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=config_0)


def test_case_13():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_1 = module_0.Config(keep_alive=config_0)
    none_type_0 = config_1.register_type(str_0)
    config_1.update_config(none_type_0)


def test_case_14():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0)
    none_type_0 = config_1.register_type(str_0)
    config_2 = module_0.Config()
    config_3 = module_0.Config()
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, none_type_0)
