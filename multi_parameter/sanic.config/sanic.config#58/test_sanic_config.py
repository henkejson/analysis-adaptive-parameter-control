# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import sanic.constants as module_2
import sanic.http.http1 as module_3
import inspect as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    object_0 = module_1.object()
    bool_0 = False
    bool_1 = True
    str_0 = "R"
    dict_0 = {str_0: str_0, str_0: bool_0}
    config_0 = module_0.Config(dict_0, keep_alive=bool_1)
    config_0.load_environment_vars(object_0)


def test_case_2():
    str_0 = "j)c*NTUN!<O#o.Zso"
    str_1 = "lifespan.startup"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, none_type_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    complex_0 = 1815.38 - 124.945321j
    config_0.update_config(complex_0)


def test_case_7():
    config_0 = module_0.Config()
    module_3.Http(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    config_0.update(*list_0, **none_type_0)


def test_case_11():
    bool_0 = False
    str_0 = "1\x0cN22dkJ,}4j.X?s V!"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=bool_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.__setitem__(none_type_1, none_type_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_4.isclass(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)
