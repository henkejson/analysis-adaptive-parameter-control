# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "privkey.pem"
    module_0.Config(converters=str_0)


def test_case_2():
    int_0 = 3590
    config_0 = module_0.Config(keep_alive=int_0)
    module_0.DescriptorMeta(int_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    str_0 = "]j$z^8<\n7;P"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, dict_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    bytes_0 = b"\x9d\x82C\x8c\xcbm\xb8\x1fID<\xe5M"
    config_0 = module_0.Config(converters=bytes_0)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "_*o80k}AG6"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"\x9d\x82C\x8c\xcbm\xb8\x1fID<\xe5M"
    config_0 = module_0.Config(converters=bytes_0)
    list_0 = []
    none_type_0 = config_0.update(*list_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    config_1 = module_0.Config(none_type_0)
    descriptor_meta_0 = module_1.isclass(list_0)
    config_0.update_config(bytes_0)


def test_case_12():
    bytes_0 = b"\x9d\x82C\x8c\xcbm\xb8\x1fID<\xe5M"
    config_0 = module_0.Config(converters=bytes_0)
    str_0 = "G"
    config_0.load_environment_vars(str_0)


def test_case_13():
    bytes_0 = b"\x9d\x82C\x8c\xcbm\xb8\x1fID<\xe5M"
    config_0 = module_0.Config(converters=bytes_0)
    list_0 = []
    none_type_0 = config_0.update(*list_0, **config_0)
    none_type_1 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: none_type_0}
    config_0.update(**dict_0)


def test_case_14():
    bytes_0 = b""
    config_0 = module_0.Config(converters=bytes_0)
    list_0 = []
    none_type_0 = config_0.update(*list_0, **config_0)
    str_0 = "G"
    var_0 = config_0.load_environment_vars(str_0)
    var_1 = module_1.isdatadescriptor(str_0)
    var_2 = module_1.isclass(config_0)
    var_3 = module_1.isclass(var_1)
    var_3.update_config(bytes_0)


def test_case_15():
    str_0 = "\r<)o30a=/W1&kEBl"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    bool_0 = False
    module_0.Config(dict_0, str_0, bool_0, converters=dict_0)
