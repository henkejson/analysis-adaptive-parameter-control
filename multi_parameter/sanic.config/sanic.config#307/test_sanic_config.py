# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Ja"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = module_1.isclass(config_2)
    none_type_0 = config_1.register_type(var_0)
    config_0.update_config(none_type_0)


def test_case_2():
    str_0 = "R!w<H^jh-hj]\\HIiC\tn"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = "Ja"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = None
    config_1 = module_0.Config(config_0, keep_alive=none_type_1, converters=str_0)
    float_0 = -909.89981
    none_type_2 = config_1.register_type(float_0)
    var_0 = config_1.update_config(config_1)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_5():
    bytes_0 = b"\xab \xfd\xe8a\xe2`m\xab+X`\xfc\xfd\xad\xb6u"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_6():
    str_0 = "R!w<H^jh-hj]\\HIiC\tn"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, var_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0, var_0)
    config_2 = module_0.Config(keep_alive=var_0)
    config_0.update_config(var_0)


def test_case_9():
    str_0 = "Ja"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    str_0 = "X!w<H^jh-hj]\\HIiCn"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    config_0.register_type(str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    bytes_0 = b"j\t\x1a\xe5\xff'!We\x00<\xd1\xd9E\xf3\x14"
    none_type_0 = config_0.update()
    config_0.__setattr__(str_0, bytes_0)


def test_case_14():
    bool_0 = True
    int_0 = 6634
    str_0 = "4"
    str_1 = "touchup"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = "REQUEST_ID_HEADER"
    dict_0 = {str_0: str_0, str_1: int_0, str_2: bool_0, str_3: int_0}
    none_type_0 = None
    module_0.Config(dict_0, none_type_0, int_0)
