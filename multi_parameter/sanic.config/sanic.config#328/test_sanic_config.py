# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "3>hM"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "3>hM"
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "3>hM"
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    str_0 = "3>hM"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_9():
    bool_0 = False
    str_0 = "\x0cM5lCY/mb8 >"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.update_config(bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    none_type_0.load_environment_vars()


def test_case_11():
    str_0 = "3>Ja@hM"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=str_0)
    config_2 = module_0.Config(config_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_14():
    str_0 = "2V?C[vGN%6"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "vR"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_1: str_0, str_2: none_type_0}
    module_0.Config(dict_0, keep_alive=none_type_0)
