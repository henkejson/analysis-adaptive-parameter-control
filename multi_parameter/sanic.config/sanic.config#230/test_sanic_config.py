# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    none_type_0 = None
    module_0.Config(none_type_0, converters=bool_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=config_0)
    var_1 = config_1.update_config(config_1)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    var_2 = module_1.getmembers(config_0)
    var_0.update()


def test_case_4():
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(
        keep_alive=local_cert_creator_0, converters=local_cert_creator_0
    )
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "jcd?.\tR=IX\x0c\x0b=`kX-L\n"
    str_2 = '6y"((J4/E('
    dict_0 = {str_0: str_0, str_1: str_2}
    module_0.Config(dict_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "y\x0bR4yS5x?Z"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.load_environment_vars()
    none_type_2 = config_0.register_type(var_0)
    var_1 = config_0.update_config(config_0)
    config_0.update_config(var_1)


def test_case_9():
    var_0 = module_2.LocalCertCreator.MKCERT
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(var_0)


def test_case_10():
    none_type_0 = None
    str_0 = "touchup"
    str_1 = "r:`V'@1\"GRE4W"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    none_type_1 = None
    config_0 = module_0.Config(dict_0, str_1, none_type_1)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_11():
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(keep_alive=var_0, converters=var_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
