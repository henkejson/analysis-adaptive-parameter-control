# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2
import sanic.utils as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    bytes_0 = b"o#Ux&\xd8\xadS\x1f\xb7\xce\x9fG"
    module_0.Config(bytes_0)


def test_case_3():
    bytes_0 = b"\x10\xdcvn\xef\xf1\xfc.&1P"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    default_0 = module_1.Default()
    var_1 = default_0.__repr__()
    var_2 = module_2.isdatadescriptor(config_0)
    config_0.__setitem__(default_0, var_2)


def test_case_5():
    bytes_0 = b"\xc7b-\xd7\x16\xfc0\xa5\x12"
    str_0 = "+OP,< D<>nO=*"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.load_environment_vars()
    module_3.load_module_from_file_location(bytes_0, str_0, **var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    int_0 = -1847
    bytes_0 = b"\x86#Ux&\xd8\xadS\x1f\xb7\xce\x9fG"
    none_type_0 = None
    module_0.Config(none_type_0, int_0, none_type_0, converters=bytes_0)


def test_case_9():
    str_0 = "nFZz<cE`%79E3/B5W{ "
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = module_2.isclass(str_0)
    none_type_2 = config_0.update()
    var_0.load_environment_vars()


def test_case_10():
    str_0 = "+OP,< D<>nO=*"
    str_1 = "9uVl2SI 7*MrUw"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.load_environment_vars()
    dict_0 = {str_1: str_0, str_0: str_1, str_0: var_0}
    config_0.__getattr__(dict_0)


def test_case_11():
    str_0 = "'BxkV0+6m"
    var_0 = module_2.isdatadescriptor(str_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    module_0.Config(converters=var_2)


def test_case_12():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.load_environment_vars(str_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, keep_alive=str_0)


def test_case_14():
    str_0 = "I"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, str_0)


def test_case_15():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_2.isdatadescriptor(config_0)
    var_0.register_type(var_0)
