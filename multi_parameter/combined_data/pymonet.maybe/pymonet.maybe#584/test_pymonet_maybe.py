# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    complex_0 = 6074.49159 - 1395j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_0.filter(maybe_0)


def test_case_3():
    bytes_0 = b"\xb0\x7f\xc7\xf9\xda[\xfeG\x15 l\x94}W\xceB"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(bool_1, maybe_1)
    var_3 = maybe_1.to_try()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_5():
    int_0 = 3559
    bool_0 = True
    dict_0 = {int_0: int_0, bool_0: int_0, int_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_validation()
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(list_0, generic_0)
    var_1 = maybe_1.bind(generic_0)
    maybe_2 = module_0.Maybe(generic_0, bool_2)
    var_2 = var_1.to_validation()
    var_3 = maybe_2.to_box()
    maybe_3 = module_0.Maybe(maybe_2, maybe_2)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.bind(var_1)
    bytes_0 = b"\xf1\xa1\xa3\xda8h\xbe\x14\xe3O\xdb6\x88\xc3F\x065,A\xd2"
    list_0 = [bytes_0]
    int_0 = 4395
    var_3 = maybe_1.get_or_else(bytes_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(int_0, bool_1)
    maybe_2.bind(list_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.ap(dict_0)


def test_case_8():
    int_0 = -304
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(int_0)


def test_case_9():
    list_0 = []
    float_0 = -190.96
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    int_0 = -3742
    str_0 = "V1\n8{)GI"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.map(int_0)
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = var_1.to_either()
    var_2.bind(list_0)


def test_case_10():
    float_0 = -1907.39
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.get_or_else(float_0)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.filter(tuple_0)


def test_case_12():
    float_0 = -1952.6335
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_1.to_box()
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.ap(var_0)
    var_3 = maybe_2.to_try()
    var_3.to_try()


def test_case_13():
    str_0 = 'jvLl0DM"{zDtz>0[8'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_14():
    none_type_0 = None
    set_0 = set()
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(list_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(set_0)
    maybe_1 = module_0.Maybe(var_2, set_0)
    var_3 = maybe_1.to_validation()
    var_4 = var_0.to_validation()
    var_5 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_15():
    str_0 = "`!El/bJ"
    list_0 = [str_0, str_0, str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = var_0.to_lazy()
    bool_0 = var_2.__eq__(str_0)
    var_3 = var_0.to_lazy()
    bool_1 = var_0.__eq__(var_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_4 = var_0.map(var_1)
    var_5 = var_1.map(var_2)
    var_6 = var_0.to_try()
    var_7 = maybe_0.map(var_6)


def test_case_16():
    str_0 = "(CCU)ks)-2+n6JT"
    list_0 = [str_0, str_0, str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(var_1, str_0)
    var_2 = var_0.to_lazy()
    bool_0 = var_2.__eq__(str_0)
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_0.to_validation()
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_6 = maybe_0.to_box()
    var_7 = var_2.bind(var_5)
    var_8 = var_0.to_validation()
    var_9 = var_5.to_try()
    var_10 = var_3.to_validation()
    var_11 = var_0.to_either()
    var_12 = var_0.map(var_5)
    var_13 = var_11.map(var_7)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.to_lazy()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.get_or_else(maybe_1)
    var_3 = maybe_1.to_validation()
    var_2.to_try()
