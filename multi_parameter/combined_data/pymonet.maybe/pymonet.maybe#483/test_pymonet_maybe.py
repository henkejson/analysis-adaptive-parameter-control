# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    complex_0 = 249.076 + 1015.6819j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(none_type_0)
    complex_0.to_validation()


def test_case_3():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(bool_0)
    bool_2 = var_1.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.filter(maybe_1)
    var_3 = var_2.to_lazy()
    maybe_1.filter(var_0)


def test_case_4():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = True
    var_0 = maybe_0.map(tuple_0)
    maybe_1 = module_0.Maybe(bool_2, bool_1)
    maybe_1.filter(none_type_0)


def test_case_5():
    complex_0 = 249.076 + 1015.6819j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    maybe_1.map(none_type_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(bool_0)
    bool_2 = var_1.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.filter(maybe_1)
    var_3 = var_2.to_lazy()
    var_4 = maybe_1.ap(var_1)
    var_5 = var_4.bind(var_4)
    maybe_1.filter(var_4)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    int_0 = -612
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: bool_0,
        int_0: int_0,
        bool_0: none_type_0,
    }
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.bind(maybe_1)


def test_case_8():
    generic_0 = module_1.Generic()
    int_0 = 1502
    maybe_0 = module_0.Maybe(generic_0, int_0)
    var_0 = maybe_0.ap(generic_0)
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_9():
    list_0 = []
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_2 = module_0.Maybe(list_0, list_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.filter(maybe_1)
    maybe_1.filter(var_0)


def test_case_11():
    complex_0 = -1492.29609 - 36j
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_0.to_box()


def test_case_12():
    int_0 = 1584
    str_0 = "&1mq\ty%t63"
    int_1 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_1, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_validation()


def test_case_13():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(bool_0)
    bool_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.filter(maybe_1)
    var_3 = var_2.to_lazy()
    var_4 = maybe_1.ap(var_1)
    var_5 = var_4.bind(var_4)
    maybe_1.filter(var_4)


def test_case_14():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_try()


def test_case_15():
    int_0 = -2454
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    object_0 = module_2.object()
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    list_1 = [list_0, set_0, list_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(object_0)


def test_case_17():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.filter(maybe_1)
    var_2 = var_1.to_lazy()
    maybe_1.filter(var_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_19():
    complex_0 = -1112.59 + 165.96j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    none_type_1 = None
    object_0 = module_2.object()
    maybe_1 = module_0.Maybe(none_type_1, object_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.filter(var_3)
    var_6 = var_3.bind(none_type_0)
    var_7 = maybe_1.to_try()
    var_6.to_either()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_1.map(var_1)


def test_case_22():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_23():
    complex_0 = -1629.69822 - 1755.69276j
    complex_1 = 243.71 - 1161.1j
    maybe_0 = module_0.Maybe(complex_1, complex_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_lazy()
    var_0.get_or_else(complex_0)


def test_case_24():
    complex_0 = 249.076 + 1015.6819j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)
