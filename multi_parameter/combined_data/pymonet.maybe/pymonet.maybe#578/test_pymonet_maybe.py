# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = -3598
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -3598
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.ap(var_1)
    maybe_1 = module_0.Maybe(int_0, var_0)
    var_3 = var_1.ap(maybe_0)
    var_4 = var_0.to_try()
    var_4.bind(var_0)


def test_case_3():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(set_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_0.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    int_0 = 0
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.filter(bool_0)
    int_0.to_box()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"\xfd\x9a\\\xa8\xe1\xd5--\x1dL\xc1\x81\xdd\xa9\x9f\x94\xe7"
    tuple_0 = (bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    maybe_0.bind(bool_0)


def test_case_8():
    int_0 = 1522
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_lazy()
    var_1.filter(var_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bytes_0 = b"\xc4\xf8X\xd9WV\x07\xe0\x07\xb1xy\xb5M%x\xa4G"
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(bytes_0)


def test_case_10():
    bytes_0 = b"\xc6"
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    tuple_0 = (bytes_0, bool_0)
    int_0 = 1
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.get_or_else(tuple_0)
    var_1.to_either()


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_0.map(var_1)


def test_case_13():
    bool_0 = False
    int_0 = 0
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_0.to_box()


def test_case_14():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_15():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_0.to_either()


def test_case_16():
    object_0 = module_1.object()
    none_type_0 = None
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(none_type_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_2 = var_0.ap(maybe_0)
    var_3 = var_0.to_box()
    var_4 = var_3.to_either()
    maybe_2 = module_0.Maybe(bool_0, var_2)
    var_5 = var_1.to_try()
    var_6 = var_2.to_validation()


def test_case_18():
    bytes_0 = b"d\xa6\xa3\xc7\t1\xe4\x87\xac\x01R\xb0\x0e"
    bytes_1 = b"&\xc5S"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_1, bytes_1)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_try()
    var_3 = var_2.map(bytes_0)
    maybe_0.map(var_2)


def test_case_19():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.to_lazy()


def test_case_20():
    int_0 = 635
    int_0.to_try()


def test_case_21():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.bind(var_1)
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_5.to_box()
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_3 = maybe_2.__eq__(bool_2)
    var_6.get_or_else(var_6)


def test_case_22():
    bytes_0 = b"\xf8q4\xa8\tY\xb5\xc4p\xeeP\x07\x86e\xbfv"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.get_or_else(bytes_0)
    var_3 = maybe_0.to_try()
    var_1.filter(var_1)


def test_case_23():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    bool_2 = var_0.__eq__(bool_1)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_0.filter(var_0)
