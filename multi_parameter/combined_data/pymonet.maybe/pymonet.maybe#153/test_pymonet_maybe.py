# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_0.ap(none_type_0)


def test_case_3():
    float_0 = 2247.896
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.ap(var_1)
    var_3 = var_1.get_or_else(maybe_0)
    var_4 = var_0.to_lazy()
    var_5 = var_1.bind(var_1)
    var_6 = maybe_0.filter(var_4)
    var_7 = maybe_0.map(var_3)
    var_8 = var_5.to_try()
    maybe_1 = module_0.Maybe(float_0, var_0)
    var_9 = var_8.get_or_else(bool_0)


def test_case_4():
    float_0 = -2437.805
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.bind(var_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    generic_0 = module_1.Generic()
    float_0 = -2704.071
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    bool_1 = False
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_2 = maybe_1.to_either()
    bool_2 = False
    bool_3 = False
    var_3 = var_2.to_lazy()
    var_4 = var_2.to_validation()
    maybe_2 = module_0.Maybe(bool_2, bool_3)
    maybe_2.bind(var_2)


def test_case_7():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.ap(bool_0)
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(var_0)
    bool_2 = True
    var_4 = var_3.to_box()
    maybe_1 = module_0.Maybe(bool_2, set_0)
    var_5 = var_3.to_either()
    maybe_2 = module_0.Maybe(none_type_0, var_0)
    var_1.to_lazy()


def test_case_8():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.filter(bool_1)
    bool_2 = True
    var_4 = var_3.to_box()
    maybe_1 = module_0.Maybe(bool_2, set_0)
    var_5 = var_3.to_either()
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_6 = var_0.to_lazy()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.get_or_else(bool_2)
    maybe_1.filter(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.get_or_else(bool_2)
    maybe_1.ap(none_type_0)


def test_case_11():
    str_0 = "8<N-\r:\rLKJah+b?l:>{"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_13():
    str_0 = "N$(1]*"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_14():
    int_0 = -1624
    list_0 = [int_0, int_0, int_0]
    tuple_0 = (int_0, list_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_17():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = module_0.Maybe(maybe_0, bool_1)
    none_type_0 = None
    var_2 = var_1.to_try()
    var_3 = var_0.to_either()
    dict_0 = var_3.ap(set_0)
    var_4 = var_1.bind(dict_0)
    var_5 = var_4.filter(none_type_0)
    var_6 = var_1.to_box()
    var_7 = var_6.to_lazy()
    var_8 = var_7.to_try()
    maybe_1 = module_0.Maybe(var_7, var_7)
    var_9 = var_4.get_or_else(bool_1)


def test_case_18():
    int_0 = -673
    int_1 = -681
    maybe_0 = module_0.Maybe(int_1, int_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(none_type_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_2 = var_1.ap(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_3 = var_1.ap(none_type_0)
    var_4 = var_2.filter(int_1)
    var_5 = var_4.map(maybe_1)
    maybe_2 = module_0.Maybe(var_5, var_2)
    var_6 = var_4.to_box()
    var_7 = var_5.filter(none_type_1)
    var_8 = var_2.to_validation()
    var_9 = var_1.to_either()
    var_9.filter(var_9)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()
