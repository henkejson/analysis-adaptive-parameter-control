# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -4078
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -463
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_lazy()


def test_case_3():
    bool_0 = True
    float_0 = 1910.9312
    bool_1 = False
    maybe_0 = module_0.Maybe(float_0, bool_1)
    bool_2 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_0.to_box()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(maybe_0)


def test_case_5():
    none_type_0 = None
    float_0 = 755.3
    set_0 = {none_type_0, float_0}
    tuple_0 = (set_0, set_0, float_0)
    list_0 = [none_type_0, float_0, tuple_0, float_0]
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    bool_0 = False
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.bind(list_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_1.filter(var_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_1.__eq__(maybe_1)
    list_0 = [bool_1, maybe_1]
    tuple_0 = (list_0,)
    maybe_1.bind(tuple_0)


def test_case_7():
    bytes_0 = b"\r#\xa2"
    int_0 = 304
    dict_0 = {int_0: int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = maybe_0.get_or_else(bytes_0)


def test_case_8():
    none_type_0 = None
    float_0 = 755.3
    none_type_1 = None
    set_0 = {none_type_1, float_0}
    tuple_0 = (set_0, set_0, float_0)
    list_0 = [none_type_1, float_0, tuple_0, float_0]
    maybe_0 = module_0.Maybe(none_type_1, list_0)
    bool_0 = False
    tuple_1 = (float_0, maybe_0, bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(tuple_1)
    var_3 = var_1.bind(var_2)
    maybe_2 = module_0.Maybe(var_1, tuple_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_4 = maybe_1.ap(maybe_2)
    var_5 = var_4.to_validation()
    var_6 = var_3.map(var_0)
    var_7 = var_2.to_validation()
    var_7.filter(var_6)


def test_case_9():
    none_type_0 = None
    float_0 = 755.3
    set_0 = {none_type_0, float_0}
    tuple_0 = (set_0, set_0, float_0)
    list_0 = [none_type_0, float_0, tuple_0, float_0]
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    bool_0 = False
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_lazy()


def test_case_11():
    float_0 = -4073.49974
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    int_0 = -208
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(var_0)


def test_case_13():
    int_0 = -767
    set_0 = {int_0, int_0, int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    str_0 = "Maybe[U]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    bytes_0 = b"\x8d\x92\x90\xf33\xe4\xa5\xe8\xbaF\xf6\x07"
    bytes_1 = b" \x91\xcc\xbe"
    list_0 = [bytes_0, bytes_0, bytes_1]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_0 = None
    var_1.ap(none_type_0)


def test_case_16():
    bytes_0 = b"|\x02\x8d7\x0f\xc8\xce\xc0\xe1\xa6\xf8\x12\xd1\xcd\xcf\x7f\xdbW"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = maybe_0.to_try()
    var_4.to_try()


def test_case_17():
    str_0 = "+3Z;d}"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    float_0 = 1910.9312
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)
    bool_2 = maybe_1.__eq__(float_0)
    var_0.to_lazy()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    float_0 = 755.3
    none_type_1 = None
    set_0 = {none_type_1, float_0}
    tuple_0 = (set_0, set_0, float_0)
    list_0 = [none_type_1, float_0, tuple_0, float_0]
    maybe_0 = module_0.Maybe(none_type_1, list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, maybe_0)
    var_0 = maybe_1.filter(none_type_1)
    var_1 = var_0.ap(var_0)
    var_2 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_3 = var_0.to_validation()
    var_4 = var_0.map(var_3)
    var_5 = var_0.map(var_3)
    maybe_2.filter(var_0)
