# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"Y\xf2\x9f\x83\xa6\xc4S"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = ">_\\EKbsmAj,ae9=vg"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    tuple_0 = (str_0, maybe_0)
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_validation()
    object_0 = module_1.object()
    var_1.to_either()


def test_case_3():
    str_0 = "$h+?f(@;\x0c+`$wble"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.ap(var_1)
    var_4 = maybe_0.filter(var_0)
    var_5 = var_4.bind(var_1)
    var_6 = maybe_0.ap(var_4)
    var_7 = var_3.filter(var_3)
    var_8 = var_4.to_try()
    var_9 = var_7.to_try()
    var_8.to_lazy()


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\xc8\xe1w*\xfe\x029\xfc3\xcd"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.map(none_type_1)
    var_1 = var_0.filter(none_type_0)


def test_case_5():
    bytes_0 = b"\xa7\xd4\xc7\xb8\x82\x8b\xe1\x8c@r"
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(set_0)


def test_case_6():
    str_0 = "`"
    bytes_0 = b"<\xa5\x02\x03\xd8\xc0\xc4\n\x06"
    set_0 = {bytes_0, bytes_0, bytes_0}
    tuple_0 = (bytes_0, set_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_7():
    none_type_0 = None
    int_0 = 2654
    int_1 = -1480
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.to_either()
    var_1.get_or_else(none_type_0)


def test_case_8():
    bytes_0 = b"\x9dauWN\xeb\xbe\x1b\xec\x15\xe1"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(list_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\xc8\xe1w*\xfe\x029\xfc3\xcd"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.map(none_type_1)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = -1838
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_validation()
    maybe_0.ap(none_type_0)


def test_case_12():
    complex_0 = 504.563 - 114.773807j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = module_0.Maybe(maybe_0, complex_0)
    var_4 = var_3.to_box()
    var_5 = var_1.to_validation()
    var_6 = var_1.ap(var_5)
    var_7 = var_6.to_either()
    var_5.ap(var_2)


def test_case_13():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(var_0)


def test_case_14():
    bytes_0 = b"\xf2\x9f\x83\xa6\xc4S"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_15():
    set_0 = set()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(set_0)
    var_1.to_either()


def test_case_16():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\xf8\x88\x98r7\xf4\x1a|\xe0"
    int_0 = 596
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    str_0 = "YPg\x0bxf;N2`\x0cinD!<1qx"
    maybe_1 = module_0.Maybe(str_0, str_0)
    maybe_2 = module_0.Maybe(str_0, maybe_1)
    var_4 = maybe_2.filter(none_type_0)
    var_5 = var_4.to_lazy()


def test_case_18():
    bool_0 = True
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_0.ap(bool_0)


def test_case_19():
    bool_0 = True
    object_0 = module_1.object()
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(var_0)
    maybe_0.filter(object_0)


def test_case_20():
    float_0 = 8.31
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_either()
    var_1.to_validation()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_either()
    var_2.bind(maybe_0)
