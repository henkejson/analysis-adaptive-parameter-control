# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = -1929
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.map(var_2)
    maybe_2 = module_0.Maybe(none_type_0, maybe_0)
    var_4 = maybe_1.to_lazy()
    bool_0 = maybe_2.__eq__(var_1)


def test_case_3():
    int_0 = -1929
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.map(var_2)
    maybe_2 = module_0.Maybe(none_type_0, maybe_0)
    var_4 = maybe_1.to_lazy()


def test_case_4():
    str_0 = ' p\x0c"%}+hMGPRm`'
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    tuple_0 = (str_0, list_0, bool_0, bool_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    maybe_0.map(tuple_0)


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.get_or_else(bool_1)
    var_4 = var_2.filter(var_2)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(maybe_0)


def test_case_6():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(tuple_0)


def test_case_7():
    int_0 = -1929
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.map(var_0)
    var_3 = var_1.get_or_else(bool_1)
    var_4 = var_1.filter(var_2)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(maybe_0)


def test_case_10():
    bytes_0 = b"\x84+\x08\xac\xb9\xcaz\x87\x92"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.bind(bytes_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.get_or_else(maybe_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(var_1, bool_2)
    var_4 = maybe_0.to_either()
    var_5 = var_0.to_try()
    var_6 = var_0.to_lazy()
    var_4.filter(var_6)


def test_case_12():
    float_0 = 628.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.filter(var_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.get_or_else(bool_0)


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    bool_1 = True
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_1.filter(bool_1)


def test_case_15():
    int_0 = -27
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    dict_0 = {}
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_1.to_try()
    var_0.map(dict_0)


def test_case_17():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_validation()
    var_0.bind(bool_0)


def test_case_18():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    var_3 = var_2.to_try()
    var_2.map(none_type_0)
