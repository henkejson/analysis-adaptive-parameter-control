# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b'\xd0\xe2\xb1c"\x8c\x18\xa3Q\xcc]A2~'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 5203
    bytes_0 = b"\xd9\xbc\xce"
    list_0 = [int_0, int_0, int_0, bytes_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_either()
    var_3 = var_1.bind(var_2)
    bool_1 = var_1.__eq__(list_0)
    var_4 = maybe_0.to_box()
    var_5 = var_2.to_lazy()
    var_6 = var_3.to_validation()
    var_7 = maybe_0.to_try()
    var_8 = var_5.to_box()
    var_9 = var_8.to_either()
    var_10 = var_5.to_box()


def test_case_3():
    bytes_0 = b"a"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_0.to_either()
    var_3 = var_2.bind(var_2)
    var_4 = var_0.to_box()
    var_5 = var_0.map(var_0)
    var_6 = var_1.bind(var_5)
    var_7 = var_5.ap(bytes_0)


def test_case_4():
    set_0 = set()
    none_type_0 = None
    int_0 = 1970
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.map(set_0)


def test_case_5():
    str_0 = "3p\nv&"
    tuple_0 = (str_0,)
    maybe_0 = module_0.Maybe(tuple_0, str_0)
    var_0 = maybe_0.bind(str_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\x12\xa3\xe2\x11\xa3p\xdf'"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bytes_0 = b"a"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_0.to_either()
    var_3 = var_2.bind(var_2)
    var_4 = var_0.to_box()
    var_5 = var_2.to_try()
    var_6 = var_1.bind(var_5)
    var_5.ap(bytes_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    bool_0 = True
    complex_0 = -1461.378 - 1065.8049j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_4 = var_3.to_either()
    bool_1 = True
    var_5 = var_1.bind(var_2)
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    var_6 = maybe_1.to_try()
    var_7 = var_6.get_or_else(complex_0)
    var_7.to_try()


def test_case_12():
    none_type_0 = None
    tuple_0 = ()
    none_type_1 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    str_0 = ":oxA2e\rt*r^`|9L3"
    tuple_1 = (str_0,)
    maybe_1 = module_0.Maybe(tuple_1, tuple_1)
    var_1 = maybe_1.to_validation()
    complex_0 = -722.9 - 4616j
    maybe_2 = module_0.Maybe(complex_0, complex_0)
    var_2 = maybe_2.to_try()
    var_2.to_either()


def test_case_13():
    int_0 = 3663
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    bool_1 = var_2.__eq__(int_0)
    tuple_0 = (int_0, int_0, bool_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_box()
    var_3.to_either()


def test_case_14():
    bytes_0 = b"\xbe\x88\xb1"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_1.__eq__(bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.ap(bool_0)
    var_3 = maybe_1.filter(var_2)
    var_4 = var_3.bind(var_1)
    var_5 = maybe_1.get_or_else(none_type_0)
    none_type_1 = None
    var_6 = var_3.to_box()
    maybe_2 = module_0.Maybe(none_type_1, var_1)
    maybe_3 = module_0.Maybe(var_5, var_5)
    var_7 = maybe_3.to_either()
    maybe_0.bind(var_7)


def test_case_15():
    bool_0 = False
    object_0 = module_1.object()
    bool_1 = True
    maybe_0 = module_0.Maybe(object_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.bind(bool_0)


def test_case_16():
    bytes_0 = b"\x08\xbb\xe0;*p.T\xb8\x80\xf7\x1f\x02\x90\x8c"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(bytes_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.bind(var_1)
    var_1.filter(var_1)


def test_case_18():
    str_0 = "5.AcxUt#"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    str_1 = "pI~pCf,g \x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: var_0, str_1: str_0}
    module_2.Generic(**dict_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.to_box()
    maybe_3 = module_0.Maybe(var_1, var_1)
    var_3 = var_2.to_try()
    var_1.ap(var_3)


def test_case_21():
    bytes_0 = b"7 @\xd4\x90\xc7\xe4\xb3\x1fi\xc2\x0c\xf6\x04\x89\xc6`\x989r"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_22():
    object_0 = module_1.object()
    str_0 = "e63 oI H"
    set_0 = {str_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_0 = var_1.__eq__(object_0)


def test_case_23():
    float_0 = -1150.493
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    int_0 = -887
    set_0 = {int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_0.to_validation()
    var_1.filter(var_2)


def test_case_24():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_25():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(maybe_0)


def test_case_26():
    int_0 = 5198
    bytes_0 = b"\xd9\xbc\xce"
    list_0 = [int_0, int_0, int_0, bytes_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    bytes_1 = b"\x94\xd1@\x13;J\x95\xc2;\x93\xcb\xaaoK"
    var_1 = maybe_0.get_or_else(bytes_1)
    var_2 = var_0.to_validation()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_either()
    var_5 = var_0.bind(var_4)
    var_6 = maybe_0.get_or_else(var_5)
    var_7 = var_4.to_validation()
    bool_1 = var_6.__eq__(var_6)
    var_2.filter(var_2)


def test_case_27():
    bytes_0 = b"\xd9\xbc\xce"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    bytes_1 = b"\x94\xd1@\x13;J\x95\xc2;\x93\xcb\xaaoK"
    var_1 = maybe_0.get_or_else(bytes_1)
    var_2 = var_0.to_validation()
    var_3 = var_0.map(var_2)
    var_4 = var_0.to_box()
    maybe_1 = module_0.Maybe(list_0, var_1)
    var_5 = var_4.to_validation()
    bool_1 = maybe_0.__eq__(maybe_1)
    var_6 = maybe_0.to_try()
    var_7 = var_2.to_box()
    var_8 = var_0.to_lazy()
    bool_2 = var_2.__eq__(var_7)
    var_9 = var_4.to_lazy()
    var_10 = var_8.to_box()
    bool_0.to_lazy()
