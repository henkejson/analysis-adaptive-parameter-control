# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -2774
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_0.to_lazy()


def test_case_3():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    int_0 = 101
    var_0 = maybe_0.bind(int_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_3.to_validation()


def test_case_4():
    none_type_0 = None
    str_0 = "2\\8!\\bk*f.*$&G"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.ap(none_type_0)
    var_3 = var_1.map(var_1)
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_try()
    var_5.ap(none_type_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.map(bool_0)


def test_case_6():
    int_0 = 783
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = 910
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.bind(dict_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_7():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    tuple_0 = ()
    var_0 = maybe_0.get_or_else(tuple_0)
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    str_0 = "kIT@O"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_either()


def test_case_10():
    float_0 = 1309.706657
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_3.filter(var_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_14():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(set_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.ap(bool_0)
    none_type_0 = None
    var_2 = var_1.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_3 = maybe_1.to_validation()
    maybe_1.filter(var_3)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    int_0 = 0
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_1.to_box()
    var_3.to_box()


def test_case_17():
    complex_0 = -2185.397851 + 1257.43995j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    var_1 = var_0.ap(complex_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_validation()
    var_4 = var_1.filter(var_1)
    var_5 = maybe_0.to_either()
    bool_1 = var_4.__eq__(var_4)
    var_6 = var_0.filter(var_3)
    var_7 = var_3.to_try()
    var_7.to_validation()


def test_case_18():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_0.filter(int_0)


def test_case_19():
    complex_0 = -2185.397851 + 1257.43995j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    var_1 = var_0.ap(complex_0)
    none_type_0 = None
    var_2 = var_1.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_3 = var_1.to_validation()
    var_4 = var_1.filter(var_1)
    var_5 = maybe_0.to_either()
    var_6 = var_4.filter(var_5)
    var_7 = maybe_0.to_either()
    var_8 = var_5.to_try()
    var_9 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_0)
    var_10 = maybe_1.to_validation()
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_1)
    var_11 = var_1.ap(var_5)
    var_12 = var_11.get_or_else(var_10)
    var_3.ap(bool_2)
