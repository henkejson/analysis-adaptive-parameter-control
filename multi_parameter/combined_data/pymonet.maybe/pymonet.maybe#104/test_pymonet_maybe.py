# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -615
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = maybe_0.get_or_else(maybe_0)


def test_case_3():
    int_0 = -75
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.map(var_1)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    float_0 = 1950.2
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.filter(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_1 = var_1.__eq__(var_3)
    bool_2 = bool_1.__eq__(var_0)


def test_case_6():
    str_0 = "5P2N&rSV{BBM]DJY"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(var_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.ap(str_0)


def test_case_7():
    none_type_0 = None
    float_0 = 1950.23221
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(maybe_0, var_2)
    bool_0 = var_0.__eq__(var_1)
    bool_1 = maybe_0.__eq__(var_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_1.map(bool_1)
    var_2 = maybe_1.to_lazy()
    bool_3 = var_1.__eq__(var_0)
    bool_4 = var_2.__eq__(maybe_1)
    none_type_0 = None
    var_3 = maybe_1.get_or_else(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_11():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_12():
    int_0 = 851
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(bool_0)


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xcb&\x0eOJ\xf3\xf0"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_either()


def test_case_15():
    float_0 = 441.1328
    set_0 = {float_0, float_0, float_0}
    maybe_0 = module_0.Maybe(set_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_1)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = maybe_0.to_validation()
    var_2.map(var_0)


def test_case_17():
    none_type_0 = None
    none_type_0.get_or_else(none_type_0)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(maybe_1)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_1.filter(maybe_0)
    bool_1 = var_2.__eq__(var_1)
    var_3 = maybe_0.get_or_else(none_type_0)
    var_4 = maybe_0.ap(bool_1)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = var_2.filter(maybe_0)
    var_4 = maybe_0.to_try()
    var_5 = var_3.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_6 = var_2.to_either()
    var_7 = var_5.to_try()
    bool_2 = var_7.__eq__(none_type_0)
    bool_3 = maybe_1.__eq__(var_0)
    var_8 = var_3.filter(var_4)
    var_7.to_either()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_either()
    var_4.map(none_type_0)
