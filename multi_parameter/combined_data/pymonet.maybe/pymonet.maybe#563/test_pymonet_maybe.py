# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(bool_0)
    var_2 = maybe_0.map(var_0)
    bool_1 = var_2.__eq__(var_0)
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.ap(bool_0)
    object_0 = module_1.object()
    bool_2 = var_3.__eq__(object_0)
    var_5.filter(var_3)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_4():
    str_0 = "3l~\ntHDA/1e"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.map(none_type_0)
    var_4 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_5 = maybe_1.to_box()


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_1.bind(none_type_1)
    bool_2 = True
    var_3 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(var_2, bool_2)
    var_4 = maybe_2.to_try()
    var_5 = var_1.to_either()
    maybe_3 = module_0.Maybe(none_type_1, var_0)
    bool_3 = maybe_2.__eq__(none_type_0)
    var_6 = maybe_3.filter(bool_1)
    none_type_1.bind(bool_2)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_1 = maybe_1.to_lazy()
    maybe_1.bind(none_type_1)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    var_1.ap(bool_0)


def test_case_8():
    str_0 = "\n        Transform Lazy into successful Validation with constructor_fn result.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    str_0 = "d'zFe'$sd@1dJ7qXS"
    tuple_0 = ()
    dict_0 = {str_0: tuple_0, tuple_0: tuple_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_2.filter(maybe_2)
    maybe_1.filter(var_1)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = maybe_2.filter(maybe_2)
    maybe_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()


def test_case_13():
    str_0 = "lAKxHRch"
    generic_0 = module_2.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(str_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(maybe_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(none_type_1)
    var_3 = var_1.get_or_else(none_type_0)
    var_4 = var_2.to_try()
    var_5 = var_1.to_either()
    dict_0 = {none_type_1: none_type_1}
    maybe_1 = module_0.Maybe(none_type_1, dict_0)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_6 = maybe_1.filter(bool_0)
    var_7 = var_2.to_validation()
    var_8 = var_4.get_or_else(var_1)
    var_9 = var_7.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    float_0 = 2389.8008
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_2.map(var_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_1.get_or_else(none_type_0)


def test_case_19():
    str_0 = "3l~\ntHDA/1e"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.to_lazy()
    var_5 = var_3.get_or_else(bool_1)
    var_6 = var_3.ap(str_0)
    var_7 = var_6.to_box()
    var_8 = var_3.map(var_3)
    var_9 = var_4.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, var_7)
    var_10 = var_9.to_box()
    var_4.to_lazy()


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = module_0.Maybe(var_1, var_0)
    bool_1 = var_2.__eq__(var_0)
    var_3 = maybe_0.get_or_else(bool_0)
    var_3.to_either()
