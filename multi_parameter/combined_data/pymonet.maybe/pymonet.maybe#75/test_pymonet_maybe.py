# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -2317
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    maybe_0 = module_0.Maybe(set_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    int_0 = -1512
    bool_2 = True
    bool_3 = set_0.__eq__(none_type_0)
    bool_4 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_4)
    bool_5 = maybe_1.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(int_0, bool_2)
    var_1 = maybe_2.to_try()
    var_1.to_try()


def test_case_3():
    str_0 = "L"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.ap(maybe_0)


def test_case_5():
    str_0 = "zeRLfTkB"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(str_0)
    var_2 = var_1.to_either()
    var_3 = var_1.filter(var_2)
    var_4 = var_3.to_either()
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.to_lazy()
    var_7 = var_6.map(var_2)
    var_6.to_lazy()


def test_case_6():
    bytes_0 = b"\x14?nQWM,\xc5i\x93\xcen\xf8\x9d\xb0\x92\xa3\r2\x16"
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    maybe_0 = module_0.Maybe(set_0, tuple_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    bool_1 = maybe_0.to_box()
    maybe_0.bind(bytes_0)


def test_case_7():
    str_0 = "L"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_8():
    str_0 = "L"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_10():
    str_0 = "ahL3ba0$?"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_either()


def test_case_11():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)


def test_case_12():
    str_0 = "L"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_lazy()
    var_4 = var_3.to_box()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_5 = maybe_1.get_or_else(list_0)


def test_case_14():
    none_type_0 = None
    int_0 = -2317
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_0.filter(none_type_0)


def test_case_15():
    str_0 = "L"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_16():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_1.to_validation()
    var_0.to_lazy()


def test_case_17():
    str_0 = "\x0b}"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.get_or_else(none_type_0)
    var_2.bind(var_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    str_0 = "_\x0b;\x0c*}GG\x0ciZ1fMXz0jci"
    bool_1 = True
    var_1 = maybe_0.get_or_else(maybe_1)
    bytes_0 = b"\x11\xd4\xe8\xa5\xe9\x80{*q,.\xcc"
    var_2 = maybe_0.map(bool_0)
    var_3 = var_2.to_try()
    float_0 = -871.28
    tuple_0 = (str_0, bool_1, bytes_0, float_0)
    str_1 = "Zb%;O&7@IL"
    var_4 = var_0.to_validation()
    var_5 = maybe_0.ap(var_4)
    maybe_2 = module_0.Maybe(str_1, str_1)
    var_6 = maybe_2.ap(tuple_0)
    var_7 = var_6.map(maybe_1)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_1.to_either()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.filter(var_0)
    var_3 = module_0.Maybe(var_1, none_type_0)
    var_4 = maybe_0.to_either()
    var_5 = var_1.ap(var_0)
    var_6 = maybe_0.filter(var_1)
    var_7 = var_3.get_or_else(bool_0)
    var_8 = var_6.map(var_1)
    bool_1 = False
    var_9 = var_6.to_lazy()
    maybe_1 = module_0.Maybe(var_8, bool_1)
    bool_2 = var_6.__eq__(var_7)
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_10 = var_3.to_validation()
    maybe_2.filter(var_1)


def test_case_23():
    int_0 = -1832
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(int_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.ap(none_type_0)
    var_4 = var_0.bind(var_2)
    var_5 = var_4.filter(var_1)
    var_6 = var_1.bind(var_1)
    bool_1 = var_2.__eq__(var_3)
    bool_2 = var_2.__eq__(maybe_0)
    var_7 = var_6.to_box()
    var_8 = var_0.map(var_7)
    var_9 = var_4.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    bool_3 = var_4.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(var_0, var_2)
    var_10 = var_6.bind(maybe_0)
    bool_4 = maybe_2.__eq__(maybe_0)
    var_11 = var_9.to_either()
    var_11.get_or_else(bool_3)
