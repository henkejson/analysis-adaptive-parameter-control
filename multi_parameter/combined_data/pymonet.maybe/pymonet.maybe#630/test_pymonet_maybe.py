# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\\\x1a\xcf|\x08"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_try()
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_validation()


def test_case_3():
    int_0 = -3118
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(var_1)


def test_case_4():
    bytes_0 = b"\xee\xf6\xfd\x11%\x07Q\x97e8\x18\xd8\xc2"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.to_validation()


def test_case_5():
    bytes_0 = b"\xdc\xaa\xacI\xf2\xc5\xc8"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1.map(bytes_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\xa7\x18\xf8\xe1\x9b\x9a\r\xd7\xf3IewA\x1a_"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.to_either()
    var_5 = var_4.ap(bytes_0)
    var_6 = var_4.map(none_type_0)
    var_7 = var_6.to_box()
    var_7.to_box()


def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.ap(tuple_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_3.to_lazy()
    var_5 = var_0.get_or_else(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_4, var_4)
    var_6 = var_3.to_validation()
    bytes_0 = b"\n\xc8\x9f\x8e&\x1e\xf2\xd34W"
    bool_1 = False
    var_7 = maybe_0.bind(var_3)
    var_8 = maybe_0.filter(none_type_0)
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    maybe_2.bind(none_type_0)


def test_case_8():
    bytes_0 = b"\\\x1a\xcf|\x08"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    int_0 = 1
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.ap(int_0)
    var_2 = maybe_1.to_try()
    var_2.to_validation()


def test_case_9():
    bytes_0 = b"y"
    bytes_1 = b"TJ(\xe0\x13\xce\xeaU\x95\x92\x8c\xed\x17ji \xc2=\xfc"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(bytes_1)


def test_case_10():
    bytes_0 = b"\xee\xf6\xfd\x11%\x07Q\x97e8\x18\xd8\xc2"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(bool_0)


def test_case_11():
    str_0 = "y\rr-HLR#iQ\\"
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.bind(var_0)
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_2.get_or_else(maybe_2)
    var_4 = maybe_1.to_either()
    var_5 = var_1.map(var_2)
    var_6 = var_1.to_either()
    maybe_3 = module_0.Maybe(var_4, var_4)
    bool_0 = maybe_2.__eq__(var_3)
    bool_1 = False
    var_7 = var_5.bind(bool_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_1.to_lazy()


def test_case_13():
    int_0 = -2612
    str_0 = "\x0cBca6K5\\jw,"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    none_type_0 = None
    var_2 = maybe_0.bind(none_type_0)
    var_3 = maybe_0.ap(int_0)
    var_4 = maybe_0.filter(maybe_0)
    var_5 = maybe_0.filter(var_3)
    var_6 = var_3.to_lazy()
    var_7 = var_3.to_validation()
    var_8 = var_3.to_validation()
    var_7.bind(var_7)


def test_case_14():
    int_0 = 245
    set_0 = set()
    maybe_0 = module_0.Maybe(int_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)


def test_case_16():
    str_0 = "y\rrRHLR#iQ\\"
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    list_0 = [str_0, str_0, str_0, str_0]
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.bind(var_0)
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_2.get_or_else(maybe_2)
    var_4 = maybe_1.to_either()
    var_5 = var_1.map(var_2)
    var_6 = var_1.to_either()
    maybe_3 = module_0.Maybe(var_4, var_4)
    bool_0 = maybe_2.__eq__(var_3)
    bool_1 = True
    none_type_0 = None
    maybe_4 = module_0.Maybe(none_type_0, bool_1)
    var_7 = maybe_2.bind(var_4)
    var_8 = var_2.to_validation()


def test_case_17():
    int_0 = 5076
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(int_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_lazy()
    var_4 = var_0.to_box()


def test_case_18():
    int_0 = 1304
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_2 = module_0.Maybe(maybe_1, var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.bind(var_1)
    var_5 = var_4.map(var_1)
    var_6 = var_1.to_try()
    var_7 = maybe_0.ap(int_0)
    bool_1 = var_6.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(bool_0, var_1)
    bool_2 = var_2.__eq__(var_4)
    var_6.to_lazy()
