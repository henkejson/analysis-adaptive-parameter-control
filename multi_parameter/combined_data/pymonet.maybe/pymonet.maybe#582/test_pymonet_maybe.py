# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    int_0 = 2910
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_validation()
    int_1 = -3804
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(int_1, int_1)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(int_0, var_2)
    var_0.get_or_else(int_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    var_3 = var_0.filter(maybe_0)
    var_4 = var_0.get_or_else(bool_1)
    maybe_1.filter(var_0)


def test_case_4():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_2 = var_0.bind(var_0)
    var_3 = maybe_0.ap(bool_1)
    var_4 = var_3.to_lazy()
    var_5 = maybe_1.filter(var_2)
    var_6 = var_5.to_either()
    var_7 = var_5.to_either()


def test_case_5():
    str_0 = "FE\x0cJz8l%7m|7R"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    float_0 = -3031.35462
    tuple_0 = ()
    maybe_1 = module_0.Maybe(float_0, tuple_0)
    maybe_1.map(var_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    float_0 = 807.368311
    var_2 = maybe_0.filter(float_0)
    var_3 = var_1.bind(var_1)
    var_4 = var_1.filter(float_0)
    var_5 = var_2.to_either()
    var_6 = maybe_0.to_lazy()
    var_6.get_or_else(var_6)


def test_case_7():
    bytes_0 = b"\xcc\x91y\xfc\x06\xbb%\x1b\xbc@"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(bool_0)


def test_case_10():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_2 = var_0.filter(maybe_0)
    var_3 = var_0.get_or_else(var_1)
    maybe_1.filter(var_0)


def test_case_12():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.get_or_else(none_type_1)
    var_1.map(bool_1)


def test_case_13():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.to_either()
    var_0.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(bool_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(bool_0)


def test_case_16():
    bytes_0 = b"\xa9bs\x07\x92"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_either()
    float_0 = -3233.116572
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_2 = maybe_2.get_or_else(var_1)
    var_3 = maybe_2.to_validation()
    none_type_0 = None
    var_4 = maybe_2.ap(none_type_0)
    bool_2 = maybe_2.__eq__(var_0)
    var_5 = var_3.to_try()
    var_6 = maybe_2.to_lazy()
    var_7 = maybe_2.bind(var_2)
    var_8 = maybe_2.ap(maybe_1)
    var_3.filter(bool_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(bool_0)


def test_case_18():
    bytes_0 = b"\xa9bs\x07\x92"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_either()
    float_0 = -3233.116572
    maybe_2 = module_0.Maybe(float_0, float_0)
    dict_0 = {}
    var_2 = maybe_0.to_try()
    var_3 = maybe_2.get_or_else(dict_0)
    var_4 = maybe_2.to_validation()
    none_type_0 = None
    var_5 = maybe_2.ap(none_type_0)
    bool_2 = maybe_2.__eq__(dict_0)
    var_6 = var_4.to_try()
    var_7 = maybe_2.to_lazy()
    var_8 = maybe_2.bind(var_3)
    var_9 = maybe_2.ap(maybe_1)
    var_4.filter(bool_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(bool_0)


def test_case_20():
    dict_0 = {}
    none_type_0 = None
    bytes_0 = b"\x84\x89\xa1\x909\xca\xd8X_\x12"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.get_or_else(dict_0)


def test_case_21():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_1.to_lazy()


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.ap(bool_0)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_1.to_validation()
    var_4 = var_0.get_or_else(var_0)
    bool_1 = maybe_1.__eq__(var_0)
    var_5 = var_2.to_validation()
    bool_2 = var_5.__eq__(maybe_1)
    var_6 = var_0.to_box()
    var_7 = var_2.bind(var_6)
    var_8 = var_6.to_validation()
    var_9 = var_0.get_or_else(var_3)
    var_3.ap(var_8)


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_1.to_box()
    bool_1 = False
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_1 = maybe_2.to_lazy()
    var_1.get_or_else(bool_1)


def test_case_25():
    bytes_0 = b"\xa9bs\x07\x92"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_either()
    float_0 = -3233.116572
    maybe_2 = module_0.Maybe(float_0, float_0)
    dict_0 = {}
    var_2 = maybe_1.get_or_else(bytes_0)
    var_3 = maybe_2.get_or_else(dict_0)
    var_4 = maybe_2.to_validation()
    none_type_0 = None
    var_5 = maybe_2.ap(none_type_0)
    bool_2 = maybe_2.__eq__(dict_0)
    var_6 = var_4.to_try()
    maybe_1.bind(dict_0)
