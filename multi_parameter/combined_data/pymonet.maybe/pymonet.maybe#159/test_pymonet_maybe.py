# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_validation()
    bool_1 = var_1.__eq__(maybe_0)
    var_3 = var_1.ap(var_1)
    var_4 = maybe_0.map(var_3)
    var_5 = var_4.map(bool_0)
    var_6 = var_5.to_box()
    var_7 = var_4.get_or_else(var_4)
    var_8 = maybe_0.map(bool_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_9 = var_1.to_try()
    maybe_1.filter(var_9)


def test_case_3():
    str_0 = "\n#P^z4Ful]c$"
    none_type_0 = None
    bytes_0 = b""
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    bool_0 = maybe_0.__eq__(str_0)
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_1 = (str_0, generic_0, tuple_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(tuple_1, bool_2)


def test_case_4():
    float_0 = 1876.75
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.bind(float_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.map(var_1)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_validation()
    var_5.map(bool_0)


def test_case_5():
    str_0 = "i|CKP,_6K9)!j9`y\r2R"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_1.map(var_0)


def test_case_6():
    float_0 = -1159.513
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = False
    bool_2 = False
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.map(var_2)
    float_1 = -2622.48
    bool_3 = True
    bool_4 = var_2.__eq__(var_4)
    maybe_1 = module_0.Maybe(float_1, bool_3)
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_5 = maybe_2.to_validation()
    var_6 = maybe_2.to_box()
    var_7 = maybe_1.bind(maybe_2)
    none_type_0 = None
    var_8 = var_2.map(none_type_0)
    var_9 = var_6.to_try()
    var_10 = maybe_1.map(var_6)
    maybe_2.bind(var_6)


def test_case_7():
    bytes_0 = b"\x8f5VJ\x8ec`"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.to_either()
    var_3 = var_2.bind(var_0)


def test_case_8():
    bool_0 = False
    int_0 = 3076
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    float_0 = 1876.75
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.bind(float_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.filter(var_1)
    var_3 = var_1.to_either()
    var_4 = var_0.filter(var_3)
    var_5 = var_1.to_validation()
    var_5.map(var_1)


def test_case_10():
    int_0 = 3937
    bool_0 = False
    set_0 = {int_0, int_0, bool_0, int_0}
    tuple_0 = (int_0, set_0, bool_0, set_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\xb4\xab\xff\xb6\xe8\xb3?\xf3\x80\xd5d"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_2 = module_0.Maybe(maybe_0, bytes_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(bytes_0)
    var_3 = var_1.filter(maybe_2)
    var_4 = var_1.ap(tuple_0)
    var_5 = var_1.to_box()
    bool_1 = maybe_1.__eq__(none_type_0)
    bool_2 = var_4.__eq__(maybe_1)
    var_6 = maybe_0.get_or_else(maybe_1)
    var_7 = maybe_1.to_lazy()
    maybe_3 = module_0.Maybe(var_5, var_3)
    maybe_4 = module_0.Maybe(var_1, bool_0)
    var_8 = var_1.to_either()
    var_9 = var_8.to_validation()
    var_10 = var_5.to_validation()


def test_case_12():
    none_type_0 = None
    int_0 = 898
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(none_type_0)
    var_3.to_either()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\x18\xcc\xa2k\xa7\x1e\x90\xc07\r"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.map(none_type_0)


def test_case_14():
    none_type_0 = None
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)


def test_case_15():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = -1422
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(set_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    str_0 = "8RL|VIURg;xdo)\x0c9\t"
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(str_0)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    complex_0 = -1023 - 1878.246511j
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_validation()
    var_1.get_or_else(complex_0)


def test_case_19():
    float_0 = -1287.256
    float_0.to_either()


def test_case_20():
    str_0 = "4${5"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    bool_2 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_lazy()
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_2 = maybe_2.to_try()
    var_2.to_box()


def test_case_21():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\xb4\xab\xff\xb6\xe8\xb3?\xf3\x80\xd5d"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(var_2, bytes_0)
    var_3 = maybe_1.filter(var_2)
    var_4 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(bytes_0)
    var_5 = var_2.filter(maybe_2)
    var_6 = var_2.ap(tuple_0)
    var_7 = var_3.to_box()
    bool_1 = maybe_1.__eq__(none_type_0)
    bool_2 = var_6.__eq__(maybe_1)
    var_8 = var_2.get_or_else(maybe_1)
    var_9 = maybe_1.to_lazy()
    var_10 = var_3.to_try()
    var_11 = var_5.to_lazy()
    var_12 = maybe_1.to_validation()
