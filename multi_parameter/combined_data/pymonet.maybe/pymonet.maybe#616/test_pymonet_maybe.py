# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 1244
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_validation()
    complex_0 = 2205.277 - 3238.93j
    maybe_1 = module_0.Maybe(var_2, complex_0)
    var_3 = var_1.map(maybe_1)
    var_4 = maybe_0.bind(var_1)
    var_5 = var_1.to_either()
    maybe_2 = module_0.Maybe(var_5, maybe_1)
    maybe_3 = module_0.Maybe(maybe_2, var_5)
    bool_0 = maybe_2.__eq__(maybe_3)


def test_case_3():
    str_0 = "U"
    complex_0 = 1176.04 - 821.831585j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)


def test_case_4():
    int_0 = 1244
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.to_validation()
    complex_0 = 2205.277 - 3238.93j
    maybe_1 = module_0.Maybe(var_3, complex_0)
    var_4 = var_2.map(maybe_1)
    var_5 = maybe_0.bind(var_2)
    var_6 = var_2.to_either()
    var_7 = var_6.ap(var_2)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(maybe_0)


def test_case_6():
    object_0 = module_1.object()
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(object_0)


def test_case_7():
    bytes_0 = b""
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.ap(bytes_0)
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_8():
    set_0 = set()
    str_0 = "DM_m+txl*@"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(set_0)


def test_case_9():
    float_0 = 711.05389
    bytes_0 = b"\xd8\xb1X\x14z\xf2;+\x17Z\xb9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(float_0)


def test_case_10():
    bytes_0 = b"\xfb\x18\x955m\xb0;\xfc"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    str_0 = ""
    bool_0 = False
    set_0 = {str_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    complex_0 = 1176.04 - 821.831585j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_0.to_box()


def test_case_13():
    complex_0 = 1176.04 - 821.831585j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_14():
    str_0 = "AB"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_1.filter(bool_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_validation()
    var_5 = var_2.to_try()
    maybe_1.filter(str_0)


def test_case_15():
    bool_0 = True
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    var_0 = maybe_0.ap(bool_0)
    bytes_0 = b"\x8b1"
    var_1 = var_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    var_2 = maybe_1.get_or_else(var_0)


def test_case_16():
    str_0 = "AB"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = maybe_0.ap(var_0)
    var_4 = var_3.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = var_1.filter(var_4)
    var_6 = maybe_1.to_try()
    var_6.filter(var_3)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()


def test_case_18():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    generic_0 = module_2.Generic()
    dict_0 = {generic_0: generic_0, generic_0: generic_0, generic_0: generic_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_1.to_validation()
    var_0.ap(maybe_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    int_0 = 608
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_0.to_validation()


def test_case_20():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(none_type_0)
