# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = var_0.get_or_else(bool_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.to_validation()
    var_4 = var_2.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_1.filter(bool_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_either()
    bool_1 = var_0.__eq__(var_1)
    var_2 = var_0.get_or_else(bool_0)
    var_3 = maybe_0.filter(bool_0)
    var_4 = var_3.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_1.filter(bool_0)


def test_case_4():
    bytes_0 = b"\xe2\xfd\x94\x9d~4\xab+\x10K]\x8eF\xa6\xd3\xd2\x98-"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_either()


def test_case_5():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.ap(var_1)
    bool_1 = var_2.__eq__(none_type_0)
    var_3 = maybe_0.get_or_else(none_type_0)
    bytes_0 = b"\x1b\xd81;\xf1{\xc8\x7f"
    var_3.ap(bytes_0)


def test_case_7():
    bool_0 = True
    complex_0 = -177.631649 - 1723.452928j
    bool_1 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_1.to_either()
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.bind(var_2)


def test_case_8():
    int_0 = 0
    list_0 = [int_0, int_0]
    object_0 = module_1.object()
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(object_0)
    var_1 = var_0.filter(list_0)


def test_case_9():
    int_0 = 521
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"\xe2\x87\x1a)\xaet\xa4\xb3\xaaR\xb3\xd4\x89\xed\xe92"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.get_or_else(bytes_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_0.to_try()


def test_case_11():
    list_0 = []
    float_0 = 1963.18
    list_1 = [float_0]
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(list_1, bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    maybe_3 = module_0.Maybe(maybe_2, maybe_2)
    var_1 = maybe_3.to_box()
    var_1.ap(list_0)


def test_case_12():
    float_0 = -413.55684
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_either()
    int_0 = -857
    bool_0 = True
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.ap(int_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_0.filter(var_0)


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.to_box()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(bool_0, none_type_1)
    maybe_2.filter(maybe_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_18():
    str_0 = "\n    Return first argument.\n\n    :param value:\n    :type value: Any\n    :returns:\n    :rtype: Any\n    "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = var_0.to_either()
    var_5 = var_3.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = bool_1.__eq__(var_5)
    var_6 = var_2.bind(var_3)
    none_type_0 = None
    bool_3 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_7 = maybe_2.to_lazy()
    var_8 = var_7.to_box()
    var_8.ap(bool_3)


def test_case_19():
    str_0 = "\n    Return first argument.\n\n    :param value:\n    :type value: Any\n    :returns:\n    :rtype: Any\n    "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(var_3, bool_0)
    maybe_2 = module_0.Maybe(str_0, var_1)
    bool_1 = maybe_1.__eq__(maybe_2)
    var_4 = var_0.bind(var_3)
    maybe_3 = module_0.Maybe(var_3, var_0)
    var_5 = maybe_2.get_or_else(var_3)
    var_4.to_lazy()
