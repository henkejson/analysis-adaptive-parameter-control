# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "'B"
    float_0 = -606.8551
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, str_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_0.filter(var_2)


def test_case_3():
    str_0 = "m8=xq`l4U?G'TDc{T|l"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)


def test_case_4():
    int_0 = 527
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    object_0 = module_1.object()
    var_2 = maybe_1.get_or_else(object_0)
    var_3 = maybe_0.to_try()
    var_4 = var_0.ap(var_0)
    bool_1 = var_4.__eq__(var_4)
    var_5 = maybe_1.map(var_1)
    maybe_2 = module_0.Maybe(int_0, var_1)
    var_6 = var_4.ap(var_5)
    var_7 = var_0.to_try()
    var_8 = var_5.filter(var_6)
    object_0.bind(var_6)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = "'B"
    none_type_0 = None
    float_0 = -606.8551
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.ap(str_0)
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_try()
    var_4.to_either()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    generic_0 = module_2.Generic()
    tuple_0 = (generic_0,)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.bind(tuple_0)


def test_case_8():
    bytes_0 = b"\x97\x8eZJ\x87Sj\xa2T#ba6\xe4)[\x12\xc5*G"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    maybe_1.ap(none_type_0)


def test_case_10():
    bool_0 = True
    str_0 = "MkNmr>-^d%{\x0b=<$ Y"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_1.__eq__(str_0)
    int_0 = 3168
    bool_2 = False
    var_0 = maybe_0.to_validation()
    maybe_2 = module_0.Maybe(int_0, bool_2)
    maybe_2.filter(int_0)


def test_case_11():
    int_0 = 1777
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_12():
    int_0 = 560
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_0.ap(int_0)
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = maybe_1.ap(none_type_0)
    bool_0 = var_2.__eq__(maybe_1)
    var_5 = var_3.map(var_1)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_6 = maybe_0.ap(maybe_1)
    var_7 = maybe_1.to_try()
    var_8 = var_2.filter(var_5)
    var_9 = maybe_0.bind(var_7)
    bool_1 = False
    var_10 = var_2.to_try()
    var_11 = maybe_1.bind(var_3)
    var_12 = maybe_2.get_or_else(bool_1)
    var_13 = maybe_2.to_lazy()
    var_14 = var_4.get_or_else(var_5)
    var_15 = var_4.to_lazy()
    var_16 = maybe_1.to_try()
    var_17 = maybe_0.to_box()
    var_18 = var_15.to_validation()
    maybe_3 = module_0.Maybe(var_18, var_6)
    var_19 = var_14.filter(var_4)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_box()
    var_2 = maybe_1.to_either()
    var_2.filter(none_type_0)


def test_case_14():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(none_type_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    bool_1 = var_1.__eq__(var_2)
    var_3 = var_2.to_either()
    var_2.map(var_2)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    int_0 = 574
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    var_4 = var_2.to_box()
    var_0.ap(int_0)


def test_case_19():
    int_0 = 574
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_0.ap(int_0)
    var_3 = maybe_0.filter(maybe_1)
    var_4 = maybe_1.ap(none_type_0)
    bool_0 = var_2.__eq__(maybe_1)
    var_5 = var_3.to_either()
    var_6 = var_4.to_try()
    var_7 = maybe_0.ap(maybe_1)
    maybe_2 = var_2.filter(var_5)
    bool_1 = maybe_2.to_try()
    var_8 = var_4.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_0.to_try()
    var_2.to_box()


def test_case_21():
    int_0 = 527
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_1.to_either()
    bool_1 = True
    var_2 = var_1.ap(bool_1)
    var_3 = maybe_1.get_or_else(var_2)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_4 = var_0.map(var_1)
    maybe_2 = module_0.Maybe(int_0, var_1)
    bool_2.ap(var_4)
