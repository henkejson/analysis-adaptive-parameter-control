# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "ImmutableList[T]"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(none_type_0)


def test_case_3():
    float_0 = -712.8627
    set_0 = {float_0}
    maybe_0 = module_0.Maybe(float_0, set_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, var_3)
    var_4 = maybe_0.bind(var_3)
    bool_1 = maybe_0.__eq__(set_0)
    var_5 = var_4.bind(var_0)
    var_6 = maybe_0.to_lazy()
    var_7 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_8 = var_2.to_box()
    var_9 = var_5.ap(float_0)
    var_10 = var_2.to_try()


def test_case_4():
    str_0 = "gc-~z1Oj"
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_1.ap(str_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_2 = var_0.filter(maybe_0)
    var_3 = maybe_0.map(var_2)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.bind(var_4)
    var_6 = var_4.to_validation()
    var_7 = var_4.to_try()
    var_8 = var_5.to_either()
    var_4.get_or_else(var_4)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    maybe_0.bind(var_1)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_12():
    bytes_0 = b"\x0f\xa67J-O\xb0\xf5\x0bL\xcaQ\x8c\xfcj\xa5\xd2a"
    bytes_1 = b"H^\x1e.\x05\xe1\x0f\xd8\xd3&\xc8T\xcd\x87<"
    int_0 = 1
    tuple_0 = (bytes_0, bytes_1, int_0)
    list_0 = [tuple_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_2.ap(list_0)


def test_case_13():
    str_0 = "DF9Nh'c8Nv{vd}"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.filter(str_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_box()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(bool_0)
    bytes_0 = b"'"
    float_0 = 2008.4015
    none_type_1 = None
    maybe_1 = module_0.Maybe(float_0, none_type_1)
    var_2 = maybe_1.to_box()
    maybe_1.ap(bytes_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_1.to_try()


def test_case_17():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_lazy()
    bool_1 = False
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    maybe_2.filter(var_0)


def test_case_18():
    int_0 = 1
    set_0 = {int_0}
    float_0 = 1736.8355
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(set_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_1 = False
    str_0 = "~h|w"
    bool_2 = False
    maybe_1 = module_0.Maybe(str_0, bool_2)
    maybe_1.filter(bool_1)


def test_case_21():
    bytes_0 = b"!o\xa6\xf8\x13\xc1\xd1\xed\xa7\xff\xe0\xaa\nGY\x99-\xe2\x9c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    bool_0 = var_1.__eq__(maybe_0)
    var_2.get_or_else(bytes_0)
