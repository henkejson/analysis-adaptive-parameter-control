# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -2081
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -547
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_4():
    int_0 = -547
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = var_0.map(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(var_0)


def test_case_5():
    float_0 = -1619.3949
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_validation()
    maybe_1 = module_0.Maybe(float_0, none_type_0)
    maybe_1.bind(maybe_1)


def test_case_6():
    none_type_0 = None
    str_0 = "*~8B%#LVc0!.J;I}gq6`"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()


def test_case_7():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    float_0 = -1528.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.ap(bool_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_10():
    int_0 = -547
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(int_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_11():
    int_0 = -547
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = var_1.map(bool_0)
    var_3 = var_0.filter(bool_1)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_4 = var_0.to_validation()
    var_5 = var_2.map(var_2)
    var_6 = var_4.to_box()
    var_7 = maybe_1.to_either()
    none_type_0 = None
    maybe_1.filter(none_type_0)


def test_case_12():
    generic_0 = module_1.Generic()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(generic_0, var_1)
    var_2 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(generic_0, bool_0)
    var_0.get_or_else(maybe_0)


def test_case_13():
    int_0 = -3863
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_14():
    int_0 = -545
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = var_0.to_try()
    var_3 = var_1.to_lazy()
    var_4 = var_2.bind(var_3)
    var_5 = var_3.bind(var_0)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.filter(var_2)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_try()


def test_case_16():
    int_0 = 1761
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(int_0)


def test_case_17():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.filter(bool_0)


def test_case_18():
    none_type_0 = None
    none_type_0.to_box()


def test_case_19():
    bytes_0 = b"\xfbX\xcd\xf9\x9f\x83\xdbI"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_3)
    none_type_0 = None
    var_4 = maybe_0.to_box()
    var_5 = var_0.to_either()
    var_5.get_or_else(none_type_0)


def test_case_20():
    int_0 = -547
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    bool_2 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.filter(var_1)


def test_case_21():
    int_0 = -547
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = var_1.map(bool_0)
    var_3 = var_0.bind(var_2)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.filter(var_1)
