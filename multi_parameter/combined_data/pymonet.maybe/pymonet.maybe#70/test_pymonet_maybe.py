# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = 5089
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b'"[\xa8P\xa7$U7\xc8\xadL\x0e\xe9'
    set_0 = {bytes_0, bytes_0, bytes_0}
    int_0 = -254
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(set_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    list_0 = []
    var_3 = var_2.to_try()
    var_4 = maybe_0.bind(list_0)
    var_5 = maybe_0.ap(list_0)
    var_6 = maybe_0.bind(var_5)
    var_7 = var_1.to_either()
    var_8 = maybe_0.filter(var_5)
    var_9 = var_7.to_validation()


def test_case_3():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_2 = maybe_1.map(var_1)
    var_3 = var_2.to_box()
    var_3.ap(int_0)


def test_case_4():
    bytes_0 = b""
    set_0 = {bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    set_1 = set()
    var_0 = maybe_0.to_either()
    maybe_0.map(set_1)


def test_case_5():
    bytes_0 = b'"[\xa8P\xa7$U7\xc8\xadL\x0e\xe9'
    set_0 = {bytes_0, bytes_0, bytes_0}
    int_0 = -254
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(set_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    list_0 = []
    var_3 = var_2.to_try()
    var_4 = maybe_0.bind(list_0)
    var_5 = maybe_0.ap(list_0)
    var_6 = maybe_0.bind(var_5)
    var_7 = var_1.to_either()
    var_8 = maybe_0.filter(var_5)
    var_9 = var_7.to_validation()


def test_case_6():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    maybe_0.bind(set_0)


def test_case_7():
    int_0 = -398
    maybe_0 = module_0.Maybe(int_0, int_0)
    bytes_0 = b"+\x95\x85\xa9\x1cZ\xc7\xb0\xb2\x83"
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = var_0.to_lazy()


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    int_0 = 3153
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_2.to_box()
    var_5 = maybe_0.to_try()
    bool_0 = var_2.__eq__(var_1)
    bool_1 = var_5.__eq__(var_5)


def test_case_11():
    float_0 = -1381.6925
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_validation()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_1.filter(var_0)
    var_5 = maybe_0.to_validation()
    bool_1 = var_2.__eq__(var_4)
    var_5.ap(none_type_0)


def test_case_13():
    int_0 = 5089
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_1.to_box()
    var_4 = maybe_0.to_try()
    var_5 = var_2.to_either()
    var_6 = var_5.to_box()
    int_0 = -1613
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_1.__eq__(int_0)
    var_7 = maybe_1.map(none_type_0)
    var_8 = maybe_1.to_try()
    var_9 = var_7.to_either()
    maybe_2 = module_0.Maybe(none_type_0, var_9)
    var_5.to_either()


def test_case_15():
    int_0 = 5089
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = (int_0, int_0, var_0, maybe_0)
    maybe_1 = module_0.Maybe(tuple_0, int_0)
    var_1 = maybe_1.to_box()


def test_case_16():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    str_0 = "\r~;b>&KY:P6sQ"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.map(str_0)


def test_case_19():
    float_0 = -1457.6188
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    bool_1.to_validation()


def test_case_20():
    float_0 = -1458.3114955326403
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_1.to_validation()
