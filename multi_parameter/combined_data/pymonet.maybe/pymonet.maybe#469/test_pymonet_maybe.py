# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -1569
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    list_0 = []
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = maybe_0.__eq__(list_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_3():
    int_0 = -775
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.map(var_1)
    var_3 = var_2.to_lazy()
    var_3.get_or_else(int_0)


def test_case_4():
    int_0 = -54
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(int_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.ap(maybe_0)
    var_7 = maybe_0.to_box()


def test_case_6():
    str_0 = '\r" g@F'
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = 38
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.ap(int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_try()


def test_case_8():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.ap(list_0)


def test_case_9():
    int_0 = 38
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    int_0 = 38
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.get_or_else(int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_either()
    maybe_1.filter(var_2)


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.to_box()
    maybe_0.filter(var_5)


def test_case_12():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = 940
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(set_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    var_2.ap(none_type_0)


def test_case_14():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(set_0)


def test_case_15():
    none_type_0 = None
    str_0 = ""
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_0 = var_0.__eq__(var_0)
    maybe_0.ap(none_type_0)


def test_case_16():
    int_0 = 38
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.filter(int_0)
    var_2 = var_1.ap(int_0)
    var_3 = var_2.to_either()
    var_4 = var_3.map(var_0)
    var_5 = var_3.to_try()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    list_0 = [maybe_0, bool_0]
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_1.to_try()
    bytes_0 = b"LR\x1c\xa6\xb8s\xac\x1f,OW\xa6\xb9\x13\xf1\xeb"
    bool_2 = False
    maybe_2 = module_0.Maybe(bytes_0, bool_2)
    str_0 = "\tK\tQ$"
    bool_3 = True
    maybe_3 = module_0.Maybe(str_0, bool_3)
    var_1 = maybe_3.filter(maybe_2)


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.filter(var_4)
    var_6 = maybe_0.to_validation()
    var_7 = var_3.ap(var_1)
    var_8 = maybe_0.to_either()
    var_9 = var_4.to_either()
    var_10 = maybe_0.map(var_6)
    var_11 = maybe_0.to_either()
    var_12 = maybe_0.to_validation()


def test_case_19():
    bool_0 = True
    bytes_0 = b"\xea\x9d\xde\xf5it"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(bool_0)


def test_case_20():
    int_0 = -4954
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_1.ap(none_type_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.map(bool_0)
    none_type_1 = None
    var_3 = maybe_1.to_try()
    var_4 = var_2.to_either()
    bool_2 = False
    bool_3 = maybe_1.__eq__(maybe_0)
    var_5 = maybe_1.to_validation()
    var_6 = var_3.bind(var_3)
    maybe_2 = module_0.Maybe(none_type_1, bool_2)
    var_7 = maybe_2.to_lazy()
    bool_4 = maybe_2.__eq__(int_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(none_type_0)
