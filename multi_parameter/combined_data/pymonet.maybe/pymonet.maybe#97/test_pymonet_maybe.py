# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_2.get_or_else(tuple_0)


def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    none_type_0 = None
    bool_2 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_2)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_3 = maybe_1.__eq__(tuple_0)
    maybe_2 = module_0.Maybe(bool_3, maybe_0)
    var_0 = maybe_1.get_or_else(bool_1)


def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(tuple_0, bool_3)
    var_0 = maybe_0.ap(maybe_1)
    var_1 = var_0.filter(maybe_2)
    var_2 = maybe_0.to_box()


def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_2)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_1.get_or_else(none_type_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_box()
    var_3 = maybe_1.bind(var_2)
    bool_3 = True
    maybe_2 = module_0.Maybe(var_1, bool_3)


def test_case_7():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.to_box()
    var_4 = maybe_1.bind(var_3)
    maybe_0.bind(bool_0)


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = maybe_1.ap(bool_2)
    var_0 = maybe_2.get_or_else(tuple_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_2.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = maybe_1.to_either()
    maybe_2.get_or_else(tuple_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    str_0 = "\n        Take function (A) -> b and applied this function on current box value and returns new box with mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: Box[B]\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    set_0 = set()
    maybe_1 = module_0.Maybe(maybe_0, set_0)
    var_1 = maybe_1.to_try()
    var_2 = var_0.to_try()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bytes_0 = b"\x18c"
    list_0 = [bytes_0]
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: list_0}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    list_1 = [var_0]
    str_0 = "T"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.ap(list_1)
    var_2 = var_1.bind(dict_0)
    int_0 = 909
    maybe_2 = module_0.Maybe(int_0, int_0)


def test_case_17():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bytes_0 = b"\xa1g\x90\xd3\\\x1bd>\xb1;\x06\r\x16\x90\xac!"
    str_0 = "\n        Take function (A) -> b and applied this function on current box value and returns new box with mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: Box[B]\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(bytes_0)


def test_case_20():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.bind(bool_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_1.map(var_0)


def test_case_22():
    bool_0 = False
    int_0 = 210
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    none_type_0 = None
    str_0 = "Ct[Ly]Tlk"
    var_3 = maybe_0.ap(str_0)
    var_4 = maybe_0.bind(bool_0)
    bool_1 = var_3.__eq__(var_3)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1.map(var_4)


def test_case_23():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_1)
    list_0 = []
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    bytes_0 = b"\xaa\x0b"
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(none_type_0, list_0)
    bool_1 = maybe_1.__eq__(bytes_0)
    var_2 = maybe_1.get_or_else(none_type_1)
    var_3 = maybe_2.to_lazy()
    var_4 = var_3.to_validation()
    var_4.map(var_3)
