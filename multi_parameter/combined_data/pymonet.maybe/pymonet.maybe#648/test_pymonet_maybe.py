# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xfaU_\xeeL\xa0\xbdI\x81"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bytes_0)
    var_2 = maybe_0.map(var_0)
    var_3 = var_1.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_3, bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0.filter(var_0)


def test_case_3():
    bytes_0 = b"\xfaU_\xeeL\xa0\xbdI\x81"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.to_either()
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_3 = var_1.to_lazy()


def test_case_4():
    int_0 = -4555
    set_0 = {int_0, int_0, int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(set_0)


def test_case_5():
    none_type_0 = None
    bytes_0 = b"\xca,Pd\xd8\xeb\xcb\xcb\x15x"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    maybe_1 = module_0.Maybe(list_1, list_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_2.map(none_type_0)
    var_4 = var_3.to_box()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = -1031
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    float_0 = 1023.798
    var_0 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_2.ap(maybe_2)
    var_2 = maybe_2.bind(var_1)
    list_0 = []
    list_1 = [list_0, list_0]
    maybe_3 = module_0.Maybe(list_1, list_1)
    bool_2 = maybe_3.__eq__(float_0)


def test_case_8():
    float_0 = 971.9532
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(float_0)


def test_case_9():
    bytes_0 = b"\xba\x06,\x7fT/\xb6\xaa\xa4\xbeN\xa6\xb9\xe5\xd4"
    str_0 = "mXC+Jhzz=$bf48!`%W"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_validation()
    bool_1 = var_0.__eq__(maybe_0)
    var_3 = var_0.get_or_else(var_2)
    var_4 = var_2.to_try()
    var_4.to_lazy()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_either()
    var_4 = var_0.to_try()
    var_5 = var_3.to_lazy()
    var_6 = var_3.to_validation()
    var_7 = var_5.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_8 = maybe_1.to_box()
    var_9 = var_8.to_try()
    maybe_1.ap(bool_0)


def test_case_13():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_lazy()
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)


def test_case_14():
    bytes_0 = b"\xfaU_\xeeL\xa0\xbdI\x81"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.to_try()
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_5 = maybe_0.to_lazy()


def test_case_15():
    float_0 = 1140.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    complex_0 = 321.061 - 3232.2j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_0.map(complex_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(maybe_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_either()
    var_2.map(var_0)


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.to_box()
    var_3.map(var_3)


def test_case_20():
    bytes_0 = b"\x8b\xe3-\xd1\x91"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)
