# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xa9\x87|E\x9f\x0e!\xbfY\xacP\n\xb1v"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 1
    int_1 = -1694
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    bool_0 = var_2.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(int_1)
    var_3 = var_1.to_box()
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_1, int_0)
    var_4 = var_0.to_box()
    var_0.to_either()


def test_case_3():
    none_type_0 = None
    str_0 = "e4tC#I\tw<K$>BP"
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    object_0 = module_1.object()
    bool_2 = maybe_0.__eq__(object_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_1.to_box()
    var_3 = var_0.to_lazy()
    var_3.filter(none_type_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_validation()


def test_case_5():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_0.map(none_type_0)


def test_case_6():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.ap(bool_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.map(bool_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_5 = maybe_1.to_box()


def test_case_7():
    int_0 = -2404
    bytes_0 = b"\x84C\xf5\xb1t"
    str_0 = "`!]Yjd2.IsYRD\n+!Zd."
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(int_0)


def test_case_8():
    int_0 = 805
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    int_0 = 1
    float_0 = 733.1985
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(var_0)


def test_case_12():
    bool_0 = True
    str_0 = "6E'NRc&&!J9EyWwVD4']"
    tuple_0 = (bool_0, str_0, str_0)
    tuple_1 = (bool_0, tuple_0)
    tuple_2 = (bool_0, tuple_1)
    int_0 = -755
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(tuple_2)


def test_case_13():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_14():
    bytes_0 = b"\xd6\x96\xaf*\x81\x0e\xe7\xc7\x97FI\xab_K@\xcc"
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    var_2.ap(bytes_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_either()
    maybe_1.filter(var_3)


def test_case_16():
    str_0 = "^Nv49doOQ&M5<"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    float_0 = 1637.0911
    dict_0 = {float_0: float_0}
    bytes_0 = b"_:\xcd\xff\xd54C\xe8ojn\xc0V"
    bool_1 = True
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.bind(var_1)
    var_3 = var_2.filter(var_2)
    var_4 = maybe_2.to_lazy()
    var_5 = var_4.to_box()
    var_5.ap(dict_0)


def test_case_18():
    str_0 = "Po<1V$oE+L01?^;"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_0.ap(str_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(maybe_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    maybe_2 = maybe_1.get_or_else(maybe_0)
    var_1 = maybe_2.to_try()
    maybe_2.bind(var_1)


def test_case_21():
    complex_0 = -2367.77 - 4678.9j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_box()
    bool_1 = var_1.__eq__(var_1)
    var_3 = maybe_1.get_or_else(bool_0)
    var_4 = maybe_1.ap(bool_0)
    var_5 = maybe_1.filter(var_4)
    var_6 = var_5.to_either()
    var_7 = maybe_1.to_box()
    var_7.to_box()
