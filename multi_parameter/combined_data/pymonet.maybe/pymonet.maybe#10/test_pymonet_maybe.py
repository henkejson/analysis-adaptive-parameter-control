# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -471.35665
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(bool_0)
    var_3 = maybe_0.get_or_else(var_1)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_4 = maybe_0.get_or_else(var_3)
    var_5 = var_4.bind(var_3)
    var_6 = maybe_0.to_box()
    none_type_0 = None
    var_7 = var_3.ap(none_type_0)
    var_1.filter(none_type_0)


def test_case_3():
    bool_0 = False
    bytes_0 = b"\xda\xe8Y\xb6d\xcbH\x7f\x9e"
    complex_0 = 2727.76 + 654.0585j
    tuple_0 = (bytes_0, complex_0)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(complex_0)
    var_3 = var_2.filter(var_2)
    var_4 = var_1.to_either()
    bool_0.to_lazy()


def test_case_4():
    complex_0 = 111.2 - 408.53j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.bind(complex_0)
    var_4 = var_3.to_lazy()
    var_5 = maybe_0.get_or_else(var_2)
    var_6 = var_4.map(var_5)
    maybe_1 = module_0.Maybe(maybe_0, var_4)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    str_0 = "Xr<h6^l~v-\x0bv"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    bool_2 = False
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    var_0 = maybe_1.bind(maybe_0)
    var_1 = var_0.to_box()
    var_1.map(bool_0)


def test_case_7():
    bytes_0 = b"\x07\x00\x89\x8a[v\x8d\xdf\xc2T\x83\xfd\xaert\xddF\x17"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_validation()
    int_0 = -1430
    maybe_1 = module_0.Maybe(var_0, int_0)
    var_1 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.to_lazy()
    complex_0 = 1286 + 1575.688542j
    maybe_2.bind(complex_0)


def test_case_8():
    int_0 = -830
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    bool_0 = True
    var_2 = maybe_0.ap(int_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)


def test_case_9():
    bytes_0 = b"\x1a\x8d\x1d\xcc"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_10():
    str_0 = "0"
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(list_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    none_type_0 = None
    float_0 = 1871.1
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\xda\xe8Y\xb6d\xcbH\x7f\x9e"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.get_or_else(maybe_0)
    maybe_2 = module_0.Maybe(maybe_0, maybe_0)
    var_3 = var_0.bind(maybe_2)
    var_4 = maybe_2.to_box()
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_2.ap(var_4)
    var_7 = var_6.filter(var_6)
    var_8 = maybe_2.to_either()
    var_9 = var_8.map(var_6)
    maybe_0.filter(var_6)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()


def test_case_16():
    bytes_0 = b"a\xc2\xb6kO@\x1a\xc3\xde\xb2\x19\xcbr\x10L"
    list_0 = [bytes_0, bytes_0]
    int_0 = -878
    maybe_0 = module_0.Maybe(list_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_17():
    int_0 = -3956
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_18():
    bytes_0 = b"\xe51\xedh\xb2\xeeB"
    int_0 = -501
    set_0 = {int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.map(bytes_0)
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_19():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_20():
    complex_0 = 111.2 - 408.53j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(complex_0)
    var_4 = var_3.to_lazy()
    var_5 = maybe_0.get_or_else(var_2)
    var_6 = var_4.map(var_5)
    maybe_1 = module_0.Maybe(maybe_0, var_4)


def test_case_21():
    none_type_0 = None
    str_0 = "`\rypS[JWc\nA?l0"
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_22():
    bytes_0 = b"\x07\x00\x89\x8a[v\x8d\xdf\xc2T\x83\xfd\xaert\xddF\x17"
    bytes_1 = b"\x9cL\x8d\xffdy\xf9%k3\xf1\xfd\x1b\x8a\xb0\x9f\xfd\xa6,I"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bytes_1)
    var_1.to_validation()


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(bool_0)
    var_3 = maybe_0.get_or_else(var_1)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_4 = maybe_0.get_or_else(var_3)
    var_4.bind(var_3)


def test_case_24():
    none_type_0 = None
    bytes_0 = b"\xda\xe8Y\xb6d\xcbH\x7f\x9e"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.to_box()
    var_3 = var_0.ap(none_type_0)
    maybe_2 = module_0.Maybe(maybe_0, maybe_0)
    var_4 = maybe_1.to_try()
    var_5 = maybe_2.to_box()
    var_6 = maybe_2.to_lazy()
    var_7 = maybe_2.ap(var_2)
    bool_0 = maybe_2.__eq__(var_3)
    var_8 = var_7.filter(var_7)
    maybe_0.filter(var_2)
