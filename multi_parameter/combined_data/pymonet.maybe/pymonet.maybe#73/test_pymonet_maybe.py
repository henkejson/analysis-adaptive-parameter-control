# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xddM\xe8.P\xa7ZQ\xbf\xfbs&})\xe3\xd4\x8d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()


def test_case_3():
    str_0 = ";Qxz"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(str_0)
    bool_0 = maybe_0.__eq__(var_0)
    int_0 = 1245
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.get_or_else(var_0)
    var_3 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_2)
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_1.filter(var_0)
    var_6 = var_5.to_validation()
    bool_1 = True
    var_7 = var_1.to_validation()
    var_8 = maybe_0.ap(var_4)
    bool_2 = var_7.__eq__(bool_1)
    maybe_2 = module_0.Maybe(var_6, none_type_0)
    maybe_2.filter(none_type_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = -1027
    int_1 = -5787
    bool_0 = False
    maybe_0 = module_0.Maybe(int_1, bool_0)
    maybe_0.bind(int_0)


def test_case_7():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    bool_0 = False
    bool_1 = True
    bool_2 = True
    set_0 = {bool_1, bool_1, bool_2, bool_1}
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_2 = maybe_1.ap(bool_0)
    var_3 = var_2.to_box()
    bool_3 = var_3.__eq__(var_1)


def test_case_8():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_9():
    str_0 = "f_zg,y@\nV"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(str_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(var_1)


def test_case_11():
    str_0 = ";Qxz"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(maybe_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()


def test_case_13():
    int_0 = -2081
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(int_0)


def test_case_14():
    int_0 = 651
    str_0 = ".H@T\\' fu'A\"1k8^P$s"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_1.filter(str_0)
    var_3 = maybe_0.to_either()
    var_4 = var_1.filter(var_3)
    var_1.ap(int_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(bool_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    bool_1 = False
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.to_box()
    var_5 = maybe_1.to_either()
    maybe_1.map(maybe_1)


def test_case_17():
    bytes_0 = b"\x03(\xeb\xfb\xfd\x13*\x16\x08\xb4\xa6(\x19\xba]\xea"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    str_0 = "B;^W|<G"
    int_0 = 1944
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.to_validation()
    var_1.get_or_else(var_0)


def test_case_19():
    str_0 = "%8\x0b*5P\r9c0\x0cm^}"
    bytes_0 = b"2\x06ds\x1et\x17\x1c\r\xde\xe8"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.map(str_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(none_type_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.filter(var_2)
    var_4 = var_3.ap(var_1)
    var_5 = maybe_0.to_lazy()
    var_6 = var_1.to_lazy()
    var_7 = var_5.to_validation()
    var_5.filter(maybe_0)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_22():
    none_type_0 = None
    bytes_0 = b'\x01\x9eF\x8c"\xc4\x97'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_2 = var_0.to_validation()
    none_type_1 = None
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.get_or_else(none_type_1)
    bool_1 = var_3.__eq__(var_2)
    var_4.get_or_else(none_type_0)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.bind(bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_0.get_or_else(maybe_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_validation()
    bool_2 = maybe_1.__eq__(var_3)
    var_6 = var_3.to_try()
    var_6.to_try()


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(bool_1)
    var_3 = var_2.get_or_else(var_1)
    var_4 = var_2.to_box()
    var_5 = var_4.to_either()
    var_6 = maybe_0.to_validation()
    bool_3 = var_5.__eq__(var_0)
    var_7 = var_0.to_try()
    var_8 = maybe_0.to_try()
    var_3.to_either()
