# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1
import builtins as module_2


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 3031
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    var_3 = var_1.map(none_type_0)
    var_4 = maybe_0.to_try()
    none_type_1 = None
    bool_2 = True
    var_5 = maybe_0.to_box()
    maybe_1 = module_1.Maybe(none_type_1, bool_2)
    bool_3 = maybe_1.__eq__(none_type_1)
    var_6 = maybe_0.bind(var_1)
    bool_4 = maybe_0.__eq__(maybe_1)
    var_7 = maybe_0.to_validation()
    var_8 = var_5.to_try()


def test_case_3():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_1)
    maybe_1 = module_1.Maybe(bool_0, bool_1)
    var_1 = maybe_1.get_or_else(bool_0)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_0.map(bool_1)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    str_0 = "8Ec(U-t~ZC"
    float_0 = 1024.48481
    str_1 = ".40j\r|\tzhr<3N@#O"
    maybe_0 = module_1.Maybe(float_0, str_1)
    var_0 = maybe_0.bind(str_0)


def test_case_6():
    bytes_0 = b"\xf8\xff(\xae\xe2\xfb\xb7\xa1R\xbdg\xb9^\xb0\xcf"
    bool_0 = False
    maybe_0 = module_1.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_1.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_1.Maybe(bytes_0, bool_1)
    var_3 = maybe_2.to_validation()
    maybe_2.bind(maybe_2)


def test_case_7():
    bytes_0 = b"N\x01\xa7+\r\x05>O\x8f\xd9>;G\xe7ry"
    none_type_0 = None
    maybe_0 = module_1.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_box()
    var_1.filter(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_9():
    float_0 = 1997.8
    maybe_0 = module_1.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_box()
    float_0.to_try()


def test_case_10():
    none_type_0 = None
    int_0 = 0
    bool_0 = True
    maybe_0 = module_1.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    tuple_0 = ()
    maybe_1 = module_1.Maybe(tuple_0, tuple_0)
    maybe_1.filter(var_0)


def test_case_11():
    float_0 = 834.2
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_1.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.ap(float_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    int_0 = 0
    list_0 = []
    maybe_0 = module_1.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_1.Maybe(var_0, var_0)
    var_1 = maybe_1.to_try()
    var_2 = var_1.get_or_else(int_0)
    var_2.to_validation()


def test_case_14():
    int_0 = -2132
    bool_0 = True
    maybe_0 = module_1.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()


def test_case_15():
    object_0 = module_2.object()
    int_0 = 1
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(object_0)
    var_1 = var_0.ap(int_0)
    var_1.filter(object_0)


def test_case_16():
    int_0 = 3031
    none_type_0 = None
    maybe_0 = module_1.Maybe(int_0, none_type_0)
    maybe_1 = module_1.Maybe(int_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_validation()
    maybe_2 = module_1.Maybe(int_0, bool_0)
    var_2 = maybe_2.filter(maybe_2)
    var_3 = maybe_0.to_lazy()
    bool_1 = maybe_2.__eq__(maybe_2)
    var_4 = maybe_2.to_try()
    var_5 = var_3.to_try()
    var_6 = maybe_2.to_try()
    var_7 = var_4.get_or_else(var_6)
    var_8 = maybe_2.map(var_4)
    maybe_0.filter(none_type_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bool_0)


def test_case_18():
    bool_0 = False
    int_0 = -878
    maybe_0 = module_1.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_0.bind(bool_0)


def test_case_19():
    list_0 = []
    bool_0 = True
    set_0 = {bool_0}
    maybe_0 = module_1.Maybe(set_0, bool_0)
    var_0 = maybe_0.bind(list_0)
    maybe_1 = module_1.Maybe(var_0, maybe_0)
    float_0 = 1713.6004
    bool_1 = False
    maybe_2 = module_1.Maybe(bool_1, maybe_1)
    maybe_3 = module_1.Maybe(float_0, bool_1)
    var_1 = maybe_3.to_validation()
    var_2 = maybe_0.to_box()


def test_case_20():
    float_0 = 1997.8
    maybe_0 = module_1.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_0.to_box()
    var_3 = var_2.to_either()
    var_4 = var_0.to_try()
    var_5 = maybe_0.map(var_0)
    var_6 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_1.Maybe(var_0, bool_0)
    var_7 = var_5.map(var_5)
    maybe_2 = module_1.Maybe(var_1, var_6)
    complex_0 = -1624.86749 + 608.12968j
    maybe_3 = module_1.Maybe(complex_0, var_1)
    var_8 = var_5.to_box()
    var_0.to_lazy()


def test_case_21():
    int_0 = 3031
    none_type_0 = None
    maybe_0 = module_1.Maybe(int_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_1.Maybe(int_0, bool_0)
    var_2 = maybe_1.filter(maybe_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_1.to_try()
    var_4 = var_2.get_or_else(var_3)
    var_5 = maybe_1.map(none_type_0)
    maybe_0.filter(none_type_0)


def test_case_22():
    bool_0 = False
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_2 = var_1.__eq__(maybe_0)
    maybe_0.map(var_1)


def test_case_23():
    int_0 = -2878
    maybe_0 = module_1.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(maybe_0)
    int_1 = 3031
    none_type_0 = None
    var_2 = maybe_0.bind(int_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_box()
    maybe_1 = module_1.Maybe(int_1, none_type_0)
    var_5 = maybe_1.to_box()
    var_6 = maybe_1.get_or_else(var_4)
    var_7 = maybe_1.to_try()
    var_8 = var_5.to_validation()
    maybe_2 = module_1.Maybe(int_1, var_3)
    var_9 = maybe_2.filter(maybe_2)
    var_10 = maybe_1.to_lazy()
    bool_0 = maybe_2.__eq__(maybe_2)
    var_11 = maybe_2.to_try()
    var_12 = var_10.to_try()
    var_13 = maybe_2.to_try()
    var_14 = var_11.map(none_type_0)
    var_15 = maybe_2.map(var_11)
    none_type_1 = None
    bool_1 = True
    var_16 = maybe_1.to_box()
    maybe_3 = module_1.Maybe(none_type_1, bool_1)
    bool_2 = maybe_3.__eq__(none_type_1)
    var_17 = maybe_2.bind(var_11)
    bool_3 = maybe_2.__eq__(maybe_3)
    var_13.to_lazy()
