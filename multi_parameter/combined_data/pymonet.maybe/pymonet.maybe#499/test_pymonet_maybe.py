# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\x1a\x01p\xef\xb3\xb0\xb8\x12"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_0)
    var_3 = var_1.filter(var_0)
    var_4 = var_2.map(maybe_0)
    var_5 = var_2.bind(var_2)
    bool_1 = var_4.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_5, bool_1)
    var_6 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_6, bool_0)
    var_7 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(var_6, bool_1)
    var_8 = var_5.to_box()


def test_case_3():
    bytes_0 = b"\xde\x1f4E\x1c\x87G\x9cR:\x87\xd2\x0c\x1e\xc2g\xaf\x9a"
    none_type_0 = None
    bool_0 = True
    float_0 = 947.707888
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.bind(none_type_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(float_0, maybe_0)
    var_3 = var_1.to_validation()
    var_4 = var_1.bind(var_3)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    var_1 = var_0.bind(none_type_0)
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    tuple_0 = ()
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(tuple_0, bool_1)
    maybe_3 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_3.to_validation()
    var_2 = maybe_2.ap(bool_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.ap(bool_0)


def test_case_9():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_0)
    var_3 = var_1.filter(var_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.map(var_1)
    var_6 = var_3.to_validation()
    var_7 = maybe_0.to_try()
    var_8 = var_3.get_or_else(var_0)
    var_9 = maybe_0.ap(var_7)
    var_10 = maybe_0.map(var_7)
    var_11 = maybe_0.ap(var_10)


def test_case_11():
    int_0 = 3002
    set_0 = {int_0, int_0, int_0}
    list_0 = [set_0, set_0, int_0]
    set_1 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_1, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_validation()


def test_case_12():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_13():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    var_2 = maybe_0.filter(maybe_1)
    var_3 = maybe_1.to_either()
    none_type_0 = None
    var_4 = var_2.bind(var_3)
    maybe_2 = module_0.Maybe(generic_0, none_type_0)
    maybe_2.filter(maybe_2)


def test_case_14():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_16():
    int_0 = -4641
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_4.to_lazy()
    var_6 = var_5.ap(int_0)
    var_6.to_box()


def test_case_17():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_18():
    int_0 = 744
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.filter(bool_0)
    var_3 = var_1.filter(var_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_2.to_box()
    bool_1 = var_3.__eq__(var_3)
    var_6 = var_4.to_try()
    var_6.to_box()


def test_case_21():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(generic_0)
    var_3 = maybe_0.bind(bool_0)
    var_4 = maybe_0.get_or_else(maybe_0)
    var_5 = var_1.ap(maybe_0)
    var_6 = var_3.to_either()
    var_7 = var_1.map(var_4)
    var_8 = var_7.ap(var_0)
    var_9 = var_2.map(var_8)
    var_10 = var_4.to_validation()
    bool_1 = var_1.__eq__(maybe_0)
    var_11 = var_4.get_or_else(var_8)
    var_12 = var_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(var_6, var_8)
    var_13 = var_0.to_lazy()
    var_14 = var_0.filter(var_5)
    var_13.to_lazy()


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.get_or_else(bool_2)
    var_2.to_try()
