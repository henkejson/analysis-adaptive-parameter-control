# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_1.filter(maybe_0)


def test_case_3():
    int_0 = 1643
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.map(int_0)


def test_case_4():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_0.map(maybe_0)


def test_case_5():
    int_0 = 92
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_try()


def test_case_6():
    float_0 = 684.237676
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(float_0)


def test_case_7():
    int_0 = 92
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(int_0, var_2)
    var_3 = maybe_0.ap(maybe_1)
    var_0.get_or_else(int_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = True
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_1 = var_0.get_or_else(bool_1)
    maybe_1.filter(bool_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = var_0.__eq__(none_type_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_1.get_or_else(maybe_1)
    bool_3 = var_1.__eq__(none_type_0)
    var_1.get_or_else(maybe_1)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    int_0 = 2916
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1.ap(bool_0)


def test_case_14():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_15():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = maybe_1.to_validation()
    maybe_1.filter(var_1)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    bool_2 = var_0.__eq__(maybe_0)
    maybe_1.filter(bool_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    bool_2 = bool_1.__eq__(maybe_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_box()
    maybe_1.filter(var_2)


def test_case_19():
    bytes_0 = b"\xce\xbb\xa0\xc5\x07~\x90\xae)"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.get_or_else(bytes_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_either()
    str_0 = "\n        Two Validations are equals when values and errors lists are equal.\n        "
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_5 = maybe_1.bind(var_4)
    var_6 = maybe_1.to_try()
    var_7 = var_5.map(var_6)
    var_8 = var_3.to_box()
    var_9 = var_3.map(var_3)
    var_10 = var_5.bind(maybe_0)


def test_case_20():
    bytes_0 = b"\xce\xbb\xa0\xc5\x07~\x90\xae)"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.get_or_else(bytes_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_either()
    str_0 = "\n        Two Validations are equals when values and errors lists are equal.\n        "
    maybe_1 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_1.__eq__(var_0)
    var_3.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(var_0)
    bool_2 = False
    bool_3 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_1.to_box()
    bool_4 = var_1.__eq__(maybe_1)
    var_3 = maybe_1.get_or_else(var_0)
    var_4 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_2, none_type_0)
    bool_5 = maybe_1.__eq__(maybe_1)
    var_5 = var_4.to_lazy()
    list_0 = [maybe_2, bool_3, maybe_2, bool_1]
    var_1.filter(list_0)
