# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_1 = maybe_0.to_box()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(generic_0, bool_1)
    float_0 = 477.9
    bool_2 = maybe_1.__eq__(float_0)
    maybe_1.ap(none_type_0)


def test_case_3():
    float_0 = 305.7
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.map(float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_1)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    float_0 = 1958.8
    maybe_0.map(float_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_2, var_2)
    maybe_2 = module_0.Maybe(maybe_0, bool_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_8():
    bytes_0 = b"\xfa\xef6\xee\xb4\xc8\x8bn\x01(#\x97\xc7g\x1f\xb67\xd1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = var_1.to_either()
    var_2.ap(bytes_0)


def test_case_9():
    bytes_0 = b"\xa3kN'\"F\x80\xaa2f"
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_2 = maybe_1.__eq__(bytes_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(bytes_0, bool_3)
    bool_4 = maybe_2.__eq__(maybe_2)
    var_0 = maybe_1.to_either()
    none_type_0 = None
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_2.to_validation()
    var_3 = maybe_2.ap(bool_4)
    var_4 = maybe_2.filter(var_2)
    var_5 = maybe_0.to_validation()


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_11():
    object_0 = module_2.object()
    float_0 = 305.77
    maybe_0 = module_0.Maybe(object_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_13():
    object_0 = module_2.object()
    float_0 = 305.7
    maybe_0 = module_0.Maybe(object_0, float_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.ap(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.filter(bool_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_3 = var_2.to_try()
    maybe_2 = module_0.Maybe(var_0, object_0)
    var_4 = var_2.filter(var_1)
    var_5 = maybe_0.to_try()


def test_case_14():
    float_0 = -1253.2262
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    dict_1 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_1, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(generic_0)
    var_1.filter(float_0)


def test_case_15():
    none_type_0 = None
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.ap(none_type_0)


def test_case_16():
    float_0 = 305.7
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(var_1)


def test_case_17():
    str_0 = "\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        "
    int_0 = 1
    list_0 = [int_0, int_0]
    maybe_0 = module_0.Maybe(str_0, list_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.ap(int_0)
    bool_0 = maybe_0.__eq__(var_1)
    bytes_0 = b"A\x1f\xcdgc0\\\xed\xb9\xb7}\xe2"
    var_2 = var_0.get_or_else(bytes_0)
    var_3 = var_0.to_try()
    var_4 = maybe_0.filter(var_0)
    var_3.to_lazy()


def test_case_18():
    bytes_0 = b"\xa8\x06\xfe\xa87\xcb\x01\xee\x02n\xbd\xff\xb1\xda."
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)
