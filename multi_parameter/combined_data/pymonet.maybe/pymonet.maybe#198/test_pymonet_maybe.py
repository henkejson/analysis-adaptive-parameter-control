# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    str_0 = "+u`-1veQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_3 = var_2.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    bool_1 = var_2.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(var_3, var_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.filter(none_type_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    var_4 = var_3.get_or_else(var_1)
    var_5 = maybe_0.filter(var_3)
    var_6 = var_0.to_try()
    var_7 = maybe_0.to_box()
    var_8 = var_0.filter(var_7)
    var_9 = var_2.ap(maybe_0)
    var_10 = maybe_0.to_box()
    var_11 = var_0.filter(var_1)
    var_12 = var_7.to_try()
    bool_1 = var_2.__eq__(var_7)
    bool_2 = var_8.__eq__(maybe_0)
    var_13 = var_8.ap(var_0)
    var_14 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_11, var_13)


def test_case_5():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.map(maybe_0)


def test_case_6():
    bool_0 = False
    str_0 = "+u`-1veQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    int_0 = 3036
    var_1 = maybe_0.to_validation()
    bool_1 = True
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.filter(var_3)
    var_5 = var_4.bind(var_1)
    var_6 = maybe_1.ap(int_0)
    var_7 = var_4.to_either()
    var_8 = var_6.to_lazy()
    maybe_2 = module_0.Maybe(int_0, bool_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = False
    str_0 = "+u`-1eQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    int_0 = 3036
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = var_0.ap(int_0)
    maybe_1.filter(var_1)


def test_case_9():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    str_0 = "+u`-1eQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    int_0 = 459
    bytes_0 = b""
    dict_0 = {int_0: bytes_0, int_0: int_0, bytes_0: int_0, int_0: bytes_0}
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(dict_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_12():
    int_0 = 0
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.ap(int_0)


def test_case_13():
    bool_0 = False
    str_0 = "+u`-1eQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    int_0 = 3036
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_0.to_either()
    maybe_1.filter(var_1)


def test_case_14():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.filter(bool_0)


def test_case_15():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.map(dict_0)


def test_case_16():
    int_0 = -344
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, int_0)


def test_case_17():
    bool_0 = False
    str_0 = "+u`-1veQ\\~2E \nyR{I\x0c"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    int_0 = 3036
    var_1 = maybe_0.to_validation()
    bool_1 = True
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_1.filter(var_3)
    var_5 = maybe_1.ap(int_0)
    var_6 = var_4.to_either()
    var_7 = var_5.to_lazy()
    maybe_2 = module_0.Maybe(int_0, bool_1)


def test_case_18():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_try()
    var_4 = var_3.get_or_else(var_1)
    var_5 = maybe_0.filter(var_3)
    var_6 = var_0.to_try()
    var_7 = maybe_0.to_box()
    var_8 = var_0.filter(var_7)
    var_9 = maybe_0.to_box()
    var_10 = var_0.filter(var_1)
    var_11 = var_7.to_try()
    bool_1 = var_2.__eq__(var_7)
    bool_2 = var_8.__eq__(maybe_0)
    var_12 = var_8.ap(var_0)
    var_13 = maybe_0.to_lazy()


def test_case_20():
    generic_0 = module_1.Generic()
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(set_0)


def test_case_21():
    generic_0 = module_1.Generic()
    set_0 = {generic_0, generic_0, generic_0}
    int_0 = 1002
    tuple_0 = (generic_0, set_0, int_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    int_0 = 1
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_validation()
    var_0.bind(int_0)


def test_case_23():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    str_0 = "\n    The Try control gives us the ability write safe code\n    without focusing on try-catch blocks in the presence of exceptions.\n    "
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = maybe_0.__eq__(maybe_0)
    bool_4 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_4)
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.to_box()
    var_3.filter(var_3)
