# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.filter(var_0)


def test_case_4():
    int_0 = 3178
    int_1 = -2899
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_1, none_type_0)
    maybe_0.map(int_0)


def test_case_5():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_box()
    var_4 = var_2.to_lazy()
    var_5 = maybe_0.map(maybe_0)
    var_6 = maybe_0.to_either()
    var_7 = var_6.ap(int_0)
    var_8 = var_7.ap(int_0)
    bool_0 = var_1.__eq__(var_6)
    var_9 = var_6.to_lazy()
    var_10 = var_5.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    var_11 = var_2.ap(var_5)
    var_10.to_lazy()


def test_case_6():
    bytes_0 = b"\xda\x17S\x8c\xcf\xb8"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_8():
    str_0 = "J&9*ibIY"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.ap(bool_1)


def test_case_9():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = False
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_0.ap(var_1)
    maybe_1.filter(var_2)


def test_case_10():
    str_0 = "J&9*ibIY"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = var_3.to_box()
    var_1.to_lazy()


def test_case_11():
    int_0 = -1358
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(int_0)
    bytes_0 = b"R\xee\x10\xe8\x05\x8f\xb0f\xbbu#"
    bool_2 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_2)
    var_1 = maybe_1.get_or_else(maybe_1)
    var_1.to_lazy()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_box()
    var_4 = var_2.map(none_type_0)
    var_5 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)


def test_case_15():
    bytes_0 = b"\xdc\x89\x19#\xca\x10>\\\x84\xf9\xdd\xfe\xc8\xddU\x94\xd8"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_4 = var_2.to_box()
    var_5 = var_2.to_either()
    var_6 = maybe_1.to_box()
    bool_2 = maybe_1.__eq__(var_4)
    none_type_0 = None
    var_7 = maybe_1.to_validation()
    var_8 = maybe_0.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_9 = var_5.to_try()
    var_9.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.ap(maybe_0)


def test_case_17():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.to_lazy()
    bool_0 = False
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.to_lazy()
    maybe_1.filter(var_3)


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\x82\x93\x8b"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_19():
    float_0 = -2811.27
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.map(float_0)


def test_case_20():
    str_0 = "J&9*ibIY"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.filter(var_0)


def test_case_21():
    str_0 = "J&9*ibIY"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    str_1 = "T"
    maybe_1 = module_0.Maybe(str_1, str_1)
    bool_1 = maybe_1.__eq__(maybe_1)


def test_case_22():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = var_1.to_lazy()
    var_5 = maybe_0.map(maybe_0)
    var_6 = maybe_0.to_either()
    var_7 = var_6.ap(int_0)
    var_8 = var_7.ap(int_0)
    bool_0 = var_2.__eq__(var_2)
    maybe_1 = module_0.Maybe(var_8, var_2)
    bool_1 = False
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_9 = var_6.to_box()
    var_10 = maybe_0.bind(var_8)
    bool_2 = maybe_2.__eq__(maybe_1)
    var_11 = var_1.ap(var_5)
    var_12 = var_7.to_box()
    var_13 = maybe_1.ap(var_11)


def test_case_23():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_3.ap(none_type_0)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(none_type_0)
