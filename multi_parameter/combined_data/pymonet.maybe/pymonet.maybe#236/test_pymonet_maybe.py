# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_0.filter(bool_0)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\xa0\x8e\xb6\x8d\xf0h\xa4\xc4?`>\xa29\xb6\x13oh"
    bytes_1 = b"\xdc\x15(=\xf7\xc4[\xb9\xc3O\x99\x96$\x9c7Q\x11\x1a\x89\xaa"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = var_0.__eq__(none_type_0)
    var_1 = var_0.to_either()


def test_case_4():
    float_0 = -90.75128
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.filter(str_0)
    maybe_3 = module_0.Maybe(maybe_2, maybe_2)
    var_1 = maybe_3.map(bool_0)
    maybe_1.filter(maybe_3)


def test_case_5():
    int_0 = -1347
    dict_0 = {int_0: int_0}
    float_0 = -90.75128
    str_0 = ""
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(str_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_2 = module_0.Maybe(int_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    maybe_3 = module_0.Maybe(set_0, set_0)
    var_2 = maybe_3.ap(float_0)
    var_3 = maybe_3.map(var_2)
    var_4 = var_2.filter(dict_0)
    var_5 = var_2.filter(var_4)
    var_6 = var_4.bind(var_2)
    bool_1 = var_3.__eq__(maybe_1)
    var_7 = maybe_0.to_validation()
    var_8 = var_2.get_or_else(var_0)
    var_9 = var_1.bind(var_8)
    var_10 = var_4.bind(var_0)
    maybe_1.map(var_2)


def test_case_6():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = 426.3
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(var_1)


def test_case_8():
    bool_0 = True
    bytes_0 = b"P\x9e\x1bY\xc8\xddT\xb0"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -1347
    float_0 = -90.75128
    str_0 = ""
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(str_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_2 = module_0.Maybe(int_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    maybe_3 = module_0.Maybe(set_0, set_0)
    var_2 = maybe_3.ap(float_0)
    var_3 = maybe_3.map(var_2)
    var_4 = maybe_3.get_or_else(var_2)
    var_5 = var_0.ap(maybe_1)
    var_6 = var_1.to_try()
    var_7 = var_4.bind(set_0)
    var_8 = var_1.ap(var_0)
    var_9 = maybe_0.to_try()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    bool_1 = maybe_1.to_either()
    maybe_0.filter(bool_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_0)


def test_case_14():
    int_0 = 50
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_try()


def test_case_15():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_1.get_or_else(var_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    complex_0 = -2152 + 1450.005j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bytes_0 = b'\xd7[\x16\x1c[S\x88\xea\xdb\xc4\xdb\xd8\xa6@"\xb5\x9eU'
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(set_0)
    int_0 = 1313
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_validation()
    var_2.bind(int_0)


def test_case_20():
    bool_0 = False
    float_0 = 1349.0
    list_0 = [float_0, float_0, float_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(float_0)
    bool_1 = True
    list_1 = [bool_0, bool_1, float_0]
    bool_2 = list_0.__eq__(list_1)
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.ap(var_0)
    var_3 = maybe_0.ap(var_0)
    var_4 = maybe_0.map(var_2)
    var_5 = var_4.filter(var_2)
    var_6 = var_0.filter(var_3)
    var_7 = var_3.bind(float_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_1, bool_3)
    bool_4 = var_4.__eq__(maybe_1)
    var_8 = var_1.to_validation()
    var_9 = var_7.bind(bool_2)
    var_10 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)


def test_case_21():
    str_0 = "16}uspxRS\x0b: =YX/!t"
    float_0 = 3223.65079
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.get_or_else(var_2)
    var_5 = var_2.to_either()
    var_6 = var_3.get_or_else(str_0)
    var_7 = maybe_0.map(var_6)
    var_8 = var_5.to_box()
    var_9 = maybe_0.to_lazy()
    var_10 = var_9.to_try()
    var_11 = var_10.get_or_else(var_5)
    var_2.map(var_9)


def test_case_22():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    bytes_0 = b"\xd3\x1b\xb8\xed9\xd6\xa1\xbd"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = var_0.__eq__(bool_0)
    bool_2 = maybe_1.__eq__(generic_0)
    str_0 = "#PI_*S8zUp"
    maybe_2 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bool_3 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_3)
    var_1 = maybe_3.to_lazy()
    var_2 = var_1.to_validation()
    maybe_3.bind(var_2)


def test_case_23():
    int_0 = -1347
    dict_0 = {int_0: int_0}
    float_0 = -90.75128
    str_0 = ""
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(str_0, float_0)
    maybe_1 = module_0.Maybe(int_0, maybe_0)
    var_0 = maybe_0.filter(str_0)
    maybe_2 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_2.ap(float_0)
    var_2 = maybe_2.map(var_1)
    var_3 = var_1.filter(dict_0)
    var_4 = var_1.filter(var_3)
    var_5 = var_3.bind(var_1)
    bool_0 = maybe_0.__eq__(var_0)
    var_6 = var_3.to_validation()
    var_6.bind(maybe_1)


def test_case_24():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_0.filter(bool_0)
