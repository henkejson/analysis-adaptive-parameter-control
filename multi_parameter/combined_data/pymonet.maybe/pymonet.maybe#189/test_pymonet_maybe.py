# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b" 3C\x8d\xc6N%\x9e\xf7g\xa7\xfd\xcb \xb1\x13B\x89D\xcd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = var_0.__eq__(var_0)


def test_case_3():
    float_0 = 4325.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    set_0 = set()
    bool_0 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_4():
    bytes_0 = b" 3C\x8d\xc6N%\x9e\xf7g\xa7\xfd\xcb \xb1\x13B\x89D\xcd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.to_either()
    var_3 = var_0.map(var_2)
    var_4 = maybe_0.get_or_else(bytes_0)
    bool_0 = var_2.__eq__(var_3)
    var_5 = var_2.to_validation()
    var_6 = var_1.bind(var_5)
    var_7 = maybe_0.to_validation()
    var_8 = var_7.to_try()


def test_case_5():
    bytes_0 = b"\x06wHiR\xf1\xdf"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b"\xeb\x18b\\C\xa4_R0\xb6\xd2\x8f\x85\xa1\xa2\xa45"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = var_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bool_0, maybe_0)
    var_4 = maybe_1.filter(var_3)
    var_5 = var_0.to_either()
    var_6 = maybe_1.ap(maybe_2)
    var_7 = var_0.filter(maybe_2)
    var_8 = var_2.to_either()
    var_9 = var_7.map(var_5)
    int_0 = 0
    maybe_3 = module_0.Maybe(var_4, int_0)
    maybe_3.bind(var_8)


def test_case_7():
    bytes_0 = b" 3C\x8d\xc6N%\x9e\xf7g\xa7\xfd\xcb \xb1\x13B\x89D\xcd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(bytes_0)
    bool_0 = var_0.__eq__(var_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    float_0 = 1021.97543
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.filter(var_1)
    bool_1 = var_3.to_try()
    var_4 = maybe_0.filter(var_2)


def test_case_11():
    float_0 = 1021.97543
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_0.map(var_1)


def test_case_12():
    bytes_0 = b" 3C\x8d\xc6N%\x9e\xf7g\xa7\xfd\xcb \xb1\x13B\x89D\xcd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(bytes_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(var_0, bytes_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_0.to_either()
    var_5 = maybe_1.to_try()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()
    var_1.to_box()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_2 = var_0.to_either()
    var_1.filter(var_0)


def test_case_17():
    list_0 = []
    int_0 = -2039
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(list_0)
    var_1.to_lazy()


def test_case_18():
    bytes_0 = b"\xa3"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_19():
    bool_0 = True
    bool_0.to_either()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_lazy()
    maybe_0.filter(var_4)


def test_case_21():
    complex_0 = -1213.202836 + 557.89j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(complex_0)
