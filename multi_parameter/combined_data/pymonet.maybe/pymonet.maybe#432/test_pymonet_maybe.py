# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    float_0 = 1065.0
    var_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 1065.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.bind(float_0)
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.filter(var_4)
    var_6 = var_3.to_box()
    bool_0 = var_1.__eq__(maybe_0)
    var_7 = var_4.to_lazy()
    var_8 = var_7.to_either()


def test_case_3():
    str_0 = "+uiKhLsJY( <^N"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    tuple_0 = (maybe_0, maybe_0, bool_0, var_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.get_or_else(bool_1)
    tuple_0.to_validation()


def test_case_4():
    int_0 = 70
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.map(int_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_5():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_6():
    int_0 = -2368
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(maybe_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(none_type_0, set_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = maybe_1.ap(bool_0)
    var_3 = var_0.filter(var_1)
    var_4 = maybe_1.ap(none_type_0)


def test_case_9():
    complex_0 = -1262.1 + 1531.5j
    float_0 = 621.1
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(complex_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_11():
    int_0 = 2876
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)


def test_case_12():
    bytes_0 = b"\xde\x02\x04\x96\xea\xb5q\xc2\x1aL\xdc\xb1\x84\xee\x8e\x04"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.map(bytes_0)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_14():
    float_0 = 1065.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.bind(var_4)
    var_6 = maybe_0.to_either()
    var_7 = maybe_0.filter(var_6)
    var_8 = maybe_0.to_validation()


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_16():
    str_0 = "+uiKhLsJY( <^N"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    tuple_0 = (maybe_0, maybe_0, bool_0, var_1)
    bool_1 = var_1.to_either()
    bool_2 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    bool_3 = maybe_1.to_try()
    maybe_1.filter(tuple_0)


def test_case_17():
    none_type_0 = None
    object_0 = module_1.object()
    none_type_1 = None
    maybe_0 = module_0.Maybe(object_0, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.map(none_type_0)


def test_case_18():
    float_0 = 1065.0
    float_0.to_box()


def test_case_19():
    str_0 = "|h>.RG[-"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.to_either()
    var_5 = var_3.to_box()
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_6 = maybe_1.to_try()
    maybe_1.filter(var_2)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(var_0)


def test_case_21():
    str_0 = "+uiKhLsJY( <^N"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_0.filter(maybe_0)
    bool_2 = maybe_1.__eq__(var_2)
    var_3 = var_2.to_lazy()
    var_4 = var_2.to_either()


def test_case_22():
    complex_0 = 3414.0331 - 197.35j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_1)
    maybe_0.map(var_0)
