# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 1904.15
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    tuple_0 = (var_0,)
    int_0 = 383
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, none_type_1)
    bool_1 = maybe_1.__eq__(tuple_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    str_0 = '(R4*~~"9WW#wP-#@'
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.filter(str_0)
    maybe_0.filter(str_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(var_1)
    maybe_0.map(var_1)


def test_case_6():
    str_0 = "{v:y.i\t`(V09w{"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.map(none_type_0)
    var_4 = var_2.to_box()
    var_5 = var_2.filter(var_4)
    var_6 = maybe_0.to_box()
    var_6.to_box()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    maybe_0.bind(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_9():
    complex_0 = -3285.12753 + 1128j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.ap(complex_0)


def test_case_10():
    int_0 = 1749
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    str_0 = "{v:y.i\t`(V09w{"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.bind(none_type_0)
    var_3 = maybe_0.filter(bool_0)
    var_4 = var_2.map(none_type_0)
    var_5 = var_3.to_box()
    var_6 = var_3.filter(var_5)
    var_7 = maybe_0.to_box()
    var_8 = maybe_0.get_or_else(var_6)
    var_7.to_box()


def test_case_12():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    bool_1 = True
    none_type_0 = None
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_3 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    bool_2 = var_1.__eq__(var_1)
    var_4 = maybe_2.to_either()
    var_0.ap(maybe_2)


def test_case_13():
    bytes_0 = b"\xe7\xa4\xd60\x8cW\xd8-\xd2\x9f\xcf3E"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_try()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    dict_1 = {bool_1: bool_1}
    bool_2 = True
    maybe_1 = module_0.Maybe(dict_1, bool_2)
    bool_3 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_3)
    var_0 = maybe_2.to_lazy()
    var_0.to_lazy()


def test_case_16():
    int_0 = 1749
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_17():
    str_0 = "{v:y.i\t`(V09w{"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.map(none_type_0)
    var_4 = var_2.to_box()
    var_5 = maybe_0.filter(none_type_0)
    var_6 = var_2.filter(var_4)
    var_7 = maybe_0.to_box()
    var_7.to_box()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    bool_3 = var_1.__eq__(maybe_1)


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\x941\xdf\xce\x81\x17}\xbe\xec\xd8\xfd{\xd5^+\x1a\x0b\x1c"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(none_type_1)


def test_case_20():
    bytes_0 = b"\xd17[8h\xd9\n?\xb9Ax\x8a\x17\x9dv\\\xf2\xf8\xb3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.bind(var_2)
    bool_1 = maybe_0.__eq__(var_3)
    var_4 = var_1.to_box()
    var_5 = var_2.to_either()
    bool_2 = var_2.__eq__(var_5)
    var_6 = var_3.map(bytes_0)
    var_7 = var_6.to_validation()
    var_8 = var_5.to_box()
    var_9 = var_0.to_validation()
    var_2.get_or_else(var_2)


def test_case_21():
    str_0 = "{v:y.i\t`(V09w{"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.map(none_type_0)
    bool_1 = var_1.__eq__(var_2)
    var_4 = maybe_0.filter(var_0)
    var_5 = var_2.filter(var_0)
    var_6 = maybe_0.to_box()
    var_6.to_box()
