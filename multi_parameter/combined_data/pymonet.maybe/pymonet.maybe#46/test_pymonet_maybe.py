# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -751
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xea\xef\xb1\xda\x8f\x94\xc6\xa8\x8fI\x16\xff"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.get_or_else(bool_0)
    var_3 = var_1.to_either()
    var_4 = var_1.to_lazy()
    bool_1 = var_4.__eq__(var_3)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_5 = var_3.to_lazy()
    bool_2 = var_1.__eq__(var_1)
    maybe_1.filter(var_1)


def test_case_3():
    float_0 = 239.886
    none_type_0 = None
    int_0 = -2996
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(none_type_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0.to_validation()


def test_case_4():
    bytes_0 = b"\xea\xef\xb1\xda\x8f\x94\xc6\xa8\x8fI\x16\xff"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.get_or_else(bool_0)
    var_3 = var_1.to_either()
    bool_1 = maybe_0.__eq__(var_3)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_4 = var_3.to_lazy()
    maybe_1.filter(var_1)


def test_case_5():
    bool_0 = False
    bytes_0 = b""
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    bool_2 = var_2.__eq__(bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    maybe_2.map(bool_0)


def test_case_6():
    str_0 = "8"
    str_1 = "`AZ"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, str_0: str_1}
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(tuple_0)
    var_1 = var_0.to_try()
    var_2 = var_1.map(dict_0)
    bytes_0 = b"Y\x14V\x16u\xfb-\xe9\n\x13\x12A%y\xcf\x97+\xa8"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.to_lazy()
    var_3.get_or_else(var_2)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    int_0 = 2066
    complex_0 = -463.495 + 1381.20794j
    var_1 = var_0.to_either()
    bool_1 = False
    bool_2 = False
    var_2 = maybe_0.ap(bool_2)
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(complex_0, bool_1)
    maybe_1.bind(int_0)


def test_case_8():
    str_0 = '4c`h10a">s<N[ZT2'
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.ap(str_0)


def test_case_9():
    bytes_0 = b"\xea\xef\xb1\xda\x8f\x94\xc6\xa8\x8fI\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_lazy()
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    int_0 = 491
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.map(var_0)


def test_case_12():
    bool_0 = False
    list_0 = []
    tuple_0 = (bool_0, list_0)
    tuple_1 = (bool_0, list_0)
    maybe_0 = module_0.Maybe(tuple_0, tuple_1)
    var_0 = maybe_0.to_either()


def test_case_13():
    int_0 = 2848
    int_1 = 1
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(int_0)
    var_0.bind(var_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_box()
    maybe_1.bind(var_1)


def test_case_15():
    bytes_0 = b"\xea\xef\xb1\xda\x8f\x94\xc6\xa8\x8fI\x16\xff"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_validation()
    var_5 = var_1.get_or_else(maybe_1)
    var_6 = var_1.filter(var_3)
    var_5.filter(var_5)


def test_case_16():
    bool_0 = True
    int_0 = -1322
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [int_0, int_0, int_0]
    float_0 = -1142.0
    tuple_0 = (set_0, list_0, list_0, float_0)
    maybe_0 = module_0.Maybe(tuple_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.filter(bool_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.filter(none_type_0)


def test_case_18():
    int_0 = 995
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    list_0 = []
    tuple_0 = (list_0,)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_lazy()
    var_2.get_or_else(var_1)


def test_case_20():
    bytes_0 = b"\x8ff\xe03\x83\x85\xef[\xae>\x9a|\x81\xce\xf2\xde"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_validation()


def test_case_21():
    bytes_0 = b"\xea\xef\xb1\xda\x8f\x94\xc6\xa8\x8fI\x16\xff"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.get_or_else(maybe_0)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_either()
    var_5 = maybe_0.map(var_1)
    bool_1 = True
    bool_2 = False
    var_6 = maybe_1.filter(bool_2)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_7 = var_1.to_validation()
    var_8 = maybe_2.bind(var_6)
    var_9 = var_5.map(var_2)
    var_10 = var_1.to_lazy()
    var_11 = var_10.to_box()
    var_12 = maybe_2.to_either()
    var_13 = var_11.to_lazy()
    bool_3 = maybe_0.__eq__(var_5)
    var_14 = var_6.to_lazy()
    var_15 = var_10.to_validation()
    var_16 = var_8.get_or_else(var_3)
    bool_4 = maybe_1.__eq__(var_9)
    var_3.ap(var_7)
