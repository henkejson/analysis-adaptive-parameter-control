# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    int_0 = 397
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = var_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.ap(bool_1)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_0, bool_3)
    bool_4 = var_0.__eq__(var_0)
    var_2 = var_0.map(maybe_0)


def test_case_3():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(none_type_0)


def test_case_4():
    str_0 = "[e"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_1 = maybe_1.map(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_2.bind(var_0)
    var_3.to_either()


def test_case_5():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = module_0.Maybe(bool_1, bool_1)
    var_0.map(set_0)


def test_case_6():
    bool_0 = True
    int_0 = -1417
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_1.to_box()
    str_0 = "\n        Returns first element of ImmutableList that passed\n        info argument returns True\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> bool\n        :returns: A\n        "
    var_3 = var_0.to_validation()
    int_1 = 1285
    dict_0 = {str_0: str_0, str_0: int_1, str_0: int_1}
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    var_4 = maybe_2.bind(int_1)
    var_5 = maybe_2.to_either()


def test_case_7():
    bytes_0 = b"{\xed\xcaO\xba\xc9\xa7\x14\xb5f\xe2-_\xf8w[\xba"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, bool_0)
    str_0 = ""
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.ap(tuple_1)


def test_case_9():
    none_type_0 = None
    float_0 = -2073.111616346395
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    object_0 = module_1.object()
    object_1 = maybe_1.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(object_1, object_1)
    var_3 = var_1.to_try()
    maybe_3 = module_0.Maybe(object_1, maybe_2)
    var_4 = var_1.to_either()
    var_5 = var_0.filter(var_4)
    var_6 = var_5.to_lazy()
    maybe_1.ap(maybe_1)


def test_case_10():
    str_0 = "[e"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_2 = maybe_1.map(none_type_0)
    var_3 = var_2.to_either()
    var_4 = var_3.bind(var_1)
    var_4.to_either()


def test_case_11():
    bytes_0 = b'"U\n\xa1\xadWY\\'
    set_0 = {bytes_0}
    complex_0 = -1641.56129 + 675j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    maybe_0.filter(set_0)


def test_case_12():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(set_0)
    var_2 = var_0.get_or_else(bool_1)
    var_3 = var_1.to_try()
    var_3.to_box()


def test_case_13():
    float_0 = 2623.60973
    int_0 = -2200
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)


def test_case_14():
    str_0 = "[e"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    var_1 = var_0.to_box()
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = ']B"dZQ*.;?WZ?C'
    int_0 = 1
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(str_0)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(bool_0)


def test_case_19():
    set_0 = set()
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(set_0)
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.map(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_2.to_box()


def test_case_22():
    none_type_0 = None
    float_0 = -2073.1455
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    object_0 = module_1.object()
    var_1 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(object_0, maybe_1)
    var_2 = maybe_1.to_try()
    maybe_3 = module_0.Maybe(object_0, object_0)
    var_3 = maybe_3.to_lazy()
    var_4 = maybe_3.ap(maybe_3)
    var_5 = var_4.filter(var_4)
    var_2.ap(var_2)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"@\x08\x83 \x94\x1c\x95p\xc4\x9c\x89\xb8*.\x9fS"
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = maybe_1.bind(var_3)
    var_5 = var_4.filter(none_type_0)
    generic_0 = module_2.Generic()
    var_6 = var_3.to_try()
    var_7 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(bool_0, bool_2)
    bool_3 = var_2.__eq__(maybe_0)
    var_8 = maybe_1.to_validation()
    var_9 = var_4.to_either()
    maybe_2.filter(bool_0)
