# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.ap(bool_0)
    var_2 = maybe_1.filter(bool_1)
    var_3 = maybe_1.to_try()
    maybe_0.filter(maybe_0)


def test_case_3():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(bool_0)
    none_type_0 = None
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.filter(none_type_0)
    var_3 = var_2.to_try()
    var_4 = maybe_0.get_or_else(var_3)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.to_lazy()
    var_4.to_either()


def test_case_4():
    int_0 = -1954
    none_type_0 = None
    float_0 = -3190.2167
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(int_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.filter(var_1)
    maybe_0.filter(maybe_0)


def test_case_7():
    bool_0 = True
    str_0 = "T\rp!"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_8():
    set_0 = set()
    int_0 = -578
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(set_0)


def test_case_9():
    str_0 = "2I3H\x0c\\\n\no,"
    list_0 = [str_0, str_0, str_0, str_0]
    bytes_0 = b"2\x8e\xe4\x12\xc3"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_try()


def test_case_10():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.ap(bool_0)
    var_1 = maybe_1.filter(bool_1)
    var_2 = var_0.map(bool_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.get_or_else(bool_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    bytes_0 = b"\xa1\x9b \xf5\x06\xd2;H\xf2\xad[\x8b\xd6\x02K\xbb\x1e\\\xc1R"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_either()


def test_case_13():
    none_type_0 = None
    float_0 = 1920.85888
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, float_0)
    var_0 = maybe_1.map(none_type_0)
    var_1 = var_0.to_either()
    dict_0 = {}
    maybe_2 = module_0.Maybe(dict_0, dict_0)
    var_2 = maybe_2.to_validation()
    var_2.bind(var_1)


def test_case_14():
    bytes_0 = b"\x892\x926RW\x05\xd5W\xa2Y\x04\x1b"
    list_0 = [bytes_0]
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(list_0)
    var_2.to_lazy()


def test_case_15():
    bytes_0 = b"L\rq\xa8\xd2\xbcM\x92\xfc\xe7 \xbc\xbbt"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(bool_0)
    maybe_0.filter(maybe_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(bool_1)
    var_2 = var_0.map(bool_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.get_or_else(bool_0)
    maybe_0.filter(maybe_0)


def test_case_18():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()


def test_case_19():
    none_type_0 = None
    float_0 = -2673.8814
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_0)


def test_case_21():
    float_0 = -1011.0
    list_0 = [float_0, float_0, float_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_22():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_box()
    var_3 = maybe_0.filter(none_type_0)
    var_4 = var_3.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.to_validation()
    var_7 = maybe_0.to_lazy()
    var_8 = var_5.to_validation()
    var_8.to_validation()


def test_case_23():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.ap(int_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.ap(bool_1)
    var_6 = maybe_0.filter(bool_1)
    var_7 = var_2.to_try()
    var_8 = var_2.get_or_else(int_0)
    var_9 = var_5.to_validation()


def test_case_24():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.ap(bool_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_1 = maybe_1.filter(bool_1)
    var_2 = var_1.to_lazy()
    var_3 = var_0.map(var_2)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.get_or_else(bool_0)
    var_6 = maybe_1.to_validation()
    maybe_0.filter(var_6)
