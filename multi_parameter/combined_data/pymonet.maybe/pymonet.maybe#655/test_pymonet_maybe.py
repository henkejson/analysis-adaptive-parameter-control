# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "r$`*%Bh3RR0 k$.MVG"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.map(bytes_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_0.map(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)


def test_case_5():
    float_0 = 1652.29587
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_try()
    var_2 = var_0.to_box()
    var_3 = var_2.to_validation()
    bool_0 = var_3.__eq__(float_0)
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2.ap(maybe_2)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    str_0 = "C>G#Z[/|aI:q"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_1.to_either()
    var_5 = var_3.to_lazy()
    var_6 = maybe_0.to_either()
    var_7 = maybe_0.filter(var_6)
    var_8 = var_4.to_lazy()
    var_9 = maybe_0.ap(var_3)


def test_case_8():
    int_0 = 3130
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)


def test_case_9():
    list_0 = []
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_10():
    str_0 = "Z1tK+^XNms"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_1.map(var_1)


def test_case_11():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(var_0)


def test_case_12():
    list_0 = []
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.map(list_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_13():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_either()
    maybe_1.bind(none_type_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_1.to_box()
    var_1.bind(var_2)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(maybe_0)


def test_case_16():
    int_0 = 0
    str_0 = "T7~.\t(N`n"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(int_0)
    var_1.to_try()


def test_case_17():
    str_0 = "CG#Z[/|aI:6q"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = var_2.to_either()
    var_4 = var_2.filter(var_0)
    var_5 = var_2.to_lazy()
    var_6 = maybe_0.to_try()
    var_7 = var_2.get_or_else(str_0)
    var_8 = var_5.to_try()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_9 = var_0.to_either()
    bool_0 = maybe_0.__eq__(var_7)
    maybe_2 = module_0.Maybe(var_9, bool_0)
    var_10 = var_4.to_validation()
    maybe_2.filter(var_0)


def test_case_18():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_box()
    var_1.filter(var_1)


def test_case_19():
    bytes_0 = b"2"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    bool_1 = maybe_2.__eq__(maybe_1)
    var_2 = maybe_1.filter(maybe_1)
    var_3 = maybe_2.to_validation()
    var_4 = var_1.to_either()
    var_5 = var_2.to_lazy()
    var_4.to_either()


def test_case_20():
    str_0 = "C>G#Z[/|aI:q"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_0.to_either()
    var_3 = var_1.filter(var_2)
    var_4 = var_3.to_lazy()
    bool_0 = var_2.__eq__(var_4)
    var_5 = var_0.to_try()
    var_6 = var_1.ap(var_4)
    var_7 = var_6.to_try()
    maybe_1 = module_0.Maybe(var_4, var_6)
    var_8 = var_1.to_validation()
    var_9 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(var_6)
    maybe_2 = module_0.Maybe(var_7, var_0)
    var_10 = var_4.to_validation()
    var_0.filter(var_5)
