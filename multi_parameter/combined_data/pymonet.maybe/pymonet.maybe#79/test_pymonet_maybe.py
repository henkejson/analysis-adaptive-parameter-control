# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = -728
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(bool_0)


def test_case_4():
    int_0 = -2192
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.bind(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_1.to_either()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_6():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.map(object_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_validation()
    maybe_1 = module_0.Maybe(var_4, bool_1)
    var_5 = maybe_1.to_try()
    var_5.to_validation()


def test_case_7():
    str_0 = "E\\7<"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    bool_2 = False
    tuple_1 = (bool_2,)
    maybe_1.filter(tuple_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\x9ec1\xad*\xf9;\x93\x02\x1d`"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_12():
    str_0 = 'ZuGC` "'
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_13():
    int_0 = -2192
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    int_1 = 148
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.ap(int_1)
    var_2 = var_0.map(bool_0)
    bool_1 = var_2.__eq__(maybe_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.bind(var_3)
    var_5 = var_1.bind(var_1)
    var_6 = var_1.to_box()
    var_4.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_15():
    int_0 = 2003
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(int_0)


def test_case_16():
    int_0 = -2192
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.filter(maybe_1)
    var_4 = maybe_0.filter(bool_0)
    var_5 = maybe_0.map(bool_0)
    var_6 = var_4.to_try()


def test_case_17():
    int_0 = -9
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(int_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_19():
    int_0 = -2192
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, bool_1)
    var_1 = maybe_0.filter(var_0)
    maybe_2 = module_0.Maybe(bool_3, bool_2)
    maybe_2.filter(var_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = module_0.Maybe(var_0, var_0)
    var_3 = var_1.to_validation()
    bool_2 = False
    var_4 = var_1.map(bool_0)
    none_type_0 = None
    var_5 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_6 = var_3.to_lazy()
    var_7 = maybe_1.to_either()
    var_8 = maybe_0.map(bool_1)
    var_9 = maybe_0.to_lazy()
    var_10 = var_9.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_11 = maybe_0.to_lazy()
    bool_3 = var_2.__eq__(maybe_2)
    var_12 = maybe_2.to_either()
    var_13 = var_1.to_validation()
    var_14 = var_2.ap(bool_2)
    var_13.map(var_7)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(maybe_0)
