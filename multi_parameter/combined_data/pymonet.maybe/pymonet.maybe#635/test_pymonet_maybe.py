# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"h\xf5\x16\xb8k"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    bool_0 = True
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.to_box()


def test_case_3():
    bytes_0 = b">*=\xd2\x91<\xcb\x1c\xbf6\xeb\xa4s"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = var_0.filter(bytes_0)
    maybe_1.filter(bool_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(maybe_0)


def test_case_5():
    bytes_0 = b">*=\xd2\x91<\xcb\x1c\xbf6\xeb\xa4s"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    var_1 = var_0.filter(bytes_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = var_0.bind(none_type_0)
    maybe_1.filter(var_2)


def test_case_6():
    str_0 = '"enK\n="1hI(-Fq#ps\''
    bool_0 = True
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(set_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_box()
    bool_2 = maybe_0.__eq__(set_0)
    var_2 = maybe_0.filter(var_0)
    maybe_2 = module_0.Maybe(maybe_1, set_0)
    var_3 = maybe_2.get_or_else(var_0)
    var_4 = maybe_2.get_or_else(var_1)
    var_5 = maybe_0.to_box()
    bool_3 = var_1.__eq__(var_1)
    maybe_3 = module_0.Maybe(str_0, bool_3)
    maybe_2.bind(var_3)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    bytes_0 = b"\ny"
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    list_0 = [bytes_0, bytes_0, generic_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.ap(none_type_1)
    var_2 = var_1.to_box()
    var_2.ap(none_type_0)


def test_case_8():
    bytes_0 = b">*\xa0\xd2\x91<\xcb\x1c\xbf6\xeb\xa4s"
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    tuple_0 = (bytes_0, set_0, set_0)
    var_0 = maybe_0.map(bytes_0)
    bool_0 = var_0.__eq__(var_0)
    none_type_0 = None
    var_1 = maybe_0.ap(maybe_0)
    bool_1 = var_1.__eq__(none_type_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(bool_1)
    var_4 = var_1.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(tuple_0, none_type_1)
    maybe_1.ap(none_type_1)


def test_case_9():
    bytes_0 = b"\xa7;\xb4C\xea\x9c\xe8+"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1.filter(bool_0)


def test_case_10():
    float_0 = -2351.106947
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(float_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_1.get_or_else(bool_0)
    var_1.to_validation()


def test_case_12():
    bytes_0 = b"x\x9a\n\x9a"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_2.to_either()
    none_type_2 = None
    var_2 = maybe_2.to_try()
    maybe_3 = module_0.Maybe(none_type_2, none_type_2)
    var_3 = var_1.to_lazy()
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.to_try()
    var_6 = var_4.map(bool_0)
    maybe_3.ap(none_type_2)


def test_case_14():
    float_0 = -3845.69
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_either()
    var_1.filter(float_0)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"FS\x1e/\x989G\xbb~\xc4\xac"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_4 = var_3.get_or_else(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_17():
    bytes_0 = b">*=\xd2\x91<\xcb\x1c\xbf6\xeb\xa4s"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = var_0.filter(bytes_0)
    bool_1 = maybe_0.to_try()
    maybe_1.filter(bool_0)


def test_case_18():
    int_0 = 3091
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_20():
    int_0 = 4594
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(int_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_2.filter(none_type_0)


def test_case_21():
    str_0 = '"enK\n="1hI(-Fq#ps\''
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    none_type_0 = None
    bool_1 = True
    bool_2 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.filter(bool_1)
    var_2 = var_1.get_or_else(none_type_0)
    str_1 = ""
    var_3 = maybe_1.get_or_else(str_1)
    bool_3 = var_1.__eq__(var_0)
    var_4 = maybe_1.ap(var_1)
    var_5 = var_4.bind(var_0)
    var_6 = maybe_0.filter(maybe_1)
    var_3.to_either()


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()
