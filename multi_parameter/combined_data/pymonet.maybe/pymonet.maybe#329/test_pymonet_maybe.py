# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_1.map(bool_0)
    var_4 = var_0.to_try()
    bool_1 = maybe_0.__eq__(var_1)
    var_5 = var_2.to_try()
    var_6 = var_3.ap(var_3)
    var_7 = var_1.to_box()
    var_8 = var_3.to_try()
    maybe_0.filter(var_8)


def test_case_3():
    str_0 = "D}hLY\x0c6{6Zh&4;"
    int_0 = -2358
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(str_0)
    float_0 = 1625.0
    none_type_0 = None
    maybe_2 = module_0.Maybe(float_0, none_type_0)
    bool_0 = maybe_1.__eq__(var_2)
    var_3 = var_0.get_or_else(bool_0)
    var_3.bind(var_2)


def test_case_4():
    str_0 = "K!"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_either()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_2.bind(none_type_0)
    var_4 = var_1.bind(none_type_0)
    var_5 = var_0.to_try()
    var_6 = var_2.to_try()
    var_7 = var_1.to_box()
    var_8 = var_4.to_validation()
    maybe_0.filter(var_5)


def test_case_7():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_1.filter(var_2)


def test_case_9():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    tuple_0 = (bool_0, bool_0, bool_0)
    str_0 = ""
    none_type_0 = None
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.ap(str_0)
    var_3 = var_2.map(str_0)
    var_4 = var_3.ap(str_0)
    var_4.get_or_else(none_type_0)


def test_case_11():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.to_box()
    none_type_0 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    maybe_2.filter(var_3)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_14():
    int_0 = 2428
    float_0 = -905.517
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(int_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(var_2)


def test_case_16():
    str_0 = "ZY};JGA]HH{[ 8YNeo"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.to_box()
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_try()
    var_2.ap(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    dict_0 = {}
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, dict_0)
    none_type_1 = None
    bool_2 = maybe_1.__eq__(dict_0)
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    maybe_0.bind(var_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_validation()
    bool_1 = True
    var_3 = maybe_1.filter(bool_1)
    var_4 = maybe_1.get_or_else(none_type_0)
    var_5 = var_3.bind(none_type_0)
    var_6 = var_1.map(bool_0)
    var_7 = var_1.bind(none_type_0)
    var_8 = var_0.to_try()
    bool_2 = maybe_0.__eq__(var_1)
    var_9 = var_3.to_try()
    var_10 = var_6.ap(var_6)
    bool_3 = var_6.__eq__(var_1)
    var_11 = var_1.to_box()
    complex_0 = 3493.675 - 156.3626j
    var_12 = var_6.filter(complex_0)
    bytes_0 = b"\xbc\x8a\xac\xec\x96y\xa7\xe3\x90~\x8d\x8f\x8f5\xaaJS\x1d\xf9"
    var_13 = var_7.to_validation()
    var_14 = maybe_1.filter(var_13)
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    var_15 = var_12.to_try()
    maybe_3 = module_0.Maybe(var_11, bool_1)
    var_16 = var_6.to_try()
    maybe_0.filter(var_16)


def test_case_21():
    str_0 = ""
    bytes_0 = b"\x1f\x02\xf1\xe31\xad\x80\x0e"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.filter(none_type_0)
