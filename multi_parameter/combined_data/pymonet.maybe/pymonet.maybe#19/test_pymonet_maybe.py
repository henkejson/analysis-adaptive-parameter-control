# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 3301
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    maybe_3 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_3.to_validation()
    bool_3 = maybe_3.__eq__(maybe_3)
    bool_4 = var_0.__eq__(var_0)
    maybe_3.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_0 = maybe_0.to_validation()
    bool_2 = var_0.__eq__(bool_0)
    bool_3 = maybe_0.__eq__(maybe_2)
    var_1 = maybe_2.filter(bool_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_2.bind(var_2)
    bool_4 = maybe_2.__eq__(maybe_0)
    bool_5 = maybe_1.__eq__(bool_1)


def test_case_4():
    bytes_0 = b""
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.ap(maybe_1)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    var_0 = maybe_0.get_or_else(none_type_1)
    var_1 = maybe_0.filter(var_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.bind(var_3)
    var_3.map(bool_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(tuple_0)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_0.ap(dict_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"#\x1a\xb6g3\xb7VTh\xdb\xdaXC\xd6\t"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(maybe_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = maybe_1.to_lazy()
    bool_1 = var_1.__eq__(var_1)
    var_4 = maybe_1.map(bool_0)
    maybe_0.filter(bool_1)


def test_case_11():
    none_type_0 = None
    int_0 = -1213
    tuple_0 = (int_0, int_0)
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(tuple_0)
    var_2 = var_1.to_either()
    var_2.filter(none_type_0)


def test_case_12():
    int_0 = -1292
    complex_0 = 801.913 - 703.63j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(int_0)


def test_case_13():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    str_0 = '}`K-U,P6E"3'
    list_0 = [str_0, str_0, str_0, str_0]
    bool_1 = True
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_15():
    float_0 = -3796.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(float_0)


def test_case_16():
    str_0 = ' v"\x0c8!0/#'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(maybe_0, maybe_1)
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    bool_2 = False
    maybe_4 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_2.to_validation()
    bool_3 = maybe_2.__eq__(maybe_2)
    bool_4 = maybe_4.__eq__(maybe_2)
    var_1 = maybe_3.filter(var_0)
    var_2 = maybe_3.to_lazy()
    var_3 = var_2.bind(bool_3)
    var_4 = var_3.to_try()
    bool_5 = var_1.__eq__(var_3)
    bool_6 = maybe_4.__eq__(bool_2)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(maybe_0, maybe_1)
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_0 = maybe_1.to_validation()
    bool_2 = var_0.__eq__(bool_0)
    bool_3 = maybe_1.__eq__(maybe_3)
    var_1 = maybe_3.filter(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_3.bind(var_2)
    var_0.bind(var_0)
