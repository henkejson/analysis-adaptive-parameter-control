# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    str_0 = "=.pjg(6\n~j'UE~C1"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = var_2.map(none_type_0)
    var_4 = maybe_0.to_box()
    var_5 = var_3.to_lazy()
    var_6 = var_4.to_either()
    var_7 = maybe_0.bind(var_3)
    var_8 = var_2.get_or_else(none_type_0)
    var_8.ap(var_5)


def test_case_3():
    complex_0 = -1890.74 - 1879j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(complex_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_5 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(var_3)
    var_6 = maybe_1.to_box()


def test_case_4():
    float_0 = -2213.9279
    float_1 = -1235.0
    str_0 = "Y("
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.filter(float_1)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    bytes_0 = b"GAvM\\\xba5\x19\x9f\xab\xcf\x84x\xe2\xa0o\xe7F\x9e_"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.ap(bytes_0)
    maybe_0.filter(var_1)


def test_case_7():
    int_0 = -730
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(int_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    bytes_0 = b"GAvM\\\xba5\x19\x9f\xab\xcf\x84x\xe2\xa0o\xe7F\x9e_"
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(bytes_0)


def test_case_9():
    float_0 = 497.3127
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    maybe_0.filter(var_0)


def test_case_10():
    list_0 = []
    object_0 = module_1.object(*list_0)
    int_0 = 188
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.filter(object_0)


def test_case_11():
    str_0 = "x*C\x0clV7Zr"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.filter(str_0)


def test_case_12():
    int_0 = -864
    bool_0 = False
    bool_1 = False
    tuple_0 = (int_0, bool_0, bool_1)
    dict_0 = {int_0: int_0, int_0: int_0, tuple_0: bool_0, int_0: bool_0}
    maybe_0 = module_0.Maybe(int_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_13():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.to_box()
    var_1.to_box()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(bool_0)


def test_case_15():
    object_0 = module_1.object()
    set_0 = {object_0}
    maybe_0 = module_0.Maybe(set_0, object_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    int_0 = -1846
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_validation()
    var_4.get_or_else(maybe_1)


def test_case_17():
    none_type_0 = None
    dict_0 = {}
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_0.map(dict_0)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.map(maybe_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = module_0.Maybe(var_1, bool_0)
    var_3 = var_1.bind(var_1)
    var_4 = var_2.to_box()
    var_5 = var_0.to_lazy()
    var_6 = var_4.to_either()
    var_7 = maybe_0.bind(var_5)
    var_8 = var_0.get_or_else(var_6)
    var_9 = var_3.ap(none_type_0)
    var_10 = var_9.to_lazy()
    var_11 = var_10.to_either()
    var_11.bind(var_3)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\xf6\x1c"
    set_0 = {bytes_0}
    bool_1 = True
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_1 = maybe_1.to_either()
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_2 = maybe_1.to_validation()
    var_2.map(var_1)
