# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\xfc\xc1(\xa3\xd3\x0f\x0e\t\x04\x12\x9d\\*W$%\x86"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(none_type_0)


def test_case_3():
    complex_0 = -1573.671328 - 1030.52328j
    bytes_0 = b"K\xda\xd2\x86`nSRr\xfd\xf1\x15y\x95\x18\xeb\xb6\x10\xfdu"
    bool_0 = False
    int_0 = -3209
    maybe_0 = module_0.Maybe(complex_0, int_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_validation()
    bool_1 = var_0.__eq__(complex_0)
    var_2 = maybe_1.to_try()
    var_2.to_box()


def test_case_4():
    str_0 = "vU`7.^Y)DG=SOj*("
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = bool_1.__eq__(bool_1)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.map(bool_0)
    var_4 = var_0.to_either()
    var_5 = var_3.to_validation()
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, bool_3)
    maybe_1.filter(var_1)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.filter(var_1)


def test_case_7():
    bytes_0 = b"\x93CE\x0b\x9dv"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_2 = maybe_1.to_lazy()
    bytes_1 = b"\xa4%\xf1"
    bool_0 = False
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    maybe_2.bind(bytes_1)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_9():
    bytes_0 = b"%\x84\xdc7\xa4\x18cZ>:d\xc9\xa1\xfc\x94+\xfbQ\x15\xa8"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_try()
    var_2.to_lazy()


def test_case_10():
    complex_0 = -1573.671328 - 1030.52328j
    bytes_0 = b"K\xda\xd2\x86`nSRr\xfd\xf1\x15y\x95\x18\xeb\xb6\x10\xfdu"
    bool_0 = False
    int_0 = -3209
    maybe_0 = module_0.Maybe(complex_0, int_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.get_or_else(complex_0)
    var_2.to_validation()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_either()
    maybe_0.filter(maybe_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    maybe_0.filter(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    generic_0 = module_1.Generic()
    str_0 = "1Rpu+?CS\nCAa|$,)"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_16():
    str_0 = "vU`7.^Y)DG=SOj*("
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = var_1.to_try()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.bind(bool_0)
    var_4 = var_0.to_either()
    var_5 = var_3.to_validation()
    bool_3 = False
    maybe_1 = module_0.Maybe(bool_3, bool_3)
    maybe_1.filter(var_1)


def test_case_17():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_18():
    str_0 = "vU`7.^Y)DG=SOj*("
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = var_1.__eq__(var_1)
    var_3 = var_0.ap(bool_0)
    var_4 = maybe_0.filter(var_2)
    var_5 = var_0.map(bool_0)
    var_6 = var_0.to_either()
    var_7 = var_5.to_validation()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(var_3)


def test_case_19():
    str_0 = "vU`7.<^Y)DG=SOj*("
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(var_1)
    bool_1 = var_2.__eq__(var_2)
    var_3 = var_1.to_try()
    var_4 = maybe_0.filter(var_3)
    maybe_1 = module_0.Maybe(var_3, bool_0)
    var_5 = var_1.to_either()
    var_6 = maybe_0.to_validation()
    var_6.ap(var_6)
