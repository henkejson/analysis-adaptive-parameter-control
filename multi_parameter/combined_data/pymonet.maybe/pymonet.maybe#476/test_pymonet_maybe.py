# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "mC=IJJzZMn9]N"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\x0c\x07\xa1\x0b\xa3\xab\xb3i^\xe8\x1a\xe3\x82"
    maybe_0 = module_0.Maybe(dict_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = maybe_0.filter(var_2)
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = maybe_0.to_box()


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()


def test_case_4():
    none_type_0 = None
    int_0 = 1
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_1.map(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.map(int_0)
    var_3.get_or_else(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.get_or_else(var_2)
    maybe_0.map(bool_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.filter(maybe_1)
    bool_1 = False
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    bool_3 = var_0.__eq__(maybe_2)
    var_2 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(var_1, bool_1)
    var_3 = maybe_1.bind(bool_2)
    var_4 = var_2.to_lazy()
    maybe_3.filter(var_0)


def test_case_7():
    bytes_0 = b"\xba\x19\xb7\xd7\x9c\xf3\xa4\x1e\xba\xc4\xfd\xb0\x06\xb3.Q\xc5xQ"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(tuple_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.ap(bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_2 = var_1.to_validation()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_10():
    str_0 = 'fP1$M"fC0^"\x0b" !F~'
    int_0 = -3256
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_lazy()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_2.to_validation()
    var_3 = maybe_1.to_box()


def test_case_13():
    bytes_0 = b"\x9f\xac\xcf\x05\xf3\x9dl\xa4\xee\xb8\xb4\x10\x7f"
    int_0 = 2229
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_box()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.filter(none_type_0)


def test_case_16():
    bytes_0 = b"\x14\x17\x8b\xcf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_2.to_lazy()
    maybe_2.filter(var_1)


def test_case_19():
    int_0 = -3256
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(bool_0)
    var_1.to_box()


def test_case_20():
    str_0 = 'fP1$M"fC0^"\x0b" !F~'
    int_0 = -3256
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.filter(maybe_1)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    maybe_3 = module_0.Maybe(bool_1, var_1)
    bool_2 = maybe_2.__eq__(var_0)
    var_2 = maybe_2.to_try()
    maybe_4 = module_0.Maybe(str_0, str_0)
    maybe_2.bind(maybe_4)


def test_case_21():
    int_0 = -3256
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_box()


def test_case_22():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_1 = var_0.__eq__(var_0)
    var_2 = maybe_0.to_validation()
    var_2.ap(none_type_0)


def test_case_23():
    float_0 = -1470.5011
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_validation()
    bool_2 = False
    bool_3 = False
    maybe_2 = module_0.Maybe(var_0, bool_2)
    maybe_3 = module_0.Maybe(maybe_0, bool_3)
    bool_4 = maybe_3.__eq__(bool_2)
    var_3 = var_2.to_try()
    maybe_4 = module_0.Maybe(float_0, var_2)
    var_4 = var_0.to_validation()
    var_5 = var_4.to_lazy()
    var_5.to_lazy()
