# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xdb\xe6+\x9fij\x10\xf1T"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x19\xfcX\xad\x9a\x80"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_1)
    var_1 = maybe_0.map(maybe_1)
    var_2 = maybe_0.bind(none_type_1)
    maybe_1.filter(none_type_1)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_5():
    int_0 = -5388
    set_0 = {int_0, int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    complex_0 = -4122 - 829j
    var_0 = maybe_0.ap(complex_0)
    str_0 = "\nG?HCER!JbJ[\roIR"
    maybe_1 = module_0.Maybe(set_0, var_0)
    var_1 = maybe_0.get_or_else(str_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(set_0)
    var_4 = var_2.get_or_else(complex_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_7():
    bytes_0 = b"\x19\xfcX\xad\x9a\x80"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_0.filter(var_1)


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.to_either()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_1 = maybe_0.to_either()
    none_type_1 = None
    bool_0 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.get_or_else(none_type_1)
    var_1.get_or_else(maybe_1)


def test_case_11():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    var_2.to_either()


def test_case_12():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, set_0)
    var_0 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_13():
    complex_0 = -2048.9 + 1509.88126j
    set_0 = {complex_0, complex_0, complex_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    str_0 = "\nLtRSGJZY"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_0.map(set_0)


def test_case_15():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_0.bind(var_0)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_either()
    var_5 = maybe_1.map(var_4)
    var_1.to_lazy()


def test_case_17():
    int_0 = 962
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    bytes_0 = b"\xef\xf4\xe97\x1e0R\x0f\xd7\xb6"
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_18():
    int_0 = -5388
    set_0 = {int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    list_0 = [int_0, maybe_0, maybe_0, set_0]
    complex_0 = -4122 - 829j
    var_0 = maybe_0.ap(complex_0)
    str_0 = "\nG?HCER!JbJ[\roIR"
    var_1 = var_0.to_validation()
    var_2 = var_0.to_either()
    var_3 = maybe_0.get_or_else(var_0)
    var_4 = maybe_0.get_or_else(str_0)
    var_5 = maybe_0.filter(list_0)
    complex_0.bind(list_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = module_0.Maybe(none_type_0, maybe_0)
    none_type_1 = None
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(none_type_1)
    maybe_0.map(var_1)


def test_case_20():
    int_0 = -5388
    set_0 = {int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    list_0 = [int_0, maybe_0, maybe_0, set_0]
    complex_0 = -4101.293064929406 - 829j
    var_0 = maybe_0.ap(complex_0)
    str_0 = "\nG?HCER!JbJ[\roIR"
    bool_0 = True
    bool_1 = maybe_0.__eq__(set_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.filter(int_0)
    maybe_1 = module_0.Maybe(maybe_0, str_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.get_or_else(maybe_1)
    var_5 = maybe_1.to_try()
    bool_2 = var_4.__eq__(maybe_1)
    var_6 = maybe_0.ap(var_3)
    var_7 = var_6.get_or_else(bool_0)
    var_8 = var_3.map(list_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    bool_0 = True
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_3 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3.ap(none_type_0)
