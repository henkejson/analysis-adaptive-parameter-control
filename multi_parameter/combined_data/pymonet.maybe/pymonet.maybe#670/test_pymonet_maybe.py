# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -195.58516485673297
    var_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    complex_0 = -2856.683 - 1795.2j
    set_0 = {complex_0, complex_0, complex_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_0.bind(set_0)
    bool_1 = var_3.__eq__(var_1)


def test_case_3():
    none_type_0 = None
    generic_0 = module_1.Generic()
    dict_0 = {generic_0: generic_0, generic_0: generic_0, generic_0: generic_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.map(none_type_0)


def test_case_4():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_5():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_6():
    complex_0 = -2856.683 - 1795.2j
    set_0 = {complex_0, complex_0, complex_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_lazy()


def test_case_7():
    float_0 = -194.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(maybe_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.filter(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_9():
    set_0 = set()
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_box()


def test_case_10():
    complex_0 = -2856.683 - 1795.2j
    set_0 = {complex_0, complex_0, complex_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    var_1 = var_0.to_either()
    var_2 = var_0.map(var_1)
    var_3 = var_1.to_lazy()


def test_case_11():
    str_0 = "ld2\\U j%^j"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_2.to_either()
    var_3 = var_2.to_box()
    var_4 = module_0.Maybe(var_3, bool_1)
    var_5 = var_0.to_lazy()


def test_case_12():
    str_0 = "ld2\\U j%^j"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.bind(str_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_box()
    var_5 = var_3.to_lazy()


def test_case_13():
    str_0 = "_F%o*N<"
    tuple_0 = (str_0,)
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(tuple_0)
    bool_0 = True
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(var_2)


def test_case_14():
    set_0 = set()
    float_0 = -194.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(set_0)
    var_1 = var_0.to_lazy()


def test_case_15():
    float_0 = 506.2
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = var_0.filter(var_1)
    var_3 = maybe_0.to_try()
    var_3.to_validation()


def test_case_16():
    str_0 = "("
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.map(var_0)


def test_case_17():
    list_0 = []
    str_0 = "#4Oy"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.bind(list_0)


def test_case_18():
    bytes_0 = b"PB"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_19():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    int_0 = -37
    list_0 = [int_0, int_0]
    list_1 = [list_0, int_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(var_1)


def test_case_20():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    bool_0 = False
    none_type_0 = None
    var_0 = maybe_0.map(maybe_0)
    bool_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    bool_2 = var_0.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(bool_2, bool_1)
    maybe_2.map(none_type_0)


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.filter(maybe_1)
    var_1 = var_0.get_or_else(maybe_1)
    maybe_2.filter(maybe_2)


def test_case_22():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_1)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    none_type_0 = None
    var_3 = var_2.filter(none_type_0)
    var_4 = maybe_2.to_either()
    var_5 = maybe_2.to_box()
    bool_3 = maybe_1.__eq__(maybe_2)


def test_case_23():
    str_0 = "ld2\\U j%^j"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = var_2.__eq__(str_0)
    bool_3 = maybe_1.__eq__(maybe_1)
    bool_4 = False
    maybe_2 = module_0.Maybe(str_0, bool_4)
    var_3 = maybe_0.filter(maybe_0)
    var_4 = var_3.to_box()
    var_5 = maybe_1.to_either()
    var_4.to_box()
