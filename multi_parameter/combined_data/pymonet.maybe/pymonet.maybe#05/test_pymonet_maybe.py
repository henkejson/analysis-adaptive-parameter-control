# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_0.filter(bool_1)


def test_case_3():
    str_0 = "a#0Z_7]&?\ra+8ZkJ"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    bool_2 = False
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_1 = maybe_1.to_lazy()
    var_1.filter(var_1)


def test_case_4():
    int_0 = 1
    str_0 = "4\tI57q=Qp#dpU"
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.to_validation()
    var_1.map(int_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = maybe_1.bind(none_type_0)
    bool_2 = var_0.__eq__(var_1)
    var_2 = var_1.get_or_else(maybe_1)
    var_3 = maybe_1.bind(none_type_0)
    maybe_0.filter(var_2)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"{\xc29\xdb&\x1a\xb9f\x1f\x13\xf39T"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = maybe_1.ap(bytes_0)
    var_2 = maybe_0.ap(maybe_1)
    maybe_0.filter(bool_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = maybe_0.ap(maybe_1)
    maybe_0.filter(bool_1)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\x97\x9d\xa0\x18\x8c\x1a`"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -756
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.get_or_else(none_type_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    bool_3 = False
    bytes_0 = b"\x1a\xcb\xdb\xda\x97\xe5\x0c\xbbL\x11\xd0\xc4\xbct\x8aVc\xb5\xe2"
    bool_4 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_4)
    var_0 = maybe_1.get_or_else(bool_3)
    var_0.ap(bool_2)


def test_case_13():
    none_type_0 = None
    str_0 = "k"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_1.filter(none_type_0)


def test_case_14():
    int_0 = -754
    bool_0 = False
    int_1 = -1062
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.filter(int_1)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"\x1fS\x03d\xee\xc5\x8e)\xee\x1a\xe2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_0.filter(bool_0)


def test_case_17():
    float_0 = 64.497531
    complex_0 = -146.533 + 1490.5164j
    tuple_0 = (float_0, complex_0, float_0)
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(tuple_0)
    var_1.to_validation()


def test_case_18():
    str_0 = ":'5_,l`t&(fN90w0"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bool_0 = True
    int_0 = -1848
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)


def test_case_20():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_21():
    int_0 = -2595
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    bytes_0 = b"\xa2\xe9\x16\x84\x0b3\xd9\xe5\xe4d\x19\xe8"
    maybe_1 = module_0.Maybe(bytes_0, int_0)
    var_2 = maybe_1.to_lazy()
    none_type_0 = None
    var_3 = var_2.to_validation()
    bool_0 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    maybe_3 = module_0.Maybe(bytes_0, bytes_0)
    none_type_1 = None
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = maybe_2.to_try()
    var_5 = maybe_3.get_or_else(none_type_1)
    var_6 = maybe_3.to_try()
    var_7 = maybe_3.map(var_6)
    var_8 = var_7.to_lazy()
    maybe_2.filter(var_3)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(none_type_1)
