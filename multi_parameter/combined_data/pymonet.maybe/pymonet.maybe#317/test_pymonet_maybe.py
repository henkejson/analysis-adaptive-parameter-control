# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "I|Yx"
    var_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_2 = maybe_0.ap(bool_1)
    var_0.to_validation()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(maybe_0)
    var_3 = maybe_0.map(var_0)
    var_4 = maybe_0.to_box()
    var_5 = var_2.to_either()
    var_6 = var_0.to_validation()
    bool_1 = var_3.__eq__(bool_0)
    var_7 = var_1.to_lazy()
    bool_2 = var_0.__eq__(var_4)
    var_8 = var_0.to_validation()
    bool_3 = var_0.__eq__(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\xcd\xe6\xdbD\x01\x9fQ&\x0c\xf1\xe4\xa6\xa3Y6K"
    bytes_1 = b"\xe1\xd9\x81\xf0\xf4\xdb\x9b\x7f\x04\x0f\xd7\xe2\xb2\xda\xdb;\xeb"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.bind(bytes_0)
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_3.ap(list_0)


def test_case_7():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_9():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    str_0 = "o5s5*/@D?h Eymk\\b*"
    set_0 = {str_0, str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(var_0)


def test_case_12():
    str_0 = "o5s5*/@D?h Eymk\\b*"
    set_0 = {str_0, str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)


def test_case_13():
    str_0 = "o5s5*/@D?h Eymk\\b*"
    set_0 = {str_0, str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(bool_0)


def test_case_14():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    str_0 = "I|Y!x"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.map(var_1)
    var_3 = var_2.get_or_else(var_1)
    var_4 = maybe_0.bind(var_1)
    var_5 = var_3.to_box()
    var_6 = var_4.to_either()
    bool_0 = var_4.__eq__(var_4)
    var_7 = var_3.to_lazy()
    bool_1 = var_7.__eq__(bool_0)
    var_8 = var_1.to_validation()
    bool_2 = var_8.__eq__(str_0)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_1.filter(none_type_0)


def test_case_17():
    str_0 = "o5s5*/@D?h Eymk\\b*"
    set_0 = {str_0, str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_try()
    var_2.to_lazy()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\xe2\x9c\xc7Y\xc4V\xe1"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.bind(none_type_0)


def test_case_20():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_1.filter(bool_0)
    var_3 = var_2.to_validation()
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)


def test_case_21():
    str_0 = "sM/xg/Jw"
    complex_0 = 444.2 + 2720.733208j
    maybe_0 = module_0.Maybe(str_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_22():
    str_0 = "I|Y!x"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.map(var_1)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.map(var_3)
    var_5 = var_3.to_box()
    var_6 = var_4.to_either()
    bool_0 = var_4.__eq__(var_4)
    var_7 = var_3.to_lazy()
    bool_1 = var_7.__eq__(bool_0)
    var_8 = var_1.to_validation()
    bool_2 = var_8.__eq__(str_0)


def test_case_23():
    str_0 = "I|Y!x"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    var_2 = var_1.map(none_type_0)
    maybe_1 = module_0.Maybe(var_2, var_0)
    none_type_1 = None
    var_3 = var_0.ap(var_1)
    var_4 = var_3.filter(var_1)
    var_5 = var_3.map(var_3)
    var_6 = var_2.filter(none_type_1)
    var_7 = var_2.to_either()
    var_8 = maybe_0.filter(var_5)
    var_9 = var_8.filter(var_8)
    var_10 = var_1.to_lazy()
    bool_0 = var_4.__eq__(none_type_0)
    var_11 = var_3.bind(var_7)
    var_12 = var_5.to_validation()
    bool_1 = var_1.__eq__(var_0)


def test_case_24():
    float_0 = -2732.6
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_box()
    maybe_0.map(var_1)
