# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    str_0 = "kQGB:\nnEgA/T?"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_3():
    none_type_0 = None
    int_0 = 1229
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_lazy()
    module_1.Generic(*var_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.map(maybe_0)


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(dict_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(bool_0)


def test_case_7():
    none_type_0 = None
    str_0 = "ImmutableList[U]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(none_type_0)
    int_0 = 0
    none_type_1 = None
    maybe_1 = module_0.Maybe(int_0, none_type_1)
    maybe_1.map(var_0)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(dict_0)


def test_case_9():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: First[B]\n        :returns: new First with first value\n        :rtype: First[A]\n        "
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(var_0)


def test_case_10():
    str_0 = "&r #\t4N29e\x0bCZ~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)


def test_case_11():
    str_0 = "[5d?UVD]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.ap(str_0)


def test_case_12():
    object_0 = module_2.object()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_13():
    float_0 = -1849.0
    int_0 = -360
    float_1 = -2495.181181
    maybe_0 = module_0.Maybe(int_0, float_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_1.ap(float_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0.filter(none_type_0)


def test_case_15():
    none_type_0 = None
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: First[B]\n        :returns: new First with first value\n        :rtype: First[A]\n        "
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0.map(bool_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_3.filter(var_1)


def test_case_20():
    float_0 = -3245.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_21():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_2 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_2.to_validation()
    var_4 = maybe_2.to_try()
    var_5 = maybe_2.to_validation()
    var_6 = maybe_2.bind(none_type_0)
    none_type_1 = None
    var_7 = var_6.ap(none_type_1)
    var_8 = maybe_0.to_lazy()
    var_9 = maybe_2.filter(maybe_2)
    var_10 = maybe_2.bind(var_3)
    var_11 = maybe_2.to_lazy()
    bool_1 = maybe_0.__eq__(var_6)
    var_12 = maybe_0.ap(var_4)
    var_13 = var_9.to_box()
    bool_2 = var_2.__eq__(var_10)
    var_14 = var_8.to_either()
    maybe_0.filter(var_9)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.to_try()
    bool_1 = var_3.__eq__(var_2)
    var_4 = maybe_1.map(var_1)
    var_5 = var_0.to_box()
    bool_2 = maybe_0.__eq__(var_4)
    var_5.get_or_else(var_1)


def test_case_24():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(dict_0, bool_1)
