# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "'[$v6`L-HuQN"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.filter(bool_0)
    none_type_0 = None
    var_2 = maybe_1.to_lazy()
    bool_2 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_3 = maybe_2.ap(bool_0)
    var_4 = var_1.to_try()
    bool_3 = var_1.__eq__(var_3)
    var_5 = maybe_1.get_or_else(bool_0)
    maybe_3 = module_0.Maybe(var_3, var_3)
    int_0 = -1626
    none_type_1 = None
    maybe_4 = module_0.Maybe(none_type_1, none_type_1)
    maybe_4.filter(int_0)


def test_case_3():
    complex_0 = 2498.68 - 2997.729j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    bytes_0 = b"'\xbe\xc9\x81\x8b\xbe\xa0y\xb0EZ\x0f\x97\xe39l\xe9\x82"
    bool_1 = False
    bool_2 = maybe_0.__eq__(complex_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = var_0.to_validation()
    var_2 = var_0.to_lazy()
    var_1.filter(complex_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    var_1 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_5():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_2.to_try()
    var_3 = maybe_2.bind(var_1)
    var_4 = maybe_2.map(none_type_0)
    var_5 = maybe_2.map(maybe_2)
    var_6 = maybe_2.to_box()
    var_7 = var_4.ap(maybe_2)
    var_8 = maybe_2.to_box()
    var_9 = var_5.to_lazy()
    var_10 = var_1.to_either()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.to_validation()
    maybe_1.bind(var_0)


def test_case_7():
    int_0 = 1
    str_0 = "\n        Transform Either to Box.\n\n        :returns: Box monad with previous value\n        :rtype: Box[A]\n        "
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.to_either()
    var_1.get_or_else(int_0)


def test_case_8():
    float_0 = -369.227
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(float_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    none_type_0 = None
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_1)
    maybe_1.filter(none_type_0)


def test_case_11():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.get_or_else(object_0)
    bool_1 = var_0.__eq__(object_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_1 = maybe_1.to_box()
    var_1.ap(object_0)


def test_case_12():
    bytes_0 = b"Os\x9d\x97?\xb7=\xed"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_lazy()


def test_case_13():
    object_0 = module_1.object()
    bytes_0 = b"\xfa\x0fRZ9\x9b#@\xb5V\x80\xcf\t|\x0c\x14t(\xd2"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(object_0)


def test_case_14():
    float_0 = 1661.002949
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(float_0, var_1)


def test_case_15():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_2.filter(none_type_0)


def test_case_16():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bytes_0 = b"\x97S\x1a\xe2\xe5\xf3\x93\xda\x07\xaf\xd9\xf7a\x02\x02/\xc5\xd9\x0e$"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)


def test_case_17():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.filter(bool_1)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_try()
    bool_2 = var_0.__eq__(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_19():
    complex_0 = 918.958 - 259.308055j
    str_0 = "2pZ&AQ-64-WX:9*bw\\"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(complex_0)
    int_0 = -1169
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = var_0.filter(maybe_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_validation()
    bool_2 = var_3.__eq__(var_0)
    maybe_1.map(int_0)


def test_case_20():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_1.filter(bool_0)
    none_type_0 = None
    var_2 = maybe_1.to_lazy()
    bool_3 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_3 = maybe_2.ap(bool_0)
    var_4 = var_1.to_try()
    var_5 = maybe_2.bind(maybe_0)
    bool_4 = var_1.__eq__(bool_1)
    var_6 = maybe_1.get_or_else(bool_0)
    maybe_3 = module_0.Maybe(var_3, var_3)
    var_7 = var_3.filter(maybe_3)
    var_8 = var_7.map(var_3)
    bool_5 = var_7.__eq__(maybe_0)
    var_9 = maybe_2.to_either()
    maybe_4 = module_0.Maybe(bool_0, bool_0)
    var_4.to_lazy()


def test_case_21():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_1.filter(bool_0)
    none_type_0 = None
    var_2 = maybe_1.to_lazy()
    bool_3 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_3 = var_2.ap(none_type_0)
    var_4 = maybe_1.to_try()
    var_5 = var_1.bind(var_0)
    bool_4 = maybe_0.__eq__(maybe_0)
    var_6 = var_5.get_or_else(var_1)
    int_0 = -1009
    maybe_3 = module_0.Maybe(int_0, bool_2)
    int_1 = -1626
    maybe_4 = module_0.Maybe(maybe_0, int_1)
    var_4.to_lazy()
