# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    float_0 = 577.6
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"3\x86\xfd\x1c/KQ"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    float_0 = 617.04263
    var_0 = maybe_0.get_or_else(float_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_lazy()
    bool_1 = var_2.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_3 = maybe_1.filter(var_1)
    var_4 = maybe_0.to_validation()
    var_5 = var_3.ap(maybe_1)
    bytes_1 = b"\x84d\x99\x9aBn\xe18\x85\xc4\x03!\xb4\xef\xa4H7;2"
    bytes_2 = b""
    maybe_2 = module_0.Maybe(bytes_2, bytes_1)
    dict_0 = {}
    var_6 = var_3.bind(dict_0)
    var_0.ap(var_1)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.ap(var_0)
    bool_1 = True
    str_0 = 'g]Ju%3m"yAI_!v\x0cH'
    tuple_0 = (var_1, list_0, bool_1, str_0)
    var_2 = var_0.filter(tuple_0)
    var_3 = var_1.to_box()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.ap(none_type_0)
    var_6 = var_1.map(var_1)
    maybe_1 = module_0.Maybe(tuple_0, var_3)


def test_case_4():
    bytes_0 = b"p"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    str_0 = "xY?dnB5V|LXMi$ANi"
    none_type_1 = None
    maybe_1 = module_0.Maybe(str_0, none_type_1)
    var_1 = maybe_1.to_validation()
    var_2 = var_0.filter(var_0)
    maybe_1.map(none_type_1)


def test_case_5():
    int_0 = 1
    bool_0 = True
    str_0 = "+FzC{_{\t^mU\\6!1$_6"
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.ap(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.ap(bool_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_7():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, list_0)
    var_1 = maybe_0.to_box()


def test_case_8():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1.filter(var_1)


def test_case_10():
    bytes_0 = b"\xc3\x99B\xd6\xfd\x0b\x17@=l\xe4 "
    bytes_1 = b"\xb7\x1c\xc4\x96#0\xac"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_1)
    var_0.ap(bytes_0)


def test_case_11():
    str_0 = "hH)){\nfQX"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(str_0, var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    maybe_3 = module_0.Maybe(maybe_2, maybe_2)
    var_1 = maybe_3.get_or_else(maybe_1)
    var_2 = var_1.to_either()


def test_case_12():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_box()
    var_1.to_box()


def test_case_13():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(bool_1)


def test_case_14():
    str_0 = "s J}"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_2.filter(maybe_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_0.get_or_else(var_0)
    maybe_2 = module_0.Maybe(none_type_0, var_4)
    bool_1 = True
    maybe_3 = module_0.Maybe(var_1, bool_1)


def test_case_16():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bytes_0 = b"\xfa\x86\xf9\x1c/KQ"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_box()
    module_1.object(*var_1)


def test_case_19():
    str_0 = "s J}"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_validation()
    var_0.filter(var_1)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.bind(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_3 = maybe_1.to_try()
    var_4 = maybe_0.get_or_else(var_0)
    maybe_2 = module_0.Maybe(none_type_0, var_4)
    bool_2 = True
    maybe_3 = module_0.Maybe(var_1, bool_2)


def test_case_22():
    bytes_0 = b"3\x86\xfd\x1c/KQ"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.to_box()
    module_1.object(**var_2)


def test_case_23():
    bytes_0 = b"3\x86\xfd\x1c/KQ"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    float_0 = 617.04263
    var_0 = maybe_0.get_or_else(float_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.bind(var_1)
    var_4 = var_3.filter(var_1)
    var_5 = maybe_0.to_validation()
    var_6 = var_4.ap(var_3)
    var_7 = var_3.to_box()
    var_8 = maybe_0.to_either()
    var_9 = var_4.to_either()
    bool_1 = maybe_0.__eq__(var_4)
    var_7.get_or_else(maybe_0)
