# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"JW\xa5Z[.\rz\xb5\xe9\xea#Q\xee"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bytes_0)
    var_1 = maybe_1.to_validation()
    bool_1 = var_1.__eq__(maybe_1)
    var_0.to_either()


def test_case_3():
    bool_0 = False
    int_0 = -1524
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.map(var_1)
    var_3 = var_1.to_validation()
    var_4 = maybe_0.to_try()
    var_5 = maybe_0.filter(maybe_0)
    var_6 = maybe_0.to_box()
    var_4.to_try()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_1)
    bool_1 = maybe_0.__eq__(none_type_1)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_2.get_or_else(maybe_1)
    maybe_1.map(var_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"fP"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(dict_0)
    bool_2 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_9():
    str_0 = "(Vc3kGz{|3#*mSHmr,K&"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_0.to_validation()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_either()
    maybe_1.filter(var_1)


def test_case_11():
    bool_0 = True
    bytes_0 = b"\xb6\xb8\xcd\xfbU\x11\xc0\xdd+\xb7\xaa\xa7\x13i"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_12():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bytes_0 = b"}r\xccvL"
    maybe_1 = module_0.Maybe(none_type_0, object_0)
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_2.to_try()
    maybe_3 = module_0.Maybe(object_0, none_type_0)
    bool_1 = maybe_3.__eq__(maybe_3)
    bool_2 = maybe_0.__eq__(bytes_0)
    var_2 = maybe_3.to_box()
    bool_3 = False
    var_3 = maybe_0.get_or_else(bool_3)
    var_0.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_1.to_try()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_lazy()


def test_case_15():
    str_0 = "\n    Data type for storage any type of function.\n    This function (and all his mappers) will be called only during calling fold method\n    "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_lazy()


def test_case_17():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.to_validation()


def test_case_18():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bytes_0 = b"}r\xccvL"
    maybe_1 = module_0.Maybe(none_type_0, object_0)
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_3 = module_0.Maybe(object_0, none_type_0)
    bool_1 = maybe_3.__eq__(maybe_3)
    maybe_3.ap(none_type_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(maybe_1)
    bool_1 = var_0.__eq__(maybe_0)
    var_2 = var_0.filter(var_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = var_1.ap(var_3)
    var_6 = maybe_0.bind(var_5)
    var_7 = var_2.to_validation()
    var_8 = var_0.map(var_0)
    var_9 = var_8.to_box()
    bool_0.filter(var_9)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_1)
    bool_1 = maybe_0.__eq__(none_type_1)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_box()
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_try()
    var_4.bind(var_3)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(maybe_1)
    bool_1 = var_0.__eq__(maybe_0)
    var_2 = var_0.filter(var_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = maybe_0.filter(maybe_1)
    var_5 = var_2.ap(var_1)
    bool_3 = maybe_1.__eq__(var_5)
    var_6 = maybe_0.to_either()
    var_7 = var_5.map(var_3)
    var_8 = var_4.to_either()
    var_9 = var_5.get_or_else(var_7)
    var_10 = maybe_1.to_box()
    var_11 = maybe_0.to_validation()
    var_12 = maybe_0.to_try()
    var_13 = var_4.to_lazy()
    maybe_2 = module_0.Maybe(var_2, var_12)
    var_14 = maybe_2.to_either()
