# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    complex_0 = -377.47408398907623 + 1150.25018j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(maybe_1)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_4():
    int_0 = -1197
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(int_0)
    var_3 = var_2.to_box()
    var_4 = var_2.to_try()
    var_5 = var_4.get_or_else(int_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = False
    var_6 = var_2.get_or_else(bool_1)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_7 = maybe_1.to_lazy()
    var_8 = maybe_2.to_try()
    var_9 = var_7.to_try()


def test_case_5():
    float_0 = 2343.745
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_1.to_try()
    maybe_1.map(var_1)


def test_case_6():
    int_0 = 201
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_box()
    var_4.to_lazy()


def test_case_7():
    bool_0 = False
    none_type_0 = None
    str_0 = "Y3%o\x0b4.?%xh0"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    str_0 = "K^EqeEE4Za}0kP6X$`"
    list_0 = [str_0, str_0]
    bytes_0 = b"$\xaczn3\xaf> \xe5\x1aY"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(list_0)


def test_case_9():
    int_0 = 5553
    tuple_0 = (int_0,)
    int_1 = 2330
    bytes_0 = b"\xbfU\xd22\xe9\x81\xda"
    tuple_1 = (tuple_0, int_1, int_1, bytes_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    str_0 = "\n        Evaluate function and memoize her output or return memoized value when function was evaluated.\n\n        :returns: result of function in Lazy\n        :rtype: A\n        "
    str_1 = "zVuh@ BzOrsJJk(y]@"
    var_0 = maybe_1.to_box()
    set_0 = {str_1, str_1, str_1}
    bool_1 = False
    maybe_2 = module_0.Maybe(set_0, bool_1)
    maybe_2.ap(str_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.get_or_else(maybe_0)
    var_3.filter(var_1)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_validation()
    maybe_0.filter(var_1)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    bool_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.ap(maybe_1)
    maybe_0.filter(var_0)


def test_case_16():
    float_0 = 1022.0
    int_0 = -130
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(float_0)


def test_case_17():
    object_0 = module_1.object()
    int_0 = -1298
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(object_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_try()
    var_0.filter(var_0)


def test_case_19():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = var_0.to_validation()
    maybe_0.filter(var_2)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(var_0)


def test_case_22():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    var_1 = maybe_0.get_or_else(object_0)
    bool_1 = var_1.__eq__(object_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(object_0, bool_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_validation()
    str_0 = "X"
    int_0 = -284
    var_5 = maybe_1.get_or_else(int_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_6 = maybe_0.ap(str_0)
    var_7 = maybe_0.filter(var_3)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = var_1.ap(var_0)
    maybe_0.filter(var_2)


def test_case_24():
    none_type_0 = None
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_2 = maybe_1.to_either()
    var_3 = var_0.to_lazy()
    maybe_2 = module_0.Maybe(none_type_0, var_1)
    bool_1 = maybe_1.__eq__(var_2)
    maybe_3 = module_0.Maybe(dict_0, var_2)
    var_4 = var_2.to_box()
    var_5 = maybe_0.ap(var_1)
    var_6 = maybe_0.map(var_3)
    var_7 = var_6.to_try()
    var_8 = var_6.to_lazy()
    var_9 = maybe_2.to_try()
    bool_2 = var_6.__eq__(var_5)
    var_10 = maybe_3.map(maybe_1)
    maybe_4 = module_0.Maybe(var_2, var_5)
    var_11 = maybe_2.to_lazy()
    maybe_5 = module_0.Maybe(var_6, maybe_4)
    var_12 = maybe_1.to_box()
    var_13 = maybe_1.to_either()
