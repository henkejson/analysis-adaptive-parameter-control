# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(none_type_0)


def test_case_3():
    bool_0 = True
    str_0 = "o[\r3.-5v[wuWv1^jF"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    bool_1 = maybe_0.__eq__(str_0)


def test_case_4():
    str_0 = "5y\"i?'pHXOo=.zg\r^\x0b-"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = False
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_0.filter(maybe_0)
    var_3 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_4 = maybe_1.ap(maybe_0)
    var_5 = var_2.to_lazy()
    var_0.get_or_else(var_5)


def test_case_5():
    complex_0 = 726.04 - 2366.933j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    maybe_2.map(var_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_1.ap(maybe_0)
    var_0.to_validation()


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_1.get_or_else(var_3)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    float_0 = 1488.733
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = True
    var_1 = var_0.ap(var_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.to_validation()
    var_4 = var_0.to_validation()
    var_5 = var_0.bind(var_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bytes_0 = b"}\xe04\x7f~\xf1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.bind(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_2.bind(bytes_0)
    var_4 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_5 = maybe_0.to_lazy()
    maybe_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_15():
    bytes_0 = b"\x05V\x8d\x164k\xa5\xfd@I\x84"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(bytes_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_try()
    bool_0 = var_3.__eq__(var_0)
    var_4 = var_0.to_try()
    bool_1 = var_1.__eq__(none_type_0)
    var_5 = maybe_0.to_either()
    bool_2 = var_1.__eq__(bytes_0)
    var_6 = var_1.get_or_else(var_4)
    var_7 = maybe_0.ap(bytes_0)
    var_8 = var_7.to_validation()
    var_9 = var_7.to_try()
    var_10 = var_9.bind(var_2)
    var_11 = var_1.filter(var_9)
    maybe_1 = module_0.Maybe(var_9, bytes_0)
    var_12 = var_1.to_either()
    var_4.ap(bytes_0)


def test_case_16():
    none_type_0 = None
    none_type_0.to_try()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_try()
    bool_1 = var_2.__eq__(var_3)
    var_5 = var_2.filter(maybe_0)
    var_6 = var_2.bind(bool_0)
    var_7 = var_2.bind(var_2)


def test_case_18():
    str_0 = "Maybe[U]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    str_1 = "All[value={}]"
    var_1 = maybe_0.to_either()
    none_type_0 = None
    bool_1 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(str_1, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.ap(maybe_0)
    var_4 = var_3.to_lazy()
    var_5 = var_4.bind(var_1)
    bool_2 = var_5.__eq__(var_1)
    var_6 = var_2.to_either()
    var_7 = maybe_0.to_lazy()
    var_8 = maybe_1.to_box()
    var_6.ap(bool_0)


def test_case_19():
    str_0 = "'A\x0b+eX|(rS]Vw"
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(maybe_0, str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_either()
    object_0 = module_1.object()
    var_3 = module_1.object()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2.to_either()
