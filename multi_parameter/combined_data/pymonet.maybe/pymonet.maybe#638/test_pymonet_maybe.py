# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -43
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -1960.37
    set_0 = {float_0, float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_validation()
    tuple_0 = (maybe_0, bool_0, maybe_0)
    bool_1 = maybe_0.__eq__(float_0)
    var_1.get_or_else(tuple_0)


def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_2.to_validation()


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_5():
    complex_0 = 1947.458439 - 1011j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_try()
    var_2.to_either()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    str_0 = "s~=}gm\\?uRtJjv"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_lazy()
    str_1 = "@B"
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(str_1)


def test_case_8():
    bool_0 = False
    bytes_0 = b'\xcc\xe2\x80\xfdO\xc7\xb5\xad\xf2\x1e"k\xdd\xc4<\xb6v'
    int_0 = -43
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.bind(bool_0)


def test_case_9():
    int_0 = 1254
    list_0 = [int_0, int_0, int_0, int_0]
    list_1 = [list_0, int_0]
    bytes_0 = b"E"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.filter(list_1)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.ap(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()


def test_case_12():
    bytes_0 = b"F"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    tuple_0 = (bytes_0,)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_1.to_validation()


def test_case_13():
    bytes_0 = b")\x82\xc4f\x80L\xde\xeb\xff \x87af5duT\xa5\xe6"
    bool_0 = False
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.filter(bytes_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_1.to_box()
    var_3.get_or_else(var_2)


def test_case_15():
    bool_0 = False
    int_0 = 1042
    tuple_0 = (bool_0, int_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = var_0.ap(var_0)
    var_2 = var_0.filter(var_0)
    maybe_1.filter(bool_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.to_either()
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = var_0.ap(var_0)
    var_3 = var_1.filter(var_1)
    maybe_1.filter(bool_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_2 = var_1.__eq__(bool_0)
    var_1.to_try()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(maybe_0)
    var_4 = var_1.map(var_1)
    var_5 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(var_1)
    var_6 = var_5.to_either()
    var_7 = var_3.to_lazy()
    bool_2 = maybe_0.__eq__(var_7)
    var_8 = var_3.bind(var_3)
    var_9 = var_3.ap(var_1)
    var_10 = var_9.to_try()
    var_11 = maybe_0.filter(var_10)
    var_12 = var_11.to_validation()
    var_13 = var_1.to_try()
    var_14 = var_0.bind(var_7)
    maybe_1 = module_0.Maybe(var_6, var_4)
    bool_3 = maybe_1.__eq__(var_14)
    var_15 = var_4.map(var_1)
    var_16 = maybe_0.to_box()
    var_17 = var_4.to_validation()
    var_18 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_9, bool_3)
    maybe_2.filter(var_17)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_3 = maybe_1.to_lazy()
    var_0.filter(maybe_0)
