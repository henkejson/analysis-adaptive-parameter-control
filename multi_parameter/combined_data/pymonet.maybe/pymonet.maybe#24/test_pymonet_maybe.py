# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 17
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.bind(var_0)
    bool_3 = maybe_1.__eq__(bool_0)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_0.get_or_else(bool_1)
    var_4.get_or_else(var_3)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    bytes_0 = b"\x95\x96Zsi\xe9\x02`\x99CY\xbf\x16Ni}\xae\xc9"
    none_type_1 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    bool_1 = maybe_1.__eq__(bool_0)
    var_2 = maybe_1.to_either()


def test_case_4():
    float_0 = 1387.5
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(float_0)
    var_2 = maybe_0.ap(float_0)
    var_3 = var_2.map(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_4 = maybe_1.filter(var_2)
    var_5 = maybe_1.to_validation()
    var_6 = var_0.map(var_5)
    maybe_2 = module_0.Maybe(var_2, var_6)
    bool_1 = var_3.__eq__(var_3)
    var_7 = maybe_2.to_either()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(var_2)


def test_case_7():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.bind(list_0)


def test_case_8():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0}
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    str_0 = "\r!,+%O#BS:~@"
    maybe_1 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_2.to_validation()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0}
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    str_0 = "\r!,+%O#BS:~@"
    maybe_1 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_try()
    var_3.to_validation()


def test_case_11():
    complex_0 = -993.8 - 2647.35j
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(complex_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(var_1)


def test_case_12():
    none_type_0 = None
    bytes_0 = b"y\xe6#C\xcbM\x91\x7f>\xf4\xef.\xef\xc1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -1161
    maybe_0 = module_0.Maybe(dict_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    var_2.filter(none_type_0)


def test_case_13():
    bytes_0 = b"|\x80\xcb\x11D"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_14():
    float_0 = 220.12
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    bytes_0 = b"\x1a\xa0\xa9\xb3^\x88\x99T\xe4aV\x02"
    tuple_0 = (bytes_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_17():
    float_0 = 1387.5
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(float_0)
    var_2 = var_1.map(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_3 = maybe_1.filter(var_0)
    var_4 = maybe_1.to_validation()
    var_5 = var_0.map(var_4)
    maybe_2 = module_0.Maybe(var_2, var_5)
    bool_1 = var_2.__eq__(var_2)
    var_6 = maybe_2.to_either()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    maybe_1.bind(var_0)


def test_case_19():
    float_0 = 1387.5
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.filter(maybe_1)
    bool_1 = var_0.__eq__(maybe_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(float_0, bool_2)
    maybe_2.filter(bool_0)
