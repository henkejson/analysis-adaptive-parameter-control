# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    bool_1 = var_1.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    int_0 = -624
    var_2 = maybe_0.filter(bool_0)
    maybe_1.filter(int_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.map(bool_1)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_validation()
    var_4 = var_3.to_try()
    var_3.to_validation()


def test_case_4():
    bytes_0 = b"D_\x9f\x81!\x95\xecx\x80J|;\xfa\x1a*\x17"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_2.map(bytes_0)
    none_type_0 = None
    var_4 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    int_0 = -624
    var_1 = maybe_0.filter(bool_0)
    maybe_1.filter(int_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    int_0 = -624
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(int_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.get_or_else(maybe_1)
    var_2 = var_0.map(var_1)
    var_3 = maybe_0.map(bool_1)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.to_validation()
    var_6 = var_5.to_try()
    var_5.to_validation()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = none_type_0.__eq__(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_1.get_or_else(bool_0)
    maybe_1.filter(bool_0)


def test_case_10():
    str_0 = "xNC\tKC APzZjd"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_0.map(bool_1)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_validation()
    var_5 = var_2.get_or_else(var_3)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_4, bool_2)
    var_6 = var_1.to_lazy()
    var_7 = maybe_2.to_either()
    var_8 = var_3.map(bool_1)
    var_9 = maybe_2.to_try()
    var_3.to_validation()


def test_case_12():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_box()
    var_0.bind(tuple_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_0.map(var_0)
    var_4 = maybe_1.to_box()
    maybe_1.filter(var_4)


def test_case_14():
    list_0 = []
    bytes_0 = b"\x00\xc6I\x8c\xa5\xee\x80NN"
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bytes_0 = b'1\xb9\x9a"\xb5<C\xf94v\xef@y'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.filter(var_0)
    var_3 = var_0.map(var_0)
    var_4 = maybe_1.to_box()
    maybe_1.filter(var_4)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_0.ap(bool_0)


def test_case_19():
    str_0 = '[Qo"iKXp\\iGDQH MVJ6@'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    var_0 = maybe_1.to_try()
    var_0.ap(none_type_0)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.bind(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(none_type_0)


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_24():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = maybe_1.to_validation()
    bool_2 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_1.map(none_type_0)
