# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(bool_1)
    none_type_0 = None
    int_0 = 3107
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_1 = maybe_1.map(bool_1)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_1.map(var_2)
    var_4 = var_1.ap(list_0)
    var_5 = var_2.map(var_4)
    bool_3 = var_1.__eq__(var_5)
    var_6 = maybe_0.to_validation()
    var_7 = var_2.ap(bool_0)
    maybe_0.ap(var_6)


def test_case_3():
    none_type_0 = None
    str_0 = "(wPH\\V Mvs"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.ap(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.ap(none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.map(maybe_1)
    maybe_2 = module_0.Maybe(maybe_1, var_1)
    bool_2 = maybe_2.__eq__(bool_0)
    var_1.to_lazy()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = var_1.bind(bool_0)


def test_case_7():
    none_type_0 = None
    int_0 = -218
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(var_0)
    var_0.get_or_else(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_2 = maybe_1.to_lazy()
    maybe_0.filter(bool_0)


def test_case_10():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    int_0 = 4449
    maybe_0 = module_0.Maybe(set_0, int_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_2.to_either()
    var_1 = maybe_2.to_either()
    var_2 = maybe_2.get_or_else(set_0)
    var_3 = maybe_2.to_either()


def test_case_11():
    int_0 = 484
    str_0 = "af^CkofZ w+yzlw2'PVE"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_1.ap(int_0)


def test_case_12():
    none_type_0 = None
    str_0 = "(wPH\\V Mvs"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    var_3 = var_2.ap(none_type_0)
    var_0.bind(var_0)


def test_case_13():
    float_0 = 1079.99334
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_14():
    bytes_0 = b"\x89\x17v\x05u"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = var_0.__eq__(bytes_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_try()
    var_2.to_validation()


def test_case_15():
    bytes_0 = b"\x13\xd8\xd3f\x18A\rw\xcd}\xf9\xf6\xec"
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.filter(var_0)
    str_0 = "w\\"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.to_validation()
    var_3.to_validation()


def test_case_16():
    float_0 = 178.247
    set_0 = {float_0, float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(var_2, float_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_2.to_lazy()
    var_5 = maybe_1.map(bool_0)
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_try()
    bool_1 = maybe_0.__eq__(var_7)
    bool_2 = True
    maybe_2 = module_0.Maybe(var_1, bool_2)
    var_8 = var_3.map(var_6)
    bool_3 = var_5.__eq__(maybe_1)
    var_8.to_validation()


def test_case_17():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_3 = True
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_1 = maybe_2.ap(maybe_2)
    var_2 = maybe_2.map(bool_0)
    var_3 = var_2.filter(maybe_1)
    maybe_0.filter(bool_0)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = var_0.__eq__(bool_1)
    none_type_0 = None
    int_0 = 3107
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_1 = maybe_1.map(bool_1)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = var_2.filter(bool_0)
    var_4 = var_1.ap(list_0)
    var_5 = var_0.ap(none_type_0)
    var_6 = maybe_0.to_lazy()
    var_7 = var_3.to_try()
    var_8 = var_6.to_box()
    var_9 = var_0.to_box()
    var_10 = var_5.bind(var_3)
    var_9.get_or_else(maybe_0)
