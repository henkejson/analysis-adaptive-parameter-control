# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\x0eJ\xa4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    generic_0 = module_1.Generic()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    int_0 = 132
    maybe_2 = module_0.Maybe(int_0, maybe_1)
    var_0 = maybe_0.to_either()
    bool_3 = maybe_0.__eq__(maybe_0)


def test_case_3():
    generic_0 = module_1.Generic()
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_3, bool_3)


def test_case_4():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_1.filter(maybe_0)


def test_case_5():
    none_type_0 = None
    str_0 = "pDUB!b&N"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    bool_3 = maybe_1.__eq__(bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_either()
    bool_4 = maybe_0.__eq__(none_type_0)
    bool_5 = maybe_1.__eq__(maybe_1)
    int_0 = 1239
    var_2 = maybe_0.ap(bool_0)
    bool_6 = False
    maybe_2 = module_0.Maybe(bool_6, bool_3)
    var_3 = maybe_0.filter(int_0)
    var_4 = maybe_2.to_validation()
    var_5 = maybe_2.to_either()
    var_6 = var_3.to_either()
    var_7 = var_3.map(var_4)
    var_8 = var_7.map(var_2)
    var_9 = var_2.bind(var_4)
    var_10 = var_9.to_validation()
    var_11 = var_10.to_box()
    var_12 = maybe_2.to_box()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_1.filter(maybe_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_0.ap(bool_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.filter(maybe_0)


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.ap(var_0)


def test_case_13():
    int_0 = -1918
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(int_0, set_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.bind(var_1)
    var_3.filter(int_0)


def test_case_14():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_either()
    var_0.filter(bool_0)


def test_case_15():
    int_0 = 235
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(list_0)


def test_case_17():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(generic_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.ap(bool_1)
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = var_1.to_either()
    var_5 = maybe_1.map(none_type_0)
    var_6 = maybe_1.ap(var_5)
    bool_3 = var_6.__eq__(var_5)
    complex_0 = 2796.1 + 3713.382j
    var_2.ap(complex_0)


def test_case_18():
    int_0 = 1812
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    str_0 = "Lazy[T, U]"
    complex_0 = -1672.4 + 290j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_try()
    maybe_1.filter(str_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    generic_0 = module_1.Generic()
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    bool_3 = maybe_0.__eq__(bool_1)
    var_0 = maybe_1.get_or_else(bool_0)
    var_1 = maybe_0.map(var_0)
    bool_4 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    bool_5 = maybe_0.__eq__(var_2)
    bool_6 = maybe_0.__eq__(var_0)
    var_3 = maybe_0.ap(var_1)
    var_4 = var_1.to_validation()
    var_5 = var_1.to_either()
    var_6 = maybe_0.get_or_else(var_2)
    var_7 = var_6.to_either()
    var_7.map(var_3)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    none_type_1 = None
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    bool_1 = False
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_2 = maybe_1.to_try()
    var_2.filter(none_type_1)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_1.__eq__(bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = maybe_1.__eq__(none_type_0)
    maybe_1.ap(bool_1)
