# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "0F\x0cO65YM"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_0.bind(var_0)


def test_case_3():
    bool_0 = True
    int_0 = -609
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_box()
    var_2.filter(var_1)


def test_case_4():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(generic_0)


def test_case_5():
    str_0 = "0F\x0cO65YM"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_1.bind(var_1)
    var_3 = maybe_0.filter(var_0)
    var_4 = var_3.to_lazy()


def test_case_6():
    object_0 = module_2.object()
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_7():
    str_0 = "0F\x0cO65YM"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_box()
    var_1.bind(var_1)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    bool_2 = False
    maybe_0.filter(bool_2)


def test_case_10():
    float_0 = -3954.42705
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_box()
    var_4 = maybe_0.get_or_else(maybe_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    var_0.bind(none_type_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\xb4L>\xd1\xbb\xd7t\x9d \xe6pk,\x89\x19\xf7b\x14\x17\x08"
    str_0 = "3lzpQ\r"
    bool_2 = True
    maybe_1 = module_0.Maybe(str_0, bool_2)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(bytes_0)
    var_3 = var_2.to_try()
    var_3.to_lazy()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()


def test_case_14():
    bool_0 = True
    bool_1 = False
    int_0 = 2275
    bool_2 = False
    maybe_0 = module_0.Maybe(int_0, bool_2)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(bool_1)
    var_3 = var_2.to_try()
    var_4 = var_2.to_try()
    var_4.to_either()


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.to_box()
    var_3.ap(bool_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bytes_0 = b"g\xd6\xee="
    bytes_1 = b"\xf9\x8c\x12\xc8\xdd\xf9t*\xa4\xf3K\xc2C"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.ap(bytes_0)


def test_case_19():
    int_0 = 1136
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = maybe_0.to_validation()
    generic_0 = module_1.Generic()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1.map(maybe_0)


def test_case_20():
    bytes_0 = b"\xbd\xf0<\x05O\xaf\x9f(Z\xfdfu"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_2.map(maybe_1)
    var_2 = var_1.to_box()
    bool_1 = maybe_2.__eq__(maybe_1)
    var_3 = var_1.get_or_else(none_type_1)
    bool_2 = True
    var_4 = var_1.ap(none_type_0)
    maybe_3 = module_0.Maybe(bool_2, var_4)
    var_5 = var_1.to_try()
    var_3.to_box()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0.to_box()
