# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"\x82\xbb\xa3\x083~D:"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.filter(var_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.filter(var_3)


def test_case_3():
    int_0 = 1
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    none_type_0.filter(int_0)


def test_case_4():
    str_0 = "4ecsBJ"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_lazy()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    var_0 = maybe_2.bind(bool_0)
    var_1 = maybe_2.ap(none_type_0)
    var_2 = var_1.filter(var_1)
    generic_1 = module_1.Generic()
    maybe_1.filter(var_1)


def test_case_7():
    generic_0 = module_1.Generic()
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.map(var_1)
    var_3 = var_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_4 = maybe_0.ap(var_1)
    var_5 = maybe_0.filter(bool_0)
    var_6 = module_0.Maybe(bool_1, var_1)
    float_0 = -221.0
    maybe_1 = module_0.Maybe(var_1, float_0)
    var_7 = var_5.to_lazy()


def test_case_9():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(list_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(var_1)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    maybe_0.filter(var_2)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_13():
    bytes_0 = b"}oK\x95\x13FR\x04B\xa1\xea\x00\xc7a"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_box()


def test_case_14():
    bytes_0 = b"\x82\xbb\xa3\x083~D:"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_2.get_or_else(none_type_0)


def test_case_16():
    int_0 = -6147
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    int_1 = 1
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.to_box()
    var_0.filter(int_1)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    none_type_0 = None
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    var_3 = var_0.filter(var_0)
    var_4 = var_3.to_validation()
    var_5 = var_4.to_lazy()
    var_5.to_lazy()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = var_1.map(var_2)


def test_case_20():
    none_type_0 = None
    str_0 = "0Pl38\t-~.{<^emXR\x0b}|7"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.get_or_else(str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_validation()
    none_type_1 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()


def test_case_22():
    bytes_0 = b"\xc1\xcd%)H\xbb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    module_2.object(*var_1, **var_1)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = var_1.to_validation()


def test_case_24():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    none_type_0 = None
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_3 = var_1.map(var_1)
    bool_1 = var_0.__eq__(maybe_1)
    var_4 = var_3.ap(var_2)
    var_2.filter(var_4)


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.map(none_type_0)
    var_4 = var_3.ap(none_type_0)
    bool_0 = var_4.__eq__(var_3)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_5 = maybe_1.to_validation()
    maybe_1.ap(none_type_0)
