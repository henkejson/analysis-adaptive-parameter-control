# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = 4532
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    bool_3 = var_1.__eq__(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.bind(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_6 = maybe_1.to_either()
    var_7 = var_1.ap(var_1)
    var_8 = maybe_1.filter(var_6)
    var_9 = var_8.map(var_7)
    var_10 = var_8.to_either()
    var_3.to_validation()


def test_case_3():
    str_0 = "Q^Q;VAS>.w\x0c"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    list_0 = [var_0, var_0, none_type_0, var_0]
    bool_0 = maybe_0.__eq__(list_0)
    var_1 = maybe_0.get_or_else(none_type_0)


def test_case_4():
    int_0 = -2599
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.get_or_else(int_0)
    var_2 = maybe_0.bind(var_1)
    maybe_1 = module_0.Maybe(int_0, none_type_0)


def test_case_5():
    complex_0 = 740.3 + 1770.1187j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_1.to_lazy()
    maybe_2 = module_0.Maybe(var_2, maybe_1)
    maybe_1.bind(var_1)


def test_case_6():
    generic_0 = module_1.Generic()
    str_0 = "Q4TLqqF\\FvL+"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.ap(str_0)
    maybe_1 = module_0.Maybe(str_0, var_1)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(var_2, var_1)
    var_3 = maybe_2.to_try()
    bool_0 = var_3.__eq__(generic_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    str_0 = " =mi\tbkTpS\n"
    object_0 = module_2.object()
    bool_1 = False
    maybe_1 = module_0.Maybe(object_0, bool_1)
    maybe_1.ap(str_0)


def test_case_8():
    int_0 = -1119
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    bytes_0 = b"B\xa6\xbf\x9b"
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(bytes_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    maybe_1.filter(var_0)


def test_case_10():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_1.to_either()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    bool_0 = True
    maybe_1.filter(bool_0)


def test_case_12():
    str_0 = "_F'"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()


def test_case_13():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_lazy()
    var_2.get_or_else(none_type_0)


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_16():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    list_0 = []
    list_1 = [list_0]
    maybe_0 = module_0.Maybe(list_1, list_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    str_0 = '>o\x0cTr"qS;#7'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_0.to_validation()
    var_5 = maybe_0.bind(var_4)
    float_0 = 1039.5153212662149
    var_6 = var_5.filter(float_0)
    var_7 = var_6.map(float_0)
    var_8 = maybe_0.bind(var_2)
    bool_0 = var_7.__eq__(var_1)
    var_9 = var_7.to_box()
    none_type_0 = None
    var_10 = var_6.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_11 = var_0.to_either()
    var_12 = maybe_1.to_validation()
    var_13 = var_6.ap(var_6)
    var_14 = maybe_0.to_try()
    var_9.get_or_else(float_0)


def test_case_19():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    bool_3 = var_1.__eq__(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.bind(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_6 = maybe_1.to_either()
    var_7 = var_1.ap(var_1)
    var_8 = maybe_1.filter(var_6)
    var_9 = var_8.map(var_7)
    var_10 = var_8.to_either()
    maybe_2 = module_0.Maybe(var_10, var_2)
    bool_4 = maybe_2.__eq__(var_7)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    maybe_1.map(var_1)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    maybe_0.map(var_0)
