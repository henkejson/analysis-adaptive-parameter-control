# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 2638
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.get_or_else(none_type_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_2.to_box()


def test_case_3():
    str_0 = "\n        Returns new ImmutableList with only this elements that passed\n        info argument returns True\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> bool\n        :returns: ImmutableList[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()
    bool_1 = maybe_0.__eq__(var_3)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_1.__eq__(var_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.filter(var_3)
    var_6 = maybe_1.to_validation()
    var_1.to_box()


def test_case_5():
    object_0 = module_1.object()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.map(object_0)


def test_case_6():
    dict_0 = {}
    bool_0 = True
    bool_1 = dict_0.__eq__(dict_0)
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(var_0)
    var_2 = var_1.map(bool_0)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.get_or_else(bool_0)
    var_6 = maybe_0.bind(var_0)
    var_7 = maybe_0.ap(dict_0)
    bool_2 = var_7.__eq__(var_0)
    var_8 = maybe_0.to_try()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = var_1.to_validation()
    var_4 = maybe_1.to_box()
    var_5 = var_2.ap(var_1)
    var_6 = maybe_1.to_try()
    var_7 = maybe_1.to_box()
    bool_2 = var_1.__eq__(maybe_1)


def test_case_9():
    generic_0 = module_2.Generic()
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.get_or_else(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_11():
    int_0 = 2638
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    var_1 = var_0.get_or_else(none_type_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.filter(var_4)
    var_6 = var_5.to_validation()
    bool_0 = var_4.__eq__(none_type_0)
    var_2.to_validation()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_13():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.ap(bool_1)


def test_case_15():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(list_1, bool_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    dict_0 = {}
    bool_0 = True
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_3.filter(var_0)


def test_case_17():
    str_0 = "\n        :returns: False\n        :rtype: Boolean\n        "
    tuple_0 = (str_0, str_0)
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, bool_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_18():
    bool_0 = True
    float_0 = 438.8312
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)


def test_case_19():
    bytes_0 = b"\xda\xc5\x98\xb9g'\x04\xacQ\xc4\x94"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_2.get_or_else(maybe_2)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.to_box()
    var_3 = var_1.get_or_else(var_1)
    bool_1 = maybe_2.__eq__(var_1)
    var_1.to_either()


def test_case_20():
    complex_0 = 821.922805 - 833.195745j
    list_0 = [complex_0, complex_0, complex_0]
    maybe_0 = module_0.Maybe(list_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_22():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_2)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = maybe_0.map(var_1)
    var_5 = var_0.get_or_else(bool_2)
    bool_3 = var_3.__eq__(bool_1)
    var_5.to_box()
