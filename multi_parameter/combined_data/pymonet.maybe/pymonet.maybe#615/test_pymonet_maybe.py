# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"%F\xa0\x9a\x90\x11\xd7C\x8f"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.map(bool_1)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(maybe_0)


def test_case_4():
    bool_0 = False
    bool_1 = True
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_5():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_6():
    complex_0 = 4567.11124 - 237.78j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_2.filter(var_2)


def test_case_7():
    bool_0 = False
    bytes_0 = b"\x7f\x10Y\xeb^"
    bool_1 = False
    bool_2 = True
    tuple_0 = (bytes_0, bool_1, bool_2)
    maybe_0 = module_0.Maybe(tuple_0, bool_2)
    var_0 = maybe_0.filter(bool_0)


def test_case_8():
    int_0 = -687
    float_0 = 2504.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.filter(int_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\n3J?\x00im?n\x9a\xc8]\xa4"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_10():
    bytes_0 = b"\t\xaa\xf2\r\x04hos\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.get_or_else(maybe_0)
    maybe_1.filter(var_1)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_box()
    bool_1 = var_0.__eq__(bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_2.to_validation()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_13():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bytes_0 = b"\x0fD\x95"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.to_lazy()


def test_case_14():
    bytes_0 = b"\t\xaa\xf2\r\x04hos\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_1.get_or_else(bool_0)
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    dict_0 = {}
    maybe_2 = module_0.Maybe(dict_0, var_0)
    bool_1 = var_0.__eq__(bool_0)
    var_4 = maybe_0.map(var_0)
    var_5 = maybe_1.ap(bool_0)
    var_6 = var_1.to_try()
    var_7 = var_1.to_either()


def test_case_16():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = var_1.ap(var_0)
    var_3 = var_0.to_lazy()
    var_4 = var_1.bind(var_3)
    maybe_1 = module_0.Maybe(var_4, var_0)
    var_5 = var_1.to_either()
    var_6 = var_5.to_validation()
    var_7 = var_3.to_try()
    var_8 = maybe_0.to_box()
    var_6.filter(var_5)


def test_case_19():
    bytes_0 = b"\t\xaa\xf2\r\x04hos\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.get_or_else(maybe_0)
    var_3 = var_1.to_validation()
    none_type_0 = None
    maybe_1.filter(none_type_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(var_0)
    var_0.to_lazy()


def test_case_21():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    set_0 = {bool_1}
    tuple_0 = (set_0,)
    maybe_1 = module_0.Maybe(bool_1, tuple_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    maybe_2.ap(maybe_0)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.ap(none_type_0)
    var_4 = var_3.to_lazy()
    var_5 = var_2.to_try()
    maybe_1 = module_0.Maybe(maybe_0, var_3)
    bool_1 = var_2.__eq__(var_3)
    var_6 = var_1.to_try()
    var_6.to_try()


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)
