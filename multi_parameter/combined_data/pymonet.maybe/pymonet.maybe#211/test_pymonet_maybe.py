# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)


def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    str_0 = "r*K$q8qx gzGZEA1M#4|"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(var_0)
    var_3 = var_1.map(list_0)


def test_case_4():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_5():
    float_0 = 384.67642
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_1 = var_0.map(float_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.ap(bool_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_4 = var_3.bind(var_3)
    var_5 = maybe_0.to_box()
    str_0 = "6u$'sC'\tdz;'nYV;"
    var_6 = maybe_0.to_try()
    list_0 = [maybe_0, str_0]
    var_7 = maybe_0.to_box()
    var_8 = var_2.get_or_else(list_0)


def test_case_6():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(int_0)


def test_case_7():
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    list_0 = [var_0, var_0, dict_0]
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(list_0)
    var_3.to_validation()


def test_case_8():
    bytes_0 = b"\x1023\xff\x96`e\xa2h\x1d.<"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bytes_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(maybe_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    bytes_0 = b"\x8e\xa6\x96:\x9c\x17\x03\x9e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bytes_0)
    var_2 = var_0.to_either()
    var_1.map(var_1)


def test_case_12():
    bytes_0 = b"\x1023\xff\x96`e\xa2h\x1d.<"
    int_0 = -2258
    bool_0 = True
    bool_1 = bool_0.__eq__(bytes_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.filter(int_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_1)


def test_case_13():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(var_0)


def test_case_14():
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_1.to_box()
    var_2.to_box()


def test_case_15():
    none_type_0 = None
    int_0 = 771
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.to_box()
    var_4 = var_3.to_either()
    var_3.get_or_else(bool_0)


def test_case_17():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    maybe_1.filter(var_1)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_0 = True
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.to_try()
    var_3.to_validation()


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_2 = var_1.to_try()
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_0.get_or_else(var_2)
    var_2.to_box()


def test_case_22():
    bytes_0 = b"\x1023\xff\x96`e\xa2h\x1d.<"
    int_0 = -2258
    complex_0 = -190.786 + 436.69404j
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.ap(bool_1)
    var_2 = maybe_0.filter(complex_0)
    var_3 = var_2.to_validation()
    var_4 = maybe_0.map(var_0)
    var_5 = var_4.map(int_0)
    var_6 = var_4.map(var_1)
    var_7 = var_6.map(var_1)
    var_8 = var_1.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_9 = maybe_1.to_either()
    var_10 = maybe_1.ap(none_type_0)
    var_11 = var_2.filter(var_0)
    var_12 = maybe_1.to_either()
    var_13 = var_4.to_try()
    bool_3 = maybe_0.__eq__(var_0)


def test_case_23():
    int_0 = -2258
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(int_0)
