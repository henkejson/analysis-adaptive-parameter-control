# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.bind(bool_0)
    bool_2 = var_1.__eq__(maybe_0)
    int_0 = -240
    var_0.filter(int_0)


def test_case_3():
    bool_0 = True
    str_0 = "*g1H$66,+U`VQ5/.j>3H"
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = maybe_0.map(var_2)
    var_4 = maybe_0.filter(none_type_0)
    var_5 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(str_0)
    bool_2 = var_0.__eq__(maybe_0)
    var_6 = maybe_0.to_either()
    var_7 = var_1.to_try()
    var_5.get_or_else(str_0)


def test_case_4():
    bool_0 = False
    bool_1 = False
    bool_2 = True
    list_0 = [bool_2]
    maybe_0 = module_0.Maybe(list_0, bool_2)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.map(bool_1)
    var_4 = var_3.map(bool_0)
    var_5 = var_3.to_try()


def test_case_5():
    float_0 = 588.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b"t\x01R\xd4\x0c4\xbe=\xc4\xdb\xb0F\xa6\x90\xf2\x80\xcc"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "Y,\\jxk"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = var_1.get_or_else(dict_0)
    var_1.ap(var_2)


def test_case_7():
    str_0 = "d,Y(]sLs"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    bool_2 = False
    maybe_0.bind(bool_2)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xb6\xa5V\x18"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.ap(maybe_1)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.bind(bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_5 = var_2.map(var_1)
    var_6 = maybe_1.to_box()
    var_7 = var_1.to_lazy()
    var_8 = var_4.ap(var_7)
    var_9 = var_5.ap(bool_1)


def test_case_9():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(int_0)


def test_case_10():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    float_0 = 1070.835
    maybe_1 = module_0.Maybe(none_type_0, float_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.map(float_0)
    var_3 = var_1.bind(bool_0)
    var_4 = var_3.filter(float_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_5 = maybe_1.to_validation()
    var_6 = maybe_2.to_try()
    var_7 = var_6.get_or_else(maybe_2)
    maybe_2.filter(var_6)


def test_case_12():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    maybe_0.filter(tuple_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.map(tuple_0)
    var_1 = var_0.to_lazy()
    var_1.get_or_else(tuple_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_16():
    bytes_0 = b"\xf8\xf4\xda\xb3\x03\x81\xe5M"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_3.to_either()


def test_case_18():
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    tuple_0 = (maybe_0, maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    bool_0 = False
    bool_1 = maybe_0.__eq__(var_2)
    none_type_0 = None
    var_3 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_4 = maybe_0.map(var_3)
    var_5 = maybe_1.to_lazy()
    var_6 = var_5.to_try()
    var_7 = maybe_0.bind(var_3)
    bool_3 = var_6.__eq__(var_5)
    var_8 = maybe_0.to_validation()
    var_6.to_try()


def test_case_19():
    float_0 = 588.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_1.map(float_0)
    var_2 = var_0.to_lazy()
    var_3 = var_1.to_lazy()
    var_4 = var_3.to_try()
    var_0.bind(maybe_1)
