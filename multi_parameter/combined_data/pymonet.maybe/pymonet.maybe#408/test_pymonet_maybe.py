# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 1008
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.map(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bytes_0 = b"\xcb}8b\x98\xe0a\x02&p,\x94\xa4\xbc\xfc\x90\xb4'\xe4"
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.map(bytes_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(bool_1)
    var_1 = maybe_1.map(none_type_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(maybe_1, var_1)
    var_2 = maybe_2.to_try()
    var_3 = var_0.to_either()
    maybe_3 = module_0.Maybe(maybe_2, var_1)
    var_4 = maybe_1.ap(maybe_0)
    var_5 = var_4.filter(bool_1)
    var_6 = var_5.to_lazy()
    var_7 = var_0.filter(var_0)
    var_8 = var_7.get_or_else(maybe_0)
    var_9 = maybe_1.to_validation()
    var_10 = var_6.bind(bool_2)
    var_11 = maybe_3.bind(bool_2)
    bool_3 = True
    var_12 = maybe_3.bind(bool_3)
    var_13 = var_0.ap(var_8)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    float_0 = -155.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.map(none_type_0)
    var_1.to_either()


def test_case_8():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    maybe_0.ap(var_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(maybe_1, var_1)
    var_4 = var_0.to_box()
    var_5 = maybe_1.ap(none_type_0)
    var_6 = maybe_0.to_try()
    var_6.to_either()


def test_case_10():
    complex_0 = 709.961158 + 2824.13j
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(complex_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    maybe_0.map(bool_0)


def test_case_12():
    int_0 = -143
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    maybe_0.filter(var_1)


def test_case_13():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(int_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_validation()


def test_case_15():
    bool_0 = True
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(bool_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.to_lazy()
    maybe_0.map(none_type_0)


def test_case_17():
    bytes_0 = b"\x7f@\xdfa\x19\xfd?\xf3p\\\xe0`\x05\x8e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = True
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.to_try()
    maybe_0.bind(var_1)


def test_case_19():
    str_0 = "Allpc$-XTJL!6he"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(str_0)


def test_case_20():
    int_0 = -691
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_either()
    var_4 = var_3.to_validation()
    var_5 = maybe_0.filter(var_4)
    var_6 = var_3.to_lazy()
    var_1.get_or_else(var_5)


def test_case_21():
    float_0 = 2618.793971
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, float_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_1.ap(var_0)
    bool_2 = var_0.__eq__(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_2.ap(float_0)
    var_2.to_either()


def test_case_22():
    str_0 = "y\n92r>"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    int_0 = -143
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_2 = maybe_1.to_box()
    bool_0 = maybe_1.__eq__(var_0)
    maybe_1.filter(maybe_0)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.filter(var_1)
    bool_2 = maybe_1.__eq__(var_3)
    var_4 = maybe_0.to_either()
    var_5 = var_1.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    maybe_0.filter(var_3)
