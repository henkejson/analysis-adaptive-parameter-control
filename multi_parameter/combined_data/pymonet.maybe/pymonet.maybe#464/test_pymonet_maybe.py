# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "M@+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    bool_1 = var_2.__eq__(var_2)
    bool_0.to_box()


def test_case_3():
    str_0 = "M+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_try()
    none_type_0 = None
    var_4 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(var_1, var_4)
    maybe_1.filter(var_3)


def test_case_4():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_5():
    bytes_0 = b"\xea2\x17\xdf\x90\xef}\x16\xe7t"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    float_0 = -2204.0
    tuple_0 = (bytes_0, set_0, float_0)
    list_0 = [tuple_0]
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_3 = maybe_0.to_either()


def test_case_6():
    str_0 = "RQ\r8"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_7():
    str_0 = "M@+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    int_0 = 1927
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_2.get_or_else(int_0)
    var_2 = maybe_2.to_try()
    var_3 = maybe_2.ap(var_2)
    var_4 = maybe_1.to_either()
    var_5 = var_3.filter(var_4)
    var_6 = maybe_1.to_box()


def test_case_8():
    str_0 = '=^cAt"+G)4'
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(str_0)


def test_case_9():
    str_0 = "M+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    none_type_0 = None
    var_2 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_2)
    maybe_1.filter(var_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_12():
    int_0 = 2341
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_14():
    str_0 = "M+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    none_type_0 = None
    var_3 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_3)
    maybe_1.filter(var_2)


def test_case_15():
    int_0 = -1122
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(int_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    str_0 = "JTg_[}GGs"
    var_0.map(str_0)


def test_case_19():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(tuple_0)


def test_case_20():
    str_0 = "M@+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    int_0 = 1927
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_2.get_or_else(int_0)
    var_3 = maybe_2.to_try()
    var_4 = maybe_2.ap(var_3)
    var_5 = maybe_1.to_either()
    var_6 = var_4.filter(var_5)
    var_7 = maybe_1.to_box()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(var_0)


def test_case_22():
    str_0 = "M@+&klj@%"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(maybe_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_2 = var_1.to_try()
    var_2.ap(bool_0)
