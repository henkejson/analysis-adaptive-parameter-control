# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xd7\xd4;\xfd\xc8l\xd8\x1c<\xdb\x9a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    str_0 = 'C-OMjv"R}J'
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_0)
    var_3 = var_0.to_box()
    var_4 = var_2.map(bool_0)
    var_5 = var_2.map(var_0)
    var_6 = var_0.ap(var_0)
    var_7 = var_0.map(str_0)
    var_8 = var_4.ap(var_2)
    var_9 = var_2.bind(var_6)
    var_10 = var_8.to_box()
    var_11 = var_10.to_try()
    bool_2 = maybe_0.__eq__(var_6)
    var_12 = maybe_0.to_lazy()
    var_13 = var_10.to_either()
    var_10.map(var_1)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\xeb\x14\xb8l\xb0\xcd\x86B\xb1yud\xb7\xbf"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(none_type_0)
    bytes_1 = b"\x1c\x81X\xff\x8d:u.?\xb5\xb0\xc0\x0b"
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_either()
    bool_0 = True
    var_5 = maybe_0.map(bool_0)
    var_6 = var_0.map(var_5)
    maybe_1 = module_0.Maybe(bytes_1, bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    str_0 = 'C-OMjv"R}J'
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(var_0)
    bool_2 = True
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_1)
    var_1 = var_0.ap(bool_2)
    var_2 = var_0.filter(var_1)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.ap(var_2)
    var_5 = var_4.to_box()
    var_6 = var_0.to_validation()
    var_7 = var_3.to_validation()
    var_8 = var_3.to_either()
    var_9 = var_7.to_either()
    maybe_1.map(var_5)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_7():
    bytes_0 = b"`y\xd3mz\xe8\x84\xe9\xfc\x8e\x7f\xb8\xab"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_8():
    bytes_0 = b"\x85"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_lazy()
    bool_0 = maybe_0.__eq__(bytes_0)
    bool_1 = var_3.__eq__(var_3)
    var_4 = maybe_0.get_or_else(maybe_0)
    var_5 = var_3.bind(var_1)
    var_6 = var_2.to_try()
    var_7 = var_4.to_validation()
    bool_2 = maybe_0.__eq__(bytes_0)
    var_8 = maybe_0.to_lazy()
    var_9 = var_7.to_try()
    var_10 = var_4.to_lazy()
    none_type_0 = None
    bool_3 = var_9.__eq__(none_type_0)


def test_case_9():
    bool_0 = False
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(bool_0)


def test_case_10():
    none_type_0 = None
    int_0 = -1784
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.filter(none_type_0)


def test_case_11():
    str_0 = "aNJ4#'J"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    str_0 = "F%ov~{K5lZ"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    object_0 = module_1.object()
    maybe_2 = module_0.Maybe(object_0, object_0)
    var_2 = maybe_2.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.ap(none_type_1)
    var_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_try()
    var_3 = var_0.to_try()
    var_3.to_either()


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.to_try()
    var_5 = var_2.to_validation()
    int_0 = -67
    var_6 = var_4.get_or_else(int_0)
    var_3.map(bool_0)


def test_case_19():
    none_type_0 = None
    str_0 = 'C-OMjv"R}J'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_2.to_try()
    var_4 = var_3.filter(var_3)
    var_3.to_box()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)
