# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "\n_q(PH>@e\r3~bRP)elaF"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -1191.7063
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.ap(float_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()


def test_case_3():
    str_0 = ""
    none_type_0 = None
    var_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = var_0.__eq__(str_0)


def test_case_4():
    float_0 = -1191.7063
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    var_0.ap(var_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = "`[%-OKLj{Fq"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.bind(var_1)
    var_3 = var_1.to_either()
    var_4 = var_1.to_box()
    var_5 = maybe_0.to_box()
    var_5.ap(var_5)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_try()
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(set_0)
    var_1 = maybe_0.to_box()


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_2.__eq__(bool_0)
    var_3 = maybe_2.to_try()
    maybe_0.filter(var_0)


def test_case_12():
    bytes_0 = b"\xa5\xd6\x968"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_0.to_validation()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_0.ap(var_1)


def test_case_14():
    str_0 = "4ZA.<"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    set_0 = set()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(bool_0)
    var_2 = var_1.to_try()
    var_3 = var_2.bind(bool_0)
    maybe_1 = module_0.Maybe(var_3, var_3)
    var_4 = maybe_1.ap(none_type_0)
    var_5 = var_4.to_lazy()
    maybe_2 = module_0.Maybe(set_0, bool_0)
    var_6 = maybe_2.get_or_else(maybe_2)
    bool_1 = maybe_2.__eq__(set_0)
    var_7 = maybe_2.to_box()


def test_case_16():
    bytes_0 = b"\x1d\xfd\xf4\xce{\xa6\xb9\xd69Q4\xb8\xe9\\"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bytes_0 = b"\xa5\xd6\x968\xc1B"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(maybe_0)


def test_case_19():
    bytes_0 = b","
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(bytes_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.bind(bytes_0)
    var_0.to_lazy()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_box()


def test_case_21():
    str_0 = "N"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = var_0.bind(var_2)
    bool_0 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    bool_1 = var_3.__eq__(maybe_1)
    var_4 = var_3.to_box()
    var_5 = var_1.to_try()
    var_6 = var_3.filter(var_4)
    var_7 = var_6.map(var_1)
    var_8 = maybe_1.ap(var_0)
    bool_2 = var_6.__eq__(maybe_0)


def test_case_22():
    str_0 = "N"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.ap(str_0)
    var_2 = var_1.map(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(none_type_0, maybe_0)
    var_4 = var_3.bind(maybe_2)
    var_5 = maybe_2.ap(var_4)
    var_6 = var_5.bind(var_0)
    var_7 = var_6.map(var_3)
    var_8 = var_0.to_box()
    var_9 = var_3.get_or_else(str_0)
    var_10 = var_0.filter(var_0)
    var_11 = var_5.to_validation()
    var_12 = var_8.to_validation()
    var_13 = maybe_1.to_try()
