# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()


def test_case_3():
    str_0 = "Ka?"
    int_0 = -646
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)


def test_case_4():
    str_0 = "BmT^3P\\*V7F4{dNS>KTH"
    set_0 = {str_0, str_0}
    maybe_0 = module_0.Maybe(str_0, set_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_2 = maybe_0.bind(str_0)


def test_case_5():
    bytes_0 = b"\x03\xeefr\xd6\x98\xb2\t\xcd\xf0\x86\xc5\xf9Q"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_either()
    maybe_1.ap(maybe_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    var_0 = maybe_2.ap(maybe_0)
    maybe_3 = module_0.Maybe(maybe_2, none_type_0)
    var_1 = maybe_3.to_box()
    maybe_3.bind(var_1)


def test_case_9():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.filter(var_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.map(maybe_1)
    var_1 = var_0.filter(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(none_type_0)
    bool_2 = var_0.__eq__(bool_0)
    maybe_1 = var_0.get_or_else(bool_1)
    maybe_1.to_lazy()


def test_case_12():
    none_type_0 = None
    complex_0 = 28 - 377.8944j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_either()
    bool_0 = var_2.__eq__(complex_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_1.get_or_else(maybe_0)
    var_4 = var_3.to_try()
    maybe_1.filter(var_4)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = 2285.0
    str_0 = "Ze"
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(float_0, str_0)
    bool_0 = maybe_1.__eq__(str_0)
    var_1 = maybe_1.to_lazy()


def test_case_14():
    none_type_0 = None
    complex_0 = 28 - 377.8944j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(complex_0, var_1)
    bool_0 = var_2.__eq__(var_0)
    var_3 = var_1.to_lazy()


def test_case_15():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_box()
    var_3.to_lazy()


def test_case_18():
    str_0 = "?B%}~"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(str_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.filter(var_0)
    maybe_1.filter(var_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    bool_2 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_box()
    var_5 = maybe_1.get_or_else(var_4)
    var_6 = var_0.get_or_else(bool_2)
    bool_3 = var_1.__eq__(var_0)


def test_case_21():
    none_type_0 = None
    complex_0 = 28 - 377.8944j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_4 = var_2.to_lazy()
