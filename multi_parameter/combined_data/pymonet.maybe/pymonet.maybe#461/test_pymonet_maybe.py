# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    list_0 = []
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    generic_0 = module_1.Generic(*list_0, **dict_0)
    var_0 = maybe_0.to_box()
    bool_1 = dict_0.__eq__(list_0)
    var_1 = maybe_0.to_lazy()
    bool_2 = True
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(generic_0, bool_2)
    bool_3 = maybe_1.__eq__(generic_0)
    var_3 = var_1.map(var_2)
    bool_4 = maybe_1.__eq__(maybe_1)


def test_case_3():
    list_0 = []
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    generic_0 = module_1.Generic(*list_0, **dict_0)
    var_0 = maybe_0.to_box()
    bool_1 = dict_0.__eq__(list_0)
    var_1 = maybe_0.to_lazy()
    bool_2 = True
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(generic_0, bool_2)
    bool_3 = maybe_1.__eq__(generic_0)
    var_3 = var_1.map(var_2)
    none_type_1 = None
    var_4 = maybe_1.map(none_type_1)


def test_case_4():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.map(var_0)


def test_case_5():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    float_0 = -765.8033
    maybe_3 = module_0.Maybe(var_0, int_0)
    tuple_0 = (float_0, var_0, maybe_3, maybe_0)
    var_1 = var_0.bind(tuple_0)
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.ap(bool_0)
    var_4 = maybe_2.to_try()
    var_5 = maybe_2.bind(var_3)
    bool_1 = maybe_2.__eq__(int_0)
    var_1.to_validation()


def test_case_6():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = False
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = maybe_2.to_lazy()
    maybe_3 = module_0.Maybe(none_type_1, bool_1)
    maybe_3.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    tuple_0 = ()
    bytes_0 = b"S\xad\xf5-}2\xe5^\xd7\xd0\x08"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_1.ap(tuple_0)
    var_3 = var_2.ap(none_type_0)
    var_4 = var_3.to_lazy()


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    int_0 = -1602
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.ap(var_0)


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_11():
    bytes_0 = b"\x1b\xa1\xc4|M\xafG\xf2\xca\xed\xa1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.get_or_else(bytes_0)
    var_4.get_or_else(bool_0)


def test_case_12():
    bytes_0 = b"\xda.\x03\x0b\x8b\x98vf\x946`"
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(generic_0)
    var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_either()
    var_0.get_or_else(none_type_0)


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(var_2, var_2)


def test_case_15():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()


def test_case_16():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    tuple_0 = (maybe_0,)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.to_lazy()


def test_case_18():
    str_0 = "8%`!&Jy3^3=Wc$ZE"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_19():
    int_0 = 2681
    int_1 = 2799
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_1, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(int_0)


def test_case_20():
    none_type_0 = None
    str_0 = 'taj\x0c/M~N*<="'
    bool_0 = True
    list_0 = [str_0, bool_0, str_0]
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, str_0)
    var_1 = maybe_1.to_try()
    var_1.to_either()


def test_case_21():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(var_2)


def test_case_22():
    int_0 = -1782
    maybe_0 = module_0.Maybe(int_0, int_0)
    int_1 = 0
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, int_1)
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(int_0, var_1)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_3 = module_0.Maybe(var_1, var_0)
    var_2 = var_0.filter(var_1)
    float_0 = -765.8033
    var_3 = var_0.ap(var_0)
    tuple_0 = (float_0, var_1, maybe_3, maybe_1)
    var_4 = var_1.bind(tuple_0)
    var_5 = maybe_2.to_try()
    var_6 = maybe_0.ap(maybe_2)
    var_7 = maybe_0.bind(var_6)
    bool_1 = var_1.__eq__(int_1)
    bool_2 = var_4.__eq__(maybe_1)
    maybe_1.filter(var_0)


def test_case_23():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)
