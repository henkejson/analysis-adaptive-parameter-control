# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"\xc4fA4\x18\x9b\xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_3 = var_0.to_box()
    var_3.to_box()


def test_case_3():
    int_0 = 2530
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    var_0 = maybe_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(int_0)


def test_case_4():
    object_0 = module_1.object()
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.get_or_else(object_0)
    var_1.to_lazy()


def test_case_5():
    none_type_0 = None
    float_0 = 348.7
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_6():
    str_0 = "ib5*.Z?MiC\nP=vp"
    none_type_0 = None
    bytes_0 = b"'\xd9\t/\x9b\xbcN&\xda\xaa\xa1\xaa"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(str_0)
    var_2 = var_1.to_lazy()


def test_case_7():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    set_0 = {bool_0}
    bytes_0 = b"\xb25\xf8\xbb-^4\xfd"
    tuple_0 = (set_0, set_0, set_0, bytes_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_2)
    maybe_0.ap(bytes_0)


def test_case_8():
    none_type_0 = None
    str_0 = "Maybe[U]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_try()


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    str_0 = 'R"O?F`Z'
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.get_or_else(maybe_0)


def test_case_11():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_0.to_box()
    var_3 = var_0.bind(maybe_0)


def test_case_12():
    int_0 = 2530
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    var_0 = maybe_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_0.to_box()
    var_2 = var_0.bind(var_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    int_1 = -2485
    maybe_2 = module_0.Maybe(bool_1, int_1)
    var_3 = var_2.filter(var_1)
    var_4 = maybe_1.to_either()
    var_5 = var_1.to_lazy()


def test_case_13():
    float_0 = -814.352084
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    list_1 = [list_0, list_0, dict_0, dict_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_1, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.bind(float_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_14():
    bool_0 = False
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    bytes_0 = b"\xb8\xca\xd6O!\xf5\x12\x07\xe1\x8eZ"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_try()
    var_2.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(var_1)
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()
    var_4.to_box()


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    none_type_2 = None
    generic_0 = module_2.Generic()
    maybe_1 = module_0.Maybe(none_type_2, generic_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_validation()
    var_3.filter(var_1)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.bind(var_0)


def test_case_19():
    int_0 = 2530
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    var_0 = maybe_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_0.to_box()
    var_2 = var_0.bind(var_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    int_1 = -2485
    maybe_2 = module_0.Maybe(bool_1, int_1)
    var_3 = var_2.filter(var_1)
    var_4 = var_1.to_lazy()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_either()
    maybe_0.ap(maybe_0)
