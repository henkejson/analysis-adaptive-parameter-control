# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1.filter(bool_0)


def test_case_4():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_0.map(bool_0)
    maybe_1.filter(var_1)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.map(none_type_0)


def test_case_6():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    bool_1 = maybe_0.__eq__(tuple_0)
    var_3 = var_0.bind(var_0)
    var_4 = maybe_0.filter(maybe_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.bind(none_type_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = var_0.ap(maybe_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.to_try()
    maybe_1.ap(bool_0)


def test_case_10():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_box()


def test_case_13():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_14():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_0.to_either()
    maybe_1.filter(var_0)


def test_case_15():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_0.filter(var_0)


def test_case_16():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1.filter(maybe_1)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_19():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_0.to_try()
    maybe_1.filter(var_1)


def test_case_20():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    bool_1 = maybe_1.to_try()
    maybe_1.filter(maybe_1)


def test_case_21():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(var_1)
    bool_1 = var_2.__eq__(bool_0)
    var_3 = maybe_0.filter(var_2)


def test_case_22():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_1)


def test_case_23():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, tuple_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_0.filter(tuple_0)


def test_case_24():
    bytes_0 = b"#p{\xf2\x84\xa7\xc2\xe0\x8cR\x8ad\xd7"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.filter(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_0.filter(bytes_0)


def test_case_25():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_1.filter(maybe_1)
