# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"M\xe2\xc9O\xdd\xb0\x8c]"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    str_0 = "p+@qk>PpUCj"
    dict_0 = {str_0: str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(str_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_3 = maybe_1.bind(maybe_1)
    var_4 = maybe_0.to_validation()
    var_5 = var_2.to_either()
    var_6 = maybe_0.map(dict_0)
    var_7 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_5)
    var_8 = var_0.get_or_else(var_0)
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_9 = var_6.to_validation()
    maybe_2.filter(var_7)


def test_case_3():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.map(var_1)
    var_1.to_box()


def test_case_4():
    bytes_0 = b"\x83C\xe4`\x99\xb3JN\xa9\x9eVN_\x8d\xdbN\xdb\x11g"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(bytes_0)


def test_case_5():
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(list_0)
    var_2.to_validation()


def test_case_6():
    str_0 = ""
    str_1 = "4Ks)KR"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_1, str_0)
    maybe_0.bind(bool_0)


def test_case_7():
    float_0 = -152.093
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, float_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_8():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(set_0)


def test_case_9():
    float_0 = 1653.21
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.filter(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_1)


def test_case_10():
    int_0 = -3836
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_box()


def test_case_11():
    bool_0 = True
    bool_1 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_validation()
    var_1.bind(bool_0)


def test_case_12():
    complex_0 = -591 - 1978.73j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(complex_0)


def test_case_13():
    int_0 = -1059
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.to_box()
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_1)


def test_case_14():
    bytes_0 = b"}\xcf\x08\x8c\xa8dZ\xcdH\xc6\xc7\xe4\xefB\xe5\x9ai\x1cp\xf8"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_2 = maybe_1.to_validation()


def test_case_15():
    bytes_0 = b"\xf8\xa7\xd6\xc5 \xe0\xcbJ\xea\xa0\x14\xccr3\xab"
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(bytes_0)


def test_case_16():
    bytes_0 = b'\xdb\xca\xcf"\x07\xe3\x95\xbc\x08\xa4\xe6{\x11'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.bind(maybe_0)
    var_3 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(var_1, var_3)
    var_4 = var_3.to_validation()
    maybe_2 = module_0.Maybe(maybe_0, maybe_0)
    var_5 = maybe_1.to_try()
    var_6 = maybe_0.map(var_5)
    var_7 = var_1.to_box()
    var_8 = var_5.get_or_else(var_7)
    var_8.to_box()


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\xf0iq\xd4\xfe\xd4.\x8fT\xa0\xe5\xe9\xee{\x1b\x0c\x91\xeb"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.ap(bytes_0)
    var_3 = maybe_0.to_lazy()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.get_or_else(maybe_0)
    var_3 = var_1.bind(var_1)
    var_4 = var_3.bind(var_2)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.map(var_0)


def test_case_21():
    int_0 = 2889
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.get_or_else(int_0)
    var_2.bind(maybe_0)
