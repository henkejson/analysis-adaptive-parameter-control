# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "ueK3j5"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_3():
    bool_0 = True
    bytes_0 = b"\xc9_\xd7\x0e"
    int_0 = 1048
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.ap(var_0)
    var_4 = var_2.to_try()
    var_5 = var_2.to_either()
    var_6 = maybe_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_5)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_5():
    complex_0 = -1422.219 + 3540.7j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_3 = var_1.to_validation()
    bool_0 = False
    var_4 = maybe_0.get_or_else(bool_0)
    var_5 = var_1.bind(var_3)
    maybe_2 = module_0.Maybe(tuple_0, bool_0)
    var_6 = var_3.to_either()
    maybe_2.map(var_1)


def test_case_6():
    str_0 = "gJ"
    dict_0 = {str_0: str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_1)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_3 = var_0.to_box()
    var_4 = var_3.to_either()
    var_5 = maybe_0.to_validation()
    var_6 = maybe_0.get_or_else(bool_1)
    var_7 = var_1.bind(bool_1)
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_8 = maybe_1.to_either()


def test_case_7():
    bytes_0 = b"\xf3_\x0e"
    int_0 = 1048
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(var_0)
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"F\x11"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(var_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    bytes_0 = b"\xf3_\x0e"
    int_0 = 1048
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    bytes_0 = b"\xc9_\xd7\x0e"
    int_0 = 1026
    list_0 = [int_0, int_0, int_0]
    maybe_0 = module_0.Maybe(list_0, int_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.map(list_0)
    var_2 = var_1.to_box()
    var_3 = var_0.ap(bool_0)
    var_4 = var_3.ap(var_0)
    var_5 = var_4.get_or_else(none_type_0)
    var_2.bind(var_4)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_lazy()
    var_2.bind(none_type_0)


def test_case_15():
    str_0 = "V3[gIz\r#"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    bool_0 = True
    bytes_0 = b"\xf3_\x0e"
    int_0 = 1048
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    bool_1 = maybe_0.to_validation()
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.ap(var_0)
    var_4 = var_2.to_try()
    var_5 = maybe_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    maybe_0.bind(var_2)


def test_case_18():
    bool_0 = False
    bytes_0 = b"\xc9_\xd7\x0e"
    int_0 = 1048
    list_0 = [int_0, int_0, int_0]
    maybe_0 = module_0.Maybe(list_0, int_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.map(list_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.ap(bool_0)
    var_4 = var_3.ap(var_0)
    var_5 = var_4.get_or_else(var_1)
    var_6 = var_3.to_try()
    var_7 = var_2.to_either()
    var_8 = maybe_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_7)


def test_case_19():
    bytes_0 = b"\xf3_\x0e"
    int_0 = 1048
    maybe_0 = module_0.Maybe(bytes_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(var_0)
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.filter(var_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b"\xc9_\xd7\x0e"
    int_0 = 1048
    list_0 = [int_0, int_0, int_0]
    maybe_0 = module_0.Maybe(list_0, int_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.ap(var_0)
    var_4 = var_3.get_or_else(none_type_0)
    var_5 = var_2.to_try()
    var_6 = var_2.to_either()
    var_7 = var_0.get_or_else(var_4)
    var_8 = var_0.to_try()
    var_9 = var_0.bind(var_4)
    var_10 = var_0.filter(var_5)
    bool_2 = var_7.__eq__(int_0)
    var_11 = var_10.to_lazy()
    var_12 = var_9.to_validation()
    var_13 = maybe_0.to_try()
    bool_3 = var_9.__eq__(var_10)
