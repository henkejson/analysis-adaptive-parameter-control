# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    bool_0.to_either()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "j!2cAU=W&Dg"
    bool_0 = maybe_0.__eq__(str_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_1.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(str_0, var_1)
    var_1.to_lazy()


def test_case_4():
    none_type_0 = None
    float_0 = 2258.38
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    str_0 = "\n        Transform Box into Right either.\n\n        :returns: right Either monad with previous value\n        :rtype: Right[A]\n        "
    tuple_0 = (bool_1, str_0)
    maybe_1 = module_0.Maybe(tuple_0, str_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.map(none_type_0)
    object_0 = module_1.object()
    var_0.get_or_else(object_0)


def test_case_5():
    int_0 = 3550
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(maybe_1)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    bool_1 = var_0.__eq__(var_0)
    var_2 = var_0.to_box()
    var_3 = var_0.to_try()
    var_3.to_either()


def test_case_7():
    str_0 = ""
    set_0 = {str_0, str_0}
    float_0 = -1777.1663
    maybe_0 = module_0.Maybe(set_0, float_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(str_0)
    int_0 = 3558
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    float_1 = -1978.0
    dict_0 = {int_0: int_0, int_0: float_1}
    bool_1 = True
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    var_3 = maybe_2.get_or_else(int_0)
    bool_2 = var_1.__eq__(dict_0)
    maybe_1.bind(var_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.map(maybe_0)
    var_4 = var_0.to_either()
    var_5 = var_2.to_try()
    var_6 = var_2.to_either()


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    bool_1 = True
    bool_2 = bool_1.__eq__(bool_1)
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = var_0.filter(var_1)
    var_3 = var_2.ap(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    var_4 = var_3.to_either()
    var_5 = maybe_0.get_or_else(var_4)
    maybe_1.filter(var_1)


def test_case_10():
    bool_0 = False
    str_0 = ">Jin)"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_box()


def test_case_11():
    complex_0 = -3156.438 + 399.3091j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.ap(var_1)
    var_4 = maybe_0.to_validation()
    var_5 = var_4.to_either()
    var_6 = var_4.to_box()
    maybe_1 = module_0.Maybe(var_4, int_0)
    var_5.bind(var_5)


def test_case_13():
    float_0 = 3896.669849
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.bind(float_0)


def test_case_14():
    float_0 = 3896.669849
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_2.bind(float_0)


def test_case_15():
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(none_type_0)


def test_case_18():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "j!2cAU=W&Dg"
    bool_0 = maybe_0.__eq__(str_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    var_1.to_lazy()


def test_case_21():
    int_0 = -311
    tuple_0 = (int_0,)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    int_1 = 0
    bool_1 = True
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = module_0.Maybe(int_1, var_1)
    bool_2 = maybe_0.__eq__(var_2)
    maybe_1 = module_0.Maybe(int_1, bool_1)
    var_3 = maybe_1.ap(maybe_1)
    var_4 = var_0.to_either()
    var_5 = var_0.get_or_else(var_4)
    var_4.to_either()
