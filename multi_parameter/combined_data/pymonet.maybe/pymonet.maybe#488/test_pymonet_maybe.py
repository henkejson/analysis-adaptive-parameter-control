# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    var_3 = module_1.Generic()
    var_1.to_lazy()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_either()
    var_3 = var_1.filter(bool_0)
    var_4 = var_3.bind(none_type_0)
    var_1.to_try()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.bind(var_2)
    var_2.get_or_else(var_2)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.map(var_0)


def test_case_6():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_try()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_either()
    maybe_0.bind(var_1)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.ap(bool_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_11():
    int_0 = -825
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_1.to_try()
    var_1.bind(var_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    complex_0 = 468.9 + 1844.633j
    bytes_0 = b"\xac\xd1\xf0\xca\xbd\x86\xe2\x06\x96\xf1\xff\xc7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(complex_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.map(var_1)
    var_3 = maybe_0.ap(complex_0)
    var_4 = var_3.to_box()
    var_4.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = -697.08
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_1.to_box()
    var_0.map(maybe_0)


def test_case_15():
    float_0 = 3765.64443
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_16():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    int_0 = 388
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.to_box()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(bool_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_box()
    var_3 = var_0.to_either()
    var_2.to_box()


def test_case_20():
    complex_0 = 468.9 + 1844.633j
    bytes_0 = b"\xac\xd1\xf0\xca\xbd\x86\xe2\x06\x96\xf1\xff\xc7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = var_0.map(var_2)
    var_4 = maybe_0.ap(complex_0)
    var_5 = var_4.to_box()
    bool_0 = var_3.__eq__(var_0)
    var_5.to_box()


def test_case_21():
    none_type_0 = None
    complex_0 = 468.9 + 1844.633j
    bytes_0 = b"\xac\xd1\xf0\xca\xbd\x86\xe2\x06\x96\xf1\xff\xc7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(complex_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    var_1.to_either()
