# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"KH\xfd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(maybe_0)
    bool_0 = var_1.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bytes_0)


def test_case_3():
    int_0 = 1446
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = module_0.Maybe(int_0, maybe_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.map(var_0)


def test_case_4():
    int_0 = 1446
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    set_0 = {bool_0}
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.map(set_0)


def test_case_5():
    bytes_0 = b"KH\xfd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = maybe_0.bind(var_0)
    var_4 = var_1.to_either()
    bool_0 = var_2.__eq__(var_4)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_5 = var_3.to_try()
    var_6 = var_3.to_validation()
    var_7 = var_1.map(var_3)
    maybe_1.filter(var_4)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    int_0 = -748
    bytes_0 = b"KH\xfd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(int_0)
    complex_0 = -4702.086 - 2703.12j
    bool_0 = False
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_2.ap(complex_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bytes_0 = b"\x1cU\x81\x89\xca\xe3h\x0c"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(var_2, bytes_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_box()
    bytes_0.to_box()


def test_case_10():
    bytes_0 = b"e"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(maybe_0)


def test_case_11():
    str_0 = "&=/UC1.A1"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.get_or_else(bool_0)
    var_2 = maybe_0.to_either()
    var_1.filter(bool_0)


def test_case_12():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_2.to_try()
    var_1.to_lazy()


def test_case_13():
    str_0 = "d%))w\rObrr~>LA'f_Z4M"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    bytes_0 = b"\x1cU\x81\x89\xca\xe3h\x0c"
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_validation()
    var_2 = module_1.Generic()
    maybe_1 = module_0.Maybe(var_2, bytes_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_box()
    var_5 = module_0.Maybe(var_0, var_0)
    var_6 = var_5.filter(var_4)
    var_7 = var_5.ap(var_6)
    var_8 = var_6.to_box()
    var_8.to_box()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_17():
    complex_0 = -5260.3977 - 1225j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_18():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    none_type_0 = None
    int_0 = 1040
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.map(none_type_0)


def test_case_20():
    int_0 = 574
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_21():
    bytes_0 = b"KH\xfd"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(maybe_0)
    bool_0 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bytes_0)


def test_case_22():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = module_0.Maybe(none_type_1, none_type_0)
    bool_0 = True
    var_1 = maybe_0.get_or_else(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = var_0.get_or_else(bool_0)
    var_0.bind(none_type_0)
