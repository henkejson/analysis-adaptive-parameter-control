# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xcc\x01\xc4\xbfG\xf3\xf9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -912
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    set_0 = set()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_2.to_validation()
    var_0.ap(maybe_0)


def test_case_3():
    bool_0 = True
    dict_0 = {}
    bool_1 = False
    tuple_0 = (bool_0, bool_0)
    bool_2 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_2)
    bool_3 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_1.filter(bool_3)


def test_case_4():
    bytes_0 = b"\x1f\r\xfb\xcb\xc0,q\xbd\xb8\xa2\x19\x98"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_box()
    var_4 = var_0.get_or_else(bytes_0)
    var_5 = maybe_0.filter(var_3)
    var_6 = var_1.map(var_3)
    var_7 = var_5.to_try()
    var_3.filter(var_4)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(bool_0)


def test_case_6():
    str_0 = "FOPdyy(0iE3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.get_or_else(str_0)
    var_2.get_or_else(var_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_10():
    bytes_0 = b"\xea\x90!\xde\xd6\x13\x14"
    set_0 = {bytes_0, bytes_0}
    bytes_1 = b"\x82\xed\xa5\n"
    str_0 = "_cPW+"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.bind(bytes_1)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_3.get_or_else(set_0)


def test_case_11():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_1.to_validation()
    var_1.bind(list_0)


def test_case_12():
    none_type_0 = None
    float_0 = 1235.2
    dict_0 = {float_0: float_0}
    int_0 = 2201
    tuple_0 = (dict_0, int_0, int_0, dict_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(none_type_0)


def test_case_13():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_14():
    int_0 = 628
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (set_0,)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    str_0 = "ImmutableList[U]"
    str_1 = "nTcz=|j2w&7"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    module_1.object(*none_type_0, **dict_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_0.bind(var_2)


def test_case_18():
    bool_0 = False
    none_type_0 = None
    dict_0 = {}
    list_0 = [dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    list_1 = [list_0, dict_0]
    bool_1 = maybe_0.__eq__(list_1)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.ap(bool_0)
    maybe_2 = module_0.Maybe(bool_0, var_0)
    var_3 = maybe_2.bind(bool_0)
    var_1.get_or_else(none_type_0)


def test_case_19():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_2 = maybe_1.get_or_else(dict_0)
    var_2.filter(var_1)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.get_or_else(bool_0)
    maybe_0.ap(bool_0)


def test_case_21():
    tuple_0 = ()
    bytes_0 = b"\xcc\x01\xc4\xbfG\xf9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.filter(var_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_2 = var_1.bind(var_0)
    var_3 = var_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, var_3)
    var_4 = maybe_0.map(var_1)
    bool_1 = var_4.__eq__(maybe_0)
    var_5 = var_1.to_box()
    var_6 = maybe_0.ap(var_5)
    var_7 = var_6.to_lazy()
    maybe_2 = module_0.Maybe(maybe_0, tuple_0)
    var_8 = var_2.to_lazy()
    var_9 = var_4.filter(var_6)
    var_10 = maybe_0.bind(bool_0)
    maybe_3 = module_0.Maybe(var_3, tuple_0)
    var_11 = var_0.to_validation()
    var_12 = maybe_3.to_either()
    maybe_3.filter(var_1)
