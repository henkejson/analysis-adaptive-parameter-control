# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = 4167
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_2 = maybe_1.to_try()
    bool_2 = maybe_1.__eq__(bool_0)
    var_3 = var_1.to_lazy()
    var_1.filter(var_0)


def test_case_3():
    bool_0 = True
    float_0 = 1943.791045
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.map(bool_0)
    var_4 = var_3.to_validation()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    float_0 = 1719.8965686901518
    dict_0 = {}
    tuple_0 = (dict_0, dict_0, dict_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.ap(float_0)
    var_3 = var_1.filter(var_2)
    var_4 = var_3.to_try()
    var_5 = var_2.to_validation()
    var_6 = var_3.to_either()
    var_4.to_validation()


def test_case_6():
    none_type_0 = None
    bytes_0 = b"vZe\xc7 \xa2\x7f"
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_lazy()
    none_type_1 = None
    none_type_2 = None
    str_0 = "\t/WVxR,<@"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_1.bind(none_type_2)
    var_3 = var_2.get_or_else(none_type_1)
    var_4 = maybe_0.map(var_3)
    maybe_2 = module_0.Maybe(none_type_2, var_3)
    maybe_2.bind(var_3)


def test_case_7():
    bytes_0 = b"3<R\xb6xr\xa8\xc7\x8e\xe8"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_9():
    str_0 = "Max[value={}]"
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_4 = var_1.ap(var_1)
    var_1.get_or_else(str_0)


def test_case_10():
    generic_0 = module_1.Generic()
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    bool_2 = var_1.__eq__(generic_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_0.filter(none_type_0)
    bool_2 = maybe_1.__eq__(bool_1)
    var_3 = maybe_1.ap(none_type_0)
    var_4 = maybe_1.filter(var_3)
    var_5 = var_0.to_validation()
    bool_3 = True
    maybe_2 = module_0.Maybe(var_1, bool_3)
    var_6 = var_3.get_or_else(var_0)
    var_7 = maybe_1.filter(var_0)
    maybe_3 = module_0.Maybe(var_1, maybe_0)
    bool_4 = False
    maybe_4 = module_0.Maybe(bool_1, bool_4)
    var_8 = var_2.ap(maybe_0)
    var_9 = maybe_4.to_either()
    var_10 = var_7.filter(var_3)
    var_11 = maybe_3.filter(var_6)
    bool_5 = True
    var_12 = var_6.get_or_else(bool_5)
    var_13 = var_6.filter(var_8)
    var_14 = var_7.ap(var_9)
    var_15 = var_7.to_either()
    var_16 = var_9.to_lazy()


def test_case_12():
    str_0 = 'eCpRg"y'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(str_0)


def test_case_13():
    object_0 = module_2.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_14():
    float_0 = 3262.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(float_0)
    none_type_0 = None
    var_3 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_4 = var_0.to_try()


def test_case_15():
    bytes_0 = b"\x95\xbe\xcb\x1a\xc4D\x1e\x99\x92"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    maybe_0.ap(var_1)


def test_case_17():
    object_0 = module_2.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.to_box()


def test_case_18():
    float_0 = 1943.791045
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_box()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    bool_1 = var_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = var_1.get_or_else(var_0)
    var_3 = maybe_1.filter(var_2)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    maybe_3 = module_0.Maybe(var_3, none_type_0)
    maybe_4 = module_0.Maybe(maybe_1, var_2)
    var_4 = var_0.to_either()
    maybe_3.filter(var_4)


def test_case_20():
    str_0 = "_o\x0cnmX\nTc#"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.filter(var_3)
    var_5 = var_4.to_lazy()
    bool_0 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_6 = maybe_1.ap(var_3)
    var_7 = maybe_0.to_box()
    var_8 = var_6.to_either()
    var_9 = var_8.to_box()
    var_10 = var_2.to_box()
