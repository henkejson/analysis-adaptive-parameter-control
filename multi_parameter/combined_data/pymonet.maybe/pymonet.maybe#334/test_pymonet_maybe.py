# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "s\\v.bfzuTt2\x0b"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xd0\xf9\xccB8\xa5#\xa6\xb0(\xedd\xaa\xfc"
    str_0 = "lGYj\x0c\x0cxe:wUlM"
    str_1 = "xb1y-"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_either()
    bool_0 = var_0.__eq__(maybe_0)
    var_1.filter(bytes_0)


def test_case_3():
    bytes_0 = b"W\x9dE\x12\x04\xe1a\xc0S\xb6\xd1\xaa\xef\x0f\xc4h\x95n"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    bool_1 = True
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    bool_3 = maybe_1.__eq__(bool_2)
    var_2 = maybe_1.to_try()
    var_0.filter(var_2)


def test_case_4():
    bytes_0 = b"\xec\xdc\xf6\x9b\x0f\xcd<"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(bytes_0)
    var_2 = var_1.bind(bytes_0)
    var_3 = var_2.to_box()
    var_3.to_box()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(bool_0)


def test_case_8():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, set_0)
    maybe_0.ap(set_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = "9}1>`i\t/\x0b<d?QB\x0c0"
    maybe_0.filter(str_0)


def test_case_10():
    none_type_0 = None
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    str_0 = "9}1>`i\t/\x0b<d?QB\x0c0"
    var_1 = maybe_0.filter(str_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.to_box()
    var_4 = var_1.map(var_2)
    bool_1 = maybe_0.to_either()
    var_5 = var_3.to_try()
    bool_2 = var_1.__eq__(var_4)
    var_6 = var_2.map(bool_0)
    var_7 = var_4.map(var_3)
    var_8 = var_3.to_try()
    bool_3 = False
    maybe_1 = module_0.Maybe(var_2, bool_3)
    var_9 = var_7.to_either()
    maybe_2 = module_0.Maybe(none_type_0, var_3)
    var_10 = maybe_1.get_or_else(var_6)
    var_11 = var_2.to_box()
    var_12 = var_11.to_lazy()
    maybe_1.filter(var_11)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(var_0, var_3)
    var_4 = maybe_0.to_lazy()
    var_5 = var_4.to_validation()
    var_6 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(var_4, var_2)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = "9}1>`i\t/\x0b<d?QB\x0c0"
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_lazy()


def test_case_14():
    bytes_0 = b"\xee\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    bool_0 = True
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_1.to_try()
    var_0.to_either()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_16():
    bytes_0 = b"\xa7\xb6\x05\xc3\xe26\x9c\x95\x0e\xf4g"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_box()
    maybe_1.ap(var_1)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_try()
    var_2.to_validation()


def test_case_18():
    bytes_0 = b"="
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.filter(bytes_0)
    var_3 = var_2.get_or_else(none_type_0)
    var_4 = maybe_0.map(var_0)
    var_5 = var_2.filter(bytes_0)
    bool_2 = maybe_1.__eq__(var_5)
    bytes_0.bind(none_type_0)


def test_case_19():
    bytes_0 = b"="
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.map(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.filter(bytes_0)
    var_4 = var_3.get_or_else(none_type_0)
    var_5 = maybe_0.map(var_0)
    var_6 = var_3.to_lazy()
    var_7 = var_6.to_try()
    bool_2 = maybe_1.__eq__(var_6)
    var_7.bind(none_type_0)


def test_case_20():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_box()
    var_1.ap(var_2)
