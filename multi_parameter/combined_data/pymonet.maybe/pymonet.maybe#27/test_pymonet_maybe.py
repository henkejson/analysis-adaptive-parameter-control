# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -185.3363
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    bool_0 = var_0.__eq__(var_0)


def test_case_3():
    bytes_0 = b"\xe2w\x95\xf4\x9d\xf75\x87\x14\xd2\xbb\xe5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_2.filter(var_2)
    maybe_1.filter(var_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_5():
    float_0 = -669.7047
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)


def test_case_6():
    bool_0 = True
    bytes_0 = b"\xb7\xbd\xb5u^"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.bind(none_type_0)


def test_case_7():
    int_0 = -4133
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.to_try()
    var_2.to_lazy()


def test_case_8():
    int_0 = -4133
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_1.filter(var_1)
    maybe_1 = module_0.Maybe(var_2, int_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    set_0 = {bool_0}
    bytes_0 = b"\xd4<E\xe8\xac\xd3\xda\xb2$\xf5Q\xear0\xa1\xf6\xd1\x19"
    tuple_0 = (set_0, bytes_0, set_0)
    maybe_0 = module_0.Maybe(tuple_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(bool_0)
    var_1.map(none_type_0)


def test_case_10():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(var_0)


def test_case_11():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_14():
    str_0 = "\x0c"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()


def test_case_15():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(dict_0)


def test_case_16():
    bytes_0 = b"\xe2w\x95\xf4\x9d\xf75\x87\x14\xd2\xbb\xe5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_try()
    var_5 = maybe_0.to_either()
    bool_3 = maybe_0.__eq__(maybe_0)
    var_6 = var_1.map(bool_2)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_7 = maybe_2.filter(var_1)
    none_type_0 = None
    var_8 = var_6.to_validation()
    var_9 = var_7.bind(none_type_0)
    bool_4 = var_0.__eq__(maybe_2)
    var_10 = maybe_0.to_either()
    maybe_1.filter(var_10)


def test_case_17():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(none_type_0)


def test_case_18():
    bytes_0 = b"\xbb\xe2wM\x95\xf4\x9d\xa0\x8b5\x87\x14\xd2\xbb\xe5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.bind(var_1)
    maybe_1 = module_0.Maybe(var_3, bool_2)
    var_4 = maybe_0.to_either()
    bool_3 = maybe_0.__eq__(maybe_1)
    var_5 = maybe_0.filter(var_0)
    none_type_0 = None
    var_6 = maybe_0.to_validation()
    bool_4 = var_5.__eq__(none_type_0)
    var_7 = var_0.to_either()
    var_8 = var_5.to_try()
    var_9 = var_2.to_try()
    var_10 = maybe_0.to_lazy()
    var_11 = var_6.to_either()
    var_12 = var_6.to_try()
    var_13 = var_1.to_validation()
    maybe_2 = module_0.Maybe(bool_0, var_7)
    var_14 = var_10.bind(var_6)
    var_15 = var_1.filter(var_6)
    var_16 = var_15.to_lazy()
    var_17 = var_3.map(var_16)
    var_18 = maybe_2.bind(var_7)
    bool_5 = True
    maybe_3 = module_0.Maybe(var_11, bool_5)
    var_19 = var_3.to_validation()
    var_3.to_either()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    maybe_0.bind(var_0)
