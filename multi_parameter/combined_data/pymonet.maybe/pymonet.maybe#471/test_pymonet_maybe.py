# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "B=[&"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    var_2.get_or_else(bool_1)


def test_case_3():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_3.to_box()
    maybe_3.filter(maybe_3)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.get_or_else(bool_1)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_0.map(maybe_0)
    var_4 = var_3.to_validation()
    bool_2 = var_0.__eq__(bool_0)
    var_5 = var_0.to_lazy()
    var_6 = maybe_0.filter(var_0)
    var_7 = maybe_0.get_or_else(var_0)
    var_8 = var_6.map(var_6)
    bool_3 = var_0.__eq__(maybe_0)
    var_9 = maybe_0.to_either()
    var_10 = maybe_0.get_or_else(bool_0)
    var_11 = var_9.to_try()
    var_11.to_box()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_1.to_box()


def test_case_7():
    list_0 = []
    bytes_0 = b""
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(list_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(bool_0)


def test_case_8():
    str_0 = "B=[h"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_either()
    list_0 = [bool_0, str_0, bool_0]
    var_2 = maybe_0.ap(list_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, var_0)
    bool_1 = var_0.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(var_1, bool_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.bind(var_3)
    var_6 = var_0.filter(var_5)
    var_3.to_either()


def test_case_9():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    maybe_2.ap(bool_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_validation()


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\r\xceR\x1b\xf6\xf1\xf843r`\xabs&9\x9b\xe7E\xd4 "
    maybe_0.filter(bytes_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_lazy()
    var_0.map(bool_0)


def test_case_13():
    complex_0 = -839 + 3252.84j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()


def test_case_14():
    int_0 = -2947
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_lazy()
    str_0 = "v#"
    var_0.get_or_else(str_0)


def test_case_16():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_1.__eq__(bool_0)
    maybe_3 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_3.to_box()
    maybe_3.filter(maybe_3)


def test_case_17():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = var_0.map(none_type_0)
    var_3 = var_0.to_either()
    var_4 = var_0.to_box()
    var_5 = var_1.ap(var_4)
    var_4.filter(var_1)


def test_case_19():
    str_0 = "B=[h"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.ap(var_2)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_4 = var_3.ap(var_3)
    var_5 = var_2.ap(var_4)
    var_6 = maybe_0.to_validation()
    var_7 = var_3.get_or_else(var_6)
    var_8 = var_5.ap(var_4)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_9 = var_5.to_lazy()
    var_10 = maybe_1.to_lazy()
    generic_0 = module_1.Generic()
    bool_3 = maybe_0.__eq__(generic_0)
    var_11 = maybe_0.to_box()
    maybe_1.filter(var_6)


def test_case_20():
    bool_0 = False
    float_0 = 923.52
    str_0 = "E?d"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_2 = maybe_1.__eq__(var_1)
    maybe_2 = var_0.to_lazy()
    maybe_3 = module_0.Maybe(maybe_2, float_0)
    var_2 = var_0.to_try()
    var_3 = var_1.to_box()
    var_4 = maybe_0.filter(bool_2)
    var_5 = maybe_3.to_either()
    var_6 = var_5.to_box()
    var_3.to_box()
