# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -3827
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_either()


def test_case_3():
    bool_0 = True
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(list_0)
    var_0 = maybe_0.to_box()
    var_0.bind(list_0)


def test_case_4():
    str_0 = "Maybe[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_0.to_validation()
    var_3 = var_1.filter(var_0)
    bool_1 = var_0.__eq__(var_1)
    bool_2 = var_3.__eq__(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    var_1 = maybe_0.to_either()
    maybe_0.map(bool_0)


def test_case_6():
    str_0 = "Maybe[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_0.bind(var_0)
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_7():
    str_0 = "DUgP"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    complex_0 = 1421 - 884j
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.to_lazy()
    maybe_2.bind(var_2)


def test_case_8():
    str_0 = "F\x0c1"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_validation()


def test_case_9():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    str_0 = " )0A0~{?\rthbF"
    set_1 = {str_0, str_0, str_0, str_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_1, none_type_0)
    maybe_0.ap(set_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()


def test_case_11():
    int_0 = 1090
    bool_0 = False
    tuple_0 = (int_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(tuple_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_13():
    str_0 = "Maybe[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_0.to_validation()
    var_3 = var_1.filter(var_0)
    bool_1 = var_0.__eq__(var_1)
    bool_2 = var_3.__eq__(var_3)
    var_4 = maybe_0.to_box()
    var_5 = var_1.to_either()


def test_case_14():
    float_0 = -391.34585
    int_0 = -1609
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(float_0)


def test_case_15():
    str_0 = "Maybe[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(str_0)
    var_2 = var_0.to_validation()
    var_3 = var_1.filter(var_0)
    bool_1 = var_0.__eq__(var_1)
    var_4 = var_1.ap(var_2)
    var_5 = var_0.to_box()
    var_6 = var_5.to_either()


def test_case_16():
    int_0 = -1191
    complex_0 = 789.713681 + 0.58j
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: complex_0}
    maybe_0 = module_0.Maybe(dict_0, complex_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    var_0.to_lazy()


def test_case_18():
    bool_0 = True
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    bool_1 = var_0.__eq__(bool_0)
    var_1 = var_0.to_box()


def test_case_19():
    str_0 = "Maybe[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = var_1.ap(var_0)
    var_3 = maybe_1.ap(str_0)
    var_4 = var_3.map(str_0)
    var_5 = var_3.to_validation()
    var_6 = var_4.filter(var_3)
    bool_1 = var_3.__eq__(var_4)
    var_7 = var_4.ap(var_5)
    bool_2 = maybe_0.__eq__(var_6)
    var_8 = var_0.to_try()
    var_9 = var_7.to_box()
    var_10 = var_4.to_either()
