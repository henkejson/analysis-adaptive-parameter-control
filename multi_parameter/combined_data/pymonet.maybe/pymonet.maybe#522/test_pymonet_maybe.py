# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"t\x19\xe7\x1a\xb8\x92\xb0\x17\xff\xf4O\x16\xadZ\xbc\x9dry\x12"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    float_0 = -1508.8
    maybe_0 = module_0.Maybe(bool_0, float_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.bind(float_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_validation()
    var_7 = var_4.to_validation()
    bool_2 = var_4.__eq__(float_0)
    bool_3 = var_7.__eq__(bool_0)
    var_8 = var_4.to_either()
    var_9 = var_8.to_box()
    var_10 = var_2.to_lazy()


def test_case_3():
    float_0 = -0.0339
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_2.bind(float_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = var_2.filter(float_0)
    maybe_1.filter(var_1)


def test_case_4():
    str_0 = "lf'aE1C{\t>SW$\tg"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.map(str_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_6():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    list_0 = [bool_1]
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.ap(var_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    maybe_0.filter(bool_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_lazy()
    bool_1 = var_3.__eq__(var_3)
    var_4 = var_1.bind(var_3)


def test_case_11():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_1.map(generic_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_1.to_lazy()


def test_case_13():
    int_0 = 1721
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    maybe_0.filter(var_1)


def test_case_14():
    str_0 = "igNV+=a!S4luCVj^wf"
    set_0 = {str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    list_0 = [var_1, str_0, str_0]
    maybe_1 = module_0.Maybe(list_0, str_0)
    var_2 = maybe_1.to_try()


def test_case_15():
    bytes_0 = b"0\xba"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_16():
    float_0 = -0.0339
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(float_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.get_or_else(maybe_0)
    maybe_1 = var_4.bind(var_3)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_5 = maybe_1.ap(maybe_0)
    var_6 = var_4.filter(var_5)
    maybe_2.filter(var_1)


def test_case_17():
    bool_0 = True
    float_0 = -1508.8
    maybe_0 = module_0.Maybe(bool_0, float_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bytes_0 = b"t\x19\xe7\x1a\xb8\x92\xb0\x0b\xffO\x16\xadZ\x99\x9dry\x12"
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(var_0)
    var_3 = var_1.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_2, var_3)
    var_4 = maybe_1.to_validation()
    var_5 = var_3.ap(bool_1)
    var_6 = var_3.map(var_2)
    var_7 = var_2.to_validation()
    var_2.to_box()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    float_0 = -1508.8
    none_type_0 = None
    maybe_1 = module_0.Maybe(float_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    bytes_0 = b"t\x19\xe7\x1a\xb8\x92\xb0\x0b\xffO\x16\xadZ\x99\x9dry\x12"
    maybe_1.ap(bytes_0)
