# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "N2M::\x0c"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    str_0 = "K]=\x0bdKM%"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.map(str_0)
    none_type_1 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(var_1)
    var_3 = var_1.to_box()
    var_4 = var_3.to_validation()
    var_5 = var_1.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_1.to_validation()


def test_case_3():
    bytes_0 = b"\x84\xa8l\xfc\x02\xc1X\xfd\xedp"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = var_1.to_either()
    maybe_1 = module_0.Maybe(var_2, var_3)
    var_4 = var_1.to_validation()
    var_5 = maybe_1.to_either()


def test_case_4():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(bool_0)
    tuple_0 = (dict_0,)
    bool_1 = maybe_0.__eq__(dict_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = var_2.filter(var_1)
    maybe_1 = module_0.Maybe(tuple_0, var_0)
    var_4 = maybe_1.bind(maybe_1)


def test_case_5():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(bool_0)
    tuple_0 = (dict_0,)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(dict_0)
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_3.filter(var_2)
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    maybe_1.bind(maybe_1)


def test_case_6():
    object_0 = module_1.object()
    complex_0 = -1711.4646 - 1142.66j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(object_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = var_0.to_box()


def test_case_7():
    none_type_0 = None
    str_0 = "K]=\x0bdKM%"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.ap(str_0)
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_1.to_lazy()
    bool_0 = True
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_5 = maybe_1.ap(var_2)
    var_3.to_either()


def test_case_8():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_1)


def test_case_9():
    float_0 = 826.7
    bool_0 = True
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_3 = var_0.__eq__(float_0)


def test_case_10():
    str_0 = "-~b?>Oyn"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    object_0 = module_1.object()
    set_0 = {object_0, object_0}
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    tuple_0 = (set_0, bool_0)
    bool_2 = True
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    var_1 = maybe_1.ap(tuple_0)
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_12():
    str_0 = "W"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.bind(str_0)


def test_case_13():
    str_0 = "MR4d|F3js>"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    str_0 = "K]=\x0bdKM%"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.ap(str_0)
    var_2 = var_1.to_try()
    var_3 = var_2.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.map(var_3)
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_6 = maybe_2.get_or_else(none_type_0)
    var_7 = maybe_2.map(var_6)
    var_8 = maybe_2.bind(none_type_0)
    var_9 = maybe_2.get_or_else(var_8)
    var_10 = var_8.to_try()


def test_case_15():
    object_0 = module_1.object()
    complex_0 = -1711.4646 - 1142.66j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(object_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.filter(var_0)
    var_3 = var_0.to_either()
    var_1.to_box()


def test_case_16():
    bytes_0 = b"\x84\xa8l\xfc\x02\xc1X\xfd\xedp"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = var_0.to_box()
    var_3 = maybe_1.to_try()
    var_4 = var_0.filter(var_3)
    bool_1 = var_4.__eq__(none_type_0)
    var_5 = var_1.to_either()
    maybe_1.filter(bool_1)


def test_case_17():
    int_0 = -4088
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(int_0)
    bool_2 = var_0.__eq__(var_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_2.filter(maybe_0)


def test_case_18():
    str_0 = "-~b?>Oyn"
    str_0.to_either()


def test_case_19():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    var_1.to_box()


def test_case_20():
    bytes_0 = b"\x84\xa8l\xfc\x02\xc1X\xfd\xedp"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.map(var_1)
    var_3 = var_0.to_either()
    bool_1 = var_3.__eq__(maybe_1)
    bool_2 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(none_type_0, var_2)
    var_4 = var_1.to_validation()
    var_4.bind(var_2)


def test_case_21():
    bool_0 = True
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(bool_0)
    tuple_0 = (dict_0,)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(dict_0)
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_3.filter(var_2)
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    var_5 = var_0.to_box()
    var_6 = maybe_1.to_box()
    var_7 = maybe_1.to_lazy()
    var_8 = maybe_1.get_or_else(none_type_0)
    maybe_1.map(bool_0)


def test_case_22():
    str_0 = "G'+yY\x0by"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    float_0 = -1938.706198
    var_1 = maybe_0.to_try()
    bool_2 = False
    tuple_0 = (bool_2,)
    complex_0 = 3622 + 1983.55j
    dict_0 = {complex_0: complex_0}
    var_2 = var_0.to_box()
    var_3 = var_0.bind(float_0)
    maybe_1 = module_0.Maybe(complex_0, dict_0)
    var_4 = maybe_1.to_validation()
    var_5 = var_4.to_try()
    var_5.bind(tuple_0)
