# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "gSR-7f?zdJ}\x0b\\[\x0bH\r~"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -2023.24
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.to_validation()


def test_case_3():
    float_0 = 1535.34
    bytes_0 = b"v\xc71\xad>\x8fyB\x11\x98t\xcfR1d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(float_0)


def test_case_4():
    none_type_0 = None
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.map(var_0)
    tuple_0 = (maybe_0,)
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    maybe_1.map(none_type_0)


def test_case_5():
    list_0 = []
    str_0 = "YXJl,Hvbi!r"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(list_0, str_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_either()
    var_3.map(list_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    tuple_1 = (set_0, tuple_0)
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\x98m\xe3\x0e\xb6UD"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = var_2.get_or_else(bytes_0)
    bool_0 = var_3.__eq__(bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    maybe_3 = module_0.Maybe(bytes_0, bytes_0)


def test_case_10():
    complex_0 = -1894.441781 + 230.25j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    maybe_0.filter(complex_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_12():
    bytes_0 = b"%[\x92\x13\xe8\x90*\x9c\x97&\x86"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    int_0 = -2049
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    int_1 = -3972
    maybe_1 = module_0.Maybe(int_1, var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_box()
    bool_1 = maybe_1.__eq__(int_1)
    var_4 = maybe_1.map(var_0)


def test_case_14():
    float_0 = -2023.24
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_try()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_16():
    none_type_0 = None
    bytes_0 = b":zd\xba"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    bool_2 = var_0.__eq__(bool_1)
    bool_3 = var_0.__eq__(var_0)
    maybe_0.bind(none_type_0)


def test_case_17():
    str_0 = "gSR-7f?zdJ}\x0b\\[\x0bH\r~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(var_0)
    bool_0 = maybe_0.__eq__(var_1)
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    none_type_0 = None
    maybe_1 = module_0.Maybe(set_0, none_type_0)
    var_2 = maybe_0.get_or_else(maybe_1)
    var_0.to_either()


def test_case_19():
    float_0 = -1242.9
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(float_0)
    var_1.to_box()


def test_case_20():
    int_0 = -2049
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    int_1 = -3972
    bool_1 = True
    maybe_1 = module_0.Maybe(int_1, bool_1)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_box()
    var_3 = maybe_0.to_validation()
    maybe_0.map(var_3)


def test_case_21():
    float_0 = -2023.24
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_2 = maybe_2.to_either()
    bool_0 = True
    maybe_3 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_2)
    var_3 = var_2.to_box()
    maybe_4 = module_0.Maybe(var_3, var_2)
    var_4 = maybe_4.bind(var_2)
    var_5 = var_4.to_either()
    var_6 = var_3.to_either()
    bool_2 = False
    maybe_5 = module_0.Maybe(var_3, bool_2)
    var_7 = var_5.to_validation()
    var_8 = maybe_2.to_validation()
    var_9 = maybe_3.to_lazy()
    var_10 = maybe_3.map(maybe_0)
    bool_3 = maybe_5.__eq__(maybe_3)
    var_11 = var_1.filter(var_9)
    var_9.get_or_else(var_7)


def test_case_22():
    bytes_0 = b"\x98m\xe3\x0e\xb6UD"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.bind(var_0)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_2 = maybe_0.to_either()
    maybe_3 = module_0.Maybe(bytes_0, none_type_0)
    bool_1 = maybe_3.__eq__(maybe_3)
    var_2.filter(var_2)
