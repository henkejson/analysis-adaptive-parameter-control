# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "zb;9Ckg(u5_h#Jn'J%"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    bool_2 = False
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_3, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_1.filter(bool_1)
    bool_4 = False
    bool_5 = False
    maybe_3 = module_0.Maybe(bool_4, bool_5)
    var_1 = maybe_1.get_or_else(bool_1)
    bool_6 = maybe_2.__eq__(var_1)
    var_2 = var_0.ap(maybe_3)
    maybe_4 = module_0.Maybe(var_1, maybe_3)
    var_3 = maybe_4.to_box()


def test_case_3():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.filter(bool_2)
    bool_3 = False
    maybe_2 = module_0.Maybe(bool_2, bool_3)
    var_1 = var_0.get_or_else(var_0)
    bool_4 = maybe_2.__eq__(maybe_2)
    var_2 = maybe_2.ap(var_0)
    var_3 = maybe_0.to_box()


def test_case_4():
    complex_0 = 2267.22 - 340.286j
    int_0 = -743
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    maybe_0.map(complex_0)


def test_case_5():
    str_0 = ""
    set_0 = set()
    bytes_0 = b"\x9euo!\xb3N"
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.bind(str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)


def test_case_6():
    bytes_0 = b'("\xd8\xf2g5\xd3R&\x98\rP'
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bytes_0)


def test_case_7():
    float_0 = -1562.02
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.to_box()


def test_case_8():
    str_0 = "]S'Y(."
    float_0 = 549.401675
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    dict_0 = {none_type_0: bool_0}
    var_0 = maybe_0.get_or_else(dict_0)
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.map(maybe_0)
    var_0.to_either()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.bind(maybe_1)
    bool_1 = False
    var_2 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(bool_0, bool_1)


def test_case_13():
    str_0 = "]S'Y(."
    float_0 = 549.401675
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_lazy()


def test_case_14():
    int_0 = 1184
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = var_1.map(var_0)
    var_3 = var_2.filter(int_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_15():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_1 = maybe_1.map(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.to_validation()
    var_5 = var_1.filter(none_type_0)
    var_6 = maybe_1.to_either()
    var_7 = var_5.to_either()
    var_8 = maybe_1.to_validation()
    maybe_0.filter(var_2)


def test_case_16():
    bytes_0 = b"t\xb1\xc8\xd3r3\x1a\xc0V\xee\x0f9x\x1d\x9d("
    bytes_1 = b"`"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.ap(bytes_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_try()
    var_1.map(none_type_0)


def test_case_18():
    str_0 = "&zS\\XDw7+P;"
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(str_0, generic_0)
    var_0 = maybe_0.filter(str_0)
    bool_0 = True
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.ap(bool_0)


def test_case_19():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.map(var_0)
    var_3.to_box()


def test_case_20():
    int_0 = 1184
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = var_1.map(var_0)
    var_3 = var_2.filter(int_0)
    none_type_0 = None
    none_type_1 = None
    var_4 = maybe_0.map(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_5 = maybe_1.get_or_else(none_type_1)
    maybe_1.filter(none_type_0)
