# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 2880
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    bool_0 = var_1.__eq__(int_0)


def test_case_3():
    bytes_0 = b"3\xe0\xba\xe1\xd1\xb5\xd7\x1d\x9da\x16\xcd\xec"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(var_0)
    var_2 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bytes_0)
    var_3 = maybe_0.map(var_2)
    var_4 = var_0.filter(var_0)
    var_5 = var_0.get_or_else(var_4)
    var_6 = var_3.to_validation()
    maybe_1 = module_0.Maybe(bytes_0, var_5)
    var_0.to_lazy()


def test_case_4():
    float_0 = 794.8
    list_0 = [float_0, float_0, float_0, float_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.map(list_0)


def test_case_5():
    int_0 = 1614
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_1)
    var_1.get_or_else(int_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0]
    bool_0 = True
    bool_1 = True
    int_0 = 1
    bool_2 = True
    maybe_0 = module_0.Maybe(int_0, bool_2)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.get_or_else(bool_0)
    var_1.ap(list_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    int_0 = 2880
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(var_1, none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    maybe_2.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    str_0 = "NjU._6M5ts?5(\nJ"
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = var_0.to_try()
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    int_0 = 2880
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.filter(none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_0.get_or_else(var_1)


def test_case_11():
    int_0 = 1876
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.map(var_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_2.to_either()
    var_4 = var_0.map(var_0)
    var_5 = var_3.to_box()
    var_6 = var_5.to_either()
    var_7 = var_1.map(var_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_8 = var_0.map(bool_1)


def test_case_12():
    str_0 = "J=$;"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_13():
    bytes_0 = b"\xc1,\x98\xa9\xc8\xf9\xca\xfd+2"
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    maybe_0 = module_0.Maybe(list_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_3.to_try()
    var_4.filter(bytes_0)


def test_case_14():
    bytes_0 = b"\x90\xd5I\xb8\x11\xc0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    int_0 = 1614
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.get_or_else(var_1)
    maybe_1 = module_0.Maybe(maybe_0, var_2)
    var_3 = var_2.to_validation()
    maybe_2 = module_0.Maybe(bytes_0, maybe_0)
    var_4 = var_1.to_box()
    var_5 = var_4.to_lazy()
    var_6 = maybe_2.filter(var_5)
    var_5.filter(var_1)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "7uEBB{\nP+g+Fn\n"
    tuple_1 = (var_0, str_0)
    maybe_1 = module_0.Maybe(tuple_1, str_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_try()
    var_2.ap(none_type_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    int_0 = 2880
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.filter(none_type_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_0.to_either()
    var_5 = var_4.ap(none_type_0)
    none_type_0.to_lazy()


def test_case_18():
    str_0 = "ym~T'A3uYO\r?"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.filter(maybe_0)


def test_case_19():
    int_0 = 1
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()


def test_case_20():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.map(bool_0)


def test_case_21():
    str_0 = "|^zX@APV\\H2n/UN(^o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(var_1)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.bind(none_type_0)
    var_2.to_validation()


def test_case_23():
    bytes_0 = b"\x90\xd5I\xb8\x11\xc0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    int_0 = 1614
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.filter(var_0)
    bool_0 = var_2.__eq__(maybe_0)
    var_3 = var_1.get_or_else(var_1)
    bytes_1 = b"\x1b\x98\xd1X\xa6U\xed\x1e\xf9\x94\xb4@\xa8\xc6'\x1a\""
    var_4 = maybe_0.to_either()
    bool_1 = var_1.__eq__(bytes_1)
    var_5 = var_0.to_box()
    var_6 = var_1.ap(maybe_0)
    var_7 = var_1.to_validation()
    var_8 = var_3.map(var_6)
    var_9 = var_0.ap(bool_1)
    var_10 = var_8.bind(var_5)
    var_11 = var_0.to_box()
    bool_2 = True
    maybe_1 = module_0.Maybe(var_5, bool_2)
    var_12 = var_1.to_either()
    var_13 = var_10.to_try()
    var_14 = var_10.to_try()
    var_15 = maybe_0.to_validation()
    var_16 = var_3.to_box()


def test_case_24():
    bytes_0 = b"\x90\xd5I\xb8\x11\xc0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    int_0 = 1614
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.ap(var_1)
    var_3 = var_2.get_or_else(var_2)
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.to_validation()
    bool_0 = var_2.__eq__(var_1)
    var_6 = var_1.bind(bool_0)
    none_type_0 = None
    var_7 = maybe_0.to_try()
    var_8 = var_1.to_lazy()
    var_9 = var_8.map(var_5)
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    var_10 = maybe_1.get_or_else(int_0)
    var_11 = maybe_0.map(var_5)
