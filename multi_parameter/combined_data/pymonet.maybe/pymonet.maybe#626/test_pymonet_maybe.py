# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "*@Q3\nf4R\nF6tq"
    var_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    dict_0 = {}
    complex_0 = -680 - 724.73j
    bool_0 = True
    tuple_0 = (dict_0, complex_0, bool_0)
    maybe_0 = module_0.Maybe(complex_0, tuple_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = True
    list_0 = [bool_1, bool_1]
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(list_0, list_0)
    bool_2 = maybe_1.__eq__(set_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_1.ap(var_0)
    maybe_1.filter(var_1)


def test_case_5():
    generic_0 = module_1.Generic()
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(dict_0)
    maybe_1 = module_0.Maybe(dict_0, var_0)
    maybe_1.map(generic_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.bind(var_0)
    maybe_0.ap(maybe_0)


def test_case_7():
    bool_0 = False
    int_0 = 1576
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_8():
    bool_0 = True
    str_0 = "@K{"
    float_0 = -411.0
    list_0 = [str_0, float_0, float_0]
    complex_0 = 805.53379 + 805.080735j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.get_or_else(bool_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.get_or_else(none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_either()
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_0.to_try()
    maybe_1.filter(var_3)


def test_case_12():
    str_0 = "6B1Q3\nf4R\nF6tq"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(maybe_0)
    bool_1 = var_1.__eq__(var_1)
    var_0.bind(var_1)


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    int_0 = -2000
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.to_validation()


def test_case_15():
    bool_0 = False
    list_0 = []
    tuple_0 = (bool_0, list_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    maybe_1.filter(var_0)


def test_case_17():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_18():
    int_0 = -2000
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_20():
    str_0 = "*B@Q3\nf4R\nF6tq"
    str_0.to_lazy()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.ap(var_1)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.bind(var_0)
    var_5 = maybe_0.to_validation()
    var_6 = var_3.to_validation()
    var_7 = var_1.to_try()
    var_8 = var_1.to_either()
    var_2.to_validation()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    bool_0 = maybe_0.__eq__(var_2)
    var_0.bind(none_type_0)


def test_case_23():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.filter(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(bool_1, none_type_0)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_1.filter(var_2)
    var_4 = maybe_2.to_either()
    var_5 = maybe_1.filter(list_0)
    var_6 = maybe_2.to_box()
    var_7 = var_5.map(bool_0)
    var_8 = maybe_2.to_box()
    bool_2 = var_1.__eq__(maybe_2)
    var_9 = var_0.bind(var_8)
    var_10 = var_7.filter(var_8)


def test_case_24():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    set_0 = set()
    maybe_0 = module_0.Maybe(list_0, set_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    var_0.bind(bool_0)
