# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"3P\xc7\xa0\xea\x04\x7f\x98\xbe\xac\xb3\x19\x17K\xf3\x87\xa2\xee"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"3P\xc7\xa0\xea\x04\x7f\x98\xbe\xac\xb3\x19\x17K\xf3\x87\xa2\xee"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(maybe_0)


def test_case_3():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.bind(object_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_validation()
    bool_1 = var_1.__eq__(object_0)


def test_case_4():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.bind(object_0)
    none_type_0 = None
    var_1 = maybe_0.map(none_type_0)
    var_2 = var_0.get_or_else(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_either()
    var_5 = maybe_0.map(var_3)
    var_6 = var_3.to_lazy()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.map(var_1)


def test_case_6():
    str_0 = "+MW"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(str_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_8():
    none_type_0 = None
    str_0 = "gI \x0c0\x0b0` |\\&pF?o|"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_2.ap(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    complex_0 = 1625.005 + 2012.129j
    str_0 = "[e"
    bytes_0 = b"\x19j\xff\xf3'\x96={\x0b\x9c\x8a\xfeJ\x85,#&\x81\x93"
    tuple_0 = (str_0, bytes_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_0.to_try()


def test_case_12():
    complex_0 = -3880.1 - 519.83j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.bind(set_0)
    var_3 = var_2.map(set_0)
    var_4 = var_3.to_lazy()
    var_5 = var_3.filter(var_3)
    var_6 = maybe_0.to_lazy()
    var_7 = var_2.map(var_3)
    var_0.to_lazy()


def test_case_15():
    str_0 = ';"'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    bool_0 = var_1.__eq__(var_0)
    var_2 = var_1.bind(maybe_0)
    var_3 = maybe_0.to_try()
    var_4 = var_2.bind(var_0)
    var_5 = var_4.filter(var_3)


def test_case_16():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.bind(set_0)
    var_3 = var_2.map(set_0)
    maybe_2 = module_0.Maybe(set_0, var_0)
    var_4 = maybe_2.filter(maybe_2)
    var_5 = maybe_2.to_lazy()
    bytes_0 = b"|\x1b\xdb\xb7qv.\xd9\xd6\x0bS\x8b/<\xbd\xeb\xcf\xbc"
    maybe_3 = module_0.Maybe(bytes_0, var_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_18():
    str_0 = ';"'
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    str_0.to_try()


def test_case_19():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_0 = True
    maybe_2 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_2.filter(var_0)
    var_3 = maybe_2.to_either()
    var_4 = var_3.map(set_0)
    var_5 = var_4.to_lazy()
    var_4.filter(var_4)


def test_case_20():
    str_0 = ';"'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_1 = var_0.bind(maybe_0)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_try()
    var_4 = var_1.bind(var_2)
    var_5 = var_4.filter(var_3)
    var_6 = var_4.to_lazy()
    var_2.to_try()
