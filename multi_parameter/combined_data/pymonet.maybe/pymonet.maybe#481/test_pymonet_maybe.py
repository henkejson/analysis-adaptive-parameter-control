# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_1)
    maybe_0.ap(none_type_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_lazy()
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = maybe_0.map(maybe_0)
    var_5 = var_4.map(var_3)
    var_6 = var_4.to_validation()
    var_7 = var_3.to_box()
    var_8 = var_3.map(var_3)
    var_9 = var_8.ap(var_3)
    var_10 = var_8.map(var_7)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_validation()
    var_4 = var_0.to_lazy()
    var_5 = var_0.to_validation()
    var_6 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_3, var_4)
    none_type_0 = None
    var_7 = var_6.to_box()
    var_8 = var_1.to_lazy()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_9 = maybe_2.to_lazy()
    var_10 = maybe_2.to_lazy()
    var_11 = maybe_2.to_lazy()
    bool_1 = False
    var_12 = var_10.to_validation()
    var_13 = var_8.to_try()
    var_14 = var_10.to_either()
    bool_2 = var_10.__eq__(bool_1)
    var_15 = var_11.to_validation()
    var_16 = var_15.to_box()
    maybe_2.ap(maybe_2)


def test_case_5():
    int_0 = 1148
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.filter(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.to_lazy()
    maybe_1.filter(var_2)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    str_0 = "\n        Returns new ImmutableList with each element mapped into\n        result of argument called with each element of ImmutableList\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> B\n        :returns: ImmutableList[B]\n        "
    tuple_0 = ()
    none_type_0 = None
    bytes_0 = b"\xb1\xdef8\xf9\x1e\\\x8e\xd8\x9b}"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(tuple_0)
    var_2 = var_1.get_or_else(str_0)
    var_2.to_box()


def test_case_8():
    int_0 = 1462
    str_0 = "Zw_i:U_`G}-wW'Ae.gO"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, int_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(bool_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.to_box()
    var_5 = var_4.to_lazy()


def test_case_10():
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bytes_0 = b"\xce\x92\xe1[\x13"
    float_0 = -1367.564
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.map(bytes_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    str_0 = "*dOcHKav2;'\\.Bs]P\\y"
    tuple_0 = (str_0,)
    maybe_0 = module_0.Maybe(tuple_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_lazy()
    bool_0 = var_3.__eq__(var_3)
    var_4 = var_3.to_either()
    maybe_1 = module_0.Maybe(var_4, maybe_0)
    var_5 = maybe_0.to_either()
    var_6 = var_4.to_validation()
    var_4.get_or_else(var_6)


def test_case_16():
    int_0 = 1463
    str_0 = "J+aq"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, int_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.filter(var_1)
    maybe_1.filter(bool_0)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.map(none_type_0)


def test_case_18():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(set_0, maybe_1)
    var_3 = maybe_2.map(var_2)
    bool_2 = True
    maybe_3 = module_0.Maybe(var_0, bool_2)
    bool_3 = var_0.__eq__(maybe_3)
    var_4 = maybe_1.to_validation()
    maybe_4 = module_0.Maybe(set_0, bool_2)
    var_4.map(var_4)


def test_case_19():
    str_0 = "u,axB[PE<-!r[`"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    str_1 = "^\x0b`(p/Q5>ib.\x0b\x0b\\M9fc+"
    list_0 = []
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(maybe_1)
    var_3 = var_0.to_either()
    maybe_2 = module_0.Maybe(maybe_1, str_1)
    var_1.get_or_else(maybe_1)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)
