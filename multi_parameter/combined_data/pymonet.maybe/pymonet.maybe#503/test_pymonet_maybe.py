# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = -1762
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(int_0)
    var_1 = maybe_0.bind(var_0)
    bool_0 = var_0.__eq__(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_box()


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.filter(var_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.ap(var_1)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_1, bool_1)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(bool_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.bind(bool_0)


def test_case_7():
    float_0 = 234.6839
    int_0 = 1596
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.ap(float_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_0.to_either()
    complex_0 = -3311.7 + 2693j
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.get_or_else(none_type_0)
    var_2.to_validation()


def test_case_10():
    complex_0 = -72.5 + 494.5763j
    tuple_0 = (complex_0,)
    set_0 = {tuple_0, tuple_0}
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(set_0)


def test_case_11():
    bytes_0 = b"\x96"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_12():
    bytes_0 = b"\x92uG\xd0\xafa\xb5p]\x8d\x9eA]\x80"
    int_0 = -1762
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.bind(var_0)
    bool_0 = var_0.__eq__(var_0)
    var_2 = var_1.to_box()
    bytes_0.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_0.filter(var_1)


def test_case_14():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, generic_0)
    var_1 = maybe_1.filter(bool_0)
    var_2 = var_1.filter(generic_0)
    var_3 = maybe_1.bind(generic_0)
    object_0 = module_2.object()
    bool_1 = False
    var_4 = var_3.ap(generic_0)
    var_5 = var_2.bind(var_4)
    bool_2 = var_1.__eq__(generic_0)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_6 = var_3.ap(bool_0)
    maybe_2.filter(object_0)


def test_case_15():
    bytes_0 = b"\x92uG\xd0\xafa\xb5p]\x8d\x9eA]\x80"
    int_0 = -1762
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.bind(var_0)
    bool_0 = var_0.__eq__(var_0)
    var_2 = var_1.to_box()
    var_3 = var_0.to_try()
    var_3.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"\x19s\xdc\xad\xc1"
    var_0 = maybe_0.to_validation()
    str_0 = "yzL8\r({c2gk).}~|!@m"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.filter(bytes_0)
    var_2 = maybe_0.to_try()
    maybe_0.filter(var_2)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_validation()


def test_case_18():
    float_0 = -399.93
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(var_0)


def test_case_19():
    bytes_0 = b"\x92uG\xd0\xafa\xb5p]\x8d\x9eA]\x80"
    int_0 = -1762
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.bind(bytes_0)
    var_2 = maybe_0.bind(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_1 = var_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(var_2)
    bool_3 = var_0.__eq__(var_0)
    var_3 = var_1.to_box()
    var_4 = var_1.filter(bool_1)
    var_5 = var_4.to_either()
    var_6 = var_4.to_try()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = module_0.Maybe(var_1, bool_1)
    var_2.map(bool_1)


def test_case_21():
    bytes_0 = b"\x92uG\xd0\xafa\xb5p]\x8d\x9eA]\x80"
    none_type_0 = None
    int_0 = -1762
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.bind(var_2)
    var_4 = maybe_1.bind(var_2)
    var_5 = maybe_0.get_or_else(var_2)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_4, bool_0)
    bool_1 = var_4.__eq__(maybe_1)
    bool_2 = maybe_1.__eq__(var_4)
    var_6 = maybe_1.ap(none_type_0)
    var_7 = maybe_1.map(none_type_0)
    var_8 = var_7.to_try()
    var_9 = maybe_1.get_or_else(var_2)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_10 = maybe_1.bind(var_6)
    var_11 = var_7.ap(var_10)
    var_12 = var_0.to_lazy()
    var_13 = var_3.to_box()
    var_14 = var_3.filter(bool_1)
    var_15 = var_14.to_either()
    maybe_0.filter(var_2)
