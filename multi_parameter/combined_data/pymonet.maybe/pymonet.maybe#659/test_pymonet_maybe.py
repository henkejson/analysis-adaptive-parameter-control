# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    str_0 = "G&x~q"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    int_0 = 698
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.ap(int_0)
    var_3 = var_2.bind(tuple_0)
    var_4 = var_3.filter(none_type_1)
    var_5 = var_4.filter(none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    none_type_2 = None
    var_6 = maybe_1.to_lazy()
    var_7 = maybe_1.ap(none_type_2)
    bool_1 = maybe_1.__eq__(none_type_2)
    var_8 = var_2.map(var_1)
    bool_2 = var_5.__eq__(maybe_1)
    var_9 = var_4.filter(var_0)


def test_case_3():
    float_0 = 2101.1
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(float_0, object_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.bind(maybe_0)
    var_4 = var_0.to_box()
    var_0.to_either()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_try()
    none_type_1 = None
    var_3 = maybe_0.map(var_1)
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_4 = maybe_2.to_box()
    var_5 = var_2.bind(var_4)
    var_6 = var_2.map(var_1)
    bool_1 = maybe_2.__eq__(var_2)
    var_7 = var_2.filter(var_2)


def test_case_5():
    bool_0 = False
    bool_1 = True
    bool_2 = True
    dict_0 = {bool_1: bool_1, bool_2: bool_2, bool_2: bool_0}
    dict_1 = {bool_0: bool_0, bool_0: bool_2, bool_0: bool_2, bool_0: bool_2}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_1, none_type_0)
    maybe_0.map(dict_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"\xbe\xdd\x05"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    int_0 = 698
    bool_0 = True
    none_type_0 = None
    tuple_0 = ()
    none_type_1 = None
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(none_type_1)
    var_3 = maybe_0.bind(tuple_0)
    var_4 = var_3.filter(none_type_0)
    var_5 = var_1.to_validation()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    none_type_2 = None
    var_6 = maybe_1.ap(none_type_2)
    bool_1 = maybe_1.__eq__(none_type_2)
    var_7 = maybe_0.ap(var_6)
    var_8 = maybe_1.get_or_else(maybe_1)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.filter(set_0)


def test_case_10():
    bytes_0 = b"\xdfI<\xd2?*Z\xbey\x15mv\xc0\xdb\x9f\x01\xc9\xae\xe0"
    object_0 = module_1.object()
    dict_0 = {bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    var_0 = maybe_0.get_or_else(object_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.get_or_else(maybe_1)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.get_or_else(tuple_0)
    maybe_1.filter(maybe_1)


def test_case_12():
    int_0 = 1348
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.to_validation()
    var_2.to_validation()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_try()
    var_4.ap(var_3)


def test_case_14():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    dict_0 = {}
    generic_0 = module_2.Generic(**dict_0)
    var_0 = maybe_0.filter(dict_0)
    set_0 = {generic_0}
    bytes_0 = b"Y\xaa\xe2\x02\x7f\xc4=\xd5\xa7-\r\x80\x8f\x1aj"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = var_0.to_box()
    maybe_1.filter(set_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    int_0 = 1983
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_lazy()
    int_0 = -237
    var_2 = maybe_0.map(var_1)
    bool_1 = False
    int_1 = 0
    var_3 = var_1.to_validation()
    bool_2 = True
    maybe_1 = module_0.Maybe(int_1, bool_2)
    var_4 = maybe_1.get_or_else(bool_1)
    var_4.ap(int_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.get_or_else(bool_0)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_box()
    var_7 = var_5.map(maybe_1)
    var_5.get_or_else(var_5)


def test_case_20():
    int_0 = 698
    bool_0 = True
    none_type_0 = None
    tuple_0 = ()
    none_type_1 = None
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = maybe_0.to_either()
    var_2 = var_0.map(none_type_1)
    var_3 = var_0.ap(int_0)
    var_4 = var_3.bind(tuple_0)
    var_5 = var_1.map(var_3)
    var_6 = maybe_0.filter(var_1)
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    var_7 = maybe_0.to_lazy()
    var_8 = var_5.ap(maybe_0)
    bool_1 = var_6.__eq__(maybe_1)
    var_9 = var_5.to_try()
    var_10 = var_6.to_validation()
    bool_2 = False
    maybe_2 = module_0.Maybe(tuple_0, bool_2)
    var_11 = var_8.to_box()
    var_12 = maybe_2.get_or_else(none_type_0)
    bool_3 = var_0.__eq__(maybe_2)
    var_8.filter(var_0)
