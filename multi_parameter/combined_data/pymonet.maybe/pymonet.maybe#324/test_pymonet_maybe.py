# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)


def test_case_3():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.map(bool_0)
    bool_1 = var_0.__eq__(bool_0)
    var_2 = var_1.ap(none_type_0)
    var_3 = maybe_0.bind(var_2)
    dict_0 = {int_0: var_2}
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_4 = var_2.filter(var_2)
    var_5 = var_2.to_either()
    var_6 = var_5.to_lazy()


def test_case_4():
    tuple_0 = ()
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    tuple_1 = (bool_1,)
    bool_2 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_2)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(tuple_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(var_1, var_2)
    var_2.ap(maybe_1)


def test_case_5():
    none_type_0 = None
    int_0 = 1174
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    list_0 = [int_0]
    bool_1 = True
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.filter(list_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_0.bind(var_2)


def test_case_6():
    int_0 = -195
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(int_0)


def test_case_7():
    int_0 = -4550
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.ap(int_0)
    maybe_2 = module_0.Maybe(var_1, int_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_1 = maybe_1.ap(var_0)


def test_case_9():
    str_0 = "@4*X6/ZP.zy+YmcM~"
    int_0 = 2283
    maybe_0 = module_0.Maybe(str_0, int_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.get_or_else(str_0)
    maybe_1 = module_0.Maybe(str_0, var_1)
    var_2 = maybe_1.to_either()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bytes_0 = b"\x98N\x0ft\x0eJ"
    complex_0 = 307.2 - 2311.33013j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    set_0 = set()
    maybe_0 = module_0.Maybe(dict_0, set_0)
    var_0 = maybe_0.get_or_else(bytes_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_try()
    var_1.bind(var_2)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    int_0 = -2839
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(int_0)
    bool_0 = var_3.__eq__(var_1)


def test_case_16():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.map(bool_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.to_try()
    var_4 = var_0.ap(var_3)
    var_5 = var_1.bind(var_4)
    bool_1 = var_4.__eq__(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_3, bool_2)
    var_6 = var_2.filter(var_5)
    maybe_1.filter(var_1)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_19():
    bytes_0 = b""
    float_0 = 127.43
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(bytes_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_21():
    int_0 = -2839
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = var_0.ap(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(int_0)
    var_4 = var_2.to_try()
    maybe_1 = module_0.Maybe(var_4, var_4)


def test_case_22():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_0)
    var_1.to_either()


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_24():
    str_0 = "@4*X6/ZP.zy+YmcM~"
    str_1 = "*/jQqt2"
    maybe_0 = module_0.Maybe(str_0, str_1)
    var_0 = maybe_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.ap(str_1)
    maybe_2 = module_0.Maybe(bool_0, var_1)


def test_case_25():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_26():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = module_0.Maybe(none_type_0, int_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.map(bool_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_3 = var_2.ap(none_type_0)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_2.bind(var_2)
    var_6 = var_5.to_try()
    bool_2 = False
    var_7 = maybe_1.ap(bool_2)
    var_8 = var_2.bind(var_7)
    float_0 = -1827.4583
    bool_3 = var_7.__eq__(var_0)
    set_0 = {float_0}
    maybe_2 = module_0.Maybe(set_0, var_3)
    bool_4 = False
    maybe_3 = module_0.Maybe(var_5, bool_4)
    var_9 = var_4.filter(var_3)
    var_10 = var_5.to_lazy()
    var_6.ap(var_5)
