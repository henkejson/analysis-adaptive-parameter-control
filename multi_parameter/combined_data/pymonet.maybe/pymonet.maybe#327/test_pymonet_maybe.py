# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    bool_0 = False
    bytes_0 = b"p\xf1vP\x8d\xe1h^\xff"
    bool_1 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.to_try()
    maybe_0.ap(bool_0)


def test_case_3():
    int_0 = -1379
    set_0 = {int_0, int_0}
    int_1 = -2470
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(int_1, int_1)
    var_1 = maybe_1.get_or_else(set_0)
    var_2 = maybe_1.bind(set_0)
    bool_1 = maybe_1.__eq__(set_0)
    var_3 = var_2.to_lazy()


def test_case_4():
    str_0 = "c)G6\x0c=i]?$m'Cq#dF\n(l"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = False
    bool_3 = True
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    var_2 = var_1.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_4 = maybe_0.__eq__(bool_0)
    bool_5 = var_2.__eq__(bool_0)
    var_3 = maybe_1.filter(var_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_0.bind(var_2)
    var_6 = var_5.map(var_1)


def test_case_5():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_box()
    maybe_0.map(var_1)


def test_case_6():
    str_0 = ".?H;afiIO|"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_box()
    var_0.map(str_0)


def test_case_7():
    complex_0 = 4151.14434 + 3273j
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(complex_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    maybe_1.filter(var_0)


def test_case_9():
    bytes_0 = b"_#\xf7C\xf2"
    none_type_0 = None
    int_0 = 699
    tuple_0 = (int_0,)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(bytes_0)


def test_case_10():
    str_0 = ".?H;afiIO|"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = var_1.get_or_else(var_2)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_4 = maybe_1.to_either()
    bool_2 = False
    maybe_2 = module_0.Maybe(var_2, bool_2)
    bool_3 = maybe_1.__eq__(maybe_2)
    bool_4 = maybe_0.__eq__(maybe_2)
    var_2.filter(var_2)


def test_case_11():
    float_0 = 1793.3
    set_0 = {float_0}
    int_0 = 765
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.map(set_0)


def test_case_12():
    float_0 = -708.297
    tuple_0 = (float_0,)
    tuple_1 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_1)
    float_1 = 659.0
    set_0 = {float_1, float_1}
    maybe_1 = module_0.Maybe(set_0, float_1)
    var_0 = maybe_1.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    none_type_1 = None
    none_type_2 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_2, bool_0)
    maybe_1.filter(none_type_1)


def test_case_15():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_16():
    int_0 = -305
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_1.map(int_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.filter(int_0)
    bool_2 = False
    var_5 = var_4.ap(bool_2)
    var_6 = var_0.to_lazy()
    var_7 = maybe_0.to_try()
    var_8 = var_3.to_box()
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_9 = var_0.to_either()
    maybe_3 = module_0.Maybe(var_1, var_2)
    bool_3 = var_9.__eq__(var_3)
    bool_4 = var_8.__eq__(var_4)
    var_10 = var_2.filter(var_6)
    var_11 = var_10.to_box()
    list_0 = [none_type_0]
    var_11.get_or_else(list_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_1 = maybe_0.__eq__(var_1)
    maybe_1.filter(var_0)


def test_case_18():
    int_0 = -305
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.to_validation()
