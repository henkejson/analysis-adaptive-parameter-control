# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -260.518
    str_0 = "9x S`b2m"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(float_0)
    bool_0 = var_0.__eq__(str_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_either()
    var_4 = var_0.to_either()
    var_5 = var_0.ap(var_4)
    var_6 = var_5.to_lazy()
    var_7 = var_4.to_box()
    var_8 = var_4.to_box()


def test_case_3():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.bind(bytes_0)
    bool_0 = True
    var_3 = var_0.to_box()
    bool_1 = var_0.__eq__(var_0)
    var_4 = maybe_0.filter(var_2)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_4, bool_2)
    var_5 = var_4.map(bool_0)
    maybe_1.filter(bool_2)


def test_case_4():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = 'V[{F:LLk8N"]VlUqOyM'
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    maybe_0.map(list_0)


def test_case_5():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bool_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(none_type_0)


def test_case_7():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_3 = var_2.bind(bool_0)
    maybe_1.filter(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_10():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bool_0)


def test_case_11():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.bind(bytes_0)
    bool_0 = var_0.__eq__(var_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_0.filter(var_2)
    var_4 = var_0.ap(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_5 = maybe_1.get_or_else(bool_0)
    var_6 = var_2.get_or_else(var_4)
    var_7 = var_3.bind(var_4)
    maybe_1.filter(var_0)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_2.ap(bool_0)


def test_case_13():
    int_0 = 241
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    float_0 = 1388.573
    dict_0 = {}
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(float_0)
    generic_0 = module_1.Generic(**dict_0)
    list_0 = [generic_0, dict_0, dict_0]
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_3 = maybe_1.to_either()
    var_3.filter(var_1)


def test_case_14():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bool_0)


def test_case_15():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_try()
    var_2.to_box()


def test_case_16():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(bool_0)


def test_case_17():
    str_0 = "WYW\x0bow}z;>"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_18():
    str_0 = "Left[T]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    int_0 = -810
    bool_1 = True
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_1 = maybe_2.to_try()
    var_2 = maybe_2.to_box()


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_20():
    bytes_0 = b"\xc6\x93&\xa0\xc7[\xe1\xb9\xb2\x9e7\xbc"
    bytes_1 = b"\x08V\xf5"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bytes_1)
    var_1 = var_0.bind(bytes_0)
    var_2 = var_1.to_validation()
    generic_0 = module_1.Generic()


def test_case_21():
    float_0 = 901.272
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_validation()
    var_4 = var_0.to_try()
    var_5 = var_0.bind(var_0)
    var_6 = var_3.to_try()
    var_6.to_box()


def test_case_22():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.bind(bytes_0)
    bool_0 = var_0.__eq__(var_0)
    var_3 = maybe_0.filter(var_2)
    maybe_1 = module_0.Maybe(var_3, var_0)
    var_4 = var_1.filter(bool_0)


def test_case_23():
    bytes_0 = b"\x8e\r!\xb7\xda\x84V"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_box()
    bool_0 = maybe_0.__eq__(var_0)
    var_3 = var_1.filter(var_0)
    var_4 = var_0.ap(var_2)
    bool_1 = False
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    none_type_0 = None
    var_5 = maybe_0.bind(none_type_0)
    maybe_1.filter(var_0)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = var_2.to_try()
    var_1.ap(maybe_1)
