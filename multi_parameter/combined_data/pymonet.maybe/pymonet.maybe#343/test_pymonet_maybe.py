# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 114
    var_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 114
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.bind(var_1)
    bool_1 = var_1.__eq__(var_2)
    var_4 = var_1.ap(maybe_0)
    var_5 = maybe_0.map(var_4)
    var_6 = var_4.filter(var_4)
    var_7 = var_4.to_lazy()
    bool_2 = var_3.__eq__(bool_0)
    var_8 = var_3.to_try()
    var_8.to_box()


def test_case_3():
    bytes_0 = b"A\x19\x8cW5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.filter(var_1)
    var_3 = maybe_0.to_lazy()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.map(var_0)


def test_case_5():
    int_0 = 114
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_box()
    var_4 = var_1.filter(var_0)
    var_5 = maybe_0.bind(var_2)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_6 = var_5.filter(var_2)
    maybe_1.filter(maybe_0)


def test_case_6():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(maybe_0)


def test_case_7():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_either()
    maybe_0.bind(none_type_0)


def test_case_9():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_10():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    none_type_0 = None
    var_2 = var_0.to_validation()
    maybe_0.ap(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.filter(var_1)
    var_4 = maybe_1.to_try()
    var_5 = var_2.ap(var_1)
    maybe_0.filter(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.to_try()


def test_case_13():
    int_0 = 114
    int_0.to_either()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.bind(bool_0)


def test_case_15():
    float_0 = 3131.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.map(var_0)


def test_case_16():
    int_0 = 114
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = module_0.Maybe(var_0, var_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.bind(var_1)
    bool_1 = var_1.__eq__(var_2)
    bool_2 = var_1.__eq__(var_2)
    var_4 = var_1.to_box()
    var_4.map(var_1)
