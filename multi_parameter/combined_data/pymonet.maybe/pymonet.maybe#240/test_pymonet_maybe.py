# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xaf\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xe5\xc9B\x9e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(bytes_0, none_type_0)
    var_1 = var_0.to_either()
    var_2 = maybe_2.to_validation()
    var_3 = maybe_2.to_try()
    bool_1 = maybe_2.__eq__(var_3)
    maybe_3 = module_0.Maybe(bytes_0, var_2)
    maybe_2.bind(bytes_0)


def test_case_3():
    complex_0 = 2898 - 692.44j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_1 = maybe_1.ap(maybe_0)
    maybe_1.filter(var_1)


def test_case_4():
    float_0 = -1379.0
    str_0 = ""
    tuple_0 = (float_0, float_0, str_0)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    dict_0 = {}
    str_0 = "nhOQ\x0csZ[ 0_2m3"
    str_1 = "\tHk_R_&7V \x0cGM&^D"
    maybe_0 = module_0.Maybe(str_1, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_try()
    dict_1 = {str_0: var_1, str_1: var_1}
    bool_0 = True
    tuple_0 = (dict_1, bool_0)
    maybe_1 = module_0.Maybe(tuple_0, dict_1)
    var_2 = maybe_1.to_try()
    var_3 = var_2.filter(dict_0)


def test_case_6():
    str_0 = "Lazy[T, U]"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_7():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    none_type_0 = None
    var_0 = maybe_0.ap(object_0)
    var_1 = var_0.ap(none_type_0)


def test_case_8():
    complex_0 = 2898 - 692.44j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    maybe_1.filter(complex_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_1)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_1)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_2.filter(var_0)


def test_case_12():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_1 = {}
    bool_2 = True
    maybe_0 = module_0.Maybe(dict_1, bool_2)
    var_0 = maybe_0.ap(dict_0)
    var_1 = var_0.to_box()
    var_1.bind(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.map(none_type_0)


def test_case_14():
    bytes_0 = b"\xb1z\x80\xf7G"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_16():
    complex_0 = 2898 - 692.44j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = maybe_0.ap(complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_2.to_try()
    maybe_1.filter(var_2)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    complex_0 = 755.7 - 1903.73749j
    str_0 = "+"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(complex_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_validation()
    var_4.bind(var_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = True
    var_0 = maybe_0.get_or_else(bool_1)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_1 = maybe_1.to_either()
    maybe_0.bind(var_1)


def test_case_21():
    complex_0 = -2479.219752 - 1117.2333j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.filter(complex_0)
    var_5 = maybe_0.ap(complex_0)
    var_6 = var_3.to_box()
    bool_0 = var_1.__eq__(maybe_0)
    var_7 = var_2.to_either()
    var_8 = var_4.get_or_else(var_7)
    var_9 = var_4.to_try()
    var_10 = var_5.to_validation()
    var_6.map(bool_0)


def test_case_22():
    complex_0 = -2479.219752 - 1117.2333j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = module_0.Maybe(var_3, var_0)
    var_5 = var_4.to_lazy()
    var_6 = var_2.filter(var_5)
    var_7 = maybe_0.to_try()
    var_8 = var_1.ap(var_7)
    var_9 = var_1.to_box()
    var_10 = var_0.get_or_else(var_1)
    bool_0 = var_10.__eq__(var_0)
    var_11 = var_8.to_either()
    var_5.get_or_else(none_type_0)
