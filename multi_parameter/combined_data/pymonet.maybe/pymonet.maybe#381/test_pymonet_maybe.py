# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_1.to_try()
    var_3 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_4 = var_3.bind(var_3)
    var_5 = var_1.ap(var_0)
    var_6 = var_3.to_box()
    var_7 = var_5.to_validation()
    var_8 = var_4.map(bool_0)
    var_9 = maybe_0.to_try()
    var_10 = var_3.ap(var_2)
    var_11 = var_7.to_box()


def test_case_4():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.to_lazy()
    bool_1 = var_1.__eq__(var_0)
    var_3 = var_0.bind(var_1)
    var_4 = var_0.ap(bool_0)
    var_5 = maybe_0.to_validation()
    var_6 = var_2.to_box()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    complex_0 = 4818.35 - 68.7j
    int_0 = -652
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(complex_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_1)


def test_case_7():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.filter(generic_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(generic_0, bool_1)
    var_1 = maybe_1.to_either()
    maybe_1.bind(var_1)


def test_case_8():
    float_0 = -1950.428747
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(float_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_2.to_box()


def test_case_9():
    int_0 = 4386
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    str_0 = "-sW)hEVLR_^X"
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.ap(str_0)


def test_case_10():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = var_0.to_box()
    maybe_1.filter(maybe_1)


def test_case_11():
    str_0 = "tSL\\w7EB)B#i(rY%"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_try()


def test_case_12():
    bool_0 = True
    bytes_0 = b"\x08\x97"
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.filter(bytes_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_1.map(maybe_0)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_either()


def test_case_14():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_validation()
    var_0.bind(var_0)


def test_case_16():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.ap(bool_0)


def test_case_17():
    none_type_0 = None
    str_0 = "F.scfPB#|F"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_18():
    complex_0 = 1049 - 615j
    float_0 = -2526.25472
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_1.to_validation()
    var_1.get_or_else(float_0)


def test_case_19():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.ap(var_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_3 = var_1.to_lazy()
    var_4 = maybe_1.get_or_else(set_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_5 = var_2.to_box()
    maybe_1.filter(maybe_1)
