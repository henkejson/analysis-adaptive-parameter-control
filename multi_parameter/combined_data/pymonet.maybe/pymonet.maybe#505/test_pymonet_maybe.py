# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 2799
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "\n    Data type for storage any type of data\n    "
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    float_0 = -2971.0
    maybe_1 = module_0.Maybe(float_0, float_0)
    bool_1 = maybe_1.__eq__(float_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_try()
    var_3 = var_1.to_validation()
    var_1.bind(float_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_lazy()
    maybe_1.filter(bool_0)


def test_case_5():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(set_0, set_0)
    maybe_1.map(set_0)


def test_case_6():
    str_0 = "TLCni"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_2, var_2)
    var_4 = maybe_0.filter(var_2)
    var_5 = maybe_0.to_either()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = maybe_0.ap(var_0)
    maybe_1.filter(var_3)


def test_case_9():
    complex_0 = -483.758789 - 433.194j
    int_0 = -2954
    str_0 = "v<L.F`o65kR"
    tuple_0 = (str_0,)
    dict_0 = {int_0: str_0}
    tuple_1 = (int_0, tuple_0, dict_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    maybe_0.ap(complex_0)


def test_case_10():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    str_0 = "\n    Data type for storage any type of data\n    "
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.filter(bool_0)
    var_1 = var_0.get_or_else(bool_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "\n    Data type for storage any type of data\n    "
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_12():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    int_0 = 2799
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_either()
    var_1.filter(maybe_0)


def test_case_15():
    int_0 = 2799
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    none_type_2 = None
    maybe_0 = module_0.Maybe(none_type_2, none_type_2)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(none_type_1)
    var_3 = var_2.map(bool_0)
    var_3.get_or_else(none_type_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(bool_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_19():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.get_or_else(bool_1)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_box()
    bool_3 = maybe_0.__eq__(bool_2)
    var_3 = maybe_0.to_validation()
    maybe_0.ap(none_type_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_2.filter(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_4 = var_0.to_validation()
    bool_2 = maybe_0.__eq__(var_2)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.ap(var_0)
    maybe_1.filter(bool_2)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "\n    Data type for storage any type of data\n    "
    var_1 = var_0.to_either()
    bool_1 = maybe_0.__eq__(str_0)
    str_1 = "TLCni"
    str_2 = "\n    Data type for storage any type of data\n    "
    bool_2 = False
    var_2 = maybe_0.filter(bool_2)
    bool_3 = True
    maybe_1 = module_0.Maybe(str_2, bool_3)
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = var_2.bind(str_1)


def test_case_23():
    str_0 = "TLCni"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.ap(var_2)
    var_4 = var_3.to_validation()
    bool_0 = var_3.__eq__(maybe_0)
    var_5 = var_0.bind(var_1)
    bytes_0 = b"\x8f\xcb_W\xc5\xba\x0cU\x0f\xb2\xf9\xfe\x8f\xfb$\xd8\x87w\xf9"
    var_1.bind(bytes_0)
