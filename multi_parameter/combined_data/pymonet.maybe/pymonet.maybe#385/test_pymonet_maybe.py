# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    float_0 = 4211.53709
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x1ett\xd7\xe3W\xfe\xef\xb4\x85\xb2\xca\xc7\x07`Q"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bytes_1 = b"\xb5"
    var_0 = maybe_0.ap(bytes_1)
    bool_0 = var_0.__eq__(var_0)


def test_case_3():
    float_0 = -1580.996
    bytes_0 = b"\xb7\x89a\xea\xff\x9a$\xf1\xdb\x82\x80a\x08\xab\xff\x82\xf0\xbe"
    set_0 = {bytes_0, float_0, float_0, float_0}
    tuple_0 = (float_0, bytes_0, set_0)
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(tuple_0)


def test_case_4():
    none_type_0 = None
    str_0 = "VYTu?FZ\\Z4!"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_1.to_validation()
    var_3.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b"\xa2\x85\x9f\xa4[\xa9"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(bytes_0)


def test_case_7():
    float_0 = 258.2493
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)
    maybe_1.bind(var_0)


def test_case_8():
    str_0 = "5$ebm"
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.filter(none_type_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    int_0 = 963
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    var_0 = maybe_1.get_or_else(bool_1)
    var_0.to_try()


def test_case_11():
    bytes_0 = b"\xa2\x85\x9f\xa4[\xa9"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = var_1.to_either()
    var_4 = var_3.ap(var_3)


def test_case_12():
    str_0 = "\x0bNB\n2"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.bind(str_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.filter(none_type_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    generic_0 = module_1.Generic()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(generic_0, bool_1)
    var_4 = maybe_1.ap(generic_0)
    var_5 = maybe_1.bind(maybe_1)
    var_6 = maybe_1.to_try()
    var_6.to_lazy()


def test_case_15():
    float_0 = 4211.53709
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    str_0 = "6b-jc5;9\nFU l"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_try()
    var_1.ap(str_0)


def test_case_17():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_validation()


def test_case_18():
    float_0 = -3941.603
    list_0 = [float_0, float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_lazy()


def test_case_19():
    object_0 = module_2.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_20():
    str_0 = '2-"TNY~JY%'
    maybe_0 = module_0.Maybe(str_0, str_0)
    bytes_0 = b"\xb5"
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_5 = var_3.filter(var_4)
    maybe_1 = module_0.Maybe(var_5, bool_0)
    var_5.to_try()


def test_case_21():
    str_0 = " }r$BwMOp"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bytes_0 = b"\x1ett\xd7\xe3W\xfe\xef\xb4\x85\xb2\xca\xc7\x07`Q"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    bytes_1 = b"\xb5"
    var_0 = maybe_1.ap(bytes_1)
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_0)
    bool_1 = var_3.__eq__(var_1)
    var_4 = maybe_1.ap(maybe_1)
    var_5 = var_2.to_lazy()
    bool_2 = var_5.__eq__(maybe_1)
    var_6 = var_0.to_try()
    bool_3 = False
    maybe_2 = module_0.Maybe(var_3, bool_3)
    bool_4 = maybe_2.__eq__(maybe_2)
    maybe_2.filter(maybe_2)
