# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "P:O"
    bytes_0 = b"4\xcc;T\xc6\xf9\x1f\x899\xae\xa3c\x91\xfav\xb76\x91y"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(str_0)


def test_case_3():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    str_0 = "\n    Return the first element of the list which matches the keys, or None if no element matches.\n\n    :param collection: collection to search\n    :type collection: List[A]\n    :param key: function to decide witch element should be found\n    :type key: Function(A) -> Boolean\n    :returns: element of collection or None\n    :rtype: A | None\n    "
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_1 = "All[value={}]"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.map(list_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(str_0)
    var_2.to_validation()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    float_0 = 1576.8665
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_try()
    bool_1 = True
    bool_2 = var_1.__eq__(bool_1)
    bool_3 = var_1.__eq__(maybe_0)


def test_case_6():
    str_0 = "n2\tPZu!\\0yz$$75"
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_lazy()
    bool_2 = var_0.__eq__(var_0)
    var_4 = maybe_0.to_either()
    bool_3 = False
    maybe_1 = module_0.Maybe(var_1, bool_3)
    var_5 = var_4.ap(bool_1)
    var_6 = var_1.to_try()
    maybe_1.bind(maybe_1)


def test_case_7():
    complex_0 = -2979.03694 - 1001.7554j
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(complex_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = var_1.ap(complex_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_4 = var_3.to_lazy()
    var_2.to_box()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    float_0 = 3582.7900538955837
    var_0 = maybe_0.get_or_else(float_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(bool_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.filter(var_0)


def test_case_11():
    int_0 = 2244
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.to_try()
    var_2.to_validation()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    dict_0 = {}
    bytes_0 = b"O\xa4\x16\xbf\x1d|\xaf\x91\x9bN\xb0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(dict_0)


def test_case_15():
    int_0 = -2657
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_1 = maybe_2.to_try()
    var_1.ap(bool_0)


def test_case_17():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    bool_0 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = maybe_1.to_try()
    var_2.to_either()


def test_case_18():
    complex_0 = -2979.03694 - 1001.7554j
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(complex_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_3 = var_2.to_lazy()
    var_4 = var_1.bind(var_3)
    var_5 = var_1.to_validation()
    var_5.to_validation()


def test_case_19():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    tuple_1 = (dict_0,)
    bool_0 = True
    maybe_1 = module_0.Maybe(tuple_1, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.ap(tuple_0)
    var_4 = var_3.bind(var_1)
    maybe_2 = module_0.Maybe(tuple_0, tuple_0)
    var_5 = maybe_2.to_either()
    var_6 = var_5.to_try()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    float_0 = 2328.61
    tuple_2 = (list_0, list_0, list_0, float_0)
    int_0 = 4700
    maybe_3 = module_0.Maybe(int_0, int_0)
    var_7 = maybe_3.bind(tuple_2)
    var_8 = var_7.to_box()


def test_case_20():
    int_0 = 792
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    bool_0 = maybe_1.__eq__(maybe_1)
    var_2.get_or_else(int_0)


def test_case_21():
    str_0 = "n2\tPZu!\\0yz$$75"
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.filter(bool_0)
    bool_2 = var_1.__eq__(bool_0)
    bool_3 = True
    bytes_0 = b"^\xd4Q\xaf\x86\x05\x1ec\x12\xd8\x00\x9c\xe2\x96\xca"
    bool_4 = var_1.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bool_3, var_0)
    var_2 = var_0.ap(str_0)
    var_3 = var_1.get_or_else(maybe_0)
    var_4 = var_0.to_validation()
    var_5 = var_3.to_try()
    var_6 = var_0.ap(bytes_0)
    bool_5 = var_3.__eq__(maybe_1)
    var_4.to_validation()


def test_case_22():
    str_0 = "n2\tPZu!\\0yz$$75"
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_lazy()
    var_5 = var_3.map(var_2)
    var_6 = var_0.to_box()
    var_7 = maybe_0.ap(var_6)
    bool_2 = var_1.__eq__(var_1)
    var_5.to_lazy()
