# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\xe9/^@\x17Z"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = var_0.__eq__(bytes_0)
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    object_0 = module_1.object()
    var_1 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(object_0)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.ap(bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_4 = maybe_1.map(var_1)
    var_5 = var_4.to_either()
    var_6 = var_0.to_either()
    var_7 = maybe_1.to_try()
    var_8 = var_6.to_try()
    var_9 = var_3.to_validation()


def test_case_3():
    str_0 = "Skd>59csYerCsfg"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_try()
    var_2 = var_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)


def test_case_4():
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Max[B]\n        :returns: new Max with largest value\n        :rtype: Max[A | B]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.ap(maybe_1)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.bind(maybe_0)
    var_3 = var_2.filter(var_0)
    bool_1 = var_3.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_4 = var_2.to_try()
    var_5 = var_2.map(var_4)


def test_case_6():
    bool_0 = False
    int_0 = 494
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(int_0)


def test_case_7():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    maybe_0.ap(set_0)


def test_case_8():
    none_type_0 = None
    int_0 = 841
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_1.bind(var_1)
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_validation()
    var_5 = var_1.ap(var_4)
    var_6 = var_2.to_validation()
    var_7 = var_1.filter(var_5)
    bool_1 = var_2.__eq__(var_2)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    var_8 = var_5.ap(var_1)
    var_9 = var_3.to_lazy()
    maybe_1.filter(var_9)


def test_case_10():
    dict_0 = {}
    none_type_0 = None
    object_0 = module_1.object(**dict_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.to_lazy()
    maybe_1.bind(var_2)


def test_case_11():
    str_0 = "("
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_1.bind(var_2)
    var_4 = var_3.filter(var_2)
    var_5 = var_2.ap(var_3)
    var_6 = maybe_1.to_lazy()
    var_7 = maybe_1.to_lazy()
    var_8 = maybe_1.to_try()
    var_9 = maybe_1.to_either()
    var_6.to_lazy()


def test_case_12():
    int_0 = -336
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()
    list_0 = [var_0, maybe_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, set_0)
    var_1 = maybe_1.to_either()
    var_1.ap(int_0)


def test_case_13():
    str_0 = "1\nf@%pnj"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_0.filter(var_0)


def test_case_14():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    bool_1 = var_1.__eq__(object_0)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"\xe9/^@\x17Z"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    bool_0 = var_1.__eq__(bytes_0)
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    object_0 = module_1.object()
    var_2 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(object_0)
    var_3 = maybe_1.ap(bool_1)
    var_2.to_either()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(none_type_0)


def test_case_17():
    bool_0 = False
    bool_0.to_box()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.map(var_0)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.ap(bool_0)
    var_5 = var_4.bind(var_3)
    var_6 = var_5.filter(var_0)
    bool_1 = var_6.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_3)
    var_7 = var_5.to_try()
    var_8 = var_5.map(var_7)
    var_9 = maybe_1.to_box()
    var_3.bind(var_0)


def test_case_19():
    dict_0 = {}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_1.ap(none_type_0)


def test_case_20():
    none_type_0 = None
    bytes_0 = b"\xe9/^@\x17Z"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = var_0.__eq__(bytes_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.map(var_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_3.bind(var_1)
    var_5 = var_4.filter(var_0)
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_6 = var_4.to_validation()
    var_7 = var_4.filter(maybe_1)
    var_8 = var_7.ap(var_6)
    var_9 = var_1.to_validation()
    maybe_2 = module_0.Maybe(var_4, var_6)
    bool_1 = maybe_2.__eq__(var_2)
    var_10 = var_7.bind(var_8)
    var_11 = var_0.to_validation()
    var_12 = var_7.filter(var_4)
    var_13 = var_5.ap(var_1)
    var_14 = var_4.filter(var_7)
    var_15 = var_0.map(var_0)
    var_16 = var_14.to_either()
    var_6.to_validation()
