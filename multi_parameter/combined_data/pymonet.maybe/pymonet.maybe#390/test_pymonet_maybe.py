# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    float_0 = 1297.688
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.to_box()
    bool_2 = maybe_2.__eq__(bool_0)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"D\xe0\xbe\x9e\x9a\x87\xe5\\D}J\x97D\xaa\xe1\x93\xcb\x06\xbb"
    float_0 = 1297.688
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_5():
    bytes_0 = b'dp\x83\xb6\x8c\x90@\x10"\x1c\xe8\xa2B\x0e\xe3'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_6():
    str_0 = "IoK1i#"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_try()


def test_case_7():
    generic_0 = module_1.Generic()
    int_0 = 3188
    object_0 = module_2.object()
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(object_0, bool_0)
    maybe_1.ap(int_0)


def test_case_8():
    float_0 = -2394.4
    int_0 = 4456
    bytes_0 = b"\xeb\xe6\xbc\xbb\xc4\xa1z\x1ab\x96K\xde\xb3\xd5\xe2\xcf"
    generic_0 = module_1.Generic()
    tuple_0 = (generic_0,)
    tuple_1 = (tuple_0,)
    tuple_2 = (tuple_1,)
    tuple_3 = (float_0, int_0, bytes_0, tuple_2)
    bytes_1 = b"\xd4`\x08-H\x16\r \x1b\xba-]m"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(tuple_3)
    var_1 = var_0.to_try()


def test_case_9():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(none_type_0)
    none_type_1 = None
    bool_0 = False
    bool_1 = var_0.__eq__(var_1)
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_2 = maybe_1.bind(none_type_1)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_try()
    var_5 = var_0.to_box()


def test_case_11():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    bytes_0 = b"#W'$\xe6\x85JB\x9b"
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    maybe_0.map(maybe_0)


def test_case_15():
    int_0 = -3319
    list_0 = [int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    int_0 = -763
    tuple_0 = (int_0,)
    maybe_1 = module_0.Maybe(tuple_0, int_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.bind(maybe_0)
    bool_2 = maybe_0.__eq__(tuple_0)
    list_0 = [tuple_0, bool_2]
    bool_3 = False
    maybe_3 = module_0.Maybe(list_0, bool_3)


def test_case_17():
    int_0 = 2275
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_18():
    float_0 = -843.497
    list_0 = [float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(list_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.bind(list_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.to_box()
    var_4 = var_1.to_either()
    bool_1 = var_1.__eq__(maybe_1)
    list_0.map(list_0)


def test_case_19():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_try()
    none_type_0 = None
    var_2 = maybe_1.filter(none_type_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(set_0, bool_2)
    var_3 = var_2.filter(var_0)
    var_4 = var_2.get_or_else(var_1)
    var_5 = var_3.to_validation()
    maybe_0.filter(bool_2)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(none_type_0)
    var_2 = maybe_0.ap(var_1)
    var_3 = var_0.map(var_2)
    var_4 = var_1.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    var_5 = var_3.ap(none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_6 = var_2.bind(bool_1)
    var_7 = var_6.filter(var_5)
    var_8 = var_4.to_either()
    var_9 = var_6.filter(var_8)
    bool_3 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_3)
    maybe_3 = module_0.Maybe(bool_0, var_4)
    var_4.get_or_else(none_type_0)
