# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 1996.052046
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    bool_2 = maybe_0.__eq__(var_0)
    maybe_0.filter(bool_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.map(maybe_1)
    bool_2 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_box()
    var_1.filter(var_1)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_either()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.bind(bool_0)
    var_1 = maybe_1.filter(maybe_1)
    bool_2 = bool_0.__eq__(var_1)
    maybe_0.filter(bool_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    str_0 = "S*t_{|lk8~0{dqb"
    maybe_0 = module_0.Maybe(bool_1, str_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.bind(bool_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.get_or_else(bool_0)
    var_3.map(var_2)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    bool_2 = bool_0.__eq__(var_0)
    maybe_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(none_type_0)


def test_case_13():
    int_0 = -1129
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.get_or_else(var_1)
    var_3 = var_1.to_validation()
    var_4 = maybe_0.to_lazy()
    var_1.to_either()


def test_case_14():
    bytes_0 = b"\xdb\x0f\xe3\xa3Dj\x87nm\xd4H@\xb2M\xa1"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_box()
    maybe_2 = module_0.Maybe(var_4, var_3)
    var_5 = var_2.to_either()
    var_6 = maybe_0.ap(var_2)
    var_7 = var_6.map(bool_1)


def test_case_15():
    bytes_0 = b"\xdb\x0f\xe3\xa3Dj\x87nm\xd4H@\xb2M\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_2.bind(var_1)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    str_0 = '@OhVc|{"x[Ju_y'
    maybe_0 = module_0.Maybe(str_0, str_0)
    bytes_0 = b"O\xf8\xc18W\xbb\xfa\xbc\xf4u\xe2"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.to_validation()
    var_0.map(var_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.bind(bool_0)
    var_1 = maybe_1.filter(maybe_1)
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_validation()
    bool_3 = bool_0.__eq__(var_1)
    maybe_0.filter(bool_0)


def test_case_19():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(maybe_1)
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    bool_3 = bool_0.__eq__(var_2)
    maybe_0.filter(bool_0)


def test_case_20():
    bytes_0 = b"\xdb\x0f\xe3\xa3Dj\x87nm\xd4H@\xb2M\xa1"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    var_2 = maybe_1.ap(maybe_1)
    set_0 = set()
    var_1.map(set_0)
