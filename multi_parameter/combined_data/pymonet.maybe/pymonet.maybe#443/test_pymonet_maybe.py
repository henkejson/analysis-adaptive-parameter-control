# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -737
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    maybe_1.filter(maybe_0)


def test_case_3():
    none_type_0 = None
    int_0 = 1578
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_3 = var_2.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_3, bool_2)
    var_4 = maybe_1.to_try()
    maybe_1.filter(var_0)


def test_case_5():
    int_0 = 229
    str_0 = "*$\x0b<m Y1]v*\x0cUL(9}wd"
    tuple_0 = (int_0, int_0, int_0, str_0)
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(tuple_0, str_0)
    set_0 = {tuple_0}
    bool_2 = maybe_0.__eq__(set_0)
    var_2 = maybe_0.to_validation()
    maybe_2 = module_0.Maybe(set_0, var_0)
    var_3 = maybe_2.filter(tuple_0)
    var_4 = maybe_0.to_either()
    var_5 = var_3.filter(var_4)
    var_6 = var_3.to_validation()
    int_1 = -3090
    var_7 = var_0.get_or_else(int_1)
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.bind(maybe_1)
    bool_1 = False
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_2.filter(var_2)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_0.bind(var_1)


def test_case_8():
    none_type_0 = None
    int_0 = 1578
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(int_0)
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_9():
    str_0 = "*$\x0b<m Y1]v*\x0cUL(9}wd"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(str_0)
    var_2 = maybe_0.to_validation()
    maybe_0.ap(var_2)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_0.get_or_else(bool_0)
    maybe_1.filter(maybe_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    bytes_0 = b"\xee/\xff\xa2\xd8\xbfhI"
    var_2 = maybe_0.get_or_else(bytes_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_lazy()
    var_3.get_or_else(var_1)


def test_case_13():
    none_type_0 = None
    int_0 = 1578
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(maybe_0)


def test_case_14():
    complex_0 = -33.31773269567359 - 143.33j
    set_0 = {complex_0, complex_0, complex_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_2 = module_0.Maybe(set_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    bool_1 = False
    maybe_3 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_3.to_either()
    maybe_3.filter(var_3)


def test_case_15():
    complex_0 = -3048.5 + 1242.740279j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_17():
    str_0 = "D@oE@'NdJm$w\x0cV"
    dict_0 = {str_0: str_0}
    bytes_0 = b"c\x18J\xdb7z/"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(dict_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_19():
    float_0 = 2409.10656
    list_0 = [float_0, float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bool_1 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(bool_1, bool_1)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_3, bool_2)
    maybe_1.filter(maybe_0)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = module_0.Maybe(var_0, maybe_0)
    var_2 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(var_1, var_1)
    bool_1 = var_2.__eq__(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    bool_2 = False
    maybe_2 = module_0.Maybe(var_4, bool_2)
    var_5 = maybe_0.to_try()
    var_6 = maybe_2.to_try()
    maybe_2.filter(var_0)


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_0.ap(bool_0)
