# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -3036.477077
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    str_0 = "D\tn) O"
    set_0 = {str_0, str_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.map(var_0)
    var_3 = var_2.filter(maybe_0)
    var_4 = var_3.to_validation()
    bool_1 = var_0.__eq__(var_3)
    var_5 = var_0.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    maybe_1.filter(var_4)


def test_case_3():
    int_0 = 2867
    str_0 = "^tNFf@c?/"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    maybe_0.map(int_0)


def test_case_4():
    bool_0 = True
    str_0 = "D\tn) O"
    set_0 = {str_0, str_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = var_1.get_or_else(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(str_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    float_0 = -217.92
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.bind(float_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = var_1.get_or_else(bool_0)
    var_2.to_validation()


def test_case_6():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    int_0 = 874
    int_1 = -127
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, int_1)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = var_1.filter(int_0)
    var_3 = var_2.to_box()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    float_0 = -3036.477077
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    int_0 = -1336
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_box()
    generic_0 = module_1.Generic()
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    int_0 = 996
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.bind(none_type_0)


def test_case_13():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    none_type_1 = None
    str_0 = "/\x0c03G%UC\x0b\\s{L:^"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_3 = maybe_1.to_validation()
    var_4 = var_3.to_lazy()
    var_4.filter(none_type_1)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    str_0 = "Ao.=|x1Cw@]z_\x0bZA(<s"
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_1.to_try()
    var_2.to_lazy()


def test_case_15():
    bytes_0 = b"\x1a0\x8c\xbbd\xe2A\xf4WK\xcdV\xbd\xbc\xac\xde\xa0\xbf"
    dict_0 = {bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.to_box()
    var_4 = var_2.to_lazy()
    tuple_0 = (var_0, var_2, var_4, dict_0)
    maybe_1 = module_0.Maybe(maybe_0, tuple_0)
    maybe_2 = module_0.Maybe(var_2, var_2)
    var_5 = maybe_0.to_box()
    var_6 = maybe_0.to_either()
    maybe_3 = module_0.Maybe(var_5, var_5)


def test_case_16():
    int_0 = 874
    int_1 = -127
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, int_1)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_1.to_try()
    var_3 = var_2.filter(int_0)
    var_3.to_box()


def test_case_17():
    generic_0 = module_1.Generic()
    dict_0 = {generic_0: generic_0, generic_0: generic_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.map(dict_0)


def test_case_18():
    bool_0 = True
    str_0 = "D\tn) O"
    set_0 = {str_0, str_0, bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(bool_0)
    var_3 = var_2.ap(str_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_4 = var_2.map(var_0)
    var_5 = maybe_1.filter(bool_0)
    var_6 = maybe_1.get_or_else(maybe_1)
    maybe_2 = module_0.Maybe(var_5, var_5)
    bool_2 = var_6.__eq__(var_0)
    var_7 = maybe_0.get_or_else(var_2)
    var_8 = var_3.map(var_6)
    bool_3 = var_2.__eq__(bool_2)
    var_9 = var_4.ap(var_3)
    var_10 = var_6.to_try()
    var_11 = var_9.filter(maybe_0)
    bool_4 = var_9.__eq__(var_1)
    var_12 = var_1.to_either()
    var_13 = var_1.to_try()
    var_13.to_lazy()


def test_case_19():
    none_type_0 = None
    str_0 = "-px"
    bytes_0 = b"\xf4\xd5\xcf"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.to_either()
    var_2 = var_1.bind(bytes_0)
    var_3 = var_2.ap(none_type_0)
    str_1 = "[Tp&bg^"
    bool_0 = False
    list_0 = [var_1, var_1, bool_0, var_1]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_4 = maybe_1.get_or_else(maybe_1)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_5 = maybe_1.ap(str_1)
    var_6 = var_4.ap(bool_0)
    bool_2 = var_4.__eq__(var_5)
    var_2.filter(var_3)


def test_case_20():
    bool_0 = True
    bytes_0 = b"\xa3V\x05\x95N'\x96{"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = True
    bool_2 = maybe_0.__eq__(bytes_0)
    bool_3 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    str_0 = "\r"
    bool_4 = maybe_0.__eq__(str_0)
    var_0 = maybe_1.filter(bool_1)
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = maybe_1.to_box()
    var_2.to_validation()
