# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = -3631
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_1.ap(int_0)


def test_case_3():
    int_0 = -3631
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    bool_1 = var_1.__eq__(bool_0)
    var_0.get_or_else(maybe_0)


def test_case_4():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.map(none_type_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    maybe_1.filter(maybe_1)


def test_case_5():
    str_0 = "\\"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.map(bool_0)


def test_case_6():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.map(none_type_0)
    var_2 = maybe_0.bind(var_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    maybe_1.filter(maybe_1)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    maybe_2.bind(var_0)


def test_case_8():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_9():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_1 = maybe_1.ap(var_0)
    var_1.to_validation()


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()


def test_case_11():
    list_0 = []
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, list_0)
    maybe_0.filter(list_0)


def test_case_12():
    str_0 = "vZ)>b"
    list_0 = []
    str_1 = "^0h #^HoD'"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.map(str_0)


def test_case_13():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.to_try()


def test_case_14():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_16():
    bytes_0 = b"_\x9c\x04\x99E!"
    set_0 = {bytes_0}
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    maybe_0.filter(var_3)


def test_case_18():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "K*sJ:_M\x0b2Y153B,2k+W"
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_20():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_22():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_2 = var_0.to_validation()
    maybe_2.bind(var_0)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_validation()
    var_4 = maybe_0.map(var_3)
    var_5 = maybe_0.filter(bool_0)
    var_6 = maybe_1.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_6.to_box()


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_0.filter(var_1)
