# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.map(var_0)
    var_3 = maybe_0.to_box()
    var_4 = var_2.ap(bool_1)
    var_5 = module_0.Maybe(bool_2, bool_0)
    bool_3 = var_4.__eq__(bool_0)


def test_case_3():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_box()
    var_4 = var_2.ap(bool_0)
    var_4.to_box()


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(var_0)


def test_case_5():
    bool_0 = True
    int_0 = 2281
    bytes_0 = b"M\x7f9\x17m"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.bind(bool_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    str_0 = "b5dVg>h;"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0, none_type_0)
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_10():
    bool_0 = True
    dict_0 = {}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_validation()
    float_0 = 529.0372
    float_1 = 1023.757851
    tuple_0 = (var_1, var_0, float_0, float_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_2 = maybe_2.to_either()
    var_2.get_or_else(tuple_0)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0, bool_0, set_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_2.to_try()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_either()


def test_case_16():
    none_type_0 = None
    str_0 = "JgQ=WyX$f=S\rDc\tXjT3"
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.ap(var_0)
    var_0.to_box()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_box()
    maybe_0.filter(var_0)


def test_case_19():
    bytes_0 = b"\xe0l&+,#\xf0Fg\xa9Af\x07\xa6\xaf:z\xf3"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.to_either()
    var_0.to_lazy()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(none_type_0)


def test_case_21():
    object_0 = module_2.object()
    list_0 = [object_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.map(list_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.bind(object_0)
    var_4 = var_3.to_lazy()
    var_5 = maybe_0.map(object_0)
    var_6 = var_3.to_lazy()
    var_7 = var_6.to_box()
    var_8 = maybe_0.to_try()
    var_9 = maybe_0.map(var_4)
    var_10 = maybe_0.to_validation()
    var_11 = var_9.to_lazy()
    var_12 = var_5.to_either()


def test_case_22():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0, bool_0, set_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.map(list_0)
    var_3 = maybe_0.to_box()
    var_4 = var_1.ap(var_0)
    maybe_1 = module_0.Maybe(var_1, var_1)
    bool_2 = var_1.__eq__(var_1)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    none_type_1 = None
    var_1 = maybe_0.filter(bool_0)
    bool_1 = var_1.__eq__(none_type_0)
    bool_2 = var_0.__eq__(var_0)
    var_2 = var_0.ap(bool_2)
    var_3 = var_1.map(var_2)
    var_4 = var_3.to_box()
    var_5 = maybe_0.to_try()
    var_6 = var_1.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, var_2)
    var_7 = maybe_1.ap(none_type_1)
    var_8 = var_0.bind(var_7)
    var_9 = var_3.get_or_else(maybe_0)
    bool_3 = var_7.__eq__(maybe_1)
    var_10 = var_9.map(var_7)
    var_11 = var_7.bind(var_10)
    var_12 = var_11.map(bool_0)
    var_13 = var_12.ap(var_9)
    var_14 = var_1.filter(var_2)
    var_15 = var_14.to_lazy()
    var_16 = var_6.filter(var_13)
    var_17 = var_3.ap(var_3)
    var_18 = var_8.to_validation()
