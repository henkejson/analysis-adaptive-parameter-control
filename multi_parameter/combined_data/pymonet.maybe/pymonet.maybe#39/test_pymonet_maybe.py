# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "ud"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_either()
    var_5 = var_0.to_lazy()
    none_type_0 = None
    var_6 = maybe_0.map(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3.to_lazy()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_4():
    bool_0 = True
    bytes_0 = b"\x0e\xb0\x85\\3\xf9N\xff\xa7{pJ\x1b_6\xae\x1e\xc66"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_1.map(maybe_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_2.to_validation()
    var_3 = var_0.to_box()
    bool_2 = maybe_1.__eq__(var_3)


def test_case_5():
    str_0 = "6d"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(bool_0)
    var_3 = var_2.map(var_2)
    var_4 = var_3.to_validation()
    var_5 = var_4.to_box()


def test_case_7():
    bytes_0 = b"\xca\xfe\x1fQs"
    bytes_1 = b"^\x9a2\x9c\xac\xaa\xfex\xf2\xda\xcc\x03"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_either()


def test_case_8():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(var_1)


def test_case_13():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.to_validation()
    bool_1 = var_1.__eq__(maybe_0)


def test_case_15():
    bytes_0 = b"\xe24"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(none_type_0)
    var_1.to_validation()


def test_case_17():
    float_0 = 284.3
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.map(float_0)


def test_case_18():
    int_0 = 793
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_19():
    int_0 = 259
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.map(int_0)
    var_3 = var_0.to_validation()
    var_4 = var_3.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.filter(var_3)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_box()
    var_0.filter(var_1)


def test_case_21():
    int_0 = -112
    int_1 = 259
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.to_validation()
    var_3 = var_2.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_4 = var_0.to_either()
    var_5 = maybe_1.get_or_else(bool_1)
    var_6 = maybe_1.filter(var_5)
    var_7 = maybe_1.bind(bool_0)
    var_8 = var_7.map(var_7)
    var_9 = maybe_1.to_box()
    bool_2 = var_7.__eq__(int_0)
    var_10 = var_7.ap(int_1)
    var_11 = var_6.ap(var_3)
    var_12 = var_11.ap(var_8)
    bool_3 = maybe_0.__eq__(var_10)
    var_13 = var_9.to_validation()
    bool_4 = var_4.__eq__(var_10)
    var_9.to_box()
