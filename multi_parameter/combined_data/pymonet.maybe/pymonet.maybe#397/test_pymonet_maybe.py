# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -951
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_3 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.map(bool_0)
    var_2 = var_1.get_or_else(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.bind(maybe_0)
    var_5 = var_1.ap(bool_0)
    bool_4 = maybe_0.__eq__(bool_0)
    var_6 = var_1.map(var_5)
    var_7 = var_1.map(bool_4)
    var_8 = maybe_0.to_validation()
    var_9 = var_5.to_either()
    var_10 = maybe_0.to_try()
    var_11 = maybe_0.ap(bool_1)
    var_3.to_lazy()


def test_case_3():
    bytes_0 = b"'j\xd1\x82\xcdf\xc3\xac&\xe42\x91\xad\x0c\xef"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_1 = b"\xbah\xeb\xa1&\xc8\xd9(\xbd\xd0\xcanA\xc8M\xb5"
    int_0 = 1
    maybe_1 = module_0.Maybe(bytes_1, int_0)
    var_0 = maybe_1.ap(maybe_0)
    str_0 = "d<-)*;o"
    bool_1 = True
    maybe_2 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_2.map(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_3.ap(bytes_0)


def test_case_4():
    int_0 = -940
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    bool_0 = False
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.map(maybe_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_6():
    bytes_0 = b"\xb1]'?`\xc64\xf5#\xbe\xc6\xc7x\xa6\xf2o\x14\xcf"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(bytes_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.ap(bool_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.map(bool_0)
    var_4.to_validation()


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(bool_0)


def test_case_9():
    int_0 = 3407
    str_0 = "gP;:>(iI7::`kC0FCO"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(int_0)


def test_case_10():
    int_0 = 3343
    str_0 = "gP;:>(iI7::`kC0FCO"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    maybe_1 = module_0.Maybe(bool_1, dict_0)
    none_type_1 = None
    var_0 = maybe_1.filter(none_type_1)
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_lazy()
    bool_2 = maybe_2.__eq__(maybe_1)
    var_3 = maybe_2.to_box()
    var_4 = var_3.to_either()
    var_5 = maybe_1.bind(var_3)
    var_6 = var_4.to_box()
    var_7 = var_5.get_or_else(maybe_1)
    var_8 = var_5.to_try()
    var_9 = var_4.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_1.get_or_else(none_type_0)
    var_0.get_or_else(none_type_0)


def test_case_13():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    float_0 = 927.1382
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_1.map(float_0)


def test_case_14():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    bool_0 = False
    int_0 = 4696
    dict_0 = {bool_0: bool_0, int_0: bool_0, int_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_0 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_1.to_box()
    var_3.get_or_else(none_type_0)


def test_case_16():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_0, bool_0, bool_1, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(set_0)
    var_1.to_validation()


def test_case_17():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_validation()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_19():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    bool_3 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.bind(maybe_0)
    var_4 = var_0.ap(bool_0)
    bool_4 = maybe_0.__eq__(var_4)
    bool_5 = maybe_0.__eq__(bool_0)
    var_5 = var_0.map(var_4)
    var_6 = var_0.map(bool_5)
    var_7 = maybe_0.to_validation()
    var_8 = var_4.to_either()
    var_9 = var_3.bind(var_1)
    var_10 = var_6.filter(var_8)
    var_11 = var_9.bind(var_10)
    var_2.to_lazy()
