# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 799
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.to_box()
    none_type_1 = None
    var_2 = maybe_1.bind(none_type_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_1.map(var_1)


def test_case_3():
    str_0 = "|Vf?Kv1kO^"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    bool_2 = maybe_0.__eq__(str_0)
    var_2 = maybe_0.to_validation()
    var_2.ap(str_0)


def test_case_4():
    complex_0 = -377 + 1294.13j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.bind(maybe_0)


def test_case_5():
    int_0 = -1112
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.get_or_else(int_0)
    int_1 = -1595
    none_type_0 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    maybe_2.map(int_1)


def test_case_6():
    int_0 = -3396
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)


def test_case_7():
    int_0 = 1041
    str_0 = "Jel("
    set_0 = {str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_1.ap(str_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.get_or_else(int_0)
    var_3 = maybe_1.ap(int_0)
    var_2.to_try()


def test_case_8():
    dict_0 = {}
    bytes_0 = b"m\xe0T\xed\x1b\xd7d\x0cEo\xb3"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(dict_0)


def test_case_9():
    set_0 = set()
    none_type_0 = None
    bytes_0 = b"\x8a\x9e\xd3U\x0e"
    set_1 = {bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, set_1)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_1.filter(set_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = True
    list_0 = []
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.get_or_else(maybe_1)
    maybe_1.filter(bool_0)


def test_case_12():
    int_0 = -858
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_2, var_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = maybe_0.to_either()
    var_5 = var_4.ap(var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_4, bool_0)
    var_6 = var_3.filter(var_0)
    object_0 = module_1.object()
    var_7 = maybe_2.to_validation()
    maybe_2.filter(var_5)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.get_or_else(bool_0)


def test_case_14():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.to_box()
    var_4 = maybe_0.filter(var_3)
    var_5 = maybe_0.to_box()
    var_6 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_15():
    complex_0 = 764 + 1695.27j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_16():
    bytes_0 = b"\xd8>\x97f\xbe\xc3\x10\x161"
    tuple_0 = (bytes_0, bytes_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.ap(var_0)


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_19():
    int_0 = -960
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    int_1 = -858
    maybe_1 = module_0.Maybe(int_1, int_1)
    none_type_0 = None
    var_0 = maybe_1.ap(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = maybe_1.bind(var_2)
    var_5 = maybe_1.to_either()
    var_6 = maybe_0.ap(var_4)
    bool_1 = maybe_1.__eq__(var_6)
    var_7 = var_6.to_either()
    var_8 = maybe_1.to_try()
    var_9 = var_6.to_box()
    var_10 = var_5.map(var_1)
    var_11 = var_4.to_lazy()
    var_5.filter(none_type_0)


def test_case_20():
    str_0 = "|Vf?Kv1kO^"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(str_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_either()
    var_0.get_or_else(maybe_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_22():
    int_0 = -960
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)
