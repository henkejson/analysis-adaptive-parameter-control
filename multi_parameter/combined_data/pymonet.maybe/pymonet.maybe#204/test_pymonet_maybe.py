# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    float_0 = -1203.4294
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(var_0)
    bool_0 = var_0.__eq__(var_1)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_validation()
    var_3.ap(none_type_0)


def test_case_3():
    str_0 = "\n        Returns new ImmutableList with argument value on the begin of list\n        and other list elements after it\n\n        :param new_element: element to append on the begin of list\n        :type fn: A\n        :returns: ImmutableList[A]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(maybe_0)
    var_3 = var_1.to_either()


def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    float_0 = -2079.09609
    list_0 = [float_0, float_0, float_0, float_0]
    str_0 = '"VC873/d'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.bind(list_0)


def test_case_6():
    none_type_0 = None
    float_0 = -759.643
    none_type_1 = None
    maybe_0 = module_0.Maybe(float_0, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_1.filter(var_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.get_or_else(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    set_0 = set()
    maybe_2 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_2.get_or_else(bool_0)
    maybe_2.filter(bool_0)


def test_case_10():
    bool_0 = False
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.filter(bool_0)


def test_case_11():
    none_type_0 = None
    str_0 = "CiJQ'J\rxc2bi1K?Dj\n\x0b~"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_box()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.bind(var_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_0.filter(none_type_0)


def test_case_14():
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_1.bind(var_0)


def test_case_15():
    int_0 = 624
    bytes_0 = b"bv\x11E5)'\xc4i\x03\n\x85\x1c\xff\xc3\xc0u\xdc\x95\x8d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(int_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    float_0 = -1203.4294
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(var_0)
    bool_0 = var_0.__eq__(var_1)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.to_validation()
    var_4 = var_2.to_either()
    var_5 = var_4.to_try()


def test_case_18():
    float_0 = -1663.3
    float_1 = -3805.7333
    bool_0 = False
    maybe_0 = module_0.Maybe(float_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(float_0)


def test_case_19():
    none_type_0 = None
    float_0 = -1203.4294
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_try()
    bool_0 = var_0.__eq__(var_1)
    var_2 = var_0.to_lazy()
    var_3 = var_2.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    bool_2 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    bool_3 = var_2.__eq__(var_0)
    var_3 = var_2.ap(bool_2)
    maybe_1.bind(var_0)


def test_case_21():
    none_type_0 = None
    float_0 = -1203.6026404856718
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.map(var_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_validation()
    var_4 = var_3.to_box()
    var_5 = maybe_0.filter(var_4)
