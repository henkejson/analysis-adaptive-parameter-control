# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    int_0 = 1308
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_lazy()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    float_0 = 555.0
    bytes_0 = b"\x7f"
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.map(float_0)
    var_2 = var_1.get_or_else(bool_0)
    var_2.to_either()


def test_case_4():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(set_0)


def test_case_5():
    int_0 = 1308
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.filter(int_0)
    var_4 = maybe_0.filter(var_1)


def test_case_6():
    complex_0 = 830.437177 + 1742.379627j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    maybe_0 = module_0.Maybe(set_0, complex_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_1.ap(bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_4 = var_3.bind(var_0)
    var_5 = var_3.to_try()
    var_6 = var_4.filter(var_5)
    var_7 = maybe_0.to_either()
    var_8 = maybe_1.map(var_3)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"\x8fV3\xb4\xfd\xad\x16+V\t\xd6\xef\x02L"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)
    var_3 = maybe_2.filter(maybe_2)
    var_4 = maybe_2.get_or_else(maybe_2)


def test_case_10():
    none_type_0 = None
    str_0 = "*c^S#,(&1km U#H;M"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    bytes_0 = b"\xcc<Q\xa5\xf3\xddY\xeaS\xf3\x02\xa1:\x95\xaa"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_1.to_box()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_2.to_box()
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_1.map(bool_1)
    var_3 = maybe_2.ap(var_2)
    var_4 = maybe_2.to_box()
    var_5 = maybe_2.to_validation()
    var_6 = var_2.filter(bool_1)
    var_7 = var_6.get_or_else(var_3)
    maybe_0.filter(var_7)


def test_case_14():
    int_0 = -1266
    set_0 = {int_0, int_0}
    int_1 = 1
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_validation()
    int_2 = -1286
    maybe_1 = module_0.Maybe(int_2, int_2)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(var_0)
    var_3 = var_2.ap(set_0)
    var_4 = var_3.to_try()
    var_4.to_box()


def test_case_15():
    float_0 = -1258.6
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    float_1 = 3551.45074
    bool_1 = True
    maybe_1 = module_0.Maybe(float_1, bool_1)
    bool_2 = maybe_1.__eq__(var_2)


def test_case_16():
    bool_0 = True
    bool_1 = bool_0.__eq__(bool_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_either()
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.to_lazy()
    var_4 = var_0.map(bool_0)
    var_5 = var_1.to_lazy()
    var_6 = var_3.ap(var_0)
    var_7 = var_1.to_box()
    var_8 = var_1.to_box()
    bool_2 = var_8.__eq__(bool_1)
    var_9 = maybe_1.bind(bool_2)
    var_10 = var_3.to_try()
    maybe_2.filter(bool_0)


def test_case_18():
    int_0 = 1308
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    bool_0 = maybe_0.__eq__(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.bind(tuple_0)
    var_2.filter(tuple_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = var_1.to_either()
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_1.ap(bool_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_6 = var_5.bind(var_1)
    var_7 = var_5.to_try()
    var_8 = var_0.filter(var_7)
    var_9 = var_8.to_lazy()
    var_1.filter(var_4)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_2 = var_0.map(bool_1)
    module_1.Generic(*var_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    str_0 = ""
    bool_3 = maybe_1.__eq__(bool_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_1.get_or_else(bool_3)
    bool_4 = maybe_2.__eq__(str_0)
    bool_5 = maybe_0.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(bool_3, maybe_2)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_3.filter(none_type_1)
    var_3 = var_2.ap(bool_0)
    var_4 = maybe_1.to_lazy()
    var_5 = var_3.to_lazy()
    var_1.map(var_3)
