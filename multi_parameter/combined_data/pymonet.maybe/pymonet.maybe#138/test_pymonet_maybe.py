# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    complex_0 = 425.534 + 167.57j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = 924
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\x98k\x84\xb9k<\x7f\xcf\xfa\xd0\xc7X\x1ck"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_4():
    int_0 = 1
    str_0 = "U"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.map(int_0)


def test_case_5():
    float_0 = -2419.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(var_0)


def test_case_6():
    bool_0 = True
    complex_0 = 425.534 + 167.57j
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(complex_0, maybe_0)
    maybe_2 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_2.get_or_else(bool_0)
    maybe_3 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_3.ap(complex_0)
    var_2 = maybe_3.bind(var_1)
    var_3 = maybe_3.to_validation()
    bool_1 = maybe_3.__eq__(bool_0)
    var_3.bind(var_0)


def test_case_7():
    int_0 = -1937
    float_0 = 1057.6
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_1.filter(int_0)
    var_1 = var_0.to_lazy()
    maybe_0.bind(maybe_1)


def test_case_8():
    bytes_0 = b"e>\xe6\xf3\x02'\t"
    bytes_1 = b"\xd2l\xad\xb8\xa8[\xd0**9\xb4\x16C\xb4"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    list_1 = [list_0]
    maybe_0 = module_0.Maybe(list_1, list_1)
    var_0 = maybe_0.ap(bytes_0)


def test_case_9():
    float_0 = -1063.7
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"F\xe7\x17\xe2\xc5\x05\xe4,\xad\xe6\x02\xff\xa5\x92\xf0\xbc,D"
    bool_0 = True
    list_0 = [bytes_0, bytes_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\xd0j\x1e\x97\x9dw\x1c\xa7\xd96\xf7(\xe8S9$"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    bool_2 = var_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.get_or_else(maybe_0)


def test_case_13():
    int_0 = 924
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.get_or_else(bool_0)


def test_case_14():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)


def test_case_15():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    dict_0 = {}
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.filter(maybe_1)
    maybe_1.filter(var_4)


def test_case_17():
    int_0 = -1937
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = maybe_0.filter(bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.bind(maybe_1)
    bytes_0 = b"\x07\x91\xae]\xc1Y\x89\xed\r\xf9h"
    maybe_2 = module_0.Maybe(bool_0, bytes_0)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_0.to_validation()
    var_2.get_or_else(maybe_0)


def test_case_18():
    object_0 = module_1.object()
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(dict_0, var_0)
    var_1 = maybe_1.filter(var_0)
    maybe_0.filter(maybe_1)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_try()
    var_1.map(none_type_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    bool_2 = maybe_1.get_or_else(maybe_0)
    int_0 = 216
    maybe_2 = module_0.Maybe(bool_2, int_0)
    var_1 = maybe_1.to_validation()
    var_1.get_or_else(maybe_1)


def test_case_22():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(var_0)


def test_case_23():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(bool_0)
    var_4 = maybe_0.get_or_else(bool_0)
    var_5 = maybe_0.map(bool_0)
    var_6 = var_2.to_lazy()
    bool_1 = var_1.__eq__(var_3)
    var_7 = var_0.to_try()
    var_2.filter(var_7)


def test_case_24():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_try()
    dict_0 = {}
    var_1 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(bool_1)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = maybe_0.map(bool_0)
    bool_3 = False
    maybe_1 = module_0.Maybe(dict_0, bool_3)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_validation()
    var_7.filter(maybe_1)


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    bool_2 = maybe_0.__eq__(bool_1)
    bool_3 = bool_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    bool_1.to_either()


def test_case_26():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = maybe_0.map(bool_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_5 = maybe_1.to_lazy()
    bool_3 = maybe_1.__eq__(var_2)
    var_6 = maybe_1.to_try()
    maybe_1.filter(var_6)
