# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "yXlB9n:-yn\r|Ysqm]Y,1"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(bool_1)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    maybe_3 = module_0.Maybe(set_0, var_0)
    bool_2 = maybe_2.__eq__(maybe_3)
    var_2 = maybe_2.to_try()
    var_2.to_lazy()


def test_case_3():
    int_0 = 830
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(int_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.map(int_0)
    bool_0 = var_1.__eq__(int_0)
    var_6 = var_5.ap(var_1)
    var_7 = var_4.to_validation()
    var_8 = maybe_0.to_try()
    var_8.to_lazy()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.get_or_else(var_1)
    var_4 = maybe_0.to_validation()
    var_5 = var_3.to_validation()


def test_case_5():
    int_0 = -1764
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_6():
    str_0 = "aWF|1cc|Vf\nu"
    str_1 = "Last[value={}]"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(str_1)
    var_1 = var_0.to_either()
    var_2 = var_1.bind(str_0)


def test_case_7():
    complex_0 = 194.71227 + 1468.318j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    maybe_1.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(none_type_0)
    bytes_0 = b"\x9fC\xd6V\xe3o\xd1*\x95<"
    bool_2 = True
    bool_3 = True
    maybe_1 = module_0.Maybe(bool_2, bool_3)
    var_1 = maybe_1.ap(maybe_1)
    var_2 = maybe_1.get_or_else(bytes_0)
    var_2.to_either()


def test_case_9():
    int_0 = -1764
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    var_0.filter(none_type_0)


def test_case_12():
    complex_0 = -237.55 + 2544.0186j
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_lazy()
    var_3.to_lazy()


def test_case_13():
    bool_0 = True
    float_0 = 3700.848606
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.filter(bool_0)
    var_3 = var_2.to_try()
    var_4 = var_3.map(var_1)
    maybe_2 = module_0.Maybe(float_0, bool_1)
    var_5 = maybe_2.filter(bool_0)
    var_6 = maybe_2.to_either()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_2.get_or_else(bool_1)
    var_2 = maybe_2.to_box()
    var_1.to_either()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    bytes_0 = b"\x8f\xb6G\xe8\xfcRg\xe0' \xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(var_0)
    var_1.ap(bytes_0)


def test_case_17():
    bytes_0 = b"pE\xc6^Yr\xc8!e\xacv#\xb3\x80.l#\xf1\xf5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_1.to_try()
    var_0.bind(maybe_0)


def test_case_18():
    int_0 = 830
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(int_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.map(int_0)
    bool_0 = var_1.__eq__(int_0)
    var_6 = var_5.ap(var_1)
    var_7 = var_4.to_validation()
    bool_1 = False
    var_8 = var_1.map(var_6)
    var_9 = maybe_0.filter(var_0)
    var_10 = var_9.map(bool_1)
    var_11 = var_10.ap(maybe_0)
    maybe_1 = module_0.Maybe(var_11, maybe_0)
    bool_2 = var_11.__eq__(var_6)
    var_12 = maybe_0.to_try()
    var_13 = var_8.to_either()
    var_14 = var_13.to_lazy()
    var_15 = var_14.to_try()
    maybe_2 = module_0.Maybe(var_6, var_11)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.to_box()
    var_1.map(var_1)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)
