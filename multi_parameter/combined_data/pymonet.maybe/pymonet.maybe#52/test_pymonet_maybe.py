# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 5802
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_3():
    int_0 = -1809
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.map(var_2)


def test_case_4():
    bytes_0 = b"\xf3\x12\x08"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(set_0)


def test_case_5():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = var_1.map(maybe_0)
    var_3 = var_2.to_try()
    var_4 = var_1.bind(var_3)
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.to_box()
    var_3.to_lazy()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    none_type_1 = None
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.bind(none_type_1)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(bool_0, list_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()


def test_case_8():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"'\xadR\x11\x9aW9\xe1\xf7\xd0\x04"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.map(none_type_0)
    bytes_0 = b"/\x93x\xe7\r@+\xa3\r\xec"
    list_0 = [bytes_0]
    bool_0 = True
    maybe_1 = module_0.Maybe(list_0, bool_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2.filter(bool_0)


def test_case_12():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    none_type_1 = None
    bool_0 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_0)
    var_2 = var_1.map(maybe_0)
    var_3 = var_2.to_try()
    var_4 = var_1.bind(var_3)
    var_5 = maybe_2.to_lazy()
    var_6 = var_4.to_either()
    var_7 = maybe_2.to_lazy()
    var_8 = var_6.bind(maybe_1)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    bytes_0 = b"\r\x0e\x14"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.to_try()
    var_2.to_try()


def test_case_14():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_validation()
    none_type_0 = None
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.to_box()
    var_4 = var_1.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_15():
    bytes_0 = b"'\xadR\x11\x9aW9\xe1\xf7\xd0\x04"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.to_try()
    var_0 = maybe_0.filter(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_16():
    float_0 = 2392.34188
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_17():
    generic_0 = module_1.Generic()
    list_0 = [generic_0, generic_0, generic_0, generic_0]
    list_1 = [list_0, generic_0, generic_0]
    bytes_0 = b"T~\x16#3\x94\xd2\xc1\xaf\xe9"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(list_1)


def test_case_18():
    int_0 = -1616
    int_1 = 1210
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_2.ap(int_0)


def test_case_19():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    none_type_1 = None
    bool_0 = False
    var_2 = var_0.filter(none_type_1)
    maybe_2 = module_0.Maybe(none_type_1, bool_0)
    var_3 = var_1.map(maybe_0)
    var_4 = var_3.to_try()
    var_5 = var_3.map(var_4)
    var_6 = maybe_2.to_lazy()
    var_7 = var_6.to_box()
    var_8 = maybe_2.to_lazy()
    var_7.bind(maybe_1)


def test_case_20():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(none_type_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_1.ap(var_1)
    var_4 = var_0.to_box()
    var_5 = maybe_0.to_try()
    var_6 = var_0.to_lazy()
    bool_1 = var_0.__eq__(var_2)
    var_7 = var_2.to_either()
    var_8 = var_4.to_try()
    var_9 = var_4.to_lazy()
    var_10 = var_6.bind(bool_0)


def test_case_21():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.map(none_type_0)
    var_2 = var_0.filter(var_1)
    var_3 = maybe_0.map(none_type_0)
    var_4 = var_3.ap(bytes_0)
    var_5 = maybe_0.ap(var_4)
    var_6 = maybe_0.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_7 = var_0.to_try()
    var_8 = var_6.to_lazy()
    bool_2 = maybe_0.__eq__(var_3)
    var_9 = var_3.to_either()
    var_10 = var_5.to_try()
    var_11 = maybe_1.to_box()


def test_case_22():
    bytes_0 = b"'\xf1R\x11\x9aW9S\xf7\xd0\x04"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(none_type_0)
