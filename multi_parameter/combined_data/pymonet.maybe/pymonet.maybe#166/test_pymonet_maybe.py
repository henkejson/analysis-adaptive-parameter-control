# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xb0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_either()
    bool_0 = maybe_1.__eq__(var_0)
    maybe_0.filter(var_1)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_either()
    bool_0 = maybe_1.__eq__(var_2)
    maybe_0.filter(var_1)


def test_case_4():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = var_0.ap(maybe_0)
    var_1.get_or_else(bytes_0)


def test_case_5():
    str_0 = "w9\tZ]ai"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(none_type_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(var_0)


def test_case_7():
    str_0 = "\nCN.\n3q4PioIV:"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(str_0)
    list_0 = [maybe_0, maybe_0, var_0]
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.map(maybe_0)
    dict_0 = {}
    maybe_0.ap(dict_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_try()
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    bool_0 = var_0.get_or_else(var_0)
    maybe_0.filter(maybe_1)


def test_case_11():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.get_or_else(bool_2)
    bool_3 = True
    maybe_2 = module_0.Maybe(var_0, bool_3)
    bool_4 = maybe_1.__eq__(bool_0)
    var_4 = var_2.to_box()
    var_4.bind(bool_2)


def test_case_12():
    int_0 = -217
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.map(int_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_either()
    maybe_0.filter(maybe_1)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_0.to_try()
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.to_box()
    bool_0 = maybe_1.__eq__(var_4)
    maybe_0.filter(var_2)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"\xf5q\x83\x1c\x8c\x0b_\x02\xd2\xb8\xaa\x835a\xc3O\xf6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_1)
    str_0 = "q&I_E76t_'\r\n;AZ-I,"
    maybe_2 = module_0.Maybe(str_0, str_0)


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(bool_2)
    maybe_2 = module_0.Maybe(bool_1, var_2)
    bool_3 = maybe_2.__eq__(var_3)
    var_4 = maybe_1.to_box()
    var_4.bind(var_4)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    none_type_0 = None
    int_0 = 1218
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.ap(int_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.ap(maybe_0)
    var_2 = maybe_1.get_or_else(maybe_1)
    var_3 = var_1.ap(var_2)
    var_4 = maybe_0.to_lazy()
    var_5 = var_3.bind(var_2)
    var_6 = var_5.to_lazy()
    var_7 = maybe_0.to_lazy()
    bool_0 = maybe_1.__eq__(var_0)
    bool_1 = var_4.__eq__(var_3)
    var_8 = maybe_1.map(var_7)
    var_9 = var_8.map(bool_0)
    var_10 = var_7.to_validation()
    var_11 = maybe_1.to_validation()
    bool_2 = maybe_0.__eq__(var_0)
    var_12 = var_11.to_box()
    var_10.map(maybe_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_either()
    bool_0 = var_0.__eq__(var_0)
    maybe_0.filter(var_1)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.ap(maybe_1)
    var_4 = maybe_0.to_box()
    var_5 = var_3.bind(maybe_1)
    bool_0 = maybe_1.__eq__(var_4)
    maybe_0.filter(var_1)
