# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\x021\xf6("
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "i\t6[\n5\x0bc}f"
    str_1 = 'Yn$E>[q"?3*9;\toL@\\'
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(str_1)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(str_0)
    none_type_0 = None
    var_3 = var_2.bind(bool_0)
    var_4 = var_2.get_or_else(str_1)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_5 = maybe_0.get_or_else(maybe_0)
    var_6 = maybe_0.filter(str_0)
    var_7 = maybe_0.ap(none_type_0)
    maybe_1.bind(str_0)


def test_case_3():
    str_0 = 'Yn$E>[q"?3*9;\toL@\\'
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(str_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.map(var_1)
    var_3 = var_2.filter(var_1)
    var_1.get_or_else(none_type_0)


def test_case_4():
    bytes_0 = b"\xad\xc5\xcc\xc7g"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_1.ap(bytes_0)
    none_type_0 = None
    int_0 = 0
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.ap(none_type_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.ap(maybe_1)


def test_case_6():
    float_0 = 1218.32
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.get_or_else(float_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.ap(float_0)
    var_2.map(var_3)


def test_case_7():
    bytes_0 = b"\x11\xb5U^1\xf1\xe7\x05\xf6\x00\x85\xbd\xbb7r"
    int_0 = 2083
    maybe_0 = module_0.Maybe(int_0, bytes_0)
    var_0 = maybe_0.to_try()
    complex_0 = -1375.0692 - 910.515487j
    var_1 = maybe_0.ap(complex_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    maybe_1.bind(dict_0)


def test_case_8():
    str_0 = "<]N#\nbvS91BZW:Y?q"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(dict_0)


def test_case_9():
    str_0 = "X(P:"
    float_0 = -905.255476
    bytes_0 = b">"
    float_1 = 3450.2
    maybe_0 = module_0.Maybe(float_1, float_1)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.get_or_else(float_0)
    var_1.ap(str_0)


def test_case_10():
    complex_0 = -4191.98 - 3274.07j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(complex_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(complex_0, var_1)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_2.to_box()
    var_3 = maybe_1.to_box()
    maybe_2.filter(var_0)


def test_case_11():
    int_0 = 679
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.get_or_else(bool_0)
    var_5 = var_3.to_box()
    var_4.to_try()


def test_case_12():
    bytes_0 = b"\xb7\xb7\x8f\xce\x90\x0e%a2\x94\xd7\xf6\x14"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.ap(bytes_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_1.to_try()
    var_3.bind(none_type_0)


def test_case_14():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_0.to_try()
    float_0 = 3474.9789
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_4 = maybe_2.to_either()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_1.map(var_5)
    var_7 = var_4.map(var_0)
    bool_2 = maybe_1.__eq__(var_4)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_validation()
    var_0.filter(var_1)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_17():
    complex_0 = -4191.98 - 3274.07j
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(complex_0)
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_3 = maybe_1.to_validation()
    bool_1 = False
    maybe_2 = module_0.Maybe(var_3, bool_1)
    var_4 = maybe_2.to_box()
    var_5 = maybe_2.to_try()
    var_6 = maybe_1.to_box()
    maybe_2.filter(var_3)


def test_case_18():
    int_0 = 702
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.get_or_else(bool_0)
    var_5 = var_3.to_box()
    var_6 = var_3.to_try()
    var_7 = maybe_1.to_lazy()
    var_8 = var_7.to_either()
    var_9 = var_5.to_either()
    var_10 = maybe_0.bind(maybe_1)
    var_11 = var_3.to_validation()
    var_12 = var_1.to_either()
    var_13 = var_10.to_validation()
    int_1 = -2101
    var_1.get_or_else(int_1)


def test_case_19():
    str_0 = "i\t6[\n5\x0bc}f"
    str_1 = 'Yn$E>[q"?3*9;\toL@\\'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(str_1)
    var_1 = maybe_1.ap(str_1)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.map(var_2)
    var_4 = maybe_1.filter(str_0)
    none_type_1 = None
    var_5 = var_1.bind(str_0)
    var_6 = var_5.get_or_else(var_3)
    maybe_2 = module_0.Maybe(str_0, var_0)
    bool_2 = var_4.__eq__(var_3)
    var_7 = var_0.get_or_else(none_type_1)
    var_8 = var_3.filter(var_7)
    var_7.ap(maybe_1)
