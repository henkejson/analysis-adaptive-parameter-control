# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "2P#sEh.W$"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    bool_1 = maybe_0.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_1 = maybe_1.to_try()
    var_1.to_validation()


def test_case_3():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_validation()
    var_1.bind(var_1)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.get_or_else(var_0)
    var_4 = var_2.to_try()
    var_5 = var_1.map(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(maybe_1)


def test_case_5():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(set_0)
    none_type_0 = None
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = "2P#sEh.W$"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.bind(str_0)
    bool_1 = var_1.__eq__(str_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_2 = maybe_1.to_try()
    var_2.to_validation()


def test_case_7():
    int_0 = 4354
    list_0 = [int_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    list_1 = []
    bool_0 = False
    maybe_1 = module_0.Maybe(list_1, bool_0)
    var_2 = maybe_1.to_either()
    maybe_1.bind(var_2)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.ap(bool_0)
    object_0 = module_1.object()
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_2)


def test_case_9():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(set_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(var_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_12():
    str_0 = "Z?H:1}NkPN@U[e:KU9"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()


def test_case_13():
    int_0 = 625
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_validation()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_0.filter(none_type_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = var_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = "LaTzy[T, U]"
    set_0 = {str_0}
    tuple_0 = (set_0,)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, tuple_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.bind(maybe_0)
    var_2 = maybe_1.to_lazy()
    bool_1 = maybe_0.to_lazy()
    var_3 = var_0.to_try()
    var_4 = maybe_0.to_validation()


def test_case_17():
    str_0 = "2P#sEh.W$"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.bind(str_0)
    var_2 = var_1.to_lazy()
    bool_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_3 = maybe_1.to_try()
    var_4 = var_2.to_validation()
    var_3.to_validation()


def test_case_18():
    none_type_0 = None
    str_0 = "\x0b4W"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_either()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = var_1.to_lazy()
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_3, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_4 = var_0.map(var_3)
    var_5 = var_2.to_try()
    var_5.to_lazy()


def test_case_20():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.get_or_else(var_0)
    var_4 = var_3.to_lazy()
    bool_2 = var_2.__eq__(var_3)
    bool_3 = False
    maybe_1 = module_0.Maybe(var_0, bool_3)
    var_5 = var_1.filter(maybe_0)
    bool_4 = var_5.__eq__(var_1)
    var_6 = var_5.to_try()
    var_7 = maybe_0.to_validation()
    var_8 = maybe_1.to_lazy()
    var_9 = var_8.to_validation()
    var_10 = var_8.to_validation()
