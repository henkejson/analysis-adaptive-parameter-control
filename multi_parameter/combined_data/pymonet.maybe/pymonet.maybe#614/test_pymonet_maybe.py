# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    str_0 = "br%F"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = ',i"lA#qeP>M&4(+'
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(maybe_0)
    maybe_1.filter(var_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    bool_2 = False
    var_1 = var_0.to_try()
    var_2 = var_1.bind(var_0)
    bool_3 = maybe_0.__eq__(var_2)
    var_3 = maybe_0.to_either()
    generic_0 = module_1.Generic()
    maybe_1 = module_0.Maybe(var_3, bool_2)
    maybe_1.bind(var_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(maybe_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.filter(none_type_0)
    var_4 = maybe_0.to_lazy()
    var_5 = var_0.ap(var_4)
    var_6 = maybe_0.map(maybe_0)
    var_7 = maybe_0.to_lazy()
    var_8 = maybe_0.bind(var_7)
    bool_1 = var_7.__eq__(var_7)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    str_0 = 'kmKMr"Na>fE]'
    maybe_2 = module_0.Maybe(bool_1, str_0)
    var_1 = maybe_0.to_box()
    maybe_1.map(var_1)


def test_case_6():
    int_0 = 432
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    bool_2 = False
    var_1 = maybe_0.to_either()
    generic_0 = module_1.Generic()
    maybe_1 = module_0.Maybe(var_1, bool_2)
    maybe_1.bind(var_0)


def test_case_8():
    str_0 = ',i"lA#qeP>M&4(+'
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_1 = var_0.ap(str_0)
    maybe_1.filter(var_1)


def test_case_9():
    object_0 = module_2.object()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(object_0)


def test_case_10():
    str_0 = ',i"lA#qeP>M&4(+'
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    bytes_0 = b" \x92\x11"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_13():
    int_0 = -741
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.to_either()
    dict_0.to_box()


def test_case_14():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(list_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_try()
    maybe_1.filter(var_2)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_0.to_box()


def test_case_17():
    str_0 = "(`GGx<CQN\r!:+"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    bool_0 = maybe_0.to_lazy()
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_19():
    str_0 = ',i"lA#qeP>M&4(+'
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    maybe_1.filter(var_2)


def test_case_20():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_try()
    var_0.map(none_type_0)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_either()
    generic_0 = maybe_0.to_validation()
    maybe_2 = module_0.Maybe(var_1, var_1)
    var_2 = maybe_0.to_validation()


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    bool_2 = False
    var_1 = maybe_0.to_either()
    generic_0 = module_1.Generic()
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_2 = maybe_1.to_validation()


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.ap(var_3)
    var_5 = var_0.map(var_0)
    var_6 = maybe_0.to_lazy()
    var_7 = maybe_0.bind(var_0)
    var_8 = var_7.to_try()
    bool_1 = var_6.__eq__(var_6)


def test_case_24():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()


def test_case_25():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.filter(maybe_0)
