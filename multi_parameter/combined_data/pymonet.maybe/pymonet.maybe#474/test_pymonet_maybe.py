# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.get_or_else(none_type_0)
    var_4 = maybe_0.map(none_type_0)
    var_5 = maybe_0.map(bool_1)
    var_6 = var_0.filter(var_3)
    var_7 = var_6.get_or_else(var_0)
    var_3.get_or_else(none_type_0)


def test_case_3():
    complex_0 = -1218.9022684931056 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.map(maybe_1)
    var_1 = var_0.filter(maybe_0)
    var_2 = maybe_0.to_box()
    maybe_1.filter(var_2)


def test_case_4():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(maybe_0)


def test_case_5():
    complex_0 = -1218.448179 - 571.96946j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.bind(complex_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = var_0.__eq__(maybe_0)


def test_case_6():
    tuple_0 = ()
    int_0 = 1
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [set_0, set_0]
    maybe_0 = module_0.Maybe(list_0, set_0)
    var_0 = maybe_0.bind(tuple_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.bind(var_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_1.ap(bool_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = 1
    set_0 = {int_0, int_0, int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_validation()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    complex_0 = -1218.9022684931056 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, var_0)
    maybe_2 = module_0.Maybe(var_1, none_type_0)
    var_2 = var_0.map(maybe_2)
    var_3 = var_2.filter(maybe_0)
    var_4 = maybe_0.to_box()
    bool_0 = var_2.__eq__(var_2)
    maybe_2.filter(var_3)


def test_case_12():
    int_0 = -296
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_lazy()


def test_case_13():
    bytes_0 = b"1k\xaf\x94\x84\x1fL\xc0\xf9\x147\xbe\x05\xb5@\xe0\xbc\xdd\x89"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.to_either()
    var_2 = var_1.bind(none_type_0)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_validation()
    var_5 = var_1.to_lazy()
    var_5.to_lazy()


def test_case_15():
    int_0 = -1207
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    complex_0 = -1218.9022684931056 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(complex_0, var_0)
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = var_0.map(maybe_2)
    var_2 = var_1.filter(maybe_0)
    var_3 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_1)
    var_4 = var_1.to_lazy()
    var_5 = maybe_2.to_lazy()
    maybe_2.filter(var_4)


def test_case_18():
    complex_0 = -1218.9022684931056 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, var_0)
    maybe_2 = module_0.Maybe(var_1, none_type_0)
    var_2 = var_0.map(maybe_2)
    var_3 = var_2.filter(maybe_0)
    var_4 = var_2.filter(var_0)
    bool_0 = var_4.to_try()
    var_5 = var_2.to_lazy()
    maybe_2.filter(var_5)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    int_0 = -912
    tuple_0 = (int_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    bytes_0 = b"\xbe"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    int_0 = -3549
    set_0 = {int_0, int_0, int_0}
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)


def test_case_22():
    complex_0 = -1218.448179 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    var_1 = var_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_2 = maybe_1.bind(complex_0)
    int_0 = 0
    maybe_2 = module_0.Maybe(bool_0, int_0)
    maybe_3 = module_0.Maybe(maybe_1, bool_0)
    var_3 = var_0.filter(maybe_0)
    bool_1 = var_2.__eq__(var_3)
    var_4 = maybe_3.filter(var_0)
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_3.filter(var_1)
    var_7 = var_5.ap(var_5)
    var_7.to_box()


def test_case_23():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_0.filter(var_0)


def test_case_24():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)


def test_case_25():
    complex_0 = -1218.448179 - 571.96946j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.to_either()
    none_type_1 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_1 = maybe_1.bind(complex_0)
    maybe_2 = module_0.Maybe(bool_0, maybe_1)
    var_2 = maybe_2.filter(maybe_2)
    bool_1 = maybe_0.__eq__(maybe_2)
    var_3 = var_2.filter(none_type_1)
    var_4 = var_3.to_lazy()
    var_5 = maybe_2.to_lazy()
    var_6 = var_2.filter(var_5)
    var_7 = var_4.map(var_5)
    var_8 = maybe_2.get_or_else(var_7)
    bytes_0 = b"\x0e\xe0W\xb8\xe7"
    maybe_3 = module_0.Maybe(none_type_0, var_0)
    bool_2 = True
    maybe_4 = module_0.Maybe(bool_2, bytes_0)
    var_8.to_validation()
