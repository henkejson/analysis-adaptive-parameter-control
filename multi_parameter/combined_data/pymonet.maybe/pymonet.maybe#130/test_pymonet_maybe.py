# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "\x0b4#"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.ap(str_0)
    var_1 = maybe_1.bind(var_0)
    bool_1 = var_1.__eq__(maybe_1)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.to_box()


def test_case_3():
    object_0 = module_1.object()
    float_0 = -3230.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    bool_0 = maybe_0.__eq__(object_0)


def test_case_4():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.map(maybe_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = var_2.to_either()
    maybe_1.filter(var_0)


def test_case_5():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    maybe_0.map(list_0)


def test_case_6():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    maybe_0.bind(var_0)


def test_case_7():
    float_0 = -1023.06
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(float_0)


def test_case_8():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_0)


def test_case_9():
    str_0 = "e'?"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = var_0.__eq__(str_0)


def test_case_10():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.filter(dict_0)


def test_case_11():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = var_2.to_either()
    maybe_1.filter(var_0)


def test_case_12():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(var_0)


def test_case_13():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_0)


def test_case_14():
    int_0 = 57
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(int_0)


def test_case_15():
    bytes_0 = b"MR\xcft\x00\x16#\xd4*\xba~\xf2\n"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_1.to_try()
    var_5 = maybe_0.to_either()
    var_6 = var_5.to_lazy()
    bool_0 = var_6.__eq__(var_0)
    var_5.to_either()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    str_0 = "\x0b4#"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = maybe_0.to_validation()
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_18():
    bool_0 = False
    complex_0 = -1287 - 1713j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_2 = var_1.to_either()
    maybe_1.filter(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(none_type_0)
    dict_0 = {}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_validation()
    var_1.ap(var_1)


def test_case_20():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_either()
    var_1.get_or_else(set_0)


def test_case_21():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.map(var_0)
