# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -1542.220049
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    complex_0 = 224 + 354.3008248523699j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, complex_0)
    var_0 = maybe_1.filter(bool_1)
    maybe_0.filter(bool_1)


def test_case_3():
    complex_0 = 224 + 354.3008248523699j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_1.filter(bool_1)
    maybe_0.filter(maybe_0)


def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.map(set_0)


def test_case_5():
    bytes_0 = b"LU\nm\xa4>\x18\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_validation()
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = var_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    var_5 = var_1.to_try()
    var_6 = var_0.filter(var_0)
    var_7 = var_6.to_box()
    bool_0 = var_3.__eq__(var_5)
    var_8 = maybe_0.bind(var_2)
    var_9 = maybe_1.ap(var_0)
    var_10 = var_3.to_try()
    var_11 = var_9.get_or_else(var_3)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    set_0 = set()
    float_0 = 2987.444
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(set_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(none_type_0)


def test_case_9():
    bytes_0 = b"LU\nm\xa4>\x18\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_validation()
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = var_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    var_5 = var_1.to_try()
    var_6 = var_0.filter(var_0)
    var_7 = var_6.to_box()
    var_8 = maybe_0.to_lazy()
    var_8.to_lazy()


def test_case_10():
    complex_0 = 224 + 354.3008248523699j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_3 = maybe_1.filter(var_1)
    maybe_0.filter(maybe_0)


def test_case_11():
    bytes_0 = b"\xc7\xe4\xa6\xdf\x05\xde\x07\x0ed\xb6\xfd\xf2"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)


def test_case_12():
    complex_0 = 224 + 354.3008248523699j
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_3 = maybe_1.filter(var_1)
    maybe_0.filter(maybe_0)


def test_case_13():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(none_type_0)


def test_case_17():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    complex_0 = 224 + 354.3008248523699j
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_2 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_3 = maybe_1.filter(var_1)
    var_4 = maybe_1.to_validation()
    maybe_0.filter(maybe_0)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_try()
    maybe_0.filter(var_2)


def test_case_20():
    str_0 = "n"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_21():
    complex_0 = 224 + 300.9230232855069j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    none_type_0 = None
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    bool_1 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_4 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_4)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_23():
    bytes_0 = b"LU\nm\xa4>\x18\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_0.to_validation()
    var_3 = var_0.get_or_else(maybe_0)
    var_4 = var_0.map(var_0)
    var_5 = var_0.to_either()
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    var_6 = var_1.to_try()
    var_7 = var_0.filter(var_0)
    var_8 = var_7.to_box()
    var_9 = maybe_0.to_lazy()
    var_9.to_lazy()


def test_case_24():
    bytes_0 = b"LU\nm\xa4>\x18\x82"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_0 = maybe_0.__eq__(maybe_1)
    var_2 = var_0.to_try()
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.get_or_else(var_2)
    var_5 = maybe_0.filter(var_4)
    var_6 = var_1.map(var_1)
    var_7 = maybe_0.to_either()
    var_8 = var_1.to_box()
    var_9 = maybe_0.map(var_8)
    maybe_2 = module_0.Maybe(var_1, var_0)
    var_10 = var_9.filter(maybe_1)
    var_11 = var_10.to_lazy()
