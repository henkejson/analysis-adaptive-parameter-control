# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    generic_0 = module_1.Generic()
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    generic_0.to_lazy()


def test_case_3():
    bytes_0 = b"7\xdd\xc8\xef\xdf\x19\xf1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.bind(var_0)
    var_5 = var_3.map(var_1)
    maybe_1 = module_0.Maybe(var_4, var_5)
    var_6 = maybe_0.bind(var_3)
    var_7 = var_4.to_lazy()
    var_8 = var_3.map(maybe_1)
    var_8.to_lazy()


def test_case_4():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(bool_2)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(bool_2)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.to_either()
    var_6 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.get_or_else(bool_0)
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(bool_2)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_3, bool_0)
    maybe_1.filter(var_2)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    str_0 = 'Ifny5|`f"Mg'
    dict_0 = {}
    list_0 = [str_0, str_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    str_1 = "M[,-B8Eg?xSw"
    dict_1 = {str_1: str_1, str_1: str_1}
    float_0 = -250.814907
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.ap(dict_1)
    var_1 = var_0.ap(maybe_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(maybe_1)


def test_case_11():
    complex_0 = 2838 + 6550.872081j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.ap(none_type_0)


def test_case_13():
    str_0 = ".T"
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(str_0)


def test_case_14():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_15():
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_3 = maybe_0.bind(var_0)
    bool_1 = True
    tuple_0 = (bool_0, bool_1, bool_0)
    var_4 = var_0.ap(tuple_0)
    var_5 = var_2.to_box()
    var_6 = var_5.to_either()
    var_7 = var_2.bind(var_2)
    var_8 = var_5.ap(var_1)
    var_9 = var_3.to_box()
    var_10 = maybe_0.map(var_6)
    var_9.get_or_else(var_1)


def test_case_16():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(var_1)


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_2, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_1)
    var_2 = var_1.to_try()
    var_3 = var_2.bind(none_type_0)
    var_3.to_try()


def test_case_18():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.filter(none_type_0)


def test_case_19():
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_1.filter(var_0)


def test_case_20():
    str_0 = "dHky\x0bTI;"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(str_0)


def test_case_21():
    complex_0 = 450.73877 - 475.1j
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(complex_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.get_or_else(bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_2 = module_0.Maybe(complex_0, bool_0)
    var_3 = maybe_2.to_lazy()
    var_4 = maybe_2.map(maybe_2)
    var_5 = maybe_1.to_lazy()
    var_6 = var_4.to_lazy()
    var_7 = var_3.bind(var_6)
    var_8 = var_3.to_validation()
    var_9 = maybe_2.to_either()
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_10 = maybe_3.ap(var_2)
    bool_1.filter(bool_1)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_23():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    bool_2 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    bool_3 = var_1.__eq__(none_type_0)
    var_4 = maybe_0.ap(bool_0)
    var_5 = maybe_0.to_either()
    var_6 = var_3.to_try()
    maybe_1 = module_0.Maybe(var_0, var_1)
    bool_4 = maybe_1.__eq__(maybe_0)
    var_7 = var_4.get_or_else(none_type_0)
    var_8 = var_4.bind(bool_4)
    var_9 = maybe_0.to_validation()
    var_7.to_lazy()
