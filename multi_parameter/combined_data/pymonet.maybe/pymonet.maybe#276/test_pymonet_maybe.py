# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_0.ap(bool_0)
    var_3 = var_1.to_try()
    var_4 = var_2.map(var_3)
    bool_2 = maybe_0.__eq__(var_4)
    var_3.to_validation()


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0.ap(var_0)


def test_case_4():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.map(maybe_0)
    var_1 = maybe_1.filter(var_0)
    bool_2 = False
    maybe_0.filter(bool_2)


def test_case_5():
    int_0 = 1455
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.map(int_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    int_0 = 1
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_2 = maybe_1.bind(none_type_0)
    var_3 = var_2.bind(bool_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(var_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_2.to_box()
    maybe_2.bind(var_3)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    bytes_0 = b"[\x8e\xb0"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.ap(none_type_0)


def test_case_9():
    str_0 = "=~nDk[BTjE;[ nY\n"
    set_0 = {str_0, str_0, str_0}
    str_1 = "RQ[?"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_1, bool_0)
    maybe_0.ap(set_0)


def test_case_10():
    int_0 = -375
    set_0 = {int_0, int_0, int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.filter(int_0)


def test_case_11():
    int_0 = 1595
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.bind(bool_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.to_either()
    var_4 = var_2.to_try()
    var_5 = maybe_0.filter(bool_0)
    var_6 = var_5.to_validation()
    var_7 = maybe_0.to_validation()
    var_6.bind(var_6)


def test_case_14():
    int_0 = -375
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(int_0)
    var_2 = var_1.to_validation()
    bool_0 = var_2.__eq__(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_1.to_validation()
    none_type_0 = None
    var_5 = var_1.to_try()
    var_3.map(none_type_0)


def test_case_15():
    bytes_0 = b">\x0eh\xa6L\x1bj\xd3\xb4\x90\x00\xb6"
    float_0 = -1715.6
    bool_0 = True
    list_0 = [bytes_0, bytes_0, float_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(list_0)
    var_1.to_box()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    int_0 = -1515
    bool_2 = False
    maybe_1 = module_0.Maybe(int_0, bool_2)
    var_0 = maybe_0.to_try()


def test_case_17():
    bool_0 = False
    bool_1 = False
    none_type_0 = None
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_1.to_try()
    var_3.to_box()


def test_case_18():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(dict_0)


def test_case_19():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.to_validation()
    bool_0 = True
    complex_0 = 723.64 + 1810.78j
    maybe_2 = module_0.Maybe(bool_0, complex_0)
    list_0 = [complex_0, complex_0]
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_2.to_try()
    var_3 = maybe_2.to_lazy()
    var_4 = var_2.get_or_else(var_3)
    var_5 = var_2.filter(var_4)
    var_6 = maybe_2.map(list_0)
    var_7 = var_3.to_validation()
    var_8 = var_6.to_try()
    var_9 = var_2.get_or_else(var_6)
    maybe_0.filter(var_1)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_2.bind(var_2)
    var_5 = maybe_0.get_or_else(var_0)
    bool_2 = var_4.__eq__(var_0)
    var_6 = var_2.to_either()
    var_7 = var_0.bind(var_2)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.ap(var_1)
    var_3 = maybe_0.bind(var_1)
    var_4 = var_1.map(var_1)
    var_5 = var_1.map(bool_0)
    var_6 = var_4.bind(var_4)
    var_7 = var_4.filter(var_1)
    bool_2 = var_1.__eq__(var_1)
    var_8 = var_7.ap(var_5)
    var_9 = var_4.to_box()
    var_10 = maybe_0.to_either()
    var_11 = var_6.ap(var_8)
    var_12 = var_8.to_either()
    var_13 = var_4.to_either()
    bytes_0 = b"\xf5l\xe6b\xb2\x86VZ\xe9\xc9"
    maybe_1 = module_0.Maybe(bytes_0, var_1)
    bool_3 = maybe_0.__eq__(maybe_1)
    var_14 = var_13.map(var_0)
    bool_4 = var_13.__eq__(var_8)
    var_15 = var_6.to_validation()
    var_16 = maybe_0.get_or_else(var_10)
    var_14.to_either()


def test_case_22():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)
