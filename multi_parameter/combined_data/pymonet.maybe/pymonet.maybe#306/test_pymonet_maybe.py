# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "\rQl"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"r9\x07\xb2\xec"
    bytes_1 = b"\x16\x96pE\xed\x17?\xe2S\xab\xd9\xf5\x05\xea&_s\x18*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.get_or_else(bytes_0)
    bool_0 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = maybe_0.bind(bytes_1)
    var_4 = var_3.ap(maybe_0)
    var_5 = var_3.filter(var_4)
    var_6 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(var_4, var_3)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_box()


def test_case_4():
    int_0 = -1636
    str_0 = ""
    maybe_0 = module_0.Maybe(int_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_1.get_or_else(int_0)
    var_4 = maybe_1.map(var_3)


def test_case_5():
    none_type_0 = None
    complex_0 = 616.1 + 2392.33326j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\x11\xb0\x91\xfaG"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    str_0 = "*/9s'|RF.kqF"
    var_3 = maybe_0.bind(str_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)


def test_case_7():
    str_0 = "Hu\\?c)skey2ffD"
    set_0 = set()
    int_0 = 2758
    tuple_0 = (str_0, set_0, int_0)
    list_0 = [tuple_0, int_0, tuple_0]
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(list_0)


def test_case_8():
    bytes_0 = b"\x16\x96pE\xed\x17?\xe2S\xab\xd9\xf5\x05\xea&_s\x18*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(var_1)
    maybe_2 = module_0.Maybe(var_1, var_2)
    maybe_1.filter(var_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_1 = set()
    maybe_0 = module_0.Maybe(set_1, set_1)
    var_0 = maybe_0.get_or_else(set_0)
    var_0.to_either()


def test_case_12():
    float_0 = -2160.0
    dict_0 = {float_0: float_0, float_0: float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_13():
    int_0 = -1015
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bool_0, maybe_0)
    var_1 = maybe_2.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_1.to_box()


def test_case_16():
    bytes_0 = b"\x16\x96pE\xed\x17?\xe2S\xab\xd9\xf5\x05\xea&_s\x18*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.filter(var_1)
    maybe_2 = module_0.Maybe(var_1, var_2)
    maybe_1.filter(var_0)


def test_case_17():
    str_0 = "!m<}{SmZ"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_try()
    var_0.ap(maybe_0)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.to_box()
    var_2 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    var_1 = maybe_0.map(bool_1)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_2 = var_0.to_box()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(var_2, bool_3)
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_try()
    var_2.to_box()


def test_case_21():
    bytes_0 = b"r9\x07\xb2\xec"
    bytes_1 = b"\x16\x96pE\xed\x17?\xe2S\xab\xd9\xf5\x05\xea&_s\x18*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.get_or_else(bytes_0)
    var_4 = var_0.to_box()
    var_5 = maybe_0.to_validation()
    var_6 = var_2.to_try()
    bool_0 = var_3.__eq__(bytes_1)
    bool_1 = True
    bool_2 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_7 = maybe_1.to_box()
    var_8 = maybe_1.ap(bool_1)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    var_9 = var_8.to_lazy()
    maybe_3 = module_0.Maybe(maybe_2, bool_1)
    var_4.get_or_else(var_8)


def test_case_22():
    bytes_0 = b"r9\x07\xb2\xec"
    bytes_1 = b"\x16\x96pE\xed\x17?\xe2S\xab\xd9\xf5\x05\xea&_s\x18*"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.get_or_else(bytes_0)
    var_4 = var_0.to_box()
    var_5 = maybe_0.to_validation()
    var_6 = var_2.to_try()
    bool_0 = var_3.__eq__(bytes_1)
    bool_1 = False
    bool_2 = maybe_0.__eq__(var_1)
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    bool_3 = maybe_1.__eq__(maybe_1)
    var_7 = maybe_1.to_box()
    maybe_1.ap(bool_1)
