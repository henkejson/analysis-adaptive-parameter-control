# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "u\n7\x0c\x0cX%"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    str_0 = "u\n7\x0c\x0cX%"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    int_0 = -2371
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_4():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.map(var_3)


def test_case_5():
    str_0 = "u\n7\x0c\x0cX%"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    int_0 = -2371
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(int_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.map(none_type_0)
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2.filter(none_type_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\x06\xa0\xecH<\x1f5i\x1a\x93:_\x7f\xfa\xa3D\n"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    complex_0 = 287.316041 - 889.6j
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    var_1.filter(complex_0)


def test_case_9():
    str_0 = "u\n7\x0c\x0cX%"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.ap(none_type_0)


def test_case_10():
    str_0 = "u\n7\x0c\x0cX%"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_11():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.get_or_else(bool_0)
    var_3 = var_0.ap(var_0)
    maybe_1 = module_0.Maybe(var_1, var_3)
    var_2.to_lazy()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    float_0 = -391.75383
    bytes_0 = b"\xd0]~\x82\xe7\x8e\xd2eCj\xae\x1b"
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_1.get_or_else(float_0)
    var_1.to_try()


def test_case_13():
    str_0 = "u\n7\x0c\x0cX%"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_validation()
    maybe_1.filter(var_1)


def test_case_14():
    complex_0 = 2792 - 1311j
    bytes_0 = b"*\xb3"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_validation()
    var_3.bind(complex_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    var_3 = var_1.to_either()
    var_0.to_validation()


def test_case_16():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    float_0 = 2818.44971
    bool_2 = True
    maybe_1 = module_0.Maybe(float_0, bool_2)
    var_1 = maybe_0.to_validation()
    maybe_0.bind(var_1)


def test_case_17():
    bytes_0 = b"[\xf3\x8e"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(var_0)
    var_0.to_lazy()


def test_case_18():
    bool_0 = False
    str_0 = "%:{mtMa6oC~`qyI1"
    set_0 = {bool_0, str_0, bool_0, bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    str_0 = "u\n7\x0c\x0cX%"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.filter(var_2)
    var_2.map(maybe_1)


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    bytes_0 = b"0\x04"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(none_type_0)


def test_case_22():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.filter(list_0)
    var_2 = var_1.get_or_else(var_1)
    bool_2 = var_2.__eq__(maybe_0)
    bool_3 = var_2.__eq__(bool_1)
    maybe_1 = module_0.Maybe(var_1, var_2)
    var_3 = maybe_1.map(var_2)
    bool_4 = True
    maybe_2 = module_0.Maybe(bool_4, list_0)
    var_4 = maybe_2.bind(maybe_2)
    var_5 = var_2.to_validation()
    var_6 = var_1.bind(var_5)
    var_7 = maybe_0.map(bool_3)
    var_8 = var_4.to_validation()
    var_9 = var_7.to_either()
    var_10 = var_7.to_either()
    bool_5 = maybe_1.__eq__(var_3)
    var_11 = maybe_2.to_try()
    bool_6 = var_4.__eq__(maybe_2)
    var_12 = var_3.to_validation()
    var_13 = var_11.map(var_12)
    var_8.map(none_type_0)
