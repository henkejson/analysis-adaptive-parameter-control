# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"o\x89V\r\x03\x97{\xb2\xeaI\xc3}\x136\x15\x01"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(bool_0)
    var_3 = maybe_0.to_box()
    bool_2 = maybe_0.__eq__(var_3)
    var_4 = var_1.to_box()
    var_3.filter(var_2)


def test_case_3():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_1.get_or_else(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.map(bool_0)


def test_case_5():
    float_0 = -2940.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(float_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(var_1, float_0)
    var_2 = maybe_1.to_box()
    float_0.filter(maybe_1)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    complex_0 = 3759.7 - 2721j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    none_type_0 = None
    str_0 = "\n        Take mapper function and return value of Left.\n\n        :returns: Stored value\n        :rtype: A\n        "
    none_type_1 = None
    maybe_1 = module_0.Maybe(str_0, none_type_1)
    bool_2 = maybe_1.__eq__(bool_1)
    maybe_1.ap(none_type_0)


def test_case_8():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_9():
    bool_0 = False
    int_0 = 2030
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = var_1.bind(bool_1)
    maybe_1 = module_0.Maybe(int_0, var_1)
    var_0.to_box()


def test_case_10():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    set_0 = set()
    var_1 = maybe_0.filter(set_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_lazy()
    bool_0 = var_3.__eq__(set_0)
    var_4 = var_2.bind(var_2)
    maybe_1 = module_0.Maybe(var_0, var_2)
    var_5 = var_3.to_either()
    var_6 = var_5.to_box()
    var_3.filter(var_3)


def test_case_11():
    float_0 = 1370.63
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.ap(float_0)


def test_case_12():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    bool_2 = var_2.__eq__(var_2)
    var_3 = var_1.to_box()
    var_2.filter(bool_2)


def test_case_13():
    float_0 = 1074.13
    str_0 = "[;9_Hk\rDb/jd"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(float_0)


def test_case_14():
    float_0 = -2940.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_0)
    bool_0 = True
    var_3 = maybe_0.to_try()
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = var_0.bind(bool_0)
    var_3.to_lazy()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_either()


def test_case_16():
    int_0 = 3877
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(maybe_0, var_1)
    none_type_0 = None
    maybe_2 = module_0.Maybe(var_0, var_1)
    bool_1 = maybe_0.__eq__(int_0)
    var_1.ap(none_type_0)


def test_case_17():
    float_0 = 626.97206
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(maybe_0)


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    bool_2 = maybe_1.__eq__(var_2)
    var_0.ap(var_0)


def test_case_19():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_box()
    str_0 = "C2U=[,~v?N&"
    list_0 = [str_0, str_0]
    none_type_0 = None
    bool_0 = var_0.__eq__(list_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.map(none_type_0)


def test_case_20():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(int_0)
