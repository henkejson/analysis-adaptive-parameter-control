# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "tKcOPU'\x0bMM}("
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_0)
    var_3 = maybe_0.to_try()


def test_case_3():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_0)
    var_3 = maybe_0.map(var_1)
    bool_1 = var_0.__eq__(var_1)
    var_4 = var_1.to_box()
    bool_2 = var_1.__eq__(generic_0)


def test_case_4():
    int_0 = 1305
    bytes_0 = b"\xa0~H\xd5\xbc)\x9b\xad"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_1.map(var_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_1.bind(bool_0)
    var_3 = var_2.to_either()
    var_4 = maybe_1.to_try()
    var_5 = var_2.map(var_4)
    var_4.ap(var_4)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_2, bool_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    str_0 = "IqSvUEiW:ISVzvfZM\r"
    none_type_1 = None
    bool_3 = False
    maybe_3 = module_0.Maybe(none_type_1, bool_3)
    maybe_3.bind(str_0)


def test_case_8():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.ap(dict_0)
    maybe_1 = module_0.Maybe(dict_0, dict_0)


def test_case_9():
    str_0 = "vty`-hcd"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_10():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = var_1.map(none_type_0)
    var_3 = var_0.bind(maybe_1)
    maybe_1.filter(maybe_0)


def test_case_11():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_1.get_or_else(var_0)
    var_4 = maybe_0.to_try()
    list_0 = []
    var_5 = var_0.ap(list_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = maybe_0.get_or_else(none_type_0)


def test_case_13():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_either()
    var_3 = var_0.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_2.to_either()
    var_4 = maybe_0.to_box()


def test_case_16():
    str_0 = "d;u +("
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.get_or_else(str_0)
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_try()
    bool_0 = True
    var_4 = maybe_0.to_validation()
    var_5 = var_0.filter(var_4)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = var_3.__eq__(none_type_0)
    var_6 = var_0.get_or_else(none_type_0)
    var_7 = var_0.map(var_6)
    var_8 = maybe_1.to_try()
    var_9 = maybe_1.bind(var_6)
    var_10 = maybe_1.to_try()
    var_11 = var_9.map(var_0)
    var_12 = var_11.to_lazy()
    var_13 = maybe_1.to_lazy()


def test_case_17():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.to_validation()
    var_1 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(maybe_1, bytes_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_2.to_box()
    var_4 = maybe_1.to_box()


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_1.to_box()


def test_case_19():
    bytes_0 = b"\xa6\xcb\xff\xc99"
    bool_0 = True
    list_0 = []
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_0, bool_0: list_0, bool_0: list_0}
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    tuple_1 = ()
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_1, bool_1)
    var_2 = maybe_1.ap(var_1)
    list_1 = [var_2, var_2]
    maybe_2 = module_0.Maybe(list_1, var_2)
    var_3 = maybe_2.to_validation()
    var_4 = var_3.to_either()
    var_4.map(dict_0)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(bool_0)


def test_case_21():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_box()
    bool_0 = var_1.__eq__(var_0)
    var_3 = maybe_0.map(var_0)
    bool_1 = var_2.__eq__(var_3)
    var_4 = var_1.to_box()
    bool_2 = var_1.__eq__(maybe_0)
