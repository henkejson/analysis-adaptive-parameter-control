# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xff\xae\x05\xa8\xdd\x7f\xb5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.map(bytes_0)
    int_0 = 1678
    var_1 = var_0.ap(int_0)
    var_2 = module_0.Maybe(maybe_0, var_1)
    var_3 = var_2.filter(var_2)
    bool_0 = maybe_0.__eq__(var_3)


def test_case_3():
    float_0 = -2351.278302
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_1.__eq__(var_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_0.to_box()
    var_0.get_or_else(var_1)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = var_0.ap(maybe_0)
    maybe_0.filter(var_1)


def test_case_7():
    str_0 = "^2>T#TO;Nm"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(var_1)
    var_2 = var_1.to_either()
    maybe_0.ap(var_2)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_1.filter(maybe_1)
    maybe_0.filter(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_lazy()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    list_0 = [bool_0, none_type_0, none_type_0]
    var_0 = maybe_0.get_or_else(list_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = var_1.ap(maybe_0)
    var_3 = var_1.to_either()
    maybe_0.filter(var_2)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = var_0.to_either()
    maybe_0.filter(maybe_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.to_validation()
    var_3.bind(var_3)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_3 = var_1.to_try()
    var_3.bind(var_0)


def test_case_15():
    bytes_0 = b"\xf1\x1ay\xb9\xc7\x92\x8bJJ\x0b\x03\xed\xa6\xeb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    str_0 = 'VhXcG;_["mxf$-/&'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    str_1 = ".w<!\t0Wb;CR"
    set_0 = {str_1}
    var_1 = var_0.get_or_else(set_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_try()
    var_0.filter(var_2)


def test_case_17():
    bytes_0 = b"\xff\xae\x05\xa8\xdd\x7f\xb5"
    str_0 = "vNu\n5>Pt\x0bn>>\\A F"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.map(bytes_0)
    int_0 = 1678
    var_1 = var_0.ap(int_0)
    var_2 = maybe_0.to_validation()
    var_2.filter(str_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_1.filter(maybe_1)
    maybe_0.filter(var_0)


def test_case_19():
    float_0 = -2351.278302
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_validation()
    var_2 = var_0.to_box()
    var_0.get_or_else(var_1)


def test_case_20():
    float_0 = -2351.278302
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_1.ap(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_1.filter(none_type_0)
    bool_0 = maybe_0.__eq__(maybe_1)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = var_1.ap(maybe_0)
    var_4 = var_1.bind(none_type_0)
    var_5 = var_1.get_or_else(maybe_1)
    var_6 = var_5.to_lazy()
    maybe_0.filter(var_5)


def test_case_22():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    maybe_0.bind(var_1)
