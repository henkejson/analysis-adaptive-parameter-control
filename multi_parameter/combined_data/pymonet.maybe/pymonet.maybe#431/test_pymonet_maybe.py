# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -1091.238
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\x88\xcb\x0cWL\xdbX\xe1)\x85"
    float_0 = 1748.25
    maybe_0 = module_0.Maybe(float_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_1 = var_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.ap(var_1)
    var_3 = var_0.to_box()
    maybe_1.filter(maybe_1)


def test_case_3():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.ap(var_0)
    var_4 = maybe_0.ap(none_type_0)
    var_5 = var_0.to_validation()
    var_1.to_validation()


def test_case_4():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(list_1, none_type_1)
    var_3 = maybe_0.get_or_else(var_0)
    maybe_1.filter(none_type_1)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()


def test_case_7():
    bytes_0 = b"\xd8\x18>"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    var_1 = maybe_1.to_try()
    maybe_1.bind(none_type_1)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = maybe_0.to_either()
    bool_1 = var_2.__eq__(bool_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_12():
    int_0 = 0
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_13():
    bytes_0 = b"\x9b\x08\xad\x83vz\xf9,:\x84"
    set_0 = {bytes_0}
    float_0 = -1031.112
    maybe_0 = module_0.Maybe(float_0, set_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2 = var_0.ap(var_0)
    var_3 = maybe_1.get_or_else(var_2)
    maybe_1.filter(maybe_1)


def test_case_14():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    float_0 = 21.3953
    bool_1 = False
    maybe_0 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_1.filter(list_0)


def test_case_15():
    list_0 = []
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(list_0, none_type_1)
    var_3 = maybe_0.get_or_else(var_0)
    maybe_1.filter(none_type_1)


def test_case_16():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_0.to_box()


def test_case_17():
    float_0 = -1230.7544
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()


def test_case_18():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(generic_0)
    var_2 = var_0.to_validation()
    var_1.to_box()


def test_case_19():
    float_0 = -426.3639
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(dict_0)


def test_case_21():
    bytes_0 = b"\x9b\x08\xad\x83vz\xf9,:\x84"
    set_0 = {bytes_0}
    float_0 = -1031.112
    maybe_0 = module_0.Maybe(float_0, set_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.filter(bytes_0)
    var_2 = var_1.bind(set_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    list_0 = [bytes_0, set_0]
    bool_0 = var_2.__eq__(maybe_1)
    var_3 = var_0.ap(list_0)
    var_4 = maybe_1.get_or_else(var_3)
    var_5 = var_1.to_box()
    maybe_1.filter(maybe_1)
