# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.maybe as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(maybe_0)
    bool_1 = var_0.__eq__(var_2)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = False
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()
    bool_2 = var_1.__eq__(var_0)
    var_3 = var_1.map(bool_0)
    maybe_1 = module_1.Maybe(none_type_0, bool_1)
    var_4 = maybe_1.to_validation()
    var_5 = var_4.to_lazy()
    var_6 = var_5.to_either()
    bool_3 = var_3.__eq__(maybe_1)
    maybe_2 = module_1.Maybe(none_type_0, none_type_0)
    var_7 = maybe_2.to_try()
    var_7.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, none_type_0)
    maybe_1 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.to_either()
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    generic_0 = module_0.Generic()
    maybe_0 = module_1.Maybe(generic_0, generic_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_try()


def test_case_6():
    set_0 = set()
    maybe_0 = module_1.Maybe(set_0, set_0)
    maybe_1 = module_1.Maybe(set_0, set_0)
    bytes_0 = b"T\\D\xd4\xc7Y\xab\x02\xa1\xce\xca\x17"
    maybe_0.bind(bytes_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.filter(var_2)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    list_0 = [none_type_0, bool_0]
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(bool_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_1.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_11():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(bool_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_13():
    complex_0 = 2081.358 + 947.6j
    bool_0 = False
    float_0 = 2682.761589
    tuple_0 = (bool_0, float_0)
    list_0 = []
    tuple_1 = (list_0, list_0, float_0, bool_0)
    maybe_0 = module_1.Maybe(tuple_0, tuple_1)
    var_0 = maybe_0.to_box()
    var_0.bind(complex_0)


def test_case_14():
    bytes_0 = b"j\x0e!\x9c\xdf\xa3\xb36\x95\xe8\x9a\xf9\x89V"
    bool_0 = False
    maybe_0 = module_1.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_1.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_16():
    float_0 = 864.687568
    bool_0 = True
    maybe_0 = module_1.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    bool_1 = var_1.__eq__(float_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_1.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.get_or_else(bool_0)


def test_case_18():
    complex_0 = 1060.32 + 3149.91713j
    bool_0 = True
    bool_1 = False
    maybe_0 = module_1.Maybe(complex_0, bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.ap(bool_0)
    var_4 = maybe_0.filter(maybe_0)
    var_5 = maybe_0.ap(var_0)
    bool_1.to_box()
