# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"L'\xbb\x19\xbfZ\x88\xd3\xa5\xc7\x94\x0b"
    float_0 = 706.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = maybe_0.__eq__(var_0)
    module_1.object(**float_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = var_0.filter(bool_0)
    bool_2 = maybe_0.__eq__(none_type_0)


def test_case_4():
    bool_0 = True
    float_0 = -171.582422
    list_0 = [float_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    bool_2 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    str_0 = "Cu%*&P`P%o"
    bool_3 = maybe_1.__eq__(str_0)
    var_2 = maybe_1.map(bool_2)
    var_3 = maybe_1.map(bool_3)
    var_4 = var_2.bind(none_type_0)
    int_0 = 0
    var_1.ap(int_0)


def test_case_5():
    float_0 = -171.582422
    list_0 = [float_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.map(bool_1)
    var_3 = maybe_1.map(bool_2)
    var_4 = var_2.bind(none_type_0)
    bool_3 = False
    maybe_2 = module_0.Maybe(var_2, bool_3)
    var_5 = maybe_0.filter(bool_0)
    maybe_2.map(var_5)


def test_case_6():
    bytes_0 = b"L'\xbb\x19\xbfZ\x88\xd3\xa5\xc7\x94\x0b"
    float_0 = 706.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.bind(bytes_0)
    var_2 = var_1.to_lazy()


def test_case_7():
    str_0 = ".\ts_;<T9n5*PRScy@GU]"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(str_0)


def test_case_8():
    none_type_0 = None
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = var_0.filter(bool_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_3 = maybe_1.get_or_else(var_1)


def test_case_10():
    bytes_0 = b"==H\xfbP\x19\xd4NzG\x98\xf9\xca9H\xa9"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_either()
    maybe_0.filter(var_1)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    int_0 = 1384
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_either()
    var_1.get_or_else(none_type_1)


def test_case_12():
    none_type_0 = None
    int_0 = 0
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.to_either()
    var_0.ap(none_type_0)


def test_case_13():
    bool_0 = False
    dict_0 = {}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.bind(bool_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = var_0.__eq__(none_type_0)
    float_0 = -1785.3
    maybe_1 = module_0.Maybe(none_type_0, float_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_2.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    int_0 = -899
    set_0 = {int_0, int_0}
    int_1 = -3418
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(set_0)


def test_case_18():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_2.filter(dict_0)


def test_case_19():
    float_0 = 3496.277271
    str_0 = "|n&y 2] 2rh~"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(float_0)
    var_2 = var_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.to_validation()
    var_5.bind(var_1)


def test_case_20():
    generic_0 = module_2.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(generic_0, bool_1)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_box()
    var_5 = var_4.to_validation()
    var_6 = var_5.to_box()
    var_7 = var_6.to_try()
    var_7.map(var_2)


def test_case_21():
    bytes_0 = b"==H\xfbP\x19\xd4NzG\x98\xf9\xca9H\xa9"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.bind(var_0)
    bool_0 = var_2.__eq__(bytes_0)
    maybe_2 = module_0.Maybe(bytes_0, bytes_0)
    bool_1 = maybe_2.__eq__(maybe_2)
    var_3 = maybe_2.to_try()
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.ap(bool_1)
    bool_2 = var_4.__eq__(bool_1)
    bool_3 = False
    maybe_3 = module_0.Maybe(var_4, bool_3)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, var_0)
    var_1 = maybe_1.to_either()
    maybe_1.bind(none_type_0)
