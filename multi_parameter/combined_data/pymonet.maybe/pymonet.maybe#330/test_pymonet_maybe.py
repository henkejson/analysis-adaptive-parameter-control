# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bool_0)


def test_case_3():
    bytes_0 = b"\xb1S\xe8\xc8\x90u\xdfIC\xf4\xe5\xb2\xca"
    str_0 = "t'*yOXWl ="
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_lazy()
    str_1 = '`8&\n"T8k/H$xeaO'
    bool_0 = True
    maybe_1 = module_0.Maybe(str_1, bool_0)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_either()
    var_3.filter(var_1)


def test_case_4():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    set_0 = {bool_0, bool_0, bool_0}
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_1.map(maybe_1)


def test_case_5():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.filter(var_1)
    bool_0 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_1, var_0)
    set_0 = set()
    maybe_2 = module_0.Maybe(set_0, bool_0)
    maybe_2.filter(var_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    maybe_0.bind(var_1)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    str_0 = "&e{"
    float_0 = 350.011939
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_try()


def test_case_10():
    str_0 = "COx"
    list_0 = [str_0, str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.get_or_else(maybe_0)
    var_3 = var_0.to_try()
    var_4 = var_2.filter(var_2)
    var_5 = var_4.bind(maybe_0)
    var_6 = var_4.to_try()
    var_7 = var_1.bind(var_6)
    var_8 = var_2.to_either()
    var_9 = var_7.to_lazy()
    var_6.to_either()


def test_case_11():
    generic_0 = module_1.Generic()
    str_0 = "\n        :param value: value to store in Box\n        :type value: Any\n        "
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(generic_0)
    var_1.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_box()
    maybe_1.filter(var_0)


def test_case_16():
    str_0 = "COx"
    list_0 = [str_0, str_0, str_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_17():
    bool_0 = True
    int_0 = 0
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(bool_0)
    var_1.to_box()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.ap(bool_0)


def test_case_19():
    bytes_0 = b"\x18\x9c\xdb\xe2ew\xc4;\x82w\x9cD)\xa6%6\x96\xbb"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_3.to_try()
    var_5.to_lazy()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_3.to_try()
    var_5.to_lazy()


def test_case_22():
    str_0 = "COx"
    list_0 = [str_0, str_0, str_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.filter(list_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = var_1.__eq__(var_0)
    var_2 = maybe_1.to_try()
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_0, bool_2)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_1.to_validation()
    var_5 = maybe_1.ap(str_0)
    maybe_2.filter(var_5)
