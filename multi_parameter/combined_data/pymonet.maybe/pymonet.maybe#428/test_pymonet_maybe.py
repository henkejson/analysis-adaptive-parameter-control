# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"\xd4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    generic_0 = module_1.Generic()
    str_0 = "$Z!zO#sNeC"
    set_0 = {str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    bool_0 = maybe_0.__eq__(generic_0)


def test_case_3():
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bytes_0)
    var_1 = maybe_1.map(var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_1.filter(var_0)
    var_3 = maybe_2.to_validation()
    maybe_2.filter(var_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, bytes_0)
    var_1 = maybe_1.map(var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_1.filter(var_0)
    var_3 = var_2.bind(var_0)
    maybe_2.filter(var_0)


def test_case_6():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = False
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    int_0 = 1
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_1.map(var_0)
    var_3 = var_2.bind(var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_4 = var_3.filter(var_0)
    var_5 = maybe_2.to_validation()
    maybe_2.filter(var_2)


def test_case_8():
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(var_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.bind(var_0)
    bool_0 = False
    var_3 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_4 = var_2.filter(var_0)
    var_5 = var_2.get_or_else(none_type_0)
    var_6 = var_4.filter(var_5)


def test_case_10():
    object_0 = module_2.object()
    none_type_0 = None
    bytes_0 = b":V\xa3p/\xbeA\x8f\n2\x1f\xe6\xf1\xd5R"
    none_type_1 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    int_0 = 336
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.map(int_0)
    var_2 = var_1.to_either()
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.to_box()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    int_0 = 1
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.bind(var_1)
    bool_1 = False
    maybe_2 = module_0.Maybe(int_0, bool_1)
    var_3 = var_2.filter(var_1)
    var_4 = var_0.ap(bool_0)
    var_5 = maybe_2.to_validation()
    var_6 = maybe_2.get_or_else(bool_0)
    var_7 = maybe_2.to_either()
    var_7.filter(bool_1)


def test_case_13():
    bool_0 = False
    bytes_0 = b"\xd4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_0.ap(bool_0)


def test_case_14():
    none_type_0 = None
    str_0 = "_!\r"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.ap(none_type_0)


def test_case_15():
    object_0 = module_2.object()
    set_0 = {object_0, object_0, object_0}
    float_0 = -1578.251
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.ap(float_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_3.bind(set_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_17():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    int_0 = 1
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.bind(var_0)
    bool_0 = False
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_3 = var_2.filter(var_0)
    var_4 = maybe_2.to_validation()
    var_5 = var_3.to_validation()
    var_6 = maybe_0.filter(var_5)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    var_0 = maybe_0.to_lazy()
    bool_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(var_0, bytes_0)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_2.bind(var_2)
    maybe_3 = module_0.Maybe(var_2, bool_0)
    var_4 = var_3.filter(var_1)
    var_5 = maybe_3.to_validation()
    var_6 = maybe_3.get_or_else(var_1)
    var_7 = maybe_0.to_try()
    var_8 = var_3.to_either()
    maybe_3.filter(var_6)


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_0.to_lazy()
    int_0 = 1
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_1.map(var_1)
    var_4 = var_3.bind(var_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(int_0, bool_2)
    var_5 = var_4.filter(bool_2)
    var_6 = maybe_2.to_validation()
    maybe_2.filter(maybe_1)


def test_case_22():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    int_0 = 1
    var_3 = var_2.ap(var_2)
    var_4 = var_2.to_box()
    var_5 = maybe_1.map(var_2)
    var_6 = var_5.bind(var_2)
    bool_2 = False
    maybe_2 = module_0.Maybe(int_0, bool_2)
    var_7 = var_6.filter(var_1)
    var_8 = maybe_2.to_validation()
    var_9 = maybe_0.to_try()
    maybe_2.filter(maybe_1)


def test_case_23():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bytes_0)
    int_0 = 1
    var_2 = maybe_1.ap(maybe_1)
    maybe_3 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(var_1)


def test_case_24():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bytes_0 = b"\xfbA\xcf\xa7\x16%"
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(var_1, bytes_0)
    var_3 = var_0.to_validation()
    var_4 = maybe_2.map(var_0)
    int_0 = 1
    var_5 = maybe_2.map(var_2)
    bool_2 = maybe_2.__eq__(var_2)
    var_6 = var_5.bind(var_2)
    maybe_3 = module_0.Maybe(int_0, bool_0)
    var_7 = var_6.filter(var_1)
    var_8 = maybe_3.to_validation()
    var_9 = maybe_3.get_or_else(bool_0)
    var_10 = maybe_0.to_try()
    var_11 = var_6.to_either()
    maybe_3.filter(var_9)
