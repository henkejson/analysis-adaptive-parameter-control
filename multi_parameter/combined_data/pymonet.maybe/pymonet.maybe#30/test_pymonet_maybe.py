# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xc0l4\xae)\x94\x86=-\xd7`'\xb53I\x1a"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(maybe_1)
    var_1 = maybe_1.filter(var_0)
    bool_1 = True
    bool_2 = False
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.filter(var_2)
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    var_4 = maybe_1.map(bool_0)
    var_5 = var_4.get_or_else(maybe_1)
    maybe_2.filter(none_type_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bytes_0 = b"Y\xdcXV\xbb\x02\xae\x11\x1a\xc9\xea\x02\xee\xf4"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_validation()
    var_2.ap(var_2)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.filter(var_0)
    bool_1 = True
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.filter(var_2)
    maybe_2 = module_0.Maybe(bool_1, var_2)
    var_4 = maybe_2.get_or_else(none_type_0)
    bool_2 = maybe_2.__eq__(bool_0)
    var_5 = maybe_2.ap(bool_0)


def test_case_8():
    bytes_0 = b"\xcau\x1c\xdc\x80*a\x8d4\xe8\x08\x1b\xad\x037\x02"
    float_0 = 937.018
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, float_0: float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.ap(dict_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_0.get_or_else(none_type_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.filter(none_type_0)


def test_case_11():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(tuple_0)


def test_case_12():
    int_0 = 1646
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_either()
    none_type_0 = None
    var_2 = maybe_1.to_validation()
    var_3 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_3)


def test_case_14():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_either()
    none_type_0 = None
    var_3 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(none_type_0)
    var_4 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_4)


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    int_0 = -1287
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(int_0)


def test_case_18():
    str_0 = "S.LO,6 D6)a"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_try()
    bool_2 = var_0.__eq__(bool_1)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(var_0)


def test_case_21():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()


def test_case_22():
    bytes_0 = b"Y\xdcXV\xbb\x02\xae\x11\x1a\xc9\xea\x02\xee\xf4"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_validation()
    var_2.ap(var_2)


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_either()
    none_type_0 = None
    var_3 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(none_type_0)
    var_4 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_4)


def test_case_24():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_25():
    complex_0 = -2751.4 - 2628.1704j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(var_2)
    var_3 = var_0.to_either()
    var_4 = var_3.to_validation()
    var_0.ap(var_0)


def test_case_26():
    bytes_0 = b'-4"\xdaTR\xca\x89W/\x07\x0e\x8a'
    tuple_0 = ()
    none_type_0 = None
    str_0 = "Mi}\t3V"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.ap(tuple_0)
    var_2 = var_1.get_or_else(bytes_0)
    str_1 = "b-\x0c!'Q\x0c{e-T7\rCl_&DM"
    int_0 = -1765
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.ap(int_0)
    var_4 = var_3.get_or_else(str_1)
    bool_1 = maybe_1.__eq__(var_3)
    var_5 = maybe_1.filter(var_3)
    var_6 = var_5.to_validation()
    var_7 = maybe_1.filter(var_1)
    maybe_2 = module_0.Maybe(var_1, var_0)
    int_1 = -2712
    var_8 = var_5.get_or_else(int_1)
    maybe_3 = module_0.Maybe(var_1, var_6)
    bool_2 = maybe_3.__eq__(var_8)
    var_9 = maybe_0.ap(maybe_0)
