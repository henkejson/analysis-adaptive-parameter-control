# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    str_0 = "a"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\x99\xf1\x032\x0b\x0f\x10\x01\xbavv\x12v\x9e\xadU\xc5\x9bv\x88"
    var_0 = module_1.escape(bytes_0)
    none_type_0 = module_0.warn(var_0)
    none_type_1 = module_0.debug(var_0)
    callable_0 = module_0.eager(var_0)
    callable_1 = module_0.eager(bytes_0)
    none_type_2 = module_0.debug(bytes_0)
    callable_2 = module_0.eager(var_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "output"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    str_0 = "BS:W,p;TVi8I:QP'k+A"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.debug(str_0)
    callable_0 = module_0.eager(none_type_1)
    callable_0.__call__(
        none_type_0, none_type_1, module=none_type_1, qualname=callable_0
    )
