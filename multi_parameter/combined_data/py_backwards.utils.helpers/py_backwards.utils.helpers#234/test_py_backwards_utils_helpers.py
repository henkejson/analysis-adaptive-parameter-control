# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    list_0 = []
    none_type_1 = module_0.debug(list_0)


def test_case_3():
    auto_0 = module_1.auto()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_1 = module_0.eager(auto_0)
    callable_2 = module_0.eager(auto_0)
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(callable_1)


def test_case_4():
    list_0 = []
    str_0 = "ln>MV8P%#[nFh5F\nPH["
    none_type_0 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator(*list_0)


def test_case_5():
    auto_0 = module_1.auto()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_0.__call__(none_type_0, auto_0)
