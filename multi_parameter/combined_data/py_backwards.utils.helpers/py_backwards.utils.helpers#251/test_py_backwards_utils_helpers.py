# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "S\nO#d."
    none_type_0 = module_0.warn(str_0)
    var_0 = module_1.purge()
    callable_0 = module_0.eager(var_0)


def test_case_3():
    bytes_0 = b"\x8a\x8f\xa5l\x0e\x10\x1d\xf5SB\x18S@\xaeP\xe2v"
    module_0.get_source(bytes_0)


def test_case_4():
    str_0 = "parse_qsl"
    none_type_0 = module_0.warn(str_0)
    module_1.template(none_type_0, none_type_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    bool_0 = False
    str_0 = "e\n6hy"
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_1 = module_0.eager(none_type_0)
    dict_0 = {}
    none_type_1 = module_0.debug(bool_0)
    variables_generator_1 = module_0.VariablesGenerator(**dict_0)
    none_type_2 = module_0.warn(str_0)
    callable_1.__call__(str_0, variables_generator_1, module=variables_generator_0)
