# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    regex_flag_0 = module_0.RegexFlag.TEMPLATE
    none_type_0 = module_1.debug(regex_flag_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    str_0 = "$jFB\tL~{u "
    none_type_0 = None
    callable_0 = module_1.eager(str_0)
    dict_0 = {}
    variables_generator_0 = module_1.VariablesGenerator(**dict_0)
    str_1 = "t1"
    dict_1 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.VariablesGenerator(**dict_1)


def test_case_3():
    regex_flag_0 = module_0.RegexFlag.TEMPLATE
    module_1.get_source(regex_flag_0)


def test_case_4():
    str_0 = "\\wr2;`ZU\t##5"
    none_type_0 = None
    none_type_1 = module_1.warn(none_type_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.VariablesGenerator(**dict_0)


def test_case_5():
    none_type_0 = None
    str_0 = "\rQy&V3 ct.sKDb+~rcVK"
    bool_0 = True
    callable_0 = module_1.eager(bool_0)
    callable_0.__call__(str_0, bool_0, str_0, module=none_type_0, start=str_0)
