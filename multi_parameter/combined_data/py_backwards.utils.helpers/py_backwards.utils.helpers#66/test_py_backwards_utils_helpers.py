# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1


def test_case_0():
    list_0 = []
    none_type_0 = module_0.debug(list_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    module_1.unique(none_type_0)


def test_case_3():
    bool_0 = False
    module_0.get_source(bool_0)


def test_case_4():
    enum_dict_0 = module_1._EnumDict()
    none_type_0 = module_0.debug(enum_dict_0)
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "DYccIYn<J\n"
    none_type_1 = module_0.warn(str_0)
    variables_generator_1 = module_0.VariablesGenerator()
    variables_generator_2 = module_0.VariablesGenerator()


def test_case_5():
    enum_dict_0 = module_1._EnumDict()
    none_type_0 = module_0.debug(enum_dict_0)
    int_0 = 4017
    callable_0 = module_0.eager(int_0)
    callable_0.__call__(
        none_type_0, int_0, none_type_0, module=none_type_0, type=none_type_0
    )
