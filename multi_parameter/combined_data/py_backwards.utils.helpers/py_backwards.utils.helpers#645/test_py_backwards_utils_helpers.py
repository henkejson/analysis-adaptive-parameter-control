# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1
import enum as module_2


def test_case_0():
    bytes_0 = b"KyB(D\x8ee\x98M\x9c"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    list_0 = [none_type_1, none_type_1, none_type_1]
    callable_0 = module_0.eager(list_0)
    var_0 = module_1.purge()
    module_0.VariablesGenerator(*callable_0)


def test_case_3():
    bool_0 = False
    none_type_0 = module_0.warn(bool_0)
    callable_0 = module_0.eager(bool_0)
    auto_0 = module_2.auto()
    none_type_1 = None
    module_0.get_source(none_type_1)


def test_case_4():
    str_0 = "<\x0b,Q<4\\uz"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    var_0 = none_type_1.__bool__()
    list_0 = [var_0, var_0, var_0]
    callable_0 = module_0.eager(list_0)
    set_0 = {var_0, var_0, var_0, var_0}
    none_type_2 = module_0.warn(set_0)
    none_type_3 = module_0.debug(list_0)
    none_type_4 = None
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0.__call__(
        none_type_3,
        none_type_4,
        qualname=none_type_3,
        type=none_type_2,
        start=none_type_1,
    )
