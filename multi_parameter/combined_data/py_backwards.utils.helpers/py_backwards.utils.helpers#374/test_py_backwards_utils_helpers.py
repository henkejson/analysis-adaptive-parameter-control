# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "krGW~g;oH&g{]L<|"
    var_0 = module_1.escape(str_0)
    callable_0 = module_0.eager(var_0)
    module_0.VariablesGenerator(*callable_0)


def test_case_3():
    bytes_0 = b"\xc9\xc3\xbe\n"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.get_source(list_0)


def test_case_4():
    bool_0 = False
    none_type_0 = module_0.warn(bool_0)


def test_case_5():
    str_0 = "^Y*s]o\r_5E1%?_X"
    none_type_0 = module_0.warn(str_0)
    tuple_0 = ()
    none_type_1 = module_0.warn(str_0)
    var_0 = tuple_0.__dir__()
    none_type_2 = module_0.debug(none_type_1)
    callable_0 = module_0.eager(str_0)
    callable_1 = module_0.eager(callable_0)
    callable_1.__call__(
        callable_1, tuple_0, none_type_1, qualname=none_type_1, start=none_type_0
    )
