# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1


def test_case_0():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(callable_0)
    none_type_2 = module_0.debug(none_type_1)


def test_case_3():
    enum_dict_0 = module_1._EnumDict()
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_4():
    float_0 = 699.0
    none_type_0 = module_0.warn(float_0)
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    float_0 = -1703.78
    str_0 = "7\\\\&N"
    callable_0 = module_0.eager(float_0)
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(float_0)
    none_type_2 = module_0.warn(str_0)
    callable_0.__call__(callable_0, float_0, none_type_1)
