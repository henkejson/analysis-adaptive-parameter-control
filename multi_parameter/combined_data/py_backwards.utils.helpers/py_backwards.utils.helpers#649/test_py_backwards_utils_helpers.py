# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "let"
    callable_0 = module_0.eager(str_0)
    variables_generator_1 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    int_0 = 2870
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.get_source(dict_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    float_0 = 20.768496
    callable_0 = module_0.eager(float_0)
    bytes_0 = b"\xe7\x81PU.\\\x1f\x03\xad\xe0\xf2\xc1\xe1\x8a,\x11i\xb8\xef\xee"
    none_type_0 = None
    callable_0.__call__(callable_0, none_type_0, module=bytes_0, type=none_type_0)
