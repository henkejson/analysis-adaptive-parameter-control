# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import builtins as module_1
import re as module_2


def test_case_0():
    bytes_0 = b"\x03\xd9\xc95G\x16\xda\x02[\xde\x1a\xf9\xd5"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    str_0 = "holder"
    str_1 = "Compiles:\n        [2, *range(10), 1]\n        print(*range(1), *range(3))\n    To:\n        [2] + list(range(10)) + [1]\n        print(*(list(range(1)) + list(range(3))))\n        \n    "
    str_2 = '{red}Permission denied to "{output}"{reset}'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_0}
    callable_0 = module_0.eager(dict_0)
    module_0.VariablesGenerator(*none_type_1)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    base_exception_0 = module_1.BaseException()
    none_type_0 = module_0.warn(variables_generator_0)
    none_type_1 = module_0.debug(none_type_0)
    module_0.get_source(base_exception_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "AJrr-s"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    bytes_0 = b"VK\x8d\xaeYW\xe1\xc1\xf3\xe4\xba"
    callable_0 = module_0.eager(bytes_0)
    callable_1 = module_0.eager(callable_0)
    var_0 = module_2.purge()
    module_2.subn(bytes_0, callable_1, bytes_0)
