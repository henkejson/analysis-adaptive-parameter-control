# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\xf8\x95\x93\xed\xbd\x83\xd2\xb3"
    callable_0 = module_0.eager(bytes_0)
    callable_1 = module_0.eager(bytes_0)
    variables_generator_0 = module_0.VariablesGenerator()
    module_1.unique(bytes_0)


def test_case_3():
    var_0 = module_2.purge()
    none_type_0 = module_0.debug(var_0)
    bytes_0 = b"\x06\xe8z\xd8\xd6cU#2\x8fFK\x14\xd7["
    callable_0 = module_0.eager(bytes_0)
    bytes_1 = b"\x0c\n>\xc8\x03\x94\xb2\xe4\x94v1>\xce\xc4gH\xbf\xb8"
    none_type_1 = module_0.warn(bytes_1)
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)
    none_type_2 = module_0.debug(bytes_0)
    variables_generator_1 = module_0.VariablesGenerator()
    module_0.get_source(var_0)


def test_case_4():
    var_0 = module_2.purge()
    none_type_0 = module_0.warn(var_0)
    bool_0 = True
    none_type_1 = module_0.debug(bool_0)


def test_case_5():
    var_0 = module_2.purge()
    none_type_0 = module_0.debug(var_0)
    bytes_0 = b"\x06\xe8z\xd8\xd6cU#2\x8fFK\x14\xd7["
    callable_0 = module_0.eager(bytes_0)
    bytes_1 = b"\x0c\n>\xc8\x03\x94\xb2\xe4\x94v1>\xce\xc4gH\xbf\xb8"
    none_type_1 = module_0.warn(bytes_1)
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)
    none_type_2 = module_0.debug(bytes_0)
    variables_generator_1 = module_0.VariablesGenerator()
    bytes_2 = b"\r\xc7\xeb\xa2fC\x00\xfa\xa0\x80\x88"
    callable_0.__call__(bytes_2, bytes_0, start=variables_generator_0)
