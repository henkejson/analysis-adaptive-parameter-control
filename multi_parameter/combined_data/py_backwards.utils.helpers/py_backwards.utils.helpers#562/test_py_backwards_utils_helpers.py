# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    str_0 = "W#[d"
    none_type_1 = module_0.warn(str_0)
    none_type_2 = module_0.debug(str_0)
    callable_0 = module_0.eager(none_type_0)
    callable_1 = module_0.eager(callable_0)
    module_0.get_source(none_type_0)


def test_case_3():
    bool_0 = False
    module_0.get_source(bool_0)


def test_case_4():
    str_0 = "LP)8+"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    str_0 = "7s/ciZ&]:A78'\x0cMeAT@u"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.warn(none_type_1)
    none_type_3 = module_0.warn(none_type_2)
    callable_0 = module_0.eager(none_type_1)
    bytes_0 = b"sF\x1f\x06\xe4\x06\xf5\xdd,F\x99m\xca\xec"
    callable_1 = module_0.eager(none_type_3)
    callable_0.__call__(
        none_type_1, str_0, none_type_1, module=none_type_1, type=bytes_0, start=str_0
    )
