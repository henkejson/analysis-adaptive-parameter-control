# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import builtins as module_2
import py_backwards.exceptions as module_3


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    bytes_0 = b""
    callable_0 = module_0.eager(none_type_0)
    callable_1 = module_0.eager(bytes_0)
    module_1.unique(none_type_0)


def test_case_3():
    dict_0 = {}
    base_exception_0 = module_2.BaseException(**dict_0)
    module_0.get_source(dict_0)


def test_case_4():
    str_0 = ""
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(none_type_0)


def test_case_5():
    bool_0 = True
    transformation_error_0 = module_3.TransformationError(
        bool_0, bool_0, bool_0, bool_0
    )
    none_type_0 = module_0.debug(transformation_error_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)
    callable_0 = module_0.eager(none_type_1)
    none_type_3 = module_0.debug(none_type_0)
    none_type_4 = None
    none_type_5 = module_0.warn(none_type_4)
    callable_0.__call__(
        none_type_4, none_type_1, transformation_error_0, qualname=none_type_5
    )
