# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import py_backwards.exceptions as module_1


def test_case_0():
    str_0 = "GS6fz|b4K"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(callable_0)
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)


def test_case_3():
    int_0 = 801
    module_0.get_source(int_0)


def test_case_4():
    str_0 = "v!cC]>f_WMf"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)


def test_case_5():
    int_0 = 7
    none_type_0 = None
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(none_type_0)
    transformation_error_0 = module_1.TransformationError(
        int_0, none_type_0, none_type_0, int_0
    )
    str_0 = "queue"
    none_type_1 = module_0.warn(str_0)
    none_type_2 = module_0.debug(str_0)
    none_type_3 = module_0.warn(int_0)
    callable_0.__call__(none_type_0, none_type_1, qualname=none_type_0)
