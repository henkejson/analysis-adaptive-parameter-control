# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    int_0 = 7
    none_type_0 = module_0.debug(int_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bool_0 = False
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    callable_0 = module_0.eager(bool_0)
    bytes_0 = b'\xa8@\x08\xbf\xd3\x17\x91\x1a\x8d\xfb\x00\xf8r\xa8\r?"\xb0'
    bytes_1 = b"Ccm\xa2.\n\xd1\x11\x1d\xc3|dS\xffF"
    var_0 = module_1.sub(bytes_0, bytes_1, bytes_1)
    callable_1 = module_0.eager(bytes_0)
    var_0.scan(var_0)


def test_case_3():
    dict_0 = {}
    variables_generator_0 = module_0.VariablesGenerator(**dict_0)
    none_type_0 = module_0.debug(dict_0)
    var_0 = module_1.purge()
    module_0.get_source(var_0)


def test_case_4():
    str_0 = ' @_xG(N"YUG}='
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(callable_0)
    callable_1 = module_0.eager(callable_0)
    callable_1.__call__(callable_0, none_type_0, type=none_type_0)
