# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    variables_generator_0 = module_0.purge()
    none_type_0 = module_1.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    str_0 = "L"
    none_type_0 = module_1.debug(str_0)
    callable_0 = module_1.eager(none_type_0)
    variables_generator_0 = module_1.VariablesGenerator()
    none_type_1 = module_1.debug(str_0)
    none_type_2 = module_1.warn(str_0)
    none_type_3 = module_1.debug(str_0)
    callable_1 = module_1.eager(callable_0)
    variables_generator_1 = module_1.VariablesGenerator()
    callable_2 = module_1.eager(str_0)
    module_0.findall(none_type_3, none_type_2, none_type_0)


def test_case_3():
    none_type_0 = None
    list_0 = []
    variables_generator_0 = module_1.VariablesGenerator(*list_0)
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    module_1.get_source(dict_0)


def test_case_4():
    bool_0 = False
    none_type_0 = module_1.warn(bool_0)


def test_case_5():
    str_0 = "L"
    none_type_0 = module_1.debug(str_0)
    callable_0 = module_1.eager(none_type_0)
    module_0.subn(str_0, callable_0, str_0)
