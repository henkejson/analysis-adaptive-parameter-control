# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    int_0 = 2
    none_type_0 = module_0.debug(int_0)
    str_0 = "Il&IysGMS#}\\p:y"
    none_type_1 = module_0.warn(str_0)
    callable_0 = module_0.eager(int_0)
    none_type_2 = module_0.debug(str_0)
    none_type_3 = module_0.warn(callable_0)
    callable_1 = module_0.eager(int_0)
    none_type_4 = module_0.debug(int_0)
    none_type_5 = module_0.warn(int_0)
    callable_2 = module_0.eager(callable_0)
    callable_3 = module_0.eager(callable_2)
    module_0.get_source(callable_2)


def test_case_3():
    regex_flag_0 = module_1.RegexFlag.IGNORECASE
    module_0.get_source(regex_flag_0)


def test_case_4():
    str_0 = "TLBXi+t`g{'y{se"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    bool_0 = True
    none_type_0 = module_0.debug(bool_0)
    none_type_1 = None
    callable_0 = module_0.eager(bool_0)
    none_type_2 = module_0.warn(bool_0)
    callable_0.__call__(bool_0, bool_0, bool_0, module=none_type_1, start=none_type_1)
