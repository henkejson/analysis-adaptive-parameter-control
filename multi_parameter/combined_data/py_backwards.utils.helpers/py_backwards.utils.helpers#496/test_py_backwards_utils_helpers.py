# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import builtins as module_1
import enum as module_2
import re as module_3


def test_case_0():
    bytes_0 = b"\xc7Z\xdf\xebN"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    base_exception_0 = module_1.BaseException()
    none_type_0 = module_0.debug(base_exception_0)
    callable_0 = module_0.eager(none_type_0)
    module_2.EnumMeta()


def test_case_3():
    bytes_0 = b">\xf3+%\xe7.\x16\x9b"
    module_0.get_source(bytes_0)


def test_case_4():
    int_0 = 1122
    none_type_0 = module_0.warn(int_0)
    none_type_1 = module_0.debug(int_0)
    callable_0 = module_0.eager(int_0)
    none_type_2 = None
    str_0 = "mHn$"
    variables_generator_0 = module_0.VariablesGenerator()
    dict_0 = {str_0: none_type_2, str_0: callable_0, str_0: int_0}
    module_0.VariablesGenerator(**dict_0)


def test_case_5():
    str_0 = "2qs%"
    callable_0 = module_0.eager(str_0)
    module_3.sub(str_0, callable_0, str_0)
