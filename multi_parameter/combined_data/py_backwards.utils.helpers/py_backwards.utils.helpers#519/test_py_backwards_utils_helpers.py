# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    str_0 = "P3cn%=,O^fL$wo\r{0c"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "3cn%=,O^fL$wo\r{0c"
    callable_0 = module_0.eager(str_0)
    none_type_0 = module_0.debug(callable_0)
    none_type_1 = module_0.debug(str_0)


def test_case_3():
    str_0 = "3cn%=,O^fL$wo\r{0c"
    module_0.get_source(str_0)


def test_case_4():
    str_0 = "_py_backwards_{}_{}"
    none_type_0 = module_0.warn(str_0)
    bool_0 = False
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.debug(none_type_0)
    str_1 = "/9"
    none_type_2 = module_0.warn(str_1)
    module_1.unique(bool_0)


def test_case_5():
    variables_generator_0 = module_0.VariablesGenerator()
    set_0 = set()
    callable_0 = module_0.eager(set_0)
    none_type_0 = module_0.debug(callable_0)
    str_0 = 'NRXM"vk#J7'
    str_1 = "4$\rVII,YQ*"
    none_type_1 = module_0.warn(str_1)
    module_2.subn(str_0, callable_0, str_0)
