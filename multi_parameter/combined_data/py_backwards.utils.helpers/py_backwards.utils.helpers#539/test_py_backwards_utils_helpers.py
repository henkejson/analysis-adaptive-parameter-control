# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    bytes_0 = b"x{{#\xa5GJ\x0b\x8fN\x95\xc6\xbd"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)


def test_case_3():
    auto_0 = module_1.auto()
    callable_0 = module_0.eager(auto_0)
    module_0.get_source(callable_0)


def test_case_4():
    str_0 = "2&\\'cTG\x0b(;NP/CqD`"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    none_type_2 = module_0.debug(none_type_0)
    none_type_3 = module_0.debug(none_type_1)
    var_0 = module_2.purge()
    regex_flag_0 = module_2.RegexFlag.UNICODE
    var_1 = module_0.eager(var_0)
    var_1.__call__(var_0, regex_flag_0)
