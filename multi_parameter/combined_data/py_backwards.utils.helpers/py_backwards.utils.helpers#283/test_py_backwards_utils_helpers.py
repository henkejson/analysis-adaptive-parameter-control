# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "X_m)VGA5^k\t<>{"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)
    variables_generator_0 = module_0.VariablesGenerator()
    str_1 = "value"
    none_type_3 = module_0.warn(str_1)
    callable_0 = module_0.eager(none_type_3)
    none_type_4 = module_0.warn(str_1)
    none_type_5 = module_0.debug(str_1)
    none_type_6 = module_0.debug(none_type_5)
    module_1.fullmatch(none_type_2, none_type_1)


def test_case_3():
    str_0 = "|p/L8grXv{<-pi1"
    none_type_0 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    str_1 = 'Skip transformer "{}"'
    module_0.get_source(str_1)


def test_case_4():
    str_0 = "splitvalue"
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(variables_generator_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_0.__call__(callable_0, none_type_0)
