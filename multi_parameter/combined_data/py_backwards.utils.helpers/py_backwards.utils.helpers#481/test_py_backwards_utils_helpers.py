# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    list_0 = []
    variables_generator_0 = module_0.VariablesGenerator(*list_0)
    list_1 = []
    none_type_0 = module_0.debug(list_1)
    none_type_1 = None
    callable_0 = module_0.eager(none_type_1)
    variables_generator_1 = module_0.VariablesGenerator()
    variables_generator_2 = module_0.VariablesGenerator(*list_1)
    str_0 = "},~6\r"
    none_type_2 = module_0.warn(str_0)
    variables_generator_3 = module_0.VariablesGenerator()
    float_0 = -1473.81
    module_1.findall(float_0, none_type_1, variables_generator_0)


def test_case_3():
    bool_0 = False
    module_0.get_source(bool_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    list_0 = []
    none_type_0 = module_0.debug(list_0)
    none_type_1 = None
    callable_0 = module_0.eager(none_type_1)
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator(*list_0)
    str_0 = "},~6\r"
    complex_0 = -1721.3 + 984.4757j
    var_0 = module_1.split(str_0, str_0)
    callable_0.__call__(complex_0, none_type_0, type=var_0)
