# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)


def test_case_3():
    bytes_0 = b">\xce\xe4\x03\xbf\xf6@\xcb\xcf-\xc5\xc3\xf6\xb5z\x11/\x97<"
    module_0.get_source(bytes_0)


def test_case_4():
    str_0 = "]b(_5a+"
    none_type_0 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = module_0.debug(variables_generator_0)


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    callable_0 = module_0.eager(dict_0)
    none_type_0 = module_0.warn(callable_0)
    none_type_1 = None
    none_type_2 = module_0.warn(none_type_1)
    none_type_3 = module_0.debug(callable_0)
    none_type_4 = module_0.debug(bool_0)
    none_type_5 = module_0.debug(callable_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_6 = module_0.debug(callable_0)
    str_0 = "F4N7#i-"
    none_type_7 = module_0.warn(str_0)
    callable_0.__call__(str_0, none_type_1)
