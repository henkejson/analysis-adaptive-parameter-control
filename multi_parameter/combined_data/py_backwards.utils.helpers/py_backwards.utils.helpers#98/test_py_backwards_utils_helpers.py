# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "Tkinter"
    callable_0 = module_0.eager(str_0)
    none_type_0 = module_0.warn(str_0)
    str_1 = "N592e*Q3OsEAQK^"
    none_type_1 = module_0.warn(str_1)
    str_2 = "r-%0):$X+<Q-OnI"
    none_type_2 = module_0.warn(str_2)
    enum_dict_0 = module_1._EnumDict()
    module_0.get_source(str_1)


def test_case_3():
    str_0 = '?"qSuZvC"'
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    variables_generator_1 = module_0.VariablesGenerator()
    none_type_2 = module_0.debug(none_type_1)
    module_0.get_source(none_type_1)


def test_case_4():
    bytes_0 = b"?\x98\xc6\xe5Q\xff,$~\x80\xf1\xad"
    none_type_0 = module_0.debug(bytes_0)
    str_0 = "S<2Y"
    none_type_1 = module_0.warn(bytes_0)
    str_1 = 'Compiling "{}"'
    dict_0 = {str_0: str_0, str_1: bytes_0}
    module_0.VariablesGenerator(*none_type_0, **dict_0)


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.debug(none_type_0)
    callable_1 = module_0.eager(none_type_1)
    callable_0.__call__(none_type_1, none_type_1, type=callable_1, start=none_type_1)
