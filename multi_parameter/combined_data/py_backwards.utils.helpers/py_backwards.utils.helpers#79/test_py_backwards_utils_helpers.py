# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\xe9g:\xf9\x13\xa92O\x02\x07\xdf"
    callable_0 = module_0.eager(bytes_0)


def test_case_3():
    bool_0 = True
    callable_0 = module_0.eager(bool_0)
    list_0 = [bool_0]
    module_0.get_source(list_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)
    var_0 = module_1.purge()
    none_type_1 = module_0.debug(var_0)
    variables_generator_1 = module_0.VariablesGenerator()
    none_type_2 = module_0.debug(var_0)
    none_type_3 = module_0.warn(variables_generator_0)
    var_0.__contains__(variables_generator_0, none_type_0)


def test_case_5():
    str_0 = "]D\x0ba4~#F?6}35YyL+"
    none_type_0 = module_0.warn(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_1 = None
    variables_generator_1 = module_0.VariablesGenerator()
    str_1 = "ezta'mwEJ"
    none_type_2 = module_0.warn(str_1)
    var_0 = module_1.purge()
    none_type_3 = module_0.warn(var_0)
    callable_0 = module_0.eager(var_0)
    none_type_4 = module_0.warn(none_type_1)
    var_1 = var_0.__dir__()
    callable_0.__call__(var_1, str_0, none_type_4)
