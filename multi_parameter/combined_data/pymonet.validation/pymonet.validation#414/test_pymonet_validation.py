# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    tuple_0 = ()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(tuple_0)


def test_case_1():
    str_0 = "Validation.success[{}]"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    str_0 = "O\x0bHt86p^\rrP$)[64t"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    dict_0 = {}
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.map(dict_0)


def test_case_4():
    bytes_0 = b"\xcb0!\xf1y\x06\x8bT%"
    bytes_1 = b"\xe9\xea\x04\x02\xe3\x05\x10fp\x95K"
    dict_0 = {bytes_1: bytes_1}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bytes_0)
    var_1.ap(dict_0)


def test_case_5():
    none_type_0 = None
    none_type_0.to_try()


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_7():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()


def test_case_8():
    bytes_0 = b";"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bytes_0)


def test_case_9():
    complex_0 = 326 + 1559.8j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(complex_0)


def test_case_10():
    str_0 = ",5j\\FC"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    validation_0.ap(str_0)


def test_case_11():
    dict_0 = {}
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(dict_0)
    var_2.to_either()


def test_case_12():
    bytes_0 = b"\xe9\xea\x04\x02\xe3\x05\x10fp\x95K"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_1.to_either()


def test_case_13():
    str_0 = ",5j\\FC"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.to_maybe()
    var_4 = var_2.__eq__(var_3)
    var_5 = validation_0.to_try()
    var_4.to_box()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_15():
    str_0 = ",5j\\FC"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_fail()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_17():
    str_0 = ",5j\\FC"
    set_0 = {str_0, str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(var_0)
    var_2.to_try()


def test_case_18():
    dict_0 = {}
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(dict_0)
    var_2.to_either()
