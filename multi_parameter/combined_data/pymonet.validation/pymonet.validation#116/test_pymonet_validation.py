# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = "un8`U}C,lB0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2 = validation_0.to_lazy()
    none_type_0 = None
    var_3 = validation_0.__eq__(none_type_0)
    validation_2 = module_0.Validation(validation_1, none_type_0)
    var_4 = validation_0.is_fail()
    var_5 = validation_0.is_fail()
    var_5.to_either()


def test_case_2():
    bytes_0 = b"RK\xd9\x83\xa9\xdb\xf5\\\x9f\xb0\tv\xc6a$\x90"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    bytes_0 = b"9X\x88\x97\x14\xabV)\xf8\x8b5\xe3"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.to_lazy()
    none_type_1 = None
    var_1 = validation_1.__eq__(none_type_1)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.bind(none_type_1)
    var_4 = var_0.__str__()
    var_5 = var_4.__str__()
    var_6 = var_0.to_try()
    var_7 = validation_0.to_lazy()
    validation_2 = module_0.Validation(var_1, var_7)
    var_8 = var_6.__eq__(var_6)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    float_0 = 1966.51932
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_either()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"Oa{h"
    bytes_1 = b"Q\xc6\xe9\xfd\x93/B"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.map(bytes_0)


def test_case_8():
    str_0 = "un8`U}C,lB0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    validation_0.bind(var_0)


def test_case_9():
    str_0 = "y)??nj?IO\rs"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_10():
    bytes_0 = b"x\xc9\x13\x8a\xd4\xb6TO\xbd\x89B\r\x18\x11\x07\x83\x1d"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.__str__()
    var_4 = var_3.__str__()
    var_4.to_box()


def test_case_11():
    str_0 = "un8`U}C,lB0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_1, none_type_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_either()
    validation_2 = module_0.Validation(var_2, str_0)
    validation_3 = module_0.Validation(str_0, var_3)
    var_3.is_success()


def test_case_12():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0)
    bool_1 = False
    validation_0 = module_0.Validation(tuple_0, bool_1)
    validation_0.to_try()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_0.to_maybe()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    tuple_0 = ()
    bytes_0 = b"9X\x88\x97\x14\xabV)\xf8\x8b5\xe3"
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(var_2, validation_0)
    var_0.is_fail()
