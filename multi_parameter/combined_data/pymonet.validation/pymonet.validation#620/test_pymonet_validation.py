# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xad\xe5\x19\xe4|6\xf9m\xfee@L\xdf\x98\x0b\xd7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.__eq__(set_0)
    var_0.to_either()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"\xad\xe5\x19\xe4|6\xf9m\xfee@L\xdf\x98\x0b\xd7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_1 = validation_0.to_either()
    var_2 = validation_1.__eq__(set_0)
    var_0.to_either()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_0.map(list_0)


def test_case_4():
    bytes_0 = b"\xfbp\n\x8f\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.to_either()
    var_2.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_7():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    str_0 = "/^z3D.P"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    str_0 = "\n        Return resolved Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: resolved Task\n        :rtype: Task[Function(_, resolve) -> A]\n        "
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = str_0.__str__()
    bytes_0 = b"\x99\x14\xdd\x97\x02r"
    var_1 = var_0.__str__()
    bool_0 = True
    validation_1 = module_0.Validation(var_0, bool_0)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_0.to_either()
    validation_1.ap(bytes_0)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bytes_0 = b"\xad\xe5\x19\xe4|6\xf9m\xfee@L\xdf\x98\x0b\xd7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.map(var_0)
    var_2 = validation_0.to_lazy()
    float_0 = -1059.6
    validation_1 = module_0.Validation(float_0, var_2)
    var_3 = var_2.to_try()
    var_4 = validation_0.to_either()
    var_4.is_fail()


def test_case_13():
    bytes_0 = b"\xad\xe5\x19\xe4|6\xf9m\xfee@L\xdf\x98\x0b\xd7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0.map(var_0)


def test_case_14():
    str_0 = "P}lTnP.hbT&,m5x"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_either()
