# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_1():
    str_0 = "P}-5)\x0bO.|$C#TjFt\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(str_0)
    var_2 = var_0.to_lazy()
    var_2.is_success()


def test_case_2():
    bytes_0 = b"\x056'\xe9\x97-c\xf0\x9d\x04\xbd0\x9f\xd6\xe1\xbc\x8f\xb6\x01\xed"
    float_0 = 5511.392
    validation_0 = module_0.Validation(bytes_0, float_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_0.is_success()


def test_case_3():
    str_0 = "P}-5)\x0bO.|$C#TjFt\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.to_lazy()
    var_3 = validation_0.to_maybe()
    var_3.is_success()


def test_case_4():
    bytes_0 = b"\xdc"
    var_0 = bytes_0.__eq__(bytes_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bytes_0 = b"\xdc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_7():
    int_0 = -1088
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_0.map(bool_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(validation_0)


def test_case_10():
    bytes_0 = b"\xdc"
    str_0 = "LU,dQ+fSI7q@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, str_0)
    validation_1.ap(bytes_0)


def test_case_11():
    bytes_0 = b"\x95\xa7H\xf9,\x15\xc2\xe8\x18lVm\x9b\x89"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_3 = var_1.__eq__(bytes_0)
    var_3.to_either()


def test_case_12():
    str_0 = "P}-5)\x0bO.|$C#TjFt\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_try()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.is_success()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(var_1)
    var_3 = var_0.to_lazy()
    var_4 = validation_0.to_try()
    var_4.ap(validation_0)


def test_case_14():
    str_0 = "P}-5)\x0bO.|$C#TjFt\n"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, validation_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_1)
    var_2 = var_0.to_lazy()
    var_1.to_maybe()


def test_case_15():
    bytes_0 = b""
    str_0 = "P}-5)\x0bO.|$C#TjFt\n"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(str_0)
    validation_1 = module_0.Validation(validation_0, var_0)
    validation_1.to_try()
