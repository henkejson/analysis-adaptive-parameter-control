# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = '?9c"-!5q*O@\r].O'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.map(str_0)


def test_case_1():
    str_0 = '?9c"-!5q*O@\r].O'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.map(str_0)


def test_case_2():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    tuple_1 = (set_0, set_0)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_0.to_maybe()


def test_case_3():
    float_0 = -5452.38
    str_0 = "\r'*k)ExS@uv7[L~E]\t("
    validation_0 = module_0.Validation(float_0, str_0)
    tuple_0 = validation_0.to_maybe()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_6():
    complex_0 = 398.48992 + 1536.414658j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(complex_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_8():
    bytes_0 = b"\x13\xc4\xdf\xafE\x01Ej\x18\xfb"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(none_type_0)


def test_case_9():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_0.map(set_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    str_0 = '?9c"-!5q*O@6].O'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(str_0)


def test_case_12():
    str_0 = '?9c"-!5q*O@\r].O'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_0.map(str_0)


def test_case_13():
    str_0 = '?9c"-!5q*O@\r].O'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_14():
    float_0 = 101.0
    bool_0 = False
    validation_0 = module_0.Validation(float_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(float_0)
    var_2 = var_0.__eq__(float_0)
    var_1.to_box()


def test_case_15():
    str_0 = "PR@Jqt"
    float_0 = -5452.38
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    str_1 = "\r'*k)ExS@uv7[L~E]\t("
    validation_1 = module_0.Validation(float_0, str_1)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()


def test_case_16():
    list_0 = []
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.map(list_0)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.__eq__(var_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    validation_2 = module_0.Validation(validation_1, validation_1)
    var_3 = var_1.to_either()
    var_4 = validation_2.__eq__(validation_1)
    var_1.is_fail()
