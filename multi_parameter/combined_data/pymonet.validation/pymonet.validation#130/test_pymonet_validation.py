# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xae#\xfaJ\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(bytes_0)
    var_2.to_lazy()


def test_case_1():
    float_0 = -589.1275
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_lazy()


def test_case_2():
    tuple_0 = ()
    list_0 = [tuple_0]
    validation_0 = module_0.Validation(list_0, list_0)
    bool_0 = True
    tuple_1 = (list_0, validation_0, bool_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(tuple_1, bool_0)
    validation_1.is_fail()


def test_case_3():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_0.__eq__(none_type_0)
    var_4 = validation_0.to_either()
    validation_0.ap(set_0)


def test_case_4():
    bytes_0 = b"\xae#\xfaJ\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(bytes_0)
    var_3.to_lazy()


def test_case_5():
    bytes_0 = b"\xae#\xfaJ\x0f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(bytes_0)
    var_3.to_lazy()


def test_case_6():
    str_0 = "\n,EI=/i\x0c:z.ay#vp16"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.__str__()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    bool_0 = False
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.ap(bool_0)


def test_case_10():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(none_type_0)


def test_case_12():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()


def test_case_13():
    float_0 = -589.1275
    int_0 = 18
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(float_0)


def test_case_14():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    set_0 = set()
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = validation_1.__eq__(validation_0)
    var_1.to_either()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_1.bind(var_0)
