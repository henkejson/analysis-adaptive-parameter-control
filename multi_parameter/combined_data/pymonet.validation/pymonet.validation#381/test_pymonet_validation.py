# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    int_0 = -1226
    float_0 = 481.687
    validation_0 = module_0.Validation(int_0, float_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.is_success()


def test_case_1():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    bytes_0 = b"UQ\xcd\xe6\xaf\xa3b\xbd\xbeg d\xae<^\xb8\x06\xac\xc0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bytes_0)
    var_2 = validation_0.to_box()
    var_3 = var_2.ap(var_0)
    var_4 = validation_0.to_either()
    var_5 = var_0.ap(var_0)
    validation_0.ap(var_4)


def test_case_3():
    str_0 = "7+[630`z"
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_try()
    var_3 = var_2.map(str_0)
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    validation_2 = module_0.Validation(validation_1, validation_1)
    var_4 = validation_2.__eq__(validation_1)
    var_5 = validation_1.to_maybe()
    var_6 = validation_1.to_lazy()
    bool_1 = False
    none_type_1 = None
    validation_3 = module_0.Validation(bool_1, none_type_1)
    var_7 = validation_3.__eq__(validation_3)
    var_7.ap(validation_3)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_6():
    int_0 = 1913
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    int_0 = 1965
    validation_0 = module_0.Validation(int_0, int_0)
    bytes_0 = b'"EcGr\xd9\xa6Hv\x84WgA\xbe\xe6'
    validation_0.bind(bytes_0)


def test_case_9():
    bool_0 = False
    str_0 = "9\x0c0$Nw"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_10():
    bytes_0 = b"\xa1=\t.\x15D"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_11():
    int_0 = -361
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    int_0 = 426
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.ap(validation_0)


def test_case_15():
    none_type_0 = None
    bytes_0 = b";"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.to_lazy()
    bool_0 = True
    validation_2 = var_2.bind(var_1)
    var_3 = var_2.to_either()
    var_4 = var_3.ap(validation_2)
    var_5 = var_3.to_try()
    var_6 = var_5.__eq__(bool_0)
    var_7 = var_6.__str__()
    var_4.is_success()


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = validation_0.to_either()
    module_1.object(*var_0)


def test_case_18():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    bool_0 = False
    none_type_0 = None
    validation_2 = module_0.Validation(bool_0, none_type_0)
    var_2 = validation_2.__eq__(validation_2)
    var_2.to_try()
