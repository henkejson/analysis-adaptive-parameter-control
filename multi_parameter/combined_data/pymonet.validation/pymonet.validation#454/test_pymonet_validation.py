# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_3.ap(var_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    validation_0.to_try()


def test_case_2():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bytes_0)
    var_1.ap(none_type_0)


def test_case_3():
    str_0 = "\x0c@3\nw68\x0cyO@i6."
    bytes_0 = b'\xa6*\x9c\xd4\xc3"\xd7'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(str_0)
    var_2 = var_1.__str__()
    var_3 = var_2.__str__()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    bytes_0 = b"\x99U\xd2Go4^a:\xdd\xbe\xe1.\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.to_maybe()


def test_case_7():
    none_type_0 = None
    int_0 = 2283
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(int_0)


def test_case_8():
    str_0 = "YBi"
    set_0 = set()
    float_0 = 2106.8229
    validation_0 = module_0.Validation(str_0, float_0)
    validation_0.bind(set_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b'\xa0\x05\xdb"\xc4\x05}\xb2Xi\xacxI\x93'
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_11():
    str_0 = "\n        Take function and applied this function with monad value and returns new monad with mapped value.\n\n        :params mapper: function to apply on monad value\n        :type mapper: Function(A) -> B\n        :returns: for successfully new Try with mapped value, othercase copy of self\n        :rtype: Try[B]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_12():
    bytes_0 = b'\xa6*\x9c\xd4\xc3"\xd7'
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.to_try()


def test_case_13():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_box()
    var_3 = var_2.__eq__(bytes_0)
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_4 = validation_1.__eq__(validation_0)
    var_1.to_maybe()


def test_case_14():
    str_0 = "$x`,'"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, str_0)
    var_0 = validation_0.to_either()


def test_case_15():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_box()
    var_3 = var_2.__eq__(bytes_0)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = var_0.__str__()
    var_6 = validation_0.to_maybe()
    var_1.to_either()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(tuple_0, none_type_0)
    validation_0.map(validation_1)
