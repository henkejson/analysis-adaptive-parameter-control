# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    int_0 = 423
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_maybe()


def test_case_1():
    str_0 = "WL5T<JSX+ya$"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    none_type_0 = None
    float_0 = -937.888
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(float_0)
    var_1.map(none_type_0)


def test_case_3():
    int_0 = -4424
    bytes_0 = b"\xde\xc3\xdc\x03\xd5"
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, bytes_0: bytes_0}
    str_0 = 'JDpY~OIk"L%kcz'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_0.__str__()
    var_3 = var_1.bind(dict_0)
    validation_0.bind(var_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"\x81\xec\xc3\xdc\xd4\x81tL\x00>,\x91\xca\xca\xb2=\x0fe\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_0.to_try()


def test_case_6():
    int_0 = 1744
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "r?wtR>nE\n{[NgGp,r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.map(str_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "r?wtR>n\n{[NgGp,r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2 = var_1.__eq__(validation_0)
    var_3 = var_1.__str__()
    var_4 = var_1.to_try()
    var_5 = var_1.map(var_1)
    var_6 = validation_0.to_maybe()
    var_4.is_fail()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    complex_0 = 3394.5 + 2600.270986j
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(complex_0)


def test_case_12():
    bytes_0 = b"\xec`;\xeeM\xae\x06)t\xb2\x11\xd1\x10\xff"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    int_0 = -600
    validation_1 = module_0.Validation(var_1, int_0)
    validation_1.is_fail()


def test_case_13():
    str_0 = "r?wtR>nE\n{[NgGp,r"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    tuple_0 = (str_0,)
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_3 = validation_1.__eq__(validation_1)
    var_2.ap(var_0)


def test_case_15():
    str_0 = "r?wtR>nE\n{[NgGp,r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, validation_0)
    var_2 = validation_0.__eq__(validation_1)
    var_2.map(str_0)
