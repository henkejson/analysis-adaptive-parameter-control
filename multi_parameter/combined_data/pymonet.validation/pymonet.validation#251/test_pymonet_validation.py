# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_2.__str__()
    var_3.map(bool_0)


def test_case_1():
    str_0 = "[A?u"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.to_box()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_0.bind(var_2)


def test_case_2():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_1.map(validation_0)


def test_case_3():
    str_0 = "7_;+SQ>w8B{0F`E4"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, var_0)
    var_1 = validation_1.to_try()


def test_case_4():
    str_0 = "[A?u"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_lazy()
    var_3 = var_0.map(none_type_0)
    validation_1 = module_0.Validation(validation_0, var_3)


def test_case_5():
    int_0 = 351
    str_0 = "[A?u"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.to_lazy()
    dict_0 = {int_0: str_0, int_0: str_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_4 = validation_1.to_maybe()
    bytes_0 = b"\xdb\x04"
    none_type_1 = None
    validation_2 = module_0.Validation(bytes_0, none_type_1)
    var_5 = var_2.map(none_type_0)
    var_6 = validation_2.to_box()
    var_7 = validation_0.__eq__(dict_0)
    var_8 = var_6.to_try()
    var_6.is_success()


def test_case_6():
    int_0 = -4166
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_7():
    int_0 = -4166
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_8():
    bytes_0 = b"\x15.\xf9\xb1\xfb\x13\xe8\xad\xe2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.to_lazy()


def test_case_9():
    int_0 = -4166
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(validation_0)
    validation_0.bind(validation_0)


def test_case_11():
    none_type_0 = None
    str_0 = "tqF?>^QjgY\t3\nQ$6"
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b'\xe3\xf2\xeb^\x9b\x8a>\xc6\xcb\x92\xd8\xd4}\x97\x8a%\x07i"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bytes_0)
    var_2 = var_0.to_lazy()
    var_0.ap(var_0)


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()
    var_2.map(validation_0)


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_1.map(var_0)


def test_case_16():
    int_0 = 351
    str_0 = "[A?u"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.map(none_type_0)
    var_3 = var_2.to_lazy()
    dict_0 = {none_type_0: var_0, int_0: str_0, int_0: str_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_4 = validation_1.to_maybe()
    validation_2 = module_0.Validation(var_1, var_2)
    var_5 = validation_1.to_box()
    var_6 = validation_0.__str__()
    var_7 = var_5.to_try()
    var_8 = var_0.__eq__(var_2)
    var_9 = validation_1.__eq__(validation_0)
    var_8.to_either()
