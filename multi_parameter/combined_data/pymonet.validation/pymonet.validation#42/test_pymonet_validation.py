# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -2699.68
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(float_0, float_0)
    var_0.to_try()


def test_case_1():
    bool_0 = False
    str_0 = "q-\t3n!iWr#WK\n~DT"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_2():
    str_0 = "q-\t3n!iWr#WK\n~DT"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bool_0)
    var_1.is_fail()


def test_case_4():
    str_0 = "b}b"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    str_0 = "[G,\\Y\x0bax}wC*3e$IEfA"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.to_box()


def test_case_6():
    bool_0 = False
    str_0 = "q-\t3n!iWr#WK\n~DT"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    validation_0.map(bool_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_8():
    bytes_0 = b"_y\x93\xd6\x90}\xd8\x18Q-\x8c\niY\xe0"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bytes_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"C^'j\xae\x8d \xb6tg'~\xf2J\xbb"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_maybe()


def test_case_10():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_11():
    bytes_0 = b"r\x01\xd4[\x90\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_try()
    var_3 = var_2.__eq__(var_0)
    var_4 = var_2.__str__()
    var_5 = validation_0.is_fail()
    var_6 = var_0.__str__()
    var_5.to_box()


def test_case_12():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_try()
    var_0.is_success()


def test_case_13():
    str_0 = "[G,\\Y\x0bax}wC*3e$IEfA"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_0.to_box()


def test_case_14():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.map(bool_0)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(list_0, validation_0)
    validation_1.is_success()


def test_case_16():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    set_0 = set()
    tuple_0 = (set_0,)
    validation_0.ap(tuple_0)


def test_case_17():
    float_0 = -2699.68
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.__eq__(validation_0)
    var_1.to_maybe()
