# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = ">8y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()


def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_0.to_lazy()


def test_case_5():
    str_0 = "N\nnpU\\jY9,\x0ckS"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    bytes_0 = b"\xcd\x86\xe5\x10\xd1\xad"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, dict_0]
    float_0 = -1071.540899
    var_1 = validation_0.to_box()
    tuple_0 = (dict_0, bool_0, list_0, float_0)
    float_1 = -213.56
    dict_1 = {float_1: float_1, float_1: float_1}
    validation_1 = module_0.Validation(float_1, dict_1)
    validation_1.map(tuple_0)


def test_case_6():
    none_type_0 = None
    float_0 = -3.3
    none_type_1 = None
    validation_0 = module_0.Validation(float_0, none_type_1)
    validation_0.bind(none_type_0)


def test_case_7():
    bytes_0 = b"\x9a*\x8e"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_8():
    str_0 = ">8y"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = var_1.to_box()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    validation_0.to_try()


def test_case_10():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    int_0 = 0
    set_0 = set()
    tuple_0 = (int_0, set_0)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(list_0, none_type_0)
    var_0 = validation_0.__str__()
    validation_1.to_try()


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_1.to_lazy()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    validation_2.is_fail()


def test_case_14():
    bytes_0 = b":\x94"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.is_success()
