# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -845.0
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_try()


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.ap(dict_0)


def test_case_2():
    int_0 = 2007
    str_0 = 'XV^RjN,"'
    dict_0 = {int_0: str_0, str_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(dict_0)
    var_1.to_either()


def test_case_3():
    bytes_0 = b'\xaaW\xef\x9f\xbf\xae\x99\\"\xac\xca'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    list_0 = []
    int_0 = 5004
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(list_0)


def test_case_7():
    bytes_0 = b"\xb5\x019\x8d;\x8c"
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bytes_0)


def test_case_8():
    bytes_0 = b"\x19N"
    float_0 = 2261.2
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(bytes_0)


def test_case_9():
    bytes_0 = b'\xaaW\xef\x9f\xbf\xae\x99\\"\xac\xca'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.to_box()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.bind(validation_0)


def test_case_11():
    bytes_0 = b"\xbf\x19\x13\x92\xf20.B\x1cOk%\xa1K\x0b\x14"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(bytes_0)
    var_1.to_either()


def test_case_12():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    int_0 = -1558
    none_type_0 = None
    validation_1 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_try()
    var_1.to_box()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_14():
    bool_0 = False
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(bool_0)
    var_2.to_maybe()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_1.to_try()


def test_case_16():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()
