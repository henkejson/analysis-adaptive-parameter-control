# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.ap(bool_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(tuple_0)
    var_1.bind(tuple_0)


def test_case_2():
    bool_0 = True
    bytes_0 = b"\xd9rK\x89S\xd5\xaf\x13[\xd9"
    dict_0 = {bool_0: bool_0, bool_0: bytes_0, bytes_0: bool_0, bool_0: bool_0}
    str_0 = "Try[value={}, is_success={}]"
    tuple_0 = (bool_0, dict_0, str_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    none_type_0 = None
    int_0 = 1658
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_3 = validation_0.is_success()
    var_4 = var_3.__eq__(int_0)
    var_5 = validation_0.to_either()
    var_3.is_success()


def test_case_4():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    str_0 = "7~\r6okHS5\r#@FR:@sq>"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    str_0.to_lazy()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    validation_0.ap(validation_0)


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    none_type_1 = None
    var_1 = var_0.to_either()
    var_2 = var_0.to_either()
    var_2.bind(none_type_1)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    var_3 = var_1.__eq__(var_2)
    var_2.is_fail()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, var_0)
    var_2 = validation_1.__eq__(validation_0)
    validation_1.ap(validation_1)
