# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x1e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(bytes_0)
    object_0 = module_1.object()
    var_1 = validation_0.to_lazy()
    var_2 = validation_1.to_box()
    var_2.is_fail()


def test_case_1():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()


def test_case_2():
    str_0 = "|m}\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    bytes_0 = b"\x1e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.to_either()
    var_3 = validation_1.__eq__(validation_1)
    validation_2 = module_0.Validation(var_3, var_2)
    var_4 = validation_2.to_box()
    var_3.to_lazy()


def test_case_5():
    bytes_0 = b"%\x9c\xa6fk-\x03\x0c\xa8n$\xdd\xf0:\xa0\xf6q"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    str_0 = "\n        Return rejected Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: rejected Task\n        :rtype: Task[Function(reject, _) -> A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_7():
    int_0 = 1622
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_8():
    bytes_0 = b";Q}\xee"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_9():
    int_0 = -1420
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(validation_0)


def test_case_10():
    bytes_0 = b"\x1e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_11():
    str_0 = 'ln\x0b`<yA7-\r3lzGGe"j>'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(str_0)


def test_case_12():
    str_0 = "|m}\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_13():
    bytes_0 = b"Qc\xa7,\x16\xbc\x0eM\xfd\xbf\x04\xb5\xc2\xc6CL"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_14():
    bytes_0 = b"\x1e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_3.to_box()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(bytes_0, var_0)


def test_case_16():
    int_0 = -459
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_17():
    bytes_0 = b"\x1e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(validation_0)
    validation_2 = module_0.Validation(validation_0, validation_1)
    var_3 = validation_2.to_lazy()
    var_2.to_box()


def test_case_18():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_0.to_either()
