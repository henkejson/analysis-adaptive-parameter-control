# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    bytes_0 = b"\xe61"
    validation_1 = module_0.Validation(bool_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)


def test_case_3():
    bytes_0 = b"P\xae{\xf2KF\xb1\x84\x8a=\xdb\xfe\x9cO\xd3\xc2S"
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_1.map(validation_0)


def test_case_4():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_1.map(list_0)


def test_case_5():
    list_0 = []
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_1.map(list_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.map(set_0)


def test_case_10():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, list_0)
    var_2 = validation_1.to_box()
    var_3 = validation_0.to_lazy()
    var_4 = var_3.map(validation_1)
    var_5 = var_4.ap(var_1)
    var_6 = var_3.to_try()
    validation_1.bind(var_6)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(list_0)


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_box()


def test_case_13():
    set_0 = set()
    int_0 = -1558
    tuple_0 = (int_0,)
    tuple_1 = (set_0, tuple_0, set_0)
    list_0 = [tuple_0]
    tuple_2 = (tuple_1, list_0)
    validation_0 = module_0.Validation(tuple_2, list_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_box()
    var_1.is_fail()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = var_1.__str__()
    var_1.is_success()
