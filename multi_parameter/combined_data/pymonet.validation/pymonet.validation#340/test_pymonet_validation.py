# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 2224
    list_0 = []
    tuple_0 = (int_0, list_0, list_0)
    list_1 = []
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.__eq__(tuple_0)
    var_0.is_fail()


def test_case_1():
    bytes_0 = b"\xa1\xfaW\xd2\nM\xc0\x93\xd7\x1d\x9aP\xdf\x90h"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xa1\xfaW\xd2\nM\xc0\x93\xd7\x1d\x9aP\xdf\x90h"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    bytes_0 = b"\xferrBp\x9e}\xe3U\x17\xd4k1w\x1f\x00\x89\x9cke"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    validation_0.map(validation_0)


def test_case_4():
    int_0 = 4459
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "ZU"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_7():
    int_0 = 1
    str_0 = "af(p@U>=k\x0cjN\n#hg)+"
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.ap(int_0)


def test_case_8():
    bytes_0 = b"N\xdcJ\x1e\xb3n[\x8b"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.to_lazy()


def test_case_10():
    int_0 = 4459
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_11():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = var_1.__eq__(var_0)
    var_1.to_box()


def test_case_12():
    bytes_0 = b"\x18\x8d\xd6\xb5\xaeh"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = var_2.__eq__(var_1)
    var_4 = var_2.to_try()
    var_5 = var_4.__str__()
    var_1.is_fail()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = var_1.__eq__(var_0)
    var_3 = validation_0.__str__()
    var_2.is_fail()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = var_0.to_maybe()
    var_3 = var_0.__str__()
    var_4 = var_1.to_try()
    none_type_0 = None
    var_5 = var_0.__eq__(none_type_0)
    var_3.to_try()


def test_case_15():
    bytes_0 = b"\x18\x8d\xd6\xb5\xac\xaeh"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = validation_0.to_try()
    var_3 = validation_1.to_try()
    validation_2 = module_0.Validation(var_3, none_type_0)
    var_4 = validation_2.__eq__(validation_0)
    validation_2.map(none_type_0)
