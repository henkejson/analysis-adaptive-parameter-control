# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_box()
    validation_0.map(var_1)


def test_case_1():
    bytes_0 = b"\xddV\xb2\xc2=hm\x83\xa8\xd1r"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__str__()


def test_case_2():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_3():
    str_0 = "u}%EWC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__str__()
    none_type_0 = None
    var_3 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_2.is_fail()


def test_case_4():
    bool_0 = True
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(none_type_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "B"
    none_type_0 = None
    int_0 = 0
    validation_0 = module_0.Validation(str_0, int_0)
    validation_0.bind(none_type_0)


def test_case_8():
    none_type_0 = None
    str_0 = "\n        If Maybe is empty or filterer returns False return default_value, in other case\n        return new instance of Maybe with the same value.\n\n        :param filterer:\n        :type filterer: Function(A) -> Boolean\n        :returns: copy of self when filterer returns True, in other case empty Maybe\n        :rtype: Maybe[A] | Maybe[None]\n        "
    bytes_0 = b'\x18`\xd5"\xf2@\xc2\xc8\xb2\xe8\xbb\x0c\x8f\xde\x18\xc2\x8c\x82}\xf0'
    dict_0 = {str_0: str_0, bytes_0: str_0}
    none_type_1 = None
    validation_0 = module_0.Validation(dict_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_10():
    bytes_0 = b"\xe9\xaa\xb0\x05"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(bytes_0, dict_0)
    var_1 = validation_1.__eq__(dict_0)
    validation_2 = validation_0.to_maybe()
    var_1.is_success()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_try()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.ap(none_type_0)


def test_case_13():
    bytes_0 = b"\xe9\xaa\xb0\x05"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(dict_0)
    validation_1 = module_0.Validation(dict_0, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = validation_0.to_lazy()
    var_4 = var_3.to_box()
    var_4.bind(validation_0)


def test_case_14():
    bytes_0 = b"\xe9\xaa"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.to_maybe()
