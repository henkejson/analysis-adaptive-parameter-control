# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_4():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_6():
    int_0 = 1471
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(int_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_8():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(tuple_0, validation_0)


def test_case_9():
    list_0 = []
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.to_try()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_11():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    dict_0 = {tuple_0: bool_0, bool_0: bool_1}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_12():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(list_0)
    var_2 = validation_0.to_box()
    object_0 = module_1.object()
    validation_1 = module_0.Validation(var_1, var_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = var_0.to_box()
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_0.to_maybe()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__eq__(tuple_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, var_2)
    var_3 = validation_0.__eq__(bool_0)


def test_case_15():
    bytes_0 = b"\x07,qb\x8fB\x15\xc0\xdaG\xd8\x84\x83\xbc\xc5\xee3\xc0\x05"
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    str_0 = "ozz^g(1"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = var_1.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, none_type_0)
    var_3 = validation_0.to_lazy()
    validation_1.to_maybe()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(validation_1, var_1)
