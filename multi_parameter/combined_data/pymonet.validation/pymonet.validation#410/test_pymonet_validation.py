# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xc7\xd2\x8b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    str_0 = "}K\rbw=14Ey<"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.bind(var_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_lazy()
    var_2.to_lazy()


def test_case_3():
    bytes_0 = b"?\xfc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bytes_0 = b'\xe3\xfd%"\xd6\xaf\x11\xb3M'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    bytes_0 = b"\xb8\x98\x13\x82\x1b\xbc\x1emJ\xb4\xa5\xb4(\xed\xbc\xedB"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()


def test_case_7():
    bytes_0 = b"1\xad\xdd\xf9\x87\x8f\xf1&=}"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_8():
    bytes_0 = b"\x9f\x84\x1b<U\x16P\xde]~!^a\xf1;u!\x8a'\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_9():
    bytes_0 = b"\xba\xa9\xb5~i\x14\xf27\x00\x8b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_11():
    int_0 = -2753
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    validation_0.to_either()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.is_success()


def test_case_14():
    bytes_0 = b"g\x88\x8d\xd4\x18\x05\x16\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_1.__str__()
    var_3 = var_0.__eq__(bytes_0)
    var_2.to_try()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_maybe()
    var_5 = var_4.to_lazy()
    var_6 = var_5.to_box()
    var_5.is_fail()


def test_case_16():
    bytes_0 = b"48\xda\xa6\n\x87K\x9f\xfc0"
    str_0 = "}K\rbw=14Ey<"
    validation_0 = module_0.Validation(str_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_1.ap(str_0)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
