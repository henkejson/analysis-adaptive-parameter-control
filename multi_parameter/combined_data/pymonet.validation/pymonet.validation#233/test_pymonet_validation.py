# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    bool_1 = True
    str_0 = "$PQ=^u"
    validation_1 = module_0.Validation(bool_1, str_0)
    var_0 = validation_1.__eq__(bool_1)
    validation_2 = module_0.Validation(str_0, validation_1)
    validation_2.to_either()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.bind(list_0)


def test_case_2():
    str_0 = "'"
    bytes_0 = b'p\xe0\xfe\xffx8"\xfdOL\x1c\xdch\xea\xad\xb9'
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_0.map(list_0)


def test_case_4():
    int_0 = -1614
    str_0 = "^\x0cnnQ"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.__eq__(var_0)
    var_1.to_box()


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.is_success()


def test_case_6():
    bytes_0 = b"m\xe6\xd1\xfd\xffJ\xf1\x01dY\x17+\x81HEl\x9f<"
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    bool_0 = True
    str_0 = "$PQ=^u"
    validation_1 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_1.__eq__(bool_0)
    validation_2 = module_0.Validation(str_0, validation_1)
    validation_2.to_either()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    int_0 = -2610
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_9():
    float_0 = -914.6299
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.map(none_type_0)


def test_case_11():
    int_0 = 1833
    bytes_0 = b"`\x9c\xc0\xb0\x15\xdb2<\xd7\x92d\xa0\xdav\x83\xd9O\x8bA\x86"
    validation_0 = module_0.Validation(int_0, bytes_0)
    bool_0 = True
    float_0 = 759.150717
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.bind(bool_0)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_13():
    int_0 = -1614
    str_0 = "^\x0cnnQ"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    none_type_0 = None
    complex_0 = 1282 + 2996.785j
    validation_1 = module_0.Validation(none_type_0, complex_0)
    var_3 = validation_0.__eq__(var_0)
    var_4 = validation_1.to_box()
    var_5 = var_1.map(validation_1)
    var_6 = var_2.__eq__(var_1)
    validation_0.map(var_4)


def test_case_14():
    str_0 = "#:Txtz1S&5,|r"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_15():
    int_0 = 1198
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_0.to_either()


def test_case_16():
    bool_0 = False
    str_0 = "YPQ=^u"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = var_2.__str__()
    var_4 = var_1.__eq__(var_3)
    var_4.to_box()


def test_case_17():
    bool_0 = False
    str_0 = "YPQ=^u"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(bool_0)
    var_3 = validation_0.__eq__(validation_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_4 = validation_0.to_either()
    var_5 = var_2.__str__()
    validation_2 = module_0.Validation(var_4, var_5)
    var_6 = validation_2.__eq__(validation_0)
    var_7 = validation_1.__eq__(none_type_0)
    var_8 = validation_0.to_try()
    var_9 = validation_0.is_fail()
    var_9.map(var_2)
