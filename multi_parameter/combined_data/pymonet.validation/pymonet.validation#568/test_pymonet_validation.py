# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_success()


def test_case_1():
    float_0 = -768.6
    str_0 = "Y0RU^\x0bl^;y|X#:"
    validation_0 = module_0.Validation(float_0, str_0)
    validation_1 = module_0.Validation(float_0, validation_0)
    var_0 = validation_1.__eq__(float_0)
    var_0.to_try()


def test_case_2():
    bytes_0 = b"\x94\xe0\xfc)\x08\x8d\xe6\x02\x9d"
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_lazy()


def test_case_3():
    none_type_0 = None
    str_0 = "yz)H<HM>V/x1-_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(none_type_0)


def test_case_4():
    str_0 = "Y0RUl^;y|M#:"
    str_0.bind(str_0)


def test_case_5():
    str_0 = "Y0RUl^;y|M#:"
    var_0 = module_0.Validation(str_0, str_0)


def test_case_6():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_0.map(bool_0)


def test_case_9():
    bytes_0 = b"\xe2\x02\xaa\xd1\xf3u\xdd2\xba\xae\xa6\x14\xc6"
    int_0 = -691
    bool_0 = True
    validation_0 = module_0.Validation(int_0, bool_0)
    validation_0.bind(bytes_0)


def test_case_10():
    int_0 = 257
    bytes_0 = b"~\xd1@\xd8\xa5\xceS\xe7\x02O!\xd9\x85R\xc2!\xbd\x073"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(int_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.__str__()


def test_case_12():
    float_0 = -768.6
    str_0 = "Y0RU^\x0bl^;y|X#:"
    validation_0 = module_0.Validation(float_0, str_0)
    validation_1 = module_0.Validation(float_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_1.__eq__(float_0)
    validation_2 = module_0.Validation(str_0, validation_1)
    validation_2.to_either()


def test_case_13():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(bool_0)
    var_3 = validation_0.__str__()
    var_4 = var_2.__str__()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2.to_either()


def test_case_14():
    int_0 = -34
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()


def test_case_15():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(bool_0)
    var_3 = validation_0.__str__()
    var_4 = var_2.__str__()
    var_1.to_either()


def test_case_16():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__eq__(bool_0)
    var_3 = validation_0.__str__()
    var_4 = var_2.__str__()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_2.ap(var_4)


def test_case_17():
    float_0 = -768.6
    str_0 = "Y0RU^\x0bl^;y|X#:"
    validation_0 = module_0.Validation(float_0, str_0)
    validation_1 = module_0.Validation(float_0, validation_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = validation_1.__eq__(float_0)
    validation_2 = module_0.Validation(str_0, validation_1)
    validation_2.to_either()


def test_case_18():
    dict_0 = {}
    dict_1 = {}
    list_0 = [dict_0]
    validation_0 = module_0.Validation(dict_1, list_0)
    validation_1 = module_0.Validation(dict_1, dict_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.__str__()
    var_2 = var_1.__eq__(validation_0)
    var_3 = validation_1.__str__()
    var_4 = var_2.__str__()
    var_5 = validation_1.to_maybe()
    var_6 = var_5.to_either()
    var_1.to_lazy()
