# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    bytes_0 = b"d l"
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, none_type_1)
    validation_1.__str__()


def test_case_1():
    str_0 = "CJHW$Ls&+T$P<{&] Yz"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    str_1 = "%\t;"
    validation_1 = module_0.Validation(str_0, str_1)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.__str__()
    var_4 = validation_0.to_box()
    var_3.bind(var_4)


def test_case_2():
    bytes_0 = b"\xf1\x94\xdf=K}\xad;*\x90\x08\xe84\xeeh\xd8\xe9"
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(list_0, list_0)
    validation_1.bind(list_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(dict_0)
    var_3 = var_2.ap(dict_0)
    var_4 = var_3.map(var_3)
    var_4.is_fail()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    complex_0 = 2940 - 841.6j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    bytes_0 = b"d l"
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.map(validation_0)


def test_case_8():
    object_0 = module_1.object()
    bytes_0 = b"3\x0c`\xf5i\x1a\xae\x18\xfa\xed\r\x92\xf4S\xe1\xd4K"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    float_0 = 212.46017
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.bind(validation_0)


def test_case_9():
    str_0 = "0|2T_9Z J_&\r\x0b+@"
    int_0 = 2181
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.ap(str_0)


def test_case_10():
    float_0 = -660.9064
    bytes_0 = b'\x90No"\x14\x0b\x04I\x12K\xecee\xb3\x10[mP'
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(float_0)
    validation_0.__str__()


def test_case_11():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    str_0 = "CJHW$Ls&+T$P<{&] Yz"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(str_0, str_0)
    complex_0 = -510.746727 - 2904j
    var_1 = validation_1.to_try()
    validation_2 = module_0.Validation(complex_0, validation_1)
    var_2 = validation_1.__eq__(var_0)
    validation_3 = module_0.Validation(str_0, validation_2)
    var_3 = var_0.__str__()
    var_4 = validation_3.to_box()
    validation_2.to_either()


def test_case_13():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_0.to_lazy()


def test_case_14():
    str_0 = "CJHW$Ls&+T$P<{&] Yz"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    str_1 = "%\t;"
    validation_1 = module_0.Validation(str_0, str_1)
    validation_2 = module_0.Validation(str_0, validation_1)
    str_2 = "*gdp@+^M}O]%pe3U\tD@\r"
    var_1 = validation_1.__eq__(str_2)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_1.__str__()
    var_4 = validation_2.to_box()
    var_5 = validation_1.to_either()
    var_1.to_try()


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    str_1 = "%\t;"
    validation_1 = module_0.Validation(validation_0, str_1)
    validation_2 = module_0.Validation(str_0, str_1)
    none_type_0 = None
    var_0 = validation_2.__eq__(none_type_0)
    var_1 = validation_2.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_box()
    var_4 = validation_0.to_either()
    var_5 = validation_2.to_try()
    var_1.bind(str_1)
