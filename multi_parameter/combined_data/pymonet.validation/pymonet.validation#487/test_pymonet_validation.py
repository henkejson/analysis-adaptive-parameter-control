# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 355.4904
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_1():
    bytes_0 = b"!\xcc\xebPE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.ap(var_1)
    var_4 = validation_1.__eq__(validation_1)
    var_5 = validation_1.__str__()
    var_6 = validation_1.to_maybe()
    var_1.is_success()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_3():
    bytes_0 = b"!\xcc\xebPE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_1.is_success()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_5():
    float_0 = -3052.4778
    list_0 = [float_0, float_0, float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()


def test_case_6():
    none_type_0 = None
    none_type_0.to_maybe()


def test_case_7():
    float_0 = -3052.4778
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    validation_2 = module_0.Validation(bool_0, validation_0)
    var_0 = validation_0.to_box()
    validation_2.is_fail()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_10():
    bytes_0 = b"\xa1\x1exn\x96\xa8h\xa22\xa1\xa0h\xe0\xe5s\xf8"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, bytes_0)
    validation_0.bind(list_0)


def test_case_11():
    none_type_0 = None
    float_0 = 355.490357
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b"\xac\x97"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_try()
    validation_1 = module_0.Validation(var_3, validation_0)
    var_4 = validation_0.to_maybe()
    var_5 = var_1.ap(validation_0)
    var_6 = var_0.__str__()
    validation_2 = module_0.Validation(var_1, bytes_0)
    var_7 = validation_2.to_box()
    var_8 = validation_0.is_success()
    validation_3 = module_0.Validation(var_2, var_1)
    var_7.bind(var_0)


def test_case_13():
    bytes_0 = b"!\xcc\xebPE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.ap(var_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_maybe()
    var_0.is_success()


def test_case_14():
    bytes_0 = b"!\xcc\xebPE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_maybe()
    var_1.is_success()


def test_case_15():
    bytes_0 = b"!\xcc\xebPE"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_1, bytes_0)
    str_0 = "V7B4-&&dP]Q/@=4z\t "
    var_5 = var_0.__eq__(str_0)
    var_6 = validation_0.is_success()
    var_7 = var_4.__str__()
    validation_2 = module_0.Validation(var_1, var_1)
    var_8 = validation_1.is_success()
    validation_3 = module_0.Validation(var_2, var_7)
    var_9 = validation_3.to_either()
    var_10 = var_9.to_try()
    var_11 = validation_0.__eq__(validation_2)
    var_12 = var_11.__str__()
    var_13 = validation_3.to_box()
    var_14 = var_0.__str__()
    var_15 = validation_1.__str__()
    var_0.ap(var_2)


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.ap(var_1)
    var_4 = validation_1.__eq__(validation_1)
    var_5 = validation_1.__str__()
    var_6 = validation_1.to_maybe()
    var_1.is_success()
