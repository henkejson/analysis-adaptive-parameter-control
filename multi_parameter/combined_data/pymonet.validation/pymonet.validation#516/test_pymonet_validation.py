# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(var_0)


def test_case_1():
    str_0 = "l$a?:2gmd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.is_success()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = (bool_0,)
    validation_1 = module_0.Validation(var_0, tuple_0)
    var_1 = validation_1.is_success()
    var_2 = validation_1.to_either()
    var_3 = var_2.to_maybe()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.is_success()


def test_case_6():
    int_0 = -936
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.map(var_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = (bool_0,)
    validation_1 = module_0.Validation(var_0, tuple_0)
    var_1 = validation_1.is_success()
    validation_0.ap(var_1)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = validation_0.to_box()
    validation_0.to_try()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = (bool_0,)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.bind(bool_0)
    tuple_0.to_box()


def test_case_11():
    none_type_0 = None
    int_0 = 0
    set_0 = {int_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_12():
    str_0 = "\n        Returns first element of ImmutableList that passed\n        info argument returns True\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> bool\n        :returns: A\n        "
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = (bool_0,)
    validation_1 = module_0.Validation(var_0, tuple_0)
    bool_1 = True
    validation_2 = module_0.Validation(bool_1, var_0)
    var_1 = validation_2.__eq__(validation_1)
    var_2 = validation_1.to_maybe()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(var_0)
    var_1.ap(var_1)


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()
