# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = var_0.__eq__(bool_0)
    var_1.is_fail()


def test_case_1():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.map(set_0)


def test_case_2():
    float_0 = 1388.6072795028247
    str_0 = "*\tX\\&4~%>i<} D"
    var_0 = float_0.__str__()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_2 = validation_0.to_either()
    var_1.is_success()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bytes_0 = b"\xb0\x0b(\xdcO\x0f4F\xa3Ax\xb6xG{,&+"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_5():
    str_0 = "*\tX\\&4~%>i<} D"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_1 = validation_0.is_fail()


def test_case_6():
    str_0 = "-l\ni_="
    int_0 = 456
    validation_0 = module_0.Validation(str_0, int_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_7():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(list_0)
    validation_0.bind(none_type_0)


def test_case_8():
    float_0 = 1388.6072795028247
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__str__()
    validation_0.ap(var_1)


def test_case_9():
    float_0 = 1388.6072795028247
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()


def test_case_10():
    float_0 = 1388.6072795028247
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_11():
    str_0 = "*\tX\\&4~%>i<} D"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_2.is_success()


def test_case_12():
    str_0 = "c\tX\\&4~%>i<} D"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()


def test_case_13():
    float_0 = 1388.6072795028247
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_1.to_maybe()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = list_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_2 = validation_1.to_either()
    var_3 = var_2.__str__()
    var_3.ap(none_type_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.map(dict_0)


def test_case_16():
    float_0 = 1388.6072795028247
    str_0 = "*\tX\\&4~%>i<} D"
    validation_0 = module_0.Validation(float_0, float_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.__eq__(validation_0)
    validation_1.__str__()
