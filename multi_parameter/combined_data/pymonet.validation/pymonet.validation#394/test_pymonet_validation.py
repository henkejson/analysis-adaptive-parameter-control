# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "NBK`9"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    bytes_0 = b"A\x07\x0fe\xeb\xe5\xba\xf1\xb2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_2():
    str_0 = ";5O?F0}H^%Hsv"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    str_0 = "F8Rf%#:yLteC8*e&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    str_0 = "T]B=hr\\7Z"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    str_0 = "ar"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    str_0 = "T]B=hr\\7Z"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_7():
    str_0 = "k_d##z4.;~8"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = ";5O?F0}H^%Hsv"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_9():
    str_0 = ";5O?F0}H^%Hsv"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, str_0)


def test_case_10():
    str_0 = ";5O?F0}H^%Hsv"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    str_0 = "\n    Perform left-to-right function cmposition.\n\n    :parm value: argumet of first applied function\n    :type value: Any\n    :pram functions: list of functions to applied from left-to-right\n    :type fun#tions: List[Function]\n    :returns: result of all funtions\n    :rtype: Any\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    int_0 = 2603
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    str_0 = "5O?0}H^%Hsv"
    validation_1 = module_0.Validation(str_0, str_0)
    var_3 = validation_1.is_success()


def test_case_13():
    str_0 = "qIN#C)K\x0cyI"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_14():
    float_0 = 1065.760508
    dict_0 = {float_0: float_0, float_0: float_0}
    float_1 = 590.2225283295348
    validation_0 = module_0.Validation(float_1, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(float_1)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, var_1)
    validation_2 = module_0.Validation(validation_1, validation_0)
    var_2 = validation_2.__eq__(validation_1)
    validation_2.to_either()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()


def test_case_16():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bytes_0 = b"s\xdet\xc2x\x9f+%\r"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_1.__str__()
    var_4 = validation_1.to_either()
    var_4.to_either()
