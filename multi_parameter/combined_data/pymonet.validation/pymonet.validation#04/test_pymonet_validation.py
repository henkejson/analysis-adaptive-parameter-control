# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bytes_0 = b"\xb2\xfa\x86\xd2\xfa\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_try()


def test_case_1():
    str_0 = "V}QS)"
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_maybe()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_success()


def test_case_4():
    str_0 = "(\x0bTUx"
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_1.to_either()


def test_case_5():
    bytes_0 = b"\xb2\xfa\x86\xd2\xfa\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    validation_0.map(var_0)


def test_case_6():
    float_0 = 513.0047
    tuple_0 = (float_0,)
    str_0 = "2\x0b{IO>!"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(tuple_0)


def test_case_7():
    bytes_0 = b"\xf4\x1e\x83Fqa\x17"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_8():
    bool_0 = False
    bytes_0 = b"\xb2\xfa\x86\xd2\xfa\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_box()
    var_0.to_try()


def test_case_9():
    dict_0 = {}
    bytes_0 = b"\x82Wp \xb3\xe06\xe0\x15e\xf6\xfbJ\n`\r\xcef\x04"
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_10():
    str_0 = "V}QS)"
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.to_try()
    var_0.to_either()


def test_case_11():
    int_0 = -240
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_box()


def test_case_12():
    str_0 = "V}QS)"
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_1.to_either()


def test_case_13():
    str_0 = "V}QS)"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_success()
    var_0.to_lazy()


def test_case_14():
    bool_0 = True
    str_0 = "V}QS)"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.__eq__(bool_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_success()
    var_4 = validation_0.is_success()
    var_5 = validation_0.to_either()
    var_6 = var_5.to_maybe()
    var_7 = var_4.__str__()
    var_6.to_maybe()


def test_case_15():
    int_0 = -788
    list_0 = [int_0, int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    bool_0 = True
    list_1 = [bool_0]
    validation_1 = module_0.Validation(validation_0, list_1)
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_1.to_lazy()
    var_4 = var_2.__str__()
    var_4.to_try()
