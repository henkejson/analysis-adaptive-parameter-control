# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_1():
    bytes_0 = b"$\x95\x9ei"
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.to_lazy()
    var_1.to_lazy()


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    bool_1 = True
    list_0 = [bool_1, bool_1]
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_either()
    var_0.to_either()


def test_case_3():
    bytes_0 = b"\xbf\xf2\x18\x8f[\x10\xabF\xda\xfe%\xb2\x04\xbbL\xb7\x1d\x80 "
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_try()
    bool_0 = False
    tuple_1 = (var_1, var_2, bool_0)
    validation_0.bind(tuple_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.map(validation_1)


def test_case_8():
    none_type_0 = None
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.bind(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    bool_1 = True
    validation_1 = module_0.Validation(bool_1, bool_0)
    var_1 = validation_0.__eq__(validation_0)
    validation_1.ap(none_type_0)


def test_case_10():
    int_0 = -2810
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_11():
    none_type_0 = None
    float_0 = 2623.838
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    set_0 = set()
    validation_1 = module_0.Validation(none_type_1, set_0)
    var_0 = validation_1.__eq__(none_type_1)
    var_1 = validation_0.to_box()
    var_2 = validation_1.to_either()
    var_2.map(var_1)


def test_case_13():
    object_0 = module_1.object()
    bool_0 = False
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_1.map(bool_0)


def test_case_14():
    bytes_0 = b"\xff"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_1.to_box()
    bool_0 = False
    validation_2 = module_0.Validation(validation_0, bool_0)
    var_4 = var_3.to_try()
    var_5 = var_4.__str__()
    var_5.to_either()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_1.to_box()
    bool_0 = False
    validation_2 = module_0.Validation(validation_0, bool_0)
    var_3 = var_2.to_try()
    var_4 = module_1.object()
    var_5 = var_3.__str__()
    validation_2.to_either()
