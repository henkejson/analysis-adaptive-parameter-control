# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_1():
    bytes_0 = b"\xc9\xa9\xcb\x81\xed\xc4\xaeb\xad\xa4\xbc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.map(validation_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0]
    str_0 = "Kb#J,O"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.ap(list_1)


def test_case_3():
    bytes_0 = b"\xbbT\xc4\x01`w\xe4\xc0\x8d\x9ep>\x85Y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_4():
    bytes_0 = b"q/\x9aQ^\xf0\x83\x12\x83"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_5():
    none_type_0 = None
    none_type_0.to_try()


def test_case_6():
    bytes_0 = b"\xc2\xc5\xdb\xe9\x93\x8a\x92V\x17\x99\xbbn\x1f\x94\x96\xcd\xc4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.is_fail()
    var_0.to_box()


def test_case_8():
    bool_0 = True
    int_0 = 817
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(bool_0)


def test_case_9():
    list_0 = []
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(list_0)


def test_case_10():
    float_0 = -5181.6
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(float_0)


def test_case_11():
    int_0 = -2176
    dict_0 = {int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, int_0)
    var_0 = validation_0.to_box()
    validation_0.to_either()


def test_case_12():
    str_0 = "c\naInn"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_try()
    var_4 = var_1.map(str_0)
    var_4.to_lazy()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = var_0.bind(none_type_0)
    var_3 = var_2.to_try()
    var_4 = var_3.__eq__(bool_0)
    var_4.to_maybe()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_15():
    str_0 = "p]QHyhtvc6J<>h"
    validation_0 = module_0.Validation(str_0, str_0)
    list_0 = []
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_maybe()
    validation_2 = module_0.Validation(list_0, list_0)
    var_1 = validation_1.__eq__(validation_1)
    var_0.bind(list_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    bool_0 = True
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.to_try()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.ap(tuple_0)


def test_case_18():
    float_0 = 1313.1576072606008
    list_0 = []
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_1.__str__()
    var_2.bind(float_0)
