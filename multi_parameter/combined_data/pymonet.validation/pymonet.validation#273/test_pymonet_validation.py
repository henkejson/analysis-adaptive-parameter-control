# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_0.map(var_0)


def test_case_1():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_0.is_fail()


def test_case_3():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_4():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_6():
    bytes_0 = b"P~\xc5hw\x85\xf1\xce\x8db\xb2\x968\xe5\x90\x7fy:%."
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(validation_0)
    var_2 = validation_0.to_maybe()
    validation_0.map(validation_0)


def test_case_8():
    bytes_0 = b""
    str_0 = "J"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(bytes_0)


def test_case_9():
    bool_0 = True
    bytes_0 = b"p\xfd}\xfd\xc6Z\x7f\x96\xc9#\x9f\xe1n"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bool_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, bool_0)
    validation_1.is_success()


def test_case_11():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    none_type_0 = None
    var_2 = var_1.ap(none_type_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_0.map(var_0)
    validation_1 = module_0.Validation(validation_0, var_0)
    var_2.to_either()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    str_0 = "#@S/uiy]U%BK"
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_1.to_either()
    none_type_0 = None
    var_4 = var_3.ap(none_type_0)
    var_5 = var_4.to_maybe()
    var_6 = var_4.map(var_2)
    var_7 = validation_1.to_maybe()
    var_7.is_success()


def test_case_13():
    bytes_0 = b"P~\xc5hw\x85\xf1\xce\x8db\xb2\x968\xe5\x90\x7fy:%."
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()


def test_case_14():
    str_0 = "#@S/uiy]U%BK"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_either()
    none_type_0 = None
    var_2 = var_1.ap(none_type_0)
    var_3 = var_1.to_maybe()
    validation_2 = module_0.Validation(str_0, var_0)
    validation_1.to_either()


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    var_0.map(str_0)
