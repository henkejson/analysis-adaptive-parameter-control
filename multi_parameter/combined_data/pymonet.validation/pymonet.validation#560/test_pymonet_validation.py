# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xa2}\x07\xfb\xb5'UUmI[k\xf1g\xe0"
    int_0 = -919
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_2():
    bytes_0 = b"\xd2~\xa0:"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    list_0 = [validation_0, bytes_0]
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.__str__()
    var_0.to_box()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_4():
    str_0 = "7\\-0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(var_0)
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_success()


def test_case_5():
    str_0 = "3C"
    str_1 = "7\\-0"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.ap(str_0)
    var_3 = var_0.map(var_2)
    var_4 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_6():
    str_0 = "3C"
    str_0.is_success()


def test_case_7():
    str_0 = "3C"
    var_0 = module_0.Validation(str_0, str_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.map(bool_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_12():
    bytes_0 = b"\x94\xda\xf5Gp\x93\xfd"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(bytes_0, none_type_0)


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_success()
    var_2 = validation_0.is_fail()
    validation_0.map(var_1)


def test_case_14():
    str_0 = "7-0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_16():
    str_0 = "3C"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.map(var_1)
    var_3 = var_1.to_either()
    var_0.is_success()


def test_case_17():
    str_0 = "3C"
    str_1 = "7\\-0"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(str_0)
    var_2 = module_0.Validation(str_1, var_1)
    var_3 = var_2.__eq__(validation_0)
    var_2.to_either()
