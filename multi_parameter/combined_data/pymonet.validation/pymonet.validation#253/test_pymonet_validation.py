# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_1():
    bool_0 = True
    bytes_0 = b"\xf7H\xf7\x8c\x95\xd5\x02\xa8HY\x82\x0c\x90!\xf4\x17"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.ap(bool_0)


def test_case_2():
    str_0 = 'E"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_0.map(var_0)
    var_3 = var_1.ap(var_0)
    validation_1 = module_0.Validation(validation_0, var_2)
    var_4 = validation_0.to_either()
    var_5 = var_2.__str__()


def test_case_3():
    bytes_0 = b"\xd9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    str_0 = 'E"'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_1.to_maybe()
    var_3 = validation_1.to_either()
    var_4 = validation_1.to_maybe()
    validation_1.map(str_0)


def test_case_6():
    str_0 = "\x0c 27["
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_7():
    float_0 = 5.482442
    int_0 = -3372
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(float_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_9():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_0.is_fail()


def test_case_10():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_1.to_box()


def test_case_11():
    float_0 = 2394.478366
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_12():
    str_0 = 'E"'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    bytes_0 = b"q\xfd\x80\x17\x18\x1a\x89qq\x0fe"
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = var_0.to_lazy()
    var_4 = var_0.map(var_0)
    validation_3 = module_0.Validation(validation_2, var_1)
    var_5 = validation_2.to_either()
    validation_4 = module_0.Validation(var_4, bytes_0)
    var_5.is_success()


def test_case_13():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    bytes_0 = b"q\xfd\x80\x17\x18\x1a\x89qq\x0fe"
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = var_0.to_lazy()
    var_0.map(var_0)


def test_case_14():
    str_0 = 'E"'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    bytes_0 = b"q\xfd\x80\x17\x18\x1a\x89qq\x0fe"
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = var_0.to_lazy()
    var_4 = var_0.map(var_0)
    validation_3 = module_0.Validation(validation_2, var_1)
    validation_4 = module_0.Validation(none_type_0, var_4)
    validation_5 = module_0.Validation(str_0, none_type_0)
    var_5 = var_0.to_either()
    validation_6 = module_0.Validation(var_4, var_0)
    var_4.is_success()


def test_case_15():
    str_0 = 'E"'
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    bytes_0 = b""
    validation_2 = module_0.Validation(validation_1, bytes_0)
    var_2 = validation_2.__str__()
    tuple_0 = (validation_1,)
    var_3 = validation_2.__eq__(tuple_0)
    var_4 = validation_1.to_box()
    var_5 = validation_1.is_success()
    bytes_1 = b"\xe9Mb\xd7\x1d\xec\x1d\x0c\x10"
    validation_3 = module_0.Validation(bytes_1, var_1)
    validation_4 = module_0.Validation(none_type_0, none_type_0)
    var_6 = validation_2.to_either()
    var_7 = validation_0.__str__()
    var_8 = var_7.__str__()
    var_7.to_maybe()
