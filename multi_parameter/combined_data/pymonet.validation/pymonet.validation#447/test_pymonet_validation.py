# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    float_0 = -396.6
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    float_0 = 1522.680790532239
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.ap(float_0)


def test_case_2():
    bool_0 = False
    list_0 = []
    str_0 = "\n        Transform Validation to Either.\n\n        :returns: Right monad with previous value when Validation has no errors, in other case Left with errors list\n        :rtype: Right[A] | Left[E]\n        "
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(list_0)
    validation_1 = module_0.Validation(str_0, str_0)
    validation_1.map(list_0)


def test_case_3():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_0.ap(var_0)


def test_case_4():
    float_0 = -2090.46678
    list_0 = [float_0, float_0, float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_5():
    float_0 = -425.46
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_6():
    bytes_0 = b"?!\x01#\x150\xde"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()


def test_case_7():
    float_0 = -426.17366151383527
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_8():
    float_0 = -1302.88195
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_9():
    bytes_0 = b'"\xb2\x01#\x150\x9f'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bytes_0)


def test_case_10():
    str_0 = "=qw\x0c.G\nBqNQ43 GU"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_11():
    float_0 = -2090.927457890503
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bytes_0 = b"}\xb2\x01#\x150\x9f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_try()
    validation_1 = module_0.Validation(none_type_0, var_2)
    validation_0.to_maybe()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    complex_0 = 446.43 + 1008.476376j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_2.__eq__(validation_1)
    none_type_1 = None
    validation_3 = module_0.Validation(none_type_1, none_type_1)
    validation_4 = module_0.Validation(none_type_1, validation_3)
    validation_3.bind(validation_3)


def test_case_16():
    str_0 = "w}\x0c.G\nBqKNEQ43 GU"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_17():
    bool_0 = True
    object_0 = module_1.object()
    list_0 = []
    validation_0 = module_0.Validation(object_0, list_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(object_0, bool_0)
    none_type_0 = None
    var_1 = validation_1.__eq__(none_type_0)
    var_1.bind(validation_1)
