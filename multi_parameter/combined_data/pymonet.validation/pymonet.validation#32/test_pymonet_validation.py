# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -2349.557398
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    bytes_0 = b"N\x06\xf5\x87\xa5J\x08\x86\xdaHX\x8a\xe2\x8c&\x05"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.ap(none_type_0)


def test_case_4():
    float_0 = 3603.18
    bytes_0 = b"1\xfa*,\xab\xdc\x1f\xb43x}D\xa9\xa2"
    list_0 = [bytes_0, bytes_0]
    list_1 = []
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = var_1.__eq__(float_0)
    var_2.to_try()


def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    validation_0.ap(var_0)


def test_case_6():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_7():
    bool_0 = True
    bytes_0 = b"\xf9\xcb\xf0m=,y\xda\x06n\xf0\x00Q\xc4c\xa6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__eq__(bool_0)
    var_2.is_success()


def test_case_8():
    int_0 = 2943
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_9():
    int_0 = 2935
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_10():
    complex_0 = 269.6638 - 1799.626081j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_fail()


def test_case_11():
    float_0 = 2155.3521657532933
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_12():
    int_0 = 2911
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(validation_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.to_box()


def test_case_15():
    int_0 = -2621
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_16():
    float_0 = -2344.1302855927966
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_17():
    float_0 = -2349.557398
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(float_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, float_0)
    var_3 = validation_1.__eq__(none_type_0)
    var_3.ap(none_type_0)


def test_case_18():
    bool_0 = False
    str_0 = "j\x0bRO\rM'x>t0d-"
    validation_0 = module_0.Validation(str_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = var_1.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_3 = var_2.__str__()
    validation_2 = module_0.Validation(var_0, var_1)
    var_4 = validation_0.__eq__(validation_1)
    var_2.ap(var_0)
