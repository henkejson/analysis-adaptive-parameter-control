# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    float_0 = 996.987451
    validation_0 = module_0.Validation(float_0, float_0)
    bytes_0 = b"\x92\xe7\x88\x07/\x08"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = set_0.__str__()


def test_case_2():
    bytes_0 = b"\x8e\xeb\xf8VJ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    float_0 = 2198.5606
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_5():
    int_0 = -1319
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"\tml\xae`\x84\xe2\xe3\xcf\xf8FJ\x11"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_7():
    bytes_0 = b"\x8e\xeb\xf8VJ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_8():
    bytes_0 = b"M\x83\x1dY\xb0w\xcb\xa3\xcb\xfe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_9():
    bytes_0 = b"[\xc15\x05\xa3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_10():
    bytes_0 = b"C\xeb\xd7V\x08"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bytes_0 = b"q\xeb\xe1\xd2\x8e\x0b\x96e\x08+\xeb:\xff=\xe1*"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.__str__()


def test_case_14():
    bytes_0 = b"m@\xae`\x84\xe2 \xcf\xf8FJ\x11"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_15():
    str_0 = '=<e"HU8'
    validation_0 = module_0.Validation(str_0, str_0)
    list_0 = []
    bytes_0 = b"bE\x1f\xca\xd3\xcf\xca\xdb"
    validation_1 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.to_try()
    validation_2 = module_0.Validation(var_1, validation_0)
    var_2 = validation_1.__eq__(validation_2)
    validation_3 = module_0.Validation(validation_2, bytes_0)
    validation_2.to_try()


def test_case_16():
    bytes_0 = b"\x8e\xeb\xf8VJ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = validation_0.is_fail()
    object_0 = module_1.object()
