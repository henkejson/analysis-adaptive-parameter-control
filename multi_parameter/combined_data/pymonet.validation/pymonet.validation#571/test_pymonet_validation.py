# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_0.is_success()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    bytes_0 = b"h\xef\xa8\x85A\xd5=\xfa\xa6aJfD\xe3\x82*\xe2"
    tuple_0 = (bytes_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_3():
    set_0 = set()
    dict_0 = {}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()
    var_2.ap(dict_0)


def test_case_4():
    bytes_0 = b"\x18\xdeS\xa6\x0eE\x9agrf\xabr"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_5():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_7():
    bool_0 = False
    str_0 = "5vmP|X$F_5"
    list_0 = [str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(bool_0)


def test_case_8():
    bytes_0 = b"\xce\xa8$i\x19\x9e!\xa7\xa0\x99z"
    set_0 = set()
    list_0 = [set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    validation_0.map(bytes_0)


def test_case_9():
    float_0 = 667.364511
    set_0 = {float_0, float_0}
    validation_0 = module_0.Validation(float_0, set_0)
    str_0 = "?X+2xGxN"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    validation_0.bind(validation_1)


def test_case_10():
    str_0 = "&>tHc<[D6"
    str_1 = "$.ly:)"
    validation_0 = module_0.Validation(str_1, str_0)
    validation_0.ap(str_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.bind(validation_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_14():
    str_0 = "Sum[value={}]"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    bytes_0 = b"\xce\xb9"
    tuple_0 = (dict_0, bool_0, bytes_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(str_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_0.to_box()
    var_2.is_success()


def test_case_15():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = var_0.bind(bool_0)
    var_3 = validation_1.__eq__(validation_0)
    var_3.to_lazy()
