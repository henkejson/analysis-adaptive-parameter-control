# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x95\xfc\xf4\x1f*_gg\x84\xfbnO=\xe5\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_try()


def test_case_1():
    int_0 = 1287
    list_0 = [int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.ap(var_0)
    var_3 = var_1.to_box()
    var_3.is_success()


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    bool_0 = True
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, var_0)
    var_2 = var_0.__str__()
    var_2.to_try()


def test_case_3():
    str_0 = "&"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    bytes_0 = b"\xf4\x1f*_gg\x84\xfbnO=\xe5\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_5():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_7():
    float_0 = 582.0
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(float_0)


def test_case_8():
    int_0 = 1287
    list_0 = [int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_0.ap(int_0)


def test_case_9():
    bytes_0 = b"\xf4\x1f*_gg\x84\xfbnO=\xe5\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_10():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_2 = var_0.to_box()
    var_1.to_box()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = module_0.Validation(bool_0, var_0)
    var_2 = var_1.to_box()
    var_3 = validation_0.__eq__(var_1)
    var_1.to_try()


def test_case_12():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_either()
    validation_1 = module_0.Validation(var_2, var_0)
    var_3 = var_0.__str__()
    validation_2 = module_0.Validation(validation_0, var_1)
    var_4 = validation_0.to_either()
    var_5 = validation_0.__eq__(var_1)
    var_6 = validation_1.__eq__(validation_1)
    var_6.to_try()


def test_case_13():
    bytes_0 = b"nC\xc1\xf4\xd6\xc5>\x02"
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    bytes_0 = b"nC\xc1\xf4\xd6\xc5>\x02"
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_either()
    validation_1 = module_0.Validation(var_0, tuple_0)
    var_3 = validation_1.__str__()
    str_0 = "=w$$?E0L"
    validation_2 = module_0.Validation(bytes_0, tuple_0)
    var_4 = validation_2.to_either()
    var_5 = var_1.__eq__(validation_0)
    var_6 = validation_2.to_box()
    var_7 = var_0.ap(str_0)
    var_8 = var_7.to_lazy()
    var_9 = var_8.bind(validation_2)
    var_5.is_success()
