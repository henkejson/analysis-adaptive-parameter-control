# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "[w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.map(tuple_1)


def test_case_2():
    str_0 = "7AiGcSc|)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = "[w"
    str_2 = "YFs %N(pu2"
    validation_0 = module_0.Validation(str_2, str_2)
    var_0 = validation_0.__eq__(validation_0)
    set_0 = {var_0}
    validation_1 = module_0.Validation(set_0, str_1)
    validation_2 = module_0.Validation(set_0, str_2)
    bool_0 = True
    validation_3 = module_0.Validation(bool_0, str_1)
    var_1 = validation_2.__eq__(validation_3)
    var_2 = validation_3.to_either()
    validation_4 = module_0.Validation(var_0, dict_0)
    var_3 = validation_4.is_fail()


def test_case_3():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(bool_0)


def test_case_4():
    bytes_0 = b"\xb1\x04\xb4t3\xfb\xb8&C`F\xe8\x84\xc4\x8a\x81\xad~\xfd\x95"
    bytes_0.map(bytes_0)


def test_case_5():
    bytes_0 = b"\xb1\x04\xb4t\xcb\xfb\xb8&C`F\xe8\x84\xc4\x8a\x81\xad~\xec\x95"
    var_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    float_0 = 1215.6
    float_1 = 518.738
    validation_0 = module_0.Validation(float_0, float_1)
    validation_0.to_try()


def test_case_7():
    bytes_0 = b"\xb1\x04\xb4t3\xfb\xb8&C`F\xe8\x84\xc4\x8a\x81\xad~\xfd\x95"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.map(validation_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.bind(none_type_0)


def test_case_9():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.ap(validation_0)


def test_case_10():
    float_0 = -758.52499
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "[w"
    str_1 = "YFs %N(pu2"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.__eq__(validation_0)
    set_0 = {var_0}
    validation_1 = module_0.Validation(set_0, str_0)
    validation_2 = module_0.Validation(set_0, str_1)
    validation_3 = module_0.Validation(var_0, validation_2)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = validation_1.to_box()
    var_4 = var_1.map(str_1)
    var_5 = validation_2.__eq__(var_0)
    var_6 = var_4.to_try()
    var_7 = var_6.bind(set_0)
    var_7.to_maybe()


def test_case_12():
    str_0 = "[w"
    str_1 = "YFs %N(pu2"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.__eq__(validation_0)
    set_0 = {var_0}
    validation_1 = module_0.Validation(set_0, str_0)
    validation_2 = module_0.Validation(set_0, str_1)
    validation_3 = module_0.Validation(var_0, validation_2)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = validation_1.to_box()
    var_4 = var_1.map(str_1)
    bytes_0 = b"\xea\x00\x9cC2\xbc\\A\xf8N"
    tuple_0 = (set_0, var_4, bytes_0)
    validation_4 = module_0.Validation(validation_2, tuple_0)
    var_5 = validation_1.to_maybe()
    var_6 = var_1.ap(var_4)
    var_6.to_either()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_either()


def test_case_14():
    str_0 = "[w"
    str_1 = "YFs %N(pu2"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.__eq__(validation_0)
    set_0 = {var_0}
    validation_1 = module_0.Validation(set_0, str_0)
    validation_2 = module_0.Validation(set_0, str_1)
    validation_3 = module_0.Validation(var_0, validation_2)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = validation_1.to_box()
    var_4 = var_1.map(str_1)
    var_5 = validation_1.__str__()
    var_5.ap(var_5)


def test_case_15():
    str_0 = ""
    str_1 = "YFs %N(pu2"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.__eq__(validation_0)
    set_0 = {var_0}
    validation_1 = module_0.Validation(set_0, str_0)
    validation_2 = module_0.Validation(set_0, str_1)
    validation_3 = module_0.Validation(var_0, validation_2)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_try()
    var_3 = validation_1.to_box()
    var_4 = var_1.map(str_1)
    var_5 = validation_1.__str__()
    var_5.ap(var_5)
