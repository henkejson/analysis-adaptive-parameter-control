# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "L"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_0.to_either()


def test_case_1():
    bytes_0 = b"\xe5\xd6\xb1\x8c{\xc5\xb5;\\\x0c\xae\xc8\xb6"
    list_0 = [bytes_0]
    bytes_1 = b""
    bytes_2 = b"\x8b\x84\xaf\xa9{\xb0<f\xe8r\xbf\x0b\xd0\xa8\xe3\xe6\xb4"
    validation_0 = module_0.Validation(bytes_2, bytes_2)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bytes_1)
    var_1.map(list_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"R\xa7RH35\x9f5Wm"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    str_0 = "LY"
    none_type_0 = None
    str_1 = "\n        Transform Lazy into Box with constructor_fn result.\n\n        :returns: Box monad with constructor_fn result\n        :rtype: Box[A]\n        "
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(str_1)
    validation_1 = module_0.Validation(var_0, none_type_1)
    validation_2 = module_0.Validation(none_type_0, str_0)
    var_1 = var_0.__str__()
    validation_1.map(validation_2)


def test_case_6():
    str_0 = "Q/Z*|GP;o}8UHh6e_O"
    bytes_0 = b"\xc1\xd0)~\x9b\xdd\x8e(\xf1\xf7\xe8\xa3~"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(str_0)


def test_case_7():
    str_0 = "<v"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.ap(validation_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_9():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()


def test_case_10():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.ap(bool_0)


def test_case_11():
    str_0 = "T\x0b7X>kD$(n~0p2.!>T"
    int_0 = -1946
    bool_0 = True
    bytes_0 = b"\x865\xf3\xd9\xd2\x8f\x1d\x9a\xd4R\xc0\x04v\xda\x87>"
    tuple_0 = (int_0, bool_0, bytes_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(str_0)
    var_1.to_lazy()


def test_case_12():
    bytes_0 = b"\xafW\x9f\xba\x86\r\xf9\xa0\xafy2\xf5H\xcbZ"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.map(bytes_0)


def test_case_13():
    none_type_0 = None
    int_0 = -636
    dict_0 = {
        none_type_0: none_type_0,
        int_0: none_type_0,
        int_0: none_type_0,
        int_0: int_0,
    }
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_2.__eq__(none_type_0)
    var_3.bind(var_3)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    validation_0.ap(tuple_0)


def test_case_15():
    float_0 = -724.59337
    none_type_0 = None
    int_0 = -636
    dict_0 = {
        none_type_0: none_type_0,
        int_0: none_type_0,
        int_0: none_type_0,
        int_0: int_0,
    }
    tuple_0 = ()
    list_0 = [dict_0, int_0, tuple_0, float_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = module_0.Validation(int_0, none_type_0)
    var_1 = validation_0.__str__()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(list_0)
    var_2.to_either()


def test_case_16():
    float_0 = -724.59337
    none_type_0 = None
    int_0 = -636
    dict_0 = {
        none_type_0: none_type_0,
        int_0: none_type_0,
        none_type_0: none_type_0,
        int_0: none_type_0,
        int_0: int_0,
    }
    tuple_0 = ()
    list_0 = [dict_0, int_0, tuple_0, float_0]
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(float_0)
    var_3 = var_0.__eq__(list_0)
    var_3.to_either()
