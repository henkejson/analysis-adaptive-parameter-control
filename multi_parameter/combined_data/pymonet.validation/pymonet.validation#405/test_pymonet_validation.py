# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xa5\x82\xe6\xc7\x1du\xa6B\xb0\xb5\x08z\xee\xa3=m"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(int_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()


def test_case_3():
    str_0 = "@c=i_O$dF.x*['\r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    bytes_0 = b"\xa5\x82\xe6\xc7\x1du\xa6B\xb0\x08z\xa3=m"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    var_0 = none_type_0.__eq__(none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    int_0 = -4303
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_8():
    str_0 = "Oiu}}O"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.ap(validation_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(validation_0)


def test_case_10():
    int_0 = -1518
    validation_0 = module_0.Validation(int_0, int_0)
    int_1 = 1755
    validation_0.bind(int_1)


def test_case_11():
    int_0 = -1518
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(int_0)


def test_case_12():
    str_0 = "TX$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_maybe()
    var_3 = var_2.__eq__(none_type_0)


def test_case_14():
    bytes_0 = b"\x1f\xb4-mv\xe8P\xd7\xc8D}\x99\x10\xe5\xa8\xeb6a\xe5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_15():
    float_0 = 51.0
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = var_0.__eq__(float_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()


def test_case_18():
    bytes_0 = b"\x9c\xc5\xb97-\x93\x0b\x88\xe49\x0c\x80\xc4y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_0.map(validation_0)
