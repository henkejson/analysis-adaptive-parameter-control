# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(list_0)
    var_2.is_fail()


def test_case_1():
    str_0 = "j"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_box()
    var_0.to_either()


def test_case_2():
    int_0 = 2492
    int_1 = 1
    dict_0 = {int_1: int_1}
    list_0 = [dict_0, dict_0, int_1, int_1]
    tuple_0 = (dict_0, int_1, dict_0, list_0)
    list_1 = [tuple_0, list_0, tuple_0, tuple_0]
    validation_0 = module_0.Validation(list_1, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(int_0)


def test_case_3():
    bytes_0 = b"\x8a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_box()
    var_4 = validation_0.is_fail()
    var_2.is_success()


def test_case_4():
    bytes_0 = b";"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = "pCv##e\x0c9oVt"
    tuple_0 = ()
    validation_0 = module_0.Validation(str_0, tuple_0)
    validation_0.bind(str_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_10():
    bool_0 = True
    str_0 = "ImmutableList: you can not add any other instace than ImmutableList"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.map(bool_0)


def test_case_11():
    str_0 = "\rjnJsFyqd\x0c|66SI\x0be\r)"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(str_0)


def test_case_12():
    bytes_0 = b"\xe7'N"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_0.to_either()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(validation_0)
    var_3.to_lazy()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_3 = validation_1.__eq__(validation_0)
    var_4 = var_0.to_lazy()
    var_5 = var_4.to_box()
    var_6 = var_0.__str__()
    var_7 = validation_0.__eq__(var_4)
    var_0.is_success()
