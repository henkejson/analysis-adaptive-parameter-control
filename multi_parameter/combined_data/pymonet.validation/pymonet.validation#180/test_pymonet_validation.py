# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "|_\nZ~,f47:C~0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    str_0.is_fail()


def test_case_1():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.to_either()


def test_case_2():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_3():
    bytes_0 = b"\x15x\xfa\xf2\xe2\\U\xff\xfd\xc8K"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, set_0)
    var_1 = validation_1.__str__()
    var_1.is_success()


def test_case_4():
    str_0 = "|_\nZ~,f47:C~0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    bool_0 = False
    var_3 = validation_0.to_try()
    validation_0.map(bool_0)


def test_case_5():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__eq__(none_type_0)
    var_2.is_fail()


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_7():
    int_0 = 559
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_0.to_lazy()


def test_case_8():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, dict_0)
    validation_1.bind(none_type_0)


def test_case_9():
    float_0 = 97.11004
    int_0 = 3448
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(float_0)


def test_case_10():
    str_0 = "|_\nZ~,f47:C~0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_fail()
    var_0.is_fail()


def test_case_11():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__str__()
    var_3 = validation_0.__eq__(list_0)
    var_3.to_try()


def test_case_12():
    bool_0 = True
    bytes_0 = b't\x07\x9e\xf0\xd3I\xd64b*m"@^\xb5Kp}\x03'
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_13():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__str__()
    var_2 = validation_1.__str__()
    var_2.is_success()


def test_case_14():
    str_0 = "|_\n\x0bZ~,f47:C~0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.to_either()
