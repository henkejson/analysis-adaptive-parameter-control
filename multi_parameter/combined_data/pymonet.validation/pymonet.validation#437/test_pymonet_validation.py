# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    validation_0 = module_0.Validation(none_type_2, none_type_2)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.ap(none_type_0)


def test_case_1():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    str_0 = '[-f^3sVr_T"'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = validation_0.__str__()
    validation_0.bind(none_type_0)


def test_case_3():
    none_type_0 = None
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(none_type_0)
    var_1.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    int_0 = -3769
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_6():
    int_0 = -3769
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = " {g\x0b@NBn=(P9U' \x0bUkp"
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(str_0)


def test_case_8():
    set_0 = set()
    int_0 = -2463
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(set_0)


def test_case_9():
    float_0 = -3868.937
    set_0 = {float_0}
    str_0 = "GFHIp%X"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(set_0)


def test_case_10():
    none_type_0 = None
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    float_0 = 3797.3
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    int_0 = -581
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.is_fail()


def test_case_13():
    none_type_0 = None
    list_0 = []
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(set_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.is_success()


def test_case_14():
    none_type_0 = None
    list_0 = []
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = var_0.__str__()
    var_3 = var_1.__str__()
    var_4 = validation_1.__eq__(validation_1)
    var_4.is_fail()


def test_case_15():
    none_type_0 = None
    list_0 = []
    tuple_0 = (list_0,)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_1.to_box()
    var_3 = var_2.__str__()
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_4 = var_3.__str__()
    var_5 = validation_2.__eq__(validation_1)
    var_5.is_fail()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
