# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.is_success()
    var_1.is_success()


def test_case_1():
    object_0 = module_1.object()
    bytes_0 = b"\xe6\xd6\xa0\xe1%\x17\xcd\xdb\xe0R?\x1c\x9b\xebxv\xdd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1.to_try()


def test_case_2():
    object_0 = module_1.object()
    bytes_0 = b"\xe6\xd6\xa0\xe1%\x17\xcd\xdb\xe0R?\x1c\x9b\xebxv\xdd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_maybe()
    var_4 = var_0.__str__()
    var_5 = validation_0.to_either()
    var_6 = var_5.to_try()
    var_7 = validation_1.is_fail()
    var_4.bind(var_2)


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_4():
    bytes_0 = b"z\xc8Qc\x01\xb2\xd8\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    int_0 = 820
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = ""
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(str_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    validation_0.ap(bool_0)


def test_case_10():
    bytes_0 = b"z\xc8Qc\x01\xb2\xd8\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    float_0 = 1203.0
    var_0 = validation_0.to_maybe()
    set_0 = {float_0}
    validation_1 = module_0.Validation(float_0, bytes_0)
    validation_2 = module_0.Validation(set_0, set_0)
    bool_0 = True
    validation_3 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_3.to_box()
    var_1.ap(validation_2)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_12():
    object_0 = module_1.object()
    bytes_0 = b"\x00\xe5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_0.is_success()
    var_3 = validation_0.to_maybe()
    var_4 = var_0.__str__()
    var_5 = var_0.to_maybe()
    var_6 = validation_1.is_fail()
    var_4.bind(var_2)


def test_case_13():
    float_0 = -1357.61783
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_0.to_box()


def test_case_14():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_16():
    int_0 = -3528
    validation_0 = module_0.Validation(int_0, int_0)
    bytes_0 = b"\xe6\xd6\xa0\xe1%\x17\xcd\xdb\xe0R?\x1c\x9b\xebxv\xdd"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.__str__()
    validation_2 = module_0.Validation(var_0, bytes_0)
    var_2 = validation_1.__eq__(validation_0)
    var_2.ap(bytes_0)


def test_case_17():
    object_0 = module_1.object()
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(object_0)
    var_3 = var_0.__str__()
    var_4 = validation_0.to_either()
    var_3.to_either()
