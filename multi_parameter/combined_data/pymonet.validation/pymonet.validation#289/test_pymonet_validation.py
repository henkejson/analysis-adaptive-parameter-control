# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(var_1)
    var_2.is_success()


def test_case_1():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    validation_1.bind(validation_0)


def test_case_2():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_1.to_maybe()
    validation_0.bind(var_2)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.is_fail()
    var_0.is_fail()


def test_case_6():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.map(var_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.to_box()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_9():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    int_0 = -3079
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.__eq__(var_1)
    var_3 = validation_0.is_success()
    var_3.to_maybe()


def test_case_12():
    str_0 = "\n        Take function (A) -> b and applied this function on current box value and returns new box with mapped value.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> B\n        :returns: new box with mapped value\n        :rtype: Box[B]\n        "
    bytes_0 = b"\x8c\xa1"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.is_fail()
    var_1 = validation_1.to_lazy()
    var_2 = var_1.bind(var_0)
    var_3 = var_0.__eq__(none_type_0)
    var_2.to_box()


def test_case_13():
    str_0 = "0Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = validation_0.__eq__(validation_0)
    validation_1.to_either()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_maybe()
    validation_1 = module_0.Validation(tuple_0, tuple_0)


def test_case_15():
    str_0 = "Gp\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.is_success()
    var_3 = validation_1.is_fail()
    var_4 = var_1.__eq__(var_1)
    var_5 = validation_1.__str__()
    validation_2 = module_0.Validation(var_4, var_0)
    var_6 = validation_1.__str__()
    var_7 = validation_2.to_lazy()
    var_8 = var_7.map(validation_2)
    var_9 = validation_1.__eq__(validation_1)
    var_10 = module_0.Validation(var_9, var_3)
    var_11 = var_10.__eq__(validation_0)
    var_12 = var_9.__str__()
    var_12.map(var_9)


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_success()
    var_3 = var_1.to_try()
    var_3.is_fail()
