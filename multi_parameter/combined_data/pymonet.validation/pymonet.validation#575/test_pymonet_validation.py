# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    bytes_0 = b'\xfe|\xddR\x85\xa0"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.to_maybe()
    var_1.ap(validation_0)


def test_case_3():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_maybe()
    var_0.ap(validation_0)


def test_case_4():
    bytes_0 = b"\xa9I"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_5():
    bytes_0 = b"\xa9I"
    bytes_0.to_maybe()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_8():
    list_0 = []
    tuple_0 = (list_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    int_0 = 1
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(bool_0, none_type_1)
    validation_1.map(int_0)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"\x11\xa2\xe5i\x95'\x8eai\x8d\x0eRj@2"
    none_type_1 = None
    validation_0 = module_0.Validation(bytes_0, none_type_1)
    validation_0.bind(none_type_0)


def test_case_11():
    bytes_0 = b"\xa9I"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.ap(var_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_1, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(bool_0)
    var_3 = validation_0.to_box()
    validation_0.to_either()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_14():
    bool_0 = True
    int_0 = -40
    validation_0 = module_0.Validation(int_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(validation_0)
    var_1.to_box()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_0.to_either()


def test_case_16():
    bytes_0 = b"\xa9I"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_17():
    bytes_0 = b"\xa9I"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bool_0 = False
    validation_1 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_maybe()


def test_case_18():
    str_0 = "[s'tF31 #1%PrKl_~ENU"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
