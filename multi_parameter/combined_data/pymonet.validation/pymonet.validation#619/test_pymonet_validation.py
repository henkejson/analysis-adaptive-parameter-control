# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -2434.3 + 1838.93j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    validation_0.map(var_0)


def test_case_1():
    bytes_0 = b"."
    bool_0 = False
    str_0 = ""
    list_0 = [str_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_2():
    float_0 = 5074.61
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.to_either()
    var_0.bind(none_type_0)


def test_case_3():
    str_0 = "a0"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    none_type_0 = None
    var_2 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_maybe()


def test_case_4():
    str_0 = "HY<7-8c5gl?(E\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bytes_0 = b"\x7f\xf85\x90\xbfj\xab\xeeL\xbb4\xf2\xdb$\x1dh"
    bytes_1 = b"\x93\xf9g>\xa8\x0e\xb7\x8b\xe1\xa2\xd5\xcd4j-\xb7\x8d\xe8"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_try()
    var_1 = var_0.__eq__(bytes_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    float_0 = -752.5
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.__eq__(float_0)
    validation_1.is_fail()


def test_case_8():
    complex_0 = -2434.3 + 1838.93j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(validation_0)


def test_case_9():
    dict_0 = {}
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(dict_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_2.is_success()


def test_case_12():
    bool_0 = True
    float_0 = -1411.99
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(bool_0)


def test_case_13():
    float_0 = 889.107
    bytes_0 = b"B\xf4\xdd\xefh\x18~r\x84\x86\xd1\r\x97m\xf3O."
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(bytes_0, float_0)
    var_1.to_maybe()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_try()
    var_3 = validation_0.__eq__(var_2)
    var_1.to_try()


def test_case_15():
    complex_0 = -2434.3 + 1838.93j
    validation_0 = module_0.Validation(complex_0, complex_0)
    float_0 = -752.5
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = var_0.__eq__(validation_1)
    validation_1.bind(float_0)
