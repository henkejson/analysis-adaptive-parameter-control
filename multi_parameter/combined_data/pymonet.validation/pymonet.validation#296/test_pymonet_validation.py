# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    bytes_0 = b"G5\xacC|\xb4!=\xb1\xc1\x08\xb5\x8dW?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_1.map(bytes_0)


def test_case_3():
    bytes_0 = b"G5\xacC;|!=\xb1\xc1\xf8\x08\xf9\xb5vW?"
    str_0 = "9tm@C"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(str_0)
    var_2.to_either()


def test_case_4():
    bytes_0 = b"#\x99"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    validation_0.map(validation_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    float_0 = -1082.129869091893
    validation_1 = module_0.Validation(float_0, float_0)
    set_0 = set()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_2.__eq__(validation_2)
    var_1 = validation_0.is_fail()
    var_2 = validation_2.to_try()
    var_3 = validation_1.__eq__(float_0)
    var_4 = validation_1.__eq__(none_type_0)
    var_5 = validation_2.to_maybe()
    var_1.map(bool_0)


def test_case_8():
    tuple_0 = ()
    bytes_0 = b"\x1d6Y\xb1\x07\xe0\x81\xd3\x8e\xf9\xa9"
    dict_0 = {tuple_0: bytes_0}
    list_0 = [dict_0, dict_0, tuple_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(list_0)


def test_case_9():
    bytes_0 = b"|\xc0F\x0e"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0]
    str_0 = "4Pq*e#TQfFR"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(list_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    float_0 = -1082.67
    validation_1 = module_0.Validation(float_0, float_0)
    set_0 = set()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_2.__eq__(validation_2)
    validation_1.ap(validation_1)


def test_case_11():
    bytes_0 = b"\xa9\xf5Gd\x84-"
    bool_0 = True
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_12():
    bool_0 = False
    list_0 = [bool_0]
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    bool_0 = False
    str_0 = ":>/&U'j$DA\r"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_maybe()


def test_case_14():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    float_0 = -1082.67
    validation_1 = module_0.Validation(float_0, float_0)
    set_0 = set()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_2.__eq__(validation_2)
    var_1 = validation_2.__str__()
    var_2 = validation_0.is_fail()
    validation_3 = module_0.Validation(validation_2, none_type_0)
    var_1.is_fail()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_1.is_success()


def test_case_16():
    bytes_0 = b"G5\xacC;|!=\xb1\xc1\xf8\x08\xb5\x8dW?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, validation_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_lazy()
    var_4 = var_1.ap(none_type_0)
    var_5 = var_3.map(var_1)
    var_6 = validation_0.__eq__(validation_1)
    var_7 = var_2.to_box()
    var_6.bind(var_4)
