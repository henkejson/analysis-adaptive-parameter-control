# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\x0cf.!3Nx"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = "O~u!"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = module_1.object()
    var_3 = validation_0.to_either()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.__str__()


def test_case_4():
    str_0 = "\x0cf.!3Nx"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_1.to_lazy()


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.map(dict_0)


def test_case_6():
    set_0 = set()
    set_1 = set()
    list_0 = [set_1, set_1]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.bind(set_0)


def test_case_7():
    str_0 = "\x0cf.!3Nx"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_maybe()
    bool_0 = True
    validation_0.ap(bool_0)


def test_case_8():
    none_type_0 = None
    str_0 = '"V-$Ar"0y%:[XQu"'
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = var_0.__eq__(var_1)
    var_3 = var_2.__str__()
    validation_2 = module_0.Validation(var_3, var_1)
    validation_2.map(validation_2)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    str_0 = "5fF'H^B\r{Qx2Z$j&,$L"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    validation_0.bind(var_1)


def test_case_11():
    str_0 = "\x0c5&OS{Fo3U\rEZ"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(none_type_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.__eq__(str_0)
    var_3.is_fail()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    str_0 = '"V-$Ar"0y%:[XQu"'
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)


def test_case_14():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(none_type_0, str_0)
    none_type_1 = None
    var_0 = validation_0.__eq__(none_type_1)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = var_2.to_lazy()
    var_0.map(var_4)
