# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.map(none_type_0)


def test_case_2():
    bytes_0 = b"\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()


def test_case_3():
    bytes_0 = b"\xcf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    float_0 = 1851.0703571094884
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_maybe()


def test_case_6():
    float_0 = -6127.216252446757
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xdco\x07\x1b\x13\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_8():
    float_0 = -6116.00341040831
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(validation_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_10():
    float_0 = -1062.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    float_0 = -1090.0
    dict_0 = {float_0: float_0}
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(dict_0)


def test_case_13():
    int_0 = -2861
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    str_0 = " xCM]a"
    dict_0 = {}
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(dict_0)
    var_2 = validation_0.to_maybe()
    var_1.to_either()


def test_case_15():
    float_0 = 2160.63985
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    str_0 = " xCM ]\ra"
    dict_0 = {}
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_either()
    str_0.to_lazy()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_1.__str__()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_4 = var_1.bind(var_1)
    var_5 = var_4.__str__()
    validation_2 = module_0.Validation(var_3, var_3)
    var_6 = validation_2.__eq__(validation_1)
    validation_1.to_maybe()


def test_case_18():
    bytes_0 = b"\xdc\xd3c\x94M\x95\x1b\x13\xef["
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
