# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(none_type_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    str_0 = "[]E8+gz#dG<e"
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.is_fail()
    var_1.to_lazy()


def test_case_2():
    bool_0 = True
    set_0 = {bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(none_type_0)
    validation_0.map(validation_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    none_type_0 = None
    var_1.map(none_type_0)


def test_case_9():
    str_0 = "Pism"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = var_0.to_box()
    var_5 = var_4.to_lazy()
    var_3.to_maybe()


def test_case_10():
    int_0 = 4011
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0, dict_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_try()


def test_case_11():
    none_type_0 = None
    str_0 = "\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(none_type_0)
    var_1.is_success()


def test_case_12():
    str_0 = "}hrm"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(var_0)
    dict_0 = {}
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_2 = validation_1.to_lazy()
    var_3 = var_2.__eq__(validation_1)
    var_4 = validation_1.is_success()
    var_4.to_maybe()


def test_case_13():
    str_0 = "}hrm"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.map(str_0)


def test_case_14():
    str_0 = "}hrm"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(var_0)
    dict_0 = {}
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = var_2.__eq__(validation_1)
    var_4 = validation_1.is_success()
    var_4.to_maybe()
