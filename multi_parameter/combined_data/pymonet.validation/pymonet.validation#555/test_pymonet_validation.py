# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_0.to_either()
    none_type_0 = None
    var_2 = validation_0.is_fail()
    none_type_0.bind(var_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    int_0 = -3370
    bytes_0 = b"\xa7oD\xa2\x14s'\\I\xfc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.bind(int_0)


def test_case_5():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.map(validation_1)


def test_case_6():
    int_0 = 1124
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    validation_1.bind(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_0.map(bool_0)


def test_case_9():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = validation_0.to_lazy()
    var_0 = validation_0.__eq__(validation_0)
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_either()


def test_case_10():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_try()
    var_1 = validation_0.__eq__(var_0)
    var_1.map(var_1)


def test_case_11():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()


def test_case_12():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.__eq__(bytes_0)
    var_1.bind(bytes_0)


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_3 = validation_1.to_box()
    var_4 = validation_1.__eq__(validation_1)
    var_5 = validation_1.__eq__(var_3)
    bytes_0 = b"+.\x12\x841\x96\xd9\x98\x12;\xff\xe6\x18\xe3"
    var_6 = var_4.__eq__(bytes_0)
    var_5.to_either()


def test_case_14():
    bytes_0 = b"\xcc\xc4\xe8\x0el\x07\xbd\xceP\x1c)l\xaf\x96l"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = module_0.Validation(bytes_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_1.__eq__(validation_0)
    var_1.bind(var_1)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.to_either()
