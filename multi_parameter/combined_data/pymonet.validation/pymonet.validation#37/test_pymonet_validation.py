# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(none_type_1, set_0)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.to_box()


def test_case_1():
    str_0 = "\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    none_type_0 = None
    var_2 = var_0.__eq__(none_type_0)
    var_3 = validation_0.to_lazy()
    var_4 = var_3.to_try()
    var_4.bind(var_1)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_lazy()
    bool_1 = False
    validation_1 = module_0.Validation(bool_0, bool_1)
    var_1 = validation_1.__eq__(bool_1)
    set_0 = set()
    validation_2 = module_0.Validation(none_type_1, set_0)
    var_2 = validation_2.to_maybe()
    var_3 = var_2.__eq__(validation_0)
    var_4 = module_0.Validation(var_2, set_0)
    var_5 = var_4.to_either()
    validation_3 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    set_0 = {none_type_0}
    validation_1 = module_0.Validation(none_type_1, set_0)
    var_0 = validation_1.to_maybe()
    validation_2 = module_0.Validation(none_type_0, validation_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(tuple_0)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.bind(none_type_0)


def test_case_9():
    bool_0 = True
    bool_1 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_1, none_type_0)
    validation_0.ap(bool_0)


def test_case_10():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_0, bool_1)
    var_0 = validation_0.to_box()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    set_0 = {none_type_0}
    validation_1 = module_0.Validation(none_type_1, set_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_box()


def test_case_12():
    bytes_0 = b"\xc9WB\xe1"
    complex_0 = 2981.7 + 1220.1j
    list_0 = [bytes_0, complex_0, bytes_0, bytes_0]
    bool_0 = False
    tuple_0 = (bytes_0, complex_0, list_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_0.is_success()


def test_case_13():
    bool_0 = False
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, bool_1)
    var_0 = validation_0.__eq__(bool_1)
    set_0 = {var_0}
    validation_1 = module_0.Validation(var_0, set_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_0.__eq__(validation_1)
    var_2.to_either()


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_maybe()


def test_case_15():
    bool_0 = True
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(bool_0)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_1 = validation_1.__eq__(bool_0)
    set_0 = set()
    validation_2 = module_0.Validation(none_type_0, set_0)
    var_2 = validation_2.to_maybe()
    var_3 = var_2.__eq__(validation_0)
    var_1.to_either()
