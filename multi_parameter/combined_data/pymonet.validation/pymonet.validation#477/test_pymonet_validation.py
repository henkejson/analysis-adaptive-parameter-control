# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_1():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1}
    float_0 = 1651.636
    dict_0 = {float_0: float_0}
    tuple_0 = (dict_0,)
    validation_0 = module_0.Validation(set_0, tuple_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_try()


def test_case_2():
    str_0 = "_J^G9sc[iw\tQPzxSU"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.to_either()


def test_case_3():
    str_0 = "WB)sF/MxKk2dyH@'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    dict_0 = {str_0: str_0}
    validation_0.bind(dict_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    bytes_0 = b")\x10\xcaA\x93\xf3\x98q\xf3\xf4\\"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    int_0 = 1164
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.map(none_type_0)


def test_case_7():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1}
    float_0 = 1651.636
    dict_0 = {float_0: float_0}
    tuple_0 = (dict_0,)
    validation_0 = module_0.Validation(set_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(bool_0)
    var_2 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, var_1)
    var_3 = var_0.to_box()
    var_4 = var_3.to_either()
    validation_1.ap(tuple_0)


def test_case_8():
    str_0 = "|\t*\\M^Kr@O\t2U*k>loqk"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__str__()
    var_4 = var_1.__str__()
    var_1.map(str_0)


def test_case_9():
    bytes_0 = b"}\xd0\x97\x14"
    bool_0 = True
    int_0 = 2795
    validation_0 = module_0.Validation(int_0, int_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_0.map(bytes_0)


def test_case_10():
    int_0 = -1224
    list_0 = [int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_11():
    str_0 = "zrN%fj"
    set_0 = {str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(none_type_0)


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.to_box()
    var_3 = validation_0.is_success()
    var_1.to_try()


def test_case_13():
    bytes_0 = b"YH\x0e23\xef"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(dict_0)
    var_2 = var_1.to_either()
    var_3 = var_2.ap(bytes_0)
    var_4 = var_3.ap(bytes_0)
    var_5 = var_4.to_try()
    var_6 = var_5.map(bytes_0)
    var_7 = var_6.bind(bytes_0)
    var_8 = validation_0.to_either()
    list_0 = []
    validation_1 = module_0.Validation(list_0, list_0)
    var_9 = var_5.bind(dict_0)
    var_10 = validation_1.to_maybe()
    var_11 = var_10.to_either()
    var_12 = var_11.to_box()
    var_12.is_success()
