# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 87
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    validation_0.to_either()


def test_case_1():
    tuple_0 = ()
    str_0 = "(0,'^@H*.cl"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_1.bind(tuple_0)


def test_case_2():
    int_0 = 435
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_4():
    int_0 = 87
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = module_0.Validation(var_0, validation_0)
    var_1.is_fail()


def test_case_5():
    str_0 = "M}A\\T0&XGp)o4"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(str_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_7():
    none_type_0 = None
    int_0 = -907
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(int_0)


def test_case_8():
    bytes_0 = b"\xc4\x87f\x0e\xeb\xec\xd8\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    int_0 = -232
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_12():
    tuple_0 = ()
    str_0 = "(0,'^@H*.cl"
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_1)
    float_0 = -3361.3
    validation_1.map(float_0)


def test_case_13():
    str_0 = "\n        Transform Either to Box.\n\n        :returns: Box monad with previous value\n        :rtype: Box[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_0.to_either()
    var_0.is_fail()


def test_case_14():
    int_0 = 87
    validation_0 = module_0.Validation(int_0, int_0)
    str_0 = "(=0,'^@H*.cl"
    none_type_0 = None
    validation_1 = module_0.Validation(str_0, validation_0)
    bool_0 = False
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_2.__eq__(validation_2)
    var_0.map(none_type_0)


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.__str__()
    var_3 = var_1.to_try()
    validation_1 = module_0.Validation(tuple_0, var_2)


def test_case_16():
    int_0 = 1210
    set_0 = {int_0, int_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_either()
    none_type_1 = None
    validation_1 = module_0.Validation(set_0, int_0)
    var_1 = validation_1.to_box()
    var_1.bind(none_type_1)


def test_case_17():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.__str__()
    var_0.to_maybe()
