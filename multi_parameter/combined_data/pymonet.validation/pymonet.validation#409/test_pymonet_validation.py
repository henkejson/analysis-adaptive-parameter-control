# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 3598
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_1():
    bool_0 = False
    bytes_0 = b"U@\xe5\x13\x8b+\x08-"
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(bytes_0)
    var_1.to_box()


def test_case_2():
    set_0 = set()
    bytes_0 = b"\xd1-\xc3\xfb|\xf6\x84\x0bt\x9e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.ap(set_0)


def test_case_3():
    bool_0 = True
    bytes_0 = b""
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_1 = validation_0.to_maybe()
    var_1 = validation_1.__eq__(bool_0)
    var_1.is_fail()


def test_case_4():
    str_0 = "w"
    list_0 = [str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_either()


def test_case_7():
    float_0 = 948.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_8():
    float_0 = 948.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_9():
    str_0 = "\\qC\tvF("
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_10():
    float_0 = -133.9
    set_0 = {float_0, float_0, float_0, float_0}
    tuple_0 = (float_0, set_0)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.ap(float_0)


def test_case_11():
    int_0 = -1123
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(int_0, int_0)


def test_case_12():
    float_0 = 3993.738399805995
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_fail()


def test_case_13():
    none_type_0 = None
    float_0 = -1025.323
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.ap(none_type_0)


def test_case_14():
    float_0 = 945.8556405758363
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_15():
    bool_0 = False
    bytes_0 = b"U@\xe5\x13\x8b+\x08-"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_1.is_fail()


def test_case_16():
    bool_0 = False
    bytes_0 = b"U@\xe5\x13\x8b+\x08-"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_try()
    dict_0 = {}
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.to_try()


def test_case_17():
    bool_0 = True
    bool_1 = False
    bytes_0 = b""
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(bool_1, bool_1)
    var_2 = validation_1.__eq__(bool_0)
    var_2.is_fail()
