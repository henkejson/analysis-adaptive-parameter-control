# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"w\xfa\xfd\xc3\x9b\x87\xd7Y\"\x9b\xe8\xf3\x9enT\x01'"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.is_success()


def test_case_1():
    bool_0 = True
    bytes_0 = b""
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = var_2.to_try()
    var_3.is_fail()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_4():
    bytes_0 = b"\xa2ggW\x82\x00w\xc6B\x8e\x03"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    float_0 = -357.5
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_6():
    str_0 = "hK"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(tuple_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_9():
    str_0 = "']i V"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_1.bind(var_1)
    var_3 = var_2.to_try()
    validation_1.ap(var_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    bytes_0 = b"\xc5\xdf\xb6\xc9\\]l\xce\xe6\xc1\x10\t<N\xcd\x08\xbf"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_12():
    str_0 = "']i V"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_0.bind(var_0)


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_1.to_try()
