# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_1():
    float_0 = -201.6
    set_0 = {float_0, float_0}
    list_0 = [set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    bytes_0 = b"x\xe9\x1ft\xea\x1f4\xbd}W\xde1\xb9"
    int_0 = -1890
    validation_0 = module_0.Validation(int_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.map(bytes_0)


def test_case_3():
    bytes_0 = b"n\xa6\x90\xdfQ\xb3i\xf8\x995"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bytes_0 = b"n\xa6\x90\xdfQ\xb3i\xf8\x995"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()


def test_case_5():
    bytes_0 = b"\x16C9\x1e"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    bool_0 = False
    var_0 = module_0.Validation(bool_0, bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.to_box()


def test_case_11():
    bytes_0 = b"\xc01r"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_2.bind(bytes_0)


def test_case_12():
    bytes_0 = b"\xc01r"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = module_0.Validation(validation_0, validation_0)
    var_2 = var_1.__eq__(validation_0)
    var_2.bind(bytes_0)


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    var_3 = var_1.to_try()


def test_case_14():
    str_0 = "4Rvc"
    bytes_0 = b""
    float_0 = 2104.91
    tuple_0 = (str_0, str_0, bytes_0, float_0)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_15():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(tuple_0)
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_2.__str__()
    var_4 = var_2.__str__()
    var_3.bind(tuple_0)
