# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xe9\x94g\xd3\x123\xdf\x90"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_lazy()


def test_case_1():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_0.bind(none_type_0)


def test_case_2():
    bytes_0 = b"!\xff\x90\xfd\x01\x00\xe5\xf1\xc8\x98isC\xc3\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_0.__str__()
    var_2 = validation_1.to_either()
    var_3 = validation_1.to_maybe()
    var_4 = var_3.to_lazy()
    var_0.is_success()


def test_case_3():
    bytes_0 = b"!\xff\x90\xfd\x01\xe5\xf1\xc8\x98isC\xc3\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    validation_1.map(var_0)


def test_case_4():
    bytes_0 = b";"
    str_0 = "Box[value={}]"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(list_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    validation_0.bind(validation_1)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_10():
    bytes_0 = b""
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_box()
    validation_0.map(bytes_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_12():
    bytes_0 = b"\xe9\x94g\xd3\x123\xdf\x90"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_13():
    bytes_0 = b"!\xff\x90\xfd\x01\x00\xe5\xf1\xc8\x98isC\xc3\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = var_1.__str__()
    var_3 = var_1.to_try()
    var_4 = validation_1.__eq__(validation_0)
    var_5 = validation_0.__eq__(var_1)
    var_6 = var_0.__eq__(var_5)
    validation_1.map(var_5)


def test_case_14():
    bytes_0 = b"!\xff\x90\xfd\x01\x00\xe5\xf1\xc8\x98isC\xc3\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_2 = validation_1.to_either()
    var_3 = validation_0.__str__()
    tuple_0 = (var_3, var_1)
    validation_2 = module_0.Validation(var_2, tuple_0)
    var_4 = validation_0.to_try()
    var_5 = validation_0.__eq__(validation_2)
    var_6 = var_1.__eq__(validation_1)
    var_7 = var_3.__eq__(var_2)
    var_0.to_either()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_1.to_either()
    var_2 = validation_1.to_maybe()
    var_3 = var_1.__str__()
    validation_2 = module_0.Validation(bytes_0, var_1)
    var_4 = var_1.to_try()
    var_5 = validation_1.__eq__(validation_0)
    var_6 = validation_2.to_lazy()
    var_7 = var_0.__eq__(var_6)
    validation_1.map(var_6)
