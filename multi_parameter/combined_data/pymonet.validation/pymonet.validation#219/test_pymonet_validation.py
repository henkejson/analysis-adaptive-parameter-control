# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "s2_gl"
    list_0 = [str_0, str_0, str_0]
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(list_0)
    var_0.to_either()


def test_case_1():
    int_0 = 0
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.__str__()
    var_1.to_maybe()


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_3():
    bool_0 = False
    bool_0.is_fail()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()


def test_case_6():
    float_0 = 1263.96
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    validation_0 = module_0.Validation(dict_0, bool_1)
    validation_0.map(bool_0)


def test_case_8():
    bool_0 = False
    list_0 = [bool_0]
    int_0 = -3986
    validation_0 = module_0.Validation(list_0, int_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.bind(validation_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\x1f\xa5\xc9U"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_10():
    int_0 = 680
    validation_0 = module_0.Validation(int_0, int_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_1.is_fail()


def test_case_11():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(set_0)
    var_1.to_lazy()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    int_0 = 0
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_fail()
    var_1.is_fail()


def test_case_14():
    str_0 = "zF6J/&YlcQo @g?z"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    bytes_0 = b"\xbaW\x10"
    var_2 = var_1.ap(bytes_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_1.__str__()
    var_4.ap(none_type_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    set_0.to_try()


def test_case_16():
    int_0 = -1856
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_lazy()
    bool_0 = True
    var_2 = var_1.to_try()
    var_2.bind(bool_0)


def test_case_17():
    int_0 = 0
    tuple_0 = (int_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.to_either()
    var_2 = validation_1.__eq__(validation_0)
    validation_1.bind(none_type_0)
