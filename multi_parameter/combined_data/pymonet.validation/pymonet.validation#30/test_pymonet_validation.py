# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.ap(var_0)


def test_case_2():
    str_0 = "G3Z"
    validation_0 = module_0.Validation(str_0, str_0)
    int_0 = -22
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(int_0, var_1)
    var_2 = validation_0.__str__()
    validation_1.__str__()


def test_case_3():
    str_0 = "8^6'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    object_0 = module_1.object()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    str_0 = "n_UZXa'Glo"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "T(vY)I6;T[|2xTFKB,6F"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(var_2)
    validation_0.map(var_1)


def test_case_7():
    str_0 = "T(vY)I6;T[|2xFKB,6F"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    validation_0.bind(var_1)


def test_case_8():
    float_0 = -562.8
    object_0 = module_1.object()
    bool_0 = False
    validation_0 = module_0.Validation(object_0, bool_0)
    validation_0.ap(float_0)


def test_case_9():
    bytes_0 = b"\x07q\xa8\x14\xe9fj\x87'\x91\xfe\xa8\xae\xd2o"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_box()
    var_1.ap(bytes_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    str_0 = "8wZVid'(cY/@5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()


def test_case_12():
    str_0 = "T(vY)I6;T[|2xFKB,6F"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = var_0.map(var_1)
    var_3 = var_2.map(var_0)


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_14():
    bool_0 = True
    int_0 = 9
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    int_1 = 1
    validation_2 = module_0.Validation(bool_0, int_1)
    var_0 = validation_2.__eq__(validation_1)
    var_1 = validation_1.to_lazy()


def test_case_15():
    str_0 = "'\"\tlITM"
    tuple_0 = ()
    tuple_1 = (tuple_0, tuple_0)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.to_either()
    var_0.bind(str_0)


def test_case_16():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()
