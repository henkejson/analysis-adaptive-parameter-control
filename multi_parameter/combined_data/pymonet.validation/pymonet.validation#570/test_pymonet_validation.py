# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.is_fail()


def test_case_2():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(var_1)
    var_2.to_maybe()


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(var_0, validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_box()


def test_case_4():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    object_0 = module_1.object()
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_lazy()
    var_0.to_try()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    int_0 = -173
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_7():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()


def test_case_8():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__str__()
    var_3 = validation_0.to_maybe()
    validation_0.map(var_3)


def test_case_9():
    bytes_0 = b"V\xf81H\x10\xc3\xebw\xe1"
    str_0 = "0|oo"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bytes_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_12():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    validation_1 = module_0.Validation(var_2, none_type_0)
    validation_1.is_fail()


def test_case_13():
    str_0 = "+mKK>OTVi"
    list_0 = []
    object_0 = module_1.object()
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()


def test_case_14():
    list_0 = []
    object_0 = module_1.object()
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.to_box()


def test_case_15():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = validation_0.__eq__(var_2)
    var_5 = var_3.to_maybe()
    var_2.to_maybe()
