# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.bind(none_type_0)


def test_case_1():
    bytes_0 = b"\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_0.__str__()
    validation_1.bind(var_1)


def test_case_2():
    bytes_0 = b"\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_try()
    var_1.to_either()


def test_case_3():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.to_try()
    var_3 = var_0.to_lazy()
    var_4 = validation_0.to_maybe()
    var_5 = validation_0.__str__()
    var_4.bind(var_3)


def test_case_4():
    bytes_0 = b"\xfa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_5():
    object_0 = module_1.object()
    object_0.bind(object_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.is_fail()


def test_case_9():
    str_0 = "[7X^7})zb:^\rN/[TA"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(str_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_11():
    bytes_0 = b"\xbd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(bytes_0)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()


def test_case_13():
    none_type_0 = None
    bytes_0 = b""
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    list_0 = []
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(bool_0)
    var_3 = validation_0.to_lazy()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_maybe()
    var_4 = var_1.to_either()
    var_5 = var_1.to_try()
    var_5.to_lazy()


def test_case_15():
    bytes_0 = b"\xfa"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_1.bind(validation_1)


def test_case_16():
    bytes_0 = b"\xbd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()
