# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(bool_0)
    var_2 = var_0.__str__()
    var_0.ap(validation_0)


def test_case_1():
    int_0 = 530
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    int_0.is_success()


def test_case_2():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.is_fail()


def test_case_3():
    bytes_0 = b"7H\xef\xe1\x90\xa1C} !\xe7i\xa1@w\xd0>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_4():
    bytes_0 = b"\x1c\x85\xd5.\xa7\xd8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(bytes_0)
    var_4 = var_3.__eq__(bytes_0)
    var_4.to_either()


def test_case_5():
    none_type_0 = None
    none_type_0.is_fail()


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_7():
    none_type_0 = None
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_try()


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(var_0)


def test_case_10():
    str_0 = "\n    Map is a Semigroup that will always return contated all values inside Map value\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_11():
    int_0 = 530
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(var_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_13():
    none_type_0 = None
    set_0 = {none_type_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_lazy()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_either()
    validation_0.ap(validation_0)


def test_case_16():
    int_0 = -1563
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(int_0)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_2 = validation_0.is_success()
    var_3 = validation_1.to_lazy()
    var_4 = validation_0.__str__()


def test_case_18():
    bytes_0 = b">"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.is_fail()
    bool_0 = True
    none_type_1 = None
    validation_2 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_1.__eq__(validation_2)
    validation_2.ap(none_type_1)
