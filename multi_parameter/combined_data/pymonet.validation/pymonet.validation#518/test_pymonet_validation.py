# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -1457.2071 + 1519.1889j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(complex_0)
    var_0.is_fail()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_maybe()
    var_3 = validation_0.__str__()
    var_4 = var_3.__str__()
    var_3.to_lazy()


def test_case_2():
    int_0 = 1427
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    bytes_0 = b"t\xf7"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.__str__()


def test_case_3():
    bytes_0 = b"\x92\xb0("
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    float_0 = 2212.0975
    set_0 = {float_0, float_0, float_0, float_0}
    str_0 = "(?0c"
    bytes_0 = b"!\xa1\xd1\xfe*\x9b\xae\xb4\xa6\xccO\xf6\xf2"
    bool_0 = False
    tuple_0 = (str_0, float_0, bytes_0, bool_0)
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(tuple_0)
    validation_0.map(validation_0)


def test_case_8():
    int_0 = 3641
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b")b\xa17-i\xb9"
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    none_type_1 = None
    var_1 = var_0.to_box()
    var_2 = validation_0.__eq__(none_type_0)
    validation_0.ap(none_type_1)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_success()


def test_case_11():
    bytes_0 = b"\xf9\x84Z\xbb\xc1\xbc\xb20\x99"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = validation_0.to_try()
    var_1.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(none_type_0)


def test_case_14():
    bytes_0 = b"\x92\xb0("
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()


def test_case_15():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_box()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = var_2.__eq__(var_1)
    var_0.to_either()
