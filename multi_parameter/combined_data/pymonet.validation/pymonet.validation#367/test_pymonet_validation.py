# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    str_0 = "Sum"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_3():
    bytes_0 = b"#\x1b\x9dx\x92I\xd9\x06N\xcb\xc3\xa2\xda\xc8k"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    float_0 = 1927.0
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(validation_0)


def test_case_7():
    bytes_0 = b"\xd9s"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_0.bind(var_0)


def test_case_8():
    bytes_0 = b"Sc\x9f\xaf\xe3V\x82b3\xb4\xf2\xdfZ\x8a"
    bytes_1 = b"On\xdf"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.ap(bytes_0)


def test_case_9():
    bool_0 = True
    bytes_0 = b"!\xea"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.__eq__(bool_0)
    var_2.to_maybe()


def test_case_10():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__str__()
    var_2.is_fail()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.ap(none_type_0)


def test_case_12():
    float_0 = -2294.7
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_13():
    str_0 = "n%P\x0bE}i"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    validation_0.map(str_0)


def test_case_14():
    bytes_0 = b"!\xea"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.to_try()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_1.__eq__(var_2)
    var_3.bind(var_2)


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.to_box()
    validation_0.bind(var_0)


def test_case_17():
    bool_0 = False
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()
