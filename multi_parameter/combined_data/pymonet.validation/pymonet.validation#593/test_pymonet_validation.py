# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_box()
    bool_1 = True
    validation_1 = module_0.Validation(bool_1, bool_1)
    var_1 = validation_0.__eq__(bool_0)
    validation_1.__str__()


def test_case_1():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    str_0 = "\n    First is a Monoid that will always return the first, value when 2 First instances are combined.\n    "
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_box()
    var_2.map(str_0)


def test_case_2():
    bytes_0 = b"l\xd2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_1.to_try()


def test_case_3():
    str_0 = "^{7L+/}_Da=3"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.__str__()


def test_case_4():
    bool_0 = False
    bool_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    float_0 = -808.4
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_10():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_0.__str__()
    var_3.is_fail()


def test_case_11():
    str_0 = "i%+==Uh^"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_0.to_try()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    none_type_0 = None
    var_1 = validation_0.to_lazy()
    validation_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_box()
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, bool_1)
    var_1 = validation_0.__eq__(validation_1)
    validation_1.__str__()


def test_case_14():
    bytes_0 = b"l\xd2"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_success()
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_4 = var_1.__eq__(bytes_0)
    validation_1.to_either()


def test_case_15():
    list_0 = []
    object_0 = module_1.object(*list_0)
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_box()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    str_0 = "\n    First is a Monoid that will always return the first, value when 2 First instances are combined.\n    "
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_box()
    var_2.map(str_0)
