# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "2- "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_success()
    var_4 = validation_0.is_success()
    validation_1 = module_0.Validation(var_0, validation_0)
    validation_1.to_try()


def test_case_1():
    str_0 = "2- "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.is_fail()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_4():
    str_0 = "H}/5_Tn7_IMX0Rca\n]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.is_success()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    int_0 = -1466
    bytes_0 = b"\xff\xaaA\xa5\xb0t\x1d\xdbY\xc3\xce\xb8\x9bx\xbd\xc0\x1c8"
    validation_1 = module_0.Validation(int_0, bytes_0)
    validation_1.map(int_0)


def test_case_6():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_8():
    float_0 = -509.59732
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.to_try()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_10():
    int_0 = 2297
    int_1 = 0
    validation_0 = module_0.Validation(int_1, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(int_1)


def test_case_11():
    int_0 = -1679
    tuple_0 = (int_0, int_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_0.ap(var_1)
    var_0.is_fail()


def test_case_12():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_1.to_lazy()


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_success()
    var_4 = validation_0.to_maybe()
    var_5 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_6 = module_0.Validation(var_0, validation_0)
    none_type_0 = None
    var_6.map(none_type_0)


def test_case_14():
    str_0 = "2- "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, var_0)
    validation_2 = module_0.Validation(validation_1, validation_1)
    var_2 = validation_1.__eq__(validation_2)
    var_3 = validation_0.is_success()
    validation_1.to_try()
