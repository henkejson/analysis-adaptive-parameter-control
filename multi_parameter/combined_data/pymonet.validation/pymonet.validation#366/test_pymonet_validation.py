# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    str_0 = "N@zL)|f$[fbfFh6&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    none_type_0 = None
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(none_type_0)


def test_case_2():
    str_0 = "NPzL)|f$ffFh6&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    bytes_0.is_fail()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = var_0.__str__()


def test_case_6():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    validation_0.map(var_2)


def test_case_7():
    int_0 = 101
    tuple_0 = (int_0,)
    str_0 = "FPd \x0b[qoI@"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(tuple_0)


def test_case_8():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__str__()
    validation_0.ap(var_3)


def test_case_9():
    none_type_0 = None
    complex_0 = -459 + 285.574041j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.bind(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = ""
    validation_1 = module_0.Validation(bool_0, str_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.__eq__(bool_0)


def test_case_11():
    bytes_0 = b"D\xac\x0e\xd2\xf8\x8c\xc3\xb6\xfa\xad\x9e\xfa\xa6\xf1\xd2'?-\xcb\x9e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.is_fail()


def test_case_12():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = var_1.__str__()
    var_4 = validation_0.to_try()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = ""
    validation_1 = module_0.Validation(bool_0, str_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.__eq__(validation_0)
    var_1.to_maybe()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_15():
    bytes_0 = b"\x1b\xe9\xd3\xde\x9f\xe6\xf5 \x1c\xadt\xe5_o\xc6\x92\xbb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_3 = var_1.__str__()


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_lazy()


def test_case_17():
    int_0 = 511
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_1.to_maybe()
