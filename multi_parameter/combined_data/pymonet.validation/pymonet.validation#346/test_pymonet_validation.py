# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 1472.02
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.is_fail()


def test_case_1():
    str_0 = "5PZ\x0c529N:h"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = var_0.to_lazy()
    validation_0.bind(tuple_0)


def test_case_2():
    list_0 = []
    bool_0 = True
    float_0 = -1026.68
    dict_0 = {float_0: bool_0}
    set_0 = {bool_0}
    tuple_0 = (bool_0, dict_0, set_0, float_0)
    int_0 = 3001
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_1, dict_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(tuple_0)
    var_2 = var_1.map(list_0)
    str_0 = "%YyQkh*${"
    validation_1 = module_0.Validation(str_0, str_0)
    var_3 = validation_1.to_box()
    var_4 = validation_1.to_box()
    var_5 = validation_1.to_lazy()
    var_3.bind(str_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    float_0 = -1005.1838
    set_0 = {float_0, float_0}
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.__str__()
    validation_0.map(validation_0)


def test_case_5():
    str_0 = "JJTJbp6"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    validation_1.bind(validation_1)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_7():
    float_0 = -1005.1838
    set_0 = {float_0, float_0}
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = validation_1.to_box()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_9():
    int_0 = -947
    bool_0 = False
    bytes_0 = b"\xbd\x12E\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(bool_0)
    var_2.map(int_0)


def test_case_10():
    str_0 = "5PZ\x0c529N:h"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = (str_0,)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    tuple_1 = validation_1.__str__()
    var_0 = validation_1.is_fail()
    validation_2 = validation_0.to_lazy()
    var_1 = validation_2.to_box()
    var_2 = validation_2.__eq__(tuple_1)
    var_0.to_lazy()


def test_case_11():
    str_0 = "5PZ\x0c][29N:h"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    tuple_1 = (tuple_0,)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_1.__eq__(tuple_1)
    var_1.is_fail()


def test_case_12():
    str_0 = "5PZ\x0c529N:h"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = (str_0,)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_0.bind(var_0)


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    tuple_0 = ()
    list_0 = [tuple_0]
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_15():
    set_0 = set()
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_either()
