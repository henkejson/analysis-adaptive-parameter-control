# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_either()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.ap(dict_0)


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_4():
    bool_0 = False
    bytes_0 = b"\x91\ns<\x9a\x8a\xc5R\x83"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bytes_1 = b"\xff\xab\xf3\x94X"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.ap(list_0)
    var_4 = var_3.bind(bool_0)
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_5 = validation_1.__eq__(validation_1)
    var_6 = validation_1.__eq__(var_5)
    var_7 = validation_1.to_either()
    var_8 = validation_1.is_fail()
    var_9 = var_8.__eq__(var_8)
    var_8.to_box()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = True
    validation_0.map(bool_0)


def test_case_6():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(bool_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_box()
    var_2 = var_1.to_maybe()
    var_3 = validation_0.to_box()


def test_case_9():
    bytes_0 = b"\x8f\x93\xf7\x84"
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(list_0)
    var_2 = var_1.__str__()
    var_3 = var_2.__eq__(bytes_0)
    var_3.to_either()


def test_case_10():
    bool_0 = True
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    var_2 = var_1.to_try()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_3 = validation_1.to_maybe()
    var_4 = validation_1.is_fail()
    var_4.ap(bool_0)


def test_case_11():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.to_either()
    var_4 = var_3.to_lazy()
    var_5 = var_4.__eq__(var_4)
    var_1.to_maybe()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_1, var_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(var_1)
    var_4 = validation_0.is_fail()
    object_0 = module_1.object()
    var_5 = validation_0.to_box()
    var_4.to_maybe()


def test_case_13():
    int_0 = 1
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.__str__()
    var_4 = validation_0.to_lazy()
    var_5 = var_4.to_either()
    validation_1 = module_0.Validation(var_1, var_3)
    var_6 = var_4.bind(int_0)
    var_7 = validation_1.to_lazy()
    var_5.ap(int_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_1 = module_0.Validation(var_0, validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(var_1)
    var_4 = validation_0.is_fail()
    var_5 = var_4.__eq__(var_4)
    module_1.object(**var_4)


def test_case_15():
    bool_0 = False
    bytes_0 = b"\x91\ns<\x9a\x8a\xc5R\x83"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.__str__()
    list_0 = [bytes_0, bytes_0, bytes_0]
    bytes_1 = b"\xff\xab\xf3\x94X"
    validation_1 = module_0.Validation(bytes_1, bytes_1)
    var_1 = validation_1.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(list_0)
    var_5 = var_4.bind(bool_0)
    var_6 = var_5.__str__()
    set_0 = set()
    validation_2 = module_0.Validation(set_0, set_0)
    var_7 = validation_2.__eq__(validation_2)
    var_8 = validation_2.__eq__(var_7)
    var_9 = validation_2.to_either()
    var_10 = validation_2.is_fail()
    var_11 = var_10.__eq__(var_10)
    var_10.to_box()
