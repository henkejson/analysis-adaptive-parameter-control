# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_try()


def test_case_1():
    str_0 = "P>}}aHFMe/_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = validation_0.__str__()


def test_case_2():
    float_0 = 780.699315
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(float_0)


def test_case_3():
    int_0 = -1985
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    float_0 = 486.9
    list_0 = [float_0]
    validation_0 = module_0.Validation(list_0, float_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = True
    float_0 = -1424.76
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(bool_0)


def test_case_6():
    float_0 = 1940.44474
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.bind(float_0)


def test_case_7():
    bytes_0 = b"\t\xce\x86\xa3dD>\xf9\xde#\xfd\x00v\n`\xf7\xb2\x8a"
    str_0 = "?AnGnAV6?y-t"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(bytes_0)


def test_case_8():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_10():
    bytes_0 = b"\xa3\xad\xaa\x1f\xec\x15\xf3B]\x9c:X"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    float_0 = -1567.055042
    int_0 = 0
    validation_1 = module_0.Validation(int_0, float_0)
    var_2 = validation_1.to_box()
    var_2.bind(float_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\x13J\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_0.ap(none_type_0)


def test_case_12():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = module_0.Validation(dict_0, var_0)
    var_2 = validation_0.__str__()
    validation_1.to_either()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(dict_0)
    var_1.to_lazy()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_15():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    str_0 = "~>}}aHFDMe/"
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_1.__eq__(validation_0)
    var_3 = var_2.__str__()
    var_2.to_maybe()
