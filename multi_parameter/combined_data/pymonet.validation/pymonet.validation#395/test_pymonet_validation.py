# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 361.36
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(float_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.map(list_0)


def test_case_2():
    bytes_0 = b"~\x196\xf9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_3():
    str_0 = "pLU+_F\x0b<+ub4.Gc"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_6():
    str_0 = ".N\tbqg<wHL*IK*"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    bytes_0 = b"!J\xb0\xaet>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_8():
    int_0 = 1599
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(int_0)


def test_case_9():
    complex_0 = -463.7989930515876 - 562j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.ap(validation_0)


def test_case_10():
    int_0 = -1761
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bytes_0 = b"\x0b\x99\xfd\xa0[\xbd\tQ\x8e\x7f\xa09~5\x17"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    int_0 = -1364
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    tuple_0 = ()
    bool_0 = False
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.bind(bool_0)


def test_case_15():
    bytes_0 = b"\x0b\x99\xfdg\xa0[\xbd\tQ\x8e\x7f\xa0\x7f9~5\x17"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_16():
    str_0 = "[(yMsqo"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, validation_0)
    validation_2 = module_0.Validation(var_2, var_2)
    var_3 = var_2.to_either()
    var_4 = validation_1.__eq__(validation_2)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_1.to_maybe()
