# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\xe7_\x12\xeb\x10\x95\xe9\xa7"
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.__str__()


def test_case_1():
    bytes_0 = b"\xda\x0c\xb8\xbf@\x14\xf7\xb7\xf3\xd8\xe4"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_0.to_maybe()
    var_1.to_lazy()


def test_case_2():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0]
    bytes_0 = b"\x01\x1e\x1c\xaf\xe2\x12\x15\x82\xdb\xc8\x05\xb2\xa3a\xa3\xa42\xb0@\xa1"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_0.bind(list_0)


def test_case_5():
    float_0 = -2431.3868
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.map(float_0)


def test_case_6():
    object_0 = module_1.object()
    bytes_0 = b"\xda\x0c\xb8\xbf@\x14\xf7\xb7\xf3\xd8\xe4"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    validation_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_9():
    object_0 = module_1.object()
    bytes_0 = b"\xda\x0c\xb8\xbf@\x14\xf7\xb7\xf3\xd8\xe4"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(set_0, var_0)
    var_1 = validation_1.__eq__(object_0)


def test_case_10():
    bytes_0 = b"\xd4\tL\xf2"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    int_0 = -1469
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    validation_0.is_success()


def test_case_12():
    object_0 = module_1.object()
    bytes_0 = b"\xda\x0c\xb8\xbf@\x14\xf7\xb7\xf3\xd8\xe4"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    none_type_0 = None
    var_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(object_0, none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_0.__str__()


def test_case_13():
    object_0 = module_1.object()
    bytes_0 = b"\xda\x0c\xb8\xbf@\x14\xf7\xb7\xf3\xd8\xe4"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_14():
    int_0 = -1249
    list_0 = [int_0, int_0]
    validation_0 = module_0.Validation(list_0, int_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_0.to_try()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_0.to_maybe()
    module_1.object(**var_0)
