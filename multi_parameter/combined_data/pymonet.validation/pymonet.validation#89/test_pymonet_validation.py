# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_either()


def test_case_1():
    str_0 = "%,H*O9c\x0bc;p3\t4D"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(validation_0)
    var_2.is_fail()


def test_case_2():
    int_0 = 194
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_1.__str__()
    var_3 = var_2.__str__()
    var_4 = var_1.to_maybe()
    var_5 = validation_0.to_box()
    var_3.map(int_0)


def test_case_3():
    str_0 = '\nhJeAeAprKA|"J'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    str_0 = "4|*65#~Nb/x2"
    set_0 = {str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_6():
    str_0 = "%,H*O9c\x0bc;p3\t4D"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, str_0)
    var_1 = validation_1.to_box()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_0.is_fail()
    var_4 = validation_1.to_lazy()
    validation_1.bind(var_2)


def test_case_7():
    str_0 = '.WN]H"}nQES'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__str__()
    validation_1.map(var_0)


def test_case_8():
    dict_0 = {}
    dict_1 = {}
    validation_0 = module_0.Validation(dict_1, dict_1)
    validation_0.ap(dict_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    str_0 = '.WN]H"}nQES'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.to_either()
    validation_1.map(var_2)


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    var_2.is_success()


def test_case_12():
    str_0 = '.WN]H"}nQES'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    bytes_0 = b"\xba\xea\x04?\xeb;\xca\x8dQ;"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = var_1.__eq__(var_0)
    var_3 = validation_0.__eq__(validation_1)
    var_4 = var_0.bind(var_0)
    var_2.to_lazy()


def test_case_14():
    bytes_0 = b""
    int_0 = 1981
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    validation_0.ap(int_0)
