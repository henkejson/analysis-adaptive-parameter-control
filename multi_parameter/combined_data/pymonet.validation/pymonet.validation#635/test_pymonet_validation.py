# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.to_lazy()


def test_case_1():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_2 = var_1.__str__()
    float_0 = -1404.88
    validation_1 = module_0.Validation(float_0, float_0)
    var_0.to_box()


def test_case_3():
    str_0 = "rI4v-vRyX3@jB"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    none_type_1 = None
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(none_type_1)
    var_1.to_lazy()


def test_case_4():
    str_0 = "o7qc \\"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_success()
    set_0.is_success()


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(none_type_0)
    float_0 = -3326.544
    validation_2 = module_0.Validation(none_type_0, float_0)
    validation_2.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = "IMaL"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(none_type_0)
    float_0 = -3326.544
    validation_0.ap(float_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\xe7\xff\xc5\xf7\xda\xe4"
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, bytes_0)


def test_case_12():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.ap(bool_0)


def test_case_14():
    float_0 = 852.723101
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(list_0, float_0)
    bytes_0 = b"\x1e\xa0\x02\xf0\xc8\xa8J\xc0L"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__str__()
    validation_1.bind(bytes_0)


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    str_0 = "cbDxaV`jeC"
    validation_1 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.is_success()
    validation_2 = validation_0.to_maybe()
    validation_3 = module_0.Validation(tuple_0, none_type_0)
    var_1 = validation_3.__eq__(var_0)


def test_case_16():
    int_0 = -1718
    bytes_0 = b"}`mZ4\x9a\x06m\x81#\xd6\x1e"
    str_0 = '"N\n-1/9bkFr2hM2&]&'
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.__eq__(int_0)
    var_2.ap(var_2)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    str_0 = "cbDxaV`jeC"
    validation_1 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_2.__str__()
    var_1 = var_0.__eq__(tuple_0)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.is_fail()
    var_4 = validation_1.__eq__(validation_0)
    bool_0 = True
    var_3.ap(bool_0)


def test_case_18():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(validation_0)
    var_3 = var_1.to_try()
    var_2.ap(validation_0)
