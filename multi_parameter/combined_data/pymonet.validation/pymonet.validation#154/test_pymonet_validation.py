# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    str_0 = "\\1QR)?1"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.to_box()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    bool_0 = False
    bool_1 = True
    dict_0 = {var_0: var_0, bool_0: bool_0, bool_1: bool_0}
    validation_1 = module_0.Validation(dict_0, bool_1)


def test_case_2():
    str_0 = "="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_lazy()
    var_2.is_fail()


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_try()
    var_0.is_success()


def test_case_4():
    dict_0 = {}
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    str_0 = "\n        If Maybe is empty return new empty Maybe, in other case\n        takes mapper function and returns new instance of Maybe\n        with result of mapper.\n\n        :param mapper: function to call with Maybe value\n        :type mapper: Function(A) -> B\n        :returns: Maybe[B | None]\n        "
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_1.to_lazy()
    var_1.bind(dict_0)


def test_case_5():
    str_0 = "="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_0.map(var_2)
    var_1.is_fail()


def test_case_6():
    none_type_0 = None
    none_type_0.to_box()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_9():
    float_0 = -1021.22966
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_10():
    int_0 = 2030
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(int_0, int_0)
    int_1 = -4962
    validation_2 = module_0.Validation(int_1, int_1)
    validation_2.map(int_1)


def test_case_11():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(none_type_0)


def test_case_12():
    bytes_0 = b"mag+wl\xd3\xa3v\xf4\xc1YVuT"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_1.is_success()


def test_case_14():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_try()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__str__()
    var_0.is_success()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_17():
    list_0 = []
    set_0 = set()
    validation_0 = module_0.Validation(set_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_0.is_fail()


def test_case_18():
    str_0 = "="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_19():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_1 = var_0.to_maybe()
    str_0 = "="
    validation_2 = module_0.Validation(str_0, str_0)
    var_2 = var_0.__str__()
    var_3 = validation_2.__eq__(validation_1)
    var_1.map(validation_1)
