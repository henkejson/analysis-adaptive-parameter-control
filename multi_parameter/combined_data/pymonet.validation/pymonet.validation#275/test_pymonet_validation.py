# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 613
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_box()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, dict_0)
    var_1 = validation_0.__eq__(dict_0)
    var_2 = validation_0.__str__()
    var_1.to_either()


def test_case_2():
    str_0 = "pi8]\nn[SAT,,Z"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.__str__()
    var_0.ap(bool_0)


def test_case_3():
    bytes_0 = b"\x9d\x0b`\xd8\x94\xc384\xa7\xc0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_4():
    bool_0 = False
    bool_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_8():
    float_0 = -2117.85
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_9():
    str_0 = "'"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    validation_0.bind(str_0)


def test_case_10():
    bool_0 = False
    bool_1 = False
    int_0 = -1975
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_1)
    var_2 = var_1.bind(bool_0)
    var_3 = var_2.to_try()
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.ap(none_type_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_12():
    bytes_0 = b"\x06q\xdf\x94\xe0M"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = var_1.to_lazy()
    var_0.bind(var_1)


def test_case_13():
    int_0 = -156
    validation_0 = module_0.Validation(int_0, int_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_2 = module_0.Validation(validation_1, bool_0)
    validation_2.to_try()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    float_0 = -1520.93
    validation_1 = module_0.Validation(float_0, dict_0)
    var_1 = validation_0.to_either()
    var_2 = validation_1.__eq__(validation_1)
    var_3 = var_2.__eq__(var_1)
    var_3.map(var_3)


def test_case_15():
    bytes_0 = b"\x9d\x0b`\xd8\x94\xc384\xa7\xc0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(bytes_0)
    validation_0.map(var_1)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_1 = module_0.Validation(dict_0, validation_0)
    validation_2 = module_0.Validation(validation_0, validation_1)
    var_0 = validation_1.__eq__(validation_0)
    var_0.bind(validation_1)
