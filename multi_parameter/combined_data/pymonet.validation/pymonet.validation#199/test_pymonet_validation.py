# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"n\x12z\x1a^Zb\x86j\x8b\x98\xec.\xb4\xba\xe0\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)


def test_case_1():
    bool_0 = False
    none_type_0 = None
    float_0 = -2169.13
    validation_0 = module_0.Validation(bool_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__str__()
    var_1.to_either()


def test_case_2():
    bytes_0 = b"u\xf2\xec"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_3():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_lazy()
    validation_0.ap(list_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_success()
    var_2.to_lazy()


def test_case_5():
    str_0 = "dyb~cE7 vo*a%6"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_2.bind(var_2)


def test_case_6():
    bytes_0 = b"n\x12z\x1a^Zb\x86j\x8b\x98\xec.\xb4\xba\xe0\xcb"
    bytes_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    float_0 = -2544.7073
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_9():
    bytes_0 = b"n\x12z\x1a^Zb\x86j\x8b\x98\xec.\xb4\xba\xe0\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    bool_0 = True
    var_2 = validation_0.is_success()
    validation_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    int_0 = -533
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(none_type_0)


def test_case_11():
    object_0 = module_1.object()
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_12():
    bytes_0 = b"n\x12z\x1a^Zb\x86j\x8b\x98\xec.\xb4\xba\xe0\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(var_0)


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_14():
    complex_0 = 646.89929 + 122j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.is_success()


def test_case_16():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_17():
    str_0 = "TvIoOt"
    validation_0 = module_0.Validation(str_0, str_0)
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_maybe()
