# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.bind(bool_0)


def test_case_1():
    str_0 = "8My_E,)\\iQKPcM$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    float_0 = -1923.7
    tuple_0 = (float_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bytes_0 = b"\xf9\xfb\xd7\x81\xb1\x94e@'_r\x81\n"
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_1.bind(float_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    str_0 = '\\-I*kJ_"\x0c\x0b l\r'
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_0.is_fail()


def test_case_5():
    str_0 = "b%5CSD"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    bool_1 = True
    none_type_0 = None
    var_1 = validation_0.to_either()
    bool_2 = False
    validation_1 = module_0.Validation(none_type_0, bool_2)
    var_2 = validation_1.__eq__(bool_1)
    var_3 = var_2.__eq__(bool_1)
    var_4 = var_2.__str__()
    validation_1.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0 = False
    set_0 = validation_0.to_box()
    validation_1 = module_0.Validation(set_0, bool_0)
    validation_1.__str__()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.to_maybe()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0 = True
    validation_1 = module_0.Validation(var_0, bool_0)
    var_0.ap(bool_0)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    bool_1 = False
    none_type_0 = None
    bool_2 = False
    validation_1 = module_0.Validation(none_type_0, bool_2)
    var_1 = validation_1.__eq__(bool_1)
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_1.__str__()
    dict_0 = {}
    validation_2 = module_0.Validation(bool_2, dict_0)
    var_4 = var_2.__eq__(none_type_0)
    var_5 = validation_2.to_lazy()
    var_6 = validation_2.__str__()
    var_3.to_lazy()


def test_case_12():
    bytes_0 = b"\x81\xbc9\xe0\xe8"
    list_0 = []
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    validation_0.map(list_0)


def test_case_13():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    bool_1 = True
    var_1 = validation_0.is_success()
    none_type_0 = None
    var_2 = validation_0.__eq__(none_type_0)
    bool_2 = False
    validation_1 = module_0.Validation(none_type_0, bool_2)
    var_3 = validation_1.__eq__(bool_1)
    var_4 = var_3.__eq__(bool_1)
    var_5 = var_3.__str__()
    int_0 = 1
    dict_0 = {}
    validation_2 = module_0.Validation(int_0, dict_0)
    var_6 = validation_2.to_either()
    validation_1.__str__()


def test_case_14():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_1 = True
    none_type_0 = None
    var_1 = validation_0.to_either()
    bool_2 = False
    validation_1 = module_0.Validation(none_type_0, bool_2)
    var_2 = validation_1.__eq__(bool_1)
    validation_2 = module_0.Validation(validation_0, var_0)
    var_3 = validation_0.to_lazy()
    object_0 = module_1.object()
    int_0 = 1
    var_4 = var_1.map(validation_1)
    var_5 = validation_2.__eq__(validation_1)
    var_6 = object_0.__str__()
    validation_3 = module_0.Validation(int_0, var_6)
    var_0.to_maybe()
