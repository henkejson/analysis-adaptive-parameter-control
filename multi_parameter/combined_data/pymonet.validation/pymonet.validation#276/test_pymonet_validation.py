# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_1():
    none_type_0 = None
    none_type_1 = None
    set_0 = {none_type_0, none_type_1, none_type_1}
    validation_0 = module_0.Validation(none_type_1, set_0)
    var_0 = validation_0.__eq__(none_type_1)
    var_0.map(none_type_0)


def test_case_2():
    bytes_0 = b"eH\xed\xe9Z\x95\x87\xbe\xb8\x83"
    str_0 = "mUswv7"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.ap(bytes_0)


def test_case_3():
    bytes_0 = b"\xbe\xfb\xe20\xa15\xa6\xc8\xaavI-\xc6"
    list_0 = [bytes_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_maybe()
    var_2.is_success()


def test_case_4():
    str_0 = "QcP4,s_IVq %/{!\\"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    float_0 = 700.36672
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.__str__()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_try()
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_7():
    bool_0 = True
    int_0 = 0
    validation_0 = module_0.Validation(bool_0, int_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.map(validation_1)


def test_case_8():
    float_0 = -1703.02675
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.bind(float_0)


def test_case_9():
    float_0 = -4930.57
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(float_0)


def test_case_10():
    complex_0 = 1000.7771 + 2192.7511j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    validation_0.bind(validation_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_13():
    str_0 = 'Vc:@ +V."'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(var_0)
    var_3 = var_0.__eq__(var_1)
    var_3.ap(str_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    var_4 = var_3.bind(validation_0)
    var_3.is_success()


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_1.to_either()
    validation_1.map(var_1)
