# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_1():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_1.is_fail()


def test_case_2():
    complex_0 = -2824 - 2811.5473j
    list_0 = [complex_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_3():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.is_success()
    var_4 = validation_0.to_maybe()
    var_1.to_try()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_success()


def test_case_6():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__eq__(none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.is_success()
    validation_0.map(var_1)


def test_case_8():
    int_0 = 1783
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_1 = module_0.Validation(int_0, int_0)
    validation_1.bind(validation_1)


def test_case_9():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_0.__str__()


def test_case_11():
    bytes_0 = b"\x07S"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_try()
    var_2 = var_1.bind(var_1)
    validation_1 = module_0.Validation(validation_0, var_2)
    var_3 = validation_0.__eq__(validation_0)
    var_2.is_fail()


def test_case_12():
    none_type_0 = None
    str_0 = "utw'@FR$`x&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(none_type_0)
    var_2 = validation_0.to_lazy()
    module_1.object(**var_1)


def test_case_13():
    bytes_0 = b"\x07S"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_try()
    var_2 = var_1.bind(var_1)
    none_type_1 = None
    var_3 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(var_1)


def test_case_14():
    set_0 = set()
    var_0 = set_0.__str__()
    validation_0 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.__str__()
    var_0.to_either()


def test_case_15():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.is_success()
    var_0.bind(none_type_0)


def test_case_16():
    bytes_0 = b"\x07S"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(none_type_0)
    str_0 = "!s:3V}k"
    var_2 = var_0.__eq__(str_0)
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.to_lazy()
    var_0.is_success()


def test_case_17():
    bytes_0 = b"\x07S"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = var_0.bind(validation_1)
    var_5 = var_4.bind(var_3)
    var_5.to_lazy()
