# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -277.99453638579683 + 777j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(complex_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = var_0.to_try()
    var_2.map(var_3)


def test_case_2():
    str_0 = "^"
    str_1 = "[ji+H/?g,~"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(str_0)
    var_1.is_success()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)


def test_case_4():
    bytes_0 = b"\x00P\x0cZU(\xd8x\xfe\xe6\\\xe1\xf3\xce"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, bytes_0)


def test_case_5():
    float_0 = -3687.2
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_6():
    int_0 = -1225
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_7():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    bytes_0 = b"\xda\x8dS\x04-+\xaeh<\xd0V\x17\x8e\xc7\x1a=t]\xde"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bytes_1 = b"M\xd6\x9c\xf8"
    tuple_0 = (bytes_1,)
    validation_0.map(tuple_0)


def test_case_9():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.__eq__(set_0)
    validation_0.bind(var_2)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.ap(validation_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, var_1)


def test_case_13():
    bytes_0 = b"\xb5w\xe0\x8ai\xd6F\xdd\xd7\x12$\xf0O#"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()


def test_case_15():
    bytes_0 = b"e\xce}\x05\xe8"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_0.is_fail()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(set_0)
    var_2 = var_1.__eq__(var_0)


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = module_0.Validation(var_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.__eq__(validation_0)
