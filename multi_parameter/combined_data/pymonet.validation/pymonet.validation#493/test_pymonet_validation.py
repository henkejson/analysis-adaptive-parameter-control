# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = -3293
    int_1 = 909
    set_0 = {int_1}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_box()


def test_case_1():
    str_0 = "b(+q#2\r\nc"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"\xd6\x00\xb3\xae+\xdf\x9d\xfd/\x84\x8d2\xaa\xdf\x1c\xcc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    complex_0 = -1130.6025 + 3217.172j
    float_0 = 571.0
    validation_0 = module_0.Validation(complex_0, float_0)
    validation_0.to_try()


def test_case_4():
    bytes_0 = b"P\x1f\xd3\xcf\xf7\xc9\xd2\xc8\xb0\x14\xec\xc1"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    str_0 = "lp\r<6kAMyB9tZJ*MV"
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    validation_0.map(str_0)


def test_case_6():
    float_0 = -2363.2609
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(float_0, float_0)
    validation_0.bind(float_0)


def test_case_7():
    int_0 = 105
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    list_0 = [validation_0, int_0, none_type_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_1 = validation_1.__str__()
    validation_1.ap(int_0)


def test_case_8():
    bytes_0 = b"\xccF"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "b(+q#2\r\nc"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_0.to_either()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_11():
    bytes_0 = b"={\xbb\x83\x14\x99"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(dict_0, list_0)
    int_0 = 785
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0}
    validation_1 = module_0.Validation(dict_1, int_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()


def test_case_12():
    float_0 = -2363.2609
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = validation_1.to_lazy()
    validation_1.is_fail()


def test_case_13():
    str_0 = "All"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.ap(none_type_0)


def test_case_14():
    dict_0 = {}
    int_0 = 105
    bool_0 = False
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    none_type_0 = None
    var_2 = validation_0.__eq__(bool_0)
    list_0 = [validation_0, int_0, none_type_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_3 = validation_1.__str__()
    var_1.is_fail()


def test_case_15():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_16():
    bool_0 = False
    bytes_0 = b"\xc2\xdf"
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.ap(bool_0)
    var_2.is_fail()


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.__str__()
    var_2.to_either()
