# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.is_fail()


def test_case_2():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_box()


def test_case_3():
    bytes_0 = b"\xa0\x86x\xbc\xa1Q"
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (bytes_0, set_0)
    list_0 = [tuple_0]
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.__str__()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_0.to_either()


def test_case_5():
    none_type_0 = None
    bytes_0 = b"YN\xff\r\x12\xb9\x1d\xb6\xe0\xa6\x94?\xd2e\xaf\x98\x95d\xac"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(none_type_0)
    var_2.to_lazy()


def test_case_6():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    validation_0.bind(validation_0)


def test_case_7():
    str_0 = "#"
    dict_0 = {}
    tuple_0 = (str_0, dict_0, str_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_8():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_9():
    bool_0 = False
    bool_1 = False
    validation_0 = module_0.Validation(bool_0, bool_1)
    validation_0.to_maybe()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_11():
    complex_0 = 1910.359 + 1281j
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(complex_0)


def test_case_12():
    bytes_0 = b"\rg"
    bytes_1 = b"\xf1\x13\xb6\xdd"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.bind(bytes_0)


def test_case_13():
    float_0 = 430.9
    list_0 = [float_0, float_0, float_0, float_0]
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, bool_0)
    validation_1.ap(list_0)


def test_case_14():
    str_0 = "^F6@Y*g\n-h$+@mtS"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.bind(str_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_16():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.to_try()


def test_case_17():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.__eq__(validation_1)
    validation_1.bind(validation_1)
