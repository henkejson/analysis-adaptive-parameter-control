# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(list_0)
    str_0 = '/\x0bF$m"2i-h)=O51uNI'
    validation_1 = module_0.Validation(list_0, str_0)
    var_1 = validation_1.to_maybe()
    validation_0.ap(list_0)


def test_case_1():
    str_0 = "N+'{B)"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.is_fail()
    var_1.to_lazy()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(var_0)
    var_1.to_maybe()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_5():
    int_0 = 629
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    bytes_0 = b"b\x82^C\xa8\xc1\xb8f\xac\x93\x97\xf2\r\n"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(bool_0)


def test_case_7():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    bool_2 = True
    dict_0 = {tuple_0: tuple_0, bool_2: bool_1, bool_0: tuple_0}
    float_0 = -2966.715222
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.bind(dict_0)


def test_case_8():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = validation_0.to_either()
    var_4 = var_3.__eq__(var_3)
    var_5 = var_4.__str__()
    var_6 = validation_0.__eq__(var_4)
    var_4.to_try()


def test_case_9():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    var_2.is_success()


def test_case_10():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_1.to_lazy()
    var_3 = validation_1.to_lazy()
    var_4 = var_3.to_box()
    var_5 = var_2.to_maybe()
    var_5.to_maybe()


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(var_1)
    var_3 = var_2.__str__()
    var_4 = validation_0.to_try()
    var_5 = validation_0.__eq__(var_2)
    var_2.to_try()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__str__()
    var_3 = validation_0.__eq__(validation_0)
    var_1.to_try()


def test_case_13():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    int_0 = 3629
    validation_0 = module_0.Validation(int_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__eq__(tuple_0)
    var_3 = var_2.__str__()
    var_4 = var_3.__str__()
    var_4.to_try()
