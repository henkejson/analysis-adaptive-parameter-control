# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    float_0 = 1550.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(float_0)
    validation_0.is_fail()


def test_case_2():
    float_0 = -1690.75606
    set_0 = {float_0, float_0, float_0, float_0}
    str_0 = ",0+[ZIrDD?"
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    none_type_0 = None
    var_2 = validation_0.is_success()
    var_3 = validation_0.__str__()
    validation_1 = module_0.Validation(set_0, none_type_0)
    var_4 = var_0.__eq__(none_type_0)
    var_4.is_fail()


def test_case_3():
    bytes_0 = b"\xa1,!S\x02\xfe"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.to_try()
    var_5 = validation_0.__str__()
    var_6 = var_2.to_try()
    validation_1 = module_0.Validation(var_5, var_5)
    var_7 = validation_0.is_fail()
    var_0.is_success()


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_0.to_maybe()


def test_case_5():
    bytes_0 = b"z\xd5\xdd!c\xc6\xd1\x06M\x81Q\x0b\xd1\xae\xd5\xe0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_6():
    bytes_0 = b"\xe7\x9c\xff\xd8Y\xe8\xa8K\x92'\x1d<i\xe1X\xbdG\xa6"
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, bytes_0)
    validation_0.map(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.to_box()
    validation_0.bind(validation_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "U"
    set_0 = {str_0, str_0}
    validation_1 = module_0.Validation(str_0, set_0)
    var_0 = validation_1.to_lazy()


def test_case_10():
    str_0 = "W.hqCE"
    list_0 = [str_0, str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.is_success()


def test_case_11():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__str__()
    var_0.to_box()


def test_case_12():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.to_try()
    var_5 = module_1.object()
    var_6 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_0, var_2)
    var_7 = validation_0.is_success()
    var_1.to_maybe()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    list_1 = [list_0, list_0, list_0]
    var_1 = module_0.Validation(list_1, var_0)
    var_2 = validation_0.__eq__(var_1)
    none_type_0 = None
    var_3 = validation_0.to_box()
    var_1.map(none_type_0)
