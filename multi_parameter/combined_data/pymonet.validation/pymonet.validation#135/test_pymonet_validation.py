# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 1715
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    bool_0 = True
    str_0 = "rL%am^f*\x0cq%Mk\r"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(bool_0)


def test_case_2():
    bytes_0 = b"\xd4"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()


def test_case_3():
    int_0 = 1724
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    float_0 = 91.0
    tuple_0 = (float_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = False
    validation_0.map(bool_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    int_0 = 143
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(int_0)


def test_case_9():
    int_0 = 201
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_10():
    str_0 = "9/:BFGl6"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()


def test_case_13():
    int_0 = 2856
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_1.bind(int_0)


def test_case_14():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.to_try()


def test_case_15():
    int_0 = 1664
    int_1 = 1042
    dict_0 = {int_0: int_0, int_0: int_1, int_0: int_0, int_0: int_1}
    bytes_0 = b"7\x04\xa9"
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"o\x98\xbe?"
    dict_0 = {none_type_0: bytes_0, none_type_0: none_type_0}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.to_try()
