# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_1():
    int_0 = 32
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()
    var_1.is_fail()


def test_case_3():
    bytes_0 = b"\x94\xe6Jx\xf3\xcc\xee\xe1\r\xd0\xd3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_4():
    bytes_0 = b"\xda_\x83}\xd3\x970\xdby\xb0\t\xb7\xa3\xb4J\xaa]\xee\x83\xd3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    int_0 = 32
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_6():
    int_0 = 46
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_8():
    bytes_0 = b"\x9c\xc3\x1f\xec\xdd\xf2Lm7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    str_0 = "gI9'2N."
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_11():
    int_0 = 33
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_12():
    int_0 = 28
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    str_0 = "\nw2r%9{jcZb\x0c'"
    none_type_0 = None
    str_1 = "b\x0b%!S@@2jpYoP87}}\rz"
    validation_0 = module_0.Validation(str_0, str_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_1 = module_0.Validation(none_type_0, str_0)


def test_case_14():
    bytes_0 = b"\xda_\x83}\xd3\x970\xdby\xb0\t+\xa3\xb4J\xaa]\xee\x83\xd3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_15():
    int_0 = 32
    list_0 = [int_0, int_0, int_0, int_0]
    tuple_0 = ()
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_maybe()
    var_0.is_success()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_1.bind(var_0)


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_1 = module_0.Validation(set_0, validation_0)
    none_type_0 = None
    var_0 = validation_1.__eq__(validation_0)
    validation_0.bind(none_type_0)
