# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(bool_0)
    var_0.bind(none_type_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    float_0 = 1846.0
    var_1 = validation_0.__str__()
    var_1.ap(float_0)


def test_case_2():
    bytes_0 = b"\x08\\\xcd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.to_maybe()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "KZx*pB\x0b@"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_either()
    var_3 = var_1.__str__()
    var_4 = var_0.__str__()
    validation_2 = module_0.Validation(var_1, var_3)
    validation_2.map(var_3)


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_8():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.bind(set_0)


def test_case_9():
    bytes_0 = b"\xf2(\xcc\xf0"
    bytes_1 = b"=\xa7\x04\xf8\xcb\xa1\x8d\xb9\xec\x06\xcb\xe1\xb3"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.ap(bytes_0)


def test_case_10():
    str_0 = "D6hYD}V{JpT\rT/\tc"
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(str_0)
    var_1.to_box()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_1 = module_0.Validation(var_0, bool_0)
    var_1 = validation_1.to_lazy()


def test_case_12():
    bytes_0 = b"\x7f\x9f\xb3\xc9\x87\x7f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.is_fail()
    var_4 = var_0.to_box()
    var_5 = validation_0.to_lazy()
    bytes_0.is_fail()


def test_case_13():
    bytes_0 = b"\x7f\x9f\xb3\xc9\x87\x7f"
    var_0 = module_0.Validation(bytes_0, bytes_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.is_fail()
    var_3 = var_0.to_lazy()
    var_4 = var_0.is_fail()
    var_4.ap(bytes_0)


def test_case_14():
    bytes_0 = b"\x7f\x9f\xb3\xc9\x87\x7f"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = module_0.Validation(bytes_0, var_0)
    var_2 = validation_0.__eq__(var_1)
    var_1.is_fail()
