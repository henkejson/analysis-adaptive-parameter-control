# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    list_0 = []
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.__str__()
    validation_1.ap(list_0)


def test_case_2():
    str_0 = "\\>"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    bytes_0 = b"\xb3\x89\xa2\x02fV4\x9c\xe5\x8a\xa7\xee\xbeH\xf1\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    bytes_0 = b"\xb3\x89\xa2\x02fV4\x9c\xe5\x8a\xa7\xee\xbeH\xf1\xd6"
    bytes_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    bytes_0 = b"Vhye\x9b"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    bytes_0 = b"l\xf8OoU\xd8\xa6\x9f\xbd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.map(validation_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"qA\xf7\x0b\x13Z"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bytes_0 = b"\xb3&\xa2\xa7\x02f)V\x9c\xe5\x8a\xae\xfb\xab\xf1\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_maybe()


def test_case_13():
    bytes_0 = b"\xad\x05\xfc\xc1\x95\x96\x85\x15\x82\xab"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_14():
    bytes_0 = b"\xb3&\xa2\xa7\x02f)V\x9c\xe5\x8a\xae\xfb+\xf1\x04X"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    bytes_0 = b"\xda\x9b\x82.\x1c\xac"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_16():
    str_0 = "8h-d&J,"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    bool_0 = False
    validation_1 = module_0.Validation(var_0, bool_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_0.to_try()


def test_case_17():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = validation_0.to_lazy()
    var_1.is_fail()


def test_case_18():
    list_0 = []
    none_type_0 = None
    int_0 = -59
    validation_0 = module_0.Validation(int_0, int_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_either()
    var_0.ap(none_type_0)
