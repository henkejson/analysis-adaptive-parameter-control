# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "Tc3"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)
    validation_0.__str__()


def test_case_1():
    bytes_0 = b"]\xba\x9f\x02F"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bool_0, var_0)
    validation_0.is_fail()


def test_case_4():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(list_0)


def test_case_5():
    bytes_0 = b"\xb3\x00\xf8\x0fS"
    int_0 = -2831
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(bytes_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.ap(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_8():
    str_0 = "cUDntmb\x0bh;zn0g@jq##"
    str_1 = "Tc3"
    dict_0 = {str_1: str_1, str_1: str_1}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    validation_1 = module_0.Validation(str_0, str_1)
    validation_2 = module_0.Validation(var_0, str_1)
    var_1 = validation_2.to_try()
    validation_2.ap(validation_1)


def test_case_9():
    str_0 = ""
    str_1 = "Tc3"
    validation_0 = module_0.Validation(str_1, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(str_0)
    var_2 = validation_0.__str__()
    var_1.bind(var_2)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_lazy()
    var_3 = var_0.to_box()
    var_4 = var_3.to_lazy()
    var_1.to_box()


def test_case_11():
    str_0 = "cUDntmb\x0bh;zn0g@jq##"
    none_type_0 = None
    str_1 = "Tc3"
    dict_0 = {str_1: str_1, str_1: str_1}
    validation_0 = module_0.Validation(str_1, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(dict_0)
    var_2 = var_1.bind(str_0)
    var_3 = validation_0.to_either()
    var_4 = var_1.ap(var_0)
    var_5 = var_3.bind(none_type_0)
    var_6 = var_5.to_box()
    var_7 = var_3.to_maybe()
    var_8 = var_7.__str__()
    var_9 = var_1.to_either()
    var_10 = var_5.to_box()
    validation_0.bind(var_7)


def test_case_12():
    bytes_0 = b"]\xba\x9f\x02F"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = var_1.to_either()
    var_0.to_box()


def test_case_13():
    str_0 = "Tc3"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__str__()
    validation_0.bind(var_2)


def test_case_14():
    str_0 = "Ffmn'kKY\n4SwR"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_0.to_lazy()


def test_case_15():
    str_0 = "cUn!mb\x0by4zn0g@=q##"
    dict_0 = {str_0: str_0, str_0: str_0}
    validation_0 = module_0.Validation(dict_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_1.bind(validation_0)
