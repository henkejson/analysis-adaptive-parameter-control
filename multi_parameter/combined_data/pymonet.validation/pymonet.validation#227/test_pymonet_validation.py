# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "^^[/,$\\B8Kl+tXR.g"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = "B/pDO[W/bLr|nV/?>NW|"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_2():
    str_0 = "(9\x0bNvX,jP4"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    str_0 = "`'-4#':"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    str_0 = "\rrl//K<u\n-'\t<"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_5():
    str_0 = "`'$bg':"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(validation_0)


def test_case_6():
    str_0 = '+=F7S|@3\\])i\t"G'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_7():
    str_0 = "\n        Transform Box into Right either.\n\n        :returns: rightEithr monad wiDheprevous value\n        :rtype: Right[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_8():
    str_0 = "zG%"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "a9\\}G\x0b06"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    str_0 = "\r'#OH':"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_11():
    str_0 = "Ptf5-vteRuelxkUS"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_12():
    str_0 = "Qugq/!$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(var_0, list_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_1.__str__()
    none_type_0 = None
    validation_2 = module_0.Validation(var_1, none_type_0)
    var_3 = validation_0.__eq__(validation_2)
    var_4 = var_1.__eq__(bool_0)
    var_4.is_success()


def test_case_14():
    str_0 = "V4abr\t!P+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.__eq__(validation_0)


def test_case_15():
    bytes_0 = b"\xd2\xbd?"
    list_0 = [bytes_0]
    bytes_1 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(bytes_1, bytes_1)
    validation_2 = module_0.Validation(validation_0, validation_0)
    bool_0 = False
    validation_3 = module_0.Validation(bool_0, list_0)
    var_1 = validation_2.__eq__(validation_2)
    var_2 = validation_1.__str__()
    var_3 = validation_0.is_success()
    var_3.is_fail()


def test_case_16():
    bool_0 = True
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    bool_0.to_lazy()
