# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.map(none_type_0)


def test_case_1():
    float_0 = 409.0
    set_0 = {float_0, float_0}
    bytes_0 = b"u\xc2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.map(set_0)


def test_case_2():
    bytes_0 = b"\xbc\x93\x8c\xd1\xf2\xb2\xaf\x15"
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(bytes_0)


def test_case_3():
    str_0 = "bA]%8?\r2QT|Iz.[gC"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_1.__eq__(none_type_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_7():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, set_0)
    bool_0 = False
    validation_1.bind(bool_0)


def test_case_8():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.__eq__(var_0)
    var_5 = validation_0.to_try()
    validation_0.ap(var_5)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_box()
    validation_0.bind(none_type_0)


def test_case_10():
    int_0 = 1543
    tuple_0 = (int_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    validation_1 = module_0.Validation(tuple_0, tuple_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_13():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = module_0.Validation(validation_0, none_type_0)
    var_3 = validation_0.__eq__(set_0)
    var_4 = validation_0.__str__()
    var_5 = var_0.map(var_1)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_15():
    bytes_0 = b"\xbc\x93\x8c\xd1\xf2\xb2\xaf\x15"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__eq__(var_0)
    var_3.to_try()


def test_case_16():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_1.__eq__(validation_0)
    validation_1.__str__()
