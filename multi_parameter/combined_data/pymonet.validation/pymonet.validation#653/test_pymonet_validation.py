# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(bool_0)
    var_2 = var_1.__str__()
    var_2.bind(var_2)


def test_case_1():
    str_0 = "xB\x0b)uwu"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()


def test_case_2():
    str_0 = "xB\x0b)juwu"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_1.to_maybe()


def test_case_3():
    str_0 = "fH\x0bniv="
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.is_success()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = -3794
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_7():
    bytes_0 = b"\x15\x92\xb6+8\xb2\x06"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_8():
    str_0 = "mS^\n}lj\t[\r4IBXN"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"b!\x15E\x0f7\xfa\xc7\xa9"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.ap(dict_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    str_0 = "\n        :returns: Copy of self\n        :rtype: Left[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.__str__()
    var_4 = var_1.map(str_0)
    var_5 = var_1.ap(validation_0)
    var_6 = var_4.to_try()
    var_6.to_try()


def test_case_11():
    str_0 = "xB\x0b)juwu"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    none_type_1 = None
    bytes_0 = b"\xeb\xff\xd6_;"
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = validation_0.__str__()
    var_5 = var_3.__eq__(var_3)
    var_6 = validation_0.to_try()
    validation_2 = module_0.Validation(var_0, var_6)
    var_4.ap(none_type_1)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(bool_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_2 = module_0.Validation(validation_1, var_1)
    none_type_0 = None
    validation_3 = module_0.Validation(none_type_0, var_1)
    var_2 = validation_3.__eq__(validation_1)
    validation_1.to_either()


def test_case_13():
    bytes_0 = b'/\xab%J\xf3\x03\xe9\xee@\x08\xd22\xd7"w\x9a\xca'
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_0.to_maybe()


def test_case_14():
    float_0 = -1615.67167
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(float_0)
    validation_0.ap(float_0)


def test_case_15():
    dict_0 = {}
    bool_0 = True
    float_0 = 525.0
    validation_0 = module_0.Validation(bool_0, float_0)
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.is_fail()
    validation_1.bind(dict_0)


def test_case_16():
    bytes_0 = b'/\xab%J\xf3\x03\xe9\xee@\x08\xd22\xd7"w\x9a\xca'
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    str_0 = "xB\x0b)juwu"
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(bytes_0, list_0)
    str_1 = '!zUNy4:XUlG-5",(4]I'
    var_2 = validation_0.__eq__(str_1)
    var_3 = var_0.__eq__(str_0)
    var_4 = validation_1.to_either()
    var_5 = var_0.to_box()
    validation_2 = module_0.Validation(list_0, var_0)
    var_6 = validation_0.to_lazy()
    var_7 = validation_0.to_maybe()
    validation_2.is_fail()
