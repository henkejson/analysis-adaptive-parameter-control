# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_either()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    list_0 = [none_type_0, var_0]
    validation_1 = module_0.Validation(none_type_0, list_0)
    validation_2 = module_0.Validation(var_0, list_0)
    var_2 = validation_1.__str__()
    var_1.bind(var_1)


def test_case_2():
    bytes_0 = b"\xceSV\xab\x0c\x11\x85#\xf0U\xe0j+[\xd8\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()


def test_case_3():
    bytes_0 = b"\xceSV\xab\x0c\x11\x85#\xf0U\xe0j+[\xd8\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_try()
    var_3 = validation_0.to_either()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    int_0 = -1340
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_either()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xceSV\xab\x0c\x11\x85#\xf0U\xe0j+[\xd8\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.to_try()
    validation_0.map(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\x86"
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    int_0 = -3791
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(validation_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.__str__()
    validation_1 = module_0.Validation(var_2, var_1)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    str_0 = "?H<\x0c0)en=&nAPEz!UefB"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_1.to_box()


def test_case_13():
    bytes_0 = b"\xceSV\xab\x0c\x11\x85#\xf0U\xe0j+[\xd8\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_try()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    list_0 = []
    validation_1 = module_0.Validation(none_type_0, list_0)
    validation_2 = module_0.Validation(var_0, list_0)
    var_2 = validation_1.__str__()
    var_3 = validation_2.to_maybe()
    var_3.bind(var_3)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_either()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(var_0)
    list_0 = [var_1]
    validation_1 = module_0.Validation(var_0, list_0)
    var_2 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_0, list_0)
    var_3 = validation_1.__str__()
    var_4 = validation_2.to_maybe()
    var_5 = var_4.bind(var_0)
    var_6 = var_4.map(none_type_0)
    var_7 = var_4.to_try()
    var_8 = validation_2.to_try()
    module_1.object(*var_3, **var_1)
