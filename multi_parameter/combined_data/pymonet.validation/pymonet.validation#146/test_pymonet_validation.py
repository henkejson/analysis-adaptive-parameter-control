# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\x08\x94\xb4\xde\xd7Br\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_5():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.__eq__(var_0)
    var_4 = var_0.__str__()
    var_5 = validation_1.to_box()
    validation_0.map(var_1)


def test_case_6():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = var_0.bind(validation_0)
    validation_2 = module_0.Validation(bytes_0, validation_1)
    validation_0.bind(validation_0)


def test_case_7():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.is_success()
    float_0 = 284.240493
    validation_0.ap(float_0)


def test_case_8():
    bytes_0 = b"\x08\x94\xb4x\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = var_0.to_lazy()
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_1.to_box()
    var_4 = var_1.map(var_3)


def test_case_9():
    bytes_0 = b"\xff\xd9\x86K\x84\xea\xc7m-\x1a\xf2W\x0f\xc5\x01\x8a\xec\x02\x19\xc4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()


def test_case_10():
    bool_0 = False
    int_0 = 1364
    validation_0 = module_0.Validation(int_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_11():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, validation_0)
    validation_1.to_try()


def test_case_12():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()


def test_case_13():
    none_type_0 = None
    str_0 = "y/=$hr/&"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0.bind(var_1)


def test_case_14():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.is_success()
    var_2 = module_0.Validation(bytes_0, var_1)
    var_3 = var_2.__eq__(validation_0)
    var_4 = var_3.__str__()
    var_5 = var_2.__eq__(var_4)
    var_6 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_3.to_maybe()


def test_case_17():
    bytes_0 = b"\x08\x94\xb4\xde\xd7B"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    set_0 = set()
    validation_1 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    var_1.is_success()
