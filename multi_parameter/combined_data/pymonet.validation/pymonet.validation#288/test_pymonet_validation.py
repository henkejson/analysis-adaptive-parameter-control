# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_maybe()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    str_0 = "<rO%EsGBB@B~Py'\\B"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    bytes_0 = b"8/;\xda\x9a\x1a5\xca\x1c\xc2w$\xa66\t\xc7R"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.is_success()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_0, bool_1)
    validation_0.is_fail()


def test_case_7():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(int_0)


def test_case_8():
    int_0 = 349
    bytes_0 = b"\xd8\x85&\xcc\xe1|\xb6\x0f\x94"
    bool_0 = False
    validation_0 = module_0.Validation(int_0, bytes_0)
    validation_0.bind(bool_0)


def test_case_9():
    tuple_0 = ()
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(tuple_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_2 = validation_1.__eq__(none_type_0)
    var_2.to_maybe()


def test_case_12():
    complex_0 = 2844.59 + 1163.09j
    tuple_0 = ()
    validation_0 = module_0.Validation(complex_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.__str__()
    var_2.to_try()


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__eq__(none_type_1)
    validation_1 = module_0.Validation(validation_0, var_0)
    var_2 = validation_1.__eq__(validation_0)
    var_1.to_maybe()


def test_case_14():
    bytes_0 = b"\xff\x92\x07"
    str_0 = "nK\n0I0G"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.map(str_0)
    var_1.to_either()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_2 = var_1.to_try()
    var_3 = validation_0.__eq__(validation_0)
    var_3.to_lazy()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_1, var_1)
    var_2.is_fail()
