# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.is_success()


def test_case_1():
    bool_0 = True
    bool_0.to_box()


def test_case_2():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_3():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_4():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.is_success()


def test_case_5():
    bool_0 = False
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.map(bool_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(none_type_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    validation_0.ap(bool_0)


def test_case_8():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_10():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_11():
    bytes_0 = b"\x04"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_12():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_0.to_box()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.__eq__(bytes_0)
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_maybe()
    var_3.is_fail()


def test_case_14():
    str_0 = "/F$TFq~sA78{e$&yl"
    dict_0 = {str_0: str_0}
    tuple_0 = (str_0, dict_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_either()


def test_case_15():
    bytes_0 = b"\x80\xd0p\xce\xa0\n\x1e#f\xea`\xdb\x90\xbb\xae)\x91\xc6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = var_0.to_box()
    var_4.map(validation_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = var_1.__str__()
    var_4.to_maybe()


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    tuple_0 = ()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_1 = validation_1.to_either()
