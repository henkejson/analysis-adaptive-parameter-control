# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    dict_0 = {none_type_0: bool_1, bool_0: bool_0, none_type_0: bool_0}
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.is_success()


def test_case_1():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"\x03"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    str_0 = "LVG(\x0c0\\9"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    var_0.map(str_0)


def test_case_6():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    validation_0.map(var_1)


def test_case_7():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_0.bind(none_type_0)


def test_case_8():
    list_0 = []
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.ap(list_0)


def test_case_9():
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    validation_0 = module_0.Validation(object_0, dict_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_10():
    float_0 = -1476.159939
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.to_try()


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_0.bind(var_1)


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_lazy()
    var_3.to_lazy()


def test_case_14():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_0.to_maybe()


def test_case_15():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()


def test_case_16():
    bytes_0 = b"\x9f}J\x86\xb5\xf4\xb1&)?\xaa\xebM\x876\xbb\x19\x86"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = var_0.bind(validation_0)
    var_3.to_box()
