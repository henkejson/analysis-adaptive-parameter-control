# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = -116.54 - 453.6j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(complex_0)
    var_0.to_box()


def test_case_1():
    bytes_0 = b"&O\x9bu\x82\xba\xca\x84:-\xf1\x0c\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(var_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"\xa8\xaa\x1b"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    bool_0 = True
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_2 = var_0.__eq__(none_type_0)
    var_3 = var_0.to_box()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_4():
    bytes_0 = b"&O\x9bu\x82\xba\xca\x84:-\xf1\x0c\x13"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = var_1.ap(bytes_0)
    validation_1 = var_1.__eq__(var_1)
    validation_0.bind(var_2)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    int_0 = 1344
    set_0 = set()
    tuple_0 = (int_0, set_0, int_0, int_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    validation_0.map(int_0)


def test_case_7():
    int_0 = 1344
    set_0 = set()
    tuple_0 = (int_0, set_0, int_0, int_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    validation_0.map(int_0)


def test_case_8():
    none_type_0 = None
    int_0 = 3504
    set_0 = {int_0, int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    validation_0.bind(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(none_type_0)
    var_1 = validation_1.to_box()


def test_case_11():
    int_0 = -1061
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_12():
    str_0 = "=&?T-%d\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(var_1)
    var_3 = validation_0.to_box()
    var_4 = validation_0.to_try()
    validation_1 = module_0.Validation(var_2, var_4)
    var_4.is_success()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "o"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.bind(validation_0)


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_1.ap(bytes_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = ""
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__str__()
    var_2 = var_0.to_box()
    var_3 = validation_0.__eq__(none_type_0)
    var_4 = validation_1.to_box()
    var_5 = var_0.__eq__(var_2)
    var_5.to_lazy()
