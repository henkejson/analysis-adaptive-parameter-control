# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = -1370
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.bind(bool_0)


def test_case_1():
    bytes_0 = b"\xa6D\x91}\xecc\xea\x11\x84\xa6\xa9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = validation_0.__str__()


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0]
    validation_0 = module_0.Validation(bool_0, list_1)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()


def test_case_3():
    str_0 = "\nKtE>T"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_7():
    complex_0 = 513.7 + 1032.494j
    tuple_0 = (complex_0,)
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, tuple_0)
    validation_0.bind(none_type_0)


def test_case_8():
    int_0 = 1014
    str_0 = "r$@4\nr"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.ap(int_0)


def test_case_9():
    str_0 = "\nKtE>T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_10():
    bytes_0 = b"\xa6D\x91}\xecc\xea\x11\x84\xa6\xa9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    bytes_0 = b"\xa6D\x91}\xecc\xea\x11\x84\xa6\xa9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_12():
    bytes_0 = b"\xe15\xbf\xd8//?\xe5+7G\xab\x8eG\xd4\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xe15\xbf\xd8//?\xe5+7G\xab\x8eG\xd4\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_1.to_try()


def test_case_14():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.ap(bool_0)


def test_case_15():
    bytes_0 = b"\xe15\xbf\xd8//?\xe5+7G\xab\x8eG\xd4\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    bool_0 = True
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = var_0.bind(var_3)
    var_5 = var_0.to_lazy()
    var_6 = validation_0.is_fail()
    var_7 = var_1.to_maybe()
    bool_1 = False
    validation_1 = module_0.Validation(bool_0, bool_1)
    none_type_0 = None
    validation_2 = module_0.Validation(var_6, none_type_0)
    var_8 = validation_2.__eq__(validation_0)
    var_9 = var_1.to_lazy()
    validation_1.is_success()


def test_case_16():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = var_0.__str__()
    var_2.ap(bool_0)


def test_case_17():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.is_fail()
