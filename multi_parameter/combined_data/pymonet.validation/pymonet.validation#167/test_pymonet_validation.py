# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.__str__()


def test_case_1():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_1 = validation_1.__eq__(none_type_1)
    validation_1.__str__()


def test_case_2():
    bytes_0 = b"\x16t\xdc"
    list_0 = [bytes_0, bytes_0]
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_3():
    bytes_0 = b'\x14+S\xaa\x07H\xf2\x98\x11\x9aH\xb0"\x0cu'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_0.ap(bytes_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    str_0 = "9\nK:>!jSs"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = "zV"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_10():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.to_either()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    dict_0 = var_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, none_type_0)
    var_1 = validation_0.to_maybe()
    validation_2 = module_0.Validation(var_0, var_0)
    list_0.ap(none_type_0)


def test_case_14():
    int_0 = 2349
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(int_0, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    float_0 = -760.546
    var_2 = var_0.bind(float_0)
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_3 = validation_1.__str__()
    validation_1.ap(var_3)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_success()
    none_type_0 = None
    validation_1 = module_0.Validation(list_0, none_type_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_0.to_either()
    var_2.is_fail()


def test_case_16():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    list_0 = [dict_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_either()
    validation_0.map(var_1)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_1.to_try()


def test_case_18():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(var_0)
    none_type_0 = None
    validation_1 = module_0.Validation(var_1, none_type_0)
    var_2 = validation_1.__eq__(var_0)
    none_type_1 = None
    var_3 = validation_1.__eq__(validation_1)
    var_0.ap(none_type_1)
