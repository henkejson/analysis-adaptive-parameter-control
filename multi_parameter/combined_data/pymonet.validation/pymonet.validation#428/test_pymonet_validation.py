# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.map(none_type_0)


def test_case_1():
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_2():
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    validation_1 = module_0.Validation(var_3, var_1)


def test_case_3():
    str_0 = "hSkhe, J0ZY.~SpED(SW"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    float_0 = -3958.688252
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = True
    str_0 = "hSkhe, J0ZY.~SpED(SW"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(bool_0)


def test_case_6():
    float_0 = -1133.3545841995292
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.bind(float_0)


def test_case_7():
    str_0 = '=G+I5$N|l{\\bN;M\x0c"%k'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_8():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.to_box()


def test_case_9():
    complex_0 = -1554 + 3266.347j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    bytes_0 = b"\\\x83"
    validation_1 = module_0.Validation(bytes_0, bytes_0)


def test_case_10():
    bytes_0 = b"\xef\xfd\x02\xbfk\x0b\xa8Cg\xa5)\x8d\x01("
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__str__()
    var_2 = validation_0.is_fail()
    validation_1 = module_0.Validation(var_2, var_1)


def test_case_11():
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_12():
    bool_0 = True
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bool_0, validation_0)
    var_1 = validation_0.__eq__(validation_1)
    var_0.is_fail()


def test_case_13():
    tuple_0 = ()
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_either()
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_1.is_fail()


def test_case_14():
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    dict_0 = {}
    validation_1 = module_0.Validation(str_0, dict_0)
    var_1 = validation_1.__str__()
    var_2 = var_1.__eq__(str_0)
    var_3 = validation_1.is_fail()
    var_4 = validation_0.to_lazy()
    var_0.to_either()


def test_case_15():
    str_0 = "KLk\\lJU# uKA9w"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    dict_0 = {}
    validation_1 = module_0.Validation(str_0, dict_0)
    var_1 = validation_1.__str__()
    var_2 = var_1.__eq__(str_0)
    var_3 = validation_1.is_fail()
    var_4 = validation_1.to_maybe()
    var_5 = validation_0.to_lazy()
    var_5.is_fail()
