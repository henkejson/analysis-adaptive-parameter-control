# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"V\xe8\x92p\xaa\x90\xdc0\xb2\xae\x7f\xee\x18\x1e\r\x0e\xb3>"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_lazy()


def test_case_1():
    str_0 = "+-##f\r.<a`J"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(str_0)
    var_2.to_maybe()


def test_case_2():
    object_0 = module_1.object()
    bytes_0 = b"\x02\xc5\xba~\x16\xd0X%~"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_2.to_try()


def test_case_3():
    bytes_0 = b"V\xe8\x92\xa2p\xaa\x90\xdc0\xb2\xae\x7f\xee\x18\x1e\r\x0e\xb3>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    dict_0 = validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    str_0 = "U2A-:40\t'\x0b(T"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    validation_0.map(validation_0)


def test_case_6():
    bytes_0 = b"\xbd\x07\x88"
    bytes_1 = b"\xa3\x0eY\xce\xb0yN,ac\x9c"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.bind(bytes_0)


def test_case_7():
    bytes_0 = b":Mx\xcf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(validation_0)


def test_case_8():
    complex_0 = -3952.4 + 41.71427j
    list_0 = [complex_0, complex_0, complex_0]
    tuple_0 = (complex_0, list_0)
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()


def test_case_10():
    bytes_0 = b"V\xe8\x92\xa2p\xaa\x90\xdc0\xb2\xae\x7f\xee\x18\x1e\r\x0e\xb3>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_1.__eq__(validation_1)
    validation_2 = module_0.Validation(var_1, var_1)
    var_1.map(var_1)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_12():
    bytes_0 = b"V\xe8\x92\xa2p\xaa\x90\xdc0\xb2\xae\x7f\xee\x18\x1e\r\x0e\xb3>"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    validation_2 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_2.map(validation_1)


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_14():
    bytes_0 = b"V\xe8\x92\xa2p\xaa\x90\xdc0\xb2\xae\x7f\xee\x18\x1e\r\x0e\xb3>"
    list_0 = []
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    validation_2 = module_0.Validation(var_2, list_0)
    var_4 = validation_0.__eq__(list_0)
    object_0 = module_1.object()
    bool_0 = False
    validation_3 = module_0.Validation(bool_0, validation_1)
    var_5 = validation_0.to_lazy()
    var_6 = validation_0.to_either()
    var_7 = var_6.__str__()
    validation_1.is_fail()
