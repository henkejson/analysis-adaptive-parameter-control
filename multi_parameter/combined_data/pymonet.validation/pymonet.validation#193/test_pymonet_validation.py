# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = 'c]d|+ " M0"Y\\!AQMGy'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.to_maybe()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    none_type_0 = None
    str_0 = "E*ypKKA$f"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    validation_0.map(none_type_0)


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_5():
    float_0 = 2369.1
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_7():
    complex_0 = 771.4319 + 364.796j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_fail()


def test_case_8():
    complex_0 = -1763.2 - 1955j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.map(complex_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    int_0 = -181
    none_type_0 = None
    validation_1 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_1.__eq__(int_0)
    validation_1.ap(none_type_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_either()


def test_case_13():
    str_0 = "rY@*wZu/=t#;X"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_either()
    var_2.is_success()


def test_case_14():
    float_0 = 1231.056
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    complex_0 = -237.45406 + 2897.892183j
    set_0 = set()
    list_0 = [set_0, complex_0, complex_0]
    list_1 = [list_0, complex_0, set_0]
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    int_0 = -181
    none_type_0 = None
    validation_1 = validation_0.__eq__(validation_0)
    var_0 = validation_1.__eq__(int_0)
    validation_1.ap(none_type_0)


def test_case_17():
    str_0 = 'c]d|+ " M0"Y\\!AQMGy'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.to_maybe()


def test_case_18():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    int_0 = -181
    none_type_0 = None
    validation_1 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_either()
    validation_1.is_success()
