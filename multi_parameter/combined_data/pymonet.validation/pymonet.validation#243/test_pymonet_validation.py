# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "J\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = str_0.__str__()
    validation_1 = module_0.Validation(str_0, var_2)
    var_3 = validation_1.__str__()


def test_case_1():
    str_0 = "pF$'"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.__str__()


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_0)
    var_0 = validation_0.to_maybe()
    bytes_0 = b"\xf4hI\xd1P\x94\xd3*K\xd3+\xaf"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.__str__()
    var_1.bind(var_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "J\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(var_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.__str__()
    validation_0.map(var_1)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    float_0 = -1822.6992
    validation_0 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_9():
    str_0 = "Rc"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(var_0)
    var_2 = validation_0.is_success()
    var_3 = validation_0.__eq__(var_2)
    var_4 = validation_0.__eq__(validation_0)
    var_5 = validation_0.to_box()
    var_3.is_fail()


def test_case_10():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_11():
    str_0 = "J\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_fail()
    var_4.map(var_4)


def test_case_12():
    str_0 = "J\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(str_0, str_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    var_0.map(var_1)


def test_case_13():
    str_0 = "J\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = validation_0.__eq__(validation_1)
    var_0.to_lazy()


def test_case_14():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.map(var_0)


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_fail()
    var_3.map(var_2)
