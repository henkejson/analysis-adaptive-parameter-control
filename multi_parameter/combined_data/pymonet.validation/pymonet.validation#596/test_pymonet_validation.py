# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.__str__()


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(var_1)
    var_1.bind(var_1)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = var_0.__str__()
    validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    int_0 = 0
    none_type_1 = None
    validation_1 = module_0.Validation(int_0, none_type_1)
    validation_1.map(validation_0)


def test_case_7():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, none_type_0)
    validation_1.bind(bool_0)


def test_case_8():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.is_success()


def test_case_10():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()


def test_case_11():
    bytes_0 = b"\xaa-N\xa4W."
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_4 = var_2.__str__()
    var_3.is_fail()


def test_case_12():
    none_type_0 = None
    int_0 = -3827
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.to_try()


def test_case_13():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(var_1)
    var_4 = var_2.to_lazy()


def test_case_14():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    dict_0.bind(dict_0)


def test_case_15():
    str_0 = "\n    All is a Monoid that will combine 2 values of any type using logical conjunction on their coerced Boolean values.\n    "
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(tuple_0)
    var_1.bind(str_0)


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = var_2.__str__()
    var_1.is_fail()


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.to_box()


def test_case_18():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = module_0.Validation(var_1, var_0)
    var_3 = validation_0.__eq__(var_2)
    var_4 = validation_0.to_lazy()
