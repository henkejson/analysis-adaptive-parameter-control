# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 6442
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    none_type_0 = None
    none_type_0.to_maybe()


def test_case_2():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_4():
    int_0 = 58
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.ap(var_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = False
    int_0 = 2069
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(bool_0)


def test_case_6():
    bytes_0 = b"m\xd8Q\x8c\xd4"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_maybe()
    var_2.to_box()


def test_case_9():
    bytes_0 = b"\x1f\x95&$h"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    validation_0.map(none_type_0)


def test_case_12():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()
    validation_1 = module_0.Validation(dict_0, var_0)
    var_3 = validation_0.__eq__(validation_1)
    var_3.to_lazy()


def test_case_13():
    bytes_0 = b'\x92 \xae\x86\x8c\x81\xbd\xe8"rm\xcf\xfc'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(validation_1)
    var_0.is_fail()


def test_case_14():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"\x82"
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_maybe()
    tuple_0 = (bytes_0,)
    var_3 = validation_0.__eq__(tuple_0)
    var_3.to_lazy()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    dict_0 = {}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_1.to_maybe()
    validation_0.to_maybe()
