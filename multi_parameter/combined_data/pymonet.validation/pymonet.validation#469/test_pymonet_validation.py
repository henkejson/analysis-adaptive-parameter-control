# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    bool_0.ap(bool_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__str__()
    var_2.map(var_0)


def test_case_2():
    str_0 = ">"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.bind(str_0)


def test_case_3():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    validation_0.map(dict_0)


def test_case_4():
    bytes_0 = b"~\xde\x03]\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_2 = validation_1.__eq__(bytes_0)
    validation_1.ap(bytes_0)


def test_case_5():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_6():
    none_type_0 = None
    none_type_0.to_maybe()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\r_a\x84\r\xb1H"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_9():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_1.bind(bool_0)


def test_case_10():
    int_0 = -348
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_11():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_1, none_type_0)
    validation_0.bind(bool_0)


def test_case_12():
    bytes_0 = b"~\xde\x03]\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.__eq__(bytes_0)
    validation_1.ap(bytes_0)


def test_case_13():
    bytes_0 = b"~\xde\x03]\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.to_lazy()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    validation_1 = module_0.Validation(dict_0, dict_0)
    var_3 = validation_1.__eq__(bytes_0)
    var_4 = var_1.__str__()
    var_5 = var_4.__str__()
    var_6 = validation_1.is_success()
    var_7 = validation_1.is_fail()
    var_8 = var_7.__eq__(var_7)
    var_9 = validation_0.to_box()
    var_9.to_box()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\x13I\xf9H\x08\tV\xac\x90'\xf5\xfa\xa9\xf7\x03\xd0;"
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.__eq__(var_0)
    validation_0.to_try()


def test_case_15():
    bytes_0 = b"~\xde\x03]\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_16():
    bytes_0 = b"\xf5~\xde\x03]\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    validation_1 = module_0.Validation(var_0, var_1)
    var_2 = validation_0.__eq__(validation_1)
    validation_0.map(var_2)
