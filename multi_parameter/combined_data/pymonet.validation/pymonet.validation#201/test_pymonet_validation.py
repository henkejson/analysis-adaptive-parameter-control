# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 18
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.bind(var_0)


def test_case_1():
    bytes_0 = b"_\x15h\xc3)\x12!\n\xc9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    int_0 = 10
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_3():
    bool_0 = False
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_fail()


def test_case_4():
    bytes_0 = b"$\xf0\xa0\xfb"
    bool_0 = True
    list_0 = [bytes_0, bool_0, bool_0]
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    tuple_0 = (set_0, bool_1, bool_1)
    validation_0 = module_0.Validation(tuple_0, bool_1)
    validation_0.map(list_0)


def test_case_5():
    str_0 = " \\jH3Y\\"
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(str_0)


def test_case_6():
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.ap(set_0)


def test_case_7():
    bool_0 = False
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.to_box()
    var_0.to_either()


def test_case_8():
    bool_0 = False
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(bool_0)
    var_1.to_either()


def test_case_9():
    str_0 = "\t?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(validation_0)
    var_2.bind(var_2)


def test_case_10():
    bytes_0 = b"\xc1b=\xd5\\f\xe1S\x1b0\xbc\xd2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_3 = validation_0.to_try()
    var_2.is_success()


def test_case_11():
    str_0 = "\t?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_12():
    str_0 = "\t?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.map(list_0)


def test_case_14():
    str_0 = "\t?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    validation_1 = module_0.Validation(var_0, str_0)
    var_1 = var_0.to_box()
    validation_2 = module_0.Validation(var_0, none_type_0)
    var_2 = validation_2.__eq__(validation_0)
    var_3 = validation_1.to_maybe()
    var_4 = var_3.__str__()
    validation_0.bind(var_3)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = var_0.ap(dict_0)
    var_2.to_either()
