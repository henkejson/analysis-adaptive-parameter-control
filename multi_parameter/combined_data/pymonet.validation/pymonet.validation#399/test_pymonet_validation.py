# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"f_\x04X\x8a\xa6h\xc3\xed\xd8\xe0g"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_2():
    bytes_0 = b"\xcb\xa4\x8cMcA\xdc\xa4\xbc\xe0\xf8No\xd9\x81"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    module_1.object(*var_1)


def test_case_4():
    bytes_0 = b"S\xa3\n\x10\xd6gp\xd9s%\xaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_5():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()


def test_case_6():
    bytes_0 = b"\x9b\x85\xda8\x01\xc9\xa9\x00\xbe\xd0\r\x99|^\x87\x85Fl\\\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_7():
    bytes_0 = b"\xaa\xcfb=R&9\x82\x16\x9d\x12\xf8\xdd\xe1[\xf1U|x"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_8():
    str_0 = "\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()


def test_case_9():
    str_0 = "=*oZ8"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_10():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.map(validation_0)


def test_case_11():
    bytes_0 = b"\x9b\x85\xda8\x01\xc9\xa9\x00\xbe\xd0\x99^\x87\x85Fl\\\xfd"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_12():
    bytes_0 = b"\nNcz,^"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_13():
    str_0 = "-cjY"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_14():
    bytes_0 = b"3\xd3\xf3\x7f\xd5X'd\x167\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_try()
    var_0.map(var_1)


def test_case_16():
    bytes_0 = b"\nNcz,^"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_either()
    var_1.to_box()


def test_case_17():
    bytes_0 = b"\xbc\x96V\x97g\xdb\x8d\x00\xfc\x9b<\x91\xf2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
