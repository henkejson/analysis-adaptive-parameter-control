# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    int_1 = 1
    var_0 = validation_0.__eq__(int_1)


def test_case_1():
    str_0 = "_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_lazy()
    var_4 = validation_0.to_box()
    var_5 = var_4.__str__()
    var_6 = validation_0.to_box()
    var_7 = var_3.ap(validation_0)
    var_5.is_fail()


def test_case_2():
    bytes_0 = b"\x11U"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_3():
    bool_0 = True
    var_0 = bool_0.__str__()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    int_0 = -5309
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xff"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.map(bytes_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_10():
    bytes_0 = b"\x98`\x0c\xfb\x83O\x1bJ\x14\x13\xaf,\xa0\xf1\x91\xa6B"
    str_0 = "\x0bE]1gJ%q35\x0bR&]"
    dict_0 = {str_0: str_0}
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_1 = validation_1.__eq__(dict_0)
    var_2 = var_1.__eq__(var_1)


def test_case_11():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bool_0 = True
    int_0 = 28
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(int_0)


def test_case_13():
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    bytes_0 = b"\xa8c\xeb7\xad\xbd'\x0e\x9e"
    str_0 = "v>?m$"
    set_0 = {str_0, str_0, str_0, str_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    bool_0 = False
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, validation_0)
    var_1 = validation_0.to_box()
    validation_2 = module_0.Validation(set_0, bool_0)
    var_2 = validation_1.__eq__(validation_0)
    var_2.bind(none_type_0)


def test_case_15():
    str_0 = "_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = str_0.__str__()
    var_1 = validation_0.__eq__(validation_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    bool_0 = False
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_2 = validation_1.to_box()
    var_2.ap(dict_0)


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    dict_0 = {}
    none_type_0 = None
    validation_1 = module_0.Validation(dict_0, none_type_0)
    var_2 = validation_0.is_fail()
    var_3 = validation_0.to_maybe()
    var_2.to_box()
