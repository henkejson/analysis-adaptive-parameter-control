# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    tuple_0 = ()
    int_0 = 2456
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_0.is_success()


def test_case_2():
    none_type_0 = None
    str_0 = "I',=q3R&/"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.map(none_type_0)


def test_case_3():
    bytes_0 = b"\r\xb3\x08\xb5N\x11\xc5Z\x1a*g\xba\xbf\x9e\n\x14>2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_either()
    var_3 = validation_0.__str__()
    var_4 = var_2.to_lazy()
    var_5 = var_4.to_box()
    var_6 = var_4.to_try()
    var_1.to_lazy()


def test_case_4():
    int_0 = -1580
    tuple_0 = (int_0, int_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(none_type_0)


def test_case_8():
    int_0 = -3261
    str_0 = "u<&_\x0b&#66nfyJBb"
    tuple_0 = (int_0, int_0, str_0)
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, none_type_0)
    validation_0.bind(tuple_0)


def test_case_9():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    object_0 = module_1.object()
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, bool_1)
    validation_1.ap(object_0)


def test_case_10():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)


def test_case_11():
    bytes_0 = b"h\xf3\xe1\xd3Q\xaa\xbd"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_2 = var_1.__eq__(var_1)
    validation_2 = module_0.Validation(bytes_0, bytes_0)


def test_case_12():
    int_0 = 1
    set_0 = {int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    validation_0.to_try()


def test_case_13():
    str_0 = ""
    bool_0 = False
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_0.bind(bool_0)


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = var_0.__str__()
    var_0.to_either()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"~\xcf"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()
