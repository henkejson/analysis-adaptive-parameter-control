# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "`o(c#?yF4ebg<'7("
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(str_0)


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    bytes_0 = b"\x16q"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__str__()
    var_2.to_try()


def test_case_3():
    bytes_0 = b"Ti\xf3\x0eL'\xf3E\xce\xc3X\x85}\xcf\xad\xe0W\x04\x8c"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_2 = var_0.map(none_type_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_3.bind(var_3)
    var_5 = var_0.__eq__(bytes_0)
    var_5.to_either()


def test_case_4():
    none_type_0 = None
    none_type_0.to_either()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    int_0 = -1035
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_maybe()


def test_case_7():
    object_0 = module_1.object()
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_1.to_maybe()


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.to_box()


def test_case_11():
    str_0 = "(D%\x0b\n+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    bytes_0 = b"Ti\xf3\x0eL'\xf3E\xce\xc3X\x85}\xcf\xad\xe0W\x04\x8c"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.to_try()
    var_3 = var_2.map(bytes_0)
    var_3.to_try()


def test_case_13():
    int_0 = 561
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    var_1 = validation_0.to_either()
    validation_0.ap(none_type_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.ap(var_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_fail()
    var_5 = var_1.to_try()
    var_4.to_either()


def test_case_17():
    bytes_0 = b"\x16q"
    set_0 = {bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.__str__()
    validation_2 = module_0.Validation(set_0, bytes_0)
    var_2 = validation_1.to_box()
    var_3 = validation_1.__str__()
    var_4 = validation_2.__eq__(validation_1)
    var_5 = validation_1.to_maybe()
    var_6 = validation_2.to_box()
    var_4.is_success()
