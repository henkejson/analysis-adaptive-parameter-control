# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"!\xf7\xff{\t"
    var_0 = module_0.Validation(bytes_0, bytes_0)
    var_1 = var_0.to_maybe()
    var_2 = var_0.__eq__(var_1)


def test_case_1():
    bytes_0 = b"!\xf7\xd7\xb5\xc7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_2():
    bytes_0 = b"!\xf7\xd7\xb5\xc7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    int_0 = 1431
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"!\xf7\xd7D\xc7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(var_0)


def test_case_7():
    bytes_0 = b"\x13\x1c\xf0\x87\xfaO\x91\x9f\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_8():
    none_type_0 = None
    int_0 = 0
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.__eq__(none_type_0)


def test_case_9():
    bytes_0 = b"!\xf7\xd7\xb5\xc7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_2 = validation_1.to_lazy()


def test_case_10():
    bytes_0 = b"\x13\x1c\xf0\x87\xfaO\x91\x9f\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = validation_0.to_try()
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(validation_1)
    var_1.ap(var_1)


def test_case_11():
    str_0 = " 9I5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_fail()
    var_3 = var_1.map(var_0)
    var_3.to_maybe()


def test_case_12():
    bytes_0 = b"\x13\x1c\xf0\x87\xfaO\x91\x9f\xa2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_1 = validation_0.to_maybe()
    validation_0.ap(none_type_0)


def test_case_13():
    bytes_0 = b"!\xf7\xd7\xb5\xc7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.ap(var_0)


def test_case_14():
    bytes_0 = b"v\xef\xb3\xfe\xda\x942#M\x89\x1f\xed\xa6\xc6"
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bytes_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_0.to_maybe()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    list_0 = [bool_0]
    validation_2 = module_0.Validation(list_0, bool_0)
    validation_1.to_either()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_0.to_lazy()


def test_case_17():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    validation_1 = module_0.Validation(var_1, validation_0)
