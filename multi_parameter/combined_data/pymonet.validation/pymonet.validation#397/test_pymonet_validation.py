# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.__eq__(none_type_0)
    var_1 = validation_1.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_3():
    int_0 = 458
    bytes_0 = b"\xb1\xcf\xc7\x8b\x17\xc4\x9f\xa1[\xbd\x06F\xd6F\xb9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.to_box()
    var_3 = var_2.to_try()
    var_3.map(int_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_6():
    int_0 = 479
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(dict_0)


def test_case_8():
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    int_0 = 2072
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_0.bind(int_0)


def test_case_9():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    validation_0.ap(validation_0)


def test_case_10():
    complex_0 = -2064.2184 + 1254.1266j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    validation_0.to_maybe()


def test_case_11():
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b"\xb3 *%\x9d\x90\xb9D\x8b\xa1\x81]"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()


def test_case_13():
    int_0 = 2052
    int_1 = 2052
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_1)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(int_0)
    var_3 = var_1.to_box()
    var_4 = var_3.__eq__(var_0)


def test_case_14():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, set_0)
    validation_1 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    validation_0.map(var_0)


def test_case_15():
    int_0 = 458
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    validation_0 = module_0.Validation(bytes_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    none_type_0 = None
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    validation_2 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_2.__eq__(var_0)
    validation_3 = module_0.Validation(var_1, var_1)
    validation_4 = module_0.Validation(none_type_0, validation_0)
    validation_5 = module_0.Validation(var_0, validation_0)
    var_2 = validation_2.__eq__(validation_3)
    validation_5.__str__()


def test_case_17():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = True
    dict_0 = {tuple_0: bool_0, bool_0: tuple_0}
    tuple_1 = (tuple_0, bool_0, dict_0, bool_0)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.__str__()
    var_0.ap(none_type_0)


def test_case_18():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bytes_0 = b"\x90\xd3.\x1e\x7f\x1b\xf2f\x92\x82q\xd9\x1e\xfb\x9f\xef"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_3 = module_0.Validation(validation_2, tuple_0)
    var_1 = var_0.__str__()
    var_2 = var_0.to_maybe()
