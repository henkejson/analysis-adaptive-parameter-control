# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = -28
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(dict_0, var_0)
    var_1 = validation_1.__eq__(var_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_1.to_lazy()


def test_case_3():
    int_0 = 3078
    str_0 = "?F"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(int_0)
    var_2 = var_1.__str__()
    var_2.ap(int_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    bytes_0 = b"\x94\xc9x\xff\xe4\x93\xb3?"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    int_0 = 3073
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_8():
    bytes_0 = b"\x9b8\xe1%>i\x90\x94\xe8\x1b~"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_9():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_11():
    int_0 = -28
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b"\x94\xc9\xec\xff\xe4\x93t\xaf\xb8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_13():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_14():
    str_0 = "uI`aEj_u![h2_l~N"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_1, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.__str__()
    var_2.map(none_type_0)


def test_case_16():
    str_0 = ".((;M)(pGb\\5\\8cKV("
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(str_0)
    var_2 = var_1.map(str_0)
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_17():
    bytes_0 = b"}\xcb\xacA\x16\xddc\x95\xf4\xc5\xf0\x9d\xb3\x8a\x91"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_18():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_1.to_either()
