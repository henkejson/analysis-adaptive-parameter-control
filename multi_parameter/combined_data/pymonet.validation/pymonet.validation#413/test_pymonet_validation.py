# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x0b\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    float_0 = -1899.924
    var_0 = validation_0.__eq__(float_0)


def test_case_1():
    bytes_0 = b"\xc5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    validation_0.bind(dict_0)


def test_case_3():
    bytes_0 = b"\xec\xc5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    str_0 = "I\x0b\x0bn\t8SF_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_6():
    int_0 = -1449
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(validation_0)


def test_case_7():
    int_0 = -1450
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_8():
    bytes_0 = b"\xc6\xf5\x84\xf3\x12\xfc2\x86H?\xf3#\x92\xa0\xe2#"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    int_0 = 38
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    bytes_0 = b"XH6"
    int_0 = -1262
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__eq__(int_0)
    tuple_0 = (int_0, int_0, var_2)
    validation_1 = module_0.Validation(bytes_0, tuple_0)


def test_case_11():
    str_0 = "I\x0b\x0bH8SF_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    bytes_0 = b"$J\xe7`M\xce\xbc\xa1L\xf9\x06\xfc[f\x89R\xb9?\xf5\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, bytes_0)


def test_case_13():
    bytes_0 = b"T\xe0|\x86i\xa7\xd9;'"
    str_0 = "H!]Ub-e])/tHkxkc"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    bytes_0 = b"\xd3?\x926\xf5A@\xaa\xa1\x0f\xfa\xbb\x937\xb6\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(bytes_0, bytes_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    str_0 = "\x0cNAo:WNkKfC{\\T}'ZN[k"
    validation_1 = module_0.Validation(validation_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.__eq__(validation_0)
    var_1.to_try()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_17():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
