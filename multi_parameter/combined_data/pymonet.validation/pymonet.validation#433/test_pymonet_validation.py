# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = ";"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    str_0 = "\x0cK)/quH}T+{!_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_2():
    str_0 = "lX`w|4B7mmJ"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_3():
    str_0 = "jz`X -*)TaavR{#@-;\x0b2"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    str_0 = "\n        Transform Maybe into Validation.\n\n        :returns: successfull Validation monad with previous value or None when Maybe is empty\n        :rtype: Validation[A, []]\n        "
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    str_0 = ";"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    str_0 = "jz`(X -*)TaavR#@-;\x0b2"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_8():
    str_0 = "\x0cK)/qAH}T+{!_"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(validation_0)


def test_case_9():
    str_0 = 'Y8$W"Uc5Ru'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_10():
    str_0 = "\x0cK)/quKJO+{!_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "\n        Transform Maybe into Validaton.\n\n        :returns: successfull Validation monad with previous value or None when Maybe is empty\n        :rtype: Validation[A, []]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_0.__eq__(dict_0)
    var_2 = var_0.to_maybe()
    str_0 = "y,4"
    var_3 = var_2.__eq__(str_0)


def test_case_13():
    str_0 = "~t1,9lr#'$>hs[{|\x0czJ{"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_try()


def test_case_14():
    str_0 = "Pt8_XpE"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(dict_0, var_0)
    var_1 = var_0.__eq__(var_0)
    var_0.is_success()


def test_case_16():
    dict_0 = {}
    str_0 = "\x0cK)/qub}O+{!_"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(dict_0, var_1)
    var_2 = validation_1.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_1.to_box()
    var_0.is_fail()


def test_case_17():
    dict_0 = {}
    str_0 = "\x0cK)/qub}O+{!_"
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_either()
    validation_1 = var_0.__eq__(var_0)
    validation_1.to_lazy()
