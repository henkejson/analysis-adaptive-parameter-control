# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(timer_0)


def test_case_5():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(timer_error_0, logger=none_type_0)
    user_dict_0 = timer_0.__call__(none_type_0)
    var_0 = timer_0.__call__(timer_error_0)
    var_0.__call__(var_0)


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, timer_error_0, timer_error_1)
    var_0 = timer_0.__call__(timer_error_0)
    var_1 = timer_0.__call__(timer_0)
    var_0.__call__(timer_0)


def test_case_7():
    str_0 = "DXgQum-r\x0cM4nh\\"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = None
    var_0 = timer_0.__call__(timer_0)
    tuple_0 = (var_0, timer_0)
    var_1 = timer_0.__eq__(tuple_0)
    var_2 = timer_0.__call__(none_type_0)
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    var_3 = timer_0.__repr__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = module_0.Timer(text=timer_0)
    var_0 = timer_1.__call__(timer_error_0)
    var_0.__call__(timer_error_0)
