# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_2():
    str_0 = '"Z'
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_2.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_2.__enter__()
    list_0 = []
    none_type_0 = timer_0.__exit__(*list_0)
    none_type_1 = timer_2.__exit__()
    timer_1.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    list_0 = [timer_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_1 = module_0.Timer(list_0)
    var_0 = timer_1.__eq__(none_type_0)
    timer_2 = timer_0.__enter__()
    timer_3 = timer_1.__enter__()
    timer_3.__exit__()


def test_case_7():
    str_0 = '"Z'
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = timer_0.__eq__(none_type_0)
    float_0 = timer_1.__repr__()
    timer_2.__enter__()


def test_case_8():
    str_0 = '"Z'
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(text=str_0, logger=none_type_0)
    timer_2.stop()


def test_case_9():
    str_0 = '"Z'
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=str_0)
    timer_2 = timer_0.__enter__()
    timer_3 = module_0.Timer(str_0, initial_text=timer_0, logger=timer_0)
    timer_4 = timer_3.__enter__()
    module_1.dataclass(timer_1, match_args=str_0)
