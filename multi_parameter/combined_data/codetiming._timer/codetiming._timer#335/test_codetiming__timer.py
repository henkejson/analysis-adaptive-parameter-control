# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = timer_0.__repr__()
    var_2 = var_0.__call__(var_1)
    timer_0.__exit__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_1, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_1.dataclass(kw_only=timer_error_0, slots=timer_error_0)
    timer_0 = module_0.Timer(text=timer_error_1, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(timer_1)
    timer_0.stop()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(str_0, str_0, str_0, timer_error_1)
    timer_0.__enter__()


def test_case_7():
    str_0 = "w>rg(GG32p"
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, initial_text=bool_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    float_arg_0 = module_0.FloatArg()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    var_0 = module_1.dataclass(kw_only=timer_error_0, slots=timer_error_0)
    timer_0 = module_0.Timer(var_0, var_0, timer_error_0)
    timer_error_1 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    list_0 = [var_0, timer_error_0, timer_0]
    var_1 = timer_0.__eq__(timer_1)
    var_1.__contains__(list_0)
