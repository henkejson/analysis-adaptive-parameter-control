# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    list_0 = [timer_0]
    float_arg_0 = module_0.FloatArg()
    timer_0.__exit__(*list_0)


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    str_0 = "minuesU"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_1.__eq__(str_0)
    timer_1.__enter__()


def test_case_6():
    str_0 = "minutes"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_7():
    str_0 = "minutes"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_0.keys()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_1.__exit__()
    none_type_2 = timer_0.start()
    var_0 = timer_1.__eq__(none_type_0)
    timer_0.__enter__()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    bytes_0 = b"0i3\xe9\x95\xef\x7f\xf0j3\x0e\xec\x98\xffv\xfeU\xde"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0, logger=bytes_0)
    timer_0.start()


def test_case_11():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = module_0.Timer(timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    timer_2.__exit__()
