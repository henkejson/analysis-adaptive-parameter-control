# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(none_type_0)
    var_1 = timer_0.__eq__(timer_0)
    float_0 = timer_0.stop()
    var_1.median(var_1)


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = None
    list_0 = [none_type_1, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    timer_error_0 = module_0.TimerError(*list_0)
    none_type_3 = timer_0.start()
    timer_1 = module_0.Timer(timer_error_0, list_0, list_0)
    timer_2 = timer_1.__enter__()
    bool_0 = False
    var_0 = module_1.dataclass(repr=bool_0, eq=none_type_0)
    var_0.clear()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = None
    list_0 = [none_type_1, none_type_0]
    none_type_2 = timer_0.__exit__(*list_0)
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(initial_text=var_0)
    timer_1.__enter__()


def test_case_8():
    int_0 = 3153
    none_type_0 = None
    timer_0 = module_0.Timer(int_0, logger=none_type_0)
    user_dict_0 = module_2.UserDict()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_1.stop()
