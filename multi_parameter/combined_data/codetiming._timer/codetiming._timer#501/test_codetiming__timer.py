# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_2():
    str_0 = '^hv-&$ry"'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__exit__()


def test_case_3():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(text=bool_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    bool_0 = False
    str_0 = "f\x0bs,7nOR T-.G"
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=bool_0)
    timer_1 = module_0.Timer(logger=bool_0)
    var_0 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    user_dict_0 = module_1.UserDict()
    list_0 = []
    none_type_0 = timer_0.__exit__(*list_0)
    timer_3 = module_0.Timer(none_type_0, initial_text=bool_0, logger=var_0)
    timer_error_0 = module_0.TimerError(*user_dict_0)
    timer_error_1 = module_0.TimerError()
    var_1 = module_2.dataclass(order=timer_3)
    timer_4 = module_0.Timer(var_1)
    timer_5 = timer_2.__enter__()
    timer_error_2 = module_0.TimerError()
    timer_6 = module_0.Timer(initial_text=var_1, logger=timer_5)


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_2 = timer_1.__enter__()
    timer_0.start()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_7():
    bool_0 = True
    str_0 = "f\x0bs,7nOR T-.G"
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=bool_0)
    timer_0.__enter__()


def test_case_8():
    bool_0 = False
    str_0 = "I8T-M8@P/-G"
    timer_0 = module_0.Timer(str_0, initial_text=str_0, logger=bool_0)
    timer_1 = module_0.Timer(logger=bool_0)
    var_0 = timer_1.__call__(timer_0)
    timer_2 = timer_1.__enter__()
    timer_3 = timer_0.__enter__()
    list_0 = [var_0]
    none_type_0 = timer_0.__exit__(*list_0)
    timer_4 = module_0.Timer(text=timer_1, initial_text=var_0, logger=str_0)
    timer_4.start()
