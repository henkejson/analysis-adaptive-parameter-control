# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    tuple_0 = ()
    timer_0 = module_0.Timer(logger=tuple_0)
    var_0 = timer_0.__eq__(tuple_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    str_0 = "\\OD,2_"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_4():
    str_0 = "\\OD,2_"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0, initial_text=none_type_0)
    timer_error_0 = timer_0.__repr__()
    var_0 = timer_1.__eq__(timer_2)
    var_1 = var_0.__eq__(timer_2)
    str_0 = "\nIT>tnJ/DhFRkP\tq"
    var_1.apply(timer_1, str_0)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0, initial_text=timer_0)
    timer_error_0 = module_1.dataclass()
    bool_0 = True
    var_0 = timer_0.__eq__(bool_0)
    str_0 = "\nIT>tnJ/DhFRkP\tq"
    float_arg_1 = module_0.FloatArg()
    var_0.apply(timer_1, str_0)


def test_case_8():
    str_0 = "&)F Ae(5j>4?q\x0bh+"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_9():
    str_0 = "\\OD,2_"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=str_0)
    none_type_0 = timer_1.start()
    float_0 = timer_1.stop()
    var_0 = timer_1.__repr__()
    timer_1.stop()
