# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    bool_0 = False
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=bool_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(timer_0)
    var_1 = var_0.__repr__()
    float_arg_1 = module_0.FloatArg()
    timer_0.start()


def test_case_2():
    str_0 = "Timer tated"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()


def test_case_3():
    list_0 = []
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0.stop()


def test_case_4():
    str_0 = "Timer started"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    var_1 = timer_0.__repr__()
    timer_2 = module_0.Timer()
    none_type_0 = None
    timer_3 = module_0.Timer(initial_text=none_type_0, logger=var_0)
    none_type_1 = timer_0.__exit__()
    timer_0.stop()


def test_case_5():
    str_0 = "Timer tated"
    timer_0 = module_0.Timer(str_0, logger=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.stop()


def test_case_6():
    str_0 = "Timer tated"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_7():
    str_0 = "Timer started"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__repr__()


def test_case_9():
    str_0 = "Timer started"
    none_type_0 = None
    var_0 = module_1.field(default_factory=none_type_0, repr=none_type_0)
    timer_0 = module_0.Timer(str_0, initial_text=var_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_1.__eq__(timer_0)
    var_2 = var_0.__repr__()
    var_3 = var_0.__repr__()
    var_2.update()


def test_case_10():
    str_0 = ""
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = None
    var_0 = module_1.field(default=none_type_0, hash=none_type_0, metadata=none_type_0)
    timer_1 = module_0.Timer(text=str_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()


def test_case_11():
    str_0 = "Timer started"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=str_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    var_0 = timer_2.__repr__()
