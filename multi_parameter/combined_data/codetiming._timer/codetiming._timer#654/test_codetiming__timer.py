# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import builtins as module_2
import dataclasses as module_3


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bytes_0 = b"P\xafd\xb2\\\xe3V&\xf22E\xa3\x8c\xdd\xd0"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    bool_0 = True
    timer_1 = module_0.Timer(bytes_0, initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    timer_2.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    str_0 = '"EuE3\\F;JJAjy'
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__(*none_type_0)


def test_case_6():
    bytes_0 = b"P\xafd\xb2\\\xe3V&\xf22E\xa3\x8c\xdd\xd0"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    list_0 = []
    none_type_0 = timer_0.__exit__(*list_0)
    var_0 = timer_0.__eq__(timer_0)


def test_case_7():
    timer_0 = module_0.Timer()
    timers_0 = module_1.Timers()
    str_0 = "U=3ak{g\\\tX"
    timer_1 = module_0.Timer(str_0, timer_0, str_0)
    timer_2 = timer_0.__enter__()
    timer_1.start()


def test_case_8():
    str_0 = "\nw3aGyH/Y8.}\n5SN<I"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, logger=none_type_0)
    timer_1 = module_0.Timer(timer_0, str_0, logger=none_type_0)
    timer_2 = timer_0.__enter__()
    timer_0.start()


def test_case_9():
    none_type_0 = None
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=none_type_0)
    exception_0 = module_2.Exception()
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(none_type_0, initial_text=exception_0)
    none_type_2 = timer_1.start()
    var_1 = timer_1.__call__(none_type_0)
    float_arg_1 = module_0.FloatArg()
    var_1.__contains__(none_type_0)


def test_case_10():
    bytes_0 = b"P\xafd\xb2\\\xe3V&\xf22E\xa3\x8c\xdd\xd0"
    timer_0 = module_0.Timer(text=bytes_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_0 = timer_1.start()
    var_0 = timer_1.__eq__(bytes_0)
    none_type_1 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError()
    var_1 = module_3.dataclass(none_type_1, repr=timer_1, unsafe_hash=none_type_0)
    timer_3 = module_0.Timer(none_type_0, initial_text=none_type_1, logger=var_1)
    var_1.__getitem__(var_0)
