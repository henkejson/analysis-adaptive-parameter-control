# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = module_1.field()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timers_0 = timer_1.__call__(timer_0)
    timer_1.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    var_0 = timer_0.__call__(none_type_0)
    timer_2 = module_0.Timer(text=var_0, logger=none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_3.__exit__()


def test_case_7():
    str_0 = ";\\\naqJ7!#>P=*j"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.start()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0, timer_1, timer_0)
    none_type_0 = None
    var_0 = timer_1.__eq__(none_type_0)
    timer_3 = timer_2.__enter__()
    var_0.pop(none_type_0)


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = "]D&wrk+J'\rp($vPEf."
    timer_2 = module_0.Timer(str_0)
    timer_3 = timer_2.__enter__()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    none_type_1 = timer_3.__exit__(*list_0)


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_1)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_2.__exit__()
