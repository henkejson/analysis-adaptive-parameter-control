# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1
import collections as module_2
import codetiming._timers as module_3
import dataclasses as module_4


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    list_0 = []
    bytes_0 = b"\xcf\x0e\xf8\xdf"
    list_1 = [list_0, bytes_0, list_0]
    exception_0 = module_1.Exception(*list_1)
    str_0 = "\\"
    timer_0 = module_0.Timer(text=exception_0, initial_text=str_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    bytes_0 = b"\xcf\x0e\xf8\xdf"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    str_0 = "9e~\tO\t*@bEFl"
    timer_0 = module_0.Timer(str_0)
    timer_0.stop()


def test_case_4():
    user_dict_0 = module_2.UserDict()
    timer_0 = module_0.Timer(user_dict_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__(*user_dict_0)
    none_type_0.stop()


def test_case_5():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timers_0 = module_3.Timers(**dict_0)
    var_0 = timer_1.__repr__()
    float_0 = timer_1.stop()
    var_1 = module_3.Timers(**dict_0)
    var_1.__enter__()


def test_case_6():
    user_dict_0 = module_2.UserDict()
    none_type_0 = None
    timer_0 = module_0.Timer(user_dict_0)
    var_0 = user_dict_0.get(none_type_0)
    var_1 = user_dict_0.__setitem__(var_0, user_dict_0)
    var_2 = user_dict_0.__contains__(none_type_0)
    timer_1 = timer_0.__enter__()
    var_3 = user_dict_0.__len__()
    timer_0.__exit__(*user_dict_0)


def test_case_7():
    list_0 = []
    bytes_0 = b"\xcf\x0ee\xf8\xdf"
    list_1 = [list_0, bytes_0, list_0]
    exception_0 = module_4.dataclass(
        init=list_0, repr=bytes_0, order=list_0, frozen=list_1
    )
    str_0 = "\\"
    timer_0 = module_0.Timer(text=exception_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.stop()


def test_case_8():
    bytes_0 = b"\xcf\x0e\xf8\xdf"
    str_0 = ""
    var_0 = module_4.dataclass(order=bytes_0, frozen=bytes_0)
    var_1 = var_0.__eq__(str_0)
    timer_0 = module_0.Timer(var_1, initial_text=var_0, logger=var_0)
    timer_0.__enter__()
