# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    none_type_0 = timer_0.start()


def test_case_2():
    str_0 = "h3`sEr=?leo5"
    timer_0 = module_0.Timer(str_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    int_0 = -1958
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(text=int_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_7():
    str_0 = "`xa3h$]DH,\\0,r"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(logger=str_0)
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.__exit__()
    timer_4 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_1.__exit__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    str_0 = 'Y~\tG"/p";V@ROb! '
    timer_0 = module_0.Timer(str_0, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_1.start()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = timer_0.__repr__()
