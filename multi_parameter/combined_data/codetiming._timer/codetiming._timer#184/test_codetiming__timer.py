# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    none_type_0 = timer_0.start()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    none_type_0 = timer_0.__repr__()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_1 = timer_0.__call__(timer_0)
    var_0 = timer_1.__call__(none_type_0)
    var_0.get(var_0, none_type_0)


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()
    var_0 = timer_0.__call__(timer_0)
    none_type_2 = timer_0.__exit__()
    var_1 = timer_0.__repr__()
    var_2 = var_1.__iter__()
    timer_1 = module_0.Timer(text=var_2, initial_text=none_type_2, logger=none_type_0)
    float_arg_0 = module_0.FloatArg()
    timer_2 = timer_1.__enter__()
    int_0 = -1259
    var_3 = timer_1.__eq__(int_0)
    module_0.TimerError(**var_2)


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__iter__()
    timer_1 = module_0.Timer(logger=none_type_2)
    var_0.total(var_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__repr__()


def test_case_9():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.start()


def test_case_10():
    int_0 = -1577
    timer_0 = module_0.Timer(int_0, initial_text=int_0, logger=int_0)
    var_0 = timer_0.__eq__(int_0)
    timer_1 = module_0.Timer()
    timer_0.__enter__()


def test_case_11():
    none_type_0 = None
    set_0 = {none_type_0}
    float_arg_0 = module_1.dataclass(
        repr=set_0, frozen=none_type_0, kw_only=set_0, slots=set_0
    )
    none_type_1 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_1, logger=none_type_1)
    none_type_2 = timer_0.start()
    none_type_3 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_12():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__len__()
    var_2 = var_0.__iter__()
    var_1.items()
