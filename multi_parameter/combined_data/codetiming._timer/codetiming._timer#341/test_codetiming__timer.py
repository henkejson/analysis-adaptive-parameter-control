# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=float_arg_0)
    timer_2 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    none_type_0 = timer_2.start()
    timer_3 = module_0.Timer(none_type_0, none_type_0)
    timer_2.start()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=float_arg_0)
    timer_2 = module_0.Timer(float_arg_0, float_arg_0, float_arg_0)
    none_type_0 = timer_2.start()


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer(logger=none_type_0)
    bool_0 = False
    timer_3 = module_0.Timer(initial_text=bool_0)
    none_type_1 = timer_2.start()
    timer_4 = timer_1.__enter__()
    var_1 = timer_4.__eq__(timer_4)
    var_2 = timer_0.__repr__()
    timer_5 = module_0.Timer(text=var_1)
    timer_6 = module_0.Timer(text=none_type_1)


def test_case_7():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(text=float_arg_0)
    none_type_0 = None
    timer_2 = module_0.Timer(none_type_0, initial_text=timer_0)
    none_type_1 = timer_2.start()
    var_0.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__eq__(var_0)
    float_0 = var_1.__ror__(var_1)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(text=var_1, initial_text=var_0)
    timer_1.start()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    str_0 = "pdaly0\x0b]<.>>\x0c&*#\rX"
    dict_0 = {str_0: str_0}
    user_dict_0 = module_1.UserDict(**dict_0)
    var_0 = user_dict_0.__len__()
    var_0.copy()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(timer_error_0, timer_error_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_error_0.__eq__(timer_error_0)
    float_0 = timer_1.stop()
    str_0 = "%%P+fJ"
    str_1 = "__^,^48{g(hN!@;M"
    list_0 = [str_1, str_0]
    module_0.FloatArg(*list_0)


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_2 = module_0.Timer(text=timer_1)
    timer_3 = timer_1.__enter__()
    timer_4 = timer_2.__enter__()
    none_type_0 = timer_2.__exit__()
    var_0 = timer_1.__eq__(timer_3)
    timer_2.stop()
