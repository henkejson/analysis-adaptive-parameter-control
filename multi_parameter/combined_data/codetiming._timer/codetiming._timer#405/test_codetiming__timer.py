# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__call__(timer_1)


def test_case_4():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = module_0.Timer(initial_text=set_0, logger=set_0)
    timer_2 = timer_0.__enter__()
    timer_2.start()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    str_0 = "kPKm(1.fe\tK_Tv>n&~Kn"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    str_0.get(str_0)


def test_case_7():
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(initial_text=float_arg_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_2.__exit__()
    none_type_1 = timer_1.start()
    timer_3 = timer_0.__enter__()
    var_0 = timer_1.__repr__()


def test_case_8():
    timer_0 = module_0.Timer()
    float_arg_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(initial_text=float_arg_0, logger=timer_0)
    timer_1.__enter__()


def test_case_9():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = module_0.Timer(initial_text=set_0, logger=set_0)
    none_type_0 = None
    str_0 = "(S!G6%y"
    timer_2 = module_0.Timer(none_type_0, str_0, str_0, none_type_0)
    var_0 = timer_0.__eq__(none_type_0)
    timer_3 = module_0.Timer(var_0, initial_text=var_0)
    timer_4 = timer_3.__enter__()
    timer_3.start()


def test_case_10():
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = module_0.Timer(text=timer_0)
    var_0 = timer_1.__eq__(timer_1)
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_0)
    timer_3 = timer_0.__enter__()
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    var_0.min(none_type_1)
