# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    list_0 = [timer_0, timer_0, timer_0]
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_0)
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer(text=timer_0, initial_text=var_0)
    var_1 = timer_1.__repr__()
    none_type_1 = None
    timer_3 = module_0.Timer(text=none_type_0, logger=none_type_1)
    none_type_2 = timer_3.start()
    var_2 = module_1.dataclass(none_type_0, kw_only=none_type_0)
    timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    str_0 = "Timer is running. Use .stop() to stop it"
    dict_0 = {str_0: str_0, str_0: float_arg_0}
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    none_type_0 = timer_0.start()
    module_2.Timers(**dict_0)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_0)
    none_type_0 = timer_0.__exit__()
    none_type_1 = None
    var_1 = timer_1.__eq__(none_type_1)
    timer_2 = module_0.Timer(text=timer_0, initial_text=var_0)
    timer_3 = timer_2.__enter__()
    none_type_2 = None
    float_0 = timer_2.stop()
    var_2 = var_1.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_4 = module_0.Timer(text=none_type_0, logger=none_type_2)
    var_0.keys()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    set_0 = set()
    str_0 = "b_x3\tS(|"
    none_type_1 = None
    timer_1 = module_0.Timer(text=none_type_1, logger=none_type_1)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    none_type_2 = None
    var_0 = module_1.dataclass(init=str_0, unsafe_hash=str_0, kw_only=set_0)
    var_0.__getitem__(none_type_2)


def test_case_10():
    str_0 = "2"
    timer_0 = module_0.Timer(str_0, str_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_0 = timer_2.__exit__()
    timer_1.stop()


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(timer_0)
    none_type_0 = None
    var_1 = timer_1.__eq__(none_type_0)
    timer_2 = module_0.Timer(var_1, timer_0, var_1, timer_0)
    timer_3 = timer_2.__enter__()
    timer_error_0 = module_0.TimerError()
    var_0.clear()
