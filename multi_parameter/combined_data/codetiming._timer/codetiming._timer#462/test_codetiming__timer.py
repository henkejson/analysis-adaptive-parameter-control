# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    module_0.TimerError(*timer_0)


def test_case_2():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    list_0 = []
    float_arg_0 = module_0.FloatArg(*list_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_4():
    int_0 = -3269
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    list_0 = []
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=list_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    float_0 = timer_1.stop()
    timer_0.__exit__(*list_0)


def test_case_7():
    str_0 = "W\x0cIO2j2v*4"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    str_1 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    str_2 = "\r"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_0.FloatArg(**dict_0)


def test_case_8():
    float_0 = 172.71
    bool_0 = True
    timer_0 = module_0.Timer(float_0, initial_text=bool_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_0.__enter__()
    none_type_0 = timer_2.__exit__()
    none_type_1 = timer_0.start()
    float_1 = timer_2.stop()
