# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=list_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__(*list_0)
    timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()


def test_case_3():
    float_0 = -130.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = True
    timer_0 = module_0.Timer(text=dict_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_4():
    str_0 = "Eu=7\x0c}tTA"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_0.__enter__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(list_0, initial_text=float_arg_1)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_1)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(text=float_arg_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_2 = module_0.Timer(text=none_type_1, logger=none_type_0)
    none_type_2 = timer_0.start()
    timer_0.start()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    timer_0 = module_0.Timer(initial_text=list_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__(*list_0)
    none_type_1 = timer_1.start()
    timer_0.start()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    list_0 = [float_arg_0]
    float_arg_1 = module_1.dataclass(init=list_0, kw_only=list_0, slots=float_arg_0)
    timer_0 = module_0.Timer(text=float_arg_1, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()
