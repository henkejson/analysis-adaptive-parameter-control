# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    bytes_0 = b"\xe9\x11\r]\xd5("
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    bytes_0 = b"\x92F\xbf\x0e"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    str_0 = "tCs>w2{K"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_0.update()


def test_case_6():
    bytes_0 = b"\xe9\x11\r]\xd5("
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_7():
    bytes_0 = b"\xe9\x11\r]\xd5("
    timer_0 = module_0.Timer(bytes_0, bytes_0, bytes_0)
    none_type_0 = timer_0.start()
    list_0 = [none_type_0]
    timer_0.__exit__(*list_0)


def test_case_8():
    bytes_0 = b"\xe9\x11\r]\xd5("
    none_type_0 = None
    timer_0 = module_0.Timer(bytes_0, initial_text=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_9():
    bytes_0 = b"Byt\x04\xbde6\x1a\xc4x~\x18,\xf5\x10"
    str_0 = " GDFh{=A\x0c"
    timer_0 = module_0.Timer(bytes_0, str_0, str_0)
    timer_0.start()


def test_case_10():
    bytes_0 = b"\xe9\x11\r]\xd5("
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    none_type_2 = timer_1.start()
    timer_1.__enter__()
