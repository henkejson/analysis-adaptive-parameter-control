# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = 'K4^{V["Uigy4V(7&1RG'
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    str_0 = "+%~\rj^z+!;?"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    float_0 = timer_1.stop()
    timer_1.stop()


def test_case_4():
    int_0 = 60
    timer_0 = module_0.Timer(text=int_0)
    none_type_0 = timer_0.start()
    timer_0.__exit__()


def test_case_5():
    str_0 = "+%~\rj^z+!;?"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    var_0.stop()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_7():
    str_0 = "+%~\rj^z+!;?"
    timer_0 = module_0.Timer(logger=str_0)
    list_0 = [str_0]
    timer_1 = module_0.Timer(initial_text=list_0)
    timer_2 = timer_1.__enter__()
    timer_0.__exit__()


def test_case_8():
    str_0 = "+%~\rj^z+!;?"
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(str_0, str_0, timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_0.__eq__(timer_2)
    var_1 = timer_2.__repr__()
    var_0.stop()


def test_case_9():
    str_0 = "+%~\rj^z+!;?"
    timer_0 = module_0.Timer()
    bool_0 = True
    timer_1 = module_0.Timer(bool_0, timer_0, logger=str_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_2.__repr__()
    timer_2.stop()
