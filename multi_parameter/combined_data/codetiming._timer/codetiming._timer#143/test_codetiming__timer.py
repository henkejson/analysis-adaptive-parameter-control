# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, initial_text=timer_error_0)
    timer_0.stop()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    timer_1 = timer_0.__call__(timer_0)
    timer_1.__call__(timer_1)


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    timer_0 = module_0.Timer(none_type_0, none_type_1, none_type_0)
    str_0 = "|:^<8[/ <>G"
    dict_0 = {none_type_0: none_type_0, str_0: str_0}
    timer_1 = module_0.Timer(text=dict_0, initial_text=timer_0, logger=none_type_0)
    none_type_2 = timer_1.start()
    module_0.FloatArg(**dict_0)


def test_case_7():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_1.__enter__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    none_type_1 = None
    timer_1 = module_0.Timer(none_type_1, initial_text=timer_error_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    list_0 = [timer_1, timer_error_0]
    timer_1.__exit__(*list_0)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(
        timer_error_0, initial_text=none_type_0, logger=none_type_0
    )
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    list_0 = [timer_0, timer_error_0]
    timer_0.__exit__(*list_0)
