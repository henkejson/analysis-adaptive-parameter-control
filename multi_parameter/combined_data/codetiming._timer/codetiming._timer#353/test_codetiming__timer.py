# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(timer_0)


def test_case_4():
    str_0 = '|Kw"p\x0cLx\\83'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_6():
    str_0 = '|Kw"p\x0cLx\\83'
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_2 = timer_0.__call__(str_0)
    timer_error_0 = module_1.dataclass(order=timer_1, frozen=timer_0)
    str_0.__enter__()


def test_case_7():
    bytes_0 = b"\xd9\x80(=\xcf%\xa4\x0846\xaf}\xc9\xd3\xe9C\xc0i\xdb"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(timer_1)
    str_0 = "minutes"
    none_type_0 = None
    timer_2 = module_0.Timer(str_0, timer_1, none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_3.__exit__()
    var_1 = module_1.dataclass(eq=var_0)
    list_0 = [timer_2]
    var_2 = module_1.dataclass(repr=timer_1, match_args=str_0, slots=bytes_0)
    timer_4 = module_0.Timer(text=timer_0)
    var_3 = module_1.dataclass(
        repr=timer_1, unsafe_hash=timer_3, kw_only=var_0, slots=var_2
    )
    str_1 = " does not support item assignment. Use '.add() to update values."
    list_0.min(str_1)


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_9():
    bool_0 = True
    bool_1 = False
    timer_0 = module_0.Timer(bool_0, bool_1, bool_0)
    timer_1 = timer_0.__enter__()
