# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "Timer"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=float_arg_0)
    var_0 = timer_0.__eq__(timer_0)
    var_1 = timer_0.__eq__(float_arg_0)
    timer_0.__exit__()


def test_case_4():
    tuple_0 = ()
    timer_error_0 = module_0.TimerError(*tuple_0)
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    none_type_0 = timer_0.start()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    str_0 = "seconds"
    float_arg_0 = module_0.FloatArg()
    str_1 = "$%O;px)X*\t?s\\[MVe"
    int_0 = 60
    dict_0 = {str_0: str_0, str_1: int_0}
    module_0.TimerError(**dict_0)


def test_case_6():
    tuple_0 = ()
    timer_error_0 = module_0.TimerError(*tuple_0)
    str_0 = "gcso[:IFuZ<"
    timer_0 = module_0.Timer(str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    float_1 = timer_0.stop()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    timer_2 = module_0.Timer(text=var_0, initial_text=str_0)
    var_1 = var_0.__iter__()
    none_type_2 = None
    var_0.__ior__(none_type_2)


def test_case_7():
    str_0 = ":6vO.="
    dict_0 = {str_0: str_0}
    timer_0 = module_0.Timer(str_0, initial_text=dict_0, logger=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(text=str_0, initial_text=none_type_0)
    timer_0.__enter__()
