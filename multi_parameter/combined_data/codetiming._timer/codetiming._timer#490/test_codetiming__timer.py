# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    str_0 = '"&'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_1.__repr__()
    var_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = timer_0.__enter__()
    var_0.__call__(timer_1)


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    module_0.FloatArg(*timer_1)


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    var_0.keys()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = module_1.field(repr=timer_0, metadata=none_type_1)
    var_0.keys()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    str_0 = "*&"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    var_0 = timer_0.__eq__(float_arg_0)
    timer_0.stop()
