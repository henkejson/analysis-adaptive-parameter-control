# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_0 = 414.556
    timer_0 = module_0.Timer(initial_text=float_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0)
    timer_0.__exit__()


def test_case_5():
    timer_error_0 = module_0.TimerError()
    bool_0 = False
    timer_0 = module_0.Timer(text=timer_error_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_6():
    float_0 = 414.556
    timer_0 = module_0.Timer(float_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = module_1.dataclass(match_args=none_type_0)
    var_0.stop()


def test_case_7():
    float_0 = 414.556
    set_0 = {float_0, float_0, float_0}
    none_type_0 = None
    timer_0 = module_0.Timer(text=set_0, initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_1)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_0.__exit__()
    var_1 = timer_0.__eq__(none_type_1)
    var_0.__ior__(timer_1)


def test_case_8():
    none_type_0 = None
    str_0 = "\"@cgBo'+#DbWEt#xG"
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    none_type_1 = timer_0.start()
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_1,
        str_0: timer_0,
        str_0: none_type_1,
    }
    module_0.FloatArg(**dict_0)


def test_case_9():
    float_0 = 414.556
    set_0 = {float_0, float_0, float_0}
    set_1 = {float_0, float_0, float_0}
    timer_0 = module_0.Timer(set_0, set_0, set_1, set_1)
    timer_0.__enter__()
