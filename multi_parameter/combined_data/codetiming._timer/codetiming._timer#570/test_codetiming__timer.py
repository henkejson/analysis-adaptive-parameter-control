# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import codetiming._timers as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.__repr__()
    list_0 = [none_type_0]
    timer_0.__exit__(*list_0)


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    float_0 = 2211.0
    timer_0 = module_0.Timer(initial_text=float_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    list_0 = []
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(text=list_0, initial_text=str_0)
    user_dict_0 = module_1.UserDict()
    var_0 = timer_0.__eq__(list_0)
    timer_1 = timer_0.__enter__()
    var_0.__len__()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__call__(none_type_0)
    none_type_1 = timer_0.start()
    var_0.__delitem__(none_type_0)


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    none_type_1 = None
    none_type_2 = timer_0.start()
    float_0 = timer_0.stop()
    timers_0 = module_2.Timers()
    timer_1 = timer_0.__enter__()
    timers_0.__setitem__(none_type_2, none_type_1)


def test_case_9():
    float_0 = 2211.0
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_1 = timer_0.__enter__()
    float_1 = timer_0.stop()


def test_case_10():
    float_0 = 2211.0
    timer_0 = module_0.Timer(initial_text=float_0)
    var_0 = timer_0.__call__(timer_0)
    timer_1 = module_0.Timer(text=var_0)
    none_type_0 = timer_1.start()
    float_1 = timer_1.stop()
    var_1 = var_0.__repr__()
    var_1.__copy__()
