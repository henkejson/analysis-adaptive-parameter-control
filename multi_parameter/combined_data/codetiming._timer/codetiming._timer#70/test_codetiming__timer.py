# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_2():
    str_0 = "\x0c^AG$~[Q!v"
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(str_0)
    list_0 = [str_0, timer_0, var_0]
    timer_0.__exit__(*list_0)


def test_case_3():
    str_0 = "uRB;fUHyf9@J&3\\\\"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    none_type_3 = timer_0.start()
    timer_0.start()


def test_case_4():
    str_0 = "uRFB;fUHyf9@J&3\\\\"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    none_type_2 = None
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(none_type_2)
    bytes_0 = b"\x13\xb0\xa1\xf0\x9b"
    var_1 = timer_0.__eq__(bytes_0)
    var_0.start()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    none_type_1 = None
    timer_1 = module_0.Timer(initial_text=bool_0, logger=none_type_0)
    var_0 = timer_1.__eq__(none_type_1)
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_1.__enter__()


def test_case_6():
    str_0 = "uRB;fUHyf9@J&3\\\\"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()


def test_case_7():
    str_0 = "uRBfUHf@&3\\J\\"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, none_type_0, str_0, none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    dict_0 = {str_0: timer_0}
    none_type_3 = None
    var_0 = timer_0.__eq__(none_type_3)
    none_type_4 = timer_0.start()
    list_0 = [dict_0, timer_0]
    bytes_0 = b"\xbb\x80\xd3\x12"
    var_1 = timer_0.__eq__(bytes_0)
    none_type_5 = timer_0.__exit__(*list_0)
    none_type_6 = timer_0.start()
    timer_0.__enter__()


def test_case_8():
    str_0 = "uRB;fUHyf9@J&3\\\\"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    none_type_1 = timer_0.start()
    none_type_2 = None
    timer_1 = module_0.Timer(none_type_2, timer_0, str_0)
    none_type_3 = timer_1.start()
    none_type_4 = timer_1.__exit__()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    var_0 = module_1.dataclass(none_type_3, eq=str_0)
    var_0.__contains__(none_type_0)


def test_case_9():
    str_0 = "uRB;fUHyf9@J&3\\\\"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    none_type_1 = timer_0.__call__(str_0)
    timer_1 = module_0.Timer(none_type_0, str_0, str_0)
    none_type_2 = timer_1.start()
    none_type_3 = timer_1.__exit__()
    dict_0 = {str_0: timer_1}
    timer_2 = module_0.Timer(none_type_1, str_0, dict_0)
    timer_3 = timer_2.__enter__()
    var_0 = str_0.__repr__()
    none_type_2.__setitem__(timer_2, timer_1)
