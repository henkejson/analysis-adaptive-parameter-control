# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__call__(timer_1)
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_1.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_6():
    complex_0 = -1074 + 110.61j
    timer_0 = module_0.Timer(initial_text=complex_0)
    none_type_0 = timer_0.start()


def test_case_7():
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(float_arg_0)
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer(text=timer_0)
    var_1 = module_1.dataclass(repr=var_0, slots=none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_2.__exit__()
    timer_4 = timer_0.__enter__()


def test_case_8():
    float_0 = -964.114561
    none_type_0 = None
    timer_0 = module_0.Timer(float_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_9():
    str_0 = "LS\\7 5"
    timer_0 = module_0.Timer(initial_text=str_0)
    str_1 = "9}F3\n5\tjmCnb]g"
    var_0 = timer_0.__eq__(str_1)
    none_type_0 = timer_0.start()
    var_1 = timer_0.__eq__(var_0)
    str_1.keys()


def test_case_10():
    complex_0 = -1074 + 110.61j
    timer_0 = module_0.Timer(complex_0, initial_text=complex_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    module_0.TimerError(*timer_1, **none_type_0)
