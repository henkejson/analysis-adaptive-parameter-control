# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    timer_2.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = None
    var_0 = timer_0.__eq__(none_type_1)


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    timer_3 = module_0.Timer(text=none_type_0)
    float_1 = timer_0.stop()
    list_0 = [none_type_1]
    timer_2.__exit__(*list_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = None
    none_type_2 = timer_0.__exit__()
    var_0 = timer_0.__eq__(none_type_1)
    float_arg_0 = module_0.FloatArg()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    timer_1.start()


def test_case_7():
    str_0 = '"Vc'
    list_0 = [str_0]
    str_1 = "#z\x0cca"
    str_2 = ";B]W'd\r8s@5S>"
    str_3 = "#I54l`e?k,Foe@J)Y"
    none_type_0 = None
    timer_0 = module_0.Timer(str_2, logger=none_type_0)
    var_0 = module_1.dataclass(
        repr=none_type_0, unsafe_hash=list_0, frozen=none_type_0, match_args=list_0
    )
    timer_1 = module_0.Timer(str_3)
    var_1 = timer_0.__call__(list_0)
    user_dict_0 = module_2.UserDict()
    var_1.__call__(str_1)


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_0.start()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    float_0 = timer_0.stop()
    float_1 = timer_2.__repr__()
    var_0 = timer_0.__call__(timer_2)
    bool_0 = True
    timer_3 = module_0.Timer(float_1, initial_text=bool_0)
    timer_4 = timer_3.__enter__()
    timer_4.start()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer()
    str_0 = "@"
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_4 = timer_1.__eq__(str_0)
    none_type_1 = timer_3.start()
    float_0 = timer_4.__eq__(timer_0)
