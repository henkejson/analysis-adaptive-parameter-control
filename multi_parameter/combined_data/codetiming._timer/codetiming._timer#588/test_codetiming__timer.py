# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0)
    timer_0.__exit__()


def test_case_6():
    str_0 = '8KaH%XIcG":z'
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    bool_0 = False
    var_0 = timer_0.__eq__(bool_0)
    none_type_0 = timer_0.start()
    var_0.__iter__()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(none_type_0)
    var_1 = timer_0.__repr__()
    float_0 = timer_0.stop()
    none_type_1 = None
    timer_1 = module_0.Timer(text=none_type_0, logger=none_type_1)
    none_type_2 = timer_1.start()
    var_0.__getitem__(none_type_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(none_type_0)
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(initial_text=var_0, logger=var_0)
    bytes_0 = b"\xd5#\xd0\x9c\x1a\xc1\xd6;R\xf4\x0fI\xa2\xf0\x93\\\xb8\xd0\x96"
    timer_2 = module_0.Timer(bytes_0, initial_text=var_0)
    none_type_1 = timer_2.start()
    module_0.FloatArg(*var_0)


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__eq__(none_type_0)
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(initial_text=var_1, logger=var_1)
    bytes_0 = b"\xd5#\xd0\x9c\x1a\xc1\xd6;R\xf4\x0fI\xa2\xf0\x93\\\xb8\xd0\x96"
    timer_2 = module_0.Timer(bytes_0, initial_text=var_1)
    none_type_1 = timer_2.start()
    float_1 = timer_2.stop()
    timer_3 = module_0.Timer(none_type_1, initial_text=float_0)
    timer_error_0 = module_0.TimerError()
    var_1.pop(var_1)


def test_case_11():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(none_type_0)
    float_0 = timer_0.stop()
    none_type_1 = None
    timer_1 = module_0.Timer(text=var_0, logger=none_type_1)
    none_type_2 = timer_1.start()
    float_arg_0 = module_0.FloatArg()
    float_1 = timer_1.stop()
    timer_2 = module_0.Timer(none_type_1, float_arg_0)
    timer_error_0 = module_0.TimerError()
    var_0.pop(timer_2)


def test_case_12():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.__eq__(none_type_0)
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    float_arg_0 = module_0.FloatArg()
    float_1 = timer_0.stop()
    timer_2 = module_0.Timer(logger=float_0)
    module_0.TimerError(*timer_2)
