# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = module_0.Timer()
    var_0 = timer_1.__repr__()
    timer_1.stop()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    str_0 = "seconds"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    module_0.TimerError(**str_0)


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0)
    none_type_0 = timer_1.start()
    timer_1.start()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=none_type_0)
    timer_error_0 = module_0.TimerError()
    none_type_1 = timer_2.start()


def test_case_7():
    str_0 = "seconds"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    module_0.TimerError(**str_0)


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    complex_0 = 2437.9378 + 3472.633708j
    timer_1 = module_0.Timer(text=complex_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    str_0 = "Timer started"
    timer_1 = module_0.Timer(text=timer_0, initial_text=str_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError()


def test_case_10():
    timer_0 = module_0.Timer()
    str_0 = "seconds"
    timer_1 = module_0.Timer(str_0, str_0, timer_0)
    none_type_0 = timer_1.start()
    timer_0.__len__()
