# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    var_0 = module_1.field(default_factory=none_type_0, hash=bool_0, kw_only=bool_0)
    timer_0 = module_0.Timer(text=bool_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    float_arg_1 = module_0.FloatArg()
    timer_0.__exit__()


def test_case_4():
    dict_0 = {}
    timer_0 = module_0.Timer(dict_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_1.__eq__(timer_1)


def test_case_5():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(timer_error_0)
    var_0.items()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    str_0 = "Q&R{^StC\n{8;kh"
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_0.start()


def test_case_7():
    dict_0 = {}
    timer_0 = module_0.Timer(dict_0)
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_1 = module_0.Timer(str_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    bool_0 = True
    timer_1 = module_0.Timer(bool_0, initial_text=timer_0)
    none_type_1 = timer_1.start()
    timer_2 = module_0.Timer()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_1.__repr__()
    timer_1.__exit__()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    bool_0 = True
    none_type_1 = None
    timer_1 = module_0.Timer(none_type_0, timer_0, none_type_1)
    none_type_2 = timer_1.start()
    list_0 = [bool_0, bool_0, timer_1, timer_1]
    none_type_3 = timer_1.__eq__(timer_0)
    var_0 = timer_1.__repr__()
    none_type_4 = timer_1.__exit__()
    timer_error_0 = module_0.TimerError(*list_0)
    timer_2 = module_0.Timer(initial_text=none_type_4)
    timer_1.stop()
