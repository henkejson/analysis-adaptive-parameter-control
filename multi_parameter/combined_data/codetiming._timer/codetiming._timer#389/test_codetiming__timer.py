# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    var_1 = var_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.__exit__(*var_1)


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    float_1 = timer_2.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_1.stop()


def test_case_8():
    timer_0 = module_0.Timer()
    str_0 = "5)1or3S"
    timer_1 = module_0.Timer(str_0, initial_text=timer_0, logger=timer_0)
    var_0 = timer_1.__eq__(timer_0)
    var_1 = var_0.__eq__(timer_0)
    timer_2 = timer_1.__enter__()
    timers_0 = module_1.Timers()
    timer_0.stop()


def test_case_9():
    none_type_0 = None
    str_0 = "_tcvdbl),0("
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    dict_0 = {str_0: timer_2, str_0: none_type_0}
    module_0.TimerError(**dict_0)


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    timers_0 = module_1.Timers()
    timer_1.stop()
