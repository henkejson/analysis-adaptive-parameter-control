# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    set_0 = set()
    timer_0 = module_0.Timer(text=set_0)
    float_arg_0 = module_0.FloatArg()
    none_type_0 = timer_0.start()
    timer_error_0 = module_0.TimerError()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    var_0 = timer_1.__enter__()


def test_case_5():
    str_0 = 'zFn9SrtX:lc\x0b\tu}aJF"<'
    timer_0 = module_0.Timer(str_0, str_0)
    timer_0.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    none_type_2 = timer_1.__eq__(none_type_0)


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_0.start()
    var_0 = timer_1.__eq__(none_type_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.copy()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.__eq__(float_arg_0)
    var_0 = timer_1.__call__(none_type_0)
    var_1 = var_0.__repr__()
    var_1.start()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    var_0 = module_1.dataclass(
        init=float_arg_0,
        unsafe_hash=float_arg_0,
        frozen=float_arg_0,
        match_args=none_type_0,
    )
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0)
    var_1 = timer_0.__repr__()
    none_type_1 = timer_0.start()
    float_0 = timer_0.stop()
    var_1.copy()


def test_case_11():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, float_arg_0, float_arg_0, none_type_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    timer_2 = timer_0.__enter__()
    float_1 = timer_0.stop()
    float_1.__iter__()


def test_case_12():
    float_arg_0 = module_0.FloatArg()
    str_0 = "Timer is not running. Use .start() to start it"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0, logger=float_arg_0)
    var_0 = timer_0.__repr__()
    timer_0.start()
