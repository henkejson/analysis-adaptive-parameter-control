# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    timer_0.__enter__()


def test_case_2():
    bytes_0 = b"\x08"
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_6():
    str_0 = ":IFMdo(zM#4E"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(initial_text=timer_0, logger=none_type_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_1.__call__(timer_1)
    var_0.__exit__(*none_type_0)


def test_case_8():
    bytes_0 = b"\x08"
    none_type_0 = None
    timer_0 = module_0.Timer(bytes_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    none_type_2 = timer_1.start()
    timer_1.__enter__()


def test_case_9():
    bytes_0 = b"\xad\x9d4HI.*kP>\x9bM\xbd\xd5\xf0S}\xd1\xc47"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    timer_1 = timer_0.__enter__()
    var_1 = timer_0.__repr__()
    var_2 = timer_1.__repr__()
    bool_0 = True
    var_3 = timer_1.__eq__(var_1)
    timer_2 = module_0.Timer(initial_text=bool_0)
    none_type_1 = timer_2.start()
    none_type_2 = timer_2.__eq__(none_type_1)
