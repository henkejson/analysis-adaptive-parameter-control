# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "at@LGl)C'Ne"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    str_0 = "<\r1I-G>K_5&Aw:Xbi&4"
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_4():
    str_0 = "t@2LGlC'Ne"
    timer_0 = module_0.Timer(str_0, str_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__repr__()
    module_0.FloatArg(*var_0)


def test_case_5():
    str_0 = "t@2LGlC'Ne"
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_6():
    str_0 = "t@2LGlC'Ne"
    timer_0 = module_0.Timer(text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_1.__repr__()
    var_1 = timer_1.__repr__()
    var_2 = var_1.__repr__()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_0.__enter__()


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    str_0 = " does not support item assignment. Use '.add()' to update values."
    float_0 = -2720.9209
    timer_0 = module_0.Timer(str_0, float_0, float_arg_0, float_0)
    timer_0.start()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(str_0, timer_0)
    var_0 = timer_1.__repr__()
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    var_0.__ror__(var_0)
