# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import contextlib as module_2
import dataclasses as module_3


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer()
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_0.__enter__()


def test_case_4():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(initial_text=bool_0)
    timer_2 = timer_0.__enter__()
    none_type_1 = timer_1.start()
    float_0 = timer_2.stop()
    timers_0 = module_1.Timers()
    var_0 = timer_2.__eq__(bool_0)
    var_1 = var_0.__repr__()
    module_2.ContextDecorator(*var_0)


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    none_type_0 = timer_0.start()
    timers_0 = timer_0.__repr__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    str_0 = ":GH'v&>\"\x0b?:>("
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(bool_0)
    timer_1 = module_0.Timer(logger=none_type_0)
    timer_2 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__eq__(timer_2)
    var_1 = var_0.__repr__()


def test_case_8():
    str_0 = "Timer is running. Use .stop() to stop it"
    list_0 = [str_0]
    timer_error_0 = module_0.TimerError(*list_0)
    float_arg_0 = module_0.FloatArg()
    bytes_0 = b"\x94\x92K\x9eKa#a\x85=>\x1c\x90\xd5\xf6-\x82\x96"
    timer_0 = module_0.Timer(str_0, initial_text=bytes_0)
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_9():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = None
    timer_1 = module_0.Timer(none_type_0, timer_0, none_type_1)
    timer_2 = timer_0.__enter__()
    none_type_2 = timer_1.start()
    float_0 = timer_2.stop()
    none_type_3 = timer_1.__exit__()
    timers_0 = module_1.Timers()
    var_0 = timer_2.__eq__(bool_0)
    var_1 = var_0.__repr__()
    timer_3 = timer_1.__enter__()
    var_2 = timer_2.__call__(float_0)
    list_0 = [timer_2, timer_0, none_type_2, timer_2, bool_0, timer_0]
    var_3 = module_3.field(hash=list_0, compare=timer_0)
    var_4 = timers_0.items()
    var_0.__setitem__(var_1, var_0)
