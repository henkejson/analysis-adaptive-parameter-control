# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    float_0 = -2076.8731
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_arg_0 = timer_0.__eq__(timer_1)


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    set_0 = set()
    timer_0 = module_0.Timer(logger=set_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_6():
    float_0 = -2076.8731
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    none_type_0 = timer_0.start()
    float_1 = timer_0.stop()
    float_arg_0 = module_0.FloatArg()


def test_case_7():
    float_0 = -2076.8731
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=float_0)
    none_type_1 = timer_0.start()
    float_1 = timer_0.stop()
    var_0 = timer_0.__repr__()
    var_1 = var_0.__len__()
    var_2 = var_1.__repr__()
    timer_0.__exit__()


def test_case_8():
    str_0 = "f*SY.Fc/F"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    str_1 = "Timer started"
    var_0 = module_1.ContextDecorator()
    var_0.__ior__(str_1)


def test_case_9():
    float_0 = -2076.8731
    timer_0 = module_0.Timer(float_0, initial_text=float_0)
    timer_1 = module_0.Timer(text=timer_0)
    none_type_0 = timer_1.start()
    float_1 = timer_1.stop()
    var_0 = timer_1.__repr__()
    var_1 = var_0.__len__()
    var_2 = var_1.__repr__()
    var_1.__exit__()
