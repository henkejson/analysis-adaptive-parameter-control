# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    none_type_1 = timer_0.start()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(timer_0)
    timer_0.start()


def test_case_5():
    exception_0 = module_1.Exception()
    timer_0 = module_0.Timer(exception_0, initial_text=exception_0, logger=exception_0)
    timer_0.__enter__()


def test_case_6():
    exception_0 = module_1.Exception()
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(exception_0, initial_text=str_0, logger=exception_0)
    timer_0.__enter__()


def test_case_7():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_0)
    none_type_1 = timer_0.start()
    module_0.FloatArg(*none_type_1)


def test_case_8():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    none_type_0 = timer_0.__call__(timer_0)
    timer_0.start()


def test_case_9():
    str_0 = "|9o"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_1 = timer_0.__eq__(timer_1)
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    list_0 = [timer_0, timer_0, timer_0]
    none_type_0 = timer_0.start()
    tuple_0 = (none_type_0,)
    none_type_1 = timer_0.__exit__(*tuple_0)
    var_0.__exit__(*list_0)


def test_case_10():
    timer_0 = module_0.Timer()
    bool_0 = True
    timer_1 = module_0.Timer(text=timer_0, initial_text=bool_0)
    none_type_0 = None
    timer_2 = timer_1.__enter__()
    var_0 = timer_0.__repr__()
    none_type_1 = timer_2.__exit__(*var_0)
    var_0.__call__(none_type_0)
