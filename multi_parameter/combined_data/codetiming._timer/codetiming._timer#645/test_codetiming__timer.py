# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    timer_0 = module_0.Timer(none_type_0, initial_text=bool_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = None
    float_0 = timer_0.stop()
    var_0 = timer_0.__call__(none_type_1)
    timer_2 = timer_1.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_7():
    timer_error_0 = module_0.TimerError()
    str_0 = "P"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    str_0 = "P"
    var_0 = module_1.field(init=timer_error_0, repr=timer_error_0, metadata=str_0)
    var_1 = var_0.__eq__(timer_error_0)
    timer_0 = module_0.Timer(text=str_0, initial_text=timer_error_0, logger=var_1)
    timer_0.__enter__()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    var_0 = timer_error_0.__eq__(timer_error_0)
    timer_0 = module_0.Timer(var_0, initial_text=var_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=var_0, logger=timer_0)
    timer_0.start()


def test_case_10():
    float_0 = 4209.84
    timer_0 = module_0.Timer(text=float_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, initial_text=none_type_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    timer_0.stop()
