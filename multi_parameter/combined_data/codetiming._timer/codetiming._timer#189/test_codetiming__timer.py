# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import builtins as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    str_0 = ",7)P+\tz'D&@Uz,<\n"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_0.stop()


def test_case_4():
    none_type_0 = None
    object_0 = module_1.object()
    timer_0 = module_0.Timer(none_type_0, initial_text=object_0, logger=object_0)
    timer_1 = module_0.Timer(text=none_type_0, logger=none_type_0)
    none_type_1 = timer_1.start()


def test_case_5():
    timer_0 = module_0.Timer()
    object_0 = module_1.object()
    bool_0 = True
    timer_1 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    timer_2 = module_0.Timer()
    none_type_0 = timer_2.start()


def test_case_6():
    timer_0 = module_0.Timer()
    object_0 = module_1.object()
    bool_0 = True
    timer_1 = module_0.Timer(initial_text=bool_0, logger=bool_0)
    timer_1.start()


def test_case_7():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    var_1 = var_0.__call__(var_0)
    str_0 = '"b.'
    var_2 = timer_0.__call__(str_0)
    var_3 = var_2.__eq__(var_0)
    var_3.add(var_0, var_3)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, timer_error_0, timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_1.stop()


def test_case_10():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__eq__(timer_0)
    var_1 = var_0.__or__(timer_1)
    timer_error_0 = module_0.TimerError()
    var_1.__iter__()


def test_case_11():
    str_0 = ",7)P+'D&@Uz,<\n"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = module_0.Timer(str_0, timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    var_0 = timer_1.__repr__()
    var_0.__call__(timer_0)
