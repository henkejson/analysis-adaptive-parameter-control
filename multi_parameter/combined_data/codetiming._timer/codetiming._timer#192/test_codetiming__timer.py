# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    bytes_0 = b"\xe0oH\x94\x9aiY\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_4():
    bytes_0 = b"\xe0\x94\xd0i\x90\xcbY\x8e\x9fo\x18n"
    timer_0 = module_0.Timer(logger=bytes_0)
    int_0 = 10
    var_0 = timer_0.__call__(int_0)
    var_0.__call__(bytes_0)


def test_case_5():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    timer_1 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_1.start()
    float_0 = timer_1.stop()
    var_0 = timer_1.__call__(none_type_1)
    timer_0.start()


def test_case_6():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    var_0 = timer_0.__call__(bytes_0)
    var_0.__call__(bytes_0)


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_error_1 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    float_arg_1 = module_0.FloatArg()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_error_1 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_0.stop()


def test_case_10():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(bytes_0, bytes_0, bytes_0)
    int_0 = 10
    timer_1 = module_0.Timer()
    var_0 = timer_1.__call__(int_0)
    none_type_0 = timer_0.start()
    var_0.stop()


def test_case_11():
    str_0 = "H8|,Y?5P?"
    timer_0 = module_0.Timer(str_0)
    timer_1 = module_0.Timer(str_0)
    none_type_0 = None
    var_0 = timer_1.__call__(none_type_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_0.__eq__(none_type_1)
    float_0 = timer_1.stop()
    str_1 = "Timer started"
    timer_2 = module_0.Timer(initial_text=str_1, logger=var_0)
    var_1 = timer_2.__call__(str_1)
    var_1.__copy__()


def test_case_12():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    int_0 = 10
    timer_1 = module_0.Timer()
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_2 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_1.__call__(int_0)
    none_type_0 = timer_1.start()
    none_type_1 = timer_2.start()
    float_0 = timer_1.stop()
    var_0.__contains__(float_0)


def test_case_13():
    bytes_0 = b"\xe0oH\x94\xd0iY\x8e\x9fo\xe2\x18n\x8b"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=bytes_0)
    timer_1 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_1)
    var_0 = timer_0.__call__(timer_1)
    none_type_1 = timer_2.start()
    none_type_2 = timer_1.start()
    float_0 = timer_2.stop()
    timer_3 = module_0.Timer(text=var_0)
    var_0.update(timer_0, **var_0)
