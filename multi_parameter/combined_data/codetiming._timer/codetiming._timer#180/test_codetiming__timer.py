# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_0.stop()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    var_0 = timer_0.__repr__()
    user_dict_0 = module_1.UserDict(none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    module_0.FloatArg(*var_0)


def test_case_7():
    timer_error_0 = module_0.TimerError()
    int_0 = 0
    str_0 = "-AACByGr\x0b h5Q!"
    timer_0 = module_0.Timer(text=int_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__call__(int_0)
    float_arg_0 = module_0.FloatArg()
    timers_0 = module_2.dataclass(init=timer_0, eq=none_type_0, match_args=timer_1)
    timers_0.__setitem__(none_type_0, str_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    list_0 = []
    none_type_0 = timer_0.__exit__(*list_0)
    var_0 = module_2.field(default_factory=bool_1, init=list_0, kw_only=timer_0)
    module_0.TimerError(**var_0)


def test_case_9():
    bool_0 = True
    bool_1 = True
    int_0 = 0
    timer_0 = module_0.Timer(bool_1, int_0, bool_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    timer_1.__exit__(*list_0)
