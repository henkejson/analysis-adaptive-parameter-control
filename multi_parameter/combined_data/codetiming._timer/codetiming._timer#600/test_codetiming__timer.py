# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    none_type_0 = None
    var_1 = timer_0.__eq__(none_type_0)
    timer_1 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    int_0 = 237
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    var_1 = timer_1.__eq__(var_0)
    list_0 = [timer_1, float_arg_0, float_arg_0, float_arg_0]
    none_type_1 = timer_0.__exit__(*list_0)
    str_0 = 'L\x0ctLfJ8y"O(uR#C=sNL\x0c'
    str_1 = "\t6fW\n*G8Uvh4"
    dict_0 = {str_0: list_0, str_1: str_1}
    module_0.TimerError(*list_0, **dict_0)


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_1 = timer_1.__eq__(bool_0)
    none_type_0 = var_0.__eq__(bool_0)
    timer_0.__enter__()


def test_case_6():
    int_0 = 237
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_7():
    str_0 = "d]^P'(t\\evU0uWlp^K\n"
    timer_0 = module_0.Timer(text=str_0, logger=str_0)
    timer_1 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_1.start()


def test_case_8():
    int_0 = 1458
    none_type_0 = None
    timer_0 = module_0.Timer(int_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__repr__()
    var_1 = timer_1.__eq__(int_0)
    none_type_1 = timer_0.__exit__()
    var_2 = var_1.__repr__()
    var_3 = var_2.__len__()
    var_3.__setitem__(timer_1, none_type_1)
