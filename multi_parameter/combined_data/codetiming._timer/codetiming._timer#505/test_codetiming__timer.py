# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import codetiming._timers as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(logger=timer_error_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_error_0)


def test_case_4():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__eq__(none_type_0)
    none_type_1 = timer_0.start()
    timer_1 = module_0.Timer()


def test_case_5():
    bool_0 = True
    timer_0 = module_0.Timer(text=bool_0, initial_text=bool_0)
    var_0 = timer_0.__call__(bool_0)
    var_1 = var_0.__repr__()
    timer_1 = module_0.Timer(var_1, logger=var_0)
    none_type_0 = timer_0.start()


def test_case_6():
    str_0 = "\x0coJr\n%|"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    var_1 = timer_0.__repr__()
    none_type_1 = None
    float_arg_0 = module_0.FloatArg()
    var_2 = module_1.dataclass(repr=none_type_1, frozen=none_type_1, kw_only=var_0)
    var_3 = var_2.__repr__()
    var_4 = timer_0.__repr__()
    str_1 = "BHn'Gv[b<DN3)"
    dict_0 = {str_0: var_2, str_0: str_0, str_1: str_1}
    module_2.Timers(**dict_0)


def test_case_7():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_8():
    bool_0 = False
    bool_1 = True
    timer_0 = module_0.Timer(bool_0, bool_0, bool_1, bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = None
    timer_1 = module_0.Timer(text=timer_0, logger=none_type_1)
    var_0 = timer_1.__eq__(timer_1)
    float_0.get(timer_0)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(text=timer_error_0)
    var_0 = module_1.dataclass(
        unsafe_hash=timer_error_0, kw_only=none_type_0, slots=timer_error_0
    )
    timer_1 = module_0.Timer(var_0, initial_text=var_0)
    timer_2 = timer_1.__enter__()
    none_type_1 = timer_1.__exit__()
    none_type_2 = timer_1.start()
    timer_error_0.__getitem__(var_0)


def test_case_10():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=timer_0, logger=timer_0)
    none_type_1 = timer_1.start()
    none_type_2 = timer_1.__exit__()
    var_0 = timer_1.__call__(none_type_0)
    var_1 = timer_1.__call__(none_type_1)
    var_1.items()
