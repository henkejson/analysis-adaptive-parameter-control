# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    list_0 = []
    timer_error_0 = module_0.TimerError()
    none_type_0 = timer_0.start()
    var_0 = timer_0.__eq__(list_0)
    timer_0.__enter__()


def test_case_2():
    bytes_0 = b""
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = timer_0.__repr__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()


def test_case_4():
    bytes_0 = b"G"
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_5():
    bytes_0 = b'\x98\xbey\xaf"'
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    str_0 = "AQo0&!]Ho7/\\xeWR"
    str_1 = "hdXN\t-b0{8cr(!lZ}(|"
    str_2 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    var_0 = timer_0.__eq__(none_type_0)
    float_0 = timer_0.stop()
    dict_0 = {str_0: str_1, str_1: none_type_0, str_2: timer_0, str_1: none_type_0}
    module_0.FloatArg(**dict_0)


def test_case_6():
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(initial_text=str_0)
    str_1 = ""
    var_0 = timer_0.__call__(str_1)
    var_1 = timer_0.__call__(str_0)
    none_type_0 = timer_0.start()
    timer_1 = module_0.Timer(text=str_1)
    none_type_1 = None
    var_2 = timer_1.__eq__(none_type_1)
    var_3 = var_2.__repr__()
    var_3.start()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    float_arg_1 = module_0.FloatArg()
    dict_0 = {}
    timer_error_0 = module_0.TimerError(**dict_0)
    float_arg_2 = module_0.FloatArg()
    timer_1 = module_0.Timer()
    none_type_0 = timer_0.start()
    module_1.Timers(**float_arg_1)


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, timer_0, timer_0)
    timer_2 = timer_1.__enter__()
    list_0 = [timer_1, timer_2]
    timer_2.__exit__(*list_0)
