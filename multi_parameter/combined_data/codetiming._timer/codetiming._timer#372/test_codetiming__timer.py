# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    str_0 = "T"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    none_type_0 = None
    var_1 = timer_0.__eq__(none_type_0)
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    str_0 = "T"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()
    none_type_0 = timer_1.__exit__()
    timer_1.__exit__(*var_0)


def test_case_4():
    str_0 = "@2^h|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    module_1.dataclass(
        str_0,
        repr=str_0,
        order=str_0,
        unsafe_hash=str_0,
        match_args=str_0,
        kw_only=none_type_0,
    )


def test_case_5():
    str_0 = "@2^h|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    var_0 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_1.__exit__(*var_0)


def test_case_6():
    str_0 = "@2^h|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer(str_0, initial_text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    timer_1.__exit__()


def test_case_7():
    str_0 = "@2^h|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer(initial_text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = None
    timer_3 = module_0.Timer(text=timer_1, logger=none_type_0)
    timer_4 = timer_3.__enter__()
    none_type_1 = timer_4.__exit__()
    timer_0.__exit__()


def test_case_8():
    str_0 = "@2^h|"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(str_0, logger=timer_0)
    timer_4 = timer_3.__enter__()
    list_0 = [str_0, timer_1, timer_1, timer_2]
    none_type_0 = timer_1.__exit__(*list_0)
    timer_1.__exit__(*list_0)
