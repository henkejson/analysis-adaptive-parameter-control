# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    str_0 = "jv{l}0+6(%"
    timer_0 = module_0.Timer(text=str_0, logger=str_0)
    timer_0.__exit__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_4():
    str_0 = "f|d/%\t4/ LL/*|h"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__eq__(timer_1)
    var_1 = timer_1.__repr__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    list_0 = []
    none_type_1 = timer_1.__exit__(*list_0)
    float_arg_1 = module_0.FloatArg()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_7():
    str_0 = "f|d/%\t4/ LL/*|h"
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, str_0, str_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    module_0.FloatArg(**none_type_0)


def test_case_8():
    int_0 = -3465
    timer_0 = module_0.Timer(int_0, initial_text=int_0)
    var_0 = timer_0.__eq__(timer_0)
    float_arg_0 = module_0.FloatArg()
    var_1 = module_1.field(init=float_arg_0)
    timer_1 = module_0.Timer(initial_text=var_1, logger=var_1)
    none_type_0 = timer_0.start()
    var_2 = timer_1.__eq__(var_1)
    var_1.__ior__(float_arg_0)


def test_case_9():
    str_0 = "f|d/%\t4/ LL/*|h"
    timer_0 = module_0.Timer(str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(text=timer_0, initial_text=str_0)
    timer_2 = timer_1.__enter__()
    list_0 = timer_1.__repr__()
    none_type_0 = timer_2.__exit__(*list_0)
    timer_3 = timer_2.__enter__()
    module_0.FloatArg(*list_0)
