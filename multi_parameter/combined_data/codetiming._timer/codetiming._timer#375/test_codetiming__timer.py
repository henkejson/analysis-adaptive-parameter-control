# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(text=timer_error_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    timer_0.start()


def test_case_2():
    int_0 = 2700
    timer_0 = module_0.Timer(int_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, none_type_0)
    timer_0.__exit__()


def test_case_4():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    list_0 = [str_0, str_0]
    timer_0 = module_0.Timer(initial_text=str_0, logger=list_0)
    timer_0.__enter__()


def test_case_5():
    str_0 = "T#`P)y&YZo.D"
    set_0 = set()
    timer_0 = module_0.Timer(str_0, set_0, logger=str_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_6():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    list_0 = [str_0, str_0]
    set_0 = set()
    timer_0 = module_0.Timer(str_0, set_0, logger=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(list_0)
    timer_2 = module_0.Timer(initial_text=var_0, logger=var_0)
    var_1 = timer_1.__repr__()
    timer_2.__enter__()


def test_case_7():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    list_0 = [str_0, str_0]
    set_0 = set()
    timer_0 = module_0.Timer(str_0, set_0, logger=str_0)
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__call__(list_0)
    timer_2 = module_0.Timer(var_0, initial_text=float_arg_0, logger=list_0)
    var_1 = timer_1.__repr__()
    timer_2.__enter__()


def test_case_8():
    str_0 = "bIt3b$2WW9<dfUF"
    set_0 = module_1.dataclass(init=str_0)
    timer_0 = module_0.Timer(str_0, set_0, logger=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()


def test_case_9():
    set_0 = set()
    timer_0 = module_0.Timer(set_0, set_0, logger=set_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_10():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_11():
    str_0 = "Definition of Timer.\n\nSee help(codetiming for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    set_0 = set()
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, set_0, logger=str_0)
    float_arg_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=str_0)
    timer_3 = module_0.Timer(timer_0, initial_text=float_arg_0)
    var_0 = timer_3.__repr__()
    timer_4 = timer_3.__enter__()
    timer_4.__exit__()
