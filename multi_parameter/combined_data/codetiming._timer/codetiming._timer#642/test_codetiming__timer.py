# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import contextlib as module_1
import dataclasses as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    context_decorator_0 = module_1.ContextDecorator()
    timer_0 = module_0.Timer(
        text=context_decorator_0,
        initial_text=context_decorator_0,
        logger=context_decorator_0,
    )
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "}pPoNHkU8"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    var_0 = timer_0.__eq__(none_type_0)
    timer_0.stop()


def test_case_3():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    none_type_0 = None
    int_0 = 1000
    timer_0 = module_0.Timer(none_type_0, int_0)
    none_type_1 = timer_0.start()
    timer_error_0 = module_0.TimerError()


def test_case_5():
    context_decorator_0 = module_1.ContextDecorator()
    timer_0 = module_0.Timer(
        text=context_decorator_0,
        initial_text=context_decorator_0,
        logger=context_decorator_0,
    )
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_1.__exit__()


def test_case_7():
    context_decorator_0 = module_1.ContextDecorator()
    timer_0 = module_0.Timer(
        text=context_decorator_0,
        initial_text=context_decorator_0,
        logger=context_decorator_0,
    )
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_8():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    str_0 = "Timer {name} started"
    timer_2 = module_0.Timer(text=timer_error_0, initial_text=str_0)
    float_0 = timer_0.stop()
    timer_3 = timer_2.__enter__()
    timer_0.__exit__()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    str_0 = "Timer {name} started"
    none_type_0 = None
    timer_2 = module_0.Timer(text=str_0, logger=none_type_0)
    float_0 = timer_0.stop()
    bool_0 = False
    timer_3 = timer_2.__enter__()
    list_0 = []
    none_type_1 = timer_3.__exit__(*list_0)
    timer_4 = module_0.Timer(initial_text=none_type_0)
    var_0 = timer_4.__repr__()
    var_1 = timer_2.__eq__(bool_0)
    float_arg_0 = module_0.FloatArg()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0)
    timer_1 = timer_0.__enter__()
    str_0 = "Timer {name} started"
    timer_2 = module_0.Timer(text=str_0, initial_text=str_0)
    float_0 = timer_1.stop()
    timer_3 = timer_0.__enter__()
    none_type_0 = timer_3.__exit__()
    str_1 = "K5q"
    str_2 = "B=!\\&#s&<=+fi7/J_"
    timer_4 = module_0.Timer(text=str_1, initial_text=str_2)
    module_2.field(default=timer_3, default_factory=timer_error_0, hash=timer_2)


def test_case_11():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(initial_text=timer_error_0)
    timer_1 = module_0.Timer(timer_error_0, timer_error_0, timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_0.__repr__()
    timer_2.stop()
