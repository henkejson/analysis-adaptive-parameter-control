# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    none_type_0 = timer_0.start()
    timer_1.__enter__()


def test_case_2():
    str_0 = "\n;IxrWi/+%zm"
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    str_0 = "n\x0c),%!.N]y.VP3!fi"
    timer_1 = module_0.Timer(text=str_0)
    timer_0.__exit__()


def test_case_5():
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__eq__(timer_1)


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__repr__()
    var_1 = var_0.__len__()
    var_0.__contains__(var_1)


def test_case_8():
    timer_error_0 = module_0.TimerError()
    str_0 = "\n;IxrWi/+%zm"
    timer_0 = module_0.Timer(str_0, initial_text=timer_error_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    none_type_0 = timer_1.__call__(timer_1)
    timer_2 = timer_1.__eq__(none_type_0)


def test_case_9():
    timer_error_0 = module_0.TimerError()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=timer_error_0, logger=bool_0)
    timer_0.__enter__()


def test_case_10():
    timer_error_0 = module_0.TimerError()
    str_0 = "\n;IxrWi/+%zm"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_2.stop()
    var_0 = timer_2.__call__(none_type_0)
    var_1 = timer_2.__eq__(var_0)
