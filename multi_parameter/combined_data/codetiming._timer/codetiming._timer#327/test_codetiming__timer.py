# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_0.stop()


def test_case_3():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(bool_0, bool_0, bool_0)
    none_type_1 = timer_1.start()
    timer_2 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_1 = timer_0.__eq__(none_type_1)


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, bool_0, bool_0)
    timer_1 = module_0.Timer(initial_text=timer_0, logger=bool_0)
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_3.stop()
    timer_1.start()


def test_case_5():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer(bool_0, bool_0, bool_0)
    none_type_1 = timer_1.start()
    timer_2 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    var_1 = timer_0.__eq__(none_type_1)
    timer_1.stop()


def test_case_6():
    int_0 = -2978
    timer_0 = module_0.Timer()
    str_0 = "Timer {name} started"
    timer_1 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_1.start()
    var_0 = timer_1.__eq__(int_0)
    var_0.__exit__()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0, timer_0, bool_0)
    var_0 = timer_2.__call__(none_type_0)
    none_type_1 = timer_2.start()
    var_1 = timer_0.__eq__(bool_0)
    none_type_2 = timer_0.__exit__()
    timer_3 = module_0.Timer(text=bool_0, initial_text=none_type_0)
    timer_2.__exit__()
