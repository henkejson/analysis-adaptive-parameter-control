# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    timer_0.__enter__()


def test_case_5():
    str_0 = "@\n\x0bC*:)"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()


def test_case_6():
    timer_error_0 = module_0.TimerError()
    timer_0 = module_0.Timer(timer_error_0, timer_error_0, timer_error_0)
    none_type_0 = timer_0.start()
    var_0 = timer_0.__repr__()
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)


def test_case_7():
    int_0 = 731
    timer_0 = module_0.Timer(initial_text=int_0)
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    timer_0.clear()


def test_case_8():
    str_0 = "@\n\x0bC*:)"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    list_0 = []
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_1.__exit__(*list_0)
