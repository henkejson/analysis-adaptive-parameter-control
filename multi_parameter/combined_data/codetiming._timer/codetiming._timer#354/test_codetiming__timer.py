# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    bytes_0 = b"G\x0e\x9dJ"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    bytes_0 = b"G\x0e\x9dJ"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.stop()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_5():
    bytes_0 = b"G\x0e\x9dJ"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    none_type_1 = timer_0.start()


def test_case_6():
    str_0 = "^5t\rxX(s#"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_1)
    timer_3 = module_0.Timer(timer_0)
    timer_3.stop()


def test_case_7():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__repr__()
    var_1 = timer_0.__repr__()


def test_case_8():
    str_0 = "^5t\rxX(s#"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    var_0 = timer_0.__eq__(str_0)
    none_type_0 = timer_1.__exit__()
    var_1 = timer_2.__eq__(timer_2)
    var_2 = timer_0.__eq__(str_0)
    var_0.get(str_0)


def test_case_9():
    bytes_0 = b"G\x0e\x9dJ"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    str_0 = "Elapsed time: {:0.4f} seconds"
    timer_1 = module_0.Timer(str_0, str_0, timer_0)
    timer_2 = timer_1.__enter__()
    list_0 = [str_0, timer_0]
    none_type_0 = timer_2.__exit__(*list_0)
    var_0 = timer_2.__repr__()
