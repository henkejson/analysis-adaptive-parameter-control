# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_3():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = module_0.Timer()
    var_0 = timer_1.__call__(none_type_0)
    var_1 = timer_1.__repr__()
    timer_error_0 = module_0.TimerError()
    timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_0.__enter__()
    timer_3 = timer_1.__enter__()
    none_type_0 = timer_3.__exit__()
    timer_2.__iter__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__call__(none_type_0)
    timer_1.__call__(none_type_0)


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer()
    timer_2 = module_0.Timer(initial_text=timer_1)
    float_arg_0 = module_0.FloatArg()
    str_0 = " does not support item assignment. Use '.add()' to update values."
    timer_3 = timer_1.__enter__()
    timer_4 = module_0.Timer(initial_text=str_0, logger=timer_0)
    timer_5 = timer_4.__enter__()
    timer_3.start()


def test_case_8():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_1 = timer_0.__eq__(none_type_0)
    bool_0 = True
    float_arg_0 = module_0.FloatArg()
    timer_error_0 = module_0.TimerError()
    timer_1 = module_0.Timer(initial_text=bool_0)
    bool_1 = True
    timer_2 = module_0.Timer(var_1, initial_text=bool_1)
    var_2 = var_0.__eq__(timer_error_0)
    timer_3 = timer_2.__enter__()
    var_3 = var_0.__repr__()
    var_4 = var_2.__eq__(none_type_1)
    var_4.start()


def test_case_9():
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(initial_text=none_type_0)
    timer_2 = module_0.Timer(text=timer_1)
    timer_3 = timer_1.__enter__()
    timer_4 = timer_2.__enter__()
    none_type_1 = timer_2.__exit__()
    var_0 = module_1.field(repr=none_type_1, compare=timer_3)
    var_0.__len__()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0, logger=timer_0)
    var_0 = timer_1.__call__(timer_1)
    var_0.__call__(var_0)
