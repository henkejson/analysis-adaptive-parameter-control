# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2
import builtins as module_3


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, logger=float_arg_0)
    timer_1 = timer_0.__enter__()
    timer_1.start()


def test_case_2():
    dict_0 = {}
    timer_0 = module_0.Timer(dict_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_3():
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.__repr__()
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(timer_0)
    timer_0.stop()


def test_case_4():
    dict_0 = {}
    timer_error_0 = module_0.TimerError()
    var_0 = module_2.field()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(dict_0, initial_text=var_0, logger=dict_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    module_0.FloatArg(*float_arg_0, **dict_0)


def test_case_5():
    dict_0 = {}
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError(**dict_0)
    timer_0 = module_0.Timer(timer_error_1)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_2 = module_0.Timer()
    module_1.UserDict(timer_error_1, **dict_0)


def test_case_6():
    timer_error_0 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    float_arg_1 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(none_type_0)
    float_arg_2 = module_0.FloatArg()
    var_1 = timer_1.__repr__()
    timer_error_1 = module_0.TimerError()


def test_case_7():
    dict_0 = {}
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_arg_1 = module_0.FloatArg()
    float_arg_2 = module_0.FloatArg()
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(var_0, initial_text=var_0, logger=timer_error_0)
    timer_2 = module_0.Timer(initial_text=var_0, logger=var_0)
    user_dict_0 = module_1.UserDict()
    var_1 = user_dict_0.__setitem__(var_0, dict_0)
    timer_1.start()


def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_2.dataclass(init=dict_0, slots=dict_0)
    exception_0 = module_3.Exception()
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(var_0, initial_text=exception_0, logger=var_0)
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0.start()


def test_case_9():
    dict_0 = {}
    var_0 = module_2.dataclass(init=dict_0, slots=dict_0)
    exception_0 = module_3.Exception()
    var_1 = module_2.dataclass(init=dict_0, slots=dict_0)
    timer_0 = module_0.Timer(text=var_0, initial_text=var_1)
    none_type_0 = timer_0.start()
    timer_0.__exit__()
