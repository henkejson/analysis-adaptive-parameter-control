# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    bool_0 = False
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    bytes_0 = b"^\xb7\xe1\xb4\x1ad\xe6!["
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__(*bytes_0)
    timer_1.stop()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    bool_0 = False
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_error_0 = module_0.TimerError()
    dict_0 = timer_0.__call__(timer_0)
    timer_0.__enter__()


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_1.field(default_factory=none_type_0, repr=dict_0, hash=none_type_0)
    timer_0 = module_0.Timer(var_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_1.stop()
    float_arg_1.__call__(float_0)


def test_case_10():
    str_0 = "@"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    bool_0 = True
    timer_3 = module_0.Timer(timer_2, initial_text=bool_0)
    float_0 = timer_2.stop()
    none_type_0 = timer_1.start()
    float_arg_0 = module_0.FloatArg()
    float_1 = timer_1.stop()
    timer_4 = timer_3.__enter__()
    var_0 = timer_0.__call__(float_1)
    var_1 = var_0.__repr__()
    timer_2.stop()


def test_case_12():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, timer_1, logger=timer_1)
    float_0 = timer_1.stop()
    none_type_0 = timer_2.start()
    str_0 = "Timer is not running. Use .start() to start it"
    none_type_1 = timer_1.start()
    float_1 = timer_0.stop()
    none_type_2 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    var_0 = timer_2.__call__(str_0)
    var_1 = timer_0.__repr__()
    timer_2.stop()
