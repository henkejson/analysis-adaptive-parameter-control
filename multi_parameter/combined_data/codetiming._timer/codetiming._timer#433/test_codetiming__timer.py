# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    bytes_0 = b"~\x18\x194ov&B\x05\xfeE\xb6\x95\xb6\xc9"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__repr__()


def test_case_4():
    str_0 = "z1"
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    str_0 = "z1"
    none_type_0 = None
    timer_0 = module_0.Timer(text=str_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_6():
    bytes_0 = b"~\x18\x194ov&B\x05\xfeE\xb6\x95\xb6\xc9"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()
    timer_0.start()


def test_case_7():
    bytes_0 = b"~\x18\x194ov&B\x05\xfeE\xb6\x95\xb6\xc9"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = module_0.Timer()
    timer_2 = timer_0.__enter__()
    float_0 = timer_2.stop()


def test_case_8():
    bytes_0 = b"\xfa\xbe\xe0\xf5[\x94\x95\xc8\xe2\xf5"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    bool_0 = True
    timer_1 = module_0.Timer(initial_text=bool_0)
    timer_2 = timer_1.__enter__()
    timer_0.stop()


def test_case_9():
    bytes_0 = b"\xfa\xbe\xe0\xf5[\x94\x95\xc8\xe2\xf5"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    timer_0.stop()
