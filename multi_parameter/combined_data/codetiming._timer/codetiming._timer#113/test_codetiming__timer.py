# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0)
    none_type_1 = timer_0.start()


def test_case_3():
    bytes_0 = b"\xce\xd8\xc8\xd2;\xfb\x07\r\xbci\x98\xc7"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_4():
    bytes_0 = b"\xce\xd8\x89\xd2;\xfb\x07\r\xbci\x98\xc7"
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_1.__exit__()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    bytes_0 = b""
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=bytes_0)
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    none_type_1.popitem()


def test_case_7():
    bytes_0 = b"\xda\xb2"
    timer_0 = module_0.Timer(bytes_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_8():
    bytes_0 = b"\xce\xd8\xc8\xd2;\xfb\x07\r\xbci\x98\xc7"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_0.start()


def test_case_9():
    str_0 = "W"
    timer_0 = module_0.Timer(initial_text=str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(text=timer_0)
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_10():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0)
    none_type_0 = timer_0.start()


def test_case_11():
    bytes_0 = b"\xd2\xfe"
    str_0 = "&-vc"
    timer_0 = module_0.Timer(text=bytes_0, initial_text=str_0)
    none_type_0 = None
    timer_1 = module_0.Timer(none_type_0, timer_0)
    none_type_1 = timer_1.start()
    list_0 = [none_type_1, none_type_0]
    none_type_2 = timer_1.__exit__(*list_0)
