# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    int_0 = -297
    timer_0 = module_0.Timer(int_0, initial_text=int_0)
    none_type_0 = timer_0.start()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_0.stop()


def test_case_3():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()


def test_case_5():
    int_0 = -297
    timer_0 = module_0.Timer(int_0, initial_text=int_0)
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_7():
    bool_0 = True
    timer_0 = module_0.Timer(bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_8():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_9():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__eq__(bool_0)
    timer_1.start()


def test_case_10():
    str_0 = "w(X^z"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    module_1.field(init=none_type_0, repr=str_0, hash=timer_1, metadata=timer_1)


def test_case_11():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_2 = module_0.Timer(text=timer_0)
    timer_3 = timer_2.__enter__()
    float_1 = timer_3.stop()
