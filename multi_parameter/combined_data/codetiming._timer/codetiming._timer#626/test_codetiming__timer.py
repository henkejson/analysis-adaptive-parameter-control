# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(str_0, logger=str_0)
    none_type_0 = timer_0.start()
    float_arg_0 = module_0.FloatArg()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_1.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(timer_1, logger=float_0)
    timer_1.__ror__(timer_1)


def test_case_4():
    bytes_0 = b"\x19a\xb9\xd9\xc9\x8a\x0c"
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_0.__exit__()


def test_case_5():
    bytes_0 = b"\x19a\xb9\xd9\xc9\x8a\x0c"
    timer_0 = module_0.Timer(logger=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_1)
    var_1 = var_0.__repr__()
    timer_2 = module_0.Timer(var_0, logger=var_1)
    timer_3 = module_0.Timer(text=var_1, initial_text=timer_2)
    none_type_0 = timer_3.start()
    timer_3.start()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_1)
    none_type_0 = None
    timer_2 = module_0.Timer(initial_text=var_0, logger=none_type_0)
    none_type_1 = timer_2.start()
    none_type_2 = timer_0.start()
    var_0.keys()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_1)
    var_1 = var_0.__repr__()
    timer_2 = var_0.__repr__()
    timer_3 = module_0.Timer(text=var_1, initial_text=timer_2)
    none_type_0 = timer_3.start()
    var_2 = var_0.__repr__()
    var_3 = var_0.__ror__(none_type_0)
    none_type_1 = timer_1.start()
    var_4 = timer_0.__repr__()
    dict_0 = {timer_2: var_1, timer_2: timer_1}
    var_2.__contains__(dict_0)


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_1)
    var_1 = var_0.__repr__()
    timer_2 = module_0.Timer(var_0, logger=var_1)
    timer_3 = module_0.Timer(var_0, initial_text=var_0)
    none_type_0 = timer_3.start()
    var_1.popitem()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    var_0 = timer_1.__eq__(timer_0)
    float_0 = timer_0.stop()
    var_1 = timer_0.__eq__(timer_1)
    timer_2 = module_0.Timer(var_0, timer_1)
    bool_0 = False
    timer_3 = module_0.Timer(text=bool_0)
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()
    none_type_2 = timer_0.start()
    timer_0.start()


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__eq__(timer_1)
    none_type_0 = None
    timer_2 = module_0.Timer(initial_text=var_0, logger=none_type_0)
    none_type_1 = timer_2.start()
    none_type_2 = timer_0.start()
    none_type_3 = timer_2.__exit__()
    var_0.keys()
