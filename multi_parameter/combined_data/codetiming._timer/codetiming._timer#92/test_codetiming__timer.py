# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_1.__exit__()


def test_case_2():
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    dict_0 = {}
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    float_arg_0 = timer_0.__call__(dict_0)
    timer_1 = timer_0.__enter__()
    timer_1.__enter__()


def test_case_5():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = None
    timer_1 = module_0.Timer(text=none_type_0, logger=none_type_0)
    none_type_1 = timer_1.start()
    timer_0.stop()


def test_case_6():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    int_0 = -2048
    timer_1 = timer_0.__enter__()
    set_0 = {int_0, int_0}
    dict_0 = {}
    none_type_1 = timer_1.__exit__()
    var_0 = timer_1.__eq__(timer_0)
    list_0 = [set_0, var_0, dict_0]
    var_1 = module_1.field(init=set_0, hash=var_0)
    module_0.FloatArg(*list_0)


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    bool_0 = True
    timer_0 = module_0.Timer(initial_text=bool_0)
    int_0 = -2016
    timer_1 = timer_0.__enter__()
    set_0 = {int_0, int_0}
    dict_0 = {}
    bool_1 = True
    var_0 = module_1.field(repr=float_arg_0, hash=set_0, kw_only=dict_0)
    timer_2 = module_0.Timer(var_0, initial_text=bool_1)
    none_type_0 = timer_2.start()
    module_0.FloatArg(*var_0)


def test_case_8():
    str_0 = "MN]B/+2\nj)}l\x0b#"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_1 = module_0.Timer()
    timer_0.start()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    bool_0 = False
    timer_0 = module_0.Timer(float_arg_0, initial_text=bool_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    module_0.FloatArg(*none_type_0)
