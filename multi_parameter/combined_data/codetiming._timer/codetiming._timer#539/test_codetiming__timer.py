# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    float_0 = 374.64
    timer_0 = module_0.Timer(float_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(none_type_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    timer_error_0 = module_0.TimerError()
    var_0 = timer_0.__eq__(timer_0)
    timer_0.__enter__()


def test_case_6():
    str_0 = '-$N/.~4CL<E"Zc'
    timer_0 = module_0.Timer(initial_text=str_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_7():
    float_0 = 374.64
    timer_0 = module_0.Timer(float_0)
    none_type_0 = timer_0.start()
    list_0 = [float_0, float_0]
    none_type_1 = timer_0.__exit__(*list_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__repr__()


def test_case_8():
    none_type_0 = None
    str_0 = ";3[a;A "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    timer_0 = module_0.Timer(none_type_0, initial_text=dict_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_0.stop()
    timer_1.copy()


def test_case_9():
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=none_type_0, logger=none_type_0)
    timer_1 = timer_0.__enter__()
    none_type_1 = timer_0.__exit__()
    timer_0.stop()


def test_case_10():
    str_0 = ";3[a;A "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    timer_0 = module_0.Timer(str_0, initial_text=dict_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    float_arg_0 = module_0.FloatArg()
    var_1 = timer_1.__call__(var_0)
    float_arg_1 = module_0.FloatArg()
    float_0 = timer_0.stop()
    var_0.copy()
