# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import dataclasses as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_0.__exit__()
    timer_0.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_1)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    none_type_1 = timer_1.start()
    timer_1.start()


def test_case_4():
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_3 = module_0.Timer()
    timer_4 = module_0.Timer(initial_text=timer_error_0)


def test_case_5():
    str_0 = "z"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    none_type_0 = timer_0.start()


def test_case_6():
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(**dict_0)
    float_arg_1 = module_0.FloatArg()
    str_0 = 'Kwa[k<7UxzS\x0bhb="h\tA7'
    none_type_0 = None
    float_arg_2 = module_0.FloatArg()
    timer_0 = module_0.Timer(str_0, dict_0, str_0, none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    user_dict_0 = module_1.UserDict()
    var_0 = user_dict_0.__len__()
    var_0.items()


def test_case_7():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_8():
    bool_0 = True
    list_0 = []
    dict_0 = {}
    float_arg_0 = module_0.FloatArg(*list_0, **dict_0)
    bytes_0 = b'V\xa2\x1a*d\xc38\xe1v\xbd\xf0\xbe\x8b"\x8e\x10\xf8\xcc\x93'
    timer_0 = module_0.Timer(bool_0, initial_text=bool_0, logger=bytes_0)
    timer_0.__enter__()


def test_case_9():
    list_0 = []
    var_0 = module_2.dataclass(eq=list_0)
    timer_0 = module_0.Timer(text=var_0, logger=var_0)
    timer_1 = timer_0.__enter__()
    timer_0.__exit__()
