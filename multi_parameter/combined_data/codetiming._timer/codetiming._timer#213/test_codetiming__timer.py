# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import codetiming._timers as module_1
import collections as module_2
import dataclasses as module_3


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    str_0 = "$^Wg"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_5():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    timer_error_0 = module_0.TimerError(*list_0)
    str_0 = "Bl18\\sKo)"
    timer_0 = module_0.Timer(initial_text=str_0)
    var_0 = timer_0.__repr__()
    var_1 = var_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()


def test_case_7():
    str_0 = "Bl18\\sKo)"
    timer_0 = module_0.Timer(initial_text=str_0)
    var_0 = timer_0.__repr__()
    var_1 = var_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_error_0 = module_0.TimerError()


def test_case_8():
    set_0 = set()
    timer_0 = module_0.Timer(set_0)
    timers_0 = module_1.Timers()
    str_0 = "Timer"
    float_arg_0 = module_0.FloatArg()
    timer_1 = module_0.Timer(str_0, str_0, float_arg_0)
    var_0 = timers_0.__copy__()
    var_1 = var_0.__copy__()
    var_2 = var_1.__repr__()
    none_type_0 = timer_1.start()
    var_3 = var_2.__iter__()
    var_3.start()


def test_case_9():
    str_0 = "Y63:fhnY~<\x0bg3"
    none_type_0 = None
    timer_0 = module_0.Timer(str_0, initial_text=none_type_0)
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    var_1 = timer_2.__eq__(timer_2)
    timer_3 = timer_2.__enter__()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.__exit__()


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "E+"
    str_1 = "$\x0bW?SHcGnf"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    user_dict_0 = module_2.UserDict(**dict_0)
    var_0 = user_dict_0.__ror__(none_type_0)
    var_1 = var_0.__repr__()
    timer_error_0 = module_0.TimerError(*list_0)
    timer_0 = module_0.Timer(initial_text=var_0)
    var_2 = var_1.__repr__()
    var_3 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer()
    timer_3 = timer_2.__enter__()
    float_arg_0 = module_0.FloatArg()
    none_type_1 = timer_0.__exit__()


def test_case_11():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()
    timer_error_0 = module_0.TimerError()
    var_0 = module_3.field(repr=none_type_0, hash=none_type_0)
    var_0.values()
