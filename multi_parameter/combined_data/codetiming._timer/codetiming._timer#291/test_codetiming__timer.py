# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1
import time as module_2


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_0, logger=none_type_0)
    none_type_1 = timer_1.__exit__()
    timer_0.__exit__()


def test_case_3():
    bytes_0 = b"\xd7^\xb5\xce%\x98pG\xde\x90\x15\xe3\x97\xbdW\xc4\x0c\x1bp"
    timer_0 = module_0.Timer(logger=bytes_0)
    none_type_0 = timer_0.start()
    timer_0.__enter__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_0, logger=none_type_0)
    none_type_1 = timer_1.__exit__()
    var_0 = timer_2.__enter__()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()


def test_case_6():
    bytes_0 = b"\xd7^\xb5\xce%\x98pG\xde\x90\x15\xe3\x97\xbd\xc4\x0c\x1bp"
    none_type_0 = None
    timer_0 = module_0.Timer(text=bytes_0, logger=none_type_0)
    none_type_1 = None
    str_0 = "r2L"
    timer_1 = timer_0.__enter__()
    none_type_2 = timer_0.__exit__()
    var_0 = none_type_2.__eq__(none_type_1)
    dict_0 = {str_0: str_0}
    user_dict_0 = module_1.UserDict(**dict_0)
    module_2.struct_time()


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(text=timer_0, initial_text=timer_0, logger=timer_0)
    timer_2 = timer_1.__enter__()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(text=timer_1, initial_text=timer_0, logger=timer_1)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_1.__exit__()
    float_0 = timer_3.stop()
    var_0 = timer_2.__repr__()
    timer_4 = timer_1.__enter__()
    timer_0.__enter__()


def test_case_9():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = module_0.Timer(var_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_2.__exit__()
    var_0.stop()


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    str_0 = "Timer is running. Use .stop() to stop it"
    timer_2 = module_0.Timer(str_0, timer_0, str_0, str_0)
    none_type_0 = timer_0.__exit__()
    var_0 = timer_0.__repr__()
    timer_2.__enter__()


def test_case_11():
    timer_0 = module_0.Timer()
    list_0 = [timer_0, timer_0, timer_0, timer_0]
    str_0 = "#+"
    timer_1 = module_0.Timer(timer_0, initial_text=list_0)
    timer_error_0 = module_0.TimerError()
    var_0 = timer_1.__call__(str_0)
    var_1 = timer_1.__eq__(var_0)
    timer_2 = timer_1.__enter__()
    var_0.__enter__()
