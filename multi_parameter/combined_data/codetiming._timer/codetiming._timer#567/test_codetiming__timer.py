# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    bytes_0 = b"\xaf\xba\x00s"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()
    timer_0.__enter__()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_0.__exit__()


def test_case_4():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_1.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = timer_1.__exit__()
    var_0 = timer_1.__repr__()
    complex_0 = 2996 - 1876.6757j
    var_1 = timer_1.__call__(complex_0)


def test_case_6():
    bytes_0 = b"\xaf\xba\x00s"
    timer_0 = module_0.Timer(initial_text=bytes_0)
    timer_1 = timer_0.__enter__()


def test_case_7():
    str_0 = "T"
    timer_0 = module_0.Timer(str_0, initial_text=str_0)
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(text=float_0)
    timer_3 = timer_0.__enter__()
    module_0.FloatArg(*var_0)


def test_case_8():
    timer_0 = module_0.Timer()
    bytes_0 = b"\x81\x82!\x9f\xdf\xe6\xdad\x87\xbd\x9b"
    none_type_0 = None
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    float_0 = timer_0.stop()
    timer_1 = module_0.Timer(initial_text=bytes_0, logger=none_type_0)
    dict_0 = {bytes_0: bytes_0}
    none_type_2 = timer_1.start()
    var_1 = timer_0.__eq__(timer_1)
    var_2 = dict_0.__iter__()
    var_3 = var_0.__repr__()
    var_2.keys()


def test_case_9():
    timer_error_0 = module_0.TimerError()
    str_0 = "pewK<Ddr- \n<Maq`B\x0c"
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0 = timer_0.__call__(none_type_0)
    var_1 = module_1.field(default=str_0, repr=str_0, metadata=str_0)
    module_0.TimerError(**var_1)


def test_case_10():
    int_0 = 3227
    dict_0 = {int_0: int_0, int_0: int_0}
    timer_0 = module_0.Timer(dict_0, initial_text=int_0)
    timer_1 = timer_0.__enter__()
    bytes_0 = b"\xaf\xba\x00s"
    timer_2 = module_0.Timer(initial_text=bytes_0)
    none_type_0 = timer_2.start()
    none_type_1 = timer_2.__exit__()
    timer_3 = timer_2.__enter__()
    none_type_2 = timer_2.__exit__()
    timer_2.stop()


def test_case_11():
    int_0 = 3227
    dict_0 = {int_0: int_0, int_0: int_0}
    timer_0 = module_0.Timer(dict_0, initial_text=int_0)
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(text=timer_0, initial_text=none_type_0)
    none_type_1 = timer_2.start()
    none_type_2 = timer_2.__exit__()
    timer_3 = timer_2.__enter__()
    none_type_3 = timer_2.__exit__()
    timer_2.stop()
