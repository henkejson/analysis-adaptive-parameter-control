# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1
import collections as module_2


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    dict_0 = {}
    timer_0 = module_0.Timer(initial_text=dict_0)
    timer_0.stop()


def test_case_2():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    timer_0.__exit__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_4():
    dict_0 = {}
    timer_0 = module_0.Timer(initial_text=dict_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = timer_0.__enter__()
    var_0 = module_1.field()
    var_1 = var_0.__repr__()
    var_0.__len__()


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(text=none_type_0)
    timer_1 = timer_0.__enter__()
    var_0 = timer_0.__call__(timer_0)
    timer_0.start()


def test_case_6():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    none_type_0 = timer_2.start()
    none_type_1 = None
    timer_3 = module_0.Timer(timer_2, logger=none_type_1)
    var_1 = timer_0.__call__(var_0)
    none_type_2 = timer_2.__exit__()
    var_2 = timer_0.__eq__(timer_0)
    timer_4 = timer_3.__enter__()
    var_3 = var_2.__eq__(var_0)
    none_type_3 = timer_0.__exit__()
    timer_1.stop()


def test_case_7():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__repr__()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    none_type_0 = timer_2.start()
    none_type_1 = None
    timer_3 = module_0.Timer(timer_2, logger=none_type_1)
    var_1 = timer_0.__call__(var_0)
    none_type_2 = timer_2.__exit__()
    var_2 = timer_0.__eq__(timer_0)
    timer_4 = timer_3.__enter__()
    var_3 = var_2.__eq__(var_0)
    var_4 = var_1.__eq__(none_type_0)
    timer_4.__exit__()


def test_case_8():
    bool_0 = True
    str_0 = "Timer {name} started"
    timer_0 = module_0.Timer(initial_text=str_0, logger=bool_0)
    timer_0.__enter__()


def test_case_9():
    timer_0 = module_0.Timer()
    timer_1 = module_0.Timer(logger=timer_0)
    none_type_0 = timer_1.start()
    user_dict_0 = module_2.UserDict()
    var_0 = timer_0.__repr__()
    timer_2 = module_0.Timer(none_type_0, timer_1, timer_1, timer_0)
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    str_0 = "Wm0UCr~]m"
    timer_error_1 = module_0.TimerError()
    float_0 = timer_1.stop()
    timer_3.get(str_0)


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__eq__(timer_0)
    timer_2 = module_0.Timer(logger=timer_0)
    none_type_0 = timer_2.start()
    user_dict_0 = module_2.UserDict()
    var_0 = timer_0.__repr__()
    none_type_1 = None
    timer_3 = module_0.Timer(timer_2, logger=none_type_1)
    var_1 = var_0.__eq__(timer_1)
    timer_4 = module_0.Timer(none_type_0, timer_2, timer_1, timer_0)
    timer_5 = timer_4.__enter__()
    user_dict_1 = module_2.UserDict()
    timer_6 = module_0.Timer()
    timer_error_0 = module_0.TimerError()
    timer_error_1 = module_0.TimerError()
    var_2 = var_0.__repr__()
    float_0 = timer_4.stop()
    var_0.update(var_0)


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(logger=timer_0)
    user_dict_0 = module_2.UserDict()
    var_0 = timer_0.__repr__()
    none_type_0 = None
    timer_3 = module_0.Timer(timer_2, logger=none_type_0)
    none_type_1 = user_dict_0.update()
    timer_4 = module_0.Timer(var_0, timer_2, timer_1, timer_0)
    timer_5 = timer_4.__enter__()
    timer_1.__len__()
