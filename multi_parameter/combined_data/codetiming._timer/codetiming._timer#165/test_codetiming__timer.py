# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_0 = module_0.Timer()


def test_case_1():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()


def test_case_2():
    str_0 = "dP'3`CYIN\\+dYJ_"
    timer_0 = module_0.Timer(str_0)
    timer_error_0 = module_0.TimerError()
    none_type_0 = None
    var_0 = timer_0.__call__(none_type_0)
    timer_0.__exit__()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_4():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__eq__(timer_0)
    timer_1 = module_0.Timer(initial_text=timer_0)
    timer_2 = timer_1.__enter__()
    none_type_0 = timer_1.__exit__()
    var_1 = timer_0.__call__(timer_1)
    module_0.FloatArg(*var_1)


def test_case_5():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()


def test_case_6():
    none_type_0 = None
    timer_0 = module_0.Timer(logger=none_type_0)
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_0)
    none_type_1 = timer_1.__exit__()
    timer_1.__or__(none_type_0)


def test_case_7():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(initial_text=timer_0)
    timer_3 = timer_2.__enter__()
    timer_2.start()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = module_1.dataclass(order=timer_0, kw_only=timer_0, slots=timer_0)
    timer_2 = module_0.Timer(initial_text=timer_0)
    timer_3 = timer_2.__enter__()


def test_case_9():
    str_0 = "-z9V`P4!*ug\t"
    timer_0 = module_0.Timer(text=str_0, initial_text=str_0)
    var_0 = timer_0.__repr__()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()
    none_type_1 = timer_0.start()
    none_type_2 = timer_0.__exit__()
    var_0.__getitem__(none_type_2)


def test_case_10():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    timer_2 = module_0.Timer(timer_1, initial_text=timer_0)
    timer_3 = timer_2.__enter__()
    float_0 = timer_0.stop()
    timer_4 = module_0.Timer(initial_text=timer_0)
    var_0 = timer_4.__repr__()
    timer_5 = timer_4.__enter__()
    none_type_0 = timer_4.__exit__()
    var_1 = timer_0.__call__(timer_4)
    var_1.setdefault(timer_4, none_type_0)


def test_case_11():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    none_type_0 = None
    timer_2 = module_0.Timer(float_0, initial_text=none_type_0)
    timer_3 = timer_2.__enter__()
    none_type_1 = timer_2.__exit__()
    var_0 = timer_0.__call__(timer_2)
    var_1 = timer_3.__call__(none_type_1)
    str_0 = "AAx >}"
    var_0.setdefault(str_0)


def test_case_12():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_2 = module_0.Timer(text=timer_1, initial_text=float_0)
    timer_3 = timer_2.__enter__()
    none_type_0 = timer_2.__exit__()
    list_0 = timer_3.__eq__(timer_0)
    var_0 = timer_0.__call__(timer_2)
    var_0.setdefault(timer_2, none_type_0)
