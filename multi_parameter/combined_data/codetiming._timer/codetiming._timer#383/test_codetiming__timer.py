# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import dataclasses as module_1


def test_case_0():
    timer_error_0 = module_0.TimerError()


def test_case_1():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()


def test_case_2():
    timer_0 = module_0.Timer()
    timer_0.stop()


def test_case_3():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_1.__repr__()
    timer_2 = timer_1.__enter__()
    timer_1.start()


def test_case_4():
    str_0 = "Definition of Time.\n\nSee help(codetiing) for quick instructions, and\nhtps://pypi.org/project/codetiming/ for more details.\n"
    timer_0 = module_0.Timer(str_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    none_type_1 = timer_0.__exit__()
    var_0 = timer_0.__eq__(none_type_1)
    none_type_2 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_6():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_7():
    bytes_0 = b"\xf2Y"
    timer_0 = module_0.Timer(bytes_0, initial_text=bytes_0)
    none_type_0 = timer_0.start()


def test_case_8():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    var_0 = timer_0.__repr__()
    timer_2 = timer_0.__enter__()
    timer_3 = module_0.Timer(timer_0, var_0, var_0)
    float_1 = timer_0.stop()
    var_1 = module_1.dataclass(unsafe_hash=float_0, frozen=timer_3, match_args=timer_2)
    var_2 = timer_3.__eq__(var_1)
    timer_3.__enter__()


def test_case_9():
    timer_0 = module_0.Timer()
    float_arg_0 = module_0.FloatArg()
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_error_0 = module_0.TimerError()
    timer_2 = timer_1.__enter__()
    str_0 = "Definition of Timer.\n\nSee help(codetiming) for quick instructions, and\nhttps://pypi.org/project/codetiming/ for more details.\n"
    none_type_0 = None
    timer_3 = module_0.Timer(logger=none_type_0)
    float_1 = timer_0.stop()
    var_0 = module_1.dataclass()
    timer_4 = timer_0.__enter__()
    none_type_1 = timer_3.start()
    var_1 = timer_4.__eq__(timer_error_0)
    var_0.__getitem__(str_0)


def test_case_10():
    str_0 = "Ml\rw.W$"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = module_0.Timer()
    var_0 = timer_0.__call__(timer_1)
    var_1 = timer_0.__repr__()
    timer_2 = timer_1.__enter__()
    timer_3 = module_0.Timer(initial_text=var_0)
    timer_4 = timer_3.__enter__()
    timer_4.start()


def test_case_11():
    str_0 = "Ml\rw.W$"
    timer_0 = module_0.Timer(str_0, str_0, str_0)
    timer_1 = module_0.Timer()
    var_0 = timer_0.__call__(timer_1)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
    var_1 = timer_2.__repr__()
    timer_3 = timer_2.__enter__()
    timer_4 = module_0.Timer(var_0, var_0, timer_2)
    timer_5 = timer_4.__enter__()
    none_type_0 = timer_4.__exit__()
    var_1.start()


def test_case_12():
    timer_0 = module_0.Timer()
    timer_1 = timer_0.__enter__()
    none_type_0 = None
    timer_2 = module_0.Timer(logger=none_type_0)
    var_0 = module_1.field(default=timer_0, compare=timer_0, kw_only=timer_2)
    timer_3 = timer_2.__enter__()
    float_0 = timer_3.stop()
    var_1 = timer_2.__repr__()
    timer_0.__enter__()
