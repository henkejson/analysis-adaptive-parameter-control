# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import codetiming._timer as module_0
import collections as module_1


def test_case_0():
    float_arg_0 = module_0.FloatArg()


def test_case_1():
    timer_0 = module_0.Timer()
    var_0 = timer_0.__call__(timer_0)
    timer_1 = timer_0.__enter__()
    timer_0.start()


def test_case_2():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = timer_0.__enter__()


def test_case_3():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer()
    list_0 = []
    timer_0.__exit__(*list_0)


def test_case_4():
    bytes_0 = b"\xc7\x9ak\x11|"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=bytes_0, logger=none_type_0)
    bool_0 = True
    none_type_1 = timer_0.start()
    float_arg_0 = module_0.FloatArg()
    list_0 = [bool_0]
    var_0 = timer_0.__repr__()
    user_dict_0 = module_1.UserDict()
    var_1 = float_arg_0.__eq__(timer_0)
    timer_0.__ior__(list_0)


def test_case_5():
    timer_0 = module_0.Timer()
    none_type_0 = timer_0.start()
    float_0 = timer_0.stop()


def test_case_6():
    str_0 = "98\n"
    timer_0 = module_0.Timer(initial_text=str_0, logger=str_0)
    timer_0.__enter__()


def test_case_7():
    bytes_0 = b"\xc7\x9ak\x11|"
    none_type_0 = None
    timer_0 = module_0.Timer(initial_text=bytes_0, logger=none_type_0)
    none_type_1 = timer_0.start()
    var_0 = timer_0.__repr__()
    float_arg_0 = module_0.FloatArg()
    float_0 = timer_0.stop()
    var_1 = timer_0.__repr__()
    user_dict_0 = module_1.UserDict()
    user_dict_0.__getitem__(float_arg_0)


def test_case_8():
    float_arg_0 = module_0.FloatArg()
    none_type_0 = None
    timer_0 = module_0.Timer(float_arg_0, initial_text=none_type_0)
    timer_1 = timer_0.__enter__()
    float_0 = timer_0.stop()
    timer_0.__exit__()


def test_case_9():
    float_arg_0 = module_0.FloatArg()
    float_arg_1 = module_0.FloatArg()
    timer_0 = module_0.Timer(float_arg_0, float_arg_0, float_arg_1)
    timer_1 = timer_0.__enter__()
    timer_0.stop()


def test_case_10():
    float_arg_0 = module_0.FloatArg()
    timer_0 = module_0.Timer(initial_text=float_arg_0)
    timer_1 = module_0.Timer(text=timer_0)
    timer_2 = timer_1.__enter__()
    float_0 = timer_1.stop()
