# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1734
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 80
    list_0 = [int_0, int_0, int_0]
    list_1 = [list_0, list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    dict_0 = {
        bool_0: set_0,
        bool_0: set_0,
        bool_0: bool_0,
        bool_0: set_0,
        bool_0: set_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xdf\xe3\x8f\xc0F.\xeb>\xbff\xde\x08_\n\x80"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "d"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\xdf\xe3\x8f\xc0F.\xeb>\xbff\xde\x08_\n\x80"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "dW]3/:dYs.+w>v"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict()


def test_case_12():
    str_0 = "d "
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_2.object()
    module_0.to_namedtuple(str_0)
