# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "i"
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "}R{D_\n"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    int_0 = 839
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"\x1cT\xf3\x06E\xa3"
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (set_0, bytes_0, bool_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bool_1 = True
    module_0.to_namedtuple(bool_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    float_0 = 1353.8808
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [float_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = -1600
    module_0.to_namedtuple(int_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(bool_0, none_type_0, defaults=dict_0)


def test_case_10():
    bytes_0 = b"y\x88Z\xd6\xf3P\x9a\xe9O\x98\xa5@(\xda\\4\xe5k\xf4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (bool_0, set_0, set_0)
    list_0 = [dict_0, tuple_0, dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "U~UDsF*4R q=(ZU\n-W"
    int_0 = -2594
    dict_0 = {int_0: int_0, int_0: int_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_1)
    module_0.to_namedtuple(int_0)


def test_case_12():
    str_0 = " PuB"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, dict_0, ordered_dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)
