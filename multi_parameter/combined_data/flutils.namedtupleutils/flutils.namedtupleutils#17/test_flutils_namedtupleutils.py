# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    str_0 = "I{E3r]a>@_z9}"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, str_0: str_0}
    float_0 = 620.891
    list_0 = [dict_0, dict_0, str_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "cherry_pick"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x14OLg~"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = -2473
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(int_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    float_0 = 1238.083525
    bytes_0 = b"w\xe2g*\x1f\xd1|\xc4m\xf5n\xcc\x06F\x08\xf8\xb2\x0e"
    dict_0 = {float_0: float_0, float_0: bytes_0, bytes_0: float_0}
    tuple_0 = (float_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "cherry_pick"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    float_0 = 3171.2156165554084
    str_0 = "a{H/5UW\nTQJ{\\\n<EPF"
    str_1 = "\nherry_pick"
    dict_0 = {str_0: str_1, str_1: str_0, float_0: str_1, str_1: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    float_1 = 4481.96
    set_0 = {float_1}
    tuple_0 = (dict_0, var_0, float_1, set_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(float_1)
