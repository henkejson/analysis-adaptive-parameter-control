# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "Rv0QE"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = 'The given name: %r, is not a valid "login name" for this operating system.'
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bool_0 = True
    str_0 = "_"
    tuple_0 = ()
    dict_0 = {bool_0: str_0, str_0: str_0}
    tuple_1 = (str_0, tuple_0, tuple_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_10():
    bool_0 = True
    str_0 = "E_"
    tuple_0 = ()
    dict_0 = {bool_0: str_0, str_0: str_0}
    tuple_1 = (str_0, tuple_0, tuple_0, dict_0)
    tuple_2 = (bool_0, tuple_1, bool_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"2\xb4\r\xfbv\x886\xa3\xf7,^\xed+\xa4TT\x8aM+"
    bool_0 = False
    dict_1 = {bytes_0: bool_0, var_0: var_0}
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_3)
    module_0.to_namedtuple(dict_1)


def test_case_12():
    bool_0 = True
    str_0 = "E\r"
    tuple_0 = ()
    dict_0 = {bool_0: str_0, str_0: str_0}
    tuple_1 = (str_0, tuple_0, tuple_0, dict_0)
    tuple_2 = (bool_0, tuple_1, bool_0)
    list_0 = [bool_0, tuple_2, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)
