# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = 75
    list_0 = [int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_3():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_4():
    str_0 = "qy"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "]y"
    int_0 = -888
    str_1 = "Th<<e`KR0]|"
    dict_0 = {str_0: int_0, str_1: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, none_type_0)


def test_case_9():
    str_0 = "qy"
    int_0 = -888
    str_1 = "Th<<e`KR0]|"
    dict_0 = {str_0: int_0, str_1: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, none_type_0)


def test_case_10():
    bool_0 = False
    str_0 = "maintainer_email"
    dict_0 = {bool_0: str_0, bool_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_11():
    bytes_0 = b"Z"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    bool_0 = False
    str_0 = "maintainer_email\x0c"
    dict_0 = {bool_0: str_0, bool_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.OrderedDict(**var_0)
