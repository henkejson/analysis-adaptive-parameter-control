# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = -2579.9707
    module_0.to_namedtuple(float_0)


def test_case_1():
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "encode"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b'&\t]\x96\xcf\xd7\xfe\xa4"i_}\xb2\xdb'
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b"\x89vN\xcd"
    int_0 = -570
    tuple_0 = (bytes_0, bytes_0, int_0, bytes_0)
    dict_0 = {tuple_0: int_0, bytes_0: int_0, bytes_0: tuple_0, bytes_0: tuple_0}
    bool_0 = False
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (dict_0, dict_0, bool_0, bytes_0)
    module_0.to_namedtuple(tuple_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "OW\x0bp/liN"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"\x84.\xc9\x94\x8a\x95\xa2\xa9\x8b\x99\xf2#"
    module_0.to_namedtuple(bytes_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(dict_0)
    var_9 = module_0.to_namedtuple(dict_0)
    var_10 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "\x0bx"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, str_0]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(var_5)
    ordered_dict_1 = module_1.OrderedDict()
    tuple_0 = (var_6,)
    var_7 = module_0.to_namedtuple(ordered_dict_1)
    var_8 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    var_9 = module_0.to_namedtuple(var_7)
    dict_1 = {tuple_0: tuple_0}
    var_10 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(object_0)
