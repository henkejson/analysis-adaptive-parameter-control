# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 2085
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = -1848 - 634j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    list_0 = [set_0, set_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {bool_0: bool_0, bool_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"Cf\xb0\xddo\xe7@\x84qz\x8a\xbcG\x11\xeb"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b"pN\x11y\xb2\x11k\xac\xf6\x96\xbb\xd1\x19$\xc7\x07\\\xc3\xb3E"
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "W"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {bool_0: bool_0, bool_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    complex_0 = -1469.863 - 80.342j
    list_0 = []
    str_0 = "@h,\\UDQj[+umbw8w"
    dict_0 = {str_0: complex_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(complex_0)


def test_case_11():
    bytes_0 = b"Ax\xf5\x189\x86\x9a2\xd2N2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\rj"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (list_0,)
    dict_1 = {bool_0: bool_0, bool_0: list_0}
    tuple_1 = (tuple_0, list_0, dict_1)
    var_2 = module_0.to_namedtuple(tuple_1)
    bytes_0 = b""
    var_3 = module_0.to_namedtuple(list_0)
    ordered_dict_1 = module_1.OrderedDict()
    list_1 = [var_2, tuple_0, bytes_0]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_3)
