# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "exists_as"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "exists_as"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"\x0f\xe5b#\xe0g\x04u\xce"
    bool_0 = False
    dict_0 = {bool_0: bytes_0, bytes_0: bool_0, bytes_0: bool_0, bytes_0: bool_0}
    tuple_0 = (bytes_0, bool_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    float_0 = -916.0
    str_0 = "\\&;F\npV"
    str_1 = "Cr:&f[&(;|Bc*"
    str_2 = "z,\\&z]5+WGlL\r`_B%"
    dict_0 = {str_0: float_0, str_1: str_1, str_2: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    float_1 = -2602.67
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(float_1)


def test_case_10():
    str_0 = "exists_as"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "h$Dt_atrs"
    str_1 = "w\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [str_1, ordered_dict_0, str_0]
    list_1 = [list_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_1)
    bytes_0 = b"s\x0f\xe5b#\xe0g\x04u\xce"
    bool_0 = False
    dict_1 = {bool_0: bytes_0, bool_0: bytes_0, bool_0: bool_0}
    var_1 = module_0.to_namedtuple(dict_1)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_0)
    dict_2 = {bool_0: bytes_0, bytes_0: bool_0, bytes_0: var_1, bytes_0: var_1}
    tuple_0 = (bytes_0, bool_0, dict_2)
    var_5 = module_0.to_namedtuple(dict_1)
    var_6 = module_0.to_namedtuple(var_5)
    module_0.to_namedtuple(tuple_0)
