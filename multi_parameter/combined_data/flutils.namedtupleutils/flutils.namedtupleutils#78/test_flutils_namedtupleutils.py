# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    complex_0 = -1102.4752 + 622.8j
    dict_0 = {}
    tuple_0 = (complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "jZhS5V"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "\t\x0bsz$"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    complex_0 = -1102.4752 + 622.8j
    dict_0 = {}
    tuple_0 = (complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bool_0 = True
    str_0 = "jYZhS5VY"
    str_1 = "]=Y{_&e"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_1: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [ordered_dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)


def test_case_9():
    complex_0 = -1102.4752 + 622.8j
    dict_0 = {complex_0: complex_0}
    tuple_0 = (complex_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(complex_0)


def test_case_10():
    bytes_0 = b"\xa2)f\x08\\"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: list_0}
    list_1 = [dict_0, bytes_0]
    module_0.to_namedtuple(list_1)


def test_case_11():
    bool_0 = True
    str_0 = "QM6\t^NMaz1>)=|VBKp)"
    str_1 = "jYZhS5VY\x0c"
    str_2 = "Unable to run the command "
    set_0 = set()
    bool_1 = True
    tuple_0 = (set_0, bool_0, bool_0, bool_1)
    dict_0 = {str_0: bool_0, str_1: bool_0, str_2: tuple_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [bool_0, ordered_dict_0, str_1]
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(set_0)
