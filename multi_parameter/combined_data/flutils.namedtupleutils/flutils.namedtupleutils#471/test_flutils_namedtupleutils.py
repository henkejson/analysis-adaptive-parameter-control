# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    tuple_1 = (bool_0,)
    var_2 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"y\xd2U"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "cherrn_pick"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    tuple_0 = (ordered_dict_0,)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    list_0 = []
    str_0 = "32cv2bo=3Eu.ja)o&cy$"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_6)
    dict_1 = {var_3: var_3, var_5: ordered_dict_1}
    var_8 = module_0.to_namedtuple(dict_1)
    var_9 = module_0.to_namedtuple(var_5)
    list_1 = [dict_1]
    var_10 = module_0.to_namedtuple(list_1)
    var_11 = module_0.to_namedtuple(var_7)
    var_12 = module_0.to_namedtuple(var_9)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "cherrn_pick"
    object_0 = module_2.object(*list_0)
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        object_0: list_0,
        str_0: list_0,
        str_0: list_0,
        object_0: list_0,
        str_0: object_0,
    }
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0, dict_0)
    tuple_1 = (tuple_0,)
    tuple_2 = (tuple_1,)
    module_0.to_namedtuple(tuple_2)


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    complex_0 = 3109.24 + 1798.9j
    tuple_0 = (complex_0,)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(list_0)
    str_0 = "G\n\t"
    var_5 = module_0.to_namedtuple(var_2)
    object_0 = module_2.object(*list_0)
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        object_0: list_0,
        str_0: list_0,
        str_0: list_0,
        var_5: var_2,
        str_0: var_3,
    }
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_6 = module_0.to_namedtuple(ordered_dict_0)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(tuple_0)
    object_1 = module_2.object(*var_4)
