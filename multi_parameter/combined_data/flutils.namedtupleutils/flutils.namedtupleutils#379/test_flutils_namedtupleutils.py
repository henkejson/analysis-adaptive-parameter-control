# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = ',5\r9(qclT#+U"'
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = False
    str_0 = "Kss"
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: str_0,
        str_0: bool_0,
        bool_0: bool_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    bool_0 = True
    str_0 = "Kss"
    dict_0 = {
        str_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: str_0,
        str_0: bool_0,
        bool_0: bool_0,
        str_0: str_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "LsR;!0<IpI#$ 7}?C"
    set_0 = set()
    str_1 = '58"n&s2:$4WJ'
    str_2 = "[@N^,k6c-|"
    dict_0 = {str_0: set_0, str_0: set_0, str_1: set_0, str_1: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bytes_0 = b"\x89\xfe\xaf\x94A\xf6*\xb9\x93EP\xa3\x97\x17\x05\xce\x9d\xd3\xd5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    bool_0 = True
    str_0 = "\x0cKOs"
    dict_0 = {
        bool_0: bool_0,
        str_0: str_0,
        bool_0: bool_0,
        bool_0: str_0,
        str_0: bool_0,
        bool_0: bool_0,
    }
    list_0 = [dict_0, str_0, str_0, bool_0]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    bool_1 = True
    module_0.to_namedtuple(bool_1)
