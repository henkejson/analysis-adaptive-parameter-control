# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "B*-^="
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bytes_0 = b"y\r\xc0q2.4\xe9"
    bool_0 = True
    tuple_0 = (ordered_dict_0, bytes_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "B*-^="
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "IME^$GRc\x0bp,d{"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = False
    str_0 = ""
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "is_package"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bytes_0 = b"lX\x05+\xa2\xdac0A\x0c\xff\xd8"
    bytes_1 = b"\x9c\xbb{\xf5\x1c\xa8\xfb/q$f\xf4\xf8\xb3\xa5T"
    tuple_0 = (bytes_0, bytes_0, bytes_1)
    list_0 = [tuple_0, tuple_0, tuple_0, bytes_1]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "IME^$GRc\x0bp,d{"
    module_0.to_namedtuple(str_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "L\t"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(object_0)


def test_case_12():
    bytes_0 = b"\x01X0\xc5\x9e`\xb0q"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
