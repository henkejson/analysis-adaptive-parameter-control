# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "yB1STaO_yIn"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"IT\x8a\xda\xecI$\x88%\x14\xa3i\x15sq-\xcf\x8f\xcd"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = 2217
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "0#%pjojD/'|EFues"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    complex_0 = 1948.03 + 375j
    dict_1 = {
        complex_0: var_0,
        complex_0: var_0,
        var_0: complex_0,
        complex_0: complex_0,
    }
    var_1 = module_0.to_namedtuple(dict_1)
    tuple_0 = (dict_1, var_1, var_0)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    int_0 = 1410
    bytes_0 = b"\xb27*\xf5\xe5\xe7xC"
    tuple_0 = (int_0, bytes_0, int_0)
    dict_0 = {tuple_0: bytes_0, bytes_0: int_0, tuple_0: tuple_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "yB1STaO_yIn"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "yB1STaO_yI\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
