# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 20
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "k"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0, str_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "*~dwD(glu_9\nn0\n3#"
    object_0 = module_2.object()
    dict_0 = {str_0: str_0, object_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"\x10\x9b\xde?\xf8G"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "k"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_0, dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bytes_0 = b"\xbc\xc8\xde"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_14():
    str_0 = "dN2,,0x\x0c4y\tz+r'j3"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_1 = ',;x&,,d~ns4O"4w'
    object_0 = module_2.object()
    dict_1 = {str_1: object_0, object_0: bool_0}
    tuple_0 = (list_0, str_1, dict_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_2 = "\tL"
    dict_2 = {str_2: str_2, str_2: str_2}
    var_3 = module_0.to_namedtuple(dict_2)
    list_1 = [var_3, var_3, str_2, dict_2, var_3]
    var_4 = module_0.to_namedtuple(list_1)
    list_2 = [bool_0, list_0, var_3, tuple_0]
    var_5 = module_0.to_namedtuple(list_2)
    ordered_dict_0 = module_1.OrderedDict()
    module_0.to_namedtuple(str_2)
