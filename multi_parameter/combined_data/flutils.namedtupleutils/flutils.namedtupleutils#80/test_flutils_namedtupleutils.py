# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 4
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "ES"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xd9\x00\xb6\xb3\xecs\x17-GV\x1aa"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"<\x13T\xec\xf7]\xcd\xc1d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    float_0 = -181.39
    tuple_0 = (bytes_0, dict_0, dict_0, float_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "__cherry_pick_map__"
    none_type_0 = None
    str_1 = "ES"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"H\x17\r x\xbb\x87\xa9\xeb\xa7\xecWn`\x07\xf2\xb4\x93\x0bQ"
    set_0 = {bytes_0}
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "\x0cunCmd"
    list_1 = [str_0, str_0]
    var_2 = module_0.to_namedtuple(list_1)
    bool_0 = True
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (bool_0,)
    tuple_1 = (list_1, bool_0, ordered_dict_0, tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    bool_1 = True
    dict_0 = {str_0: str_0, str_0: str_0, str_0: tuple_1, bool_1: bool_1}
    bytes_1 = b",\x95B\xd0CV\xd4U\xae\x96\xcb6K\x89"
    tuple_2 = (dict_0, bytes_1)
    var_4 = module_0.to_namedtuple(tuple_2)
    bool_2 = True
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(var_4)
    var_7 = module_0.to_namedtuple(tuple_1)
    dict_1 = {bool_2: bool_2, bool_2: bool_2, bool_2: bool_2, bool_2: bool_2}
    ordered_dict_1 = module_1.OrderedDict(**dict_1)
    bool_3 = False
    tuple_3 = (dict_1, ordered_dict_1, bool_3)
    var_8 = module_0.to_namedtuple(var_0)
    bool_4 = False
    tuple_4 = (tuple_3, bool_4)
    var_9 = module_0.to_namedtuple(dict_1)
    var_10 = module_0.to_namedtuple(tuple_4)
    module_0.to_namedtuple(bytes_0)
