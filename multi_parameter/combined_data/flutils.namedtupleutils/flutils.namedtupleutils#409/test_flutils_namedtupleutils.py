# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -945.3761
    module_0.to_namedtuple(float_0)


def test_case_1():
    int_0 = 1864
    bool_0 = False
    str_0 = "addtl_attrs"
    dict_0 = {bool_0: str_0, str_0: int_0, bool_0: str_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "U{l?)"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = ""
    tuple_0 = (str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    int_0 = 128
    var_3 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = module_0.to_namedtuple(ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    bool_0 = True
    str_0 = "??b\rSuN"
    list_0 = [bool_0, bool_0, bool_0, str_0]
    dict_0 = {bool_0: str_0, str_0: bool_0, bool_0: str_0, bool_0: bool_0}
    dict_1 = module_0.to_namedtuple(dict_0)
    tuple_0 = (bool_0, list_0, dict_0, dict_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bool_0)


def test_case_8():
    bytes_0 = b"\xb3f\xe1\x85\x93A\xaa\x86Q\x94\xcf\x85"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    int_0 = 1864
    bool_0 = True
    str_0 = "addtl_attrs "
    list_0 = [int_0, bool_0, bool_0, str_0]
    dict_0 = {bool_0: str_0, str_0: int_0, bool_0: str_0, int_0: int_0}
    dict_1 = {str_0: bool_0, str_0: dict_0}
    tuple_0 = (int_0, list_0, dict_0, dict_1)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(int_0, list_0, rename=list_0)
