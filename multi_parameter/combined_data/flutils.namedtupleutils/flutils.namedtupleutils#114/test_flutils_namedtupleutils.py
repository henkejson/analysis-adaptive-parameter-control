# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    str_0 = ">kyhF1;Xs^FJ'aw7R@"
    float_0 = 1486.5
    tuple_0 = (bool_0, str_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = (
        "Unable to create the directory: %r because theparent path: %r exists as a %s."
    )
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0, str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xdc\xd9\x0f!\x91\x05!W&\xae.`\x8cY=\xbc2"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    str_0 = (
        "Unable to create the directory: %r because theparent path: %r exists as a %s."
    )
    dict_0 = {str_0: bool_0, str_0: str_0, str_0: str_0, bool_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    dict_0 = {}
    dict_1 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(dict_1)


def test_case_9():
    bytes_0 = b"\x84\x18\x06"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "NH0U5fmg"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [bool_0, bool_0, set_0, set_0]
    dict_0 = {bool_0: list_0}
    str_0 = "Io\r\n\x0c}(zs"
    tuple_0 = (list_0, dict_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_1 = "\t\x0ch"
    dict_1 = {str_1: str_1, str_1: str_1, str_1: str_1}
    bool_1 = True
    tuple_1 = ()
    tuple_2 = (dict_1, bool_1, tuple_1, dict_1)
    var_1 = module_0.to_namedtuple(tuple_2)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)
