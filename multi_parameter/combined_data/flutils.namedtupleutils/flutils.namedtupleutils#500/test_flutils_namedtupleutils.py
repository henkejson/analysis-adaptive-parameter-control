# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = 857.696
    tuple_0 = (float_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "r4"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x95\xf0"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "@oZ\r\na"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [dict_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "r4"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "@oZ\r\na"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    list_0 = []
    bytes_0 = b"\xbdX\x1e\x01)n-iF~\x84\xe9\x1d\x9c}fZ\xa9\xab"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    tuple_1 = (list_0, bytes_0, list_0, tuple_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "r4"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0bK0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
