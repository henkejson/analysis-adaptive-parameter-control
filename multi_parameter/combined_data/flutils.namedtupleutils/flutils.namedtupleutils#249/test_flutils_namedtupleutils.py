# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    tuple_0 = (bool_0, bool_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_2():
    str_0 = "S"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "<Z9\x0cHW"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "h%&B' `=jgH!z"
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_1: bool_1, str_0: bool_1, str_0: bool_0}
    tuple_0 = (str_0, bool_0, bool_1, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "S"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\xc2d7\xdd\xc87\xa5Du\xf4"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    none_type_0 = None
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(
        ordered_dict_0,
        ordered_dict_1,
        rename=none_type_0,
        defaults=none_type_0,
        module=var_0,
    )


def test_case_11():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    bytes_0 = b"V\xc7\xeaU\xb9a"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_13():
    str_0 = "\x0b\tD"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)
