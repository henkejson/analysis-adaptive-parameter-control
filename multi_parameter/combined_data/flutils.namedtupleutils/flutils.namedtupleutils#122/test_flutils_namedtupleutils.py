# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -981.0
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "qxi4b7"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"-m\xd6\xf6\xe5\xbaFI\xbc{G@\xd1\xac\xe0\xd8\xa8\x05y\xda"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "qxi4b7"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    dict_1 = module_1.OrderedDict()
    dict_2 = {bool_0: bool_0, bool_0: var_0}
    var_1 = module_0.to_namedtuple(dict_2)
    var_2 = module_0.to_namedtuple(dict_1)
    tuple_0 = (bool_0, var_1, dict_2, var_2)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(var_4)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "\rf6^J}"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bytes_0 = b"a\xba\xb5\x01\x96"
    tuple_0 = (bytes_0,)
    dict_0 = {bytes_0: bytes_0, tuple_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "\x0bqxi4b7"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    dict_1 = {str_0: bool_0, var_0: bool_0}
    dict_2 = {bool_0: bool_0, bool_0: var_0}
    var_1 = module_0.to_namedtuple(dict_2)
    str_1 = '\tCpDg%*[q\rLX"451'
    var_2 = module_0.to_namedtuple(dict_1)
    tuple_0 = (str_1, ordered_dict_0)
    tuple_1 = (bool_0, var_1, dict_2, tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    bool_1 = True
    ordered_dict_1 = module_1.OrderedDict()
    module_1.namedtuple(bool_1, var_1, defaults=var_0, module=var_4)
