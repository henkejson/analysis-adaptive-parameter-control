# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "strict"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "o2"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    str_0 = "l)K"
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [str_0, str_0]
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(list_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)


def test_case_8():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_9():
    str_0 = "{n\x0c@"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (str_0, var_0, var_0, var_0)
    tuple_1 = (tuple_0, str_0, tuple_0, tuple_0)
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(tuple_1)
    module_0.to_namedtuple(object_0)


def test_case_10():
    bytes_0 = b"*\xc5\x13c\x92\xdf\xd2\\}0.\xc5z"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    tuple_0 = (bytes_0, dict_0, bytes_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "Z(D\\lF)9q"
    int_0 = -465
    dict_0 = {str_0: str_0, int_0: int_0, int_0: int_0, int_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    str_1 = "o2"
    dict_1 = {str_1: str_1}
    var_2 = module_0.to_namedtuple(dict_1)
    int_1 = 37
    var_3 = module_0.to_namedtuple(var_2)
    tuple_1 = (str_1, int_1, int_1, int_1)
    tuple_2 = (int_1, var_3, int_1, tuple_1)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(tuple_1)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(tuple_2)
    int_2 = 1
    var_8 = module_0.to_namedtuple(tuple_2)
    list_1 = [var_5, var_3]
    var_9 = module_0.to_namedtuple(list_1)
    var_10 = module_0.to_namedtuple(var_2)
    var_11 = module_1.OrderedDict()
    var_12 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(int_2)


def test_case_12():
    str_0 = "o\x0b"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    int_0 = 37
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (str_0, int_0, int_0, int_0)
    tuple_1 = (int_0, var_1, int_0, tuple_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    list_0 = [var_3, var_1]
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_0)
