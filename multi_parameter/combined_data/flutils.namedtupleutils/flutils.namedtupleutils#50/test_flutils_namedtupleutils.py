# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    set_0 = set()
    list_0 = [set_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0, list_0, list_0, set_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_2():
    str_0 = "e1oing"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = ""
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "]Ud\x0cb\ttOzE"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_5)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(var_5)
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(var_2)
    var_11 = module_0.to_namedtuple(var_5)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "#-"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_4)
    object_0 = module_2.object()
    dict_1 = {var_3: var_3}
    list_0 = [dict_1, object_0]
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(dict_1)
    var_8 = module_0.to_namedtuple(var_3)
    var_9 = module_0.to_namedtuple(var_3)
    var_10 = module_0.to_namedtuple(var_4)
    var_11 = module_0.to_namedtuple(list_0)
    var_12 = module_0.to_namedtuple(var_3)
    var_13 = module_0.to_namedtuple(var_12)
    var_14 = module_0.to_namedtuple(var_11)
    var_15 = module_0.to_namedtuple(var_2)
    var_16 = module_0.to_namedtuple(var_4)
    var_17 = module_0.to_namedtuple(var_9)
    var_18 = module_0.to_namedtuple(var_14)
    var_19 = module_0.to_namedtuple(var_4)
    var_20 = module_0.to_namedtuple(var_16)
    var_21 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\xaf\x15\x01\x00\x1a,]\xb4\xff\xe5\x11\xb0\x91\xd5\x9e\xc8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    tuple_0 = ()
    float_0 = -1022.79
    dict_0 = {tuple_0: float_0}
    tuple_1 = (float_0, dict_0, dict_0)
    list_0 = [tuple_0, tuple_0, tuple_1]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "j\t"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_1)
    tuple_2 = (str_0, dict_1, var_1)
    var_2 = module_0.to_namedtuple(tuple_2)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(dict_1)
    none_type_0 = None
    var_4 = module_0.to_namedtuple(tuple_2)
    module_1.namedtuple(var_4, var_1, rename=tuple_2, defaults=none_type_0)
