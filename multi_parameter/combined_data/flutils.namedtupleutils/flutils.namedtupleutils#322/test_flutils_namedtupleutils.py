# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [bool_0, bool_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    list_1 = [var_1, list_0, var_1, var_1]
    var_2 = module_0.to_namedtuple(list_1)
    var_3 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"|\x9do"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "aXkr"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = '{!"'
    tuple_0 = (str_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_2)
    dict_0 = {var_0: var_0}
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_4)
    var_8 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    var_9 = module_0.to_namedtuple(var_2)
    var_10 = module_0.to_namedtuple(var_9)
    var_11 = module_0.to_namedtuple(var_10)
    var_12 = module_0.to_namedtuple(var_10)
    var_13 = module_0.to_namedtuple(var_6)
    object_0 = module_2.object()
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    str_0 = "aXkr"
    str_1 = "%+qMO"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_11():
    str_0 = "!4!Z^)nK\r"
    list_0 = [str_0]
    tuple_0 = (str_0, list_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (tuple_0, str_0)
    tuple_2 = (tuple_1, tuple_1)
    var_1 = module_0.to_namedtuple(tuple_2)
    bytes_0 = b"@\x9c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = 561
    list_0 = [int_0, int_0, int_0]
    str_0 = " ownload_url"
    dict_0 = {str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_1 = [int_0, int_0, int_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(list_0)
    list_2 = []
    ordered_dict_1 = module_1.OrderedDict(*list_2)
    var_4 = module_0.to_namedtuple(ordered_dict_1)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(list_2)
    ordered_dict_2 = module_1.OrderedDict()
    var_7 = module_0.to_namedtuple(var_4)
    module_1.OrderedDict(**str_0)
