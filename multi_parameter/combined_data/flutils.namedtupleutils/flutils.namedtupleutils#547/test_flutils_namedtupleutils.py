# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    float_0 = -923.0
    tuple_0 = (bool_0, float_0, var_2)
    var_3 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xa7\x988\xb8\xe9\xf4\xe8Q\x191&\x02M{."
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b"\xf5\xb4\xbe\xa9j\x9a\xd1\x01@3\x7f<\xff\xeb\x92u\xc1\xf9"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "pos"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"Jo\\\xa6p\xc7\x1c\xa1\xe9"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = True
    str_0 = "The given 'cmd', %r, must be of type: str, bytes, list or tuple.  Got: %r"
    dict_0 = {bool_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(*var_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    module_2.object(*dict_0, **dict_0)


def test_case_13():
    str_0 = "pos"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    bool_0 = True
    str_0 = "pos0\t"
    dict_0 = {bool_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
