# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = " uZ"
    set_0 = {str_0, str_0}
    dict_0 = {str_0: set_0, str_0: str_0, str_0: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = False
    bytes_0 = b"\x86J\x96D\x15\x9eu"
    tuple_0 = (ordered_dict_0, bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    int_0 = 1343
    dict_0 = {int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "C(K`bH<JyzXw/\tXULX"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "E"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "?xn"
    str_1 = " Return code: "
    str_2 = "\r2 T_qk%l\n6Lk|q"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"QD\xe1f\xf4\x99Z^\x8e\x13z\xd8K\xd3y"
    str_0 = "hxK@,+'CckFJx!%,#"
    list_0 = [str_0, str_0, bytes_0]
    list_1 = [bytes_0, bytes_0, list_0]
    tuple_0 = (list_1,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "?xn"
    str_1 = " Return code: "
    str_2 = "\r2 T_qk%l\n6Lk|q"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_12():
    bytes_0 = b"R"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0, dict_0)
    module_0.to_namedtuple(tuple_0)
