# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    int_0 = 666
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "addtl_attrs"
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        str_0: object_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "?K"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "addtl_attrs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    bool_0 = False
    bytes_0 = b"\xd9n2[\xd9\xd4\x07\xb7\xb2\xf1+x\xd4"
    tuple_0 = (bool_0, bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bytes_0 = b"if\xa8.q\x11"
    int_0 = -3906
    dict_0 = {bytes_0: int_0, int_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "{}a0"
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        str_0: object_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "addtl_attrs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = " ddbl_attrs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
