# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = 1141.54961
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 3.43036
    set_0 = {float_0, float_0, float_0, float_0}
    dict_0 = {float_0: set_0}
    tuple_0 = (float_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "_\r9Eprfe`!"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = 'LM\t]DH"t$7*7xJP\x0c8}?Z'
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "f"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\r\x03\x87"
    dict_0 = {bytes_0: bytes_0}
    str_0 = "exe{0jul<U1|!&1z[kGB"
    tuple_0 = (bytes_0, dict_0, str_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "\x0cDB+hH$6)qG76adET"
    str_1 = "\x0cAx"
    dict_0 = {str_1: str_1, str_0: str_1, str_1: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0)
    int_0 = 4
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_2.object()
    bytes_0 = b"y\x12\xf0[^\xba\xf1\x89\x9e\xa2E\xa4\x18M\x18Wv\x86"
    module_0.to_namedtuple(bytes_0)
