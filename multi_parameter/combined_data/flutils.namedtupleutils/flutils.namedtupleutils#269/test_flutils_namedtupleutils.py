# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    int_0 = -373
    list_0 = [int_0, int_0, int_0]
    dict_0 = {int_0: int_0, int_0: list_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"v\x14\xbb\x07\xe9I\xe0\xab\xa6Q\x88g"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"b\xa8\x10zu\xf2\xaa\xa1@<6NPG\x17\xbfD"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\x88\xf0\x8b\x95G>._\xc4"
    dict_0 = {bytes_0: bytes_0}
    complex_0 = 156.9737 + 1060.07489j
    bytes_1 = b"X\xb8pjU"
    tuple_0 = (dict_0, complex_0, bytes_0, bytes_1)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    list_0 = []
    str_0 = "mLSa@7v{rUL( Z+z,t"
    list_1 = [list_0, str_0, str_0, list_0]
    dict_0 = {str_0: list_0, str_0: list_1, str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    list_2 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_2)
    tuple_0 = ()
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_1 = {var_1: var_1, tuple_0: var_1, tuple_0: tuple_0}
    tuple_1 = (var_1, dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(tuple_1)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0bV"
    dict_0 = {str_0: str_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_0 = []
    var_2 = module_0.to_namedtuple(list_0)
    str_1 = "n"
    dict_1 = {str_1: list_0, str_1: list_0, str_1: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_1)
    var_3 = module_0.to_namedtuple(dict_1)
    list_1 = [str_1, ordered_dict_0]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_6)
    var_8 = module_0.to_namedtuple(var_3)
    tuple_1 = ()
    var_9 = module_0.to_namedtuple(var_8)
    int_0 = 1605
    dict_2 = {int_0: int_0, tuple_1: int_0, tuple_1: tuple_1}
    tuple_2 = (int_0, dict_2)
    var_10 = module_0.to_namedtuple(list_1)
    var_11 = module_0.to_namedtuple(dict_2)
    var_12 = module_0.to_namedtuple(tuple_2)
    var_13 = module_0.to_namedtuple(var_11)
    var_14 = module_0.to_namedtuple(dict_1)
