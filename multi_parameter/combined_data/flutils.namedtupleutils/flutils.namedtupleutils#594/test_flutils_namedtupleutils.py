# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    float_0 = -794.51
    module_0.to_namedtuple(float_0)


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "iWdZVU"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "addtl_attrs"
    complex_0 = -1132.6 - 3156.8j
    dict_0 = {str_0: str_0, complex_0: str_0, str_0: complex_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "addtl_attrs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    float_0 = -1421.629
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(float_0)


def test_case_11():
    str_0 = "!<#D~Q1ED3a\\"
    complex_0 = -1132.6 - 3156.8j
    dict_0 = {str_0: str_0, complex_0: str_0, str_0: complex_0}
    tuple_0 = (dict_0, str_0, complex_0, complex_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "TaDQCOZ\n"
    complex_0 = -1132.6 - 3156.8j
    dict_0 = {str_0: str_0, complex_0: str_0, str_0: complex_0}
    tuple_0 = (dict_0, str_0, complex_0, complex_0)
    bytes_0 = b"\xbb}B\x95!\xe0\x13\xb4#n \xe4\xa7\x89\xa9$"
    list_0 = [tuple_0, dict_0, dict_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)
