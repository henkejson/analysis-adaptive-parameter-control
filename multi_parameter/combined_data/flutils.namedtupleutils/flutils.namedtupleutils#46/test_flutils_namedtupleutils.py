# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1755
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [bool_0, bool_0, bool_0, dict_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    str_0 = "g"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xdd\x16\x9f\xbeX\x9e"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [bool_0, bool_0, bool_0, dict_0]
    list_1 = [list_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "p`=jC!bAz(1\x0c.8b1(N"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    str_0 = "\rkFKep2"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    tuple_0 = (dict_0, var_1, bool_0, var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(tuple_0)
    var_7 = module_0.to_namedtuple(var_6)
    tuple_1 = ()
    var_8 = module_0.to_namedtuple(tuple_1)
    var_9 = module_0.to_namedtuple(var_7)
    var_10 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    bytes_0 = b"0\xc9!\x02\xfc\xda\xa8\x11"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
