# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 3
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 3
    tuple_0 = (int_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "1"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bool_0 = True
    bool_1 = False
    str_0 = "%v ^&//u#T*Cm"
    tuple_0 = (bool_0, bool_1, str_0, str_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "cached_property"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(none_type_0)


def test_case_9():
    str_0 = "Ah*x+e_@R)#C7"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_1 = "6REi|gA+z$5$GT\\M-"
    module_1.namedtuple(str_1, dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    bool_0 = True
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"\x1a\xce'i\x91r-s\xce"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bytes_0: bool_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "\nachd_prMprty"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    float_0 = -2001.8
    tuple_1 = (float_0,)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    var_4 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)
