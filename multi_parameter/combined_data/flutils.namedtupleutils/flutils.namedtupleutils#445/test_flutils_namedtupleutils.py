# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "ANw_utf8_escape"
    int_0 = -262
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    complex_0 = -138 - 2975.209481731057j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x15gs\xaaAP?\xe54)\xe9\xa1\xe4R"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"\x1b\xba\x99\x03\xe8\xf9"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "["
    int_0 = -263
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    str_0 = "stderr\r"
    int_0 = -1986
    tuple_0 = (str_0, int_0)
    ordered_dict_0 = module_1.OrderedDict()
    tuple_1 = (str_0, tuple_0)
    int_1 = -46
    dict_0 = {tuple_0: str_0, int_0: int_0, str_0: int_1, str_0: int_1}
    tuple_2 = (tuple_0, tuple_0, dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(tuple_2)
    var_2 = module_0.to_namedtuple(var_1)
    bytes_0 = b"p}\xf69\xed\x92\x93\xe2\x19\xfd\xc1%d\xa9\xe02]\x84\x99\x15"
    module_1.namedtuple(tuple_2, ordered_dict_0, rename=var_1, module=bytes_0)


def test_case_11():
    str_0 = "z wi"
    bytes_0 = b"\xdb\x1fa\xd0\x0b\xaap\x1b"
    tuple_0 = (bytes_0,)
    int_0 = -371
    tuple_1 = (str_0, tuple_0, int_0, int_0)
    tuple_2 = ()
    dict_0 = {tuple_0: tuple_2, tuple_0: tuple_2, bytes_0: tuple_1}
    tuple_3 = (tuple_1, int_0, dict_0)
    module_0.to_namedtuple(tuple_3)
