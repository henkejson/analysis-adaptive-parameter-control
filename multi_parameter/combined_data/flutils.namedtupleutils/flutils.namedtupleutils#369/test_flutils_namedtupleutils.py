# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    list_0 = []
    none_type_0 = None
    str_0 = "d"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    list_0 = []
    str_0 = "d"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"z(\xe2\xf9Z\x02\x8c\x98t\xfcJ\xe6\xf9\\#\xc8\xe1\xae"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    none_type_0 = None
    str_0 = "d"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    int_0 = 756
    str_1 = "MP/\x0cBsJC%Hrc+j\t"
    dict_1 = {var_0: var_0, str_1: var_0, str_1: int_0, str_1: var_0}
    tuple_0 = (dict_1,)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    list_0 = []
    none_type_0 = None
    str_0 = "d"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (ordered_dict_0,)
    var_2 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"\xc2\x1eJsT\x1d\x9b9"
    complex_0 = -597.655 - 3646.057j
    dict_0 = {bytes_0: complex_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    list_0 = []
    str_0 = "h9FRt/,e"
    none_type_0 = None
    str_1 = "h "
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_1 = [ordered_dict_0, dict_0, ordered_dict_0]
    var_2 = module_0.to_namedtuple(list_1)
    module_2.object(**var_2)
