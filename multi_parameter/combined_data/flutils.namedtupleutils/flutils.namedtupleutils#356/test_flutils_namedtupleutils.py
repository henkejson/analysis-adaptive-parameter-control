# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    float_0 = 79.75
    list_0 = [tuple_0, bool_0, tuple_0, float_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    bytes_0 = b"\xef9W"
    bool_0 = False
    dict_0 = {bytes_0: bool_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "RunCmd"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = 651
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"\x9b~\xba\xa2\xb6X\x03d\xcd9b\x18\\L"
    module_0.to_namedtuple(bytes_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "Runmd"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = ',\x0b:Wt3[jsuKdd"v\n,M>D'
    str_1 = "rZ\x0cV"
    bool_0 = False
    str_2 = "*"
    dict_0 = {str_0: str_0, str_1: bool_0, str_2: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_1, ordered_dict_0, str_2]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_12():
    str_0 = "\nuCmd"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0, bool_0, tuple_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)
