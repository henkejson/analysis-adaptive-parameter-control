# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = 691.81
    module_0.to_namedtuple(float_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\x032n{\x1a\xf0+\xa3 \x9c"
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    bool_0 = True
    tuple_1 = (bytes_0, bytes_0, bool_0, bytes_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "module object for "
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "J$xy2#xXN"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "T!g>t"
    none_type_0 = None
    str_1 = "J$x.y2#xXN"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "EW3R"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "module object for "
    list_0 = [str_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_10():
    float_0 = -409.336965
    bytes_0 = b"\x01\xd4;'\x94\xa6\xeb<V\x89\xbcU\xc7"
    dict_0 = {float_0: float_0, float_0: float_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = " WZR"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    module_0.to_namedtuple(object_0)
