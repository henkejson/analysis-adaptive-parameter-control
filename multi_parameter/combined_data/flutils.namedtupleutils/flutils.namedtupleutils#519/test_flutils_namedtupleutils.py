# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    float_0 = -371.0
    set_0 = set()
    tuple_0 = (set_0, float_0, set_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = (
        "The given value for 'position', %r, must be an 'int' between (%r) and (%r)."
    )
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bytes_0 = b";"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    str_0 = "t6"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    ordered_dict_1 = module_1.OrderedDict(*ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "t6"
    str_1 = " )Xiq~1tQLl9g1["
    dict_0 = {str_0: str_0, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"f\xc4\x99\x9f"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (dict_0, ordered_dict_0, bytes_0)
    module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "P\x0c"
    none_type_0 = None
    str_1 = " )Xiq~1tQLl9g1["
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    list_0 = [none_type_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    bool_0 = True
    tuple_0 = (ordered_dict_0, bool_0, dict_0, str_0)
    list_1 = [tuple_0, ordered_dict_0, tuple_0, tuple_0, tuple_0, ordered_dict_0, var_0]
    var_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    module_0.to_namedtuple(none_type_0)
