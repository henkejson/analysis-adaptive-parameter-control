# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 545
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    str_0 = "socket"
    dict_0 = {bool_0: bool_0, str_0: bool_0, str_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"O\xe9\xb5\xfa9\xd4\xab\xf3S^HI\xc0G:\x968\xf4)\xc6"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "socket"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "mm`P]Y\x0b8uo+\\-"
    str_1 = "JB"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [dict_0, dict_0, str_0, str_0]
    int_0 = -3822
    int_1 = -2577
    tuple_0 = (list_0, int_0, int_1, ordered_dict_0)
    tuple_1 = (ordered_dict_0, tuple_0, tuple_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_12():
    bytes_0 = b"_\x9cN\xc0\xb6\xd8=\xfdA{\xc5"
    set_0 = {bytes_0}
    complex_0 = 789.33 - 203.448j
    int_0 = 1353
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = (var_0, bytes_0, var_0, var_0)
    dict_0 = {bytes_0: tuple_0}
    str_0 = "\\u{:0>4}"
    list_1 = [str_0, int_0, complex_0]
    tuple_1 = (int_0, dict_0, list_1)
    tuple_2 = (bytes_0, set_0, set_0, tuple_1)
    tuple_3 = (set_0, complex_0, tuple_2)
    module_0.to_namedtuple(tuple_3)


def test_case_13():
    bool_0 = False
    complex_0 = 2629.521444 + 1192.2394j
    str_0 = "sTocke\t"
    dict_0 = {
        complex_0: complex_0,
        str_0: complex_0,
        str_0: complex_0,
        complex_0: complex_0,
    }
    tuple_0 = (complex_0, str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0, var_0, str_0)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_0)
