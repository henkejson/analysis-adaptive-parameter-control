# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "find_paths"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"M1\xbc"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    str_0 = "name"
    bool_0 = False
    str_1 = "'b@1H]\"IT=F1"
    bool_1 = True
    list_0 = []
    tuple_0 = (bool_1, list_0, list_0)
    tuple_1 = (tuple_0, bool_0, bool_0, bool_1)
    dict_0 = {str_1: tuple_1}
    tuple_2 = (str_0, bool_0, str_1, dict_0)
    var_0 = module_0.to_namedtuple(tuple_2)


def test_case_8():
    bytes_0 = b"U\xcd\x9e\xb4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict(*var_1, **dict_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    complex_0 = 961.1 + 2306.81489j
    dict_0 = {complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_12():
    str_0 = "o\n"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    var_2 = module_0.to_namedtuple(var_1)
    int_0 = 50855933
    module_0.to_namedtuple(int_0)
