# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    none_type_0 = None
    str_0 = "k3x"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xa4\xf6@\x86$pe\x8b\xedY\x87M\xee"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = True
    dict_0 = {bool_0: bool_1, bool_1: bool_1, bool_0: bool_0, bool_1: bool_0}
    tuple_1 = (bool_0, bool_0, tuple_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    bytes_0 = b"\xa6f\x1f\xcb\xe4\x97"
    module_0.to_namedtuple(bytes_0)


def test_case_9():
    str_0 = "k3x"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    complex_0 = 811.1 + 2737.169j
    list_0 = [complex_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\xe1\xc8\te"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "KbQzsm\nPn@d5I3-#{bc"
    none_type_0 = None
    str_1 = "k3x"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_2.object(**var_1)


def test_case_13():
    bool_0 = False
    str_0 = "KbQzsm\nPn@d5I3-#{bc"
    none_type_0 = None
    str_1 = "sK "
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    dict_1 = {bool_0: var_0, var_0: var_0, bool_0: bool_0, var_0: bool_0}
    tuple_0 = (bool_0, bool_0, var_0, dict_1)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(none_type_0)
