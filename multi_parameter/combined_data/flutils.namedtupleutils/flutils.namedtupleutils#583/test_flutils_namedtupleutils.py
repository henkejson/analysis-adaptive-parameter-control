# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = "decINode"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "r"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    bytes_0 = b"\xac\x1d\xea\xd0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_11():
    str_0 = "5sV,DIRHaxex\\7b5u'NF"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 832
    module_0.to_namedtuple(int_0)


def test_case_12():
    str_0 = "\x0cecode"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict(*list_0)
    var_2 = module_1.OrderedDict(*list_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict()
    ordered_dict_2 = module_1.OrderedDict()
    module_0.to_namedtuple(str_0)
