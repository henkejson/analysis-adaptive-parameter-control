# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "RfK"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    tuple_0 = (var_0, bool_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_1.namedtuple(var_1, tuple_0, defaults=tuple_0)


def test_case_2():
    str_0 = "h"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = (str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xc3c\x92\xbb\xf3\x1c\x8e\xf2\xf0\xd8V"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = -302
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_1)
    dict_0 = {int_0: int_0}
    var_4 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    bytes_0 = b"x\xc4\x15\x0f\x08\x83\xea\xd9S"
    float_0 = -78.889
    bool_0 = False
    dict_0 = {bool_0: bytes_0, bytes_0: bytes_0, bool_0: float_0, bytes_0: float_0}
    tuple_0 = (bytes_0, float_0, bool_0, dict_0)
    list_0 = [tuple_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = " ZsWj2[HUVS#fm4"
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "q1q`/IP4O\x0bT6;&i="
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    tuple_0 = (var_2, var_1)
    bool_0 = False
    tuple_1 = (tuple_0, bool_0, var_0)
    var_3 = module_0.to_namedtuple(tuple_1)
    var_4 = module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "f\n"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    tuple_0 = (var_1, ordered_dict_0)
    bool_0 = True
    tuple_1 = (tuple_0, bool_0, var_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    module_1.namedtuple(var_1, var_5)
