# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 3690
    list_0 = [int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x0c\xe67\x0cVj"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "len_without_ansi"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0]
    tuple_0 = ()
    int_0 = 1415
    bytes_0 = b"\xee\xdbwT\xa00\x06\xe6\xa9\x8f`\xe8\x05\xec,\xeb\xef"
    tuple_1 = (list_0, tuple_0, int_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    int_0 = -1854
    bytes_0 = b"\x82y\xb3\xd4\x8e\xcfHVS\xdf^\xb9\x88\x0eD\x9aF:"
    dict_0 = {int_0: bytes_0, bytes_0: int_0, int_0: bytes_0, bytes_0: bytes_0}
    list_0 = [int_0, dict_0, int_0, int_0]
    bool_0 = False
    tuple_0 = (list_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "m]l~\r&8vZ?"
    str_1 = "/({J.-@f{\rv3]:#hw"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: str_1, str_0: ordered_dict_0}
    list_0 = [str_0, str_0, dict_0]
    list_1 = [list_0, list_0, dict_0]
    var_0 = module_0.to_namedtuple(list_1)
    bool_0 = False
    tuple_0 = (bool_0,)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_12():
    str_0 = "len_without_ansi"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "len_without_ansi\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_3)
    object_0 = module_2.object()
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_2)
    object_1 = module_2.object()
    module_0.to_namedtuple(object_0)
