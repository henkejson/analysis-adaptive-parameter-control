# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -2161.907828541409
    module_0.to_namedtuple(float_0)


def test_case_1():
    tuple_0 = ()
    set_0 = {tuple_0}
    tuple_1 = (set_0, set_0)
    list_0 = [set_0, set_0]
    bool_0 = False
    tuple_2 = (tuple_1, tuple_0, list_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "M5\n?(XJ/"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "aTF"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    bytes_0 = b"\xa5>c\xbc&\xf8\xf4y\x12 \x9c["
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bytes_0 = b"\xe4\xef\xe2\xd5Y\x7f~t\x8b\x93\xee\xb7\xcd\xea\xec\xa2"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "5@T=|h)*a1SBRw{'8x\x0c)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, none_type_0, module=none_type_0)


def test_case_11():
    str_0 = "aTF"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "ytBOIw\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    bool_0 = False
    var_3 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(bool_0)
