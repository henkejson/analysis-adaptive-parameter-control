# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = -135
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "E-9*@tb $xwx(mAuz0\rC"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xcc\xd6\xf5t\x19\x14\xcf\x8e\xab\xfa+X\xeb|\xde.4\xb4"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = -674.0
    dict_0 = {float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_1.OrderedDict(**none_type_0)


def test_case_7():
    str_0 = "l"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"q\x99\xaf\xef\x9dZ\xce\x1aAk\x18W\x05\x18"
    int_0 = -1825
    tuple_0 = ()
    dict_0 = {bytes_0: int_0, tuple_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    bool_0 = True
    str_0 = "Z\n"
    dict_0 = {str_0: bool_0, str_0: str_0, str_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [bool_0, bool_0, bool_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = -4055
    dict_1 = {int_0: int_0, int_0: int_0}
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_2)
    tuple_0 = ()
    var_5 = module_0.to_namedtuple(var_3)
    var_6 = module_0.to_namedtuple(tuple_0)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(dict_1)
    var_9 = module_0.to_namedtuple(dict_1)
    var_10 = module_0.to_namedtuple(dict_1)
    none_type_0 = None
    module_1.namedtuple(none_type_0, list_0)
