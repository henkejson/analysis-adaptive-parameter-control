# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -3510
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "append"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "append"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = False
    str_0 = "nX|Vr"
    bytes_0 = b"7\xda\t\xcbal\xc9"
    dict_0 = {bool_0: str_0, str_0: bytes_0, bytes_0: bool_0, bytes_0: bytes_0}
    list_1 = [dict_0]
    module_0.to_namedtuple(list_1)


def test_case_7():
    bytes_0 = b"B\xc7\x9d\x1fk\xe2"
    str_0 = "append"
    dict_0 = {str_0: str_0, bytes_0: str_0, str_0: bytes_0, str_0: str_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "append"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bytes_0 = b"B\xc7\x9d\x1fk\xe2"
    tuple_0 = (bytes_0, bytes_0)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)
    str_0 = "ape\r"
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    dict_0 = {str_0: str_0, bytes_0: tuple_0, var_1: bytes_0, str_0: str_0}
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    module_0.to_namedtuple(dict_0)
