# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bytes_0 = b"\xb1"
    set_0 = {bytes_0, bytes_0}
    dict_0 = {}
    tuple_0 = (set_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bytes_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "/+06"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "finalize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    bytes_0 = b"\xb1"
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bytes_0)


def test_case_8():
    dict_0 = {}
    tuple_0 = (dict_0,)
    list_0 = []
    bytes_0 = b"\xf0\xe0Ofq\xe5\xfc\x9a\x85\xaa\xc1\t\x15\x05"
    tuple_1 = (dict_0, tuple_0, list_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_9():
    bytes_0 = b"{\xbd\xe1\x02\xbc\xb6\x9aB\xf3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "finalize_options"
    str_1 = "The given 'command' must be of type: str, List[str] or Tuple[str]."
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_1)


def test_case_11():
    str_0 = "finalize_options"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {var_0: var_0, var_0: var_0}
    var_2 = module_0.to_namedtuple(dict_1)
    module_2.object(**dict_1)


def test_case_12():
    str_0 = "\x0by"
    str_1 = "The given 'command' must be of type: str, List[str] or Tuple[str]."
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (var_1,)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)
    str_2 = "Unable to find the file path for the command: %r"
    var_4 = module_0.to_namedtuple(tuple_0)
    dict_1 = {str_2: str_2, str_2: str_2}
    var_5 = module_0.to_namedtuple(dict_1)
