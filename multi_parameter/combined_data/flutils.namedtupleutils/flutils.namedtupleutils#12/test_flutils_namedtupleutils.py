# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = -2844
    module_0.to_namedtuple(int_0)


def test_case_1():
    dict_0 = {}
    list_0 = [dict_0]
    bool_0 = False
    tuple_0 = (list_0, dict_0, bool_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    var_1 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "kO/n{PbF0 JVJVA-H"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    int_0 = 3809
    str_0 = "HLB1&?x^W"
    dict_0 = {str_0: str_0, str_0: int_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (int_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_6():
    dict_0 = {}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    bytes_0 = b"!\xba\xfd\xd5\x03."
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "N"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    int_0 = 217
    module_0.to_namedtuple(int_0)


def test_case_11():
    str_0 = "N"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_12():
    int_0 = 3793
    str_0 = "h\r"
    dict_0 = {str_0: str_0, str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, dict_0, rename=int_0)


def test_case_13():
    bytes_0 = b"\\VNt]\x13\x14"
    bool_0 = True
    dict_0 = {bytes_0: bool_0, bool_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)
