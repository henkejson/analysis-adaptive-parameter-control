# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -795
    list_0 = [int_0]
    var_0 = module_0.to_namedtuple(list_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    str_0 = " is not a proper bas64 character string: "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "q\x0bh\r;[[0z6Q"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = " is not a proper bas64 character string: "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bytes_0 = b"\x9d\x01\xaf"
    dict_0 = {bytes_0: bytes_0}
    str_0 = "b' Na}W|G5C\tl_ d"
    bytes_1 = b"\x9c\xa2\xa0\xb0\xb7M\xc1I~"
    tuple_0 = (str_0, bytes_1)
    list_0 = [dict_0, dict_0, tuple_0]
    module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "b"
    float_0 = -263.4429308308222
    dict_0 = {float_0: str_0, float_0: float_0, str_0: float_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "beta "
    float_0 = -263.0
    tuple_0 = (str_0, float_0)
    dict_0 = {tuple_0: str_0, tuple_0: tuple_0, str_0: float_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(tuple_0)
    object_0 = module_2.object()
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(dict_0)
    var_6 = module_0.to_namedtuple(dict_0)
    var_7 = module_0.to_namedtuple(tuple_0)
    var_8 = module_0.to_namedtuple(dict_0)
    var_9 = module_0.to_namedtuple(var_3)
    var_10 = module_0.to_namedtuple(var_7)
    module_0.to_namedtuple(str_0)
