# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 2157
    list_0 = [int_0, int_0, int_0]
    list_1 = [list_0, int_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)


def test_case_2():
    str_0 = "q"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\x96\x9a\xb1\xcb<\x91\xb8Q\xe0\xd9\xf4\x1a\x07[\xc1\xbc\xba|\xeb\x86"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "&3gCb1)s)H"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.to_namedtuple(dict_0)
    int_0 = 8
    dict_1 = {int_0: dict_0}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_7():
    bytes_0 = b"\x96\x9a\xb1\xcb<\x91\xb8Q\xe0\xd9\xf4\x1a\x07[\xc1\xbc\xba|\xeb\x86"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "&3gCb1)s)H"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\xf1\x9b,\xd84[Pc\x9b\x859\x02\xcfo"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\tq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = -2912
    bool_0 = False
    bytes_0 = b"\x8d\xa8\xe0{T\x90\x16\x9a\xa9q\x99\x8fF"
    tuple_0 = (var_0, bool_0, bytes_0)
    dict_1 = {int_0: tuple_0}
    var_1 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(int_0)
