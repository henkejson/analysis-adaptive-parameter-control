# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    complex_0 = 102.7 - 950.88j
    module_0.to_namedtuple(complex_0)


def test_case_2():
    str_0 = "DHT"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (str_0, str_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xb4s]qB\xba\xd22\xc3\xe0\x83b\xab\xf9"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    float_0 = 408.0
    list_0 = [float_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_1: bool_0, var_1: tuple_0, tuple_0: tuple_0}
    var_2 = module_0.to_namedtuple(dict_0)
    bool_1 = False
    module_0.to_namedtuple(bool_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b"\x1b}"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    float_0 = 408.0
    list_0 = [float_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    dict_0 = {float_0: bool_0, float_0: tuple_0, tuple_0: tuple_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(float_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bytes_0 = b"\x81\x1b\xbd\xc6M\x03wGN\xfck\xc6\xd5_("
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, dict_0, bytes_0]
    module_0.to_namedtuple(list_0)


def test_case_12():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = "L>ZNy1cRZ.\r+c"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (str_0, str_0, dict_0)
    bool_0 = True
    bytes_0 = b"l\xbb\xb4\xbf\xad.U\xf0<\x11\x87\x94\xcfe\xa8.\x0e"
    float_0 = -4209.42
    tuple_1 = (bool_0, var_1, bytes_0, float_0)
    var_2 = module_0.to_namedtuple(tuple_1)
    var_3 = module_0.to_namedtuple(tuple_1)
    list_1 = [var_1, dict_0, dict_0]
    var_4 = module_0.to_namedtuple(list_1)
    var_5 = module_0.to_namedtuple(tuple_0)
    var_6 = module_0.to_namedtuple(list_0)
    module_1.namedtuple(bool_0, var_2, defaults=var_5)


def test_case_13():
    str_0 = "D\n\t"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bytes_0 = b"l\xbb\xb4\xbf\xad.U\xf0<\x11\x87\x94\xcfe\xa8.\x0e"
    list_0 = [str_0, var_0, var_0, dict_0, dict_0, dict_0, bytes_0]
    list_1 = [list_0, dict_0, dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    object_0 = module_2.object()
    module_0.to_namedtuple(none_type_0)
