# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = -1739.85956 - 863.7626j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    bool_0 = True
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0, ordered_dict_0, bool_0)
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "|1Sh\r5Ql}]O9HNwk9"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    str_0 = "cherry_pick"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    str_0 = "3p(>8!$Z#?(."
    bytes_0 = b"\xe7\x08b\xfaR2\x15\x14\xbc\x8f\xb3\xbb\x05"
    list_0 = [str_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "(>.HFR%ZsK:G0MA"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = "q"
    int_0 = -3016
    dict_0 = {int_0: str_0, int_0: int_0, str_0: str_0, int_0: str_0, str_0: str_0}
    tuple_0 = (int_0, dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\x98\x10\x85\x9f\xbc-\xbf\x9fYd+9s-\x0c\xbb"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = '6=Ts3\\"bq'
    none_type_0 = None
    str_1 = "\tZS0l3lmQQ"
    str_2 = "pre_num"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_1: none_type_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = -3030
    str_3 = "be~u/|G1\nFUXw*6z*|^"
    dict_1 = {int_0: str_3, int_0: str_3, int_0: int_0}
    dict_2 = {str_3: str_3, str_3: str_3}
    var_1 = module_0.to_namedtuple(var_0)
    tuple_0 = (int_0, dict_2, int_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(dict_1)
    module_0.to_namedtuple(int_0)
