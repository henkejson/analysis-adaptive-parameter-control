# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 70
    tuple_0 = (int_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(int_0)


def test_case_2():
    complex_0 = -1097.3244 - 2184j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\xdb\x00\x99"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "MXb"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    bytes_0 = b"\x92t7\x01\xf2&\x8d\x9e\xb62+\x0f\xc2\xe7"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, bytes_0, dict_0]
    bool_0 = False
    tuple_0 = (list_0, bool_0)
    module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "Cg|_&37U>Jj3RZo~;}"
    object_0 = module_2.object()
    bool_0 = True
    dict_0 = {str_0: object_0, str_0: bool_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    dict_1 = {var_0: var_0}
    list_0 = [dict_1, dict_1, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_12():
    str_0 = "MXb"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0cXq"
    object_0 = module_2.object()
    dict_0 = {str_0: object_0, str_0: object_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(object_0)
