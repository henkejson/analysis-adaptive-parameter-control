# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "X"
    set_0 = {str_0, str_0, str_0, str_0, str_0, str_0}
    bool_0 = True
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (set_0, bool_0, ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "F0R"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "|9:3zQ,L4"
    module_0.to_namedtuple(str_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(var_0, var_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "F0R"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {var_0: var_0, var_0: var_0}
    list_0 = [dict_1]
    var_2 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "u6b_H^5,#Sa]V1M{"
    str_1 = "c>)~W"
    str_2 = "rP4T[Es>I+O-5BW(>"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_0: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    str_0 = "F0R"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\xbcP05\x06\x1a"
    var_1 = module_0.to_namedtuple(var_0)
    dict_1 = {var_0: var_1, bytes_0: dict_0, var_0: var_0, var_0: var_0}
    list_0 = [dict_1]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "\x0ca3H0"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"\xe605\x06\x1a"
    str_1 = "Eb\r8^J5"
    tuple_0 = (bytes_0, str_1, bytes_0, str_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    dict_1 = {bool_0: bool_0, bool_0: bool_0}
    dict_2 = {bool_0: bool_0, bool_0: dict_1, bool_0: dict_1}
    var_4 = module_0.to_namedtuple(dict_2)
    list_0 = [dict_2]
    var_5 = module_0.to_namedtuple(list_0)
    tuple_1 = ()
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(tuple_1)
    var_8 = module_0.to_namedtuple(dict_1)
    float_0 = -2196.34
    module_0.to_namedtuple(float_0)
