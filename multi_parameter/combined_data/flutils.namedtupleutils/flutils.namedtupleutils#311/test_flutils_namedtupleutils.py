# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bytes_0 = b"ad\xfbE\xb1\xb9b\xd2\xb8}\xf7"
    tuple_0 = (list_0, list_0, bytes_0, list_0)
    var_0 = module_1.to_namedtuple(tuple_0)
    module_1.to_namedtuple(bytes_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b""
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_6():
    str_0 = "path_absent"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.to_namedtuple(dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "R"
    list_0 = [str_0, str_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_9():
    str_0 = ')D""r['
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)
    var_2 = module_1.to_namedtuple(var_1)
    float_0 = 3801.1
    object_0 = module_0.object()
    var_3 = module_1.to_namedtuple(var_0)
    list_0 = [float_0, object_0, float_0]
    var_4 = module_1.to_namedtuple(var_1)
    var_5 = module_1.to_namedtuple(list_0)
    ordered_dict_1 = module_2.OrderedDict()
    var_6 = module_1.to_namedtuple(list_0)
    none_type_0 = None
    module_1.to_namedtuple(none_type_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    list_0 = [ordered_dict_0, dict_0, dict_0, dict_0]
    var_2 = module_1.to_namedtuple(var_1)
    var_3 = module_1.to_namedtuple(list_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_12():
    tuple_0 = ()
    list_0 = [tuple_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_13():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)
    bytes_0 = b"\xe1 [:\xc49Z\x16\x0b(pW\xddx\xd2\xa3"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    tuple_0 = (list_0, list_0, dict_0, bool_0)
    module_1.to_namedtuple(tuple_0)


def test_case_14():
    str_0 = "path_absent\x0c"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0, ordered_dict_0, ordered_dict_0)
    list_0 = [tuple_0]
    var_1 = module_1.to_namedtuple(list_0)
    tuple_1 = ()
    var_2 = module_1.to_namedtuple(tuple_1)
    var_3 = module_1.to_namedtuple(var_0)
    var_4 = module_1.to_namedtuple(var_0)
    var_5 = module_1.to_namedtuple(var_4)
    float_0 = 3801.734072055709
    object_0 = module_0.object()
    var_6 = module_1.to_namedtuple(var_0)
    list_1 = [float_0, object_0, float_0]
    ordered_dict_1 = module_2.OrderedDict()
    var_7 = module_1.to_namedtuple(var_4)
    var_8 = module_1.to_namedtuple(list_1)
    var_9 = module_1.to_namedtuple(list_0)
    ordered_dict_2 = module_2.OrderedDict()
    var_10 = module_1.to_namedtuple(list_1)
    none_type_0 = None
    module_1.to_namedtuple(none_type_0)
