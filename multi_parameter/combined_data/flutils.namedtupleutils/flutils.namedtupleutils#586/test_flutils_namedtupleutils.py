# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    complex_0 = 2845 - 3687j
    module_0.to_namedtuple(complex_0)


def test_case_1():
    str_0 = "p"
    int_0 = 24
    dict_0 = {str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    int_0 = 8
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "addtl_attrs"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "Kv\nP"
    int_0 = 24
    dict_0 = {str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "Kv\nP"
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = "Kv\nP"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "X "
    int_0 = 24
    dict_0 = {str_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [str_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_1)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(list_0)
    var_7 = module_0.to_namedtuple(var_0)
    var_8 = module_0.to_namedtuple(var_0)


def test_case_12():
    int_0 = 1541
    bytes_0 = b"\x14}\x9d("
    dict_0 = {int_0: int_0, int_0: int_0, bytes_0: int_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, bytes_0, dict_0, int_0)
    list_0 = [int_0, int_0, tuple_0, dict_0]
    module_0.to_namedtuple(list_0)
