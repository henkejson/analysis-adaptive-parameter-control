# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"<\x8a\xf1\x1c\x8f\xcc\xa7\x88v\xc3{\x9a&\n\x0e\xed\xa4\xaf\x81"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "#gV"
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    list_0 = []
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)


def test_case_9():
    bytes_0 = b"S"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "e;#VR\x0b>MF*`H03U='U"
    int_0 = -1161
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, int_0: str_0}
    list_0 = [str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "p_txt"
    int_0 = -150
    dict_0 = {int_0: str_0, str_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "\tn"
    int_0 = -150
    var_0 = module_0.to_namedtuple(list_0)
    dict_0 = {int_0: str_0, str_0: int_0, int_0: int_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(dict_0)
    var_3 = module_0.to_namedtuple(var_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    module_1.OrderedDict(*list_0)
