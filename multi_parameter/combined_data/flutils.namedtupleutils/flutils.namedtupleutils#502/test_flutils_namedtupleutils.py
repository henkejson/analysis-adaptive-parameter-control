# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 1024
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = 1845.327 + 1174.462702j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x19\x80\x81p1Pq\xca\xa9\xc0\xaa\x8e\xed=.\xe0\x88\x00"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "directory_present"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "directory_present"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    float_0 = -956.6152
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    bytes_0 = b"Q\xf5\xebV%7"
    tuple_0 = (bytes_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {var_0: var_0, bytes_0: var_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "X6'OtS`ei^\x0cWO"
    str_1 = "has_any_callables"
    bool_0 = True
    dict_0 = {str_0: str_0, str_1: str_0, str_1: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (ordered_dict_0, bool_0, str_1)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    str_0 = "q5\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(ordered_dict_0, var_2)
