# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1532
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "nhzUF~emTK$F>jee"
    tuple_0 = (str_0,)
    bool_0 = False
    set_0 = set()
    tuple_1 = (tuple_0, bool_0, set_0, tuple_0)
    tuple_2 = (tuple_1, tuple_1, set_0)
    var_0 = module_0.to_namedtuple(tuple_2)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "KpdUyeKL"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b""
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "KpdUyeKL"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bool_0 = True
    str_0 = "SS y\x0c5grI\\_AoHLNL"
    int_0 = -350
    dict_0 = {bool_0: bool_0, str_0: bool_0, bool_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_1.OrderedDict(*var_0)
    bool_0 = False
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    str_0 = "KpdUyeKL"
    dict_0 = {str_0: str_0, var_0: var_1, var_0: str_0}
    var_3 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    list_0 = [str_0, ordered_dict_1]
    tuple_1 = (bool_0, ordered_dict_1, list_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(var_3)
    var_8 = module_0.to_namedtuple(ordered_dict_0)
    bytes_0 = b"_d-\xa4\x1c[\x89x\xca&\xbfQ\x17\x00\xaf."
    bool_1 = True
    object_0 = module_2.object(*var_0)
    dict_1 = {bytes_0: var_7, bool_1: tuple_1, object_0: list_0}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict(*var_0)
    bool_0 = True
    var_2 = module_0.to_namedtuple(var_0)
    str_0 = "DKUyeK "
    dict_0 = {str_0: str_0, var_0: tuple_0, var_1: var_0, var_0: str_0}
    var_3 = module_0.to_namedtuple(var_0)
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    list_0 = [str_0, ordered_dict_1]
    tuple_1 = (bool_0, ordered_dict_1, list_0)
    var_4 = module_0.to_namedtuple(tuple_1)
    var_5 = module_0.to_namedtuple(var_0)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(var_4)
    var_8 = module_0.to_namedtuple(ordered_dict_0)
    var_9 = module_0.to_namedtuple(ordered_dict_0)
    var_10 = module_0.to_namedtuple(var_5)
    var_11 = module_0.to_namedtuple(var_9)
    var_12 = module_0.to_namedtuple(var_7)
