# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_1 = (tuple_0,)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_2():
    str_0 = "J7B"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    str_0 = "\n[`7:^XInO~S."
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    str_0 = "@ItWa]6!;"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_1.object()


def test_case_7():
    dict_0 = {}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "\x0cO;,j*(CB85@\x0c/G!<IQG"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "\tb7B"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(var_0)
    object_0 = module_1.object(*var_3)
    var_5 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(str_0)


def test_case_11():
    bytes_0 = b"\xa6\x8bL\x94\x83@\xe2>\x12\xce$V\xb4\x7f"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
