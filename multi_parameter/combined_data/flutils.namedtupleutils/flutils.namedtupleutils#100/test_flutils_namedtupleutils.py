# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 2074.955435866514
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 2069.0
    bool_0 = True
    int_0 = 1808
    tuple_0 = (float_0, bool_0, bool_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = 'sx816>4C){}"iZn'
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = 'sx816>4C){}"in'
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b".?\xe7\xcf\xc0\xda\xd4\xad"
    tuple_0 = (ordered_dict_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    str_0 = "FIFO"
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: str_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"\xed\xfeW!\xab\xaa\xcf\xad]h\xb2\x97{\x8c\x94=[\xe9\x8a\xbb"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    tuple_0 = (set_0, bool_0)
    dict_0 = {bytes_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "FIFO"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_13():
    str_0 = "\x0bF"
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    dict_0 = {str_0: bool_0, bool_0: str_0}
    tuple_0 = (var_0, dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_3)
    var_7 = module_0.to_namedtuple(var_4)
    var_8 = module_0.to_namedtuple(var_4)
    var_9 = module_0.to_namedtuple(tuple_0)
