# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -2626.01
    module_0.to_namedtuple(float_0)


def test_case_1():
    float_0 = 1856.321
    list_0 = [float_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "$ze@9*1\\::NVV<K7|"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "cached_property"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    bytes_0 = b"L\x81v\xa5\xa4K"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {tuple_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = ", cannot start with an underscore '_'"
    str_1 = " PeY"
    str_2 = "b_!aL"
    ordered_dict_0 = module_1.OrderedDict()
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_1: ordered_dict_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
