# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    bytes_0 = b'3\xf6\x0en\rk"\xc0\xef\x89\x92[\xb7\x10\x0b\xb9/'
    tuple_0 = (bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\xc5GN\xebIu\x9en\xa4vd\xb8"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    str_0 = "u7}vzFX^?\\0_\n"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "MXGsQSXG"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, dict_0, str_0]
    var_1 = module_0.to_namedtuple(list_0)
    dict_1 = {var_0: var_1}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(dict_1)


def test_case_9():
    str_0 = "MXGQSXG"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "Ks\x0b"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    float_0 = -591.1475291451698
    tuple_0 = (float_0, var_0, var_0, var_0)
    var_3 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bytes_0 = b"2\xcd\x01z"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_1 = {}
    bytes_1 = b"#\xce\xc7#w#k\xee\x1d\x0c\xab\xa9U\xf7\xcc8"
    list_0 = [dict_0, dict_0, dict_1, bytes_1]
    module_0.to_namedtuple(list_0)
