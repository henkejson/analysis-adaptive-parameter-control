# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "$7DH7<tG1"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "fJIb1szHf"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\x07\x14\xb6\xf0\x1f\xac3\xb5\xcd"
    var_2 = module_0.to_namedtuple(var_1)
    dict_1 = {var_2: var_0, var_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_10():
    str_0 = "fJIb1szHf"
    str_1 = ")H='1yP"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xeb>\xb6\xf0\x1f\xa1\xac3\xb5\xa7"
    var_2 = module_0.to_namedtuple(var_1)
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    bool_0 = True
    bytes_0 = b"\r\x10g\x91\xcc\x19x+x"
    tuple_0 = (bool_0, bytes_0)
    dict_0 = {tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_0 = "wT\t"
    dict_1 = {str_0: var_0, str_0: var_0, var_0: var_0, str_0: var_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_5)
    var_8 = module_0.to_namedtuple(var_7)
    list_0 = []
    var_9 = module_0.to_namedtuple(list_0)
    var_10 = module_0.to_namedtuple(dict_1)
    var_11 = module_0.to_namedtuple(var_6)
    var_12 = module_0.to_namedtuple(var_9)
    var_13 = module_0.to_namedtuple(var_3)
    var_14 = module_0.to_namedtuple(var_5)
    var_15 = module_0.to_namedtuple(var_2)
    var_16 = module_0.to_namedtuple(var_14)
    int_0 = -287
    module_0.to_namedtuple(int_0)
