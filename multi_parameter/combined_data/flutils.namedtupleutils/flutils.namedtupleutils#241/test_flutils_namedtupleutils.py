# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -5.3
    module_0.to_namedtuple(float_0)


def test_case_1():
    ordered_dict_0 = module_1.OrderedDict()
    float_0 = 635.69143
    tuple_0 = (ordered_dict_0, ordered_dict_0, float_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    str_0 = "GV"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "k&i-3N\\D\t8=]"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    int_0 = 532
    dict_0 = {int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_1 = module_0.to_namedtuple(list_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (ordered_dict_0, ordered_dict_0, ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    str_0 = "r^4F{`3Cd/"
    str_1 = "~PLn"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    int_0 = -452
    tuple_0 = (ordered_dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    str_0 = "n\n"
    float_0 = -2577.34363
    dict_0 = {bool_1: bool_0, str_0: bool_0, float_0: bool_0, bool_1: bool_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)
    tuple_0 = (bool_0, bool_1, dict_0)
    var_2 = module_1.OrderedDict()
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_2)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_6 = module_0.to_namedtuple(var_4)
    module_0.to_namedtuple(bool_0)


def test_case_13():
    bytes_0 = b"\x91B\xd8\x96\xa2\xc3J\x96;/\xf55u\x8f\x08"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.to_namedtuple(tuple_0)
