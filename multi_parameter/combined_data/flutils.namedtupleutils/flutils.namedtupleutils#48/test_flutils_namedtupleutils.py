# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"f\x05\xf1:\xf1\xd60F\xad\xee|t\x98\xca\xb7\x0bv\xe8"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "gx9"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_6():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bytes_0 = b"\x8eU"
    str_0 = "yE"
    tuple_0 = (bytes_0, bytes_0, str_0)
    dict_0 = {tuple_0: bytes_0, str_0: tuple_0, str_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict()
    object_0 = module_2.object()
    list_0 = [ordered_dict_0, ordered_dict_0]
    list_1 = [list_0, dict_0]
    var_0 = module_0.to_namedtuple(list_1)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    var_4 = module_0.to_namedtuple(var_2)


def test_case_10():
    str_0 = "(\x1b\\[[0-9;:]+[ABCDEFGHJKSTfhilmns])"
    str_1 = "^U!xXV:="
    str_2 = "D4"
    str_3 = "{Nr'M"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_3: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)


def test_case_11():
    bytes_0 = b"\x00A"
    str_0 = "1=h;*2kc~"
    tuple_0 = (bytes_0, bytes_0, str_0)
    bytes_1 = b"\xe0uP\xd7\xd9{]R\xc8\xd9\xfa"
    dict_0 = {
        tuple_0: bytes_0,
        bytes_0: tuple_0,
        str_0: tuple_0,
        bytes_1: tuple_0,
        bytes_1: tuple_0,
        str_0: bytes_1,
    }
    int_0 = -465
    tuple_1 = (dict_0, str_0, int_0, dict_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    bytes_0 = b"\x00A"
    str_0 = "\nY_"
    tuple_0 = (bytes_0, bytes_0, str_0)
    bytes_1 = b"M\xf6'[\xd2d/\xb3\xbe\xdf\xa7\x0c\xd6K\xfa\xb5\xb4"
    dict_0 = {tuple_0: bytes_0, str_0: tuple_0, str_0: bytes_1}
    int_0 = -465
    tuple_1 = (dict_0, str_0, int_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [tuple_0, ordered_dict_0, ordered_dict_0, bytes_1, var_0]
    var_2 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(bytes_0)
