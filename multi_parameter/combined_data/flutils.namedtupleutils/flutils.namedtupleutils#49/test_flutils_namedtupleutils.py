# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 1595
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "7RJwFSa\ry=(,.yA#f"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_6():
    str_0 = "p"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "Unable to run the command:  %r, in interactive mode because 'bash' could NOT be found on the system."
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    tuple_0 = (var_0, var_0, var_0)
    set_0 = {tuple_0, bool_0, var_0, var_0}
    module_0.to_namedtuple(set_0)


def test_case_11():
    bytes_0 = b""
    float_0 = -601.0
    dict_0 = {bytes_0: bytes_0, bytes_0: float_0}
    tuple_0 = (dict_0, bytes_0, dict_0, float_0)
    tuple_1 = (bytes_0, float_0, tuple_0, float_0)
    module_0.to_namedtuple(tuple_1)


def test_case_12():
    str_0 = "\nAFit"
    str_1 = ""
    str_2 = "p"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_2}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
