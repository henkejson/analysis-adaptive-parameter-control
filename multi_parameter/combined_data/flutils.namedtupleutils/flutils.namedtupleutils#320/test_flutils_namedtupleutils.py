# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 2484
    module_0.to_namedtuple(int_0)


def test_case_1():
    complex_0 = 2044.009596 - 207.498j
    list_0 = [complex_0]
    var_0 = module_0.to_namedtuple(list_0)
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = "rp_1"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xb9v\x85a"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = "`0|`<b?&V "
    var_2 = module_0.to_namedtuple(list_0)
    dict_0 = {str_0: list_0}
    ordered_dict_0 = module_1.OrderedDict(*list_0, **dict_0)
    bool_0 = False
    bool_1 = True
    tuple_0 = (ordered_dict_0, bool_0, bool_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(dict_0)
    var_5 = module_0.to_namedtuple(var_3)
    list_1 = []
    var_6 = module_0.to_namedtuple(list_1)


def test_case_11():
    bytes_0 = b"\xa5\xdaTq\xf5\xd1\xcd\xbd\x96\xa7\xe4\xd76\x1dE\xda'\x12\xe0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\tHR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_2)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
