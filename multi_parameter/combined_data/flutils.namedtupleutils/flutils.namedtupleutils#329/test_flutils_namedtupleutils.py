# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = 1631.041
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = True
    str_0 = "version"
    dict_0 = {bool_0: bool_0, bool_0: str_0, str_0: bool_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "[\nJZN"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b"\x8e\x19\xc7\x99c}\x93\xa1\xe3\x9e\x12\xc4\xf5/zE"
    bytes_1 = b"\xdeSM\xab*\x8cgK\x19\x9f\x18S\xa4"
    tuple_0 = (bytes_0, bytes_1, bytes_0)
    list_0 = [bytes_1, bytes_1, tuple_0, tuple_0]
    int_0 = 339
    tuple_1 = (tuple_0, bytes_0, list_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = '\rQ8"wI(Y\x0c6,e;NcRyKWA'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    str_1 = "W\x0b|D%gp _"
    module_0.to_namedtuple(str_1)


def test_case_9():
    bytes_0 = b"\x04\xb28v\xef"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -3640
    tuple_0 = (bytes_0, dict_0, int_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = "p "
    bool_0 = False
    bytes_0 = b"\xfd}\x89\xd3S'\x16N"
    tuple_0 = (bytes_0,)
    dict_0 = {bool_0: bool_0, str_0: bool_0, bool_0: tuple_0, bool_0: bool_0}
    dict_1 = {str_0: str_0, str_0: str_0, str_0: dict_0}
    tuple_1 = (dict_1, dict_1)
    var_0 = module_0.to_namedtuple(tuple_1)
    object_0 = module_2.object()
