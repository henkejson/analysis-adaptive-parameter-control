# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    float_0 = -2746.93
    tuple_0 = (bool_0, float_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_1.OrderedDict(**var_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\xf1K*\\\x1b3*\x9c]\xe68\xf6Ht\xca\xe0S\xd5"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    ordered_dict_0 = module_1.OrderedDict(*dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    str_0 = "k3EJ"
    module_0.to_namedtuple(str_0)


def test_case_6():
    str_0 = "lt1"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    object_0 = module_2.object()
    var_2 = module_0.to_namedtuple(var_1)


def test_case_8():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    list_0 = [dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_1.namedtuple(none_type_0, none_type_0, rename=none_type_0)


def test_case_9():
    str_0 = "-,\t>ez08d2s_"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    int_0 = 814
    str_0 = "l1"
    dict_0 = {int_0: int_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bool_0 = False
    str_0 = "DXv8(^hn~"
    bytes_0 = b"\xa6<9\xb2\x13\t>\xa4\x9f\xedL\\\x17"
    tuple_0 = (bytes_0,)
    tuple_1 = (bool_0, str_0, str_0, tuple_0)
    int_0 = 1024
    tuple_2 = (tuple_1, str_0, int_0)
    dict_0 = {
        bytes_0: bool_0,
        int_0: bool_0,
        bool_0: bytes_0,
        tuple_1: tuple_2,
        int_0: tuple_0,
        tuple_0: bool_0,
    }
    tuple_3 = (tuple_2, dict_0)
    tuple_4 = (bool_0, bool_0, tuple_3, bytes_0)
    module_0.to_namedtuple(tuple_4)


def test_case_12():
    int_0 = 812
    str_0 = "\nm1"
    dict_0 = {int_0: int_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    str_1 = "DX\\W(^hn~"
    tuple_0 = (var_0, str_1, str_1, var_0)
    tuple_1 = (tuple_0, str_1, int_0)
    tuple_2 = (tuple_1, var_0)
    var_1 = module_0.to_namedtuple(tuple_2)
    dict_1 = {}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    ordered_dict_0 = module_1.OrderedDict()
    tuple_3 = (ordered_dict_0,)
    var_4 = module_0.to_namedtuple(dict_1)
    ordered_dict_1 = module_1.OrderedDict()
    var_5 = module_0.to_namedtuple(ordered_dict_0)
    var_6 = module_0.to_namedtuple(tuple_3)
    var_7 = module_0.to_namedtuple(dict_1)
