# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    int_0 = 2412
    module_0.to_namedtuple(int_0)


def test_case_1():
    int_0 = 1195
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "author"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x04("
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    object_0 = module_1.object(*list_0)
    dict_0 = {object_0: list_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_2.OrderedDict(*var_0)
    list_1 = []
    var_1 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(object_0)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "author"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    object_0 = module_1.object(*list_0)
    dict_0 = {object_0: list_0}
    tuple_0 = (list_0, object_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_2.OrderedDict()
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    list_0 = []
    str_0 = "DM!CF[nFb+KW."
    dict_0 = {str_0: str_0, str_0: list_0}
    ordered_dict_0 = module_2.OrderedDict(*list_0, **dict_0)
    list_1 = []
    object_0 = module_1.object(*list_1)
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = (list_1, object_0, var_0)
    var_1 = module_2.OrderedDict(*var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_2.OrderedDict()
    module_2.OrderedDict(*tuple_0)


def test_case_12():
    bytes_0 = b"]\xc6"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "u\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    bytes_0 = b"\x04("
    module_0.to_namedtuple(bytes_0)
