# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = 3225.1428
    module_0.to_namedtuple(float_0)


def test_case_1():
    str_0 = "H"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_1.namedtuple(str_0, dict_0, defaults=str_0)
    list_0 = [var_0, str_0, dict_0]
    var_1 = module_0.to_namedtuple(list_0)
    module_1.OrderedDict(**var_0)


def test_case_2():
    float_0 = 3225.1428
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "D:aU)"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "H"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(var_0, var_0)


def test_case_7():
    str_0 = "I0Br\x0bLtG{D$h2r\\D="
    list_0 = [str_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    int_0 = 1845
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "#"
    dict_1 = {str_0: str_0, str_0: str_0}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_1.OrderedDict()
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(str_0)


def test_case_10():
    bytes_0 = b"I\xfe\xecy\xcfvB\xf9\xb1\xc7\x07BN\xd9\xb4/\xc4\r"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "H"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "Hf\x0c"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
