# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bytes_0 = b"x\x86\x07\x8ci\x80\x08z+\xac\xf2[8\t"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    int_0 = 3411
    list_1 = [int_0, int_0, int_0, int_0]
    var_1 = module_0.to_namedtuple(list_1)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "b"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = ",\x0c#ehmikf\x0bF)TB:x"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "PWJO!&%y_aN>Li{X$b"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    ordered_dict_0 = module_1.OrderedDict(*var_0)
    object_0 = module_2.object()


def test_case_7():
    bytes_0 = b'&=\xeef\x17\x9b\xd8"(\x94'
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    float_0 = 2435.57
    bool_0 = True
    tuple_0 = (float_0, float_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = "PWJO!&%y_aN>Li{X$b"
    dict_0 = {str_0: str_0, bool_0: str_0, str_0: str_0}
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    int_0 = -736
    str_0 = "\rG2EV"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    tuple_0 = (int_0, ordered_dict_0)
    list_0 = [tuple_0, int_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
