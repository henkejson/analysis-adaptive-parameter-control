# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "pE"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = True
    tuple_0 = (var_0, bool_0, var_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(str_0)


def test_case_2():
    str_0 = "pE"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"Z\xf7S\x91\x19#\x83\x1d\xd6\x1aT"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b'\x0f\x95\x9eM\x012\xa9\x01\x02y"'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (list_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    str_0 = ""
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_1.namedtuple(dict_0, dict_0, rename=dict_0)


def test_case_11():
    str_0 = "p"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    int_0 = 678
    list_0 = [dict_0]
    dict_1 = {int_0: var_0, var_2: list_0, str_0: var_2}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_1)
    var_7 = module_0.to_namedtuple(var_2)
    var_8 = module_0.to_namedtuple(var_6)
    var_9 = module_0.to_namedtuple(ordered_dict_0)
    bool_0 = False
    tuple_0 = (bool_0,)
    var_10 = module_0.to_namedtuple(tuple_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"\x90\xbe#\xb0M\xc4\xf5\xdeU%"
    str_0 = "37"
    bytes_1 = b"\x0eb\xea\xff\xdf\xf5\x9a\rZ0"
    tuple_0 = (bytes_0, str_0, bytes_1)
    bool_1 = False
    dict_0 = {tuple_0: bool_0, bytes_1: str_0, bool_0: bool_1, tuple_0: bool_0}
    tuple_1 = (bool_0, bool_0, bytes_0, dict_0)
    module_0.to_namedtuple(tuple_1)


def test_case_13():
    str_0 = "p "
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = [dict_0]
    dict_1 = {var_1: var_0, var_2: list_0, str_0: var_2}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_0)
    var_5 = module_0.to_namedtuple(list_0)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(var_1)
    var_8 = module_0.to_namedtuple(var_0)
    var_9 = module_0.to_namedtuple(ordered_dict_0)
    var_10 = module_0.to_namedtuple(dict_1)
    var_11 = module_0.to_namedtuple(ordered_dict_0)
    var_12 = module_0.to_namedtuple(var_3)
    var_13 = module_0.to_namedtuple(var_12)
