# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bytes_0 = b"P\xfd'k\x9c\xdf"
    bool_0 = False
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (bytes_0, bool_0, ordered_dict_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "convert_escaped_unicode_literal"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "convert_escaped_unicode_liCerll"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = 'S>;\n?Bk"7SwG4vzs'
    dict_0 = {str_0: str_0}
    bool_0 = False
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(str_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "Vk \r\\lE2V:ynT3,\x0c"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "\tonvert_escaped_unicoXe_literal"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    tuple_0 = (str_0, dict_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_11():
    float_0 = -2375.14
    dict_0 = {float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    str_0 = "9.n(SN1.$\\1s=kkc"
    module_0.to_namedtuple(str_0)


def test_case_12():
    bytes_0 = b"\xf4\x19rp\xa0\xda\xef5\xdex"
    dict_0 = {bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)
