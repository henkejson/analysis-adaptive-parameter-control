# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 507
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "c"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: bool_0, str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "The given 'identifier' cannot be empty"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "cherry_pick"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_0.to_namedtuple(bool_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    str_0 = "9zlkD}\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b'J)"\x95\xed\xfa\x8b\xe5U\xce\xd0r4\x1e\x0fZU'
    module_0.to_namedtuple(bytes_0)


def test_case_9():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    list_0 = []
    ordered_dict_0 = module_1.OrderedDict()
    tuple_0 = (list_0, list_0, list_0, ordered_dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    var_3 = module_0.to_namedtuple(var_0)


def test_case_11():
    str_0 = "9zlkD}\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    object_0 = module_2.object()
    list_0 = [bool_0, bool_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    object_1 = module_2.object()
    var_1 = module_0.to_namedtuple(var_0)
    bytes_0 = b"\xb5\x8b\x8e]\xb6\x0bn"
    dict_1 = {bytes_0: dict_0}
    module_0.to_namedtuple(dict_1)


def test_case_12():
    str_0 = "zlkD\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    bool_0 = False
    object_0 = module_2.object()
    list_1 = [dict_0, bool_0, bool_0, dict_0]
    var_0 = module_0.to_namedtuple(list_1)
    object_1 = module_2.object()
    bytes_0 = b"\xb5\x8b\x8e]\xb6\x0bn"
    list_2 = [bytes_0, var_0]
    var_1 = module_0.to_namedtuple(list_2)
    dict_1 = module_0.to_namedtuple(list_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(list_1)
    var_4 = module_0.to_namedtuple(list_0)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(var_2)
    var_7 = module_0.to_namedtuple(list_1)
    var_8 = module_0.to_namedtuple(dict_0)
    var_9 = module_0.to_namedtuple(var_8)
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_10 = module_0.to_namedtuple(var_8)
    var_11 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(object_0)
