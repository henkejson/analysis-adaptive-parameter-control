# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    module_0.to_namedtuple(bool_0)


def test_case_1():
    int_0 = 8
    str_0 = "sb c$0"
    set_0 = {int_0, str_0, int_0}
    list_0 = [set_0, int_0, int_0]
    list_1 = [list_0, list_0, set_0, list_0]
    var_0 = module_0.to_namedtuple(list_1)
    str_1 = "y$\t1Z''\x0b\x0b?hSrP}906+"
    module_0.to_namedtuple(str_1)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    bytes_0 = b"\x07\x12t"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    str_0 = "KKdZ"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    complex_0 = 2360 + 71.99071j
    bool_0 = False
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        bool_0: bool_0,
        complex_0: complex_0,
    }
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "\\ \x0bR!_*m1S38'sAIZc4&"
    list_0 = [str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"Ml\x87\xd3\x1e"
    dict_0 = {
        bytes_0: none_type_0,
        bytes_0: none_type_0,
        bytes_0: none_type_0,
        bytes_0: bytes_0,
    }
    tuple_0 = (bytes_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_10():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(tuple_0)
    object_0 = module_1.OrderedDict(*var_0, **dict_0)
    str_0 = "yb JFt\x0bCK;+\tm:7j2MF"
    dict_1 = {str_0: tuple_0, var_0: tuple_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_1)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    var_5 = module_2.object()


def test_case_11():
    str_0 = "KKdZ"
    dict_0 = {str_0: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_0 = "\rQ5BlL"
    str_1 = "zgA\ns ~.!%HW35"
    dict_1 = {str_0: dict_0, str_0: dict_0, str_1: tuple_0}
    tuple_1 = (var_0, var_0)
    var_3 = module_0.to_namedtuple(tuple_1)
    ordered_dict_0 = module_1.OrderedDict(*var_0, **dict_1)
    var_4 = module_0.to_namedtuple(ordered_dict_0)
    ordered_dict_1 = module_1.OrderedDict(*tuple_0, **dict_0)
    var_5 = module_0.to_namedtuple(dict_1)
    object_0 = module_2.object()
    var_6 = module_0.to_namedtuple(var_4)
    str_2 = "yb JFt\x0bCK;+\tm:7j2MF"
    dict_2 = {str_2: tuple_0, var_5: var_4}
    var_7 = module_0.to_namedtuple(tuple_0)
    var_8 = module_0.to_namedtuple(dict_2)
    module_0.to_namedtuple(object_0)
