# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    float_0 = -1069.0
    str_0 = "FtZzw"
    dict_0 = {str_0: float_0, str_0: float_0, str_0: float_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    str_0 = "}rJHM.JB>e(U.&\t|({2w"
    module_1.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "FtZzw"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_9():
    str_0 = "FtZzw"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    tuple_0 = (str_0, str_0, str_0, var_0)
    var_1 = module_1.to_namedtuple(tuple_0)


def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "}rJHM.JB>e(U.&\t|({2w"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "\x0bzV0m5Xs"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    dict_1 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_1.to_namedtuple(dict_1)
    var_2 = module_1.to_namedtuple(var_1)
    var_3 = module_1.to_namedtuple(var_2)
    var_4 = module_1.to_namedtuple(dict_1)
    var_5 = module_1.to_namedtuple(dict_1)
    bytes_0 = b"\xb1\r\xb0\xf0?\x10\xc8\x94|D\xab\x10"
    none_type_0 = None
    module_2.namedtuple(bytes_0, bytes_0, rename=none_type_0)


def test_case_13():
    bytes_0 = b"+\x93T\x13\x05t\xf4\x8ah\xd5\xbc\x02\xccn\xebh\xd6@"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_1.to_namedtuple(dict_0)
