# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "_;}H1#tnOe"
    set_0 = set()
    tuple_0 = (str_0, str_0, str_0, set_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_2():
    str_0 = "initial_indent_len"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    tuple_0 = module_0.to_namedtuple(dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "Hw/ |35%`4CiaNx`8B"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bytes_0 = b":\xce\x8d\xf8g"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    dict_0 = {tuple_1: tuple_1, tuple_1: bytes_0, tuple_1: tuple_1}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    tuple_2 = (var_0, var_1, var_1, var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    tuple_3 = (var_0, tuple_2)
    var_3 = module_0.to_namedtuple(tuple_3)
    var_4 = module_0.to_namedtuple(tuple_3)
    var_5 = module_0.to_namedtuple(var_0)
    module_1.object(*var_2)


def test_case_7():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bytes_0 = b"\x9cXU\xd6r\x17\xfd\xea\xb4\xb2\xdb\xb70Z\xc1o\x9b"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_11():
    bytes_0 = b":\xce\x8d\xf8g"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    dict_0 = {
        tuple_1: tuple_1,
        tuple_1: bytes_0,
        tuple_1: tuple_1,
        tuple_1: tuple_0,
        bytes_0: tuple_1,
    }
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "85"
    str_1 = ""
    tuple_0 = (str_1,)
    str_2 = "9v2F"
    dict_0 = {str_0: str_0, str_1: tuple_0, str_2: str_1, str_1: str_1}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    ordered_dict_1 = module_2.OrderedDict()
    var_3 = module_0.to_namedtuple(ordered_dict_1)


def test_case_13():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_0 = "initial_indent_le\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = []
    var_3 = module_0.to_namedtuple(dict_0)
    var_4 = module_0.to_namedtuple(list_0)
