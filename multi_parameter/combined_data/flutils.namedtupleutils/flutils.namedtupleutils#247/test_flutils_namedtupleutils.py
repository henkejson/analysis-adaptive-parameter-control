# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    str_0 = "_Y,OX.<y"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    module_1.object(**var_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    str_0 = "^"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "rjo"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    str_0 = "_Y,OX.<y"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    ordered_dict_0 = module_2.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    str_0 = "!eMkw*RCO\x0b*Z]/BH"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(str_0)


def test_case_9():
    str_0 = "_Y,OX.<y"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    str_0 = "ta"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    list_0 = [none_type_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = True
    bytes_0 = b"|\xd6k\x99\xf1\xcb\xf1;\xf3\x1d\x839\x98\xeb9\n\xc5"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bool_0: bool_0, bool_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = "sqBM "
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    tuple_0 = (str_0, dict_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(var_2)
    set_0 = set()
    module_0.to_namedtuple(set_0)
