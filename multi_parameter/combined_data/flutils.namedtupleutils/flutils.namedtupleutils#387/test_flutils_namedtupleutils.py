# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "`T\x0b0a"
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_8():
    str_0 = "W0U"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_9():
    bytes_0 = b"o\x9e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    list_0 = []
    str_0 = "[|u@`l0vHZ^sR PB"
    none_type_0 = None
    str_1 = " "
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    ordered_dict_0 = module_2.OrderedDict(*list_0, **dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = "W0U"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    str_0 = "\rW0U"
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0}
    tuple_0 = (str_0, bool_0, dict_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_2.namedtuple(str_0, bool_0, defaults=var_1)
