# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import builtins as module_1
import collections as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    object_0 = module_1.object()
    bool_0 = False
    dict_0 = {object_0: object_0, object_0: bool_0, bool_0: bool_0}
    str_0 = "mO&;7CQyX1F'FqHi3.1"
    list_0 = [str_0, object_0, bool_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\x9e"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "IDHKQ"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    bytes_0 = b"\xf3\x1a\xad\xcc\x1bkHU"
    list_0 = [bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_2.namedtuple(none_type_0, none_type_0, module=none_type_0)


def test_case_10():
    bytes_0 = b"\xb1\x12\xf0d\xd9q"
    bytes_1 = b'cmrs"=5\xb73\xd5W\xa8>'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_1}
    module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "\\C2 wQ[N>d"
    int_0 = -3973
    dict_0 = {str_0: str_0, str_0: int_0, str_0: str_0}
    tuple_0 = (str_0, int_0, int_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = True
    tuple_1 = (bool_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    tuple_2 = ()
    dict_1 = {tuple_2: var_0}
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    bytes_0 = b"8\x1e\xdd\x12\xben^\xf0\x9a,\xa4\xce\xceN\xed\x04\xb2O\xab"
    var_4 = module_0.to_namedtuple(tuple_2)
    module_0.to_namedtuple(bytes_0)


def test_case_12():
    str_0 = "F\x0b"
    int_0 = -3973
    dict_0 = {str_0: str_0, str_0: int_0, str_0: str_0}
    tuple_0 = (str_0, int_0, int_0, dict_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = (var_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(tuple_1)
    tuple_2 = ()
    dict_1 = {tuple_2: tuple_2}
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_3)
    module_2.OrderedDict(*var_2, **var_3)
