# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    int_0 = 2
    set_0 = {int_0, int_0}
    tuple_0 = (set_0,)
    list_0 = [tuple_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_2():
    int_0 = 2659
    dict_0 = {
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
        int_0: int_0,
    }
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "cH"
    module_1.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_7():
    bytes_0 = b"\xf9\xee("
    list_0 = [bytes_0]
    var_0 = module_1.to_namedtuple(list_0)
    bool_0 = False
    module_1.to_namedtuple(bool_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_9():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_10():
    bool_0 = False
    str_0 = "N~|*'>>@]\\\t "
    tuple_0 = (bool_0, bool_0, str_0)
    dict_0 = {tuple_0: bool_0, str_0: str_0, tuple_0: str_0, str_0: tuple_0}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_11():
    bytes_0 = b"^l[S\x81\xf3;yd\x9c\x9a<"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_1.to_namedtuple(dict_0)


def test_case_12():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "cH"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_13():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    var_0 = module_1.to_namedtuple(list_0)
    object_0 = module_0.object()
    str_0 = "]lW +<v| "
    str_1 = "h\r"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: list_0}
    ordered_dict_0 = module_2.OrderedDict(**dict_0)
    var_1 = module_1.to_namedtuple(dict_0)
    var_2 = module_1.to_namedtuple(ordered_dict_0)
    var_3 = module_1.to_namedtuple(var_2)
    tuple_0 = (list_0, var_0, var_0)
    var_4 = module_1.to_namedtuple(tuple_0)
    module_1.to_namedtuple(str_0)
