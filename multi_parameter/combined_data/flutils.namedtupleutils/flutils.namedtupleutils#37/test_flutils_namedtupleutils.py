# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1265
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "|YQ@]$N>vlZ@@K)k{"
    bool_0 = True
    tuple_0 = (str_0, str_0, bool_0)
    tuple_1 = (str_0, tuple_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    ordered_dict_0 = module_1.OrderedDict()
    var_1 = module_0.to_namedtuple(ordered_dict_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = "xwhfua"
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_6():
    str_0 = "g"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, bool_0: bool_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    str_0 = ".VW:`\x0b+&6\nA8?g71"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, str_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_10():
    object_0 = module_2.object()
    bool_0 = False
    dict_0 = {object_0: object_0, object_0: object_0, object_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_11():
    str_0 = ".VW:`\x0b+&6\nA8?g71"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bytes_0 = b"\x02"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_13():
    str_0 = "\rdSg"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: str_0, bool_0: bool_0, bool_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_1 = True
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    tuple_0 = ()
    var_3 = module_1.OrderedDict()
    var_4 = module_0.to_namedtuple(var_3)
    var_5 = module_0.to_namedtuple(var_2)
    var_6 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bool_1)
