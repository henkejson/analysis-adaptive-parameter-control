# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import flutils.namedtupleutils as module_1
import collections as module_2


def test_case_0():
    object_0 = module_0.object()
    module_1.to_namedtuple(object_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_1.to_namedtuple(list_0)


def test_case_2():
    str_0 = "s"
    list_0 = [str_0]
    dict_0 = {str_0: list_0}
    var_0 = module_1.to_namedtuple(dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_3():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b" \x8a"
    module_1.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "s"
    list_0 = [str_0]
    var_0 = module_1.to_namedtuple(list_0)
    list_1 = [list_0, str_0, list_0]
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (list_1, bool_0, list_1, dict_0)
    var_1 = module_1.to_namedtuple(tuple_0)
    list_2 = [var_1, tuple_0]
    var_2 = module_1.to_namedtuple(list_2)
    var_3 = module_1.to_namedtuple(var_2)
    var_4 = module_1.to_namedtuple(var_0)
    var_5 = module_1.to_namedtuple(tuple_0)
    var_6 = module_1.to_namedtuple(list_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_1.to_namedtuple(dict_0)


def test_case_8():
    list_0 = []
    var_0 = module_1.to_namedtuple(list_0)


def test_case_9():
    ordered_dict_0 = module_2.OrderedDict()
    var_0 = module_1.to_namedtuple(ordered_dict_0)
    var_1 = module_1.to_namedtuple(var_0)


def test_case_10():
    bytes_0 = b"\nN4\xf4] ~*"
    int_0 = -833
    dict_0 = {bytes_0: int_0, bytes_0: bytes_0, int_0: bytes_0}
    module_1.to_namedtuple(dict_0)


def test_case_11():
    str_0 = "0A\r*d\rHHo%y>u46\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    module_1.to_namedtuple(str_0)


def test_case_12():
    str_0 = " s"
    list_0 = [str_0]
    var_0 = module_1.to_namedtuple(list_0)
    list_1 = [list_0, str_0, list_0]
    bool_0 = True
    dict_0 = {str_0: list_1}
    tuple_0 = (list_1, bool_0, list_1, dict_0)
    var_1 = module_1.to_namedtuple(tuple_0)
    str_1 = 'ij"DPO0.e}v<gN_\\g\x0c'
    var_2 = module_1.to_namedtuple(var_1)
    module_1.to_namedtuple(str_1)
