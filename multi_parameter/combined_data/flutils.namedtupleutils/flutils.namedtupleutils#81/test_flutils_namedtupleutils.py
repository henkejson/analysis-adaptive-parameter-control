# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -2811
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_1.OrderedDict(*var_0)


def test_case_2():
    int_0 = -2780
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"\xba1\xc9Xg\xc9\xfen\xe6X\x14T"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    str_0 = "ap+km![a([Dpv%I@j"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    list_0 = [tuple_0, str_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [var_0, str_0]
    var_1 = module_0.to_namedtuple(list_1)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    list_0 = [ordered_dict_0, ordered_dict_0, ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_10():
    bytes_0 = b"\xf3\xcb7\x98^;\xcd\x1c"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_0.to_namedtuple(list_0)


def test_case_11():
    bool_0 = False
    str_0 = "iG6"
    dict_0 = {str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_0.to_namedtuple(var_0)
    var_4 = module_0.to_namedtuple(var_1)


def test_case_12():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)
    list_1 = [list_0, list_0]
    dict_0 = module_0.to_namedtuple(list_1)
    bool_0 = False
    tuple_0 = (list_1, dict_0, bool_0, bool_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    str_0 = "iG\n"
    dict_1 = {str_0: var_1, str_0: var_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_1)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(ordered_dict_0)
    object_0 = module_2.object()
    var_4 = module_0.to_namedtuple(var_2)
