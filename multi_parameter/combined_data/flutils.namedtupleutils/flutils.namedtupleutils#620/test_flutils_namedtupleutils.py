# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    int_0 = 617
    module_0.to_namedtuple(int_0)


def test_case_1():
    str_0 = "%l9O;)H[%fJ\tju"
    dict_0 = {str_0: str_0, str_0: str_0}
    int_0 = -4417
    tuple_0 = (dict_0, int_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    bytes_0 = b"\xd0\xc8@B\xdaZ\tg\xf1|"
    module_0.to_namedtuple(bytes_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_6():
    str_0 = "python_requires"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_9():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    tuple_0 = (var_0, var_0)
    var_1 = module_0.to_namedtuple(tuple_0)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_11():
    str_0 = "python_requires"
    str_1 = ", {annot be a ]ui^tin name"
    dict_0 = {str_0: str_0, str_0: str_1, str_0: str_1, str_1: str_1}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bytes_0 = b"\x94\x8faa\xb0\xd1\xc5\x89\xec\xbcB\x819\xf7\xcc\xaa\x1c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_13():
    str_0 = "python_requires"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_14():
    str_0 = " ython_rquires"
    str_1 = ", cannot be a builtin name"
    dict_0 = {
        str_0: str_0,
        str_1: str_1,
        str_0: str_1,
        str_0: str_1,
        str_1: str_1,
        str_0: str_0,
    }
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    list_0 = []
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    tuple_0 = (list_0, list_0, ordered_dict_0)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(tuple_0)
    var_5 = module_0.to_namedtuple(tuple_0)
