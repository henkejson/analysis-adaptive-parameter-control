# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    float_0 = 1145.8
    tuple_0 = (float_0, float_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    list_0 = []
    tuple_1 = (list_0,)
    var_1 = module_0.to_namedtuple(tuple_1)
    var_2 = module_0.to_namedtuple(var_1)


def test_case_2():
    bool_0 = True
    bytes_0 = b"\xbf\xb7\xa4:\xda\x95\xc0\xe2A\xcerusT\x831\xce"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_4():
    bytes_0 = b"\x8c\x01\x91\x06\x98"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "b"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_9():
    tuple_0 = ()
    list_0 = []
    tuple_1 = (tuple_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_1)


def test_case_10():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_11():
    str_0 = ""
    set_0 = {str_0, str_0}
    dict_0 = {str_0: set_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [dict_0, str_0]
    tuple_0 = (ordered_dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    tuple_1 = ()
    list_1 = []
    tuple_2 = (tuple_1, list_1)
    var_1 = module_0.to_namedtuple(tuple_2)


def test_case_12():
    str_0 = "\nG"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    bool_0 = True
    bytes_0 = b"x\xf9\xf8\xacU\xc6)~x\xe7\t\xd7\xae\xd3\xdb1\x02~\xa6"
    dict_1 = {bool_0: bool_0, bool_0: bytes_0}
    list_0 = [dict_1]
    var_2 = module_0.to_namedtuple(list_0)
    var_3 = module_0.to_namedtuple(dict_1)
    var_4 = module_0.to_namedtuple(var_2)
    none_type_0 = None
    list_1 = [none_type_0]
    var_5 = module_0.to_namedtuple(list_1)
    module_0.to_namedtuple(none_type_0)
