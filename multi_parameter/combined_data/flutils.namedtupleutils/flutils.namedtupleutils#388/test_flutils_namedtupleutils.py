# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_2():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    str_0 = '[!R &r"{X1\ta"W%OK'
    module_0.to_namedtuple(str_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_5():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = '[!R &r"{X1\ta"W%OK'
    module_0.to_namedtuple(str_0)


def test_case_6():
    ordered_dict_0 = module_1.OrderedDict()
    str_0 = "index"
    dict_0 = {str_0: ordered_dict_0, str_0: ordered_dict_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    list_0 = [var_0, var_0, var_0, var_0]
    var_1 = module_0.to_namedtuple(list_0)
    str_0 = '[!R &r"{X1\ta"W%OK'
    module_0.to_namedtuple(str_0)


def test_case_8():
    str_0 = "4"
    str_1 = "2\n,@\x0c6n@[K01/%F'"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_9():
    float_0 = 634.063345
    set_0 = {float_0, float_0, float_0}
    list_0 = [set_0, float_0]
    dict_0 = {float_0: list_0, float_0: float_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(list_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_10():
    dict_0 = {}
    bytes_0 = b"\x08a\xbaW\x89\xbd\x94\x95\x8d\x862\xba"
    dict_1 = {bytes_0: dict_0}
    list_0 = [dict_0, bytes_0, dict_0, dict_1]
    module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "PC\n"
    ordered_dict_0 = module_1.OrderedDict()
    str_1 = "index"
    dict_0 = {str_0: ordered_dict_0, str_1: ordered_dict_0, str_1: str_0}
    ordered_dict_1 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_1, ordered_dict_1]
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(list_0)
    bool_0 = False
    var_2 = module_1.namedtuple(str_1, dict_0, rename=ordered_dict_1, module=var_1)
    list_1 = [var_2, var_0, var_0]
    tuple_0 = (bool_0, var_2, list_1)
    var_3 = module_0.to_namedtuple(tuple_0)
    var_4 = module_0.to_namedtuple(var_3)
    bool_1 = False
    tuple_1 = (bool_1, bool_1)
    var_5 = module_0.to_namedtuple(var_1)
    var_6 = module_0.to_namedtuple(tuple_1)
    var_7 = module_0.to_namedtuple(tuple_1)
    var_8 = module_0.to_namedtuple(ordered_dict_0)
    var_9 = module_0.to_namedtuple(list_0)
    module_0.to_namedtuple(str_1)
