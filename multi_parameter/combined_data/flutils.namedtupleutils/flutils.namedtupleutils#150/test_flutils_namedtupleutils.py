# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_1():
    str_0 = "The modules to be cherry picked as the key.  And the value is\n    a list of mapping details.\n    "
    bool_0 = False
    dict_0 = {}
    list_0 = [str_0, bool_0, dict_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    str_0 = "placeholder_len"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    bytes_0 = b"l\xfeY\xebHG\xb6_\xd4\xf1\x1e[\x8a\xd2\x8cmb"
    module_0.to_namedtuple(bytes_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.to_namedtuple(dict_0)
    bool_0 = False
    module_0.to_namedtuple(bool_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    str_0 = "un2Kyhxz3sA-'{0nL\twt"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, dict_0, str_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    int_0 = 265
    float_0 = 3154.278147910421
    bytes_0 = b"\xcf8\x87\xd3\xd4\x9b<\xe3"
    dict_0 = {float_0: float_0, bytes_0: int_0, int_0: float_0, float_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    str_0 = "placeholder_len"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_12():
    bool_0 = True
    str_0 = "You do not have execute permission to run the file: %r"
    tuple_0 = (str_0,)
    bytes_0 = b"\xce\x17"
    tuple_1 = (bool_0, bool_0, tuple_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_1)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    str_1 = "placholderle\r"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    list_0 = [dict_0, str_1, dict_0, str_1]
    var_3 = module_0.to_namedtuple(list_0)
    tuple_2 = (var_3, var_3, str_1, list_0)
    var_4 = module_0.to_namedtuple(tuple_2)
    module_2.object(*var_0, **var_4)
