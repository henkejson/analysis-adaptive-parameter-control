# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    bool_0 = True
    complex_0 = -1846.42384 + 2091.55j
    dict_0 = {bool_0: complex_0, bool_0: bool_0, bool_0: bool_0, complex_0: complex_0}
    bytes_0 = b"Z>\xd8 \xc8\xce[\x80>\x1bs\xb1\xda\xa4\xe6\xb5\xd2\xb3#"
    tuple_0 = (dict_0, bool_0, bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)


def test_case_2():
    bytes_0 = b"\xa5\x04p\xd6&\xce~\xda\xec\xba\x97I\x82gM\x90"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "?"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_7():
    str_0 = "subsequent_indent_len"
    dict_0 = {str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    module_0.to_namedtuple(bool_0)


def test_case_10():
    str_0 = "]UbX+ADs"
    str_1 = "h~;Kj!O"
    dict_0 = {str_0: str_0, str_1: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    float_0 = -170.4
    module_0.to_namedtuple(float_0)


def test_case_11():
    bool_0 = True
    complex_0 = -1846.42384 + 2091.55j
    dict_0 = {bool_0: complex_0, bool_0: bool_0, bool_0: bool_0, complex_0: complex_0}
    bytes_0 = b"F\xe7?\xdf\xc85\x9bpr\xcbb\xe3\xe6\xc3\x8a\x1dH\xf3"
    tuple_0 = (dict_0, bool_0, bool_0, bytes_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    str_0 = " u\t"
    str_1 = "subsequent_indent_len"
    dict_1 = {str_0: bool_0, str_1: bytes_0, str_0: complex_0}
    float_0 = 467.0
    list_0 = [str_0, bool_0, float_0]
    var_1 = module_0.to_namedtuple(list_0)
    var_2 = module_0.to_namedtuple(dict_1)
    var_3 = module_0.to_namedtuple(var_2)
    var_4 = module_0.to_namedtuple(dict_1)
    var_5 = module_0.to_namedtuple(var_4)
    var_6 = module_0.to_namedtuple(var_1)
    module_0.to_namedtuple(str_1)
