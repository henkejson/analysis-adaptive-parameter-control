# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)


def test_case_1():
    int_0 = -1753
    tuple_0 = (int_0, int_0)
    list_0 = [int_0, tuple_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)
    dict_0 = {tuple_0: tuple_0}
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "find_paths"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = "strict"
    bytes_0 = b"\x0b\x0cP<\xad+\xb3b\xc7"
    dict_0 = {str_0: bytes_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: bytes_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_8():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_9():
    str_0 = ",2[T;=[+NV<^\t-~M._$\x0c"
    str_1 = "chmod"
    str_2 = "n"
    dict_0 = {str_0: str_1, str_2: str_1, str_0: str_0, str_2: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_10():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_11():
    ordered_dict_0 = module_1.OrderedDict()
    bytes_0 = b"j\xaek_\xc5<\xc55&\xc2\x0f\x8c"
    tuple_0 = (bytes_0, bytes_0, bytes_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, bytes_0: tuple_0}
    module_0.to_namedtuple(dict_0)


def test_case_12():
    str_0 = ",9y?xJrxt_"
    str_1 = "strict\t"
    bytes_0 = b"\x0b\x0c\x18<\xf0+\xb3b\xc7"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_0: bytes_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    int_0 = 80
    bool_0 = True
    tuple_0 = (int_0, bool_0, str_0, bool_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(ordered_dict_0)
    var_2 = module_0.to_namedtuple(var_1)
    var_3 = module_0.to_namedtuple(var_2)
    set_0 = {var_1}
    module_0.to_namedtuple(set_0)
