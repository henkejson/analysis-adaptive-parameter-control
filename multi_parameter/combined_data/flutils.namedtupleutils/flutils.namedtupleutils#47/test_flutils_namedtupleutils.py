# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    int_0 = 1544
    module_0.to_namedtuple(int_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    str_0 = ";["
    module_0.to_namedtuple(str_0)


def test_case_4():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_5():
    bytes_0 = b"\xef\xd4q\xe4\x17\xbei\x84\xf5\xc3\xe7\x89%\x98vT"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (bytes_0,)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(list_0)


def test_case_6():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_7():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_8():
    bytes_0 = b""
    float_0 = 127.01
    dict_0 = {bytes_0: float_0, float_0: float_0, bytes_0: bytes_0}
    module_0.to_namedtuple(dict_0)


def test_case_9():
    str_0 = "u.j&c"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = True
    dict_0 = {bool_0: list_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "pos"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(var_0)
    var_3 = module_2.object()


def test_case_11():
    str_0 = "u.j&c"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = True
    dict_0 = {bool_0: list_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)
    module_1.namedtuple(bool_0, var_1, defaults=bool_0)


def test_case_12():
    str_0 = ";["
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)
    module_0.to_namedtuple(str_0)


def test_case_13():
    str_0 = "o~w6\t=[Tp/L~KCX"
    str_1 = "\x0bD"
    dict_0 = {str_0: str_0, str_1: str_1}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, str_1]
    var_0 = module_0.to_namedtuple(list_0)
    var_1 = module_0.to_namedtuple(var_0)
    none_type_0 = None
    module_0.to_namedtuple(none_type_0)
