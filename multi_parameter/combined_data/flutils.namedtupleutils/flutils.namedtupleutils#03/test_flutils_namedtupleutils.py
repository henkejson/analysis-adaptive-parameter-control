# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1


def test_case_0():
    float_0 = -994.49433
    module_0.to_namedtuple(float_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.to_namedtuple(list_0)
    tuple_0 = (list_0,)
    var_1 = module_0.to_namedtuple(var_0)
    var_2 = module_0.to_namedtuple(tuple_0)
    module_0.to_namedtuple(bool_0)


def test_case_2():
    str_0 = "JqkRE7Oi+8}>`x7"
    dict_0 = {str_0: str_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "cA'PXJLj|FBa>"
    module_0.to_namedtuple(str_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_6():
    str_0 = '~\tR/"CMoF8S?770()x'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_7():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_8():
    str_0 = "`wS}i"
    bytes_0 = b"\xe1\xf8\xa2\t\xaf\x8d\x9c\xb6,\xdd\xf2\xcet"
    dict_0 = {bytes_0: str_0, bytes_0: bytes_0, str_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (str_0, bytes_0, dict_0, str_0)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_10():
    str_0 = "u"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_11():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bytes_0 = b"\xf7@x\xea\xa7\x14\xeb\xc1\xa1"
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.to_namedtuple(list_0)
    str_0 = "j\n"
    var_1 = module_0.to_namedtuple(list_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.to_namedtuple(dict_0)
    none_type_0 = None
    var_3 = module_0.to_namedtuple(var_2)
    module_0.to_namedtuple(none_type_0)
