# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.namedtupleutils as module_0
import collections as module_1
import builtins as module_2


def test_case_0():
    float_0 = -1227.0
    module_0.to_namedtuple(float_0)


def test_case_1():
    str_0 = 'H4A"h#oR]h\x0cX#~W!*^`'
    set_0 = {str_0, str_0, str_0, str_0}
    list_0 = [set_0, set_0, str_0, set_0]
    var_0 = module_0.to_namedtuple(list_0)


def test_case_2():
    bool_0 = False
    str_0 = "H\t:j `I0D,S"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_3():
    ordered_dict_0 = module_1.OrderedDict()
    var_0 = module_0.to_namedtuple(ordered_dict_0)


def test_case_4():
    str_0 = "H\t:j `I0D,S"
    module_0.to_namedtuple(str_0)


def test_case_5():
    list_0 = []
    var_0 = module_0.to_namedtuple(list_0)


def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0]
    var_0 = module_0.to_namedtuple(list_0)
    module_2.object(*list_0, **dict_0)


def test_case_7():
    str_0 = "find_paths"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_0]
    bytes_0 = b"\x03\xe4\x9a,z\xc5\x12\xba2W\xce5$\xef\xf2\xe0Z\x9d"
    set_0 = set()
    dict_0 = {bool_0: bool_0, bytes_0: set_0}
    tuple_0 = (bool_0, bool_1, list_0, dict_0)
    module_0.to_namedtuple(tuple_0)


def test_case_9():
    bool_0 = False
    str_0 = "H\t:j `I0D,S"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)
    var_1 = module_0.to_namedtuple(var_0)


def test_case_10():
    tuple_0 = ()
    var_0 = module_0.to_namedtuple(tuple_0)


def test_case_11():
    bool_0 = False
    str_0 = "find_paths"
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
    var_0 = module_0.to_namedtuple(dict_0)


def test_case_12():
    bool_0 = False
    str_0 = "x8 "
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
    ordered_dict_0 = module_1.OrderedDict(**dict_0)
    list_0 = [ordered_dict_0, ordered_dict_0, str_0, bool_0]
    tuple_0 = (bool_0, ordered_dict_0, list_0)
    var_0 = module_0.to_namedtuple(tuple_0)
    var_1 = module_0.to_namedtuple(tuple_0)
    var_2 = module_0.to_namedtuple(var_0)
    bool_1 = False
    tuple_1 = (bool_1, var_0)
    var_3 = module_0.to_namedtuple(tuple_1)
    var_4 = module_0.to_namedtuple(var_2)
    var_5 = module_0.to_namedtuple(var_4)
