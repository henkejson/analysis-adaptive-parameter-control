# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    name_0 = module_0.Name()
    yield_from_transformer_0 = module_1.YieldFromTransformer(name_0)
    a_s_t_0 = yield_from_transformer_0.visit(name_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    except_handler_0 = module_0.ExceptHandler()
    yield_from_transformer_0 = module_1.YieldFromTransformer(except_handler_0)
    list_0 = [
        except_handler_0,
        except_handler_0,
        except_handler_0,
        yield_from_transformer_0,
    ]
    async_for_0 = module_0.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    except_handler_0 = module_0.ExceptHandler()
    yield_from_transformer_0 = module_1.YieldFromTransformer(except_handler_0)
    none_type_0 = None
    list_0 = [except_handler_0, except_handler_0, none_type_0, yield_from_transformer_0]
    list_1 = [except_handler_0, yield_from_transformer_0, list_0, none_type_0]
    async_for_0 = module_0.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
