# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    if_0 = module_0.If()
    yield_from_transformer_0 = module_1.YieldFromTransformer(if_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    bool_0 = False
    yield_from_transformer_0 = module_1.YieldFromTransformer(bool_0)
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [bool_0, yield_from_transformer_0, list_0]
    async_function_def_0 = module_0.AsyncFunctionDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_3():
    bool_0 = False
    yield_from_transformer_0 = module_1.YieldFromTransformer(bool_0)
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "zr\r+0^b/@:QU[[-{["
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    except_handler_0 = module_0.ExceptHandler(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(except_handler_0)
