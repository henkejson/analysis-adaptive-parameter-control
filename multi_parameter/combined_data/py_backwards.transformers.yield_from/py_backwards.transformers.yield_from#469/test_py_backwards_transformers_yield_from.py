# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bit_and_0 = module_0.BitAnd()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_and_0)
    a_s_t_0 = yield_from_transformer_0.visit(bit_and_0)


def test_case_1():
    bit_and_0 = module_0.BitAnd()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_and_0)


def test_case_2():
    str_0 = "addbase"
    var_0 = module_2.parse(str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "QPtFMpZ=,FRWhs3{"
    str_1 = "IvnebQ_S\n+1"
    dict_0 = {str_0: str_0, str_1: str_1}
    del_0 = module_0.Del(**dict_0)
    yield_from_transformer_0 = module_2.fix_missing_locations(del_0)
    var_0 = module_0.Module(*dict_0)
    var_1 = module_2.dump(var_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(var_1)
    a_s_t_0 = yield_from_transformer_1.visit(var_0)
    module_2.fix_missing_locations(var_1)
