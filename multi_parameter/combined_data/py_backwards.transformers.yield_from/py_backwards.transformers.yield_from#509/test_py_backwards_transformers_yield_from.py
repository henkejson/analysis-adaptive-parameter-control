# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    str_0 = "z"
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    yield_from_transformer_0.visit(str_0)


def test_case_1():
    nonlocal_0 = module_1.Nonlocal()
    yield_from_transformer_0 = module_0.YieldFromTransformer(nonlocal_0)


def test_case_2():
    str_0 = "z"
    var_0 = module_2.parse(str_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    var_1 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bytes_0 = b"\xdd"
    complex_0 = 2109.257 + 3161.002984j
    yield_from_transformer_0 = module_0.YieldFromTransformer(complex_0)
    list_0 = [yield_from_transformer_0]
    str_0 = "z"
    str_1 = "cs:f"
    str_2 = "S"
    dict_0 = {str_0: list_0, str_0: complex_0, str_1: bytes_0, str_2: str_1}
    module_0 = module_1.Module(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(module_0)
    yield_from_transformer_0.visit(complex_0)
