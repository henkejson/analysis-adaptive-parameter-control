# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    l_shift_0 = module_0.LShift()
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    bit_or_0 = module_0.BitOr()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_or_0)


def test_case_2():
    l_shift_0 = module_0.LShift()
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    list_0 = [l_shift_0, yield_from_transformer_0, l_shift_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)


def test_case_3():
    l_shift_0 = module_0.LShift()
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    list_0 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    str_0 = "body"
    dict_0 = {str_0: l_shift_0, str_0: list_0}
    function_def_0 = module_0.FunctionDef(**dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)
