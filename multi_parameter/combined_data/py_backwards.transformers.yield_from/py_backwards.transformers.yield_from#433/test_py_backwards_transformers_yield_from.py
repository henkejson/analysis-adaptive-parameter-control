# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    floor_div_0 = module_0.FloorDiv()
    yield_from_transformer_0 = module_1.YieldFromTransformer(floor_div_0)
    a_s_t_0 = yield_from_transformer_0.visit(floor_div_0)


def test_case_1():
    set_comp_0 = module_0.SetComp()
    yield_from_transformer_0 = module_1.YieldFromTransformer(set_comp_0)


def test_case_2():
    str_0 = "addinfo"
    var_0 = module_2.parse(str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    var_1 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    floor_div_0 = module_0.FloorDiv()
    yield_from_transformer_0 = module_1.YieldFromTransformer(floor_div_0)
    str_0 = "ddinfo"
    dict_0 = {str_0: yield_from_transformer_0, str_0: str_0, str_0: str_0}
    async_function_def_0 = module_0.AsyncFunctionDef(*str_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)
    async_function_def_0.visit(a_s_t_0)
