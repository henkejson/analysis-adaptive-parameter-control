# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    or_0 = module_0.Or()
    yield_from_transformer_0 = module_1.YieldFromTransformer(or_0)
    a_s_t_0 = yield_from_transformer_0.visit(or_0)


def test_case_1():
    or_0 = module_0.Or()
    yield_from_transformer_0 = module_1.YieldFromTransformer(or_0)


def test_case_2():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    str_0 = "Mlx[i%'`)ei"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    async_for_0 = module_0.AsyncFor(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    str_0 = "Mlx[i%'`)e\ri"
    list_1 = [none_type_0, str_0, list_0]
    async_for_0 = module_0.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
