# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bit_xor_0 = module_0.BitXor()
    yield_from_transformer_0 = module_1.YieldFromTransformer(bit_xor_0)
    a_s_t_0 = yield_from_transformer_0.visit(bit_xor_0)


def test_case_1():
    bool_0 = False
    yield_from_transformer_0 = module_1.YieldFromTransformer(bool_0)


def test_case_2():
    gt_0 = module_0.Gt()
    yield_from_transformer_0 = module_1.YieldFromTransformer(gt_0)
    str_0 = "bL#"
    var_0 = module_2.parse(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    gt_0 = module_0.Gt()
    yield_from_transformer_0 = module_1.YieldFromTransformer(gt_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "bL#"
    dict_0 = {str_0: list_0, str_0: yield_from_transformer_0}
    for_0 = module_0.For(*list_0, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(for_0)
    stmt_0 = module_0.stmt()
