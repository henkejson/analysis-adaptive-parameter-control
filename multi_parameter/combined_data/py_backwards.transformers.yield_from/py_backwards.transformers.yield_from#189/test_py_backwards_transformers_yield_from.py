# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    gt_0 = module_0.Gt()
    yield_from_transformer_0 = module_1.YieldFromTransformer(gt_0)
    a_s_t_0 = yield_from_transformer_0.visit(gt_0)


def test_case_1():
    gt_0 = module_0.Gt()
    yield_from_transformer_0 = module_1.YieldFromTransformer(gt_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [yield_from_transformer_0, none_type_0, bool_0]
    if_exp_0 = module_0.IfExp(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_exp_0)
    a_s_t_1 = yield_from_transformer_0.visit(if_exp_0)
    yield_from_transformer_0.visit(list_0)


def test_case_3():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [yield_from_transformer_0, none_type_0]
    list_1 = [none_type_0, list_0, yield_from_transformer_0]
    str_0 = "k`]&`h\r"
    dict_0 = {str_0: list_1, str_0: list_0, str_0: yield_from_transformer_0}
    while_0 = module_0.While(*list_1, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)
