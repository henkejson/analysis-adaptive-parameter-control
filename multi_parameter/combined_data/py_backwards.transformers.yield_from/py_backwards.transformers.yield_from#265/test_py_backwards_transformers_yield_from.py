# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    bytes_0 = b"\xf8\r\xca\x9c\xd8\x04\xd1\x90\xea\xaf\xd6\xe2QEJD\x9d"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    bytes_0 = b"\xf8\r\xca\x9c\xd8\x04\xd1\x90\xea\xaf\xd6\xe2QEJD\x9d"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)


def test_case_2():
    str_0 = "tkinter.font"
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    var_0 = module_1.parse(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    bytes_0 = b"\xf8\r\xaa^\xd8\x04\xd1,\xea\xaf\xd6\xe2QJ&D\x9d"
    yield_from_transformer_0 = module_0.YieldFromTransformer(bytes_0)
    list_0 = [bytes_0, yield_from_transformer_0]
    lambda_0 = module_2.Lambda(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(lambda_0)
