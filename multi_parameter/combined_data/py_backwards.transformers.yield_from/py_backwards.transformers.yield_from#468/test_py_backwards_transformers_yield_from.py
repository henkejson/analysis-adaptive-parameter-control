# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    a_s_t_0 = module_0.AST()
    yield_from_transformer_0 = module_1.YieldFromTransformer(a_s_t_0)
    a_s_t_1 = yield_from_transformer_0.visit(a_s_t_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    bool_0 = True
    yield_from_transformer_0 = module_1.YieldFromTransformer(bool_0)
    list_0 = [bool_0, yield_from_transformer_0, bool_0]
    async_for_0 = module_0.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    bool_0 = True
    yield_from_transformer_0 = module_1.YieldFromTransformer(bool_0)
    list_0 = [yield_from_transformer_0, bool_0, yield_from_transformer_0, bool_0]
    list_1 = [list_0, list_0, list_0]
    dict_0 = {}
    async_for_0 = module_0.AsyncFor(*list_1, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
