# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    dict_0 = {}
    yield_from_transformer_0 = module_0.YieldFromTransformer(dict_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    yield_from_transformer_0 = module_0.YieldFromTransformer(list_0)
    for_0 = module_1.For(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(for_0)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, bool_0]
    yield_from_transformer_0 = module_0.YieldFromTransformer(list_1)
    with_0 = module_1.With(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(with_0)


def test_case_4():
    if_exp_0 = module_1.IfExp()
    bool_0 = False
    list_0 = [bool_0, if_exp_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, bool_0]
    yield_from_transformer_0 = module_0.YieldFromTransformer(list_1)
    with_0 = module_1.With(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(with_0)
    var_0 = module_2.dump(with_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(with_0)
    for_0 = module_1.For()
    yield_from_transformer_2 = module_0.YieldFromTransformer(if_exp_0)
    a_s_t_1 = yield_from_transformer_1.visit(with_0)
    var_1 = module_2.parse(var_0)
    a_s_t_2 = yield_from_transformer_2.visit(var_1)
