# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    slice_0 = module_0.Slice()
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    a_s_t_0 = yield_from_transformer_0.visit(slice_0)


def test_case_1():
    except_handler_0 = module_0.ExceptHandler()
    yield_from_transformer_0 = module_1.YieldFromTransformer(except_handler_0)


def test_case_2():
    generator_exp_0 = module_0.GeneratorExp()
    yield_from_transformer_0 = module_1.YieldFromTransformer(generator_exp_0)
    list_0 = [generator_exp_0, generator_exp_0, generator_exp_0]
    while_0 = module_0.While(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)


def test_case_3():
    generator_exp_0 = module_0.GeneratorExp()
    yield_from_transformer_0 = module_1.YieldFromTransformer(generator_exp_0)
    list_0 = module_2.dump(generator_exp_0)
    while_0 = module_2.parse(list_0, list_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)
