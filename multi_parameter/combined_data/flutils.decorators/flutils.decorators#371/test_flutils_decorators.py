# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import flutils.decorators as module_0


def test_case_0():
    none_type_0 = None
    cached_property_0 = module_0.cached_property(none_type_0)
    cached_property_1 = module_0.cached_property(none_type_0)
    var_0 = cached_property_0.__get__(none_type_0, none_type_0)
    cached_property_0.__get__(cached_property_1, var_0)


def test_case_1():
    str_0 = "Return the character length of the given\n    :obj:`Sequence <typing.Sequence>` without counting any ANSI codes.\n\n    *New in version 0.6*\n\n    Args:\n         seq (:obj:`Sequence <typing.Sequence>`): A string or a list/tuple\n             of strings.\n\n    :rtype:\n        :obj:`int`\n\n    Example:\n        >>> from flutils.txtutils import len_without_ansi\n        >>> text = '\\x1b[38;5;209mfoobar\\x1b[0m'\n        >>> len_without_ansi(text)\n        6\n    "
    cached_property_0 = module_0.cached_property(str_0)
    cached_property_0.__get__(str_0, cached_property_0)


def test_case_2():
    int_0 = 707
    cached_property_0 = module_0.cached_property(int_0)
