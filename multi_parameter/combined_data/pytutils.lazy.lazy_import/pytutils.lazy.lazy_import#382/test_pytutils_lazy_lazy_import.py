# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = '`psU| >"JP;24+\n6/'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "(!u>\nBMh4_7e6lN>nZh)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0)


def test_case_4():
    bytes_0 = b""
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, bytes_0, bytes_0)
    import_replacer_0.__setattr__(bytes_0, import_replacer_0)


def test_case_5():
    bytes_0 = b"\r3R\xa6Y"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, bytes_0)
    module_0.lazy_import(bytes_0, import_replacer_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "4WSw-ps`^llV\n~Et"
    import_processor_0 = module_0.ImportProcessor(str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_10():
    str_0 = '`psU| >"JP;24+\n6/'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = ";6\\pH2<*\x0b#v=f"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "Convert the given text into a bunch of lazy import objects.\n\n        This takes a text string, which should be similar to normal python\n        import markup.\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = ""
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    str_0 = "(dbu gl)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_15():
    bytes_0 = b"\xee\xbd.N\xce\xba\x07\xc9!nR\xf5Tb\xae%:"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, none_type_0, none_type_0, bytes_0, bytes_0)


def test_case_16():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = "p(TK&;\x0b?B}\nHFc{MD"
    import_processor_0.lazy_import(import_processor_0, str_0)


def test_case_17():
    str_0 = "(debug\nBMhell)"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "(debug shell)"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bytes_0, bytes_0)
    module_0.lazy_import(bytes_0, import_replacer_0)
