# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = 'i0Z|$G_"w8FZ7/'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    dict_0 = {}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(dict_0, dict_0)


def test_case_2():
    str_0 = "(c4%[OL\x0b_P<6qHhW9W)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    int_0 = 1000
    module_0.ImportReplacer(int_0, int_0, int_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    int_0 = 1004
    module_0.lazy_import(int_0, int_0, int_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    str_0 = "ho2]-.vv{6xTE#"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(dict_0)


def test_case_8():
    str_0 = "(cE4%[OL\x0b_P<6qHhW9W)"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "O.w+D%&hnA\\#a\\HBiP"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = 'i0Z|^G_"w8FZL/'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = ":.+D-)HnA\\#a\\HBP"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_1 = var_0.__eq__(var_0)
    var_0.__repr__()


def test_case_14():
    str_0 = '*y5"v[x^;'
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_15():
    str_0 = "@NvB2Q\x0c3fc_'(qk4\n~c"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = ":.+D-)HhnA\\#a\\HBiP"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "@NvB2Q\x0c3fc_'(qk4\n~`"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, dict_0)


def test_case_18():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)
