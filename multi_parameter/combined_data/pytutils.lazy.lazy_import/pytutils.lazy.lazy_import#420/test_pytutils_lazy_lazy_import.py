# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "U/rJGNzbB[^"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)


def test_case_1():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = 'aW"3'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0, str_0)


def test_case_3():
    str_0 = "&\\IBD=i'"
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, str_0, var_0, var_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = ";J^3"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "\n"
    import_processor_0 = module_0.ImportProcessor()
    import_processor_0.lazy_import(str_0, str_0)


def test_case_7():
    str_0 = "eEf(XO3M;!K_l>\\<"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    none_type_0 = None
    var_0 = module_0.disallow_proxying()
    module_0.ScopeReplacer(none_type_0, var_0, none_type_0)


def test_case_10():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = "$J^3"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__unicode__()


def test_case_12():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0, bool_0, bool_0)
    module_0.lazy_import(list_0, import_replacer_0, list_0)


def test_case_13():
    str_0 = "Gf#_kH("
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    str_0 = "NA4='/\ri(\nN6Y5t\""
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "&Rp*\x0c5yk|m"
    none_type_0 = None
    var_0 = module_0.disallow_proxying()
    int_0 = -1591
    module_0.ImportReplacer(var_0, none_type_0, var_0, int_0, str_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swagins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_1 = var_0.__eq__(var_0)
    var_0.__unicode__()


def test_case_17():
    str_0 = "pP:hon{}"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_18():
    str_0 = "GU`K/6,]L@_LLf"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, str_0)
