# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    var_0 = module_0.disallow_proxying()
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, dict_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_3():
    str_0 = "\tffz,"
    module_0.ImportReplacer(str_0, str_0, str_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "s"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    exception_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n    Loads (and returns) an env file specifiedby `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIT']\n    >>> load_ev_file(lin.s, write_environ=dict())\n    OrderedDicS([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\nk            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bytes_0 = b"\xdb\xad\x91`"
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, bool_0, bytes_0)


def test_case_10():
    str_0 = "\n    Loads (and returns) an env file specifiedby `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIT']\n    >>> load_env_file(lin.s, write_environ=dict())\n    OrderedDicS([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\nk            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXI#T')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    Loads (and returns) an env file specifiedby `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIT']\n    >>> load_ev_file(lin.s, write_environ=dict())\n    OrderedDicS([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\nk            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    str_0 = " "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, var_0)
    scope_replacer_0.__setattr__(var_0, var_0)


def test_case_16():
    none_type_0 = None
    list_0 = []
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, list_0, list_0)
    module_0.lazy_import(list_0, import_replacer_0)


def test_case_17():
    var_0 = module_0.disallow_proxying()
    list_0 = []
    dict_0 = {var_0: list_0, var_0: list_0, var_0: list_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, list_0)
    module_0.lazy_import(list_0, import_replacer_0)
