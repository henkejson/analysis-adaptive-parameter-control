# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = " Convcrt one queue int( sev3ral. Kind of like  teeing queue.\n   >>> in_q = Que\te(_\n  j Q>> q1, q2, q3 = mult;plex(in_q, count=3)\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__unicode__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "4BLOGvIx:G"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__setattr__(dict_0, import_replacer_0)


def test_case_3():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = " Convcrt one queue int( sev3ral. Kind of like  teeing queue.\n   >>> in_q = Que\te(_\n  j Q>> q1, q2, q3 = mult;plex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        var_0, var_0, var_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    str_0 = "vwFAf~f.9o:f/3\t>TJFr"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='yes')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = " Convcst one queue int( sev3ral. Kind of like  teeing queue.\n   >>> in_q = Que\te(k\n  j Q>> q1, q2, q3 = mult;plex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = "\n    >>> m = AttrDict(omg=True, woa='yes')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "wv#)3`7(+_ae%?\t(i6c"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    >>> m = AttrDict(omg=True, whoa='ye~')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    str_0 = "4BG{LOGvIx:G"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    import_replacer_0.__setattr__(str_0, import_replacer_0)


def test_case_15():
    str_0 = ""
    import_processor_0 = module_0.ImportProcessor()
    import_replacer_0 = module_0.disallow_proxying()
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_16():
    str_0 = "GX-]=\nV(?}xQ\t;ANhptX"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    base_exception_0 = module_1.BaseException()
    bool_0 = True
    bool_1 = False
    none_type_0 = None
    module_0.ImportReplacer(bool_1, none_type_0, bool_0, bool_1, base_exception_0)


def test_case_18():
    str_0 = "Object tried to replace itself, check it's not using its own scope."
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    module_0.lazy_import(import_replacer_0, scope_replacer_0)
