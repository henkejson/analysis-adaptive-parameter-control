# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "kX@,?t}(\r"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_1():
    str_0 = "<!pDFn~s+hL"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "\x0cI:C`,Qr&\rE\ty`b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0, str_0)


def test_case_3():
    bool_0 = False
    bool_1 = False
    module_0.ImportReplacer(bool_0, bool_0, bool_0, children=bool_1)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    set_0 = set()
    import_processor_0 = module_0.ImportProcessor(set_0)


def test_case_6():
    str_0 = "f6OecV@4d?5^$+_"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    set_0 = module_0.disallow_proxying()


def test_case_8():
    list_0 = []
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        list_0, list_0, list_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_10():
    str_0 = "/#9aq$N"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_11():
    str_0 = ""
    str_1 = "Bs9i-(;F6W|i"
    none_type_0 = None
    module_0.lazy_import(str_1, str_0, none_type_0)


def test_case_12():
    str_0 = '\r\narxO{%>\t"Vc0)Y:n'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = "b"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "u]3`y&a=21JZL;MX3f#{"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "i?,*[~V(\n-}"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    str_0 = "u]3`y&a~21JZL;MX3f#{"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(
        illegal_use_of_scope_replacer_0, str_0, illegal_use_of_scope_replacer_0
    )


def test_case_17():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\x0cI:C`,Qr&\rE\ty`b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0, str_0)
