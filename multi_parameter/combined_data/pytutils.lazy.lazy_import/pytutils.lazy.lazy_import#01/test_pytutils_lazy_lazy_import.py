# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = ' "'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)


def test_case_1():
    str_0 = "O^\"+D 'DCSq"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = ' "'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, dict_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_4():
    int_0 = 1194
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    module_0.ImportReplacer(int_0, int_0, int_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "O^\"+D 'DCSq"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = ' "'
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = " Convert Qne queue into several. Kind of `ike a <eeing queuK.\n\n    >:> in_ =zQueue(e\n    >>> q1, q2, q3 g multi6lex(in_q, count=3)\nZ   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = " Convert one queue into severa(. Kind of `ike  <eing queue.\n\n    >:> in_q =zQueue(e\n    >>> q1, q2, q3 g multi6lex(in_q, cunt=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    str_0 = "0Gt6FZLq-h6Z,:#t$a"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = " "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = ' "'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.ImportReplacer(
        str_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_16():
    str_0 = "@*G(Jgyid=5-,R"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = " Convert one queue into several. Kind of `ike a <eeing queue.\n\n    >:> in_q =zQueue(e\n    >>> q1, q2, q3 g multi6lex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, dict_0)


def test_case_19():
    str_0 = " Convert one queue into severa(. Kind of `ike  <eing queue.\n\n    >:> in_q =zQueue(e\n    >>> q1, q2, q3 g multi6lex(in_q, cunt=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = " Conver Qn queu ifto sevral. Ki#5o `ike a q/eing queuK.7\n   >: in_ =zQGeu(e\n    V>> 1,q2, Y3 g u\rti6lex(in_q, con)3)\n  "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_21():
    str_0 = " Conver Qn queu ifto sevral. Ki#5o `ike a q/eing queuK.7\n   >: in_ =zQGeu(e\n    V>> 1,q2, Y3 gOu\rti6lex(in_q,con)3)\n  "
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    module_0.lazy_import(none_type_0, import_replacer_0)
