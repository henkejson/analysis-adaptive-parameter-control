# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    none_type_0 = None
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, none_type_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_3():
    import_processor_0 = module_0.ImportProcessor()


def test_case_4():
    str_0 = "w"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_5():
    str_0 = "w"
    module_0.lazy_import(str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    str_0 = ".h)AG"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_9():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\n        :param str prefix: Prefix to add/remove from keys.\n        :param collections.MutableMapping mapping: Dict-like object to wrap\n        :param bool fancy_repr: If True, show fancy repr, otherwise just show dict's\n        :param bool dictify_repr: If True, cast mapping to a dict on repr\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "u4JU!R~l8"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__unicode__()


def test_case_12():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(bool_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_13():
    none_type_0 = None
    str_0 = "%s.cache is deprecated"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, str_0, str_0, none_type_0
    )
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_14():
    str_0 = "cT%f#`X\t"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "^XgM"
    none_type_0 = None
    str_1 = "pprint"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, children=none_type_0
    )
    module_0.ImportReplacer(dict_0, dict_0, str_0, str_0, str_0)


def test_case_16():
    str_0 = '+"($2@!M?\t_pyHWm\n7'
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "{cls_name}({name})"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "{cqsPm}(Wname\nm)"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    none_type_0 = None
    str_0 = "s.cahe is `epreate"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)
