# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    str_0 = 'LHAAIqSKup"\rX'
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_2():
    import_processor_0 = module_0.ImportProcessor()


def test_case_3():
    str_0 = "G[QP}3qlQi()@\x0crq"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_4():
    var_0 = module_0.disallow_proxying()


def test_case_5():
    var_0 = module_0.disallow_proxying()
    list_0 = [var_0, var_0]
    module_0.ImportReplacer(list_0, list_0, var_0)


def test_case_6():
    str_0 = "6O<z3b>"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    int_0 = 1562
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        int_0, int_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)


def test_case_10():
    str_0 = ":Ma}.kN)j"
    import_processor_0 = module_0.ImportProcessor(str_0)
    str_1 = ""
    import_processor_0.lazy_import(str_1, str_1)


def test_case_11():
    str_0 = "@tID\tWOFs#.GH?s\r"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    str_0 = "R*&yM\n,iH7>|rZ"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_15():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, dict_0, children=none_type_0
    )
    import_replacer_0.__setattr__(import_replacer_0, import_replacer_0)


def test_case_16():
    str_0 = "G[QP}3qlQi()@\x0crq"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "formatte8r"
    str_1 = "Uwnv R3(N|Wty'Z^/F"
    module_0.lazy_import(str_0, str_1)


def test_case_18():
    str_0 = "\n    Loads (and returns  an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(linIs, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    str_0 = "AK#6k\nnX"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=var_0)
    import_replacer_0.__call__()


def test_case_20():
    var_0 = module_0.disallow_proxying()
    str_0 = "}+*xp)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0, var_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
