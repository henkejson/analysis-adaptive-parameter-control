# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "X|"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    var_1 = illegal_use_of_scope_replacer_0.__eq__(var_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = '\\A"(.*)"\\Z'
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, str_0, none_type_0, none_type_0, none_type_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "X\x0b"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "X|"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "`N=%iZUqdIf([<(()"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\x0b"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = "M\n"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = "\x0b/-"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_12():
    str_0 = "w(<GxN#g\r#+(@yT  "
    dict_0 = module_0.disallow_proxying()
    bool_0 = True
    module_0.lazy_import(bool_0, str_0)


def test_case_13():
    str_0 = "N#"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "`N=%iZUqdIf([\n(()"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "X|"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_16():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    str_0 = "X|"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.ImportReplacer(
        none_type_0, str_0, none_type_0, str_0, illegal_use_of_scope_replacer_0
    )


def test_case_17():
    str_0 = '<\x0b">a@-.v4'
    dict_0 = {str_0: str_0}
    none_type_0 = None
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, none_type_0, none_type_0)
    scope_replacer_0.__call__()


def test_case_18():
    str_0 = "`N=%\n6^gZUqdIf([\n(\n)"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "lp*_#h?"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__setattr__(str_0, dict_0)


def test_case_20():
    none_type_0 = None
    str_0 = 'E|N,"uX.:JBr.0['
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, none_type_0)
    import_replacer_0.__call__(**dict_0)
