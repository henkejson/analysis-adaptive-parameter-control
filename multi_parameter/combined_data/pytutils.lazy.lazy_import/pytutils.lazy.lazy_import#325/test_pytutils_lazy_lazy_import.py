# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    int_0 = 2250
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        int_0, int_0, int_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "Scoeeplaer onect %(a\nNr was use4 itcorrectly:4%(msg)U%(extra)\x0b"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_4():
    str_0 = "Scoeeplaer onect %(a\nNr was use4 itcor!ectly:4%(msg)U%(extra)\x0b"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    bool_0 = False
    import_processor_0 = module_0.ImportProcessor(bool_0)


def test_case_7():
    str_0 = "TjQ%,E/(J"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "UU"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "bad from/import %r"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "^:}'dN<AFRj>\n"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = ""
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = ""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xeb; \x7f\x17NH\xc9\xf0\x04\x96"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, bytes_0
    )
    dict_0 = {none_type_0: bytes_0, bytes_0: illegal_use_of_scope_replacer_0}
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        none_type_0,
        dict_0,
        dict_0,
    )


def test_case_15():
    str_0 = "u~!&R9 B RN\x0cfo#,Ed1"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "ScopeReplacer object %(name)r was used incorrectly: %(msg)s%(extra)s"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "ScopeReplacer object %(na\ne)r was used itcorrectly: %(msg)s%(extra)s"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "ScopeReplacer on$ect %(na\nN)r was used itcorrectly: %(msg)s%(extra)\x0b"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "coeeperonect %(\nNr was se4 itcorre{ly:4%(msg)U%(etra)\x0b"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_20():
    str_0 = "&o?[Lkdxk./G"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    module_0.lazy_import(dict_0, scope_replacer_0)


def test_case_21():
    str_0 = "pprint"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_22():
    str_0 = "pprint"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0, import_replacer_0)
