# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)


def test_case_1():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "-Aya\x0c9^lnA!\\_)rsG"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    bool_0 = False
    bytes_0 = b"J\x1e\x93'\x98!IV\x10t)\x19#\xa8"
    module_0.ImportReplacer(bool_0, bool_0, bytes_0, bool_0)


def test_case_4():
    bool_0 = False
    module_0.ImportReplacer(bool_0, bool_0, bool_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    bool_0 = True
    module_0.lazy_import(bool_0, bool_0, bool_0)


def test_case_7():
    str_0 = "\x0b\x0bCQM>"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    str_0 = ""
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_9():
    import_processor_0 = module_0.disallow_proxying()


def test_case_10():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "xm*?~Ouwr;lh_"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "%(asct[me)s| %(name\rs/%(processName)s[%(process)d]-%(threadName)s[%(thread)d]: %(message)s @%(funcName)s:%(lineno9d #%(levelname)s"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "v_\x0c($,^8"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    complex_0 = 493.8063 - 170.737171j
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        complex_0, complex_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_16():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    str_0 = "y7"
    bytes_0 = b"\xf7\x93[\xc3\xfc\x9f\x95{8"
    module_0.ImportReplacer(str_0, bytes_0, bytes_0, bytes_0, str_0)


def test_case_17():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, var_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_18():
    str_0 = "~Q|m\\oWpP\nhR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_19():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` nto the mapping `environ`.\n\n    >>> lines = ['TUST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAToDOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS), 2.../a/test'),\n             ('Y\nLO',\n              '.../swaggins/$NONEXISTEZT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_20():
    str_0 = "%(asct[me)s| %(name\rs/%(processName)s[%(process)d]-%(threadNam)s[%(thread)d]: %(message)s @%(funcName)s:%(lineno9d #%(levelname)s"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_21():
    str_0 = "pprint"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_22():
    str_0 = "pprint"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, import_replacer_0)
