# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_1():
    str_0 = "r\t]MuY"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_3():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = mergeq1, q2, q3)\n   "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__call__()


def test_case_4():
    bytes_0 = b"\xa0\x08h\x82"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, children=bytes_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "@5xPG"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = mergeq1, q2, q3)\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    import_processor_0 = module_0.disallow_proxying()


def test_case_9():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0, none_type_0)


def test_case_10():
    exception_0 = module_1.Exception()
    var_0 = module_0.disallow_proxying()
    list_0 = [var_0, exception_0]
    module_0.ImportReplacer(var_0, var_0, var_0, list_0, list_0)


def test_case_11():
    str_0 = " Me!ge multipe queues tagether\n\n    >>> q1, 2, y3 = [Queue() foj _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    exception_1 = module_1.Exception()
    str_0 = ""
    float_0 = 1310.0
    import_processor_0 = module_0.ImportProcessor(float_0)
    import_processor_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "4\\d#5yE3"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "(%imn|-\n4pHUH(Ypsy"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = mergeq1, q2, q3)\n   "
    dict_0 = {}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, scope_replacer_0)


def test_case_17():
    str_0 = " Merge multiUle2zueues tog(her\n\n    >>> q1, q2,oq3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1 q2, q3)\n   "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = " Merge multipe queues together\n\n    >>> q1, 2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = mergeq1, q2, q3)\n   "
    dict_0 = {}
    scope_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(str_0, scope_replacer_0)
