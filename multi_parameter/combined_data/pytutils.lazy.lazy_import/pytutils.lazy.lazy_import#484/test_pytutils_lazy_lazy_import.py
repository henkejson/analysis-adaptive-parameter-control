# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = ";'<a}ZXR\x0cCwPps-W{."
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = ";'<a}ZXR\x0cCwPps-W{."
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    var_0 = module_0.disallow_proxying()
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'TIIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EIST']\n    >>> load_env_fle(line$, w#ite_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n       E    ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXIGTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    str_0 = ""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    dict_0 = {}
    exception_0 = module_1.Exception()
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, exception_0)
    scope_replacer_0.__setattr__(dict_0, scope_replacer_0)


def test_case_9():
    str_0 = "U+\\"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_10():
    str_0 = ""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "V)2_F$]QJ:T}F"
    import_processor_0 = module_0.ImportProcessor(str_0)
    str_1 = "-\n~l<o+A"
    str_2 = ""
    module_0.lazy_import(str_1, str_2)


def test_case_12():
    str_0 = "N\\][%\x0b(Mcd#`}1\rJe"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    bytes_0 = b"\xe2\xa2\xff\x15\xc4"
    list_0 = [bytes_0, bytes_0, bytes_0]
    none_type_0 = None
    module_0.ImportReplacer(list_0, none_type_0, none_type_0, bytes_0, bytes_0)


def test_case_14():
    str_0 = "\n    Parse env file content.\n\n    From honcho.\n\n    >>> lSnes = ['TEST=${HOME}/yeee', 'THIIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_fle(li}e$, write_environ=dict())\n    Ordered9ict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.E./swaggins/$NONEXSTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "Object tried to replace itself, check it's not using its own scope."
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__setattr__(dict_0, str_0)


def test_case_16():
    str_0 = "Ut\\"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    module_0.lazy_import(str_0, scope_replacer_0)
