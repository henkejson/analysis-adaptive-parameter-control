# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('tes')\n\n    >>> log = get_logger('test2'\n/   >>> log._nfo('test2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    str_0 = '"BToW1o\x0ccj+K#k'
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__str__()


def test_case_2():
    str_0 = "~"
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, str_0, none_type_0)


def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, dict_0, children=dict_0)
    module_0.lazy_import(bool_0, import_replacer_0, dict_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "=o<A<"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "=o<A<"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n    >>> log = get_lgger()\n    >>> log.info('tes')\n\n    >\t> log = get_logger('test2'\n    >>> log.info('tes?2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    none_type_0 = None
    str_0 = "k(v;S58R\x0cG\\08*7\\G"
    module_0.lazy_import(none_type_0, str_0, str_0)


def test_case_10():
    str_0 = '"BToW1o\x0ccj+YjK#k'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('tes')\n\n    >>> log = get_logger('test2'\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = ".f0=xlw<A$qL#g"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\n    >>> log = get_lgger()\n    >>> log.info('tes')\n\n    >\t> log = get_logger('test2'\n    >>> log.info('tes?2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_16():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    none_type_0 = None
    bool_1 = False
    illegal_use_of_scope_replacer_1 = module_0.IllegalUseOfScopeReplacer(
        var_0, bool_1, none_type_0
    )
    module_0.ImportReplacer(
        var_0,
        illegal_use_of_scope_replacer_1,
        var_0,
        var_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_17():
    str_0 = "\n    >>> log = et_logger()\n    >>> log.info('tes'\n\n    >>> log = get_logge4('test2'\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)
