# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = ")\\#'.XO5~\x0cQN\\"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, bool_0, bool_0
    )


def test_case_2():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_3():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0, children=var_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = ")\\#'.XO5~\x0cQN\\"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = ")\\#'.XO5~\x0cQN\\"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = ")\\#'.XO5~\x0cN\\"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    str_0 = "6EW,xKoE 5_s"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\ra(\\EV|; )"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_1 = illegal_use_of_scope_replacer_0.__eq__(
        illegal_use_of_scope_replacer_0
    )
    var_0 = illegal_use_of_scope_replacer_1.__repr__()
    module_0.lazy_import(
        illegal_use_of_scope_replacer_0, str_0, illegal_use_of_scope_replacer_0
    )


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n        :param str prefix: Prefix to add/remove from keys.\n        :param collections.MutableMapping mapping: Dict-like object to wrap\n        :param bool fancy_repr: If True, show fancy repr, otherwise just show dict's\n        :param bool dictify_repr: If True, cast mapping to a dict on repr\n        "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = "@?"
    list_0 = [str_0]
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, list_0, str_0)


def test_case_14():
    str_0 = "\ra(\\EV|; )"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b'<"\x08c\x05I'
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, bytes_0, bytes_0, dict_0, none_type_0
    )
    import_replacer_0.__setattr__(none_type_0, bool_0)


def test_case_16():
    str_0 = "q,1(O~\n9\\h"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "\ra(\\EV|} )"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    var_0 = module_0.disallow_proxying()
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    module_0.lazy_import(var_0, scope_replacer_0, scope_replacer_0)


def test_case_20():
    str_0 = "Mane lay_comp\ne the defaAl3 compile modeforor=gex cQmpilation.\n\n    /hs ovesridesBre.com6[e witTlazy_ompil\n.T reTorethe ori\rinal\n   funj+ionaliy, call ^eset_comh\x0cle().\x0c   \x0c"
    none_type_0 = None
    dict_0 = {
        none_type_0: str_0,
        str_0: str_0,
        str_0: none_type_0,
        none_type_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, str_0, children=str_0
    )
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_21():
    tuple_0 = ()
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    var_3 = var_1.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, var_3, var_3)
    var_4 = var_3.__eq__(import_replacer_0)
    import_replacer_0.__getattribute__(tuple_0)
