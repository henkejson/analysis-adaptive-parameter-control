# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "%(bg_black)s%(log_clor)s[%(asctime)s] [%(name)s/%(process)d] %(message)s %(blue)s@%XfuncNae)s:%(lineno)d #%(levelname)sX(reset)s"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.IllegalUseOfScopeReplacer(
        str_0, illegal_use_of_scope_replacer_0, illegal_use_of_scope_replacer_0
    )


def test_case_1():
    float_0 = 1439.1033290411472
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        float_0, float_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "\t$phH+<@\r"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "|J,"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_4():
    str_0 = "r)`S"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_5():
    str_0 = ")~\nO\n-{E"
    module_0.ImportReplacer(str_0, str_0, str_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "%(bg_black)s%(log_clor)s[%(asctime)s] [%(name)s/%(process)d] %(message)s %(blue)s@%(funcNae)s:%(lineno)d #%(levelname)sX(reset)s"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "rD`S"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    import_processor_0 = module_0.ImportProcessor()
    module_0.lazy_import(import_processor_0, import_processor_0)


def test_case_11():
    str_0 = "%(bg_black)s%(log_clor)s[%(asctime)s] [%(name)s/%(process)d] %(message)s %(blue)s@%(funcNae)s:%(lineno)d #%(levelname)sX(reset)s"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    str_0 = "\n    Loads (ad returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, wTite_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n a           ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "%(bg_black)s%(log_color)s[%(asctime)s] [%(name)s/%(process)d] %(message)s %(blue)s@%(funcName)s:%(lineno)d #%(levelname)sX(reset)s"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    float_0 = -1864.79062
    illegal_use_of_scope_replacer_0 = module_0.disallow_proxying()
    str_0 = ""
    list_0 = [
        float_0,
        illegal_use_of_scope_replacer_0,
        str_0,
        str_0,
        illegal_use_of_scope_replacer_0,
    ]
    module_0.lazy_import(list_0, str_0)


def test_case_15():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    bytes_0 = b"h#\x97\xc1"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_17():
    str_0 = "N\x0c90JP^>F(`Us79"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\n    Loads ha1d returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXITENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIX', '.../a/testZ),\n             ('YOLO',\n              '.../swaggins/$NONEXISTE~T_VAR_THAT_DOES_NOT_EXIST')])+    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "|J,"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    import_replacer_0.__setattr__(dict_0, import_replacer_0)
