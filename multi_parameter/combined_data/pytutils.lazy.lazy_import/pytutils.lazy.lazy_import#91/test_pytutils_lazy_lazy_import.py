# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "P78\n\nt"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__repr__()


def test_case_1():
    str_0 = "\n    >>> log = et_logger()\n    >>> log.info('test')\n\n   >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__repr__()


def test_case_2():
    str_0 = "PPt"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0)


def test_case_3():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_4():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "PP4xt"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "PP4\nt"
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, str_0, var_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()
    var_1 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    module_0.ImportReplacer(var_1, var_1, var_1, var_1, var_1)


def test_case_10():
    str_0 = "\n    S>> log = et_lo2ger()\n    >>> lxg.info('test'\n\n    >>> log = ges_logger('test%')\n    >>> log.info('tes2x)\n   "
    dict_0 = {str_0: str_0}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, str_0)
    scope_replacer_0.__getattribute__(str_0)


def test_case_11():
    str_0 = 'HO~5!{G0G@X("8\x0bz.$'
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    >>> log = et_logger()\n    >>> lxg.info('test'\n\n    >>> log = get_logger('test2')\n    >>> log.info('tes2')\n   "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = '+.AtA#PF^FXE"\n%'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "PP8\n\nt"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n   \x0bS>>log\"= et_lo2ger&)\n    >>> lxg.info('test'\n\n    >>> log =ges_logger('Kest%'\n    >>> log.i/fo('tes2x)\n   "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "#"
    bool_0 = True
    module_0.lazy_import(bool_0, str_0)


def test_case_18():
    str_0 = "\n   \x0bS>> log\"= et_lo2ger&)\n    >>> lxg.info('test'\n\n    >>> log = ges_logger('test%')\n    >>> log.i/fo('tesMx)\n   "
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_19():
    str_0 = "\n   \x0bS>> log\"= et_lo2ger&)\n    >>> lxg.info('test'\n\n    >>> log = ges_logger('test%')\n    >>> log.i/fo('tesMx)\n   "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_20():
    str_0 = "<,"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    module_0.lazy_import(import_replacer_0, scope_replacer_0)
