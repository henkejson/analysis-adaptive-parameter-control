# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "C)2'Jg]%"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_1():
    int_0 = 1000
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "[/~"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    str_0 = "\nSS<N'%Ck\rJ^VOI"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_4():
    str_0 = "1::VV"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0, dict_0)


def test_case_5():
    bytes_0 = b"Z\x8c\x12Of\x05\x0e0\x03i\xfe\xc2\xe9\xaf\xccbG\xf4\xdd\xc3"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, bytes_0, none_type_0, none_type_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "g$aoc|\nU!`k)b[u%"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "g$aoc|\nU!`k)b[u%"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    import_processor_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "[/~"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\nSS<N'%Ck\rJ^VOI"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\\A([A-Za-z_0-9\n+)=(.*)\\Z"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = '\\A"(.*)"\\Z'
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = " "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\tz\\#P <.."
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "g$Uo.O|\n\x0c!`k)b[%"
    import_processor_0 = module_0.ImportProcessor()
    none_type_0 = None
    str_1 = "h/iO.VDq,vm\x0cJ3')Y"
    str_2 = "h/iO.VDq,vm\x0cJ3')Y"
    module_0.ImportReplacer(str_1, none_type_0, str_2, str_2, str_0)


def test_case_17():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_18():
    str_0 = "3"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_19():
    str_0 = "\\A([-Za-zK-9\n)=(.*I\\)"
    module_0.lazy_import(str_0, str_0, str_0)
