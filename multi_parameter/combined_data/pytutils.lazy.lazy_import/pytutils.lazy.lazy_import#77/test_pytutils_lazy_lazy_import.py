# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, bool_0, bool_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    str_0 = "1.\txN2sIx}Qrkx\x0bBZ"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_4():
    str_0 = "OXEI\rt,Lg,I\x0c\\"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_5():
    var_0 = module_0.disallow_proxying()
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        var_0, bool_0, var_0
    )
    module_0.ImportReplacer(var_0, var_0, var_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    bool_0 = False
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, bool_0, bool_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    str_0 = "z(DK\nDe11{W:E+d)"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "RW+\t"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    float_0 = 6032.0
    module_0.ImportReplacer(float_0, float_0, float_0, float_0, float_0)


def test_case_12():
    str_0 = "JK<$ca^278'J%"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0, dict_0)
    module_0.lazy_import(dict_0, str_0)


def test_case_13():
    str_0 = "\n    Simulates nonlocal keyword in Python 2\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "z(DK\nDoe1\n{W:vgd"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "z(DKe*1{hW:~+d)"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "H:-a)#`w7(bR|"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = " "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "F)lG2\r4}u5#VxPV"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_19():
    str_0 = "JK<$ca^278'J%"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0, dict_0)
    import_replacer_0.__getattribute__(str_0)


def test_case_20():
    str_0 = "JKv$ca^278'JY"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    scope_replacer_0.__call__()
