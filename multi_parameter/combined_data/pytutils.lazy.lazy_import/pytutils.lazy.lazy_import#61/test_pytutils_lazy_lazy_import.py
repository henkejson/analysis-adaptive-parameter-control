# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "H#^p*cS,"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    bytes_0 = b'~\xc6\xef\xeb\xb7\xe8\x15\xa4\xd4"\xcb\xb8\xca&'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "\n D  Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST={HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTET_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    bytes_0 = b"c\xdd\x12\x1dL\x84\xc7#\x08\xc0\xc7"
    tuple_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(tuple_0, bytes_0, tuple_0, bytes_0)


def test_case_5():
    str_0 = "a[5,D"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "H#^p*cS,"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "H#Vp4*g8<,O"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    bytes_0 = b"c\xdd\x12\x1dL\x84\xc7#\x08\xc0\xc7"
    tuple_0 = (bytes_0, bytes_0)
    module_0.ScopeReplacer(tuple_0, tuple_0, bytes_0)


def test_case_11():
    str_0 = "l$F%xB9<Phxbu"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "Convert the given text into a bunch of lazy import objects.\n\n        This takes a text string, which should be similar to normal python\n        import markup.\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    str_0 = "import /"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "Convert the given text into a|bunchof lazy import objects.\n\n        ThDs takes a text string, which should be(similar to normaK python\n        import markup.\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "ScopeReplacer object %(name)r was used incorrectly: %(msg)s%(extra)s"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\nOH/8+EN&A+vG)C=K["
    bool_0 = True
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    module_0.ImportReplacer(
        str_0, bool_0, none_type_0, str_0, illegal_use_of_scope_replacer_0
    )


def test_case_18():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "0X \tYRi\x0c8/vKvv%\t"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0, dict_0)


def test_case_20():
    str_0 = "import .\t"
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "\x0cimport ,."
    module_0.lazy_import(str_0, str_0)


def test_case_22():
    str_0 = "\x0cimport Z,Z."
    module_0.lazy_import(str_0, str_0)
