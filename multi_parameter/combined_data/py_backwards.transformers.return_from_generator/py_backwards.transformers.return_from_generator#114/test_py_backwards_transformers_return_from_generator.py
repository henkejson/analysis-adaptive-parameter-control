# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    ellipsis_0 = module_0.Ellipsis()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        ellipsis_0
    )


def test_case_1():
    str_0 = '"o'
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    str_1 = "@@'^"
    function_def_0 = module_0.FunctionDef(*str_1)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    none_type_0 = None
    str_0 = 'h"o'
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    str_1 = "@@'^"
    list_0 = [str_0, none_type_0, str_1, str_0]
    dict_0 = {}
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(str_1)
    function_def_2 = module_0.FunctionDef(*str_1)
    function_def_3 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_2
    )


def test_case_3():
    none_type_0 = None
    str_0 = '"o'
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    str_1 = ""
    list_0 = [str_0, none_type_0, str_1, str_0]
    dict_0 = {}
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(str_1)
    not_eq_0 = module_0.NotEq(**dict_0)
    function_def_2 = module_0.FunctionDef(*str_1)
    return_from_generator_transformer_0.visit_FunctionDef(function_def_2)
