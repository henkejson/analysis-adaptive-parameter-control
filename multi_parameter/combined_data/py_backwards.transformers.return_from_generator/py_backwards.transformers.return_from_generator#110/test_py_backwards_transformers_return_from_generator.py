# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    in_0 = module_0.In()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(in_0)


def test_case_1():
    sub_0 = module_0.Sub()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(sub_0)
    var_0 = module_2.dump(sub_0)
    function_def_0 = module_0.FunctionDef(*var_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    dict_0 = {}
    sub_0 = module_0.Sub(**dict_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(sub_0)
    list_0 = [sub_0, sub_0, dict_0]
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    dict_0 = {}
    sub_0 = module_0.Sub(**dict_0)
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(sub_0)
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    var_0 = module_2.dump(sub_0, return_from_generator_transformer_1)
    function_def_0 = module_0.FunctionDef(*var_0)
    var_1 = module_2.parse(var_0)
    function_def_1 = return_from_generator_transformer_1.visit_FunctionDef(var_1)
    module_2.get_docstring(sub_0)
