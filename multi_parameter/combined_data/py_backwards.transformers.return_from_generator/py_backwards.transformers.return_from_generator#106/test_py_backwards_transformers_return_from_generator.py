# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bytes_0 = b"-\x07\xab\xa2\xff\xd0j\x08s\xa9H\x19&\xbbla\x82"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )


def test_case_1():
    bytes_0 = b'"\x8d\xd5\xbf\x15\xc6\x02\x9a\x15^\xee'
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    none_type_0 = None
    none_type_1 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        none_type_1
    )
    list_0 = [none_type_0, none_type_0, bytes_0, none_type_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    module_2.fix_missing_locations(none_type_1)
