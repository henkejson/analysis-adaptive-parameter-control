# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    complex_0 = 5292 + 70.783j
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        complex_0
    )


def test_case_1():
    str_0 = "3Q4u$zx`"
    list_0 = [str_0]
    module_0 = module_1.Module(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        module_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(module_0)


def test_case_2():
    str_0 = ""
    list_0 = [str_0]
    module_0 = module_1.Module(*list_0)
    interactive_0 = module_1.Interactive()
    none_type_0 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        interactive_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(module_0)
    module_2.copy_location(str_0, none_type_0)


def test_case_3():
    str_0 = "P3"
    list_0 = [str_0]
    module_0 = module_1.Module(*list_0)
    var_0 = module_2.parse(str_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        module_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    var_1 = module_2.iter_child_nodes(list_0)
    var_1.generic_visit(str_0)
