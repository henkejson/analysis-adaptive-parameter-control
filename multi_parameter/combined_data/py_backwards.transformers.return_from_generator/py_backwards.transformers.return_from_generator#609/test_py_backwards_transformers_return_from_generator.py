# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    slice_0 = module_0.slice()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        slice_0
    )


def test_case_1():
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    str_0 = "j~.V*749-*m"
    list_0 = [none_type_0, none_type_0, str_0, none_type_0]
    async_for_0 = module_0.AsyncFor(*list_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(async_for_0)


def test_case_2():
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    str_0 = ""
    list_0 = [none_type_0, none_type_0, str_0, none_type_0]
    async_for_0 = module_0.AsyncFor(*list_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(async_for_0)
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_1 = return_from_generator_transformer_1.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_1.generic_visit(
        return_from_generator_transformer_1
    )
