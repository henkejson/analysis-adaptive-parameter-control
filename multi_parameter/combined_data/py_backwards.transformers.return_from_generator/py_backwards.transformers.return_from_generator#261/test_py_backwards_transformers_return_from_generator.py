# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    not_in_0 = module_0.NotIn()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        not_in_0
    )


def test_case_1():
    bytes_0 = b"\x17\xca"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        list_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    bytes_0 = b"\xc5\x87"
    list_0 = [bytes_0, bytes_0, bytes_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        function_def_0
    )
    var_0 = module_2.parse(bytes_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
