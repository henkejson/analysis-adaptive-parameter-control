# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    mod_0 = module_0.mod()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(mod_0)


def test_case_1():
    str_0 = ")Zf_"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    function_def_0 = module_0.FunctionDef(*str_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    dict_comp_0 = module_0.DictComp()
    str_0 = ")Zf_"
    str_1 = "0k+r;u"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        dict_comp_0
    )
    list_0 = [str_0, dict_comp_0, str_1]
    function_def_0 = module_0.FunctionDef(*list_0, **dict_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
