# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    none_type_0 = None
    module_0.literal_eval(none_type_0)


def test_case_1():
    bytes_0 = b"\x19"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [
        return_from_generator_transformer_0,
        return_from_generator_transformer_0,
        bytes_0,
        return_from_generator_transformer_0,
    ]
    function_def_0 = module_2.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [
        return_from_generator_transformer_0,
        return_from_generator_transformer_0,
        bytes_0,
        return_from_generator_transformer_0,
    ]
    function_def_0 = module_2.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    bytes_0 = b"\x15\x12\xa3\x0b\x17\xe4~\xd4[\x1e\xe2L\rz9"
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        bytes_0
    )
    list_0 = [
        return_from_generator_transformer_0,
        return_from_generator_transformer_0,
        bytes_0,
        return_from_generator_transformer_0,
    ]
    function_def_0 = module_2.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
