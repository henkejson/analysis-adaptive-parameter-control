# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    none_type_0 = None
    module_0.dump(none_type_0)


def test_case_1():
    str_0 = "Lh0qI="
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    function_def_0 = module_2.FunctionDef(*str_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    str_0 = "Lh0qI="
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(str_0)
    list_0 = [
        return_from_generator_transformer_0,
        return_from_generator_transformer_0,
        str_0,
        str_0,
        return_from_generator_transformer_0,
    ]
    function_def_0 = module_2.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    alias_0 = module_2.alias()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        alias_0
    )
    str_0 = ""
    none_type_0 = None
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        alias_0
    )
    list_0 = [
        return_from_generator_transformer_0,
        return_from_generator_transformer_0,
        str_0,
        str_0,
        alias_0,
    ]
    return_from_generator_transformer_3 = module_1.ReturnFromGeneratorTransformer(
        alias_0
    )
    var_0 = module_0.walk(return_from_generator_transformer_0)
    function_def_0 = module_2.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_4 = module_1.ReturnFromGeneratorTransformer(
        alias_0
    )
    bool_0 = True
    return_from_generator_transformer_3.visit(bool_0)


def test_case_4():
    alias_0 = module_2.alias()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        alias_0
    )
    str_0 = "L-d6bWug"
    var_0 = module_0.parse(str_0)
    list_0 = [var_0, return_from_generator_transformer_0, str_0, str_0]
    list_1 = [var_0, var_0, list_0, var_0]
    function_def_0 = module_2.FunctionDef(*list_1)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
