# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    str_0 = "+&T;\t(l"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(str_0)


def test_case_2():
    none_type_0 = None
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.find(immutable_list_1)


def test_case_3():
    bytes_0 = b"\xa7\xad}\x1a\x05\x91\xe3\x16\x02"
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_0.__add__(bytes_0)


def test_case_4():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_1.__len__()
    immutable_list_2 = immutable_list_1.append(var_1)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    var_0.unshift(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_8():
    list_0 = []
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    none_type_0 = None
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    list_0 = []
    complex_0 = 3588.8 + 1765.166893j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0)
    immutable_list_0.filter(list_0)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_14():
    bytes_0 = b"\xf7\x8dl\x1a\xd2\xce Q\xcd\t\xbf\xbb\x15"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(list_0, is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(bytes_0, none_type_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.reduce(var_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(immutable_list_1)


def test_case_17():
    none_type_0 = None
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_0.find(immutable_list_1)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    list_0 = []
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_2 = immutable_list_0.unshift(list_0)
    var_1 = immutable_list_1.reduce(var_0, immutable_list_1)
    immutable_list_3 = immutable_list_1.unshift(immutable_list_1)
    var_2 = immutable_list_1.to_list()
    var_3 = immutable_list_1.reduce(immutable_list_3, var_2)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_4 = immutable_list_3.__add__(immutable_list_2)
    immutable_list_5 = immutable_list_3.append(var_3)
    immutable_list_6 = immutable_list_0.__add__(immutable_list_3)
    immutable_list_4.reduce(var_0, immutable_list_0)


def test_case_19():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList(object_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    list_0 = []
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_0)
    immutable_list_4 = immutable_list_2.__add__(immutable_list_1)
    bool_0 = immutable_list_3.__eq__(immutable_list_4)
    immutable_list_2.find(bool_0)
