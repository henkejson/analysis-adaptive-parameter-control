# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    immutable_list_2.find(immutable_list_2)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    str_0 = '~^R\r<u}V~HV"S'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(dict_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_0.find(str_0)


def test_case_8():
    str_0 = '{PpbYzTf"4>CZ1k'
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(str_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.map(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    float_0 = -210.0
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(float_0)
    immutable_list_2 = immutable_list_1.append(float_0)
    var_0 = immutable_list_2.to_list()
    var_1 = var_0.__len__()
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = immutable_list_3.unshift(float_0)
    immutable_list_4.filter(float_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_15():
    complex_0 = 3549.08185 - 3634.86j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(list_0, complex_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.append(bool_0)
    immutable_list_0.find(bool_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(var_0)


def test_case_20():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    str_0 = "&3%2.jJ\\"
    bytes_0 = b"s\xda\xda9\xdc\xed{\x82=\xf3\x16\xf3,\xf2\x9a"
    set_0 = {bytes_0}
    immutable_list_0 = module_0.ImmutableList(set_0, is_empty=set_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_1.reduce(list_0, list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    var_1 = immutable_list_1.__len__()
    var_2 = immutable_list_1.__len__()
    immutable_list_2 = immutable_list_1.unshift(var_2)
    str_0 = immutable_list_0.__str__()
    immutable_list_2.find(var_1)
