# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    str_0 = "gvwx"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    str_0 = "gvwx"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.reduce(var_0, var_0)
    var_2 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = True
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(bool_0)


def test_case_5():
    str_0 = "gvwx"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.map(var_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    int_0 = 275
    set_0 = {int_0, int_0, int_0}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(set_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_2.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.find(var_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_2)
    var_2 = immutable_list_1.to_list()
    immutable_list_2.filter(var_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1)
    var_0 = immutable_list_0.find(none_type_0)


def test_case_12():
    str_0 = "4i?Ao%?(K"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    immutable_list_0.find(str_0)


def test_case_13():
    list_0 = []
    complex_0 = -2023 - 401.6j
    immutable_list_0 = module_0.ImmutableList(is_empty=list_0)
    var_0 = immutable_list_0.reduce(list_0, complex_0)
    immutable_list_1 = module_0.ImmutableList(list_0, list_0, var_0)
    immutable_list_1.find(list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    var_1 = immutable_list_1.to_list()
    var_2 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(var_2)
    var_3 = immutable_list_0.__len__()
    immutable_list_2.reduce(var_0, var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    str_0 = '4"?Ao%?(K'
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_17():
    str_0 = "gvwx"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.append(str_0)
    immutable_list_0.find(var_0)


def test_case_18():
    bool_0 = True
    tuple_0 = (bool_0,)
    immutable_list_0 = module_0.ImmutableList(tuple_0, bool_0)
    list_0 = [bool_0]
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_0.find(list_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    bytes_0 = b"\x8e\xc5\x1d\xdd\xc2\xd1"
    float_0 = -1062.8
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(float_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.reduce(var_0, bytes_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    var_0 = immutable_list_1.find(immutable_list_2)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_3 = immutable_list_1.append(immutable_list_1)
    immutable_list_4 = immutable_list_2.append(immutable_list_0)
    bool_1 = immutable_list_4.__eq__(immutable_list_3)
    immutable_list_5 = module_0.ImmutableList(is_empty=immutable_list_1)
    var_1 = immutable_list_1.to_list()
    var_2 = immutable_list_1.to_list()
    var_3 = immutable_list_5.to_list()
    immutable_list_6 = immutable_list_5.append(none_type_0)
    var_4 = immutable_list_1.reduce(var_1, immutable_list_3)
    var_5 = var_4.to_list()
    immutable_list_6.filter(var_2)


def test_case_22():
    str_0 = "gvwx"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.find(immutable_list_1)
