# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    bool_0 = var_0.__eq__(var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    str_0 = immutable_list_1.__str__()


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    generic_0 = module_1.Generic()
    bool_0 = False
    bytes_0 = b"\x9f"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    var_2 = immutable_list_0.find(var_1)
    var_3 = immutable_list_0.to_list()
    immutable_list_0.map(var_3)


def test_case_9():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1)
    immutable_list_1 = immutable_list_0.append(list_0)
    var_0 = immutable_list_1.__len__()
    none_type_2 = None
    immutable_list_2 = module_0.ImmutableList(tail=none_type_2)
    none_type_3 = None
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = immutable_list_3.unshift(none_type_3)
    immutable_list_5 = immutable_list_4.unshift(immutable_list_2)
    immutable_list_5.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = False
    tuple_0 = (bool_0,)
    immutable_list_0 = module_0.ImmutableList(tail=tuple_0, is_empty=bool_0)
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_0.filter(var_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__add__(immutable_list_1)
    bool_0 = var_0.__eq__(var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    tuple_0 = ()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tuple_0, none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_3 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_2.reduce(none_type_0, immutable_list_2)


def test_case_19():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList()
    list_0 = []
    int_0 = 1
    list_1 = [list_0, int_0, list_0]
    list_2 = [list_1, int_0]
    immutable_list_1 = module_0.ImmutableList(list_2)
    immutable_list_1.reduce(generic_0, immutable_list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)
