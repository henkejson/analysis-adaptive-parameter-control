# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    bool_0 = var_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(var_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bytes_0 = b"H\xe0\x8ft\x1e\x9d\x8b\xaa!\x14\xf7X\xf0\x9b\xa0[\xf0\xd1\x8d"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(bytes_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    bytes_0 = b"6\x9ciR\xf3\xe0\x88\x99`\xea\xad"
    int_0 = 1164
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.map(bytes_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = "PvGY3m}0Eh."
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_2 = module_0.ImmutableList()
    var_0 = immutable_list_2.find(immutable_list_0)
    tuple_0 = ()
    bool_0 = False
    bool_1 = True
    set_0 = {bool_1, bool_1}
    immutable_list_3 = module_0.ImmutableList(is_empty=set_0)
    immutable_list_4 = immutable_list_3.unshift(bool_0)
    immutable_list_4.map(tuple_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.find(immutable_list_1)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_0.unshift(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1.reduce(var_0, immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bytes_0 = b"H\xe0\x8ft\x1e\x9d\x8b\xaa!\x14\xf7X\xf0\x9b\xa0[\xf0\xd1\x8d"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.find(bytes_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(immutable_list_1)
    immutable_list_2.find(var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(immutable_list_1)
    immutable_list_2.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bytes_0 = b"H\xe0\x8ft\x1e\x9d\x8b\xaa!\x14\xf7X\xf0\x9b\xa0[\xf0\xd1\x8d"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(bytes_0)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_1.__str__()
    str_1 = immutable_list_1.__str__()
    none_type_0 = None
    immutable_list_2 = module_0.ImmutableList(bool_0, is_empty=immutable_list_1)
    immutable_list_3 = immutable_list_2.append(none_type_0)
    immutable_list_4 = module_0.ImmutableList(immutable_list_1)
    immutable_list_2.reduce(none_type_0, immutable_list_3)


def test_case_22():
    str_0 = "E,?v"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(str_0)
