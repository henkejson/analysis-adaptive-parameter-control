# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\xe6\x1a|#\x83\xc9\x17\x9eW\xf3"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bytes_0)


def test_case_1():
    bool_0 = False
    str_0 = "N\x0cql]Vr7<Y`R"
    immutable_list_0 = module_0.ImmutableList(is_empty=str_0)
    bool_1 = immutable_list_0.__eq__(str_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)


def test_case_3():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(generic_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    var_0 = immutable_list_0.__len__()
    var_0.to_list()


def test_case_5():
    int_0 = 457
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    int_0 = 1764
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.to_list()
    immutable_list_0.find(immutable_list_1)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.reduce(immutable_list_0, immutable_list_1)
    immutable_list_2 = var_0.unshift(immutable_list_1)
    str_0 = var_0.__str__()


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1.map(immutable_list_1)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.reduce(var_0, var_0)
    var_2 = immutable_list_1.reduce(var_1, immutable_list_0)
    var_3 = immutable_list_0.find(var_2)
    immutable_list_1.map(var_3)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bytes_0 = b")\x8d\x87\xda\xe2\xcf\x87e"
    var_0 = immutable_list_0.find(bytes_0)
    immutable_list_0.filter(none_type_0)


def test_case_13():
    bytes_0 = b"\xd8sS\x8e\xbc\xf6O\xc8\xcf\x99U0)\xe5\xee"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    tuple_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_15():
    bool_0 = False
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(bool_1)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_1.unshift(bool_0)
    var_0.reduce(var_0, bool_1)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    int_0 = 457
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.append(int_0)
    immutable_list_0.find(var_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)


def test_case_19():
    int_0 = 471
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    immutable_list_2 = immutable_list_1.append(int_0)
    immutable_list_1.find(immutable_list_2)


def test_case_20():
    bool_0 = False
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(bool_1)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(tail=var_0)


def test_case_21():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    bytes_0 = b"\xd2-\xfa\xf2n\xf4\x07=\x80\xb4M\x84\xab\xf2\xb3l\x18"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    str_0 = "o ?oNROBC\\53I"
    bool_0 = immutable_list_0.__eq__(str_0)
    immutable_list_0.reduce(var_0, bytes_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_24():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_4 = module_0.ImmutableList(immutable_list_2)
    str_1 = immutable_list_1.__str__()
    immutable_list_5 = immutable_list_4.__add__(immutable_list_2)
    immutable_list_6 = immutable_list_5.__add__(immutable_list_4)
    bool_0 = immutable_list_4.__eq__(immutable_list_6)
    immutable_list_7 = immutable_list_4.append(immutable_list_1)
    immutable_list_8 = immutable_list_1.append(bool_0)
    var_0 = immutable_list_4.__len__()
    immutable_list_2.find(var_0)
