# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)


def test_case_1():
    none_type_0 = None
    complex_0 = 1505.82 + 881.7j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0, is_empty=complex_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_0.filter(complex_0)


def test_case_2():
    str_0 = "NmQff4.N^:\n"
    set_0 = {str_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=set_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1.__add__(none_type_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_4():
    bytes_0 = b"\x1e\x019\n\xff\xabL\x82e\xa2+"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_7():
    float_0 = 736.442
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(float_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    none_type_1 = None
    var_0 = immutable_list_0.reduce(none_type_1, immutable_list_1)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_1 = immutable_list_2.__len__()
    immutable_list_2.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    complex_0 = 1505.82 + 881.7j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0, is_empty=complex_0)
    immutable_list_0.filter(complex_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(str_0, var_0)
    immutable_list_2 = immutable_list_0.unshift(var_0)
    immutable_list_3 = immutable_list_2.unshift(immutable_list_0)
    immutable_list_3.reduce(var_0, immutable_list_3)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    bytes_0 = b""
    immutable_list_0 = module_0.ImmutableList()
    bytes_1 = b"\xad\x86_m8\xaf:\n\xab\xa5\x96/\xf6\x01\xf5\xaf\x04W\xbc\x01"
    immutable_list_1 = immutable_list_0.append(bytes_1)
    var_0 = immutable_list_0.find(bytes_0)
    immutable_list_2 = immutable_list_0.append(bytes_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_3 = immutable_list_2.unshift(bool_0)
    immutable_list_3.find(bool_0)


def test_case_19():
    int_0 = -815
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_2.find(var_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(str_0)
    tuple_0 = ()
    none_type_0 = None
    immutable_list_2 = module_0.ImmutableList(tuple_0, is_empty=none_type_0)
    immutable_list_2.reduce(none_type_0, tuple_0)
