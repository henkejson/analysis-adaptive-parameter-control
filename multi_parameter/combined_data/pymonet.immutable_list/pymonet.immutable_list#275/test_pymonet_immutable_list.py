# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    str_0 = immutable_list_1.__str__()
    str_1 = immutable_list_1.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_1)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Last[B]\n        :returns: new Last with last value\n        :rtype: Last[A]\n        "
    immutable_list_0 = module_0.ImmutableList(bool_1, is_empty=str_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_1)
    immutable_list_1.__add__(dict_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.__len__()


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    str_0 = immutable_list_1.__str__()


def test_case_6():
    str_0 = "V~\\f[Yjc$Ws`HT1"
    list_0 = [str_0, str_0, str_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(list_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.map(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.filter(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_1)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    str_0 = ".!C\n#TRkI"
    tuple_0 = (str_0,)
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(generic_0)
    immutable_list_1.reduce(tuple_0, tuple_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_16():
    str_0 = "T&L-aEaeJ1wn3`&\x0c\niq"
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(str_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    immutable_list_3 = immutable_list_2.unshift(immutable_list_2)
    var_1 = immutable_list_2.to_list()
    bool_1 = False
    immutable_list_4 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1.reduce(immutable_list_4, str_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_1.find(immutable_list_2)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_19():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_2 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    var_3 = immutable_list_1.__len__()
    bool_0 = var_2.__eq__(immutable_list_0)
    var_4 = immutable_list_1.reduce(var_2, var_2)
    var_5 = immutable_list_1.reduce(none_type_0, none_type_0)
    var_6 = immutable_list_0.__len__()
    var_1.__len__()


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_1 = immutable_list_1.__len__()
    immutable_list_1.filter(var_0)
