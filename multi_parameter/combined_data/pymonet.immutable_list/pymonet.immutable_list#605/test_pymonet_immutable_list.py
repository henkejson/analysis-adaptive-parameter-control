# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bytes_0 = b"G\x04\x97\xbfG\xfb}\x85\x96"
    bool_1 = immutable_list_0.__eq__(bytes_0)
    var_0 = immutable_list_0.to_list()


def test_case_1():
    none_type_0 = None
    tuple_0 = (none_type_0,)
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(tuple_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__len__()


def test_case_4():
    bytes_0 = b"<\xdf\x9e\xde"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    var_0.to_list()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.to_list()


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_2.find(immutable_list_0)
    var_1 = immutable_list_1.find(var_0)
    str_1 = immutable_list_0.__str__()


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_8():
    str_0 = "\nJzOWT(<poV1"
    complex_0 = -3197.831273 - 846.7j
    dict_0 = {complex_0: complex_0}
    complex_1 = -4164.48 - 2080.65j
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(complex_1)
    immutable_list_2 = immutable_list_1.unshift(dict_0)
    immutable_list_2.map(str_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    var_1 = immutable_list_1.find(none_type_0)


def test_case_11():
    bytes_0 = b"\xca \xa8\x02Zg\x90\xb9"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    bytes_0 = b"\xbfv\x8dc\xae,\xf9\x18n\x87\x98\x1f\x11"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_0.reduce(immutable_list_0, none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_2.find(immutable_list_0)
    var_1 = immutable_list_1.find(var_0)
    str_0 = immutable_list_0.__str__()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"G\x04\x97\xbfG}\x85\x96"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.find(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"G\x04\x97\xbfG\xfb}\x85\x96"
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(bytes_0)
    immutable_list_2.find(none_type_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = var_0.unshift(var_0)
    immutable_list_1.reduce(var_0, var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_1.filter(none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(is_empty=immutable_list_0)
    none_type_0 = None
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    var_0 = immutable_list_1.reduce(immutable_list_1, none_type_0)
    immutable_list_2.find(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    bytes_0 = b"G\x04\x97\xbfG\xfb}\x85\x96"
    none_type_0 = None
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    immutable_list_2.find(none_type_0)
