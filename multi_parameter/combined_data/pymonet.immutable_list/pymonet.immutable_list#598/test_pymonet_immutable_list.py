# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    str_0 = immutable_list_0.find(bool_0)
    bool_1 = True
    bool_2 = immutable_list_0.__eq__(bool_1)
    var_1 = immutable_list_0.reduce(immutable_list_0, bool_0)
    var_0.filter(str_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()


def test_case_3():
    bytes_0 = b"\xc1\x98\xbb\x1e\x08y"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    str_0 = "F|SFln&*"
    bool_1 = True
    immutable_list_2 = module_0.ImmutableList(tail=bool_1)
    immutable_list_2.__add__(str_0)


def test_case_4():
    none_type_0 = None
    int_0 = -963
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: int_0,
    }
    immutable_list_0 = module_0.ImmutableList(dict_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(var_0, var_0, var_0)
    immutable_list_1.find(none_type_0)


def test_case_5():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_1.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.filter(immutable_list_1)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)
    str_0 = var_0.__str__()
    var_1 = immutable_list_0.find(var_0)
    bool_0 = True
    bool_1 = immutable_list_0.__eq__(bool_0)
    bool_2 = immutable_list_0.__eq__(str_0)
    var_2 = immutable_list_0.to_list()
    var_3 = immutable_list_0.reduce(str_0, var_2)
    var_0.map(var_3)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(none_type_0)


def test_case_16():
    bytes_0 = b"\xa7F\xdeu\xbb\xe6\xf8\xdb\xd7+\x1d\xf3\xd5$\t^\xb3\xa2"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    list_0 = immutable_list_1.__len__()
    immutable_list_1.find(bytes_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(str_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=str_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    var_0.filter(immutable_list_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_2)
    immutable_list_2.find(immutable_list_3)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.reduce(immutable_list_0, bool_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    var_1 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(var_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    var_2 = immutable_list_0.to_list()
    immutable_list_3 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(var_2)
    bool_1 = immutable_list_0.__eq__(immutable_list_2)
    bool_2 = immutable_list_3.__eq__(immutable_list_2)
    var_3 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    immutable_list_1.reduce(var_2, var_2)
