# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    bool_0 = immutable_list_1.__eq__(immutable_list_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)


def test_case_3():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    bool_2 = True
    dict_0 = {tuple_0: bool_2, tuple_0: bool_2, tuple_0: bool_1, bool_1: bool_2}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_5():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    str_0 = "c\rl8>v8*\nm9l+F9 E"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.map(str_0)


def test_case_9():
    bytes_0 = b"\x91)h\xf8\xd7\x97n\xd30\xce"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    none_type_0 = None
    var_0 = immutable_list_0.__len__()
    int_0 = -141
    tuple_0 = (var_0, int_0, int_0, var_0)
    dict_0 = {tuple_0: tuple_0}
    list_0 = [none_type_0, dict_0, tuple_0, dict_0]
    var_1 = immutable_list_0.reduce(none_type_0, list_0)
    immutable_list_0.map(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    str_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_14():
    tuple_0 = ()
    float_0 = 2899.871717
    immutable_list_0 = module_0.ImmutableList(float_0, is_empty=float_0)
    immutable_list_0.reduce(tuple_0, tuple_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(bool_0, none_type_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    bool_0 = False
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: bool_0, tuple_0: bool_0, tuple_0: bool_0, bool_0: bool_0}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    none_type_0 = None
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(tail=list_0, is_empty=list_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_1.__len__()
    bytes_0 = b'\x00\x0c\xa18\x0c\x042\xf2x"B_r\xd1\xeeD\xcc'
    immutable_list_2 = module_0.ImmutableList(bytes_0)
    var_1 = immutable_list_2.__len__()
    immutable_list_3 = module_0.ImmutableList()
    var_2 = immutable_list_1.__len__()
    var_2.reduce(var_1, bytes_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_3 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_3.reduce(var_0, immutable_list_1)


def test_case_22():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1.filter(var_0)


def test_case_23():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2.find(immutable_list_2)
