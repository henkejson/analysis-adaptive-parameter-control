# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_3():
    int_0 = 2315
    str_0 = "'HdG->\n~R$"
    str_1 = "oOdCAtQ"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=str_1, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    float_0 = -1652.2
    list_0 = [float_0, float_0, float_0, float_0]
    immutable_list_0 = module_0.ImmutableList(list_0, float_0)
    immutable_list_0.__len__()


def test_case_6():
    float_0 = 820.83
    immutable_list_0 = module_0.ImmutableList(is_empty=float_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    str_0 = "Nl.ACXqQf^PQc#'"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(str_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = "fFC\x0bjbN>Mi6"
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.append(str_0)
    var_0 = immutable_list_2.reduce(immutable_list_0, str_0)
    immutable_list_3 = immutable_list_1.append(str_0)
    immutable_list_4 = immutable_list_1.unshift(immutable_list_3)
    immutable_list_5 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_6 = immutable_list_3.__add__(immutable_list_0)
    var_1 = immutable_list_0.to_list()
    immutable_list_2.map(immutable_list_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_2.find(immutable_list_2)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_2)


def test_case_21():
    none_type_0 = None
    str_0 = "Min[value={}]"
    none_type_1 = None
    none_type_2 = None
    bytes_0 = b"f\xf8p\xcfW_\xb9IC\xc3e\xe0\xa3\xe6"
    set_0 = {bytes_0, bytes_0, bytes_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.append(none_type_2)
    immutable_list_2 = immutable_list_1.unshift(none_type_1)
    var_0 = immutable_list_2.__len__()
    immutable_list_3 = immutable_list_1.append(str_0)
    immutable_list_0.reduce(none_type_0, immutable_list_2)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = var_0.__add__(var_0)
    var_1 = var_0.to_list()
    immutable_list_3 = immutable_list_2.__add__(immutable_list_2)
    var_2 = var_0.__len__()
    bool_2 = var_0.__eq__(immutable_list_2)
    set_0 = {bool_0}
    immutable_list_4 = var_0.append(set_0)
    immutable_list_1.reduce(var_1, bool_1)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_1)
