# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    bytes_0 = b"UE\xb6\x16\x9b\xe1\xb9\xee\xf1"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_2.map(bytes_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.find(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(immutable_list_2)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(var_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    immutable_list_3 = module_0.ImmutableList()
    bool_1 = immutable_list_3.__eq__(immutable_list_2)


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_2.filter(var_0)


def test_case_17():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    bytes_0 = b"\xc5\x03"
    str_0 = "Kk@\x0bf0A&M3#a03g"
    list_0 = [str_0, str_0, str_0]
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(list_0)
    var_0 = immutable_list_1.find(list_0)
    immutable_list_3 = module_0.ImmutableList(list_0)
    str_1 = immutable_list_0.__str__()
    bool_0 = immutable_list_2.__eq__(bytes_0)
    immutable_list_2.map(var_0)


def test_case_18():
    object_0 = module_1.object()
    bool_0 = False
    bytes_0 = b"\x19"
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bytes_0)
    bool_1 = False
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_0.reduce(bool_0, bool_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_21():
    none_type_0 = None
    tuple_0 = ()
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_1 = immutable_list_0.append(tuple_0)
    immutable_list_1.reduce(none_type_0, none_type_0)
