# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"\xfc\x1c?\x84d\xe3\x0c\xa1\xa5\xda+\xd5\x03\xe5"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    bytes_0 = b"\xdb\xfcv"
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.__len__()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_1.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    str_0 = ">ib/\x0bq,Mf/O~V_F{{\x0cR"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(str_0)


def test_case_6():
    bytes_0 = b"\x08\x9f\xb2\xf7l6T\xe9\xdet\xb1L\xaf"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(immutable_list_0)


def test_case_7():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    immutable_list_0 = module_0.ImmutableList(tail=object_0)
    immutable_list_0.to_list()


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    immutable_list_0.map(var_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    var_0 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    bool_1 = var_0.__eq__(immutable_list_0)
    immutable_list_1 = var_0.append(bool_1)
    var_1 = var_0.__len__()
    var_2 = immutable_list_1.find(var_0)
    str_0 = var_0.__str__()
    immutable_list_1.map(var_2)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_2.filter(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    var_1 = module_2.Generic()
    immutable_list_0.filter(var_1)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    bytes_0 = b"\xdb\xfcv\xc9\x19"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, bytes_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    bool_0 = False
    bytes_0 = b"&>\xd9w\xfa\x8c\xea\xe6\x89y;"
    none_type_0 = None
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_1)
    bool_2 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.reduce(bool_0, bool_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bytes_0 = b"\x08\x9f\xb2\xf7l6T\xe9\xdet\xb1L\xaf"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()
    var_0.to_list()


def test_case_19():
    str_0 = ">ib/\x0bq,Mf/O~V_F{{\x0cR"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_0.find(str_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_21():
    bytes_0 = b"\xfc\x1c?\x84d\xe3\x0c\xa1\xa5\xda+\xd5\x03\xe5"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_22():
    bytes_0 = b"\x08\x9f\xb2\xf7l6T\xe9\xdet\xb1L\xaf"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_23():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    none_type_0 = None
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_24():
    bytes_0 = b"\xdb\xfcv"
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_25():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__add__(immutable_list_1)
    bool_2 = immutable_list_1.__eq__(immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_0.filter(var_1)
