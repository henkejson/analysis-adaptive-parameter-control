# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_1():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(dict_0)
    immutable_list_2 = module_0.ImmutableList(dict_0)
    immutable_list_2.__add__(dict_0)


def test_case_2():
    list_0 = []
    list_1 = []
    immutable_list_0 = module_0.ImmutableList(tail=list_1)
    var_0 = immutable_list_0.__len__()
    var_0.filter(list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_5():
    str_0 = "y(y<jI,"
    immutable_list_0 = module_0.ImmutableList(tail=str_0, is_empty=str_0)
    immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_1)
    immutable_list_3 = immutable_list_0.append(immutable_list_2)
    var_0 = immutable_list_2.to_list()
    var_1 = var_0.__len__()
    var_2 = immutable_list_2.reduce(var_1, var_1)
    complex_0 = 5319.180482 - 2084.73j
    var_3 = immutable_list_0.__len__()
    var_4 = immutable_list_0.reduce(complex_0, immutable_list_0)
    immutable_list_1.map(var_4)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.filter(bool_0)


def test_case_10():
    bytes_0 = b"\x9f"
    tuple_0 = (bytes_0, bytes_0)
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(tuple_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    immutable_list_1.find(none_type_0)


def test_case_12():
    str_0 = "(Br)>w}3Xl[7x<"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.reduce(str_0, immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_15():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_17():
    str_0 = "RJNf{mK=vM:ll@"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.reduce(immutable_list_1, immutable_list_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_1.find(immutable_list_0)
