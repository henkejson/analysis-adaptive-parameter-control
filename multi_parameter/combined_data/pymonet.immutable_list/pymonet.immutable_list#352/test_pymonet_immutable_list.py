# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_0.__eq__(var_0)
    var_1 = var_0.find(var_0)
    immutable_list_0.filter(var_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_2 = immutable_list_0.append(bool_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_3():
    bool_0 = True
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_1 = immutable_list_1.__len__()
    bool_2 = immutable_list_0.__eq__(bool_1)
    var_2 = immutable_list_0.__len__()
    var_2.unshift(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_1.to_list()
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_0.filter(immutable_list_1)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    bytes_0 = b"\xfah6\x8e\x7f8:\xa2\xab*p=\x1f'{t\xb2"
    var_0 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    var_1 = immutable_list_1.reduce(var_0, none_type_0)
    bool_0 = var_1.__eq__(none_type_0)
    var_2 = immutable_list_2.find(none_type_0)
    var_0.map(var_1)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    immutable_list_3 = immutable_list_1.__add__(immutable_list_0)
    bytes_0 = b"\xfah6\x8e\x7f8:\xa2\xab*p=\x1f'{t\xb2"
    var_0 = immutable_list_0.reduce(bytes_0, immutable_list_0)
    immutable_list_4 = immutable_list_1.reduce(var_0, var_0)
    var_1 = immutable_list_4.find(immutable_list_1)
    immutable_list_5 = immutable_list_4.unshift(var_0)
    immutable_list_3.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_2.filter(none_type_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_12():
    bytes_0 = b"\xfah6\x8e\x7f8:\xa2\x9d*\xcd=\x1f'{t\xb2"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_0.find(none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.reduce(immutable_list_1, var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    bytes_0 = b"\xfah6\x8e\x7f8:\xa2\x9d*\xcd=\x1f'{t\xb2"
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_1.find(none_type_0)


def test_case_17():
    int_0 = -340
    int_1 = 611
    immutable_list_0 = module_0.ImmutableList(int_1)
    var_0 = immutable_list_0.__len__()
    var_0.unshift(int_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bytes_0 = b"\xfah6\x8e\x7f8:\xa2\xabp=\x1f'{t\xb2"
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    immutable_list_2.find(immutable_list_2)


def test_case_19():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.__add__(var_0)


def test_case_21():
    bool_0 = True
    set_0 = {bool_0}
    dict_0 = {bool_0: bool_0, bool_0: set_0}
    float_0 = 994.69197
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(float_0, is_empty=none_type_0)
    immutable_list_0.reduce(dict_0, set_0)
