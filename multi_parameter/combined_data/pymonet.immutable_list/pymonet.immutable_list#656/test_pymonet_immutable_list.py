# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_0.filter(none_type_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_1 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_0.find(bool_1)
    var_1 = immutable_list_0.find(var_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_5():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0, is_empty=dict_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    float_0 = -4063.0068
    tuple_0 = (bool_0, bool_0, immutable_list_0, float_0)
    var_0 = immutable_list_0.find(tuple_0)
    var_1 = immutable_list_0.reduce(var_0, float_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.map(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_0.find(str_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_14():
    bool_0 = True
    tuple_0 = (bool_0,)
    none_type_0 = None
    str_0 = "\n        Two Validations are equals when values and errors lists are equal.\n        "
    list_0 = [str_0, str_0]
    int_0 = 2538
    list_1 = [list_0, int_0, int_0, int_0]
    tuple_1 = (list_1, int_0)
    immutable_list_0 = module_0.ImmutableList(tuple_1, is_empty=str_0)
    immutable_list_0.reduce(tuple_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_17():
    none_type_0 = None
    bytes_0 = b"(\xa1a"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(var_1)


def test_case_20():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0, set_0)
    immutable_list_0.reduce(set_0, immutable_list_0)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_22():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_23():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.find(immutable_list_0)


def test_case_24():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)
