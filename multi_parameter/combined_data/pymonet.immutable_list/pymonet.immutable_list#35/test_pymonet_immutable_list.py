# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    complex_0 = -3347.718 - 1898.24496j
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(complex_0)
    var_0 = immutable_list_1.__len__()


def test_case_3():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.reduce(bool_0, bool_0)
    str_0 = var_0.__str__()
    float_0 = -2286.6891
    none_type_1 = None
    bool_1 = False
    immutable_list_1 = module_0.ImmutableList(none_type_1, is_empty=bool_1)
    bool_2 = immutable_list_1.__eq__(float_0)
    immutable_list_1.__add__(float_0)


def test_case_4():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(bool_0)


def test_case_5():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_0.map(immutable_list_0)


def test_case_7():
    none_type_0 = None
    float_0 = -1042.0
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1)
    immutable_list_1 = immutable_list_0.append(float_0)
    immutable_list_1.map(none_type_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    complex_0 = -3347.718 - 1898.24496j
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(complex_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, complex_0)
    immutable_list_2 = immutable_list_0.unshift(complex_0)
    var_1 = immutable_list_2.__len__()
    immutable_list_2.filter(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(bool_0)


def test_case_12():
    tuple_0 = ()
    float_0 = 2408.32196
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(float_0, none_type_0)
    immutable_list_0.reduce(tuple_0, tuple_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    bytes_0 = b"\xbd\xfc\xf4cK\xfe\xb9\x0c"
    set_0 = {bytes_0}
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(set_0)


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_1.find(bool_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_1.find(var_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.filter(var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    none_type_1 = None
    immutable_list_1 = module_0.ImmutableList(none_type_1, none_type_1)
    str_0 = immutable_list_1.__str__()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    bool_2 = immutable_list_1.__eq__(none_type_1)
    var_0 = immutable_list_1.reduce(str_0, immutable_list_1)
    var_1 = immutable_list_2.reduce(var_0, none_type_1)
    immutable_list_3 = immutable_list_0.unshift(var_0)
    bool_3 = immutable_list_2.__eq__(bool_1)
    immutable_list_3.reduce(var_1, str_0)
