# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.to_list()
    bool_0 = immutable_list_0.__eq__(var_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(is_empty=int_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = module_0.ImmutableList()
    var_1 = immutable_list_0.to_list()
    bool_1 = var_1.__eq__(var_1)
    immutable_list_1.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_8():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(object_0)
    var_0 = immutable_list_1.__len__()
    str_0 = var_0.__str__()
    immutable_list_2 = module_0.ImmutableList()
    var_1 = immutable_list_2.to_list()
    var_2 = immutable_list_1.to_list()
    immutable_list_1.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bytes_0 = b"G\xcdF\xbd"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_0.filter(bytes_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)
    var_1 = immutable_list_0.reduce(var_0, var_0)
    var_0.to_list()


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    var_1 = immutable_list_1.to_list()
    immutable_list_1.find(var_1)


def test_case_13():
    complex_0 = 1499 + 808j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    int_0 = 2504
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_1.reduce(dict_0, complex_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    bytes_0 = b"\xb0:C\n1=\xed\xd1\xf5H98$"
    immutable_list_1 = immutable_list_0.unshift(bytes_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(bool_0)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_2.__len__()
    immutable_list_3 = immutable_list_2.append(bool_0)
    immutable_list_3.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"\t&5\xb6n\xf8\x80\xc4\xb9\xd4)X\xf0\x04"
    tuple_0 = (immutable_list_0, bytes_0)
    immutable_list_1 = module_0.ImmutableList(tuple_0)
    immutable_list_1.reduce(immutable_list_0, bytes_0)
