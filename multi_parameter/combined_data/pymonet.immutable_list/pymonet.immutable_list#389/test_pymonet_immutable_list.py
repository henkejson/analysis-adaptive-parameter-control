# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    str_0 = "O*e iH"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(str_0)


def test_case_1():
    object_0 = module_1.object()
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(object_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    set_0 = {int_0, int_0}
    immutable_list_1 = module_0.ImmutableList(set_0)
    immutable_list_1.__add__(none_type_1)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.__len__()
    var_0.append(bool_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_6():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(bool_0)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    var_1 = immutable_list_0.find(var_0)
    none_type_1 = None
    immutable_list_1 = module_0.ImmutableList(tail=none_type_1)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = module_0.ImmutableList()
    none_type_2 = None
    bool_0 = True
    immutable_list_4 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_4.map(none_type_2)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    dict_0 = {}
    immutable_list_1 = module_0.ImmutableList(tail=dict_0)
    immutable_list_1.filter(dict_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    str_0 = "O*e iH"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(str_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.reduce(var_0, bool_0)
    var_0.to_list()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    str_0 = immutable_list_2.__str__()


def test_case_15():
    none_type_0 = None
    int_0 = 1
    set_0 = {int_0, int_0, none_type_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    var_0 = immutable_list_0.unshift(set_0)
    var_0.find(none_type_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_1.find(bool_0)


def test_case_17():
    str_0 = "Fj\n-EF%j<'"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(str_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.map(var_0)


def test_case_19():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, tuple_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = module_0.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_0.filter(var_0)


def test_case_21():
    tuple_0 = ()
    bytes_0 = b"^\x11\xba\x11hi\x9e\x98\x98wLP"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(tuple_0)
    var_0 = immutable_list_1.__len__()
    dict_0 = {bytes_0: bytes_0}
    immutable_list_2 = module_0.ImmutableList(dict_0)
    immutable_list_3 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_2.find(bytes_0)


def test_case_22():
    str_0 = "7 c/"
    str_1 = "(}Y*YO5\x0c\noVVgmA\x0bpB"
    immutable_list_0 = module_0.ImmutableList(is_empty=str_1)
    var_0 = immutable_list_0.to_list()
    tuple_0 = (var_0, var_0)
    var_1 = immutable_list_0.find(tuple_0)
    immutable_list_1 = var_0.__add__(var_0)
    immutable_list_2 = immutable_list_0.unshift(str_0)
    var_2 = immutable_list_0.reduce(var_0, var_0)
    var_3 = immutable_list_0.find(var_0)
    immutable_list_3 = var_0.append(str_0)
    immutable_list_4 = immutable_list_0.unshift(str_1)
    var_4 = immutable_list_0.find(str_0)
    immutable_list_2.reduce(var_2, var_3)


def test_case_23():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(bool_0)


def test_case_24():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = module_0.ImmutableList(var_0, var_1)
    immutable_list_1.reduce(var_1, var_1)
