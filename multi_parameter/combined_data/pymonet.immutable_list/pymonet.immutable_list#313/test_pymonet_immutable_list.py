# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    str_1 = immutable_list_0.__str__()
    str_2 = immutable_list_1.__str__()


def test_case_1():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    bool_0 = immutable_list_1.__eq__(int_0)
    immutable_list_1.find(int_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    str_0 = "I-LrW"
    tuple_1 = (tuple_0, str_0, tuple_0, str_0)
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(bool_1)
    immutable_list_1 = immutable_list_0.append(tuple_1)
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_0.append(none_type_0)


def test_case_5():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    str_0 = immutable_list_0.__len__()
    immutable_list_0.find(int_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    str_0 = immutable_list_1.to_list()
    immutable_list_1.find(int_0)


def test_case_8():
    bytes_0 = b"\xe62xA\x93\xda\x17\x12\xbf2#5\xb5\x06FD"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    var_0 = immutable_list_0.__len__()
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1.map(var_0)


def test_case_9():
    int_0 = 3120
    bytes_0 = b"R\xe1\x88!3\xf0"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.map(int_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    bool_0 = True
    var_0 = immutable_list_1.reduce(immutable_list_0, bool_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.find(none_type_0)


def test_case_13():
    bytes_0 = b"\xfb|\xfe\xb6\xa6`yA\xce4\x1f\xb2\x98"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.reduce(immutable_list_2, immutable_list_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(int_0)


def test_case_17():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(int_0)


def test_case_18():
    int_0 = -276
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(int_0)


def test_case_19():
    bytes_0 = b"\x9f~\xda\xac\xa1"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.reduce(var_0, var_0)


def test_case_20():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_0.find(int_0)


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = module_0.ImmutableList(immutable_list_1)
    bool_0 = immutable_list_0.find(none_type_0)
    bool_1 = immutable_list_1.to_list()
    var_0 = immutable_list_0.__add__(immutable_list_2)
    bool_2 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_2.filter(none_type_1)


def test_case_22():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(int_0)


def test_case_23():
    int_0 = -302
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(int_0)
