# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    str_0 = "dZ:^ ?pp-9dq"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, str_0)
    var_1 = immutable_list_0.find(var_0)
    bool_0 = immutable_list_0.__eq__(var_1)
    var_0.unshift(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.reduce(immutable_list_0, immutable_list_1)
    immutable_list_0.map(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    int_0 = -303
    immutable_list_0.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_3 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_2.to_list()
    immutable_list_3.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, none_type_1)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.map(bool_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bytes_0 = b"\xd9.\xa0\x80\x96\xbf@E\x03\xe2\x98\xf0a_\xbe"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_0.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()


def test_case_12():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(list_0)


def test_case_13():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    none_type_0 = None
    immutable_list_0.find(none_type_0)


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = immutable_list_0.append(bool_1)
    immutable_list_2 = module_0.ImmutableList(immutable_list_0, immutable_list_1)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_2.reduce(immutable_list_1, immutable_list_0)


def test_case_15():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    bool_0 = immutable_list_0.__eq__(list_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_1 = False
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    bool_2 = immutable_list_2.__eq__(bool_1)
    immutable_list_0.find(list_0)


def test_case_16():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_0.find(list_0)


def test_case_17():
    bytes_0 = b"\xd9.\xa0\x80\x96\xbf@E\x03\xe2\x98\xf0a_\xbe"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList()
    var_0 = immutable_list_3.find(none_type_0)
    immutable_list_3.filter(var_0)


def test_case_19():
    str_0 = "c*\x0bK&CQ"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    immutable_list_0.find(str_0)


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = immutable_list_0.find(bool_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_0, immutable_list_1)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_2.reduce(immutable_list_1, immutable_list_0)


def test_case_21():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_0.__len__()
    none_type_0 = None
    immutable_list_0.find(none_type_0)


def test_case_22():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.__len__()
    immutable_list_2 = immutable_list_0.append(none_type_0)
    var_1 = immutable_list_2.find(var_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_1)
    bool_1 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_4 = immutable_list_2.append(bool_0)
    immutable_list_5 = module_0.ImmutableList()
    immutable_list_3.filter(immutable_list_4)
