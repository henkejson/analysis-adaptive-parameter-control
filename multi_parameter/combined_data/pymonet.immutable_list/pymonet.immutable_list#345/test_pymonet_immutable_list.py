# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(bool_0)
    var_0.find(var_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    int_0 = 172
    immutable_list_3 = immutable_list_0.unshift(int_0)
    immutable_list_0.__add__(int_0)


def test_case_4():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    list_0 = [str_0, str_0, str_0, str_0]
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = var_0.__add__(list_0)


def test_case_5():
    float_0 = 2024.65
    immutable_list_0 = module_0.ImmutableList(float_0)
    var_0 = immutable_list_0.__len__()


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_1)
    immutable_list_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_12():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    none_type_0 = None
    bytes_0 = b"_\xbf\xe3\x1ey\x83\xa7\x05N!\x9dU\xd0\xf0#Yg\xf9"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(none_type_0)


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_15():
    none_type_0 = None
    bytes_0 = b"_\xbf\xe3\x1ey\x83\xa7\x05N!\x9dU\xd0\xf0#Yg\xf9"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\xa4Q\xc77UC\x84\xb8\xc0"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.find(none_type_0)


def test_case_19():
    int_0 = 1
    set_0 = {int_0}
    immutable_list_0 = module_0.ImmutableList(tail=set_0, is_empty=set_0)
    immutable_list_1 = module_0.ImmutableList(tail=int_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_1.append(set_0)


def test_case_20():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_21():
    bytes_0 = b"\xb5&\xdc^\xab\xb8X\x15,eI\x03\x85\xdc"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_2.find(bytes_0)


def test_case_22():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = module_0.ImmutableList()
    immutable_list_4 = module_0.ImmutableList(immutable_list_2, none_type_0)
    immutable_list_5 = immutable_list_2.unshift(immutable_list_0)
    var_0 = immutable_list_4.__len__()
    immutable_list_5.reduce(var_0, immutable_list_3)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_2.find(bool_0)
