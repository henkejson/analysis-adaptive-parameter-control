# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)


def test_case_2():
    float_0 = -507.604
    immutable_list_0 = module_0.ImmutableList(float_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList()
    var_0 = immutable_list_3.to_list()
    bool_0 = immutable_list_3.__eq__(immutable_list_3)
    immutable_list_2.__add__(float_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_4():
    bytes_0 = b"\xf5\x03\xd2\xf9e\x1bS`\xb0\x9a]T}#\xf8"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"t\x88\xa0L\t\x9f\x11\x9a\xe5\xa9F|\x11\xcfw\x9c\xd4#"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.find(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.reduce(var_1, var_0)
    immutable_list_2.filter(var_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = "\n        Two Validations are equals when values and errors lists are equal.\n        "
    immutable_list_1 = module_0.ImmutableList(is_empty=str_0)
    var_0 = immutable_list_1.reduce(immutable_list_0, immutable_list_0)


def test_case_14():
    bytes_0 = b"\xf5\x03\xd2\xf9e\x1bS`\xae\x9acT}\xe7\xf8"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.reduce(bytes_0, bytes_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    bool_0 = immutable_list_2.__eq__(immutable_list_2)
    var_0 = immutable_list_0.find(immutable_list_2)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_1)
    immutable_list_4 = immutable_list_3.__add__(immutable_list_3)
    immutable_list_2.reduce(bool_0, bool_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_0.filter(var_0)


def test_case_22():
    bytes_0 = b"\xf5\x03\xd2\xf9e\x1bS`\xae\x9acT}\xe7\xf8"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(immutable_list_0)
