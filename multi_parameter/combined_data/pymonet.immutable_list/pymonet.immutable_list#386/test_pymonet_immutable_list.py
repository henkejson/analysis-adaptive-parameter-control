# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\xc7Y\x96\xa5\x7f;\xacV\xf3\xf4\xf2/\xd6"
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(bytes_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    var_0.filter(immutable_list_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_4():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_0.__add__(bool_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_3 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_3.find(immutable_list_1)


def test_case_6():
    int_0 = 509
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0, int_0)
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(tuple_0)


def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_0.map(dict_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.find(immutable_list_2)
    var_1 = immutable_list_0.reduce(none_type_0, var_0)
    immutable_list_2.find(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    tuple_0 = (var_0,)
    var_1 = immutable_list_0.reduce(var_0, tuple_0)
    var_1.find(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_14():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0, bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_3 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_3.__len__()
    immutable_list_3.find(var_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_2.__len__()
    immutable_list_2.find(var_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()
    generic_0 = module_1.Generic()
    str_1 = "Vi,0Nhja3\x0cD"
    immutable_list_1.reduce(var_0, str_1)


def test_case_18():
    list_0 = []
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(list_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    str_0 = immutable_list_0.__str__()
    generic_0 = module_1.Generic()
    immutable_list_3 = module_0.ImmutableList(generic_0)
    immutable_list_3.reduce(var_0, immutable_list_1)


def test_case_20():
    float_0 = -545.543
    immutable_list_0 = module_0.ImmutableList(float_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    none_type_0 = None
    immutable_list_0.find(none_type_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bytes_0 = b"\xc7Y\x96\xa5\x7f;\xacV\xf3\xf4\xf2/\xd6"
    immutable_list_1 = module_0.ImmutableList(is_empty=bytes_0)
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    bool_0 = immutable_list_2.__eq__(none_type_0)
    none_type_1 = None
    immutable_list_3 = immutable_list_2.append(none_type_1)
    var_0 = immutable_list_1.__len__()
    bool_1 = immutable_list_3.__eq__(immutable_list_1)
    var_1 = immutable_list_1.__len__()
    var_0.map(immutable_list_3)


def test_case_22():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    str_0 = immutable_list_0.__str__()
    generic_0 = module_1.Generic()
    var_1 = immutable_list_1.reduce(var_0, var_0)
    none_type_1 = None
    var_2 = immutable_list_1.find(none_type_1)
    immutable_list_3 = var_0.append(var_1)
    immutable_list_4 = module_0.ImmutableList(tail=var_1)
    bool_1 = immutable_list_4.__eq__(immutable_list_1)
    immutable_list_4.append(str_0)
