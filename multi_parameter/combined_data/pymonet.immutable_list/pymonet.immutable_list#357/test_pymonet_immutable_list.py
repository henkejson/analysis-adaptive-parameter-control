# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    str_0 = "Ii,{qT\rb\x0bm{"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(str_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_2 = immutable_list_1.__eq__(bool_1)
    immutable_list_1.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(str_0)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\x81"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_2 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    none_type_0 = None
    immutable_list_0.map(none_type_0)


def test_case_9():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(tail=int_0, is_empty=int_0)
    immutable_list_0.map(int_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_11():
    str_0 = "<wiU,q-zPo:"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_1.filter(str_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_14():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    none_type_1 = None
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_1)
    immutable_list_1.filter(none_type_0)


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.reduce(immutable_list_1, immutable_list_2)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_3 = immutable_list_0.unshift(bool_0)
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.find(var_1)
    immutable_list_3.reduce(var_2, var_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    complex_0 = 3966.6 - 1505.48j
    immutable_list_1 = module_0.ImmutableList(tail=complex_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    var_0 = immutable_list_2.__len__()


def test_case_18():
    str_0 = "Ii,{qT\rb\x0bm{"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    str_0 = "Ii,{qT\rb\x0bm{"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(str_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.reduce(immutable_list_1, immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_2.__eq__(var_0)
    str_1 = "-nc?{\nQts'r\x0b=ynz"
    immutable_list_3 = immutable_list_2.append(str_1)
    var_1 = immutable_list_3.reduce(var_0, var_0)
    immutable_list_4 = module_0.ImmutableList(tail=immutable_list_3)
    var_2 = immutable_list_4.to_list()
    var_3 = immutable_list_3.reduce(var_1, var_2)
    var_0.map(var_3)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    none_type_0 = None
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_22():
    int_0 = 594
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = var_0.__len__()
    immutable_list_1 = module_0.ImmutableList(int_0, none_type_0)
    immutable_list_1.reduce(var_1, immutable_list_0)
