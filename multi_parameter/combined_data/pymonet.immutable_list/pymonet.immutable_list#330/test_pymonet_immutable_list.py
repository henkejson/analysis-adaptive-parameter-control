# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = True
    immutable_list_1 = module_0.ImmutableList(bool_1)
    bool_2 = immutable_list_1.__eq__(bool_0)
    bytes_0 = b"\x13\xeatVrU\xebH"
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = var_0.__add__(bytes_0)


def test_case_2():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    dict_0 = {}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_0.__add__(dict_0)


def test_case_4():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    str_0 = "c&YU1yfSJL\x0b7/-4-Q|B9"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_1 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    str_0 = "g\x0c\x0c&$AzwZzp\x0cI$:!"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(str_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = immutable_list_1.append(str_0)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_2)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_14():
    int_0 = 195
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(int_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(int_0, none_type_0)
    immutable_list_1.reduce(none_type_0, int_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.append(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.find(var_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.reduce(bool_0, var_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.map(var_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    bool_1 = immutable_list_0.reduce(bool_0, bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.filter(var_1)


def test_case_22():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.filter(var_1)
