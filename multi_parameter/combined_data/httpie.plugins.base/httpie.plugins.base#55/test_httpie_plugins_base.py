# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    base_plugin_0 = module_0.BasePlugin()


def test_case_1():
    bool_0 = False
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(password=bool_0)


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    str_0 = ";L[\x0c1*\nx&bt%Rx.1"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    bytes_0 = b"\x1b["
    converter_plugin_0.convert(bytes_0)


def test_case_4():
    module_0.FormatterPlugin()


def test_case_5():
    str_0 = "y\x0c7-L:p}~c\x0b3F,MS_%."
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    str_1 = "format_options"
    dict_0 = {str_1: str_1, str_1: str_0, str_0: converter_plugin_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_metadata(converter_plugin_0)
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_6():
    str_0 = "y\x0c7-L:p}~c\x0b3F,MS_%."
    auth_plugin_0 = module_0.AuthPlugin()
    none_type_0 = None
    converter_plugin_0 = module_0.ConverterPlugin(none_type_0)
    str_1 = "format_options"
    dict_0 = {str_1: str_1, str_1: str_0, str_0: converter_plugin_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = "\x0co"
    auth_plugin_1 = module_0.AuthPlugin()
    str_3 = formatter_plugin_0.format_body(str_2, str_0)
    str_4 = formatter_plugin_0.format_metadata(converter_plugin_0)
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_7():
    str_0 = "y\x0c7-L:p}~c\x0b3F,MS_%."
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    str_1 = "format_options"
    dict_0 = {str_1: str_1, str_1: str_0, str_0: converter_plugin_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    str_2 = formatter_plugin_0.format_metadata(converter_plugin_0)
    str_3 = formatter_plugin_0.format_headers(str_0)
    transport_plugin_0 = module_0.TransportPlugin()
    var_0 = module_0.ConverterPlugin(formatter_plugin_0)
    transport_plugin_0.get_adapter()
