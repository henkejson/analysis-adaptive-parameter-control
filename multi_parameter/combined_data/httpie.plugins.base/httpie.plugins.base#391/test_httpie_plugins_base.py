# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import httpie.plugins.base as module_0


def test_case_0():
    module_0.FormatterPlugin()


def test_case_1():
    int_0 = 100
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth(password=int_0)


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    base_plugin_0 = module_0.BasePlugin()
    str_0 = "\n    String specifying what the output should contain:\n\n        '"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    str_1 = "\n    Controls output formatting. Only relevant when formatting is enabled\n    through (explicit or implied) --pretty=all or --pretty=format.\n    The following are the default options:\n\n        {option_list}\n\n    You may use this option multiple times, as well as specify multiple\n    comma-separated options at the same time. For example, this modifies the\n    settings to disable the sorting of JSON keys, and sets the indent size to 2:\n\n        --format-options json.sort_keys:false,json.indent:2\n\n    This is something you will typically put into your config file.\n\n    "
    dict_0 = {str_1: str_1}
    module_0.TransportPlugin(**dict_0)


def test_case_4():
    base_plugin_0 = module_0.BasePlugin()
    str_0 = "\n    String specifying what the output should contain:\n\n        '"
    converter_plugin_0 = module_0.ConverterPlugin(str_0)
    bytes_0 = b"?\x11e\x93\xb9A\xb1\x02\x14\xc1!\xa9\xa1\xa0\xcc\xa4\\\xdd"
    converter_plugin_0.convert(bytes_0)
