# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "RG(iq;W"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    var_0 = module_1.isclass(str_0)
    var_0.__getattr__(var_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(none_type_0, keep_alive=bool_0)
    dict_0 = {}
    str_0 = "B$uP`*Z_Pha\x0b#mbc3"
    config_1 = module_0.Config(dict_0, str_0)
    module_0.DescriptorMeta(none_type_0)


def test_case_3():
    str_0 = "%?vDqY@vkgTf9LvSy`zp"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config()
    str_0 = "Pw{7?eC\rK, c"
    none_type_1 = config_1.__setitem__(str_0, str_0)
    none_type_2 = config_1.update(**config_1)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config()


def test_case_10():
    str_0 = "RG(iq;W"
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.__getattr__(dict_0)


def test_case_11():
    str_0 = "%?vDqY@vkgTf9LvSy`zp"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
