# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__getattr__(none_type_0)


def test_case_2():
    list_0 = []
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config(list_0, str_0, converters=none_type_0)
    config_1 = module_0.Config(config_0, str_0)
    var_0 = config_0.load_environment_vars()
    config_0.load_environment_vars(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    list_0 = []
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config(list_0, str_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=str_0)
    var_0 = config_1.load_environment_vars()
    config_0.update_config(var_0)


def test_case_5():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_6():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(list_0, list_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=list_0, converters=none_type_0)
    none_type_1 = config_1.update(**config_0)
    config_1.update_config(none_type_1)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = '\tE"j0j%g4D#z\\n~'
    module_0.Config(var_0, converters=str_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_10():
    list_0 = []
    str_0 = ".(z0UuI"
    none_type_0 = None
    config_0 = module_0.Config(list_0, str_0, converters=none_type_0)
    config_1 = module_0.Config()
    list_1 = [config_1, config_1]
    none_type_1 = config_1.update(*list_1)
    var_0 = config_1.update_config(config_1)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=none_type_0, converters=str_0)
    bytes_0 = b"\x1b\x05\xfc8p\xbe\xd4V\xe5\x88\xe7n"
    module_0.Config(env_prefix=str_0, keep_alive=none_type_0, converters=bytes_0)
