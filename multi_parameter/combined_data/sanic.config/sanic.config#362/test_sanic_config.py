# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Ph&\r\x0c8hkjKQ'm\\?tsS>:"
    module_0.Config(converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(none_type_0, none_type_0)
    config_2 = module_0.Config(config_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    module_0.DescriptorMeta(var_0)


def test_case_4():
    dict_0 = {}
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_0)
    var_0 = module_1.isclass(dict_0)
    config_1 = module_0.Config(var_0)
    str_1 = var_0.__str__()
    str_2 = "i\x0c~vueMr_!4.t\\\x0b>9."
    none_type_1 = config_0.__setitem__(str_2, config_0)
    config_0.__getattr__(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_9():
    dict_0 = {}
    str_0 = "."
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_0)
    var_0 = module_1.isclass(dict_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    complex_0 = -667.0737 - 2081.86388j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    var_1 = var_0.__repr__()
    var_1.respond(list_0)


def test_case_12():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_1 = config_0.__str__()
    var_0 = config_0.update_config(config_0)
    config_1.update_config(var_0)


def test_case_13():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_0)
    var_0 = module_1.isclass(config_0)
    config_1 = module_0.Config(var_0)
    str_1 = var_0.__str__()
    config_0.load_environment_vars(str_0)


def test_case_14():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    var_0 = module_1.isclass(str_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_1 = var_0.__str__()
    config_1.update_config(var_0)


def test_case_15():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    var_0 = module_1.isclass(str_0)
    config_1 = module_0.Config(keep_alive=config_0)
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    str_3 = var_0.__str__()
    str_4 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_4, str_0)
