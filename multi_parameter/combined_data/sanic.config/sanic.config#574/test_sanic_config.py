# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    complex_0 = -1131.8 + 4810.2519j
    none_type_0 = None
    module_0.Config(env_prefix=complex_0, keep_alive=complex_0, converters=none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_4():
    str_0 = "\nB\r_{~!mS  c^?,|+$d"
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.__setitem__(str_0, str_0)
    none_type_3 = config_0.register_type(config_0)
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_1.__setitem__(config_0, config_0)


def test_case_7():
    bytes_0 = b"\xfd\x0f\xe8\x8cj\xc3\xcb\x05\xa62"
    set_0 = {bytes_0}
    var_0 = module_1.isclass(set_0)
    config_0 = module_0.Config(var_0, var_0, var_0)
    var_1 = var_0.__bool__()
    var_1.__setattr__(bytes_0, var_1)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_1 = module_0.Config(config_0)
    none_type_0 = config_0.register_type(local_cert_creator_0)
    var_0 = config_0.update_config(config_0)
    int_0 = -2412
    var_1 = module_1.isdatadescriptor(var_0)
    config_0.update_config(int_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, config_0, config_0, var_0]
    none_type_0 = config_0.update(*list_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, config_0, config_0, var_0]
    config_0.update(*list_0)
