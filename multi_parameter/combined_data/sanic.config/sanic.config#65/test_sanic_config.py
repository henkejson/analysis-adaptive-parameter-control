# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "lGJt\x0coT!X5K\t`"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    bool_0 = True
    var_0 = config_0.__getattr__(str_0)
    module_0.Config(env_prefix=bool_0, converters=var_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_3():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_4():
    str_0 = '"3FAGNMW(B'
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config()
    str_0 = "'RMQEST_vD_\"EADER"
    none_type_1 = config_0.__setitem__(str_0, var_0)
    var_1 = module_1.isdatadescriptor(str_0)
    config_0.update_config(bool_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config()
    str_0 = "'RMQEST_vD_\"EADER"
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    none_type_1 = config_0.__setitem__(str_0, var_0)
    var_1 = module_1.isdatadescriptor(str_0)
    config_0.update_config(bool_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config()
    str_0 = "'RMQEST_vD_\"EADER"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    none_type_2 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_10():
    tuple_0 = ()
    bool_0 = True
    config_0 = module_0.Config(tuple_0, tuple_0, bool_0)
    bool_1 = False
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, bool_1)
    config_1 = module_0.Config()
    module_0.Config(config_0)


def test_case_11():
    tuple_0 = ()
    bool_0 = True
    config_0 = module_0.Config(tuple_0, tuple_0, bool_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(config_0)
    var_0 = config_2.update_config(config_0)
    str_0 = "FXY.\nzx8$|)Z\r\t)"
    tuple_1 = (var_0, var_0, var_0, var_0)
    none_type_0 = config_1.__setitem__(str_0, tuple_1)
    str_1 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_1: tuple_0}
    config_0.update(**dict_0)


def test_case_12():
    tuple_0 = ()
    bool_0 = True
    config_0 = module_0.Config(tuple_0, tuple_0, bool_0)
    bool_1 = False
    config_1 = module_0.Config(keep_alive=bool_1)
    str_0 = "P"
    bool_2 = True
    config_2 = module_0.Config(config_0, str_0, bool_2)
    config_2.update_config(tuple_0)
