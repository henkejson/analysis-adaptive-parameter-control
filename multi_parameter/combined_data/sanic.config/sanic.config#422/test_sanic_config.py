# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = module_1.isclass(none_type_1)
    var_0.__subclasscheck__(none_type_0, none_type_1)


def test_case_3():
    str_0 = "1\\l`8R/dk2BVR"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)
    int_0 = 401
    var_0 = module_1.isclass(str_0)
    var_0.__subclasscheck__(none_type_0, int_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_0.__getattr__(var_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__setitem__(none_type_0, config_0)


def test_case_6():
    float_0 = 3224.8
    module_0.Config(env_prefix=float_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = config_0.update()
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = module_0.Config(keep_alive=config_0)
    var_2 = module_1.isdatadescriptor(var_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = ""
    dict_0 = module_1.isclass(str_0)
    config_0.load_environment_vars(str_0)
