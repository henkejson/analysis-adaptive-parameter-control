# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    config_0.load_environment_vars(none_type_0)


def test_case_2():
    int_0 = 1587
    config_0 = module_0.Config()
    module_0.Config(int_0, keep_alive=config_0, converters=config_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    config_1.respond(config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    config_0 = module_0.Config()
    config_0.update_config(list_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "ryV?,B^"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config()


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "ryV?,B^"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=str_0, converters=none_type_0)


def test_case_9():
    str_0 = "~)s,0`h,"
    int_0 = 2894
    dict_0 = {str_0: str_0, str_0: int_0}
    module_0.Config(dict_0, keep_alive=int_0, converters=str_0)


def test_case_10():
    int_0 = 1587
    str_0 = "!q^G9CAIyuItC"
    int_1 = -185
    str_1 = "*0`OGtq6GAQ@qn\\M2|~F"
    dict_0 = {str_0: int_1, str_1: int_1, str_0: str_1}
    config_0 = module_0.Config(dict_0, str_1, int_1)
    bool_0 = False
    list_0 = [int_0, int_0, bool_0]
    config_1 = module_0.Config()
    config_1.__setitem__(bool_0, list_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "#D5i^6EK\rY6\x0b\x0c0"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(str_0)
