# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    var_0 = config_0.load_environment_vars()


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, converters=none_type_1)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__setitem__(config_0, config_0)


def test_case_6():
    complex_0 = -94 - 429.7117j
    str_0 = "content-length"
    dict_0 = {}
    config_0 = module_0.Config(dict_0, str_0, dict_0, converters=dict_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    module_1.load_module_from_file_location(complex_0, *complex_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_9():
    str_0 = "content-length"
    dict_0 = {}
    config_0 = module_0.Config(dict_0, str_0, dict_0, converters=dict_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_0.__getattr__(dict_0)


def test_case_10():
    complex_0 = -94 - 429.7117j
    str_0 = "content-length"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, dict_0, converters=dict_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    module_1.load_module_from_file_location(complex_0, *complex_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = module_3.LocalCertCreator.TRUSTME
    config_0.update_config(var_1)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=config_0
    )
    none_type_1 = config_0.update(**config_0)
    none_type_2 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)
