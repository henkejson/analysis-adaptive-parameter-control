# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "QDpniJ"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    str_0 = "_name_preVix"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    str_0 = "nCB/yN\n\x0b<$gt["
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    str_1 = ""
    config_1 = module_0.Config(config_0)
    config_0.load_environment_vars(str_1)


def test_case_5():
    str_0 = "_name_prefix"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.log_response()


def test_case_7():
    str_0 = ";QDhni\x0b"
    config_0 = module_0.Config(converters=str_0)
    var_0 = module_1.isdatadescriptor(config_0)
    dict_0 = {str_0: config_0, var_0: config_0, str_0: str_0, var_0: str_0}
    config_0.__getattr__(dict_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = ";Dhn\x0b"
    config_0 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_10():
    str_0 = "nCB/yN\n\x0b<$gt["
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    str_1 = ""
    config_0.load_environment_vars(str_1)


def test_case_11():
    str_0 = "Fh!J]*=T"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_12():
    str_0 = "nCB/yN\n\x0b<$gt["
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    str_1 = ""
    config_0.load_environment_vars(str_1)
