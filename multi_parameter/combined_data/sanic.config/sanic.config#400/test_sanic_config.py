# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 797
    module_0.Config(converters=int_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b"9\xd9\xea*\xd5\x1a\x1e\x84\xf6\xb5\xe4\xc5\xa3\xa2$\xe7l\xf6=m"
    module_1.getmembers(bytes_0, bytes_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    config_0.load_environment_vars(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.update(**config_0)
    none_type_2 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "9m+A4\r$/"
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.isdatadescriptor(config_0)
    var_2 = module_1.isclass(none_type_0)
    var_2.__getattr__(var_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.update()
    none_type_2 = config_0.update(**config_0)
    var_0 = module_1.getmembers(none_type_0)
    var_1 = config_0.update_config(config_0)
    str_0 = "?$K,aXos>,g[\t7wkj:O"
    none_type_3 = config_0.__setitem__(str_0, none_type_0)
    none_type_4 = config_0.register_type(none_type_1)
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "9|_dE'*W?M$;"
    module_0.Config(str_0, str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    config_0.update_config(var_1)


def test_case_13():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_14():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_1.load_environment_vars()
    var_1 = module_1.isclass(none_type_0)
    default_0 = module_2.Default()
    var_2 = config_0.update_config(config_0)
    config_0.update_config(none_type_0)


def test_case_16():
    config_0 = module_0.Config()
    bool_0 = True
    str_0 = "P"
    bool_1 = True
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=bool_1)
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)
