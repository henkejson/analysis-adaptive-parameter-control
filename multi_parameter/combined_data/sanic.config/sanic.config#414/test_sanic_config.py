# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "|Tpq\\GDE?"
    config_1 = module_0.Config(none_type_0, converters=str_0)
    module_1.object(**config_1)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    str_0 = "k=r~#D|W60'%N6Fy"
    module_0.Config(converters=str_0)


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, converters=none_type_1)
    none_type_2 = config_0.register_type(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    bytes_0 = b"@\x17\xec"
    config_0.update_config(bytes_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = config_0.update()
    config_0.__setitem__(none_type_1, config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(none_type_0)
    var_0 = config_1.load_environment_vars()
    config_2 = module_0.Config(keep_alive=config_1, converters=config_1)
    none_type_1 = config_0.register_type(none_type_0)
    var_1 = config_1.update_config(config_0)
    str_0 = "100-continue"
    none_type_2 = config_0.__setattr__(str_0, var_1)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    module_0.Config(env_prefix=config_0, keep_alive=none_type_0, converters=config_0)
