# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "--simple"
    str_1 = "F,V2i_g\x0b+Fb\r7%0t"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_0: str_1}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    descriptor_meta_0 = module_1.getmembers(config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.log_response()


def test_case_8():
    config_0 = module_0.Config()
    str_0 = ":P>\x0b!,Tm>rEZ"
    complex_0 = 1547.29292 - 2208.3j
    none_type_0 = config_0.register_type(str_0)
    module_2.check_error_format(complex_0)


def test_case_9():
    str_0 = ":P>\x0b!,Tm>rEZ"
    module_0.Config(converters=str_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    dict_0 = {var_0: var_0, var_0: var_0}
    config_1 = module_0.Config(dict_0, var_0, var_0)
    var_0.__setattr__(config_0, var_0)


def test_case_11():
    bytes_0 = b'o\xbb\x87\xcfAQ\xa1\x8e\xbd"-B\x91\xb5\x94'
    str_0 = "#"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(bytes_0)


def test_case_12():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = None
    var_1 = module_1.isdatadescriptor(none_type_0)
    var_1.load_environment_vars()


def test_case_13():
    none_type_0 = None
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(converters=str_0)
    config_0.update_config(none_type_0)


def test_case_14():
    none_type_0 = None
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "S"
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_1.register_type(str_0)
    config_1.load_environment_vars(str_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    config_0.__setitem__(str_0, config_0)
