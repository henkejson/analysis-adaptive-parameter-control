# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "w`d"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_7():
    str_0 = "`t^+ASFnX0)>R"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    str_1 = "[%s]+"
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_1)
    config_1.__getattr__(none_type_1)


def test_case_8():
    str_0 = "xy\\YJ@G:2 h>mxUJ"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_9():
    str_0 = "`t^+ASFnX0)>R"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_1)
    config_0.__getattr__(config_1)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "i3mr@p8sU(g.KC"
    config_1 = module_0.Config(none_type_0)
    config_1.update_config(str_0)


def test_case_11():
    str_0 = "`t^+ASFnX0)>R"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(env_prefix=str_0)
    module_0.Config(str_0)


def test_case_12():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    none_type_0.__instancecheck__(none_type_0, none_type_0)


def test_case_13():
    list_0 = []
    float_0 = -3710.0
    config_0 = module_0.Config(keep_alive=float_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, list_0)
