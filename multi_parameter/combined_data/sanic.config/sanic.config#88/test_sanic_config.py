# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, config_0, config_0]
    config_1 = module_0.Config(converters=var_0)
    none_type_0 = config_1.update(*list_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "-7\\lr;kSIm9JS\x0bR^mN"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_4():
    config_0 = module_0.Config()
    bytes_0 = b"\xc6\x82\xb7"
    none_type_0 = config_0.register_type(bytes_0)


def test_case_5():
    bytes_0 = b"Temporary Redirect"
    none_type_0 = None
    module_0.Config(env_prefix=bytes_0, converters=none_type_0)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.load_environment_vars()


def test_case_8():
    config_0 = module_0.Config()
    config_0.respond(config_0)


def test_case_9():
    bytes_0 = b"\x05\x8b"
    config_0 = module_0.Config()
    var_0 = module_1.isclass(bytes_0)
    bytes_1 = b"\xc6\x82\xb7"
    none_type_0 = config_0.register_type(bytes_1)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "K\\ +7>@zJRm_\n(Es"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0.init_for_request()


def test_case_12():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "_name"
    str_2 = "Z^"
    int_0 = -1
    dict_0 = {str_0: str_0, str_1: str_0, str_2: int_0}
    str_3 = "NptmV9`Bmi"
    module_0.Config(dict_0, str_3, converters=dict_0)


def test_case_13():
    bytes_0 = b"\x05\x8b"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.isclass(bytes_0)
    bytes_1 = b"\x93s\xd3\x86\xdb"
    config_0.update_config(bytes_1)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)
