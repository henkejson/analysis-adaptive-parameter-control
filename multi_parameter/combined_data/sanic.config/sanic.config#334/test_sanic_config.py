# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 1910
    bool_0 = False
    module_0.Config(env_prefix=int_0, keep_alive=bool_0, converters=int_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config()
    float_0 = -351.4
    config_1 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    module_1.Http(float_0)


def test_case_3():
    config_0 = module_0.Config()
    bytes_0 = b"\xc0\xde\x004\xdd<\x8e\x05"
    config_0.__getattr__(bytes_0)


def test_case_4():
    list_0 = []
    config_0 = module_0.Config(env_prefix=list_0)
    config_0.__getattr__(list_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "%(request)s %(message)s %(status)s %(byte)s"
    module_0.Config(converters=str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_8():
    config_0 = module_0.Config()
    bool_0 = False
    config_0.__setitem__(bool_0, config_0)


def test_case_9():
    str_0 = ">"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    none_type_3 = config_0.__setattr__(str_0, str_0)
    var_0 = module_2.isdatadescriptor(str_0)
    var_0.respond(str_0)


def test_case_10():
    str_0 = "#(\nkt_(dZL"
    str_1 = "&t:"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, converters=none_type_0)
    config_1 = module_0.Config()
    none_type_1 = None
    config_1.__setitem__(none_type_1, none_type_1)


def test_case_11():
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_13():
    config_0 = module_0.Config()
    bytes_0 = b"\xc0\xde\x004\xdd<\x8e\x05"
    config_0.update_config(bytes_0)


def test_case_14():
    str_0 = "/|"
    str_1 = ";3@7bCMDUnRkd~\t&"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1, str_2: str_2}
    none_type_0 = None
    module_0.Config(dict_0, str_0, str_1, converters=none_type_0)


def test_case_15():
    bool_0 = True
    config_0 = module_0.Config()
    float_0 = -351.4
    none_type_0 = config_0.register_type(bool_0)
    str_0 = "}W!2^+%F-\x0csc..#-"
    none_type_1 = config_0.__setattr__(str_0, float_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, str_0)
