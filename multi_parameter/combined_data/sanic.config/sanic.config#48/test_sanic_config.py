# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    config_0.__subclasscheck__(config_0, config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(var_0, config_0, config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_0)
    var_0.__setattr__(config_0, config_1)


def test_case_5():
    str_0 = "hD"
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=none_type_0, converters=str_0)
    config_1.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "hD"
    str_1 = "\x0cy"
    dict_0 = {str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1, converters=dict_0)
    config_1 = module_0.Config()
    var_0 = module_1.isdatadescriptor(str_0)
    str_2 = "PROXIES_COUNT"
    none_type_0 = config_0.__setitem__(str_2, config_0)
    none_type_1 = config_1.register_type(var_0)
    var_0.load_environment_vars()


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "hD"
    str_1 = "\x0cy"
    dict_0 = {str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1, converters=dict_0)
    config_1 = module_0.Config()
    var_0 = module_1.isdatadescriptor(str_0)
    config_1.update_config(str_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
