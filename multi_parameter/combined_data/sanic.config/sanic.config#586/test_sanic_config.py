# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.update_config(config_0)


def test_case_2():
    bytes_0 = b"Unauthorized"
    set_0 = {bytes_0, bytes_0}
    module_0.Config(env_prefix=set_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "wt'&jirH@"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    list_0 = [none_type_1, none_type_1, none_type_1]
    var_0 = config_0.update_config(config_0)
    config_0.update_config(list_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=config_1, converters=config_1)
    var_0 = config_1.update_config(config_1)
    none_type_1 = config_1.update()
    config_2.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_9():
    bytes_0 = b"U\x94`3"
    config_0 = module_0.Config(keep_alive=bytes_0)
    none_type_0 = config_0.register_type(bytes_0)
    config_0.update_config(bytes_0)


def test_case_10():
    bytes_0 = b"Unauthorized"
    str_0 = "Q22K#]B<8"
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, str_0, none_type_0, converters=bytes_0)
    set_0 = {bytes_0, bytes_0}
    module_0.Config(env_prefix=set_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=config_0)
    var_1 = config_0.update_config(config_0)
    var_2 = var_1.__repr__()
    config_0.register_type(var_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_1.getmembers(config_0, var_1)
    module_0.DescriptorMeta(config_0, *var_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    var_0.update_config(var_0)
