# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "DrKJ<lo4n^I)"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=str_0)
    config_0.update_config(none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    int_0 = 2893
    var_0 = config_0.update_config(config_0)
    module_0.Config(int_0, converters=int_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    int_0 = 1954
    str_0 = "o:ntet-Typ"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(keep_alive=dict_0)
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(int_0)


def test_case_7():
    str_0 = "?_B|"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.__setattr__(config_0, str_0)


def test_case_8():
    bytes_0 = b"\xf2|\\X\xd0\xda\xf0\xba\x82\xcaI(\xb4\x03\xdcZ"
    str_0 = "s4~m2`fV@L?g\t!q"
    str_1 = "ALTSVC"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=str_1)
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "'s{Rao\nH<oV"
    descriptor_meta_0 = module_1.isclass(str_0)
    config_0.__getattr__(config_0)


def test_case_10():
    float_0 = -2772.113
    list_0 = [float_0, float_0, float_0]
    module_0.Config(converters=list_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    str_0 = "DrKJ<lo4n^I)"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=str_0)
    var_0 = config_1.update_config(config_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.load_environment_vars(str_0)
