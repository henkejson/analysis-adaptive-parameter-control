# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import abc as module_1
import inspect as module_2
import sanic.http.http1 as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    module_1.ABCMeta()


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = " has not yet been registered to an app"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    config_0.__getattr__(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    bytes_0 = b"T\x88\xbf\xc7\x10\x0b"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = " has not yet been registered to an app"
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_8():
    str_0 = "="
    str_1 = '/*?_N86W"o'
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    var_0 = module_2.isclass(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.load_environment_vars()
    none_type_0 = config_1.update(**config_0)
    var_1 = config_0.load_environment_vars()
    config_0.update_config(var_1)


def test_case_10():
    config_0 = module_0.Config()
    module_3.Http(config_0)


def test_case_11():
    str_0 = "g4"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    bool_0 = False
    config_1 = module_0.Config(env_prefix=bool_0)
    none_type_1 = config_1.__setitem__(str_0, str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "nHjTA"
    int_0 = -2538
    none_type_0 = config_0.__setitem__(str_0, int_0)
    str_1 = "LOCAL_CERT_CREATOR"
    none_type_1 = None
    config_0.__setitem__(str_1, none_type_1)
