# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import abc as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    module_0.Config(env_prefix=config_0, keep_alive=config_0, converters=config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = none_type_0.__str__()
    config_1 = module_0.Config(none_type_0)
    config_0.__subclasscheck__(config_0, config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    bytes_0 = b"\xdae\xd2\xe7\xee"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.load_environment_vars()
    str_0 = "#NZf;af?yk}4>;"
    config_0.update_config(str_0)


def test_case_6():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    default_0 = module_1.Default()
    none_type_0 = config_0.register_type(config_0)
    module_2.ABCMeta()


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config()
    str_0 = '$"1=Q(Fb1vH\t5G'
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_1.update_config(config_0)
    config_1.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "DEPRECATION_FIpTEc"
    set_0 = set()
    bytes_0 = b"\x1f`\xe6^\xa7\xa4z{\x0e\xdf"
    var_1 = module_3.isdatadescriptor(bytes_0)
    none_type_0 = config_0.register_type(var_1)
    str_1 = ".q4{/k*XaUbMdc\x0c{dS"
    none_type_1 = config_0.__setitem__(str_1, str_1)
    none_type_2 = config_0.__setitem__(str_0, set_0)
    config_0.register_type(var_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
