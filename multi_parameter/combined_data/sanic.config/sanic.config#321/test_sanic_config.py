# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    list_0 = []
    none_type_0 = config_0.update(*list_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.register(config_0, config_0)


def test_case_3():
    str_0 = "%Oq_%0@aTGd:Q:0FS"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_4():
    str_0 = "X3'^7pI>;\"Vec)Uwy"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = None
    module_1.check_error_format(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    none_type_1 = config_0.update()
    config_0.__getattr__(none_type_0)


def test_case_6():
    dict_0 = {}
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(dict_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    config_0.update_config(bool_0)


def test_case_9():
    bytes_0 = b"~\x83\xa3\x1cr\n4\xd5\xff&tu\xe1\x8b\xde\xa0"
    str_0 = "%Oq_%0@aTGd:Q:0FS"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    config_0.update_config(bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__setitem__(config_0, none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = config_0.update_config(config_0)
    str_0 = "W6A]\x0cc_."
    none_type_1 = config_0.register_type(var_0)
    none_type_2 = config_0.__setattr__(str_0, str_0)
    none_type_3 = None
    none_type_4 = module_2.isclass(config_0)
    none_type_5 = config_0.update()
    config_0.register_type(none_type_3)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "W6A]\x0cc_."
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=none_type_1, converters=config_1)
    none_type_3 = config_0.update()
    var_1 = config_0.load_environment_vars()
    none_type_4 = config_0.register_type(none_type_1)
    var_2 = module_2.getmembers(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_3)
