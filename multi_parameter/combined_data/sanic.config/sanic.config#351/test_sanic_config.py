# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "0[:."
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    dict_0 = {}
    config_1 = module_0.Config(none_type_0)
    config_2 = module_0.Config(config_0, keep_alive=none_type_0)
    var_1 = config_1.update_config(config_1)
    var_2 = var_1.__repr__()
    var_3 = config_2.update_config(config_1)
    var_3.respond(dict_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)


def test_case_5():
    str_0 = "0[:."
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = None
    var_0 = module_1.isclass(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_1 = config_1.load_environment_vars()
    config_0.update_config(str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config()
    list_0 = []
    none_type_2 = config_1.update(*list_0)
    config_2 = module_0.Config(converters=none_type_2)
    var_0 = config_2.load_environment_vars()
    none_type_3 = config_2.update(**config_0)
    config_0.__setitem__(none_type_2, config_0)


def test_case_7():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.isclass(none_type_1)
    config_1 = module_0.Config(keep_alive=config_0)
    config_2 = module_0.Config()
    config_2.update_config(var_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = module_1.isclass(none_type_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
