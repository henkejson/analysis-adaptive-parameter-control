# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)


def test_case_2():
    bytes_0 = b"v\xca\xe5b\x05\x15]\xaf\xd8\x88\x85"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, bytes_0)
    none_type_1 = config_0.update(**config_0)


def test_case_3():
    str_0 = ""
    str_1 = "_b;}F6J+tB\nH"
    none_type_0 = None
    str_2 = "k>1t\r(g&VD#My_"
    str_3 = "s>\\C"
    dict_0 = {str_0: str_0, str_1: none_type_0, str_2: str_1, str_3: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.load_environment_vars(str_0)


def test_case_7():
    set_0 = set()
    bytes_0 = b"v\xca\xe5b\x05\x15]\xaf\xd8\x88\x85"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.__getattr__(set_0)


def test_case_8():
    float_0 = -2951.5627932298576
    config_0 = module_1.getmembers(float_0)
    bytes_0 = b"\xb1@V2\xbaQ"
    var_0 = module_1.isclass(bytes_0)
    config_1 = module_0.Config(converters=bytes_0)
    var_1 = var_0.__repr__()
    stream_0 = module_2.Stream()
    var_2 = module_1.isclass(stream_0)
    var_3 = var_2.__repr__()
    module_1.getmembers(var_3, var_3)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    none_type_0 = config_0.update(**config_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    bool_1 = True
    config_0.head_response_ignored(bool_0, bool_1)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    none_type_0 = config_0.update(**config_0)
    tuple_0 = (config_0, config_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(env_prefix=tuple_0, converters=config_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    str_0 = "gMLOk(+?$"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(bool_0)


def test_case_12():
    bool_0 = False
    bytes_0 = b"(\xa2\xe9\x95}\xda\n\xea\xfe\x0f\xb1\x11\\>[\x84\xb8="
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    config_0.update_config(bytes_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    bytes_0 = b"\x9b\x9bj\xa2O\x93"
    module_0.Config(converters=bytes_0)


def test_case_14():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.load_environment_vars(str_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
