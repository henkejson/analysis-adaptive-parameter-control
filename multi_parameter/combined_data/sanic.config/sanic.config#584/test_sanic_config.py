# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_2 = module_0.Config(config_1)
    none_type_0 = config_2.register_type(config_0)


def test_case_2():
    str_0 = "breadcrumbs"
    list_0 = []
    config_0 = module_0.Config(keep_alive=list_0)
    module_1.load_module_from_file_location(str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.getmembers(config_0, var_0)
    var_1.__instancecheck__(var_1, var_1)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_0.__instancecheck__(var_0, var_0)


def test_case_6():
    str_0 = "keyfile"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b""
    float_0 = 1.0
    tuple_0 = (bool_0, bool_0, bytes_0, float_0)
    module_0.Config(converters=tuple_0)


def test_case_9():
    int_0 = 2213
    str_0 = "x{!>&/f6\n\t nLTr<LZ"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.DescriptorMeta(int_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(converters=config_0)
    config_0.__setitem__(bool_0, bool_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_0.update(**config_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
