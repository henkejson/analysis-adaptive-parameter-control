# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(converters=local_cert_creator_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=var_0, converters=local_cert_creator_0)


def test_case_2():
    none_type_0 = None
    str_0 = "tNS{"
    str_1 = "_SxIXG?+m]"
    none_type_1 = None
    dict_0 = {str_0: str_0, str_1: none_type_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = "tNS{"
    str_1 = "_XxIXG?+mu"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_1: none_type_0}
    module_0.Config(dict_0, converters=str_1)


def test_case_6():
    none_type_0 = None
    int_0 = 2186
    str_0 = ")lPp.^d\nl|`^^)u"
    int_1 = 558
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, int_1)
    var_0 = module_2.getmembers(int_0)
    var_0.load_environment_vars()


def test_case_7():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    str_0 = "tNS{"
    str_1 = "_SxIXG?+m]"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=str_1)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "_SxIXG?+m]"
    config_0 = module_0.Config(env_prefix=str_0)
    bool_0 = False
    config_0.load_environment_vars(bool_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)
