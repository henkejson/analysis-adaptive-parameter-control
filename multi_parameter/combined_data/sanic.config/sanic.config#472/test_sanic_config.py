# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0, config_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_0.__setitem__(none_type_0, none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.__setitem__(var_0, none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, var_0, var_0)


def test_case_7():
    int_0 = -3566
    var_0 = module_1.isdatadescriptor(int_0)
    config_0 = module_0.Config(keep_alive=var_0)
    str_0 = var_0.__str__()
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.MKCERT
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(env_prefix=var_0, converters=none_type_0)
    var_1 = config_0.update_config(config_0)
    config_2 = module_0.Config()
    bool_0 = False
    bool_1 = True
    config_3 = module_0.Config(config_0, var_0, bool_1, converters=config_2)
    config_3.update_config(bool_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "S\t~:z\\f/\x0cj>"
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(str_0)


def test_case_12():
    none_type_0 = None
    str_0 = "L"
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)
    str_0.init_for_request()


def test_case_13():
    str_0 = "L"
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
    module_0.Config(dict_0, str_0, converters=dict_0)
