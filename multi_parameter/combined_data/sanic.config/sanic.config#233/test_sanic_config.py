# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_3():
    str_0 = "subprotocols"
    str_1 = "Returns the CSS for the page.\n\n        Returns:\n            str: The CSS for the page.\n        "
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    bytes_0 = b"C\x97U\xcf\xae\x025Wc\x04c\xb5\xed\xa6"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(bytes_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "WEBSOCKET_PING_INTERVAL"
    module_0.Config(env_prefix=str_0, keep_alive=var_0, converters=str_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    none_type_1 = config_0.update()
    config_0.respond(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.update_config(bool_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    config_1.update_config(var_0)


def test_case_11():
    str_0 = "P"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=none_type_0)


def test_case_12():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    default_0 = module_1.Default()
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, var_0)
