# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    complex_0 = -3807.451032 + 1366.66647j
    var_0 = config_0.update_config(config_0)
    module_0.Config(converters=complex_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)


def test_case_3():
    str_0 = 'q"5J]#.b^?]R'
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(dict_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "?CaGMfV"
    module_0.Config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = 'q"5J]#.b^?]R'
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(config_1)
    var_0 = module_1.isdatadescriptor(config_0)
    var_1 = config_1.update_config(config_1)
    config_0.__getattr__(var_1)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "'PSR4\nFY\x0b,Z+qz6idEZ"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    config_0.__setattr__(none_type_0, none_type_0)


def test_case_8():
    str_0 = 'q"5J]#.b^?]R'
    dict_0 = {str_0: str_0}
    str_1 = ""
    config_0 = module_0.Config(env_prefix=str_1)
    none_type_0 = config_0.update(**dict_0)
    var_0 = module_1.isclass(str_1)
    bool_0 = False
    var_1 = module_1.getmembers(dict_0, bool_0)
    var_1.respond(bool_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = 'q"5J]#.b^?]R'
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_1.register_type(config_1)
    config_1.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, converters=config_0)
    dict_0 = {none_type_0: config_0}
    config_1.update_config(dict_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = 'q"5J]#.b^?]R'
    module_0.Config(converters=str_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_0)
