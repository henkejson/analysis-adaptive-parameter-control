# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2
import sanic.http.stream as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Iterate over the list of blueprints in the group.\n\n        Returns:\n            Iterator[Blueprint]: Iterator for the list of blueprints in\n        "
    none_type_0 = None
    module_0.Config(keep_alive=none_type_0, converters=str_0)


def test_case_2():
    float_0 = 1.0
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=float_0, converters=none_type_0)


def test_case_3():
    str_0 = "Iterate over the list of blueprints in the group.\n\n        Returns:\n            Iterator[Blueprint]: Iterator for the list of blueprints in\n        "
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    bytes_0 = b"\x92se Pro\xf1y"
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(bytes_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_6():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(config_0, keep_alive=var_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_8():
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    set_0 = {
        local_cert_creator_0,
        local_cert_creator_0,
        local_cert_creator_0,
        local_cert_creator_0,
    }
    config_0 = module_0.Config(keep_alive=set_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    bytes_0 = b"Use Proxy"
    config_0 = module_0.Config(env_prefix=var_0, keep_alive=var_0, converters=bytes_0)
    config_0.update_config(bytes_0)


def test_case_12():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(none_type_0, none_type_0)
    var_1 = var_0.__bool__()
    config_1.__getattr__(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    stream_0 = module_3.Stream()
    config_0.__setitem__(stream_0, config_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "-)&8AH0%V<'87A\":Om,"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, var_0)
