# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = -3498.682913461757
    config_0 = module_0.Config(keep_alive=float_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.getmembers(var_0)
    str_0 = "\x0b-iL!sDnZ9A"
    config_0.update_config(str_0)


def test_case_5():
    float_0 = -3500.132091502034
    config_0 = module_0.Config(keep_alive=float_0)
    config_1 = module_0.Config(config_0)
    config_0.update_config(float_0)


def test_case_6():
    float_0 = -3500.132091502034
    config_0 = module_0.Config(keep_alive=float_0)
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_1.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__setitem__(config_0, none_type_1)


def test_case_8():
    float_0 = -3485.67
    config_0 = module_0.Config(keep_alive=float_0)
    config_0.update_config(float_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    float_0 = -3500.132091502034
    str_0 = "@kM|7qwj~/0;e^6"
    dict_0 = {str_0: float_0, str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, float_0, converters=none_type_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = module_1.getmembers(bool_0, bool_0)
    var_0.__instancecheck__(bool_0, config_0)


def test_case_12():
    stream_0 = module_2.Stream()
    module_0.Config(converters=stream_0)


def test_case_13():
    str_0 = "\n        Read the next message.\n        :meth:`get` returns a single :class:`str` or :class:`bytes`.\n        If the :message was fragmented, :meth:`get` waits until the last frame\n        is received, then it reassembles the message.\n        If ``timeout`` is set and elapses before a complete message is\n        received, :meth:`get` returns ``None``.\n        "
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_14():
    str_0 = ""
    config_0 = module_0.Config(str_0, keep_alive=str_0)
    config_0.load_environment_vars(str_0)
