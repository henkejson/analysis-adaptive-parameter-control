# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    int_0 = -2781
    config_1.update_config(int_0)


def test_case_2():
    str_0 = ",{"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_3():
    str_0 = 'v1)K-\\"\x0co'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)


def test_case_4():
    str_0 = '$aVP|Ff$\r8"\r'
    complex_0 = -1562.60467 - 899.8789j
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=complex_0)
    config_0.__getattr__(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    str_0 = "\rHg94"
    config_0.update_config(str_0)


def test_case_6():
    complex_0 = -1562.60467 - 898.7239177635114j
    config_0 = module_0.Config()
    config_0.update_config(complex_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = ",{"
    str_1 = "<`^a~b"
    str_2 = "xc=@DnjLv[`W7"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    config_0 = module_0.Config(dict_0, str_2)
    config_0.__getattr__(dict_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = "\rHg94"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = config_0.__setattr__(str_0, str_0)
    str_1 = ":gh2'"
    config_0.update_config(str_1)


def test_case_10():
    str_0 = "<`^a~b"
    str_1 = "xc=@DnjLv[`W7"
    dict_0 = {str_1: str_1, str_0: str_1, str_1: str_1}
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_1 = var_0.__bool__()
    none_type_1 = None
    config_0 = module_0.Config(dict_0, var_1, none_type_1)
    config_0.update_config(var_1)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    str_0 = ":gh2'"
    str_1 = "Directory "
    none_type_0 = None
    module_0.Config(none_type_0, str_0, str_0, converters=str_1)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_0.update_config(config_1)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_1 = config_1.__setitem__(str_0, var_0)
    module_0.Config(config_1)


def test_case_14():
    str_0 = "L"
    module_0.Config(env_prefix=str_0, converters=str_0)
