# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.Config(env_prefix=bool_0, keep_alive=none_type_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_4():
    str_0 = " ']L\x0b@\tkh*&"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    int_0 = -3160
    str_0 = 'V{M"'
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    str_1 = "1^}K17na:aKlNWBi"
    tuple_0 = (str_1, str_1)
    var_0 = module_1.isclass(tuple_0)
    var_1 = var_0.__bool__()
    var_1.update_config(int_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "o5>8 l"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=str_0)
    none_type_1 = config_0.update()
    var_0 = config_0.load_environment_vars(str_0)
    str_1 = "lifespan.shutdown"
    none_type_2 = None
    config_1 = module_0.Config(keep_alive=none_type_2)
    none_type_3 = config_1.__setattr__(str_1, str_0)
    str_0.__setitem__(none_type_2, none_type_2)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "-CYO2\\x\rs@"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_1 = config_0.update_config(config_0)
    module_0.Config(str_0, converters=var_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(config_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    none_type_2 = config_1.update()
    config_1.__getattr__(none_type_0)


def test_case_14():
    complex_0 = -580.7 + 670.56j
    str_0 = "!(.!9aH"
    module_0.Config(keep_alive=complex_0, converters=str_0)


def test_case_15():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0, converters=str_0)
    config_0.load_environment_vars(str_0)
