# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "DX<d\x0b^Ic"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.__getattr__(bool_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(bool_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_1.LocalCertCreator.TRUSTME
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_1.register_type(config_1)
    str_0 = "DX<d\x0b^Ic"
    none_type_2 = config_1.__setattr__(str_0, none_type_0)
    config_2 = module_0.Config(env_prefix=var_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_1.register_type(config_1)
    str_0 = "DX<d\x0b^Ic"
    none_type_2 = config_1.__setattr__(str_0, none_type_0)
    config_1.__setitem__(none_type_0, config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "Accessing cookies from the CookieJar by dict key is depnecated. You should instead use the cookies.[et_cookie method. To learn more, please see: https://sanic.dev/en/guide/release-notes/v23.3.html#response-cookies"
    config_0.update_config(str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    int_0 = -1453
    config_1 = module_0.Config(config_0)
    config_0.update_config(int_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isdatadescriptor(var_0)
    none_type_0 = config_0.register_type(var_0)
    none_type_1 = config_0.register_type(var_1)
    var_2 = module_2.getmembers(config_0)
    config_0.register_type(var_0)
