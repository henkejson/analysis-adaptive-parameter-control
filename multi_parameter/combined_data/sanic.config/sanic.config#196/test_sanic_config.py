# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import abc as module_2
import sanic.helpers as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xcf\xae\xf8(-\xb4\x16|\x81q\xc9\x1f\x8d#\xc1"
    var_0 = module_1.getmembers(bytes_0)
    config_0 = module_0.Config(converters=var_0)
    var_0.respond(bytes_0)


def test_case_2():
    bytes_0 = b"V\x92\xba\xf2\xe9"
    module_0.Config(env_prefix=bytes_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "T5gx\tH@\x0c8.v"
    config_1 = module_0.Config(config_0, str_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    config_0.update_config(none_type_0)


def test_case_4():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    config_0 = module_0.Config()
    config_0.__getattr__(set_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(converters=config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=config_0)
    bytes_0 = b"quack-ack"
    var_0 = module_1.isclass(bytes_0)
    var_1 = config_0.update_config(config_0)
    module_2.ABCMeta(*var_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.respond(var_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(var_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    list_0 = [var_1]
    default_0 = module_3.Default()
    none_type_0 = config_0.update(*list_0)


def test_case_15():
    str_0 = "L"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)


def test_case_17():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "pv+EjI+?J%"
    config_1 = module_0.Config()
    none_type_0 = config_0.__setattr__(str_0, var_0)
    var_1 = module_1.getmembers(config_0)
    list_0 = [var_1]
    none_type_1 = config_0.update(*list_0)
    module_1.getmembers(config_0, list_0)
