# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_2():
    dict_0 = {}
    config_0 = module_0.Config(dict_0, dict_0, dict_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    none_type_0 = config_1.update()
    bool_0 = True
    var_1 = module_1.isclass(bool_0)
    var_1.respond(var_1)


def test_case_3():
    int_0 = -2229
    tuple_0 = (int_0, int_0)
    module_0.Config(env_prefix=tuple_0)


def test_case_4():
    config_0 = module_0.Config()
    module_2.Http(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    str_0 = "\r7eluORu|YKUH`"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    module_0.Config(bool_0, converters=none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "TLS_CERT_PASSWORD"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    none_type_2 = config_0.register_type(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(config_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    config_0 = module_0.Config(converters=dict_0)
    none_type_0 = None
    bytes_0 = b"\xb4Zf\xa4\x1c\xa3\x81^\xa1\xccJ"
    config_1 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.update_config(config_1)
    config_1.update_config(none_type_0)


def test_case_12():
    bytes_0 = b"\xf6;\xc7"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.__getattr__(config_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    list_0 = [none_type_0, bool_0, none_type_0, none_type_0]
    module_0.Config(keep_alive=none_type_0, converters=list_0)
