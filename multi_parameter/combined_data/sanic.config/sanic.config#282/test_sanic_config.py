# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "j+\\|5'"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    int_0 = 2119
    str_1 = "n?.Ose>{aW!ZIGo"
    var_0 = module_1.isclass(int_0)
    var_0.__setattr__(str_1, str_1)


def test_case_2():
    int_0 = 2076
    bool_0 = True
    module_0.Config(int_0, keep_alive=bool_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.update_config(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "sl_supO"
    none_type_2 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.isdatadescriptor(none_type_1)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "e]&!RI-(m>xU\td&"
    module_0.DescriptorMeta(str_0)


def test_case_7():
    str_0 = 'n6mw"\r\nCB\ts\npj#eMH'
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "sl_supO"
    module_0.Config(converters=str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "zekEgzJB"
    config_0.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(config_0)


def test_case_11():
    list_0 = []
    var_0 = module_1.isclass(list_0)
    str_0 = var_0.__str__()
    config_0 = module_0.Config(env_prefix=list_0, keep_alive=var_0, converters=var_0)
    var_0.__getattr__(list_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
