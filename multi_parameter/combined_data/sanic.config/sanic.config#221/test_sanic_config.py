# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "]"
    config_0 = module_0.Config(env_prefix=str_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_1 = module_0.Config(dict_0, keep_alive=str_0)


def test_case_2():
    str_0 = "%\\ NbM~t!L.\\izK(\n1\x0b"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update()


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    bytes_0 = b"\x1af.\xb0\xf3\xa8\xae\x9b\x82qA"
    set_0 = {none_type_0, bytes_0, bytes_0}
    none_type_1 = config_0.register_type(set_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)
    config_0.__getattr__(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    str_0 = "%\\ NbM~t!L.\\izK(\n1\x0b"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)
    config_1 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    bytes_0 = b"Unavailable For Legal Reasons"
    config_1.update_config(bytes_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_1)
    config_0.register_type(none_type_0)


def test_case_13():
    bytes_0 = b"63;\xabx\xac0"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    list_0 = [none_type_0, bytes_0]
    module_0.DescriptorMeta(none_type_0, *list_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_15():
    str_0 = "S"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_0.update_config(str_0)
