# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b";"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=bytes_0)
    config_0.update_config(none_type_0)


def test_case_2():
    bytes_0 = b"\n\xe5[\x81\x8e\x1b\xcc\xe4z\x9f\xd3"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    str_0 = "L"
    var_0 = config_0.load_environment_vars(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_1 = module_0.Config(env_prefix=none_type_0)
    str_0 = "L"
    var_0 = config_0.load_environment_vars(str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_7():
    bool_0 = True
    var_0 = module_1.getmembers(bool_0)
    bool_1 = True
    tuple_0 = (bool_0, var_0, bool_1)
    str_0 = "BU!"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(tuple_0)


def test_case_8():
    str_0 = "0h1\r\rE\x0b>-G}"
    var_0 = module_0.Config()
    var_0.update_config(str_0)


def test_case_9():
    str_0 = "o=M\x0b,7kx'\">67m"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(
        config_0, none_type_1, none_type_1, converters=none_type_0
    )
    var_0 = config_0.update_config(config_0)
    config_1.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)


def test_case_14():
    bytes_0 = b";"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0, converters=bytes_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    str_0 = "L"
    config_0.load_environment_vars(str_0)


def test_case_15():
    bytes_0 = b"\x9cPWO\xea\x9d\xe2\xb0\x8b\xdc\xeb\xc5\xe6\x85>\x1ap"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_0, converters=bytes_0)
    config_2 = module_0.Config(env_prefix=none_type_0)
    var_1 = config_1.update_config(config_2)
    str_0 = "_"
    var_2 = config_1.load_environment_vars(str_0)
    config_2.update_config(var_2)
