# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    var_0 = module_1.isclass(bool_0)
    config_0 = module_0.Config(var_0, keep_alive=var_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = config_0.load_environment_vars(str_0)
    config_0.__getattr__(var_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    dict_0 = {var_0: none_type_0, var_0: var_0}
    str_0 = "yrx2T%FH#'|5` #S&|~"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(dict_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    set_0 = set()
    var_0 = module_1.isclass(set_0)
    config_1 = module_0.Config(converters=config_0)
    config_1.update_config(var_0)


def test_case_7():
    str_0 = "QCSrwRk"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_8():
    str_0 = "8DY{MY]3W@c\t]6"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = config_0.load_environment_vars(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config(config_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "G"
    none_type_0 = config_0.register_type(config_0)
    config_0.load_environment_vars(str_0)
