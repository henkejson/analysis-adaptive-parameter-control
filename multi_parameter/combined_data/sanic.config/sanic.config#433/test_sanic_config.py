# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    var_0 = module_1.isclass(config_0)
    str_0 = "hfmWH2~y%]@8Ui[H"
    var_1 = config_1.update_config(config_1)
    config_2 = module_0.Config(config_0, str_0)
    none_type_1 = config_1.__setitem__(str_0, var_1)
    none_type_2 = config_1.register_type(none_type_0)
    config_0.update_config(none_type_1)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    tuple_0 = module_1.getmembers(config_0)
    config_0.update_config(tuple_0)


def test_case_5():
    bytes_0 = b"Multiple Choices"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    none_type_1 = config_1.register_type(var_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    config_1.__setitem__(var_0, var_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    str_0 = "e%U+Ack5wYaSFB"
    var_0 = module_1.isdatadescriptor(str_0)
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "hfmWH2~y%]@8Ui[H"
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setitem__(str_0, var_0)
    none_type_2 = config_0.register_type(none_type_0)
    config_0.register_type(var_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    tuple_0 = (none_type_0,)
    config_2 = module_0.Config(converters=tuple_0)
    str_0 = "hfmWH2~y%]@8Ui[H"
    var_0 = config_1.update_config(config_1)
    none_type_1 = config_1.__setitem__(str_0, var_0)
    none_type_2 = config_1.register_type(none_type_0)
    config_1.update_config(var_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    str_0 = "xEV=Sc)3?[G\\9,"
    tuple_0 = (none_type_0,)
    none_type_1 = config_1.__setitem__(str_0, tuple_0)
    str_1 = "LOCAL_CERT_CREATOR"
    var_0 = config_1.update_config(config_1)
    none_type_2 = config_1.update()
    config_1.__setitem__(str_1, var_0)


def test_case_16():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
