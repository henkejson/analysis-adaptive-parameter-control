# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import sanic.constants as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 205
    none_type_0 = None
    module_0.Config(env_prefix=int_0, keep_alive=none_type_0, converters=int_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    float_0 = -1040.1
    module_1.check_error_format(float_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    complex_0 = 409.21 + 3614.60617j
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    module_0.Config(complex_0, complex_0, none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    int_0 = 1132
    config_0.__getattr__(int_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_8():
    local_cert_creator_0 = module_2.LocalCertCreator.AUTO
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=local_cert_creator_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(local_cert_creator_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = "gR26csfvU#Ph~%Q\r\rb"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, keep_alive=none_type_1)
    none_type_2 = config_0.register_type(var_0)
    config_0.update_config(var_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    str_0 = "6E|q$1]xNtSe"
    none_type_2 = config_0.__setitem__(str_0, config_0)
    none_type_3 = config_0.__setattr__(str_0, none_type_0)
    config_0.register_type(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__bool__()
    str_0 = "Bo_h0l,`%/Yqx ;;"
    config_1 = module_0.Config(env_prefix=none_type_0, converters=var_0)
    config_2 = module_0.Config(var_0, converters=config_1)
    config_1.__setattr__(config_1, str_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = module_2.LocalCertCreator.MKCERT
    none_type_1 = module_3.isdatadescriptor(none_type_0)
    config_0.update_config(var_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_16():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_17():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: var_0, str_0: none_type_0}
    module_0.Config(dict_0, none_type_0)
