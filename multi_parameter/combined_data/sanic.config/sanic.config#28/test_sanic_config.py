# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, none_type_0)
    none_type_1 = config_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    module_1.Http(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "INSPECTOR_HOST"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_0, converters=none_type_0)
    none_type_2 = None
    config_2 = module_0.Config()
    none_type_3 = config_2.register_type(none_type_2)
    config_2.__getattr__(none_type_0)


def test_case_9():
    str_0 = "z#`oaE"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_0, converters=none_type_0)
    config_2 = module_0.Config()
    config_2.__getattr__(none_type_0)


def test_case_11():
    str_0 = "z#`oaE"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "INSPECTOR_HOST"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_0, converters=none_type_0)
    var_1 = module_2.isdatadescriptor(var_0)
    none_type_2 = None
    none_type_3 = config_0.register_type(none_type_2)
    var_2 = var_1.__bool__()
    config_0.register_type(none_type_2)


def test_case_13():
    str_0 = "z#`oaE"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, str_1)
