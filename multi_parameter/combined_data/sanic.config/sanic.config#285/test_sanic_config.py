# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(env_prefix=config_0, keep_alive=config_0, converters=config_0)


def test_case_2():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)
    none_type_1 = None
    var_1 = module_1.isclass(none_type_1)
    var_2 = module_1.isclass(var_1)
    config_1.__setitem__(config_0, none_type_1)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    none_type_2 = None
    none_type_3 = None
    config_1 = module_0.Config(none_type_2, converters=none_type_3)
    config_0.register_type(none_type_3)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, converters=none_type_1)
    none_type_2 = config_1.register_type(config_0)


def test_case_9():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "EyXA,7][~xPVe"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    default_0 = module_2.Default()
    var_0 = default_0.__repr__()
    config_1 = module_0.Config()
    var_1 = config_1.update_config(default_0)
    str_0 = "H"
    none_type_1 = config_1.register_type(var_0)
    config_2 = module_0.Config(env_prefix=str_0)
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)
