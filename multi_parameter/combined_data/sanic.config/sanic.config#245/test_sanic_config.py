# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_2():
    bytes_0 = b'\xe1;\xf5\xe3\xd8"`\x9a\x93\x80M\x17\x1e\xcf\xd8R'
    dict_0 = {}
    config_0 = module_0.Config(dict_0, keep_alive=dict_0)
    config_0.__getattr__(bytes_0)


def test_case_3():
    str_0 = "A$+9H8v"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    bytes_0 = b'\xe1;\xf5\xe3\xd8"`\x9a\x93\x80M\x17\x1e\xcf\xd8R'
    dict_0 = module_1.isdatadescriptor(bytes_0)
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, dict_0)
    config_1 = module_0.Config(dict_0, keep_alive=dict_0)
    config_1.__getattr__(bytes_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_1)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "L"
    var_0 = config_0.load_environment_vars(str_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)
    module_0.DescriptorMeta(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    str_0 = "&"
    str_1 = "$~}<\\!uS@o+fKM\x0cD="
    str_2 = "?"
    dict_0 = {str_1: none_type_0, str_2: str_1, str_2: str_2}
    config_0 = module_0.Config(dict_0, converters=str_2)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = module_1.getmembers(none_type_0)
    var_0.__bool__()


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "g"
    config_0.update_config(str_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: bool_0}
    config_0.update_config(dict_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    str_0 = "L"
    config_0.load_environment_vars(str_0)
