# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    config_2 = module_0.Config()
    var_1 = config_0.load_environment_vars()
    config_2.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.load_environment_vars()


def test_case_3():
    bool_0 = False
    bool_1 = True
    str_0 = "]9"
    module_0.Config(bool_1, str_0, bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(converters=config_0)


def test_case_7():
    float_0 = 1989.8607
    none_type_0 = None
    module_0.Config(env_prefix=float_0, keep_alive=none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(env_prefix=var_0, converters=var_0)
    config_1.__getattr__(config_1)


def test_case_10():
    config_0 = module_0.Config()
    int_0 = 1289
    config_0.update_config(int_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    str_0 = ")\x0bkV7W|)L{-&9x@"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    str_1 = "LLa<LxA"
    config_0.update_config(str_1)


def test_case_12():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.load_environment_vars(str_0)
