# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"w"
    config_0 = module_0.Config(converters=bytes_0)
    none_type_0 = config_0.register_type(bytes_0)
    var_0 = module_1.isclass(bytes_0)
    var_0.update_config(bytes_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    bool_0 = True
    module_0.Config(bool_0, keep_alive=bool_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    str_0 = "main_process_start"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    module_0.Config(env_prefix=var_0, keep_alive=none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "2-gEqw"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    bytes_0 = b"\x91\xa7"
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(bytes_0)
    config_0.register_type(bytes_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = 'rUgZT-"`HnC,'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_0.Config(dict_0)
