# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "--version"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)


def test_case_2():
    list_0 = []
    str_0 = "--version"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=list_0)


def test_case_3():
    config_0 = module_0.Config()
    module_1.Http(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_7():
    list_0 = []
    str_0 = "x"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: str_0}
    config_1 = module_0.Config(dict_0, converters=str_0)
    config_2 = module_0.Config(env_prefix=str_0, keep_alive=list_0)
    var_0 = config_1.update_config(config_2)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "--version"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: str_0}
    module_0.Config(dict_0, converters=str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = config_1.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    var_1 = module_2.isclass(str_0)
    config_0.__setitem__(str_0, var_1)


def test_case_11():
    str_0 = "--version"
    str_1 = "x"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_1: none_type_0, str_0: str_1}
    config_0 = module_0.Config(dict_0, converters=str_1)
    config_0.update_config(str_1)
