# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_4():
    str_0 = "KN\\ \ta\rid?$w%9)\nf"
    config_0 = module_0.Config(converters=str_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(converters=config_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = None
    bool_0 = False
    var_0 = module_1.getmembers(none_type_1)
    config_0.__setitem__(bool_0, none_type_1)


def test_case_8():
    str_0 = "KN\\ \ta\rid?$w%9)\nf"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "KN\\ \ta\rid?$w%9)\nf"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)


def test_case_11():
    str_0 = "KN\\ \ta\rid?$w%9)\nf"
    config_0 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_12():
    str_0 = "{ZwReSI)7"
    str_1 = "r}Cq"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_2: str_2}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=none_type_0)
