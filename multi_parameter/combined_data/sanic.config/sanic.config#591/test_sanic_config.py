# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"See Other"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    module_0.Config(dict_0, dict_0, local_cert_creator_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.__setattr__(none_type_0, none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "S"
    config_1 = module_0.Config(config_0, str_0)
    config_0.update_config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "S"
    config_1 = module_0.Config(config_0, str_0)
    var_0 = config_0.update_config(config_0)
    config_1.register(var_0, var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_7():
    int_0 = 409
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(int_0)
    var_0 = config_0.load_environment_vars()
    var_0.update(*var_0, **var_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "Cannot set "
    var_0 = module_2.isdatadescriptor(config_0)
    dict_0 = {var_0: str_0}
    config_1 = module_0.Config(converters=dict_0)
    config_0.__setitem__(dict_0, var_0)


def test_case_9():
    int_0 = 462
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "S"
    config_1 = module_0.Config(config_0, str_0)
    config_1.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "S"
    module_0.Config(config_0, str_0, converters=config_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "_"
    config_1 = module_0.Config(config_0, str_0, converters=config_0)
    str_1 = "requDX%st"
    var_0 = config_0.load_environment_vars()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_1 = config_0.update_config(config_0)
    var_2 = config_1.load_environment_vars()
    none_type_2 = config_0.__setitem__(str_1, config_0)
    config_0.update_config(var_2)
