# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "C.OrO@\tThK*H=y[\x0bq/~4"
    module_0.Config(converters=str_0)


def test_case_2():
    bytes_0 = b"Non-Authoritative Information"
    module_0.Config(env_prefix=bytes_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1)
    config_0.__getattr__(config_1)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = module_1.isdatadescriptor(none_type_1)
    config_0.update_config(none_type_1)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    var_0.load_environment_vars()


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_9():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "7vE\rW2h>I;!9fL:T"
    str_2 = "I^:*=5q.?h[&T87j2e"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_0.Config(dict_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_12():
    bytes_0 = b"w\xc0\xce\x1f\xed\xab6&\x89\xf2\xffP\xfd\xbe[\x84\xc4\xe7"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    config_0 = module_0.Config(keep_alive=dict_0, converters=bytes_0)
    config_0.update_config(bool_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.update_config(str_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_0, none_type_0)
