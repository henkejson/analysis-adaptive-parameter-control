# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ""
    bool_0 = False
    config_0 = module_0.Config()
    str_1 = "%Aelxj^<"
    none_type_0 = config_0.__setattr__(str_1, config_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=str_1)
    config_2 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    config_0.load_environment_vars(str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = 'l9P9/"op7qKm#'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    module_1.Http(dict_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "aDrwin"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    none_type_0 = None
    var_0 = module_2.isdatadescriptor(none_type_0)
    var_0.__getattr__(var_0)


def test_case_7():
    none_type_0 = None
    str_0 = "[5Q^"
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0, converters=str_0)
    bool_0 = False
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isclass(var_0)
    var_2 = module_2.getmembers(config_0)
    var_1.register_type(bool_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config()
    str_0 = '|BQ}"JbO\tn{U6)Q[-~M'
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.__setitem__(str_0, var_0)
    config_1 = module_0.Config()
    var_1 = config_1.load_environment_vars()
    none_type_1 = config_1.register_type(bool_0)
    none_type_2 = None
    config_2 = module_0.Config(none_type_2)
    str_1 = "LOCAL_CERT_CREATOR"
    config_2.__setattr__(str_1, str_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = module_2.getmembers(none_type_0)
    config_0.__getattr__(var_0)


def test_case_10():
    str_0 = "D"
    str_1 = "\t7wzCf{`ei0\r"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    str_0 = "[5Q^"
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0, converters=str_0)
    bool_0 = False
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isclass(var_0)
    var_1.register_type(bool_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "L\x0b04}ZA3q1NzU_qi')LR"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    module_0.Config(keep_alive=none_type_0, converters=str_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_14():
    bool_0 = True
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isdatadescriptor(bool_0)
    str_1 = "@2(Ckeqs^P66Kn<gO"
    dict_0 = {}
    var_1.__setattr__(str_1, dict_0)
