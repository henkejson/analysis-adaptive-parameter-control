# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_2():
    str_0 = 'K?\x0cf$6=?"L@l$7#PN?q'
    str_1 = "rF07;\t&iO~$"
    str_2 = '/rC%\\?\\2"dOw'
    dict_0 = {str_1: str_1, str_2: str_1, str_2: str_2}
    config_0 = module_0.Config(dict_0, str_2)
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(bool_0)
    config_0.__getattr__(config_0)


def test_case_4():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_5():
    str_0 = "htq\x0c(i~\x0c"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "htq\x0c(i~\x0c"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_9():
    str_0 = "htq\x0c(i~\x0c"
    bool_0 = False
    module_0.Config(keep_alive=bool_0, converters=str_0)


def test_case_10():
    str_0 = "m\t}sYaU"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=str_0
    )
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_1.update_config(config_1)
    config_1.__getattr__(str_0)


def test_case_11():
    str_0 = "m\t}sYaU"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, var_0)


def test_case_12():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "8=LhT"
    none_type_0 = config_0.__setitem__(str_1, str_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1)
    config_1.update_config(none_type_1)
