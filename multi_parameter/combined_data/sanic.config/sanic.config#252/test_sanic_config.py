# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    str_0 = "m3x3+l"
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = module_1.getmembers(config_0, none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__instancecheck__(none_type_0, none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_4():
    bytes_0 = b"\x92fjZ\x17\x1b\xa7!\xbf"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(bytes_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__bool__()
    var_1.__instancecheck__(config_0, var_0)


def test_case_7():
    none_type_0 = None
    str_0 = "ASCII"
    config_0 = module_0.Config(keep_alive=str_0)
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    config_1 = module_0.Config(converters=var_0)


def test_case_8():
    bytes_0 = b"B\x93\x87D\xf1\xd0_@NhK"
    config_0 = module_0.Config(keep_alive=bytes_0)


def test_case_9():
    str_0 = "m3x3+l"
    module_0.Config(str_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    str_0 = "[DEPRECATION"
    list_0 = [str_0, none_type_0, str_0]
    module_0.Config(converters=list_0)


def test_case_12():
    str_0 = "[DEPRECATION"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.register_type(str_0)


def test_case_13():
    str_0 = "[DEPRECATION"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.__setitem__(str_0, str_0)
    module_0.Config(env_prefix=config_0, keep_alive=none_type_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_1 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)
    config_0.__getattr__(none_type_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_1 = config_0.update(*list_0)
    none_type_2 = module_1.isclass(list_0)
    none_type_3 = config_0.update(*list_0, **config_0)
    var_1 = config_0.update_config(config_0)
    config_0.update_config(none_type_0)
