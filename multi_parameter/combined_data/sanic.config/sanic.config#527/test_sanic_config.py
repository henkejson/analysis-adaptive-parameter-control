# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    list_0 = []
    config_0 = module_0.Config(env_prefix=list_0)


def test_case_2():
    str_0 = "AER'!3iUB5;OO'm.1q?"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    var_0 = config_0.__repr__()
    var_0.register_type(config_0)


def test_case_3():
    str_0 = "Websocket data must be bytes, str."
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(str_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    bool_1 = True
    none_type_1 = config_0.register_type(bool_1)
    module_0.DescriptorMeta(bool_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(config_0, var_0)


def test_case_6():
    str_0 = "rH.YGABm"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    bool_0 = True
    none_type_1 = config_0.register_type(bool_0)
    config_0.__getattr__(none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_1)


def test_case_13():
    float_0 = 317.56
    module_0.Config(keep_alive=float_0, converters=float_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = ")=Ua&E"
    var_0 = module_0.Config(converters=str_0)
    var_0.__new__(config_0, str_0, str_0, config_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = module_1.isdatadescriptor(config_0)
    config_1 = module_0.Config(none_type_1, keep_alive=none_type_1)
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.Default()
    var_1.__getattr__(none_type_0)


def test_case_16():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_1)
