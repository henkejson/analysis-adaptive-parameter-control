# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(converters=none_type_1)
    bytes_0 = b'\xa2\x83\xbb\xb8s\xe7\xd6"@\x9cZ\xba\x01\xfe'
    none_type_2 = config_0.register_type(bytes_0)
    config_2 = module_0.Config(none_type_2, keep_alive=config_1)
    config_2.update_config(none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, converters=dict_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_5():
    str_0 = "Z/1uiD\x0cs.NX!un\\drC"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    config_1 = module_0.Config(none_type_1)
    module_0.DescriptorMeta(config_1)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1)
    none_type_2 = config_1.update()
    config_1.__getattr__(none_type_2)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    config_1 = module_0.Config(none_type_1)
    config_1.__setitem__(none_type_0, config_1)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, converters=dict_0)
    config_1 = module_0.Config()
    config_0.__setitem__(str_0, dict_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_1.LocalCertCreator.TRUSTME
    config_1 = module_0.Config()
    var_1 = config_0.update_config(config_1)
    config_2 = module_0.Config()
    config_3 = module_0.Config(env_prefix=var_1)
    config_0.update_config(var_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    var_0.__setattr__(var_0, var_0)
