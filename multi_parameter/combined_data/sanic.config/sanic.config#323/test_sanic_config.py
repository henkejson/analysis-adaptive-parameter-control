# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    str_0 = "`[Q%Y8$j(p\rqB''K"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0, converters=dict_0)


def test_case_2():
    str_0 = "Token"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.__instancecheck__(config_0, none_type_0)


def test_case_4():
    dict_0 = {}
    str_0 = "VL<h{jhV'rI|.'P"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(dict_0)


def test_case_5():
    config_0 = module_0.Config()
    list_0 = []
    config_0.__setitem__(list_0, list_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "Token"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    var_0 = config_1.__repr__()
    str_0.load_environment_vars(var_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    str_0 = "`[Q%Y8$j(p\rqB''K"
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.update(**config_0)
    str_0 = "`[Q%Y8$j(p\rqB''K"
    config_1 = module_0.Config(none_type_0)
    module_0.Config(env_prefix=none_type_0, converters=str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.update(**config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_1)


def test_case_13():
    str_0 = "|)Dyigi^\tv50\\\nI=Q0L"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1}
    bool_0 = False
    module_0.Config(dict_0, keep_alive=bool_0)
