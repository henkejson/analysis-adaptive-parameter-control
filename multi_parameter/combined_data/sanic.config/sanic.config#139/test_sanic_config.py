# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    config_1 = module_0.Config(config_0, converters=bool_0)
    config_0.update_config(bool_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "UQ}\n"
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_1)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    var_0 = module_1.getmembers(config_0)
    config_1 = module_0.Config(keep_alive=bool_0, converters=var_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    var_0 = module_1.getmembers(config_0)
    var_0.update_config(var_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    var_0 = module_1.getmembers(config_0)
    str_0 = var_0.__str__()
    config_1 = module_0.Config(keep_alive=bool_0, converters=var_0)
    config_1.__setitem__(config_1, config_1)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    var_0 = module_1.getmembers(bool_0)
    str_0 = var_0.__str__()
    config_1 = module_0.Config(keep_alive=bool_0, converters=var_0)
    config_1.update_config(str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    var_0 = module_1.getmembers(config_1)
    str_0 = var_0.__str__()
    str_1 = "U'Qs}\n"
    config_2 = module_0.Config(env_prefix=str_1)
    list_0 = [config_0, var_0]
    none_type_0 = config_1.update(*list_0)
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(none_type_0)
    var_0 = module_1.getmembers(config_0)
    str_0 = var_0.__str__()
    module_0.Config(keep_alive=config_0, converters=str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    str_0 = var_0.__str__()
    config_1 = module_0.Config(env_prefix=str_0)
    list_0 = [config_0, var_0]
    none_type_0 = config_1.update(*list_0)


def test_case_15():
    str_0 = ""
    config_0 = module_0.Config(str_0)
    config_0.load_environment_vars(str_0)


def test_case_16():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    bytes_0 = b"8-\xe8\xd9\xd8\x1d\n$l"
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, bytes_0)
