# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Client has closed the websocket connection"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    none_type_1 = config_0.register_type(config_0)
    none_type_1.__setitem__(str_0, none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.update()
    bool_0 = False
    config_0.__getattr__(bool_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "serve_coro"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_0.update_config(str_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1)
    config_0.__setitem__(bool_0, none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_8():
    int_0 = -1035
    module_0.Config(env_prefix=int_0)


def test_case_9():
    int_0 = 2052
    none_type_0 = None
    str_0 = "cB$.BS^JA"
    str_1 = "\t0QYQra8O=nL]Uw"
    dict_0 = {str_0: str_0, str_1: int_0, str_0: str_1}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(none_type_0)


def test_case_10():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = module_0.Config(config_0, keep_alive=none_type_0, converters=config_0)
    none_type_1 = config_0.register_type(var_0)
    var_1 = module_1.getmembers(config_0)
    config_0.__setitem__(config_0, var_1)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.register_type(var_0)
