# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\x0c+pRW"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    tuple_0 = ()
    config_0 = module_0.Config(tuple_0, keep_alive=tuple_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "C\tXotU@$qrUr"
    bytes_0 = b"Ay_\xc0[\xd0\x86$["
    var_0 = module_1.isdatadescriptor(str_0)
    none_type_0 = None
    module_0.Config(bytes_0, converters=none_type_0)


def test_case_5():
    str_0 = "\x0c+pRW"
    config_0 = module_0.Config(converters=str_0)
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    str_0 = "(\x0c+pRW8"
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.isclass(none_type_0)
    int_0 = 502
    config_0.update_config(int_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "(\x0c+pRW8"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "use_uvloop"
    module_0.Config(converters=str_0)
