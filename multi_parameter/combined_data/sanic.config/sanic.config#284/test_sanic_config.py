# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    default_0 = module_1.Default()


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    bytes_0 = b""
    none_type_1 = None
    config_1 = module_0.Config(
        none_type_1, none_type_1, none_type_1, converters=none_type_1
    )
    config_1.__getattr__(bytes_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, keep_alive=none_type_0)
    var_0 = config_1.update_config(config_1)
    module_0.Config(env_prefix=config_1)


def test_case_6():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    config_0 = module_0.Config(converters=dict_0)
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    config_0 = module_0.Config(converters=dict_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_0)
    config_0.register_type(var_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = 'gQ*Ip??k+vv"'
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    none_type_2 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config()
    none_type_3 = None
    config_2 = module_0.Config(none_type_0, converters=var_1)
    var_1.update_config(none_type_3)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)
    var_0 = config_1.update_config(config_0)
    var_1 = config_0.load_environment_vars()


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    bytes_0 = b""
    none_type_1 = None
    config_1 = module_0.Config(
        none_type_1, none_type_1, none_type_1, converters=none_type_1
    )
    config_0.update_config(bytes_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = ")#R}-[rkZ\\+#QG;Dk"
    none_type_1 = config_0.__setattr__(str_0, config_0)
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_15():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: bool_0}
    module_0.Config(dict_0)
