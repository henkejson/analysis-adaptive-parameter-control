# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G"
    bool_0 = False
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_2():
    str_0 = "lG$gU:1:~0k6_3k&\x0c,"
    str_1 = "k_[S\n~8cBkZs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    bytes_0 = b"\xb2,\xf7\xf4\xa9\x82\xb4y\xabD\xd4I\xfcf\xca\xe9cG\xd3:"
    config_0 = module_0.Config(dict_0, converters=bytes_0)
    var_0 = config_0.load_environment_vars()
    var_0.create_empty_request()


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__setattr__(none_type_0, config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.head_response_ignored(none_type_0, config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "Refresh the application instance. **This is used internally by Sanic**.\n\n        .. warning::\n            This method is intended for internal use only and should not be\n            called directly.\n\n        Args:\n            passthru (Optional[Dict[str, Any]], optional): Optional dictionary\n                of attributes to pass through to the new instance. Defaults to\n                `None`.\n\n        Returns:\n            Sanic: The refreshed application instance.\n        "
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = module_1.LocalCertCreator.AUTO
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "Incoming inspector action: %s"
    none_type_0 = config_0.__setattr__(str_0, var_0)
    module_0.Config(env_prefix=var_0, converters=str_0)


def test_case_11():
    str_0 = "G"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
