# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    bool_1 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    module_0.Config(bool_0, bool_1, bool_1)


def test_case_2():
    bool_0 = True
    module_0.Config(bool_0, keep_alive=bool_0, converters=bool_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "A,`"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.__getattr__(none_type_1)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, bool_0, converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    dict_0 = {}
    none_type_0 = config_0.register_type(var_0)
    str_0 = "Restart failed"
    none_type_1 = config_0.__setattr__(str_0, dict_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "([@!\x0c\x0bTN%n[4\rN\r"
    config_0.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    tuple_0 = (config_0,)
    config_1 = module_0.Config(converters=config_0)
    list_0 = [config_0, tuple_0, tuple_0, tuple_0]
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    config_0.update_config(list_0)
