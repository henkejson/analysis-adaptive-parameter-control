# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, none_type_0)
    module_0.DescriptorMeta(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_4():
    str_0 = "Outputs the exeption as a responsn.\n\n       Returns:\n            HTTPRe#ponse: The rsponse object.\n        "
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    str_1 = "abeST*.wT"
    none_type_0 = config_0.register_type(str_1)
    config_1 = module_0.Config()
    config_1.update_config(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    none_type_3 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "Outputs the exception as a response.\n\n        Returns:\n            HTTPResponse: The response object.\n        "
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.load_environment_vars()
    str_1 = "abeST*.wT"
    none_type_0 = config_0.register_type(str_1)
    config_1 = module_0.Config()
    int_0 = 372
    config_1.update_config(int_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config()
    none_type_1 = config_1.update(**config_1)
    config_2 = module_0.Config(none_type_0, converters=config_1)
    none_type_2 = config_0.update(**config_1)
    str_0 = "aOw]B9P>|N|/Cl"
    none_type_3 = config_1.register_type(str_0)
    module_0.Config(env_prefix=none_type_3, converters=str_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    module_0.Config(bool_0, none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    config_0.__getattr__(none_type_1)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    int_0 = 383
    config_0.update_config(int_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.update(**config_0)
    str_0 = "H.*=;W8n0\x0c\nFUE"
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=none_type_1)
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    config_0.update_config(none_type_1)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
