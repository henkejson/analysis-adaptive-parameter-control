# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "'.&R>,g\n"
    str_1 = 'b"'
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.Config(env_prefix=list_0)


def test_case_3():
    str_0 = "60"
    str_1 = "`nI%~1,#c*mH="
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(dict_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(var_0, keep_alive=str_1)
    var_1 = module_1.getmembers(config_1, var_0)
    config_0.update_config(var_0)


def test_case_4():
    str_0 = "Vi&tv;lR+V=I!<odtaK"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)


def test_case_8():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    str_0 = "WEBSOCKET_PING_TIMEOUT"
    bool_0 = True
    none_type_0 = config_0.__setitem__(str_0, bool_0)
    none_type_1 = config_0.update()


def test_case_9():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    config_0.update_config(list_0)


def test_case_10():
    str_0 = "#"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.Config(dict_0)


def test_case_11():
    str_0 = ":.\\F\r\rz)R<<p"
    str_1 = "`nI%~1,#c*mH="
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0)
    module_0.Config(converters=str_0)


def test_case_12():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.load_environment_vars(str_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(dict_0)
