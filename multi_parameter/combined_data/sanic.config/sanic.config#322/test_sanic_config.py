# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_2():
    str_0 = "SX8"
    str_1 = "/A~UZ+CFc()\\i%M^(3"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1.update_config(none_type_0)


def test_case_3():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "T\"8`?O'm9HQvS45U"
    str_1 = "\\`K\\DF"
    none_type_0 = config_0.__setitem__(str_0, str_1)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_5():
    str_0 = "jvI$)*]@j\rwjmuy*e\\\tf"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = None
    config_0.__getattr__(none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "[I!fG8+>U"
    config_0 = module_0.Config(converters=str_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "\\`K\\DF"
    none_type_0 = None
    module_0.Config(none_type_0, keep_alive=bool_0, converters=str_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    bool_0.__setattr__(var_0, var_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "c"
    none_type_1 = config_0.update()
    config_0.update_config(str_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
