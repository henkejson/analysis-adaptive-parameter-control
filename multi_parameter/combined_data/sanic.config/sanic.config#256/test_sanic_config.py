# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import sanic.http.stream as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x82H\x00'\xa98WD\x01\xd7\x8b\xdd\x03_\xf8\xb6N7"
    config_0 = module_0.Config(keep_alive=bytes_0)
    float_0 = -736.6
    module_1.load_module_from_file_location(float_0, *float_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=var_0, converters=config_0)
    var_1 = var_0.__repr__()
    var_0.respond(var_1)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    bytes_0 = b"Accepted"
    var_0 = module_2.isdatadescriptor(bytes_0)
    var_1 = module_2.isdatadescriptor(var_0)
    dict_0 = {var_1: bytes_0, bytes_0: var_1}
    str_0 = "Hc5o"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(dict_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.getmembers(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "R,l"
    none_type_2 = config_0.__setitem__(str_0, config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"\xe6\x04\x1f\x0e\x89\xe8{\xb6CR"
    config_0.update_config(bytes_0)


def test_case_12():
    str_0 = "REQUEST_BUFFER_SIZE"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.Config(dict_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [var_0, var_0, config_0]
    none_type_0 = config_0.update(*list_0, **config_0)
    stream_0 = module_3.Stream()
    module_0.DescriptorMeta(var_0)
