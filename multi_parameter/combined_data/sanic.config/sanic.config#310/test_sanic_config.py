# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "$oNkf0q oAlQn]\nU"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_2():
    str_0 = "]Ng1>=j3q$Ng<XBb"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    str_1 = "Block until the signal is next dispatched.\n\n        Return the context of the signal dispatch, if any.\n        "
    none_type_0 = config_0.__setitem__(str_1, str_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_2 = module_0.Config(config_1)
    var_0 = config_0.update_config(config_2)


def test_case_4():
    str_0 = "]Ng1>=j3q$Ng<XBb"
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = None
    config_1.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    bytes_0 = b"Request-URI Too Long"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setattr__(var_0, config_1)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
