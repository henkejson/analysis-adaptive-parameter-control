# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_1)
    var_0.__setitem__(var_0, none_type_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(bool_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_1 = module_0.Config(config_0, converters=none_type_0)
    config_1.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    config_0.__setitem__(str_0, str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_1)
    config_1 = module_0.Config(none_type_0, none_type_0)
    module_1.load_module_from_file_location(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_0 = None
    var_0 = module_2.isdatadescriptor(config_1)
    none_type_1 = None
    tuple_0 = (var_0,)
    config_2 = module_0.Config(none_type_0, converters=tuple_0)
    config_0.__setitem__(none_type_0, none_type_1)


def test_case_7():
    str_0 = ";0.)x'O.q2Ccw|"
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    none_type_2 = None
    bool_1 = True
    list_0 = [bool_1, bool_1]
    config_1 = module_0.Config(none_type_2, keep_alive=none_type_2)
    config_1.__getattr__(list_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.update_config(config_0)
    str_0 = "FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    bytes_0 = b"e0\xa1,\xce\xa1f"
    module_0.Config(env_prefix=var_1, keep_alive=var_1, converters=bytes_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_1 = module_0.Config()
    bytes_0 = b"Locked"
    var_0 = config_1.update_config(config_1)
    str_0 = "FALLBACK_ERROR_FORMAT"
    none_type_1 = config_1.__setitem__(str_0, bool_0)
    str_1 = "FALLBACK_ERROR_FORMAT"
    dict_0 = {var_0: bool_0}
    config_2 = module_0.Config(dict_0, str_1, config_0, converters=config_0)
    config_2.__setitem__(str_0, bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    str_0 = "AUTO_RELOAD"
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_1 = module_0.Config()
    config_1.update_config(str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    config_0.__setitem__(str_0, var_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_1)
    var_1 = config_1.update_config(config_1)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, var_0)
