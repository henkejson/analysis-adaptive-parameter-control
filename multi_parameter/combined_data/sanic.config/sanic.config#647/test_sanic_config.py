# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_2():
    float_0 = 767.051
    module_0.Config(float_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = None
    var_0 = config_0.update_config(config_0)
    str_0 = "^SZG~z$o^0+oI\x0cuNP"
    none_type_2 = config_0.__setitem__(str_0, config_0)
    var_1 = var_0.__bool__()
    config_1 = module_0.Config(none_type_1, none_type_1, converters=none_type_1)
    config_0.update_config(var_1)


def test_case_4():
    str_0 = "W!s-w,D}D\t)|Q"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bool_0 = True
    config_0.__getattr__(bool_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, none_type_1, converters=none_type_1)
    str_0 = 'j:"'
    config_0.update_config(str_0)


def test_case_10():
    str_0 = ",1CN?4cC2W;hB^=:_cK1"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=none_type_0)
    module_0.DescriptorMeta(str_0, *config_0)


def test_case_11():
    config_0 = module_0.Config()
    default_0 = module_1.Default()
    str_0 = "lBb= nHsd"
    config_1 = module_0.Config(env_prefix=str_0)


def test_case_12():
    str_0 = "\rD1Y"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_1 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    module_0.DescriptorMeta(var_0)


def test_case_13():
    str_0 = "@B$9[j;("
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    bool_0 = False
    module_0.Config(dict_0, keep_alive=bool_0)
