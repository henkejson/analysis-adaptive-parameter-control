# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import sanic.http.http1 as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(none_type_0, keep_alive=bool_0)
    config_0.__getattr__(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_5():
    int_0 = 236
    module_0.Config(env_prefix=int_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    bool_0 = True
    config_1 = module_0.Config(none_type_0, keep_alive=bool_0)
    none_type_1 = None
    config_1.update(*none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "c+"
    bool_0 = False
    config_0 = module_0.Config(converters=bool_0)
    config_0.update_config(str_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(bool_0)


def test_case_11():
    tuple_0 = ()
    var_0 = module_1.LocalCertCreator.AUTO
    config_0 = module_0.Config(keep_alive=var_0, converters=var_0)
    module_2.Http(tuple_0)


def test_case_12():
    str_0 = "#gp;q;%texTCJ$"
    module_0.Config(converters=str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "Nd78PtEo"
    dict_0 = {str_0: none_type_0, str_0: str_0}
    config_1 = module_0.Config(dict_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)
