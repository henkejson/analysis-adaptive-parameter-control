# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Ow/uhZaw\x0bW9TbaG\x0c."
    str_1 = "\n        HTTP-protocol-specific new connection handler\n        "
    dict_0 = {str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    config_0.__getattr__(dict_0)


def test_case_2():
    str_0 = "Ow/uhZaw\x0bW9TbaG\x0c."
    str_1 = "\n        HTTP-protocol-specific new connection handler\n        "
    config_0 = module_0.Config(keep_alive=str_0)
    dict_0 = {str_0: str_0, str_1: str_1}
    config_1 = module_0.Config(dict_0, converters=dict_0)
    bytes_0 = b""
    config_2 = module_0.Config(bytes_0)
    config_1.update_config(str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    module_0.Config(bool_0, keep_alive=bool_0, converters=bool_0)


def test_case_5():
    str_0 = "#3DG:\x0c;94dqn$O{X\\"
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "\r`6<}"
    config_0.__setitem__(none_type_0, str_0)


def test_case_7():
    str_0 = "Ow/uhZaw\x0bW9TbaG\x0c."
    str_1 = "\n        HTTP-protocol-specific new conneption handler\n        "
    dict_0 = {str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_1)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    str_0 = "\n        HTTP-protocol-specific new connection handler\n        "
    module_0.Config(converters=str_0)


def test_case_11():
    str_0 = "Ow/uhZaw\x0bW9TbaG\x0c."
    str_1 = "\n        HTTP-protocol-specific new conneption handler\n        "
    str_2 = "_FALLBACK_ERROR_FORMAT"
    str_3 = "a?#\rl="
    dict_0 = {str_2: str_0, str_0: str_1, str_3: str_1, str_0: str_3}
    module_0.Config(dict_0, keep_alive=str_3)


def test_case_12():
    str_0 = "Ow/uhZaw\x0bW9TbaG\x0c."
    str_1 = "\n        HTTP-protocol-specific new connection handler\n        "
    dict_0 = {str_0: str_0, str_1: str_1}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b""
    config_1 = module_0.Config(bytes_0)
    str_2 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_2, str_0)
