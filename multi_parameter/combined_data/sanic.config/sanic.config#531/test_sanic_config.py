# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )


def test_case_2():
    str_0 = "H/,DkPv%SzU)"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_1.load_environment_vars()
    config_1.__getattr__(var_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.register_type(bool_0)
    module_0.Config(env_prefix=config_0)


def test_case_7():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "os"
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_10():
    str_0 = "KEEP_ALIVE_TIMEOUT"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_0.load_environment_vars(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_2 = module_0.Config()
    config_0.register_type(none_type_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    config_0.update_config(var_1)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
