# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)


def test_case_1():
    str_0 = "Mzx f"
    config_0 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    bool_0 = True
    none_type_1 = config_0.register_type(bool_0)
    config_1 = module_0.Config(none_type_0, keep_alive=bool_0)
    config_1.__getattr__(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    list_0 = [config_0]
    none_type_1 = config_0.update(*list_0)
    list_1 = [none_type_1, none_type_1]
    var_0 = module_1.isclass(list_1)
    tuple_0 = (config_0, var_0, var_0, var_0)
    none_type_2 = config_0.register_type(tuple_0)
    str_0 = "_x[;@V!v$QjP\\$O"
    list_2 = [none_type_2, config_0, tuple_0]
    none_type_3 = config_0.__setitem__(str_0, list_2)
    config_1 = module_0.Config(keep_alive=none_type_3)
    module_1.getmembers(none_type_3, list_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_8():
    float_0 = 0.0
    config_0 = module_0.Config(keep_alive=float_0)


def test_case_9():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "tEys&y?3IxQq>"
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    module_0.Config(config_1, config_1)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = config_0.update(**config_0)
    config_0.__setitem__(str_0, str_0)
