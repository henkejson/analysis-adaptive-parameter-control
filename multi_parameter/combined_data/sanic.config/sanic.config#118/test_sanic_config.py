# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = -1810
    config_0 = module_0.Config(keep_alive=int_0)
    config_0.update_config(int_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = var_0.__bool__()
    var_0.__subclasscheck__(var_0, none_type_0)


def test_case_3():
    str_0 = "3"
    module_0.Config(str_0, keep_alive=str_0, converters=str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    int_0 = -1810
    config_0.update_config(int_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "lgmud /|J I]_\x0bb\nw\nld"
    config_0 = module_0.Config(env_prefix=str_0)
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_2 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    none_type_1 = config_2.register_type(none_type_0)
    var_0 = config_2.update_config(config_2)
    config_3 = module_0.Config(converters=none_type_0)
    int_0 = -1810
    config_2.update_config(int_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_9():
    default_0 = module_1.Default()
    bool_0 = False
    str_0 = default_0.__str__()
    config_0 = module_0.Config(bool_0)
    str_1 = "G"
    list_0 = [str_0, bool_0, bool_0]
    none_type_0 = config_0.__setitem__(str_1, list_0)
    var_0 = module_2.getmembers(bool_0)
    var_0.respond(config_0)


def test_case_10():
    str_0 = "Returns the response body.\n\n        Returns:\n            Optional[bytes]: The response body\n        "
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"\x17\x97\x04W\xaaV\xbd.\x9c0\x0c"
    config_0.update_config(bytes_0)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    config_0.register_type(none_type_1)


def test_case_13():
    str_0 = "2j"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=str_0)
    none_type_1 = config_0.register_type(str_0)
    config_1 = module_2.getmembers(none_type_1, none_type_1)
    config_1.__getattr__(config_1)


def test_case_14():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(converters=none_type_0)
    int_0 = -1810
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_0, int_0)


def test_case_15():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)
