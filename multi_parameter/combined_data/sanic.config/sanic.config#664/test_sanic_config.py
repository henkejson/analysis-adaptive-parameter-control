# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import sanic.constants as module_2
import inspect as module_3
import sanic.http.stream as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "charset"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    default_0 = module_1.Default()
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    var_0 = module_3.isclass(local_cert_creator_0)
    config_1 = module_0.Config(keep_alive=default_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "5t0f"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_0.__instancecheck__(str_0, config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    module_0.DescriptorMeta(config_0)


def test_case_5():
    str_0 = "signal_router"
    config_0 = module_0.Config()
    list_0 = [str_0, str_0]
    none_type_0 = None
    module_0.Config(env_prefix=list_0, converters=none_type_0)


def test_case_6():
    default_0 = module_1.Default()
    config_0 = module_0.Config(keep_alive=default_0)
    var_0 = config_0.update_config(default_0)


def test_case_7():
    default_0 = module_1.Default()
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    str_0 = "KEEP_ALIVE"
    none_type_1 = config_0.__setitem__(str_0, default_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_3.isclass(local_cert_creator_0)
    config_1 = module_0.Config(keep_alive=default_0)
    config_2 = module_0.Config(keep_alive=var_0)
    stream_0 = module_4.Stream()
    var_1.respond(stream_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = 'RY+K f1[pAx]Y0Lb.,u"'
    module_0.Config(converters=str_0)


def test_case_10():
    str_0 = "Bad body type. Expected str, got "
    none_type_0 = None
    str_1 = "Y=N"
    str_2 = '"y '
    str_3 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: none_type_0, str_3: str_1}
    module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    default_0 = module_1.Default()
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    var_0 = module_3.isclass(local_cert_creator_0)
    config_0 = module_0.Config(keep_alive=default_0)
    config_0.update_config(local_cert_creator_0)


def test_case_14():
    default_0 = module_1.Default()
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, default_0)
