# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_1.update_config(config_1)
    var_1 = var_0.__repr__()


def test_case_2():
    str_0 = ".ThJ]\\3:p->fG"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.load_environment_vars()
    var_0.__setitem__(str_0, var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_4():
    str_0 = '<b"z81LDG$'
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.register_type(config_0)
    bool_0 = False
    config_1 = module_0.Config(none_type_1, var_0)
    config_0.update_config(bool_0)


def test_case_5():
    bool_0 = False
    str_0 = '<b"z81LDG$'
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_2 = module_0.Config(env_prefix=str_0)
    var_0 = config_1.update_config(config_1)
    var_1 = module_1.getmembers(var_0)
    var_2 = module_1.getmembers(var_1)
    none_type_0 = config_0.register_type(bool_0)
    var_0.create_empty_request()


def test_case_6():
    str_0 = '<b"z81LDG$'
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=str_0)
    var_0 = config_1.update_config(config_1)
    var_1 = module_1.getmembers(var_0)
    var_2 = module_1.getmembers(var_1)
    var_3 = module_1.isclass(var_0)
    config_1.__getattr__(var_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = '<b"z81LDG$'
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_1.update_config(config_1)
    var_1 = module_1.getmembers(str_0)
    var_2 = module_1.isclass(var_0)
    config_1.__getattr__(var_0)


def test_case_11():
    bool_0 = False
    str_0 = '<b"z81LDG$'
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.load_environment_vars()
    str_1 = "m4/(NbZha(6t"
    var_1 = module_1.isclass(config_0)
    var_2 = config_1.update_config(config_1)
    config_2 = module_0.Config(var_2, converters=str_0)
    none_type_0 = config_0.register_type(bool_0)
    config_3 = module_0.Config(env_prefix=var_1)
    config_1.update_config(str_1)


def test_case_12():
    str_0 = 'zb"\x0bz81LDG$'
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.load_environment_vars()
    str_1 = "m4/NbcZha(\n6t"
    none_type_0 = config_0.__setitem__(str_1, config_0)
    var_1 = config_1.update_config(config_1)
    module_0.Config(var_1, converters=str_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
