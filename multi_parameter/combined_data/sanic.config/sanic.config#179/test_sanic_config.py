# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    str_0 = "bCGJ0\rYC`\n&\x0b\x0cg1}[LG"
    none_type_1 = config_0.__setattr__(str_0, str_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)


def test_case_3():
    str_0 = "INSPECTOR_PORT"
    module_0.Config(keep_alive=str_0, converters=str_0)


def test_case_4():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_5():
    bytes_0 = b"I|c+"
    none_type_0 = None
    module_0.Config(bytes_0, none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "-:w/mH"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_11():
    bool_0 = False
    str_0 = "Normalize address fields of proxy headers.\n\n    Args:\n        addr (str): An address string.\n\n    Returns:\n        str: A normalized address string.\n    "
    str_1 = "A[Om$sIK:xl9z(tfRC&"
    str_2 = "lost"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: bool_0, str_2: str_1}
    set_0 = {bool_0, str_1, str_2}
    config_0 = module_0.Config(dict_0, str_0, bool_0, converters=set_0)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    module_0.Config(none_type_0, str_0, str_0, converters=str_0)


def test_case_13():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)
