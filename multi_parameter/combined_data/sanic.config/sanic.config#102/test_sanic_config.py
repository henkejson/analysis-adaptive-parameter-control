# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    complex_0 = -593.2273 + 4231j
    module_0.Config(keep_alive=config_0, converters=complex_0)


def test_case_2():
    list_0 = []
    tuple_0 = ()
    config_0 = module_0.Config(env_prefix=tuple_0)
    var_0 = config_0.load_environment_vars()
    var_1 = module_1.getmembers(list_0, tuple_0)
    str_0 = var_1.__str__()
    var_1.__getattr__(list_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "v}C[OC9T&C"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    var_0 = config_2.load_environment_vars()
    none_type_1 = config_1.register_type(config_1)
    config_3 = module_0.Config(converters=none_type_1)
    config_0.__getattr__(config_1)


def test_case_9():
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    str_0 = ":"
    config_0 = module_0.Config(env_prefix=str_0)
    bytes_0 = b"E\x17\x1ai\x12\x82\xd3\xb3\xbf\nb:P\x0c(r\xe5"
    str_1 = ';\tD{(9m+\rvb^Mlf~j"5H'
    module_2.load_module_from_file_location(bytes_0, str_1)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "3zoPx%9;="
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_1.load_environment_vars()
    config_1.update_config(str_0)


def test_case_12():
    str_0 = ">xGhL[X%'x`l^0hANe."
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_1 = module_0.Config()
    config_1.load_environment_vars(config_1)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_1)


def test_case_14():
    bytes_0 = b"6\x8f\x1a"
    config_0 = module_0.Config(converters=bytes_0)
    config_1 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_1.register_type(none_type_0)
    var_0 = config_1.update_config(config_1)
    var_1 = config_1.load_environment_vars()
    config_1.update_config(var_1)
