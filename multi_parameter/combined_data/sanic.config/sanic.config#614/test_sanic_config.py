# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "e *oVJv/']ut\\#\"q'j"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    str_0 = "c]A\t2aKWv"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_4():
    default_0 = module_1.Default()
    tuple_0 = (default_0,)
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(tuple_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_6():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config()
    str_0 = "(alKK]7Yx"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    int_0 = 891
    str_1 = ""
    str_2 = "{t\x0cOck;i_G[Kd>"
    none_type_2 = config_0.__setitem__(str_2, int_0)
    config_1.update_config(str_1)


def test_case_10():
    bytes_0 = b"No Content"
    var_0 = module_2.isdatadescriptor(bytes_0)
    var_1 = var_0.__repr__()
    tuple_0 = module_2.getmembers(var_1, var_0)
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(tuple_0)


def test_case_11():
    str_0 = "a;?B"
    module_0.Config(str_0, str_0, str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    bool_0 = True
    none_type_1 = config_0.register_type(bool_0)
    none_type_2 = config_0.update(**config_0)
    config_0.__setattr__(str_0, none_type_0)
