# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "w'I"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_2():
    bool_0 = True
    var_0 = module_1.getmembers(bool_0)
    config_0 = module_0.Config(keep_alive=var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1 = module_0.Config()


def test_case_4():
    str_0 = " @ "
    str_1 = "`RwX_/Dzjey*t"
    str_2 = "9+I.nA*X"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_2}
    config_0 = module_0.Config(dict_0)


def test_case_5():
    str_0 = "Unexpected exception in websocket keepalive ping task."
    var_0 = module_1.isclass(str_0)
    module_0.Config(keep_alive=var_0, converters=str_0)


def test_case_6():
    str_0 = "P"
    var_0 = module_1.isclass(str_0)
    config_0 = module_0.Config(var_0, str_0, var_0, converters=var_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(env_prefix=none_type_1, converters=none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "w'I"
    var_0 = module_2.LocalCertCreator.AUTO
    config_0 = module_0.Config(keep_alive=var_0, converters=str_0)
    var_1 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = ",LyG75Rn"
    config_0 = module_0.Config(converters=str_0)
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    str_0 = "P"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    module_0.Config(config_0, str_0, config_0, converters=config_0)
