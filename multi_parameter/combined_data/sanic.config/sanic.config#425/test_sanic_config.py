# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "u;O9vw%M$Tiv<T$J"
    module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    var_0 = config_1.load_environment_vars()


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_4():
    float_0 = 3797.323568606209
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)
    var_0 = module_1.getmembers(config_0)
    config_0.__setitem__(float_0, var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "q#6^"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    config_3 = module_0.Config(converters=str_0)
    module_2.check_error_format(config_0)


def test_case_9():
    dict_0 = {}
    list_0 = [dict_0]
    str_0 = "before_reload_trigger"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(list_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    config_1.__setitem__(var_0, var_0)


def test_case_11():
    float_0 = 3791.0
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=float_0, converters=config_0)
    var_0 = config_1.update_config(config_0)
    config_1.__getattr__(config_0)


def test_case_12():
    str_0 = "q#6^"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_1.register_type(none_type_0)
    config_3 = module_0.Config()
    none_type_2 = None
    config_4 = module_0.Config(keep_alive=none_type_2)
    none_type_3 = config_4.__setattr__(str_0, str_0)
    config_4.update_config(str_0)
