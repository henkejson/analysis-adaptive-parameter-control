# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    var_0 = module_1.isclass(bool_0)
    bool_1 = False
    config_0 = module_0.Config(keep_alive=bool_1)
    none_type_0 = config_0.register_type(var_0)
    none_type_1 = None
    module_0.DescriptorMeta(none_type_1)


def test_case_2():
    none_type_0 = None
    str_0 = "|\\j'\rirtqWZ<8x3,v"
    str_1 = "-_-vG:*fjD$(0NTW"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_0, str_1: str_1}
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    none_type_1 = config_0.update(**dict_0)
    config_1 = module_0.Config(none_type_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(var_0)


def test_case_3():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.load_environment_vars()
    config_0.register_type(config_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(bool_0)
    list_0 = [none_type_0, none_type_0, config_0]
    config_0.__getattr__(list_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    list_0 = []
    none_type_1 = config_0.update(*list_0)
    none_type_2 = config_0.register_type(list_0)


def test_case_9():
    float_0 = -1916.3128
    config_0 = module_0.Config()
    descriptor_meta_0 = module_1.isdatadescriptor(config_0)
    str_0 = "k=g0pQ]W"
    none_type_0 = config_0.__setattr__(str_0, float_0)
    str_1 = "Required parameter `"
    none_type_1 = config_0.__setitem__(str_1, str_1)
    descriptor_meta_0.register(config_0, str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_11():
    none_type_0 = None
    str_0 = "|\\j'\rirtqWZ<8x3,v"
    str_1 = "-_-vG:*fjD$(0NTW"
    str_2 = "\x0bA&i"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_0, str_2: str_2}
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config(converters=local_cert_creator_0)
    var_0 = config_1.update_config(dict_0)
    var_0.update_config(var_0)


def test_case_12():
    none_type_0 = None
    str_0 = "|\\j'\rirtqWZ<8x3,v"
    str_1 = "-_-vG:*fjD$(0NTW"
    str_2 = "\x0bA&i"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_0, str_2: str_2}
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    list_0 = [config_0, dict_0]
    none_type_1 = config_0.update(*list_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.update_config(str_0)


def test_case_13():
    none_type_0 = None
    str_0 = "|\\j'\rirtqWZ<8x3,v"
    str_1 = "-_-vG:*fjD$(0NTW"
    str_2 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_0, str_2: str_2}
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    config_0.update(**dict_0)
