# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    none_type_0.__setitem__(none_type_0, config_0)


def test_case_3():
    str_0 = "F^{)B]qgr<cK\x0c.9| N"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    module_0.DescriptorMeta(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "%DO\tUO@kw3B\x0b=OR}1"
    none_type_0 = None
    module_0.Config(none_type_0, converters=str_0)


def test_case_7():
    config_0 = module_0.Config()
    list_0 = [config_0]
    none_type_0 = config_0.register_type(list_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "Y_,w"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    none_type_1 = config_0.update(**config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_0)
    config_1.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "Y_,w"
    config_0.update_config(str_0)


def test_case_11():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0, keep_alive=dict_0, converters=dict_0)
    config_0.load_environment_vars(config_0)


def test_case_12():
    str_0 = "i:=4i"
    set_0 = {str_0, str_0, str_0}
    config_0 = module_0.Config()
    config_0.update_config(set_0)


def test_case_13():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(var_0)
    config_0.__getattr__(var_1)
