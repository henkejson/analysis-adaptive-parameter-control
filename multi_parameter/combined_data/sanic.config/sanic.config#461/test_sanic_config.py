# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = -2564.73002
    bool_0 = False
    module_0.Config(env_prefix=float_0, keep_alive=bool_0)


def test_case_2():
    str_0 = "9Hj"
    none_type_0 = None
    module_0.Config(str_0, keep_alive=none_type_0, converters=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    bytes_0 = b"\xb8K\xb8\xf5\x15v\xca\x13\xda\xd04w\x0e\xbeJ\xb0"
    config_0.update_config(bytes_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "AUTO_EXTEND"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "A?(Pc]zJ6z)gcYH+0"
    var_0.__setitem__(str_0, str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    float_0 = 2853.572467923476
    none_type_1 = config_0.update(**config_0)
    str_0 = "v2.4sqR_"
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(float_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    float_0 = -830.1
    str_0 = "v2.4sqR_"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(float_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    config_0.update_config(list_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_14():
    str_0 = "AUTO_EXTEND"
    str_1 = "LOCAL_CERT_CREATOR"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_1, keep_alive=bool_0)
    config_0.__setattr__(str_1, str_0)
