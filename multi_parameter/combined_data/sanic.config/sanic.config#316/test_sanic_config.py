# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    str_0 = config_0.__str__()
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_1.register_type(config_0)
    config_2 = module_0.Config()
    none_type_1 = config_0.update(**config_0)
    var_0 = config_0.load_environment_vars()
    config_2.update(*var_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()


def test_case_3():
    config_0 = module_0.Config()
    str_0 = config_0.__str__()
    config_1 = module_0.Config(config_0)
    int_0 = -1001
    tuple_0 = (int_0,)
    none_type_0 = config_0.register_type(tuple_0)
    config_2 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update(**config_1)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__bool__()
    var_1.register(tuple_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    bytes_0 = b"HTTP/1.1 100 Continue\r\n\r\n"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_6():
    str_0 = "Vn}D0+U3*|c65r-joX"
    bytes_0 = b"\xefH\x7f1\x06i\x90]\xbb\xd7\xb2\x01q\xa1gH\x85\x18"
    module_0.Config(env_prefix=str_0, converters=bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bool_0 = True
    config_1 = module_0.Config(config_0)
    int_0 = -1001
    tuple_0 = (int_0,)
    none_type_0 = config_0.register_type(tuple_0)
    config_2 = module_0.Config(env_prefix=none_type_0)
    module_0.Config(env_prefix=bool_0, converters=config_1)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__subclasscheck__(none_type_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = '|j WE84"coz'
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_1.load_environment_vars()
    var_1 = config_1.update_config(config_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    int_0 = -1001
    tuple_0 = (int_0,)
    none_type_0 = config_0.register_type(tuple_0)
    none_type_1 = config_1.register_type(none_type_0)
    config_2 = module_0.Config(converters=config_1)
    config_3 = module_0.Config(keep_alive=var_0)
    config_3.update(*none_type_0, **config_2)
