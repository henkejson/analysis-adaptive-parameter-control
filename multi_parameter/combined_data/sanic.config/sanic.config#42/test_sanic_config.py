# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_2():
    int_0 = 722
    module_0.Config(env_prefix=int_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    str_0 = "dg"
    config_0 = module_0.Config(keep_alive=str_0)
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_1.update()
    config_2 = module_0.Config(env_prefix=none_type_0, converters=config_1)
    float_0 = 20.0
    module_0.DescriptorMeta(float_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_7():
    str_0 = "dg"
    config_0 = module_0.Config(keep_alive=str_0)
    config_1 = module_0.Config(env_prefix=str_0)
    str_1 = "C\nQNQ%iMu^3vo"
    none_type_0 = config_1.__setattr__(str_1, str_1)
    none_type_1 = config_1.update()
    config_2 = module_0.Config(env_prefix=none_type_1, converters=config_1)
    config_0.update_config(str_0)


def test_case_8():
    str_0 = "J,wA5@(D#\x0bc#2/[+U"
    none_type_0 = None
    module_0.Config(none_type_0, str_0, converters=str_0)


def test_case_9():
    bool_0 = True
    str_0 = "ITr3i1z&[c"
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.load_environment_vars()
    var_0.__new__(bool_0, bool_0, bool_0, bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    bool_0 = False
    none_type_1 = config_0.register_type(var_0)
    config_1 = module_0.Config(keep_alive=bool_0)
    config_2 = module_0.Config(config_1, keep_alive=none_type_1, converters=none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "\n  Perhaps you meant "
    dict_0 = {str_0: str_0, str_0: none_type_0, str_1: str_1}
    module_0.Config(dict_0)
