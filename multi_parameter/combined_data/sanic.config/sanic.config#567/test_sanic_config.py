# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_2():
    str_0 = "K$zh"
    module_0.Config(str_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.create_empty_request()


def test_case_7():
    str_0 = '/xz~"@z6g%0'
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    module_1.check_error_format(config_0)


def test_case_8():
    int_0 = -706
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=int_0)
    var_0 = config_0.load_environment_vars()
    var_0.update_config(int_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(var_0, config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(var_1)


def test_case_13():
    bytes_0 = b"\x91\xbaZ\xf6S\xec\x98\x9b\xc6\xe8\x8dp"
    config_0 = module_0.Config(converters=bytes_0)
    config_0.__setitem__(bytes_0, config_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    none_type_0 = config_0.register_type(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, none_type_0)
