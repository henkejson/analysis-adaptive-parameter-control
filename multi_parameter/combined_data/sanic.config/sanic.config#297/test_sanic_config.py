# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(converters=dict_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.__getattr__(none_type_0)


def test_case_2():
    str_0 = "ob% X.\r[o2rN^pg:-M"
    str_1 = "kHK.%.8q;pq4 ?\r"
    var_0 = module_1.getmembers(str_0)
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=var_0)
    dict_0 = {none_type_0: str_1, none_type_0: none_type_0, str_0: config_0}
    config_0.update_config(dict_0)


def test_case_3():
    float_0 = 794.64445
    str_0 = ".=h~"
    module_0.Config(float_0, str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    dict_0 = {}
    str_0 = "\x0c"
    config_0 = module_0.Config(dict_0, str_0, converters=dict_0)
    config_0.__getattr__(dict_0)


def test_case_7():
    str_0 = "Q$\x0b"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)


def test_case_8():
    str_0 = "ob% X.\r[o2rN^pg-M"
    str_1 = "kHK.%.8q;pq4 ?\r"
    var_0 = module_1.getmembers(str_0)
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.__setitem__(str_1, str_0)
    config_0.update_config(var_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_1.isdatadescriptor(dict_0)
    var_1 = var_0.__bool__()
    config_0 = module_0.Config(var_1, var_0, converters=dict_0)
    module_2.load_module_from_file_location(var_1, **var_1)


def test_case_10():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)
