# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(env_prefix=bool_0, keep_alive=bool_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    module_0.Config(env_prefix=bool_0, converters=none_type_0)


def test_case_3():
    bytes_0 = b"\xa5\x8ac{\x93\xee\xa2c\xdd"
    str_0 = bytes_0.__str__()
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = 'State of HTTP request.\n\n    Args:\n        url_bytes (bytes): Raw URL bytes.\n        headers (Header): Request headers.\n        version (str): HTTP version.\n        method (str): HTTP method.\n        transport (TransportProtocol): Transport protocol.\n        app (Sanic): Sanic instance.\n        head (bytes, optional): Request head. Defaults to `b""`.\n        stream_id (int, optional): HTTP/3 stream ID. Defaults to `0`.\n    '
    config_1 = module_0.Config()
    none_type_0 = config_1.register_type(config_1)
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    var_0.__setattr__(str_0, str_0)


def test_case_5():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__repr__()
    var_2 = module_1.isclass(var_1)
    config_0.__getattr__(var_0)


def test_case_7():
    config_0 = module_0.Config()
    bytes_0 = b"\xa5\x8ac{\x93\xee\xa2c\xdd"
    config_1 = module_0.Config(config_0)
    module_0.Config(converters=bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=bool_0, converters=none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0, keep_alive=config_0, converters=config_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)
    var_0.register_type(var_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_14():
    float_0 = 1.1
    config_0 = module_0.Config()
    str_0 = "d]p"
    none_type_0 = config_0.__setattr__(str_0, float_0)
    config_1 = module_0.Config(converters=config_0)
    str_1 = "S"
    config_2 = module_0.Config(env_prefix=str_1)
    var_0 = module_1.getmembers(config_1)
    none_type_1 = config_0.register_type(config_0)
    config_0.load_environment_vars(str_1)
