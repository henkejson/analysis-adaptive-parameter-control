# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Exception occurred while handling uri: %s"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    str_0 = "*Tau\t^XR+z5J~?ozQc~"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=str_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_4():
    str_0 = "class"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.register_type(str_0)
    str_1 = "RESPONSE_TIMEOUT"
    none_type_2 = config_0.__setattr__(str_1, none_type_1)
    var_0 = config_0.__getattr__(str_1)
    var_1 = module_1.isclass(var_0)
    var_1.update()


def test_case_5():
    str_0 = "class"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    bool_0 = False
    config_0.__getattr__(bool_0)


def test_case_6():
    str_0 = "class"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.register_type(str_0)
    str_1 = "RESPONSE_TIMEOUT"
    none_type_2 = config_0.__setattr__(str_1, none_type_1)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    int_0 = -10
    str_0 = "*c"
    str_1 = "G\x0c"
    str_2 = "close"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_0.__getattr__(int_0)


def test_case_10():
    str_0 = "clasns"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "class"
    none_type_0 = None
    str_1 = "RESPONSE_TIMEOUT"
    config_0 = module_0.Config()
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    config_1 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.load_environment_vars(none_type_0)


def test_case_12():
    str_0 = "class"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    var_0 = module_1.getmembers(str_0)
    str_1 = "RESPONSE_TIMEOUT"
    none_type_1 = config_0.__setattr__(str_1, var_0)
    str_2 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_2, none_type_0)
