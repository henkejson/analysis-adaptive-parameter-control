# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = 152.2
    module_0.Config(converters=float_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)


def test_case_3():
    str_0 = ";@^\\4wH"
    str_1 = " has not yet been registered to an app"
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)


def test_case_5():
    str_0 = ";@^\\4wH"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.update_config(str_0)


def test_case_6():
    str_0 = "keep_alive_timeout"
    module_0.Config(converters=str_0)


def test_case_7():
    str_0 = "keep_alive_timeout"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)


def test_case_9():
    str_0 = ";@^\\4wH"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
