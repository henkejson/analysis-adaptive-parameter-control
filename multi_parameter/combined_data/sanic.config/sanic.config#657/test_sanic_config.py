# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "&;HM%|FMl"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = module_1.isclass(str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    bool_0 = True
    config_2 = module_0.Config(keep_alive=bool_0, converters=config_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    config_2 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.update_config(config_2)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(config_0)
    var_1 = config_0.update_config(config_0)
    str_0 = ","
    config_1.update_config(str_0)


def test_case_10():
    bool_0 = False
    str_0 = "I4U[0\n/e\nCU}{~6"
    module_0.Config(bool_0, converters=str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_1 = module_0.Config(config_0)
    str_0 = "7mn3"
    none_type_0 = config_1.__setitem__(str_0, var_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_1, str_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_0, var_0)
    module_0.Config(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, var_0]
    none_type_1 = config_0.update(*list_0)
    config_1 = module_0.Config(config_0)
    var_1 = config_0.update_config(config_1)
    config_1.update_config(var_0)
