# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "k"
    config_1 = module_0.Config(converters=str_0)
    str_1 = "R]56B`U*iKHD~L_M\tj"
    list_0 = [str_1]
    config_1.update(*list_0)


def test_case_2():
    str_0 = "Ur{"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0)
    config_0.update_config(str_0)


def test_case_3():
    str_0 = "QVrQ4FJDaX.^"
    none_type_0 = None
    module_0.Config(str_0, keep_alive=none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    bool_0 = True
    none_type_1 = None
    str_0 = "a)qw6,'V["
    str_1 = "ba~^*V:|>-,W,\t"
    str_2 = '>cF%5<?"[38a'
    str_3 = 'H"=MH AGx04'
    dict_0 = {str_0: bool_0, str_1: str_0, str_2: str_1, str_3: str_0}
    float_0 = 2246.3
    var_0 = module_1.getmembers(float_0)
    var_0.__new__(bool_0, bool_0, none_type_1, none_type_1, **dict_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.__setitem__(var_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.register(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    complex_0 = 1783.987129 + 1138.3086j
    config_0 = module_0.Config(keep_alive=complex_0)
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0)
    list_0 = []
    var_0.update(*list_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
