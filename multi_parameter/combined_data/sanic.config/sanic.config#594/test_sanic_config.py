# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x84"
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=bytes_0)
    module_1.check_error_format(none_type_0)


def test_case_2():
    bytes_0 = b"\x11l\x03\x0fal\xc0\x95\xb4\x0f\x86)y@\xf3"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=bytes_0, converters=none_type_0
    )
    float_0 = 850.1
    config_0.update_config(float_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_1.update_config(config_1)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_1)


def test_case_5():
    bytes_0 = b""
    config_0 = module_0.Config()
    config_0.__getattr__(bytes_0)


def test_case_6():
    bytes_0 = b"\x91'\xb5\x87.\x13s\xeb\xb4\xda\x9b\x01\x19\xef\xf5d\xa3\xe7"
    dict_0 = {bytes_0: bytes_0}
    config_0 = module_0.Config()
    config_0.__getattr__(dict_0)


def test_case_7():
    str_0 = '~cr&X"mZm'
    dict_0 = {str_0: str_0}
    module_0.Config(dict_0, converters=str_0)


def test_case_8():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)


def test_case_9():
    bytes_0 = b"\xca\t\x00\xd0"
    str_0 = "+6c<oc]-D#0A^Q*h*#9"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    config_2 = module_0.Config(converters=bytes_0)
    none_type_1 = config_2.register_type(config_2)
    float_0 = -223.327
    var_0 = config_2.update_config(config_2)
    var_1 = var_0.__repr__()
    config_2.update_config(float_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_12():
    bytes_0 = b"\x91'\xb5\x87.\x13s\xeb\xb4\xda\x9b\x01\x19\xef\xf5d\xa3\xe7"
    var_0 = module_2.isclass(bytes_0)
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "websocket_max_size"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_14():
    bytes_0 = b"\xca\t\x00\xd0"
    str_0 = ""
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.load_environment_vars(str_0)


def test_case_15():
    str_0 = "+(w"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.Config(dict_0)
