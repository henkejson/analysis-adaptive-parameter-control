# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    var_0 = module_1.isdatadescriptor(bool_0)
    var_1 = var_0.__repr__()
    config_0 = module_0.Config(env_prefix=var_1)
    none_type_0 = None
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(none_type_0)
    config_1.__instancecheck__(config_1, none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = "Generating TLS certificate"
    str_1 = "t`V;x1%VOh[\\"
    none_type_0 = config_0.__setitem__(str_1, str_0)
    config_0.update_config(none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    bool_0 = False
    module_2.check_error_format(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "A basic MOTD display.\n\n    This is used when the terminal does not support ANSI escape codes.\n    "
    str_1 = "t`V;x1%VOh[\\"
    none_type_1 = config_0.__setitem__(str_1, str_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.__setitem__(str_0, var_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    config_1 = module_0.Config(keep_alive=var_1)
    var_3 = module_1.isclass(none_type_0)
    var_3.update_config(var_3)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "A basic MOTD display.\n\n    This is used when the terminal does not support ANSI escape codes.\n    "
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_1, str_0)
    none_type_1 = config_0.__setattr__(str_0, str_0)
    str_2 = "Nn.\x0cn\\|b'wU!"
    module_0.Config(converters=str_2)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "Generating TLS certificate"
    str_1 = 't*5;x1"Vlh[\\'
    none_type_1 = config_0.__setitem__(str_1, str_0)
    str_2 = "-R_O6\n"
    none_type_2 = config_0.__setattr__(str_2, none_type_0)
    none_type_3 = None
    bytes_0 = b"i\xd4s\x1e\xfd"
    config_1 = module_0.Config(converters=none_type_3)
    config_2 = module_0.Config(converters=bytes_0)
    module_0.DescriptorMeta(config_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "*|Qx}N><@"
    str_1 = "request.json"
    str_2 = 't*5;x1"Vlh[\\'
    none_type_0 = config_0.__setitem__(str_2, str_0)
    str_3 = "-R_O6\n"
    none_type_1 = config_0.__setattr__(str_3, none_type_0)
    config_1 = module_0.Config(config_0)
    config_0.__getattr__(str_1)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=none_type_0)
    config_2 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_2)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "Generating TLS cetificate"
    str_1 = "t`V;x1%VOh[\\"
    none_type_0 = config_0.__setitem__(str_1, str_0)
    none_type_1 = config_0.__setattr__(str_0, config_0)
    config_0.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "J"
    str_1 = "t`V;x1%VOh[\\"
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.__setitem__(str_1, str_0)
    str_2 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_2, none_type_0)
