# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    bytes_0 = b"at\x1a\xf7\xd3\xf0\x18\xbcqzc\xdb"
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    config_0.__getattr__(bytes_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "unix"
    none_type_0 = config_0.register_type(config_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_2.isclass(dict_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=none_type_1, keep_alive=none_type_1)
    none_type_2 = config_1.update()


def test_case_7():
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)
    local_cert_creator_1 = module_1.LocalCertCreator.MKCERT
    config_1 = module_0.Config(converters=local_cert_creator_1)
    config_1.__getattr__(local_cert_creator_0)


def test_case_8():
    bytes_0 = b"\xef\xed>\x8fW\xe9/\xe4m`>\x93\x0cBt\xb2"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_10():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, bool_0)


def test_case_11():
    config_0 = module_0.Config()
    bool_0 = True
    config_1 = module_0.Config()
    none_type_0 = config_0.register_type(bool_0)
    bytes_0 = b"\xfb{\xd7z\xec\xc9c{x\xa6\x13\xdf\x1fCg''v"
    config_1.update_config(bytes_0)


def test_case_12():
    str_0 = "j\tu6V>T*ak@}s*f"
    module_0.Config(str_0)
