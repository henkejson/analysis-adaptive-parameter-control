# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import sanic.constants as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    var_0 = config_1.update_config(config_0)
    bool_0 = True
    config_2 = module_0.Config(keep_alive=bool_0, converters=var_0)
    var_1 = config_0.load_environment_vars()
    var_0.__instancecheck__(var_0, config_2)


def test_case_2():
    str_0 = "nv2->rrgk\x0b"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    str_1 = "-940m?"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.load_module_from_file_location(str_0, **dict_0)


def test_case_3():
    local_cert_creator_0 = module_2.LocalCertCreator.TRUSTME
    var_0 = module_3.isclass(local_cert_creator_0)
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(dict_0)


def test_case_4():
    config_0 = module_0.Config()
    module_1.load_module_from_file_location(config_0, **config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    str_0 = "\non}GG\r_HcG/p'"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_0.update(**config_0)
    none_type_0.register(none_type_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=var_0)
    var_0.load_environment_vars()


def test_case_12():
    bytes_0 = b"Service Unavailable"
    module_0.Config(converters=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    str_0 = " already exists"
    config_0.update_config(str_0)


def test_case_14():
    none_type_0 = None
    str_0 = "Ce0F6v{NmI"
    str_1 = "sK0[rbp T,("
    str_2 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: none_type_0, str_1: str_0, str_2: str_0}
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update(**dict_0)


def test_case_15():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)
