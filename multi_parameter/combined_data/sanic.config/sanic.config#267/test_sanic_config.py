# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    list_0 = []
    str_0 = "ACCESS_LOG"
    module_0.Config(keep_alive=list_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(keep_alive=config_0)
    config_0.update_config(none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    float_0 = 0.001
    str_0 = "not ready to send: "
    module_0.Config(float_0, str_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = config_0.register_type(config_0)
    str_0 = "`z+Lvpn7d<'8+Un"
    config_1 = module_0.Config(keep_alive=str_0)
    config_0.update_config(none_type_1)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "8\\)=bW8"
    var_0 = module_1.isclass(str_0)
    config_0.__setitem__(var_0, var_0)


def test_case_10():
    list_0 = []
    str_0 = "\n\x0b{%M_.Oj"
    config_0 = module_0.Config(keep_alive=list_0, converters=str_0)
    config_0.update_config(list_0)


def test_case_11():
    str_0 = "+~NxK5"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "$"
    list_0 = [str_0]
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(list_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "<"
    config_0.update_config(str_0)


def test_case_14():
    str_0 = "tls_cert_password"
    float_0 = -3540.47
    str_1 = "LB)@5"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: float_0, str_1: str_1, str_2: str_1}
    module_0.Config(dict_0, keep_alive=str_2)
