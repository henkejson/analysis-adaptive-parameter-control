# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    config_2 = module_0.Config(converters=config_0)
    config_3 = module_0.Config(var_0, converters=var_0)
    config_1.update_config(bool_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=var_0, converters=var_0)
    config_0.update_config(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    var_2 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(keep_alive=var_2, converters=var_2)
    bytes_0 = b"\xe8\x8e.\xdb\x16\xad_\xa6\xf7x\xe5\xadt\xc5ZD"
    config_2 = module_0.Config(var_0, converters=var_0)
    none_type_1 = config_2.register_type(bytes_0)
    config_1.update_config(bool_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "!P@q5T@0\tmUn$"
    module_0.Config(converters=str_0)


def test_case_8():
    bytes_0 = b"\xb7\xab\xd5\x16\xc7\xba8\xb2\x86\x9f\xb5\xee\xa9T"
    none_type_0 = None
    module_0.Config(env_prefix=bytes_0, converters=none_type_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, converters=none_type_0)


def test_case_10():
    bytes_0 = b"\xdd\xc0\xed.\xe1 ^f\xb4=;\xfb\xd4\xdf>\xfa\xb7"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(bytes_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "&,{TcqfyT`S$}$).\r"
    none_type_1 = config_0.__setitem__(str_0, bool_0)
    var_1 = module_1.getmembers(config_0)
    var_2 = module_1.isdatadescriptor(none_type_0)
    config_1 = module_0.Config(keep_alive=var_2, converters=var_2)
    config_2 = module_0.Config(converters=var_2)
    config_1.update_config(bool_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, bool_0)
