# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.load_environment_vars()
    var_0.__instancecheck__(dict_0, dict_0)


def test_case_3():
    str_0 = "Cn/}^a_Up?"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_0.Config(dict_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__setitem__(bool_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "N^JZs-7S@p\nnfxu^WNN"
    config_1 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "8"
    none_type_0 = config_0.__setitem__(str_1, var_0)
    config_0.create_empty_request()


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "ping_id is not in self.pings"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_13():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = None
    none_type_2 = config_0.register_type(none_type_1)
    str_0 = ".)bqW"
    config_0.update_config(str_0)


def test_case_14():
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "cJ\nkL|q+!$G1"
    str_2 = "x=f/"
    dict_0 = {str_1: str_1, str_2: str_2, str_1: str_2}
    config_0 = module_0.Config(dict_0, str_2, converters=str_2)
    config_0.__setattr__(str_0, str_0)
