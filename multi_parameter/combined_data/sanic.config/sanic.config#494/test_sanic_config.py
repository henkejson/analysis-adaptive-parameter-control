# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Gm5)7+W<#"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    bytes_0 = b";O3\xb1\x9d\x83\xd3V\\\n\xc0X\xc8D\x8d"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_1.object()
    dict_0 = {var_0: list_0, bytes_0: list_0}
    config_0 = module_0.Config(dict_0, keep_alive=list_0)
    config_1 = module_0.Config()


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.update_config(none_type_1)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__setitem__(config_0, config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_2.getmembers(config_0, none_type_0)
    var_0.load_environment_vars(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "fast"
    none_type_1 = config_0.register_type(str_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "TOUCHUP"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    none_type_2 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, config_0)
