# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(bool_0, bool_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_3():
    list_0 = []
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(list_0)


def test_case_4():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_5():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config(config_0, str_0)
    none_type_0 = config_1.register_type(str_0)
    var_0 = config_0.update_config(config_1)
    var_1 = var_0.__bool__()
    config_2 = module_0.Config()
    var_0.respond(config_0)


def test_case_6():
    str_0 = ")ToeqPP]r\x0b}}biY5"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = False
    str_0 = "Cannot restart process "
    config_0 = module_0.Config(bool_0, str_0)
    module_0.Config(converters=str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    list_0 = []
    none_type_0 = None
    var_0 = module_1.getmembers(list_0)
    config_0 = module_0.Config(keep_alive=none_type_0, converters=var_0)
    var_0.update_config(var_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LZt~"
    config_0.update_config(str_0)


def test_case_12():
    list_0 = []
    config_0 = module_0.Config()
    str_0 = "H"
    config_1 = module_0.Config(env_prefix=str_0)
    config_2 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_1.register_type(none_type_0)
    var_0 = config_1.update_config(config_1)
    var_1 = var_0.__repr__()
    var_2 = var_0.__bool__()
    module_0.Config(list_0, str_0, converters=config_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "]_1S~r?"
    str_2 = "V~W/\x0b4ToFkPxS`nXu"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_0.Config(dict_0, str_2)
