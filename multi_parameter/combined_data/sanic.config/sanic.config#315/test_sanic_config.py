# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=bool_0, converters=none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = ""
    str_1 = 'F"-,!o;t]YVpQ5DO\t'
    str_2 = "P2>q`t"
    none_type_0 = None
    dict_0 = {str_0: str_0, str_1: str_1, str_2: none_type_0, str_1: str_2}
    module_0.Config(dict_0, dict_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    list_0 = [bool_0, bool_0, bool_0]
    none_type_1 = None
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=none_type_1)
    config_1.__getattr__(list_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = None
    var_0 = module_1.isclass(none_type_1)
    str_0 = "an9^0]N$9pX$8M,"
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    config_2 = module_0.Config(keep_alive=none_type_0)
    var_1 = var_0.__bool__()
    config_0.__getattr__(var_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bytes_0 = b"\xcf\x88\xc8\xc0\x95\x9bg\x07\xb7\xd9\xed\xc1\x96Y\xbe\x84\xd0,\xf8\xcb"
    config_0.update_config(bytes_0)


def test_case_10():
    float_0 = 0.001
    tuple_0 = module_1.isdatadescriptor(float_0)
    none_type_0 = None
    module_0.Config(keep_alive=none_type_0, converters=float_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = config_0.update_config(config_0)
    module_0.Config(var_0, converters=list_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = None
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=none_type_1)
    config_2 = module_0.Config(env_prefix=var_0, converters=config_1)
    config_3 = module_0.Config(keep_alive=var_0, converters=config_0)
    var_1 = var_0.__bool__()
    config_0.__getattr__(config_0)
