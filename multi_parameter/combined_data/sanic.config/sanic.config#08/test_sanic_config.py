# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    config_0 = module_0.Config(converters=set_0)
    str_0 = "Add a new exception handler to an already existing handler object.\n\n        Args:\n            exception (sanic.exceptions.SanicException or Exception): Type\n                of exception that needs to be handled.\n            handler (function): Reference to the function that will\n                handle the exception.\n\n        Returns:\n            None\n\n        "
    config_0.update_config(str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_1.getmembers(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config()


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "_INIT"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_0.__getattr__(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_0)
    tuple_0 = (config_0, var_0)
    config_0.__instancecheck__(tuple_0, var_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "ua89.YT"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    tuple_0 = (config_0, var_0)
    config_0.__instancecheck__(tuple_0, var_0)


def test_case_10():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=bool_0, converters=none_type_0
    )
    var_0 = config_0.__getattr__(str_0)
    module_2.check_error_format(str_0)


def test_case_11():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    config_0 = module_0.Config(converters=set_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.register_type(bool_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
