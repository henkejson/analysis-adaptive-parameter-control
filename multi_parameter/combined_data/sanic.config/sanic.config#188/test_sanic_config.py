# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(converters=local_cert_creator_0)
    config_1 = module_0.Config()
    none_type_0 = config_1.update()
    var_0 = module_2.getmembers(none_type_0)
    none_type_1 = config_1.update()
    config_1.update_config(none_type_1)


def test_case_2():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.update()


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_6():
    bytes_0 = b"\x91\x8c\xbd"
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_7():
    bytes_0 = b'\\\xe2>\x0e\xdc\xd3\xa3\xce\x80"\x8d,\xb6)}s'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    none_type_0 = None
    var_0 = module_2.isclass(bytes_0)
    module_0.Config(none_type_0, converters=list_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(var_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    config_0.__setitem__(str_0, config_0)


def test_case_10():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.register_type(str_0)
    str_1 = "h>G9~T`m.Q 7aP9 o"
    none_type_1 = config_0.__setitem__(str_1, str_1)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    config_1 = module_0.Config(config_0, str_1, none_type_1)
    none_type_1.init_for_request()


def test_case_11():
    str_0 = "/QgFbX!>TR\\{js$f"
    bytes_0 = b"\x91\x8c\xbd"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bytes_0)
    config_0.update_config(bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = module_2.getmembers(config_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    str_0 = "L"
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_1.update()
    config_2 = module_0.Config()
    var_0 = config_2.load_environment_vars()
    none_type_2 = None
    config_1.update_config(none_type_2)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "SANIC_"
    var_0 = module_2.isdatadescriptor(str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, var_0)


def test_case_15():
    str_0 = "L"
    bool_0 = True
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_16():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    module_0.DescriptorMeta(config_0)
