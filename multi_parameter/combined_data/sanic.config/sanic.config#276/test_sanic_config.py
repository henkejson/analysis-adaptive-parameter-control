# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "IN$PECTOR_PORT"
    module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config(config_0, converters=config_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "IN$PECTOR_PORT"
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_1.update(**config_1)
    none_type_2 = config_1.__setitem__(str_0, str_0)
    config_2 = module_0.Config(config_1, converters=config_1)
    config_1.update_config(none_type_0)


def test_case_8():
    str_0 = "u-<\x0b,KkPBv5"
    config_0 = module_0.Config(env_prefix=str_0)
    int_0 = 771
    none_type_0 = config_0.update()
    module_1.Http(int_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_1)


def test_case_10():
    config_0 = module_0.Config()
    bytes_0 = b"\xbd3\xcd\x1f\x10\x9ef\xa8"
    config_0.update_config(bytes_0)


def test_case_11():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update(**config_0)
    none_type_2 = config_0.__setitem__(str_0, str_0)
    module_0.Config(config_0, converters=config_0)
