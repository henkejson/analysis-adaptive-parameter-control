# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0.__instancecheck__(config_1, config_1)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    config_2 = module_0.Config(config_0)
    module_1.object(*var_0)


def test_case_3():
    str_0 = "`f3tXyklliB0={"
    str_1 = '"7>.-gJI>7`(X#djx_>'
    str_2 = "3fz|t"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=str_0)
    var_0 = config_0.__getattr__(str_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    float_0 = -884.59905
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(float_0)


def test_case_6():
    float_0 = -884.59905
    config_0 = module_0.Config()
    config_0.__getattr__(float_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    float_0 = -884.59905
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(float_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "=z%S6|~bun$dJRw\x0c4P"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    bool_0 = False
    config_1 = module_0.Config(config_0, keep_alive=bool_0)
    config_1.load_environment_vars(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "touchup"
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    object_0 = module_1.object()
    str_0 = "Mw  @8J"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    var_1 = var_0.__bool__()
    var_1.__getattr__(config_0)


def test_case_12():
    str_0 = "INSPECTOR_API_KEY"
    module_0.Config(converters=str_0)
