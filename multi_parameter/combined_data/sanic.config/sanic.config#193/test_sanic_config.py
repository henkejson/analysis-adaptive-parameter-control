# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    set_0 = set()
    none_type_0 = None
    config_0 = module_0.Config(set_0, none_type_0)
    config_0.__getattr__(set_0)


def test_case_2():
    str_0 = "server.exception.report"
    bool_0 = False
    module_0.Config(str_0, converters=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "g8\\cIX80c<,/"
    config_1 = module_0.Config(env_prefix=str_0)
    module_1.load_module_from_file_location(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(converters=none_type_0)
    str_0 = "Exception in "
    var_0 = module_2.getmembers(config_1)
    none_type_2 = config_1.__setitem__(str_0, none_type_0)
    var_1 = config_0.update_config(config_1)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"pVNn_\xd8\xb4m`]!\x12\x9a\xc7@\x9d\xd9\xd9C#"
    config_0.update_config(bytes_0)


def test_case_9():
    bytes_0 = b"\xdd\x98\xda\xc4\x1a1\xcf\xf2\x08Z\xff\x85\x8d\x8b"
    config_0 = module_0.Config(keep_alive=bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=config_0)
    config_0.load_environment_vars(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: none_type_0}
    module_0.Config(dict_0)
