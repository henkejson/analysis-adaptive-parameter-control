# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "HRw/6K~G(]"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)


def test_case_4():
    str_0 = "HRw/6K~G(]"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, converters=var_0)
    config_2 = module_0.Config()
    config_2.update_config(none_type_0)


def test_case_5():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_6():
    bytes_0 = b"\xef\xd1\x17x"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(bytes_0)


def test_case_7():
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config()
    var_1 = module_1.isdatadescriptor(config_2)
    config_3 = module_0.Config()
    config_1.__getattr__(config_0)


def test_case_11():
    str_0 = "HRw/6K~G(]"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_12():
    str_0 = "FORWARDED_SECRET"
    module_0.Config(converters=str_0)
