# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "S"
    var_1 = config_0.load_environment_vars(str_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.update_config(none_type_0)


def test_case_2():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "-.THy='(&\tFt:h"
    str_2 = "CaSz?B]"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_0.Config(dict_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__subclasscheck__(config_0, config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = ""
    str_1 = "\x0cF$M\no8f<M\nBxvnO"
    bool_0 = False
    dict_0 = module_1.isclass(str_0)
    module_0.Config(dict_0, keep_alive=bool_0, converters=str_1)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "[respond]:"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "W"
    str_1 = "b9"
    none_type_0 = config_0.__setattr__(str_1, str_0)
    none_type_1 = config_0.update(**config_0)
    module_0.Config(env_prefix=config_0, keep_alive=var_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    list_0 = [none_type_0]
    config_0.update(*list_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    set_0 = set()
    config_0.__getattr__(set_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = "S"
    var_0 = config_0.load_environment_vars(str_0)
    config_0.__subclasscheck__(var_0, str_0)


def test_case_17():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "S"
    config_0.load_environment_vars(str_0)
