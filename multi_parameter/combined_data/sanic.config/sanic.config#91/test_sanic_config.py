# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    none_type_0 = None
    config_1.update(*none_type_0, **config_1)


def test_case_3():
    str_0 = "message_fetched"
    str_1 = "%tE]v;]]fTE9099:l"
    str_2 = "nIK2#']r!\n@ZvA]kH"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_1}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(converters=str_0)
    none_type_0 = config_0.update()
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(converters=str_0)
    module_1.getmembers(config_0, config_0)


def test_case_7():
    config_0 = module_0.Config()
    int_0 = 432
    config_0.update_config(int_0)


def test_case_8():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(converters=str_0)
    tuple_0 = ()
    none_type_0 = config_0.register_type(tuple_0)
    config_0.update_config(str_0)


def test_case_9():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(converters=str_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = ".-EZRESY{qFix"
    config_0 = module_0.Config(keep_alive=str_0)
    module_0.Config(converters=str_0)


def test_case_11():
    str_0 = "4n/bZT)As0EO,\x0cH{]7"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = config_0.update()
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, none_type_0)
