# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "~*+*( r*-9(h=4Y"
    module_0.Config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0)
    var_1 = module_1.getmembers(config_0)
    config_0.__setitem__(config_0, config_1)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    dict_0 = {}
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(dict_0)
    str_0 = "1PTcf'o[Z~Y5%bxi"
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    none_type_3 = config_0.register_type(none_type_2)
    config_0.__getattr__(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.TRUSTME
    local_cert_creator_0 = module_2.LocalCertCreator.MKCERT
    module_0.Config(config_0, var_0, local_cert_creator_0, converters=var_0)


def test_case_12():
    str_0 = "FALLBACK_ERROR_FORMAT"
    list_0 = [str_0]
    config_0 = module_0.Config(converters=list_0)
    config_0.__setitem__(str_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0)
    var_1 = var_0.__repr__()
    config_0.update_config(var_1)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "_FALLBACK_ERROR_FORMAT"
    list_0 = [str_0]
    config_1 = module_0.Config(converters=list_0)
    none_type_0 = config_0.__setitem__(str_0, config_1)
    var_0 = config_0.update_config(config_0)
    config_2 = module_0.Config(keep_alive=var_0)
    var_1 = module_1.getmembers(config_0)
    config_0.update_config(var_1)


def test_case_15():
    str_0 = "FALLBACK_ERROR_FORMAT"
    str_1 = "G^P'j"
    dict_0 = {str_1: str_1, str_0: str_1}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0, converters=none_type_0)
    config_0.__setattr__(str_0, str_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.__setitem__(str_0, var_0)
    none_type_0.__new__(config_0, str_0, none_type_0, none_type_0, **config_0)


def test_case_17():
    config_0 = module_0.Config()
    str_0 = "S"
    config_1 = module_0.Config(env_prefix=str_0)
    config_2 = module_0.Config()
    module_0.Config(env_prefix=str_0, converters=config_1)


def test_case_18():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.__setitem__(str_0, var_0)
