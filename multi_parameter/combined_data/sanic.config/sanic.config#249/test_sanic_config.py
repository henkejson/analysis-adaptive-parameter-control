# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0, converters=config_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.update_config(config_0)
    var_2 = module_1.isdatadescriptor(var_0)
    config_1 = module_0.Config(config_0, keep_alive=var_1, converters=var_1)
    var_1.update_config(var_2)


def test_case_3():
    config_0 = module_0.Config()
    module_2.load_module_from_file_location(config_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    bytes_0 = b"Insufficient Storage"
    none_type_0 = None
    module_0.Config(env_prefix=none_type_0, converters=bytes_0)


def test_case_7():
    str_0 = "c95*k}"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)
    float_0 = 1132.6636688081126
    module_0.DescriptorMeta(float_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "G"
    var_0 = config_0.load_environment_vars(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_1.update_config(config_0)
    var_0.respond(config_1)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    local_cert_creator_0 = module_3.LocalCertCreator.TRUSTME
    config_0.update_config(local_cert_creator_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "G"
    config_0.load_environment_vars(str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_15():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "_"
    str_1 = "fyq+oE<\\"
    none_type_2 = config_0.__setattr__(str_1, config_0)
    var_1 = config_0.load_environment_vars(str_0)
    var_1.__setitem__(var_1, str_0)
