# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xb9!\xb9\xc3\x98i\x88\xa5\x87\xad\x8e\x16\xe1\xe6Q\x95#\xa2M"
    var_0 = module_1.isdatadescriptor(bytes_0)
    module_0.Config(keep_alive=var_0, converters=bytes_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_4():
    tuple_0 = ()
    str_0 = "O9\\};.dK&AXY<4l|f8x\\"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(tuple_0)
    str_1 = "!8:m}`h,PJ3[f"
    dict_0 = {str_1: str_1, str_1: str_1}
    config_1 = module_0.Config(keep_alive=tuple_0)
    config_2 = module_0.Config(dict_0, str_1, converters=str_1)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    tuple_0 = ()
    str_0 = "O9\\};.dK&AXY<4l|f8x\\"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(tuple_0)
    config_1 = module_0.Config(keep_alive=tuple_0)
    module_0.DescriptorMeta(config_1)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_1 = module_1.isclass(config_0)
    none_type_1 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.update()
    str_0 = 'z#z3aX4OJa-Q*o3-)i"'
    none_type_2 = config_0.__setitem__(str_0, none_type_0)
    str_1 = "The client provided no SNI to match for certificate."
    none_type_3 = config_0.__setattr__(str_1, config_0)
    var_0 = module_1.isclass(config_0)
    var_1 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_11():
    tuple_0 = ()
    str_0 = "O9\\};.dK&AXY<4l|f8x\\"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    none_type_1 = config_0.register_type(tuple_0)
    config_1 = module_0.Config(env_prefix=none_type_1)
    none_type_2 = config_1.update()
    config_1.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    none_type_1 = config_0.update()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config(none_type_1)
    var_0 = config_1.update_config(config_1)
    str_0 = "\x0bOy\nU:]J\x0c)8J 8fJQfP{"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_2 = config_1.__setitem__(str_1, config_0)
    none_type_3 = config_0.__setattr__(str_0, none_type_1)
    var_1 = module_1.isclass(str_0)
    var_2 = module_1.getmembers(config_1)
    var_0.update_config(var_1)
