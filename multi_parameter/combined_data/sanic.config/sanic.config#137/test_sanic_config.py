# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "`.-}"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    set_0 = {bool_0}
    module_0.Config(env_prefix=set_0, keep_alive=bool_0)


def test_case_3():
    bytes_0 = b"|\xce\x89\x9d\x94q\xc9\n\x9f'N\xb7;\xd2i\xa2h:\xd3"
    config_0 = module_0.Config(converters=bytes_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_4():
    bytes_0 = b"|\xce\x89\x9d\x94q\xc9\n\x9f'N\xb7;\xd2i\xa2h:\xd3"
    config_0 = module_0.Config(converters=bytes_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(bytes_0)


def test_case_5():
    str_0 = "L"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = config_0.load_environment_vars(str_0)


def test_case_6():
    str_0 = "A{"
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(str_0)
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=bool_0, converters=none_type_0
    )


def test_case_10():
    bytes_0 = b"\xa6\xe6!\xd0\x98eB\x12\x96k/r\xd7F\xfa\xfc"
    str_0 = "`.-}"
    config_0 = module_0.Config()
    list_0 = [str_0, str_0, bytes_0]
    module_0.Config(converters=list_0)


def test_case_11():
    none_type_0 = None
    str_0 = ""
    config_0 = module_0.Config(none_type_0)
    config_0.load_environment_vars(str_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "FORWARDED_SECRET"
    config_0.update_config(str_0)
