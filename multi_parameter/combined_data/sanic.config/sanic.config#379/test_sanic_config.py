# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "The request body parsed as JSON\n\n        Returns:\n            Any: The request body parsed as JSON\n        "
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    module_0.Config(converters=str_0)


def test_case_2():
    str_0 = "The request body parsed as JSON\n\n        Returns:\n            Any: The request body parsed as JSON\n        "
    int_0 = 762
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = config_0.__setattr__(str_0, int_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    str_0 = "ea\x0b;7VW\r>c"
    str_1 = "z.MC^[q3%Sgx\tU'"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    bool_0 = False
    config_0 = module_0.Config(dict_0, converters=bool_0)
    config_0.__getattr__(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    list_0 = config_0.update_config(config_0)
    config_0.__getattr__(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    list_0 = []
    none_type_1 = config_1.update(*list_0, **config_1)
    config_0.__setitem__(none_type_0, none_type_1)


def test_case_9():
    str_0 = 'vfE%!"Dh'
    config_0 = module_0.Config(converters=str_0)
    int_0 = 2636
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    config_1 = module_0.Config()
    none_type_0 = config_1.register_type(config_0)
    var_0 = module_1.isdatadescriptor(dict_0)
    var_0.__setitem__(var_0, int_0)


def test_case_10():
    str_0 = "2"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    config_0 = module_0.Config(dict_0, str_0, bool_0)
    str_1 = "wLHe:!H4"
    none_type_0 = config_0.__setitem__(str_1, config_0)
    module_0.DescriptorMeta(bool_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_2.LocalCertCreator.TRUSTME
    config_0.update_config(var_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)
