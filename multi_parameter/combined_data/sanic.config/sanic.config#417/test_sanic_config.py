# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.load_environment_vars()


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "keep-alive"
    var_0 = module_1.isclass(str_0)
    module_0.Config(config_0, converters=str_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    bool_0 = False
    config_0.__setitem__(none_type_0, bool_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    module_2.Http(config_0)


def test_case_8():
    bytes_0 = b"U\xa8\t\xa5\xaf\x80\x0bn"
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, none_type_0, converters=none_type_0)
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    list_0 = [config_0]
    var_0 = module_1.isclass(list_0)
    local_cert_creator_0 = module_3.LocalCertCreator.AUTO
    config_1 = module_0.Config(env_prefix=local_cert_creator_0, keep_alive=var_0)
    var_1 = config_1.load_environment_vars()
    var_2 = module_1.getmembers(local_cert_creator_0, var_0)
    var_2.__getattr__(var_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_1.update_config(config_0)
    none_type_0 = config_1.update()
    config_0.__setattr__(config_1, var_0)


def test_case_12():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)
