# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2
import sanic.utils as module_3
import sanic.errorpages as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Purges completed and cancelled tasks from the task registry.\n\n        This method iterates through the task registry, identifying any tasks\n       that are either done or csncelled, and then removes those tasks,\n        leaving only the pe=ding tasks inmthe registry.\n        "
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.respond(str_0)


def test_case_2():
    config_0 = module_0.Config()
    default_0 = module_1.getmembers(config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    default_0 = module_2.Default()
    str_0 = "Starting a process: "
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(default_0)
    var_1 = default_0.__repr__()
    var_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)
    module_3.load_module_from_file_location(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = module_0.Config(converters=config_0)
    var_0.__getattr__(var_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = False
    str_0 = ""
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    float_0 = -2214.3
    module_4.check_error_format(float_0)


def test_case_10():
    config_0 = module_0.Config()
    default_0 = module_2.Default()
    str_0 = "2:B8zp"
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(var_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0)
    none_type_0 = config_1.register_type(var_0)
    var_1 = module_1.getmembers(config_0)
    var_2 = config_0.update_config(config_0)
    var_1.__getattr__(var_1)


def test_case_14():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0)
