# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ".C"
    config_0 = module_0.Config(converters=str_0)
    config_1 = module_0.Config()


def test_case_2():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=bool_0)
    none_type_1 = config_0.update(**config_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "1KXo|pVYAGR.%&b"
    config_1 = module_0.Config(var_0, str_0, var_0)
    var_1 = module_1.isdatadescriptor(config_0)
    config_1.update_config(str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_5():
    str_0 = "Split host:port into hostname and port.\n\n    Args:\n        host (str): A host string.\n\n    Returns:\n        Tuple[Optional[str], Optional[int]]: A tuple of hostname and port.\n    "
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    var_0.update_config(var_0)


def test_case_6():
    str_0 = "Split host:port into hostname and port.\n\n    Args:\n        host (str): A host string.\n\n    Returns:\n        Tuple[Optional[str], Optional[int]]: A tuple of hostname and port.\n    "
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"\x88#\xa0"
    module_0.Config(str_0, bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    module_1.getmembers(config_0, config_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "V@H]t\tHaC~Sh\n$]]@/"
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    none_type_1 = config_0.__setitem__(str_0, var_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_1)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_0.update_config(none_type_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    str_0 = "SP9)VRy7p<EyAe8cT"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    none_type_2 = config_1.update()
    module_0.Config(converters=str_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1 = module_0.Config(config_0)
    config_1.__setattr__(str_0, str_0)
