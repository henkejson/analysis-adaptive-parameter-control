# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    str_0 = '{"~6 '
    http_0 = module_1.isdatadescriptor(none_type_0)
    list_0 = [http_0, str_0]
    config_0 = module_0.Config(converters=list_0)
    var_0 = module_1.isclass(config_0)
    var_1 = var_0.__repr__()
    config_1 = module_0.Config(env_prefix=http_0)
    config_2 = module_0.Config(keep_alive=none_type_0)
    config_1.__getattr__(var_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_4():
    str_0 = ";NAgh]'\x0c\x0bT"
    none_type_0 = None
    module_0.Config(str_0, keep_alive=none_type_0)


def test_case_5():
    str_0 = 'T-D"2'
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_6():
    int_0 = -2270
    module_0.Config(env_prefix=int_0)


def test_case_7():
    str_0 = "8|#UH&]x^[$D7M"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.__getattr__(str_0)


def test_case_8():
    str_0 = "f^Z"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_13():
    str_0 = "zm\\<IYIZ;=&P[{wi`J"
    str_1 = ".\x0c7X s+"
    module_0.Config(env_prefix=str_1, keep_alive=str_0, converters=str_0)
