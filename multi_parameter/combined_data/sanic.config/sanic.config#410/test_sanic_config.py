# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "AsS~e?,c>0ch\\c[[g"
    module_0.Config(converters=str_0)


def test_case_5():
    str_0 = "vCi[K"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    bool_0 = True
    config_1 = module_0.Config(keep_alive=bool_0)
    config_2 = module_0.Config()
    var_0 = config_2.update_config(config_2)
    config_2.update_config(var_0)


def test_case_6():
    str_0 = "L"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "AsS~\\?1c>0ch\\c[[g"
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "_"
    str_1 = "vCi[K"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    config_1 = module_0.Config()
    config_1.update_config(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_11():
    str_0 = "L"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    config_1 = module_0.Config(dict_0, str_0)
    none_type_0 = None
    none_type_1 = config_1.register_type(none_type_0)
    module_0.Config(config_1, str_0, none_type_0, converters=dict_0)
