# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "k(x;^5&vvf-"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    none_type_1 = None
    config_0.__getattr__(none_type_1)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = "-] >>{V"
    module_0.Config(converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_0.__setitem__(var_0, var_1)


def test_case_7():
    str_0 = "T=!XL\r1a=kW6b"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    bool_1 = True
    var_0 = module_1.isclass(bool_1)
    var_0.__subclasscheck__(config_0, var_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_9():
    str_0 = "T=!XL\r1a=kW6b"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    str_0 = "-] >>{V"
    str_1 = ""
    str_2 = ',,"}O1*SI>o'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_1, str_2: str_1}
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(dict_0, keep_alive=str_1, converters=none_type_0)
    var_0 = module_1.getmembers(none_type_0)
    str_3 = var_0.__str__()
    var_0.update()


def test_case_12():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(bool_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_1)
