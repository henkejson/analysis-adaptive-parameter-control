# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "{title}\n{bar}\n{text}\n\n{body}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0, converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = module_1.isdatadescriptor(config_0)
    none_type_0 = None
    module_2.check_error_format(none_type_0)


def test_case_3():
    none_type_0 = None
    str_0 = ",gC~\t"
    module_0.Config(str_0, none_type_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "7?J\\%"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.update_config(var_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.update()
    module_0.Config(config_0, config_0)


def test_case_11():
    none_type_0 = None
    str_0 = "U%\x0bEeE\r"
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(env_prefix=str_0, converters=var_0)
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.update_config(var_0)
