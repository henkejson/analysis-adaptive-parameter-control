# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2
import sanic.http.http1 as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = ",-*E"
    var_1 = var_0.__bool__()
    int_0 = 1205
    module_0.Config(env_prefix=str_0, keep_alive=var_0, converters=int_0)


def test_case_2():
    str_0 = "o#)k99 .gPu:.n&'+4*R"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.__getattr__(str_0)


def test_case_3():
    str_0 = "`0H+8L4)1.+t.qv"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    int_0 = 808
    module_0.Config(int_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ";'\x0cma"
    none_type_0 = None
    list_0 = [str_0, none_type_0, none_type_0]
    module_0.Config(keep_alive=none_type_0, converters=list_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = None
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    str_1 = "P"
    config_1 = module_0.Config(env_prefix=str_1)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    str_0 = ",-*E"
    config_0 = module_0.Config(converters=str_0)
    module_1.check_error_format(str_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = module_2.isdatadescriptor(none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    module_3.Http(config_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.update_config(var_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    config_0.__setitem__(config_0, config_1)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    bytes_0 = b"\x83t\x8a'\x7f\xa3\x15?"
    config_0.update_config(bytes_0)


def test_case_15():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = ""
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = None
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    str_1 = "P"
    config_0.load_environment_vars(str_1)


def test_case_17():
    config_0 = module_0.Config()
    str_0 = "' from "
    none_type_0 = config_0.register_type(str_0)
    none_type_1 = None
    none_type_2 = config_0.__setitem__(str_0, none_type_1)
    str_1 = "_"
    config_1 = module_0.Config(env_prefix=str_1)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(none_type_1)
