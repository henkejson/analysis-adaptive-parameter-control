# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = 24.3
    module_0.Config(converters=float_0)


def test_case_2():
    bytes_0 = b"\xc4\xcbC"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    bool_0 = False
    str_0 = "WStSgQ* zQ#oKO!G>3"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, dict_0, converters=dict_0)
    config_0.update_config(bool_0)


def test_case_4():
    bytes_0 = b"\xc4\xcbC"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_5():
    bytes_0 = b"0\r\n\r\n"
    config_0 = module_0.Config(keep_alive=bytes_0)
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    bytes_0 = b"\xc4\xcbC"
    config_0 = module_0.Config(keep_alive=bytes_0)
    str_0 = "\r\n"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    none_type_1 = config_0.update(**config_0)
    config_0.update_config(bytes_0)


def test_case_7():
    str_0 = "5nZUZfx3cHJLQ6J"
    complex_0 = 2455.68565 + 1539.74j
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(complex_0)


def test_case_8():
    bytes_0 = b"\xc4\xcbC"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__repr__()
    int_0 = -1848
    config_1 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    config_0.update_config(int_0)


def test_case_9():
    bytes_0 = b"\xf3\xd8W\xcd]<\xc7\xcb\xe8\xac^w\xce\x93\xecK"
    module_0.Config(bytes_0)


def test_case_10():
    bytes_0 = b"Use Proxy"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.__getattr__(config_0)


def test_case_11():
    bytes_0 = b"\xc4\xcbC"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=bytes_0)


def test_case_12():
    bytes_0 = b"U{"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "CbC#eu(CXN"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    var_1 = module_1.getmembers(config_0)
    module_0.Config(env_prefix=bytes_0, converters=str_0)


def test_case_13():
    str_0 = "LOCAL_CERT_CREATOR"
    str_1 = "m$G(qsejdX8G&r"
    str_2 = "tls_cert_password"
    dict_0 = {str_1: str_1, str_2: str_2, str_2: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0, str_2)
    config_0.__setitem__(str_0, str_0)
