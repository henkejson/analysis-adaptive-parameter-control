# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ""
    str_1 = "o"
    str_2 = "1m:,d\x0b\x0bkUtQmF#fZ=\x0c"
    var_0 = module_1.isclass(str_0)
    module_0.Config(env_prefix=str_1, converters=str_2)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    int_0 = 1899
    module_0.Config(int_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, none_type_1, converters=none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_5():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = "9Fd\nx.nIxiug ="
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=bool_0, converters=none_type_0
    )
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_0.__setattr__(config_1, config_1)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = module_1.isclass(config_0)
    config_1 = module_0.Config()
    config_1.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    str_0 = "PROXIES_COUNT"
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = module_1.isclass(config_1)
    config_2 = module_0.Config()
    module_2.check_error_format(config_1)


def test_case_11():
    str_0 = ""
    str_1 = "1m:,d\x0b\x0bkUtQmF#fZ=\x0c"
    var_0 = module_1.isclass(str_0)
    config_0 = module_0.Config(keep_alive=str_1)
    config_0.__getattr__(var_0)


def test_case_12():
    str_0 = "9Fd\nx.nIxiug ="
    bool_0 = True
    bool_1 = False
    str_1 = "\x0b"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: bool_1, str_1: str_1, str_2: str_2}
    module_0.Config(dict_0, keep_alive=bool_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    config_0.load_environment_vars(str_0)
