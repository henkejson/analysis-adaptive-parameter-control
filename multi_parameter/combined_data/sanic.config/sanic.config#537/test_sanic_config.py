# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)
    none_type_0 = config_1.update_config(config_1)
    config_0.update_config(none_type_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    str_0 = "#V`TUc`v'1(QF\r"
    str_1 = '&3my3%\r7;"exZkB4ON'
    dict_0 = {str_0: str_0, str_1: str_0}
    bytes_0 = b"BMj\xe2\x00\x93\x805W"
    module_0.Config(dict_0, bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    module_0.DescriptorMeta(var_0, *var_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    config_2 = module_0.Config()
    bytes_0 = b"\xc2\xf6[\xe6"
    config_0.load_environment_vars(bytes_0)


def test_case_8():
    config_0 = module_0.Config()
    descriptor_meta_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "Zpi0p:GIhR"
    config_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    config_0.__setitem__(str_0, str_0)
