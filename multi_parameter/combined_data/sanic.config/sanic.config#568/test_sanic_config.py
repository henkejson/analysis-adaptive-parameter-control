# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 1011
    module_0.Config(converters=int_0)


def test_case_2():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_3():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    bool_0 = True
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=bool_0)
    var_0 = config_1.update_config(config_1)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = module_1.getmembers(bool_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.create_empty_request()


def test_case_8():
    config_0 = module_0.Config()
    int_0 = -313
    bool_0 = True
    module_0.Config(env_prefix=int_0, keep_alive=bool_0)


def test_case_9():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, keep_alive=var_0, converters=config_0)
    config_0.update_config(bool_0)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = []
    none_type_0 = config_0.register_type(config_0)
    str_0 = "pwh9h`^P"
    none_type_1 = config_0.__setitem__(str_0, list_0)
    config_1 = module_0.Config()
    bool_0 = False
    config_2 = module_0.Config(env_prefix=bool_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(bool_0)
    var_0 = module_2.LocalCertCreator.TRUSTME
    config_0.update_config(var_0)
