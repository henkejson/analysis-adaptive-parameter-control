# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ",PCpu7D\x0c&ciju3\\\x0c+~gZ"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    str_0 = "v"
    config_0 = module_0.Config(keep_alive=str_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0, var_0)


def test_case_4():
    str_0 = "K^!#c`\\GDT\x0bu{Yt"
    config_0 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_5():
    bytes_0 = b"\x14\xc2\xf0\x13o\xb7+*\x7f\x9d\xb8\xb5\x0e/"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    config_0.load_environment_vars(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.update()
    str_0 = "O~ )\\Qp^N^\\@"
    config_1 = module_0.Config()
    none_type_2 = config_0.__setattr__(str_0, none_type_1)
    none_type_3 = config_1.update()
    none_type_4 = config_1.__setitem__(str_0, none_type_0)
    var_0 = config_0.load_environment_vars()
    none_type_5 = config_0.register_type(var_0)
    var_0.init_for_request()


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.load_environment_vars()
    str_0 = ""
    none_type_1 = config_0.register_type(str_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.update_config(bool_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "l$nEq6UjbF6"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "M"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    none_type_1 = config_0.update(**dict_0)
    module_0.Config(dict_0, keep_alive=none_type_1)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.update()
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.register_type(var_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1 = module_0.Config()
    var_1 = config_0.update_config(config_0)
    config_1.__setattr__(str_0, var_1)
