# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b")ry,U\x82oPAr"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_1.isclass(list_0)
    none_type_0 = None
    config_1 = module_0.Config()
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=bool_0, converters=config_0)
    config_0.update_config(none_type_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_0, none_type_1, bool_0, converters=none_type_0)
    module_0.Config(none_type_0, config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_4():
    str_0 = "D)R9+25\x0c^J3S"
    module_0.Config(str_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b")ry,U\x82oPAr"
    var_1 = module_1.isclass(bool_0)
    module_0.Config(converters=bytes_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(bool_0, none_type_0, none_type_0, converters=none_type_0)
    config_0.__setitem__(bool_0, none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    bytes_0 = b"Request Timeout"
    list_0 = []
    config_0 = module_0.Config(list_0)
    config_0.update_config(bytes_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(bool_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
