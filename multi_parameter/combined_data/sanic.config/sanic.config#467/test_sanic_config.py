# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    str_0 = "yI0a\x0c|H4;XW$ GZtnxx"
    module_0.Config(bool_0, str_0, str_0, converters=str_0)


def test_case_2():
    str_0 = "P"
    str_1 = "61"
    config_0 = module_0.Config(env_prefix=str_1)
    var_0 = config_0.load_environment_vars(str_0)


def test_case_3():
    str_0 = "P"
    str_1 = "AD"
    int_0 = -5215
    dict_0 = {str_1: str_1, str_1: int_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars(str_0)


def test_case_4():
    str_0 = "P"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars(str_0)


def test_case_5():
    str_0 = "P"
    str_1 = "D"
    str_2 = "61"
    int_0 = -5214
    dict_0 = {str_1: str_1, str_2: int_0}
    config_0 = module_0.Config(dict_0, converters=str_2)
    config_0.load_environment_vars(str_0)


def test_case_6():
    str_0 = "P"
    str_1 = "AD"
    str_2 = "61"
    int_0 = -5215
    config_0 = module_0.Config(env_prefix=str_2)
    dict_0 = {str_1: str_1, str_2: int_0}
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    none_type_1 = config_1.update(**dict_0)
    config_2 = module_0.Config(dict_0, converters=none_type_0)
    var_0 = config_2.load_environment_vars(str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    int_0 = -723
    config_0.update_config(int_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(var_0)


def test_case_11():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(none_type_0)


def test_case_13():
    str_0 = "Q"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    var_0.__new__(none_type_0, var_0, config_0, var_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    config_0.__getattr__(var_0)


def test_case_16():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, var_0, config_0]
    list_1 = [var_0, var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_1)
    none_type_1 = config_0.register_type(var_0)
    none_type_2 = config_0.update(*list_0)
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=list_1, converters=none_type_2
    )
    var_1 = module_1.getmembers(config_0)
    var_0.update_config(config_0)
