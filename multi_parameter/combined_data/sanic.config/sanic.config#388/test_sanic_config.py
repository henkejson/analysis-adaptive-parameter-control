# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2
import builtins as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "\rsJ~"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=var_0)
    var_1 = module_0.Config(converters=var_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0, converters=var_0)
    config_1.update_config(var_0)


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    config_0 = module_0.Config(dict_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "G"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    var_1 = module_1.getmembers(config_1)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "t\\E\nyye<J|R"
    str_1 = "G"
    config_1 = module_0.Config(env_prefix=str_1, keep_alive=var_0)
    var_1 = module_1.getmembers(config_1)
    config_1.update_config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    str_0 = "a%0qBkG7j4&J$"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=none_type_1)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "G"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    config_1.update_config(var_0)


def test_case_11():
    str_0 = "`qhvAxyL:rZ}"
    dict_0 = {str_0: str_0}
    str_1 = "Cheerio"
    module_0.Config(dict_0, converters=str_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    str_0 = "G"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    var_1 = module_1.getmembers(config_1)
    config_2 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    default_0 = module_2.Default()
    config_3 = module_0.Config()
    object_0 = module_3.object()
    none_type_1 = config_3.register_type(var_0)
    config_1.__getattr__(config_3)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "G"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=var_0)
    default_0 = module_2.Default()
    module_0.Config(env_prefix=str_0, keep_alive=config_1, converters=config_1)
