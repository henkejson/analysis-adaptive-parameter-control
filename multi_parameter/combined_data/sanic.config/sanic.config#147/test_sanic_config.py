# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.errorpages as module_2
import sanic.http.http1 as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x07\xad\xf2\x91\xafS\xea\xd8\x1b4\x81\x13\x14\x0f\xb7\xa7+"
    config_0 = module_0.Config(converters=bytes_0)
    config_1 = module_0.Config()


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    str_0 = "INSPECTOR_TLS_CERT"
    none_type_0 = None
    config_2 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, var_0]
    none_type_1 = config_0.update(*list_0)
    module_2.check_error_format(var_0)


def test_case_3():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    config_1 = module_0.Config(config_0, converters=config_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    config_0.update_config(list_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "G,Y$'\r1"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    list_0 = [config_0, config_0]
    none_type_1 = config_0.update(*list_0)
    none_type_2 = config_0.register_type(list_0)
    config_0.update_config(list_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    module_2.check_error_format(config_0)


def test_case_9():
    config_0 = module_0.Config()
    module_3.Http(config_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = "server.init.before"
    config_1 = module_0.Config(config_0)
    dict_0 = {str_0: str_0}
    config_0.__getattr__(dict_0)


def test_case_11():
    config_0 = module_0.Config()
    bytes_0 = b"\r\n\r\n"
    config_0.update_config(bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    none_type_2 = config_1.register_type(var_0)
    config_1.update_config(none_type_2)


def test_case_13():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.register_type(list_0)
    config_1 = module_0.Config(config_0, converters=config_0)
    config_0.register_type(list_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_15():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [config_0, var_0]
    none_type_0 = config_0.update(*list_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.load_environment_vars()
    config_0.__setitem__(str_0, var_0)


def test_case_17():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, keep_alive=config_0, converters=config_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    var_0.respond(var_0)


def test_case_18():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0, keep_alive=config_0, converters=config_0)
    var_1 = module_1.getmembers(config_0)
    list_0 = [var_1, var_1]
    none_type_1 = config_0.update(*list_0)
    none_type_2 = config_0.update(*list_0)
    var_2 = module_1.getmembers(config_0)
    var_2.update()
