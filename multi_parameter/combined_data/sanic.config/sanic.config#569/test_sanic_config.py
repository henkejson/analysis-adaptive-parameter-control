# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    bytes_0 = b"\xbf\x0f,\xc0"
    config_0 = module_0.Config(none_type_0, converters=bytes_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    list_0 = []
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=list_0, converters=none_type_0)
    none_type_1 = None
    var_0 = module_1.isclass(none_type_1)
    str_0 = var_0.__str__()
    var_0.__subclasscheck__(none_type_1, none_type_1)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(none_type_0, keep_alive=dict_0)
    config_1 = module_0.Config(config_0)
    var_0 = module_1.isclass(config_1)
    object_0 = module_2.object()
    var_1 = module_1.isclass(object_0)
    var_1.register_type(var_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b'\xc9\x0ew\xc4\x8f"\x11\x89q\xf30j\x80\x8d\xce\xe2[\x94'
    config_0 = module_0.Config(none_type_0, converters=bytes_0)
    config_0.update_config(bytes_0)


def test_case_9():
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_12():
    bytes_0 = b"ccepted"
    module_0.Config(converters=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)
