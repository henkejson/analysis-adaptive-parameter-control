# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2
import abc as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    str_0 = ")x"
    config_1 = module_0.Config(converters=str_0)
    var_0 = config_1.update_config(config_1)
    var_0.update_config(str_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = ")x"
    config_1 = module_0.Config(converters=str_0)
    none_type_0 = config_1.update()
    config_2 = module_0.Config(keep_alive=config_1)
    dict_0 = {}
    var_0 = module_1.isdatadescriptor(dict_0)
    config_1.update_config(none_type_0)


def test_case_3():
    str_0 = "l\\_wU"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    dict_0 = module_1.isdatadescriptor(config_0)
    config_0.update_config(dict_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    str_0 = "S"
    var_0 = config_0.load_environment_vars(str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    config_1 = module_0.Config()
    config_1.__setitem__(config_1, config_1)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(config_0)
    module_2.load_module_from_file_location(var_0)


def test_case_10():
    str_0 = ")x"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "DEPRECATION_FILTER"
    module_0.Config(converters=str_0)


def test_case_12():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, str_0, converters=none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_0, none_type_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "S"
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(str_0)
    config_0.load_environment_vars(str_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "REAL_IP_HEADER"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    str_1 = "_"
    var_0 = config_0.load_environment_vars(str_1)
    var_1 = config_0.update_config(config_0)
    module_3.ABCMeta(**var_1)
