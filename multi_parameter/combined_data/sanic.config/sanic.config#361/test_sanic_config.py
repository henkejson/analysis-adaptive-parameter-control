# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.stream as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x1d\xfdNp*\x1b\x98\x8e\xe6-@\xff\xd4w: "
    var_0 = module_1.isclass(bytes_0)
    config_0 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    var_0.register(var_0, var_0)


def test_case_2():
    str_0 = 'Delete a cookie\n\n        This will effectively set it as Max-Age: 0, which a browser should\n        interpret it to mean: "delete the cookie".\n\n        Since it is a browser/client implementation, your results may vary\n        depending upon which client is being used.\n\n        See [Cookies](/en/guide/basics/cookies.html)\n\n        Args:\n            key (str): The key to be deleted\n            path (str, optional): Path of the cookie. Defaults to `"/"`.\n            domain (Optional[str], optional): Domain of the cookie. Defaults to `None`.\n            host_prefix (bool, optional): Whether to add __Host- as a prefix to the key. This requires that path="/", domain=None, and secure=True. Defaults to `False`.\n            secure_prefix (bool, optional): Whether to add __Secure- as a prefix to the key. This requires that secure=True. Defaults to `False`.\n        '
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(env_prefix=str_0, converters=none_type_0)


def test_case_3():
    str_0 = "('}8q .ATJ"
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    none_type_0 = config_0.__setitem__(str_0, var_0)
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(var_1)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(config_0, none_type_0)
    config_2 = module_0.Config(converters=none_type_0)


def test_case_5():
    str_0 = 'Delete a cookie\n\n        This will effectively set it as Max-Age: 0, which a browser should\n        interpret it to mean: "delete the cookie".\n\n        Since it is a browser/client implementation, your results may vary\n        depending upon which client is being used.\n\n        See [Cookies](/en/guide/basics/cookies.html)\n\n        Args:\n            key (str): The key to be deleted\n            path (str, optional): Path of the cookie. Defaults to `"/"`.\n            domain (Optional[str], optional): Domain of the cookie. Defaults to `None`.\n            host_prefix (bool, optional): Whether to add __Host- as a prefix to the key. This requires that path="/", domain=None, and secure=True. Defaults to `False`.\n            secure_prefix (bool, optional): Whether to add __Secure- as a prefix to the key. This requires that secure=True. Defaults to `False`.\n        '
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_1 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_2 = config_0.update()


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = 'Delete a cookie\n\n        This will effectively set it as Max-Age: 0, which a browser should\n        interpret it to mean: "delete the cookie".\n\n        Since it is a browser/client implementation, your results may vary\n        depending upon which client is being used.\n\n        See [Cookies](/en/guide/basics/cookies.html)\n\n        Args:\n            key (str): The key to be deleted\n            path (str, optional): Path of the cookie. Defaults to `"/"`.\n            domain (Optional[str], optional): Domain of the cookie. Defaults to `None`.\n            host_prefix (bool, optional): Whether to add __Host- as a prefix to the key. This requires that path="/", domain=None, and secure=True. Defaults to `False`.\n            secure_prefix (bool, optional): Whether to add __Secure- as a prefix to the key. This requires that secure=True. Defaults to `False`.\n        '
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_9():
    str_0 = 'Delete a cookie\n\n        This will effectively set it as Max-Age: 0, which a browser should\n        interpret it to mean: "delete the cookie".\n\n        Since it is a browser/client implementation, your results may vary\n        depending upon which client is being used.\n\n        See [Cookies](/en/guide/basics/cookies.html)\n\n        Args:\n            key (str): The key to be deleted\n            path (str, optional): Path of the cookie. Defaults to `"/"`.\n            domain (Optional[str], optional): Domain of the cookie. Defaults to `None`.\n            host_prefix (bool, optional): Whether to add __Host- as a prefix to the key. This requires that path="/", domain=None, and secure=True. Defaults to `False`.\n            secure_prefix (bool, optional): Whether to add __Secure- as a prefix to the key. This requires that secure=True. Defaults to `False`.\n        '
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()


def test_case_10():
    str_0 = 'Delete a cookie\n\n        This will effectively set it as Max-Age: 0, which a browser should\n        interpret it to mean: "delete the cookie".\n\n        Since it is a browser/client implementation, your results may vary\n        depending upon which client is being used.\n\n        See [Cookies](/en/guide/basics/cookies.html)\n\n        Args:\n            key (str): The key to be deleted\n            path (str, optional): Path of the cookie. Defaults to `"/"`.\n            domain (Optional[str], optional): Domain of the cookie. Defaults to `None`.\n            host_prefix (bool, optional): Whether to add __Host- as a prefix to the key. This requires that path="/", domain=None, and secure=True. Defaults to `False`.\n            secure_prefix (bool, optional): Whether to add __Secure- as a prefix to the key. This requires that secure=True. Defaults to `False`.\n        '
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_1 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_1, converters=config_0
    )
    none_type_2 = config_0.update()


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    str_0 = "('}8q .ATJ"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "('}8q .ATJ"
    config_0 = module_0.Config()
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_1, config_0)
    var_0 = module_1.getmembers(config_0)
    var_1 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    none_type_2 = config_0.__setitem__(str_0, var_0)
    var_2 = config_0.update_config(config_0)
    none_type_3 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(var_2)


def test_case_14():
    str_0 = "('}8q .ATJ"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_1, none_type_0)


def test_case_15():
    stream_0 = module_2.Stream()
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)
    stream_0.respond(stream_0)
