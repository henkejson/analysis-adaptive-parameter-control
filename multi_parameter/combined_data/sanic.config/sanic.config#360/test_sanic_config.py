# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=var_0)
    config_0.update_config(var_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=var_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    var_0.load_environment_vars()


def test_case_3():
    config_0 = module_0.Config()
    config_0.init_for_request()


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "dwwf\\\\EqYDABy"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_1 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_7():
    bytes_0 = b"\xf4#\xc47$dP\x10\x9cG\xae\x9a\x9cwM\xcef\x08"
    int_0 = -623
    var_0 = module_1.isclass(int_0)
    config_0 = module_0.Config()
    config_0.update_config(bytes_0)


def test_case_8():
    str_0 = "I#"
    int_0 = -623
    var_0 = module_1.isclass(int_0)
    config_0 = module_0.Config(converters=str_0)
    var_1 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(config_1)
    var_2 = config_0.update_config(config_2)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "I#"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config()


def test_case_11():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    config_0 = module_0.Config(keep_alive=var_0)
    str_0 = "41Jq*"
    config_1 = module_0.Config(env_prefix=str_0)
    config_0.update_config(none_type_0)


def test_case_12():
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(converters=var_0)


def test_case_13():
    str_0 = "I#"
    bytes_0 = b"\xf4#\xc47$dP\x10\x9cG\xae\x9a\x9cwM\xcef\x08"
    int_0 = -623
    var_0 = module_1.isclass(int_0)
    config_0 = module_0.Config(converters=str_0)
    var_1 = config_0.update_config(config_0)
    config_1 = module_0.Config()
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_1.__setattr__(str_1, bytes_0)
    module_0.Config(config_1)
