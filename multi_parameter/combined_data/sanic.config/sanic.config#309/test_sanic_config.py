# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    str_0 = "T9,SR"
    dict_0 = {str_0: bool_0, str_0: bool_0}
    config_0 = module_0.Config(dict_0, str_0)
    none_type_0 = config_0.__setattr__(str_0, dict_0)
    config_0.__setitem__(none_type_0, config_0)


def test_case_2():
    tuple_0 = ()
    bytes_0 = b"\x0c\xf9\xd4\xbc:\xe8\xc0\xd4\x95"
    str_0 = "\n        Wait until the TCP connection is closed or ``timeout`` elapses.\n        If timeout is None, wait forever.\n        Recommend you should pass in self.close_timeout as timeout\n\n        Return ``True`` if the connection is closed and ``False`` otherwise.\n\n        "
    dict_0 = {str_0: str_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(bytes_0)


def test_case_3():
    tuple_0 = ()
    config_0 = module_0.Config(converters=tuple_0)
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    tuple_0 = ()
    config_0 = module_0.Config(converters=tuple_0)
    config_0.update_config(tuple_0)


def test_case_6():
    str_0 = "Could not connect to inspector at: "
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = module_1.getmembers(str_0)
    var_1 = var_0.__repr__()
    none_type_1 = config_0.register_type(var_1)
    none_type_2 = config_0.__setitem__(str_0, config_0)
    var_2 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_1, none_type_0)
    config_0.update_config(none_type_2)


def test_case_7():
    tuple_0 = ()
    dict_0 = {}
    config_0 = module_0.Config(dict_0, keep_alive=tuple_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_8():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    config_0 = module_0.Config(none_type_0, converters=set_0)


def test_case_9():
    tuple_0 = ()
    config_0 = module_0.Config(keep_alive=tuple_0)


def test_case_10():
    str_0 = "Could not connect to inspector at: "
    module_0.Config(keep_alive=str_0, converters=str_0)
