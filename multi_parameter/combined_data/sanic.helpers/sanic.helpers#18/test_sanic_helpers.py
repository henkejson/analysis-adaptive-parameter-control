# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 214
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"ER\xf6z\xd5\xa67\xc3"
    var_1 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_1():
    bool_0 = True
    str_0 = bool_0.__str__()
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b""
    var_0 = module_0.is_entity_header(bytes_0)
    module_0.import_string(var_0)


def test_case_4():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, none_type_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(var_0)
    module_0.has_message_body(var_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = "/H*&"
    var_1 = module_0.is_hop_by_hop_header(str_1)
    var_2 = var_1.__repr__()
    str_2 = default_0.__str__()
    var_3 = default_0.__repr__()
    var_4 = var_1.__repr__()


def test_case_7():
    int_0 = 214
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    bytes_0 = b"ER\xf6z\xd5\xa67\xc3"
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    var_3 = module_0.has_message_body(var_2)
    module_0.is_hop_by_hop_header(var_1)


def test_case_8():
    int_0 = 69
    var_0 = module_0.has_message_body(int_0)
    var_1 = int_0.__repr__()
    str_0 = var_0.__str__()
    float_0 = 204.0
    var_2 = module_0.has_message_body(float_0)
    bool_0 = True
    str_1 = var_2.__str__()
    var_3 = var_2.__repr__()
    var_4 = module_0.has_message_body(bool_0)
    var_5 = int_0.__repr__()
    str_2 = var_0.__str__()
    var_6 = module_0.has_message_body(var_2)
    dict_0 = {var_5: var_4}
    var_7 = var_5.__repr__()
    bool_1 = module_0.is_atty()
    bytes_0 = b"\xa6\xdbl?\x13\xb9\xda:\xf6\xd6\xd87\\"
    var_8 = var_4.__repr__()
    var_9 = module_0.is_hop_by_hop_header(bytes_0)
    var_10 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    str_3 = var_0.__str__()
    var_11 = default_0.__repr__()
    var_12 = module_1.ismodule(var_10)
    str_4 = var_2.__str__()
