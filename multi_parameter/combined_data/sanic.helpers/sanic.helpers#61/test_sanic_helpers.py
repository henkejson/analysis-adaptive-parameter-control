# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    module_0.is_entity_header(none_type_0)


def test_case_1():
    bytes_0 = b"M\x0c\xcb\xe7W\xf5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    var_0 = module_0.is_hop_by_hop_header(str_1)


def test_case_5():
    none_type_0 = None
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    module_0.is_entity_header(none_type_0)


def test_case_6():
    float_0 = 205.91805389304335
    bytes_0 = b"\x9b\xc0\x9c\x86de\x01*\x92+"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(float_0)
    var_3 = module_0.has_message_body(var_2)
    var_4 = var_3.__repr__()
    var_5 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    var_6 = var_3.__repr__()
    var_7 = var_6.__repr__()
    bool_1 = True
    var_8 = module_0.has_message_body(bool_1)
    str_0 = var_3.__str__()
    var_9 = var_1.__repr__()


def test_case_7():
    float_0 = 204.0
    bytes_0 = b"_@\xed\xf6\n\xb4\xa9\x10\x06\x98\x16\xd4a\n\xe2c"
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    str_1 = default_0.__str__()
    dict_0 = {bytes_0: str_0}
    var_0 = module_1.ismodule(float_0)
    var_1 = module_0.is_entity_header(bytes_0)
    var_2 = module_0.has_message_body(float_0)
    var_3 = module_0.has_message_body(var_2)
    bool_1 = module_0.is_atty()
    var_4 = var_3.__repr__()
    var_5 = var_1.__repr__()
    var_6 = module_0.remove_entity_headers(dict_0, var_5)
    var_7 = var_0.__repr__()
    module_0.is_hop_by_hop_header(var_2)
