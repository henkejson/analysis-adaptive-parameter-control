# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "-Q`,"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "-Q`,"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    bool_0 = module_0.is_atty()
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = "1Z+JQlj#'8F_"
    dict_0 = {str_1: str_1, str_1: str_1}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_2 = var_0.__str__()


def test_case_7():
    int_0 = 859
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    bool_1 = False
    bool_2 = module_0.is_atty()
    var_1 = module_0.has_message_body(bool_0)
    str_0 = "eU 5gby{2S<\\g"
    dict_0 = {str_0: str_0, str_0: bool_1, str_0: bool_1}
    bool_3 = module_0.is_atty()
    module_0.Default(*bool_1, **dict_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = module_0.has_message_body(var_1)
    module_0.has_message_body(dict_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_1 = True
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(bool_1)
    var_4 = bool_0.__repr__()
    bytes_0 = b"n\x12\xe9>a"
    var_5 = var_0.__repr__()
    var_6 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_3.__str__()
    str_1 = var_6.__str__()
    var_7 = var_4.__repr__()
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    module_0.is_hop_by_hop_header(bool_1)
