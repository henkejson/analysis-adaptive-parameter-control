# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_1.ismodule(bool_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_1():
    bytes_0 = b"\xca\xfe|\x85\xa9\x05D\xf6o\xfa\x8f\xe78\xd3>"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    int_0 = 330
    var_0 = module_0.has_message_body(int_0)
    set_0 = {var_0, int_0, int_0, var_0}
    module_0.is_hop_by_hop_header(set_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    bool_1 = True
    default_0 = module_0.Default(*var_0)
    str_0 = default_0.__str__()
    var_2 = module_0.has_message_body(bool_1)
    str_1 = var_2.__str__()
    var_3 = var_2.__repr__()
    var_4 = module_0.is_hop_by_hop_header(str_1)
    bool_2 = module_0.is_atty()
    var_5 = var_1.__repr__()
    float_0 = 204.0
    var_6 = module_0.is_entity_header(var_3)
    var_7 = module_0.has_message_body(float_0)
    var_8 = module_0.is_entity_header(var_3)
    var_9 = module_0.is_hop_by_hop_header(str_0)
    var_10 = module_0.is_entity_header(str_0)
    var_11 = var_0.__repr__()
    var_12 = module_0.has_message_body(var_4)
    str_2 = var_9.__str__()
    bool_3 = module_0.is_atty()
    var_13 = bool_3.__repr__()
    var_14 = var_11.__repr__()
    var_15 = var_9.__repr__()
    str_3 = var_14.__str__()
    module_0.import_string(var_11)
