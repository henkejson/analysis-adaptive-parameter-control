# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    complex_0 = 1355.5638 - 2617.42756j
    module_0.has_message_body(complex_0)


def test_case_1():
    bytes_0 = b'$F\xe6";%6\xa9'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\x11\x1cK9"
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = str_0.__repr__()


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_7():
    int_0 = 3311
    var_0 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    var_2 = module_1.ismodule(var_0)
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_3 = module_0.has_message_body(bool_1)
    var_4 = module_0.has_message_body(var_2)
    var_5 = var_4.__repr__()
    var_6 = var_4.__repr__()
    var_7 = module_0.is_hop_by_hop_header(var_6)
    int_0 = 304
    var_8 = module_0.has_message_body(int_0)
    none_type_0 = None
    module_0.is_entity_header(none_type_0)
