# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    set_0 = set()
    module_0.has_message_body(set_0)


def test_case_1():
    bytes_0 = b"\x80\x9fy\xba\x1c\xf0v"
    module_0.remove_entity_headers(bytes_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    str_0 = "__generic__.__signal__.%s"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    str_1 = default_0.__str__()


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    bytes_0 = b"U\xc9X\x990H"
    module_0.has_message_body(bytes_0)


def test_case_7():
    str_0 = "(}j]9w&K\tJ>_[^/="
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_8():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = int_0.__str__()
    var_2 = module_0.is_hop_by_hop_header(str_0)
    str_1 = var_1.__str__()
    var_3 = var_2.__repr__()
    var_4 = var_0.__repr__()
    var_5 = int_0.__repr__()
    var_6 = var_3.__repr__()
    dict_0 = {var_5: var_5, var_3: var_5, var_5: var_6}
    var_7 = module_0.remove_entity_headers(dict_0)
    var_8 = module_0.is_entity_header(var_5)
    var_9 = var_6.__repr__()
    default_0 = module_1.ismodule(var_1)
    bool_0 = module_0.is_atty()
    module_0.import_string(var_8)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = module_1.ismodule(var_1)
    str_1 = var_1.__str__()
    var_2 = str_1.__repr__()
    var_3 = var_2.__repr__()
    var_4 = module_0.is_hop_by_hop_header(str_1)
    var_5 = var_2.__repr__()
    var_6 = module_0.is_hop_by_hop_header(var_5)
    dict_0 = {var_5: var_5, var_2: var_5, var_5: var_6}
    var_7 = module_0.remove_entity_headers(dict_0)
    module_0.is_hop_by_hop_header(str_0)
