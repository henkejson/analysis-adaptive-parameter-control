# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = True
    bool_1 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = False
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    float_0 = 344.17
    module_0.is_entity_header(float_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xbe\xac;\xca{\xd1\x90V\x08\x9e\xd8\x11\x12{\x86\x1f"
    var_0 = module_0.is_entity_header(bytes_0)
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    module_0.has_message_body(none_type_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_1.ismodule(dict_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    dict_1 = {str_0: str_0, var_1: str_0}
    var_2 = module_0.remove_entity_headers(dict_1)
    var_3 = var_2.__repr__()
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    str_2 = var_1.__str__()


def test_case_6():
    bytes_0 = b"\xf6\xef\xe6\xbe\xa0\xc8\xc6\xb4\xe8\x94\x0c\x9a"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    default_0 = module_0.Default()
    float_0 = 344.17
    var_0 = module_0.has_message_body(float_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = var_0.__repr__()
    module_0.remove_entity_headers(int_0)
