# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"'\x95\xaa\xbcX@\xe4+'|\xb3"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    module_0.has_message_body(var_0)


def test_case_1():
    tuple_0 = ()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    bytes_0 = b"'\x95\xaa\xbcX@\xe4+'|\xb3"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bytes_0 = b"\xe1@\x87\x947k\xa2\xc7"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bytes_0 = b"\xe1@\x87\x947k\xa2\xc7"
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {}
    var_2 = module_0.remove_entity_headers(dict_0)
    str_0 = var_2.__str__()
    var_3 = module_0.is_entity_header(bytes_0)
    var_4 = module_0.has_message_body(var_3)
    bool_0 = module_0.is_atty()
    var_5 = var_1.__repr__()
    var_6 = str_0.__repr__()
    var_7 = module_0.has_message_body(var_1)
    var_8 = module_0.has_message_body(var_7)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    default_1 = module_0.Default()
    var_0 = default_1.__repr__()
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_7():
    bytes_0 = b"\xe1@\x87\x947k\xa2\xc7"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.is_entity_header(bytes_0)
    str_0 = var_0.__str__()
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_2.__repr__()
    module_0.has_message_body(var_0)


def test_case_8():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    bytes_0 = b"\xa5\xf2\x95k\x91"
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {}
    var_3 = module_0.remove_entity_headers(dict_0)
    str_0 = var_3.__str__()
    var_4 = module_0.is_entity_header(bytes_0)
    var_5 = module_0.has_message_body(var_4)
    bool_0 = module_0.is_atty()
    var_6 = str_0.__repr__()
    float_0 = 4202.36
    var_7 = module_0.has_message_body(float_0)
    var_8 = module_0.has_message_body(var_5)


def test_case_9():
    bytes_0 = b"\xe1@\x87\x947k\xa2\xc7"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    var_3 = module_1.ismodule(dict_0)
    var_4 = module_0.has_message_body(var_3)
    bool_0 = module_0.is_atty()
    var_5 = var_3.__repr__()
    var_6 = var_2.__repr__()
    var_7 = var_0.__repr__()
    int_0 = 304
    var_8 = module_0.has_message_body(int_0)
    var_9 = module_0.has_message_body(var_4)
