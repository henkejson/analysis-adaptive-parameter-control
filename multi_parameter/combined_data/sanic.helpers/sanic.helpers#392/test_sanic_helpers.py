# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b""
    module_0.has_message_body(bytes_0)


def test_case_1():
    bytes_0 = b"\xc5B"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_7():
    int_0 = 404
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0, str_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_1)
    var_1 = module_1.ismodule(var_0)
    bytes_0 = b"\xc0\xef9\xc6\x0b\xc8\xe8P\xf1\x85\x19\xe7\x93"
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    bytes_1 = b"\xc7"
    str_0 = var_0.__str__()
    dict_0 = {bytes_1: bool_1}
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = var_0.__repr__()
    str_1 = bool_1.__str__()
    var_5 = bool_1.__repr__()
    int_0 = 204
    str_2 = var_5.__str__()
    var_6 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(dict_0)
