# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    float_0 = 0.1
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    float_0 = 0.1
    module_0.is_entity_header(float_0)


def test_case_4():
    float_0 = -1112.97
    module_0.is_hop_by_hop_header(float_0)


def test_case_5():
    float_0 = 1281.59786
    module_0.remove_entity_headers(float_0, float_0)


def test_case_6():
    default_0 = module_0.Default()
    bytes_0 = b"\xc3-\xbf\xdch\xdf\x18t\xddx\xcbC\xfc"
    var_0 = module_0.is_entity_header(bytes_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    var_3 = default_0.__repr__()
    var_4 = var_0.__repr__()
    var_5 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    list_0 = []
    module_0.import_string(var_1, list_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = str_0.__repr__()
    str_1 = default_0.__str__()
    var_1 = default_0.__repr__()
    str_2 = var_1.__str__()
    module_0.import_string(var_1)


def test_case_8():
    str_0 = "g,1S2Ci<z"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    int_0 = 200
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_10():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)
