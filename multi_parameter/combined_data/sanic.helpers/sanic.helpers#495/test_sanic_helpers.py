# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_entity_header(var_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bytes_0 = b"Request Header Fields Too Large"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    int_0 = -641
    module_0.is_entity_header(int_0)


def test_case_5():
    int_0 = 426
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()


def test_case_7():
    int_0 = 426
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()


def test_case_8():
    bool_0 = module_0.is_atty()
    bytes_0 = b"\xed^\x13\x0c\xf8\x02\xb8e\x0en\xe1']\x8c_I\xc3"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    str_0 = var_1.__str__()
    var_3 = module_0.has_message_body(bool_0)
    int_0 = 204
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_1.__repr__()
    module_0.is_hop_by_hop_header(bool_0)
