# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    default_0 = module_0.Default()
    str_0 = "A"
    dict_0 = {str_0: default_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = 431
    module_0.is_entity_header(int_0)


def test_case_4():
    dict_0 = {}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    var_2 = module_0.has_message_body(bool_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = "Allow"
    dict_0 = {str_1: default_0, str_1: str_1, str_1: str_1}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    none_type_0 = None
    var_0 = none_type_0.__repr__()
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    var_2 = var_0.__repr__()
    str_0 = var_2.__str__()
    dict_0 = {var_0: var_0}
    bool_0 = module_0.is_entity_header(var_1)
    var_3 = module_1.ismodule(dict_0)
    var_4 = module_0.remove_entity_headers(dict_0)
    var_5 = none_type_0.__repr__()
    var_6 = default_0.__repr__()
    int_0 = 304
    str_1 = var_0.__str__()
    var_7 = module_0.has_message_body(int_0)
    var_8 = var_3.__repr__()
    var_9 = module_1.ismodule(var_8)
    module_0.is_hop_by_hop_header(dict_0)


def test_case_8():
    default_0 = module_0.Default()
    str_0 = "Allow"
    dict_0 = {str_0: default_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    default_0 = module_0.Default()
    str_0 = "Allow"
    var_0 = default_0.__repr__()
    dict_0 = {str_0: default_0, str_0: str_0, str_0: str_0}
    str_1 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)
