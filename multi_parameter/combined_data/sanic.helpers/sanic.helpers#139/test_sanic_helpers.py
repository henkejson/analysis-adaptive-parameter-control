# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"\x17\xfc\xaa\xe9/7aNl\x8c\xd8\xf0\xf4\xb5S>\xfa"
    module_0.has_message_body(bytes_0)


def test_case_1():
    str_0 = "C%t`W3xrk\x0c'CR:\\]\x0c-6p"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\x17\xfc\xaa\xe9/7aNl\x8c\xd8\xf0\xf4\xb5S>\xfa"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = module_0.is_hop_by_hop_header(str_0)
    var_0 = default_0.__repr__()
    default_1 = module_0.Default()
    str_2 = default_0.__str__()
    bool_0 = module_0.is_atty()


def test_case_5():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    default_1 = module_0.Default()
    str_1 = default_0.__str__()


def test_case_6():
    bytes_0 = b"\xa7Y\x02\x10y\xe7\x8d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 305
    bytes_1 = b"\x91\x18Pf \x06"
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.is_hop_by_hop_header(bytes_1)
    str_0 = var_1.__str__()
    var_3 = module_0.is_entity_header(str_0)
    str_1 = var_1.__str__()
    bool_0 = module_0.is_atty()


def test_case_7():
    dict_0 = {}
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    bytes_0 = b"\x91\x18Pf \x06"
    bool_0 = True
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_2.__str__()
    var_4 = module_0.is_entity_header(str_0)
    str_1 = var_2.__str__()
    var_5 = module_1.ismodule(var_1)
    bool_1 = module_0.is_atty()
    module_0.is_hop_by_hop_header(var_5)
