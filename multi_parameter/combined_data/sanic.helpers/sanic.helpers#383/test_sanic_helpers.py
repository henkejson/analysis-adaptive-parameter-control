# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()


def test_case_1():
    bytes_0 = b"9\x158J\x1d\xe7\xabs$\xf6\xf9\x89\xf7\xd1"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    bytes_0 = b"\xdeW\xb6l\x07\xb7\xfc;\xce*9\x92!\x12\xe2\xfe|%\xa8"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()


def test_case_5():
    bool_0 = False
    str_0 = "zQQ>U$1gFSBiw5r\x0b["
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.is_entity_header(str_0)
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    module_0.import_string(bool_0)


def test_case_6():
    int_0 = 406
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_7():
    bool_0 = True
    var_0 = bool_0.__repr__()
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    str_3 = var_0.__str__()
    int_0 = 304
    bool_1 = module_0.is_atty()
    var_1 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    bytes_0 = b"\xf7/\x1e,\n\x88\xd5Vj\xe94\xf4X\xcc\xcb\xdb9O\xfe"
    str_4 = var_1.__str__()
    var_2 = bool_0.__repr__()
    dict_0 = {
        bytes_0: var_2,
        var_2: bytes_0,
        var_2: var_2,
        bytes_0: var_2,
        var_2: bytes_0,
    }
    bool_2 = module_0.is_atty()
    var_3 = module_0.remove_entity_headers(dict_0)
    str_5 = default_0.__str__()
    var_4 = module_0.is_hop_by_hop_header(str_2)
    var_5 = module_0.is_entity_header(bytes_0)


def test_case_8():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0)
    module_0.remove_entity_headers(str_0)
