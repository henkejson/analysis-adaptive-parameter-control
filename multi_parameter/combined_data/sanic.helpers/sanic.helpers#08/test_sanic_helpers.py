# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    float_0 = 895.0
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(var_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_5():
    bytes_0 = b"\xcdp\x1e\xa6[\x03,\x95\xe3\xf1\xfbA\xab\xf0m\xae\xc9\xf7\xac"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    default_0 = module_0.Default()
    bool_1 = module_0.is_atty()
    var_3 = default_0.__repr__()
    var_4 = module_0.has_message_body(var_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_8():
    default_0 = module_0.Default()
    bytes_0 = b"quack-ack"
    str_0 = default_0.__str__()
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    int_0 = 326
    var_2 = module_0.has_message_body(int_0)
    module_0.has_message_body(bytes_0)


def test_case_9():
    bytes_0 = b"\x9b\xc1\x9en\rK\xbc/\x00"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    default_0 = module_0.Default()
    bytes_0 = b"quack-ack"
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_0 = module_0.is_hop_by_hop_header(str_0)
    bool_1 = False
    var_1 = module_0.has_message_body(bool_1)
    dict_0 = {bytes_0: bytes_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    default_1 = module_0.Default()
    bool_2 = module_0.is_atty()
    bool_3 = module_0.is_atty()
    int_0 = 304
    var_3 = module_0.has_message_body(int_0)
    default_2 = module_0.Default()
    module_0.import_string(default_1, var_3)
