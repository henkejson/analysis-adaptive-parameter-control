# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    int_0 = -694
    var_0 = int_0.__repr__()
    dict_0 = {var_0: int_0, var_0: var_0, var_0: int_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_6():
    int_0 = -694
    var_0 = int_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(var_0)
    dict_0 = {var_0: int_0, var_0: var_0, var_0: int_0}
    var_2 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 2097
    var_0 = module_0.has_message_body(int_0)
    int_1 = 1181
    str_0 = "Inspector host address [default 127.0.0.1]"
    str_1 = int_1.__str__()
    tuple_0 = (str_0,)
    module_0.remove_entity_headers(tuple_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.has_message_body(bool_0)


def test_case_9():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {default_0: default_0, default_0: default_0, default_0: default_0}
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 305
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    int_1 = 304
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(int_1)
    var_2 = var_1.__repr__()
    dict_0 = {var_2: var_0}
    var_3 = module_0.has_message_body(var_1)
    var_4 = module_0.remove_entity_headers(dict_0)
    var_5 = var_4.__repr__()
    bool_0 = module_0.is_atty()
    str_1 = var_1.__str__()
    var_6 = module_0.is_hop_by_hop_header(var_5)
    var_7 = module_1.ismodule(int_1)
    var_8 = module_1.ismodule(var_3)
    object_0 = module_2.object()
    var_9 = module_0.has_message_body(var_7)
    var_10 = dict_0.__repr__()
    module_0.is_hop_by_hop_header(var_8)
