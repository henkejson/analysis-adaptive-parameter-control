# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "NB\\}*?"
    module_0.has_message_body(str_0)


def test_case_1():
    dict_0 = {}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_4():
    str_0 = ""
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = dict_0.__repr__()
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    str_0 = "The HTTP protocol instance\n\n        Returns:\n            Protocol: The HTTP protocol instance\n        "
    default_0 = module_0.Default()
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    bytes_0 = b"\xbd\xea.\x8e\xb1\x04\nV\x04NSN\x12j6"
    tuple_0 = (str_0, bool_0, bytes_0)
    set_0 = {tuple_0, tuple_0}
    module_0.has_message_body(set_0)


def test_case_7():
    float_0 = 1778.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = var_0.__repr__()
    dict_0 = {}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_8():
    str_0 = "U"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    var_2 = module_1.ismodule(var_0)
    module_0.is_entity_header(var_1)
