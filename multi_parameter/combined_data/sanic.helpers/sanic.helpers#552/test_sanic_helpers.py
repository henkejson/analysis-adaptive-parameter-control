# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()


def test_case_1():
    complex_0 = 1600.03372 + 968.33519j
    module_0.remove_entity_headers(complex_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    complex_0 = -1955.069 + 947.312738j
    module_0.is_entity_header(complex_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    int_0 = 1623
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    bool_0 = module_0.is_atty()


def test_case_6():
    default_0 = module_0.Default()
    bytes_0 = b"*\xa0f\xe3\xa9 \xfe\xd3J\xa4S!\x80D\xb3\x897\xc3"
    var_0 = default_0.__repr__()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(dict_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    int_0 = 1623
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = default_0.__str__()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()


def test_case_8():
    bytes_0 = b"$\x98#"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_1.ismodule(dict_0)
    str_0 = dict_0.__str__()
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = default_0.__repr__()
    var_4 = var_3.__repr__()
    var_5 = module_0.has_message_body(var_1)
    module_0.import_string(str_0)
