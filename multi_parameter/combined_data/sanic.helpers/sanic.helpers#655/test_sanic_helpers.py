# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import sanic.helpers as module_1


def test_case_0():
    object_0 = module_0.object()
    module_1.has_message_body(object_0)


def test_case_1():
    bytes_0 = b"'\xcci\xcdq\xaa\xcd\xe1"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    none_type_0 = None
    module_1.is_entity_header(none_type_0)


def test_case_4():
    bytes_0 = b"\xa7\xe2"
    var_0 = module_1.is_hop_by_hop_header(bytes_0)
    module_1.import_string(bytes_0)


def test_case_5():
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    dict_0 = {str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0)
    bool_0 = module_1.is_atty()


def test_case_6():
    int_0 = 203
    var_0 = module_1.has_message_body(int_0)


def test_case_7():
    int_0 = 204
    var_0 = module_1.has_message_body(int_0)
    str_0 = "Cannot un HTTP/3 server without aioquic insaled "
    dict_0 = {str_0: str_0}
    var_1 = module_1.remove_entity_headers(dict_0)
    bool_0 = module_1.is_atty()
    var_2 = module_1.has_message_body(var_0)


def test_case_8():
    str_0 = "sanic.Sanic"
    module_1.import_string(str_0)


def test_case_9():
    int_0 = 204
    var_0 = module_1.has_message_body(int_0)
    str_0 = "Cannot un HTTP/3 server without aioquic insaled "
    dict_0 = {str_0: str_0}
    var_1 = module_1.remove_entity_headers(dict_0)
    bool_0 = module_1.is_atty()
