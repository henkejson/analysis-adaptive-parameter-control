# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    tuple_0 = ()
    module_0.has_message_body(tuple_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    module_0.is_entity_header(bool_1)


def test_case_4():
    dict_0 = {}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_5():
    bool_0 = False
    module_0.remove_entity_headers(bool_0, bool_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bytes_0 = b"@\x91\xd8\xda\xf9\x98&\xf0\x0b\xe7\xfa`\x95\xd95*`\xf3\x9e"
    bool_0 = True
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    tuple_0 = (bool_0, var_1)
    str_0 = var_0.__str__()
    dict_0 = {bytes_0: bool_0, bool_0: bytes_0, bool_0: tuple_0}
    module_0.remove_entity_headers(dict_0)


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    bytes_0 = b"Moved Permanently"
    var_0 = module_1.ismodule(bool_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: var_0}
    default_1 = module_0.Default()
    var_1 = module_0.has_message_body(var_0)
    var_2 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"F\x8f\xd4/nd"
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {bytes_0: bool_0, bytes_0: bool_0, bool_0: bytes_0, bool_0: var_0}
    var_1 = module_1.ismodule(var_0)
    default_0 = module_0.Default()
    int_0 = 355
    var_2 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(dict_0)


def test_case_9():
    bytes_0 = b"@\x91\xd8\xda\xf9\x98&\xf0\x0b\xe7\xfa`\x95\xd95*`\xf3\x9e"
    tuple_0 = (bytes_0, bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: tuple_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    bool_0 = module_0.is_atty()
    bool_1 = False
    bytes_0 = b"F\x8f\xd4/nd"
    var_0 = module_0.has_message_body(bool_1)
    dict_0 = {bytes_0: bool_1, bytes_0: bool_1, bool_1: bytes_0, bool_1: var_0}
    var_1 = module_0.is_entity_header(bytes_0)
    bool_2 = module_0.is_atty()
    default_0 = module_0.Default()
    var_2 = default_0.__repr__()
    var_3 = default_0.__repr__()
    int_0 = 304
    var_4 = module_0.has_message_body(int_0)
    str_0 = default_0.__str__()
    module_0.remove_entity_headers(dict_0)
