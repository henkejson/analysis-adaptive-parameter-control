# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 16
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()


def test_case_1():
    tuple_0 = ()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    str_0 = "l"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    complex_0 = -1302.499861 + 226.52847j
    module_0.is_hop_by_hop_header(complex_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()


def test_case_6():
    int_0 = 438
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    module_0.is_hop_by_hop_header(var_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    str_0 = "worker_state"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_1 = var_0.__repr__()
    str_1 = var_0.__str__()
    str_2 = bool_1.__str__()
    bool_3 = module_0.is_atty()
    var_2 = module_0.has_message_body(var_0)
    var_3 = module_0.has_message_body(bool_3)
    var_4 = module_0.has_message_body(var_2)
    var_5 = module_0.is_entity_header(str_0)
    str_3 = var_0.__str__()
    var_6 = var_4.__repr__()
    var_7 = var_0.__repr__()
    dict_0 = {var_7: var_7}
    var_8 = module_0.remove_entity_headers(dict_0)
    float_0 = 304.0
    default_0 = module_0.Default()
    str_4 = default_0.__str__()
    bool_4 = False
    var_9 = module_0.has_message_body(bool_4)
    var_10 = module_0.has_message_body(float_0)
    module_0.import_string(str_1)
