# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 429
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_1():
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    module_0.is_entity_header(set_0)


def test_case_4():
    int_0 = -1707
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    float_0 = -2284.7099
    var_0 = module_0.has_message_body(float_0)
    set_0 = {var_0, var_0, float_0}
    module_0.is_entity_header(set_0)


def test_case_6():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.Default()
    str_0 = "Allow"
    str_1 = var_0.__str__()
    dict_0 = {str_0: str_0, str_1: bool_0, str_0: var_0, str_0: var_0, str_0: str_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.remove_entity_headers(dict_0, var_2)
    var_4 = var_1.__repr__()
    var_5 = str_1.__repr__()
    var_6 = module_0.is_hop_by_hop_header(var_5)


def test_case_7():
    default_0 = module_0.Default()
    none_type_0 = None
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(var_0)
    module_0.remove_entity_headers(none_type_0)


def test_case_8():
    str_0 = "luFSpF"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()


def test_case_9():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    str_0 = int_0.__str__()
    str_1 = str_0.__str__()
    module_0.remove_entity_headers(var_0)


def test_case_10():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    str_0 = "Allow"
    str_1 = var_0.__str__()
    dict_0 = {str_0: str_0, str_1: bool_0, str_0: var_0, str_0: var_0, str_0: str_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = str_0.__repr__()


def test_case_11():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    str_0 = "Allow"
    str_1 = var_0.__str__()
    dict_0 = {str_0: str_0, str_1: bool_0, str_0: var_0, str_0: var_0, str_0: str_0}
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    var_3 = var_1.__repr__()
    var_4 = var_1.__repr__()
    var_5 = var_0.__repr__()
    var_6 = module_0.is_hop_by_hop_header(var_5)
