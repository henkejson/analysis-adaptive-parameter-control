# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    str_0 = "1V"
    module_0.has_message_body(str_0)


def test_case_1():
    int_0 = 267
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    list_0 = [default_0, default_0]
    var_0 = default_0.__repr__()
    module_0.Default(*list_0)


def test_case_7():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    str_0 = var_0.__str__()
    str_1 = "ld!.z"
    str_2 = default_0.__str__()
    module_0.Default(*str_1)


def test_case_9():
    int_0 = 267
    var_0 = module_0.has_message_body(int_0)


def test_case_10():
    bytes_0 = b"\xa2X\xa79\xf7\x83q\xa7z\x84`\xd3x\xb6\xcf"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_11():
    int_0 = 304
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_1 = module_0.has_message_body(bool_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.has_message_body(var_1)
    var_4 = var_3.__repr__()
    default_1 = module_0.Default()
    str_1 = var_4.__str__()
