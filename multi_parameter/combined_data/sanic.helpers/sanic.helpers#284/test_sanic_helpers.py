# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    str_0 = "pE\t'0%Y(%e'"
    module_0.has_message_body(str_0)


def test_case_1():
    float_0 = -1768.0
    module_0.remove_entity_headers(float_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "pE\t'0<Y(%e'"
    var_0 = module_0.is_entity_header(str_0)


def test_case_4():
    str_0 = "pE\t'0%Y(%e'"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()


def test_case_6():
    float_0 = -1768.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_7():
    str_0 = "\x1b[38;2;255;13;104m"
    bytes_0 = b"\x9e~9\x89\x90y\xcf"
    set_0 = {str_0}
    dict_0 = {str_0: str_0, bytes_0: str_0, str_0: bytes_0, str_0: set_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 210
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_0.__repr__()
    var_3 = var_2.__repr__()
    module_0.import_string(var_3)


def test_case_8():
    bytes_0 = b"Failed Dependency"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    str_0 = "\x1b[38;2;255;13;104m"
    bytes_0 = b"\x9e~9\x89\x90y\xcf"
    set_0 = {str_0}
    dict_0 = {str_0: str_0, bytes_0: str_0, str_0: bytes_0, str_0: set_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 204
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_0.__repr__()
    module_0.has_message_body(set_0)


def test_case_10():
    str_0 = "content-location"
    bytes_0 = b"\x9e~9\x89\x90y\xcf"
    set_0 = {str_0}
    dict_0 = {str_0: str_0, bytes_0: str_0, str_0: bytes_0, str_0: set_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_entity_header(var_0)


def test_case_11():
    str_0 = "content-location"
    bytes_0 = b"\x9e~9\x89\x90y\xcf"
    set_0 = {str_0}
    dict_0 = {str_0: str_0, bytes_0: str_0, str_0: bytes_0, str_0: set_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 205
    var_1 = module_0.has_message_body(int_0)
    str_1 = dict_0.__str__()
    str_2 = var_1.__str__()
    var_2 = module_0.is_hop_by_hop_header(str_1)
    var_3 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_4 = module_0.remove_entity_headers(var_0, str_0)
    default_0 = module_0.Default()
    str_3 = var_1.__str__()
    bool_2 = module_0.is_atty()
    var_5 = default_0.__repr__()
    var_6 = var_0.__repr__()
    module_0.import_string(bool_1)
