# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    float_0 = -174.674
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    float_0 = -174.674
    module_0.is_entity_header(float_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(bool_0)
    str_1 = default_0.__str__()
    dict_0 = {}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    float_0 = 379.5413859089915
    var_0 = module_0.has_message_body(float_0)
    object_0 = module_1.object()
    var_1 = module_0.has_message_body(var_0)
    str_0 = var_0.__str__()
    bytes_0 = b"Unavailable For Legal Reasons"
    str_1 = object_0.__str__()
    str_2 = bytes_0.__str__()
    str_3 = str_1.__str__()
    module_0.remove_entity_headers(str_1)


def test_case_8():
    bytes_0 = b"Unavailabl For Legal\x0eReas\xa8ns"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    float_0 = 304.0
    var_0 = module_0.has_message_body(float_0)
    str_0 = float_0.__str__()
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(var_0)
    var_3 = str_0.__repr__()
    str_1 = default_0.__str__()
    bool_0 = module_0.is_atty()
    dict_0 = {var_1: var_2}
    var_4 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.is_entity_header(default_0)
