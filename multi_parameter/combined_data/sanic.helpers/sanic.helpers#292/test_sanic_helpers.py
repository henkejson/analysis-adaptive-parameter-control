# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bytes_0 = b")\xcd\x19A\xfe\x16\xd4,@E\x92\xa6\x07\x84\x9c\xbb"
    module_0.has_message_body(bytes_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    float_0 = -1366.53698
    module_0.is_hop_by_hop_header(float_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    int_0 = 256
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()


def test_case_8():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    bytes_0 = b'"\n\xaa\xab?'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    bool_0 = True
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = var_2.__repr__()
    str_1 = "p5fXYOj\\-R0[M4"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    var_4 = module_0.remove_entity_headers(dict_0)
    bool_1 = module_0.is_atty()
    dict_1 = {}
    var_5 = module_0.remove_entity_headers(dict_1)
    var_6 = var_1.__repr__()
    bool_2 = module_0.is_atty()
    str_2 = var_5.__str__()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_12():
    object_0 = module_1.object()
    str_0 = "Allow"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    dict_1 = {}
    var_1 = module_0.remove_entity_headers(dict_1)
    var_2 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    str_1 = var_1.__str__()
    bool_1 = False
    var_3 = module_0.is_entity_header(var_2)
    module_0.import_string(bool_1)


def test_case_13():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    var_2 = module_2.ismodule(var_0)
    str_0 = var_2.__str__()
    str_1 = "Allow"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    str_2 = str_0.__str__()
    var_3 = var_2.__repr__()
    dict_1 = {}
    var_4 = module_0.remove_entity_headers(dict_1)
    var_5 = str_0.__repr__()
    bool_1 = module_0.is_atty()
    var_6 = module_0.remove_entity_headers(dict_0, dict_0)
    var_7 = module_0.has_message_body(var_0)
    module_0.is_hop_by_hop_header(var_4)
