# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    bytes_0 = b"'\xb4"
    module_0.has_message_body(bytes_0)


def test_case_1():
    str_0 = ":_T|k/gHDLj#0Y8zZ"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    bool_1 = True
    module_0.is_hop_by_hop_header(bool_1)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    int_0 = 101
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    module_0.is_hop_by_hop_header(var_0)


def test_case_7():
    int_0 = 19
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(var_0)
    var_3 = var_2.__repr__()
    module_0.remove_entity_headers(int_0)


def test_case_8():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    var_1 = var_0.__repr__()
    dict_0 = {str_1: var_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    str_2 = var_0.__str__()
    var_3 = module_1.ismodule(str_2)
    str_3 = var_0.__str__()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_4 = module_1.ismodule(default_0)
    int_1 = 75
    var_4 = module_0.has_message_body(int_1)
    var_5 = var_4.__repr__()
    module_0.import_string(var_1)


def test_case_9():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0)
