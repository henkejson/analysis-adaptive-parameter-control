# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"W\xeb\x05\xd4o/\xb2"
    module_0.has_message_body(bytes_0)


def test_case_1():
    bytes_0 = b"\xf5\xf7;\x14\x8b\xf1\x94"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"W\xeb\x05\xd4o/\xb2"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = module_0.is_entity_header(bytes_0)


def test_case_4():
    bytes_0 = b"W\xeb\x05\xd4o/\xb2"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: var_0, var_0: default_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.has_message_body(bool_0)
    str_0 = bool_0.__str__()


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {str_0: str_0, str_0: default_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 206
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_1.ismodule(int_0)
    default_0 = module_0.Default()
    var_2 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = var_1.__str__()
    dict_0 = {var_2: var_2, var_2: default_0, var_2: var_2, var_2: var_2, var_2: var_2}
    var_3 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(var_1)
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.remove_entity_headers(int_0)


def test_case_10():
    str_0 = "logging.StreamHandler"
    var_0 = module_0.import_string(str_0)
