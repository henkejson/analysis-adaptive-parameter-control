# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"Requested Range Not Satisfiable"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    str_0 = "\r"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    str_0 = "Jd6^r"
    str_1 = str_0.__str__()
    dict_0 = {str_0: str_0, str_1: str_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    module_0.has_message_body(str_2)


def test_case_6():
    float_0 = 369.2169
    var_0 = module_0.has_message_body(float_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()


def test_case_8():
    bool_0 = False
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    bool_2 = module_0.is_atty()
    var_1 = bool_0.__repr__()
    bool_3 = module_0.is_atty()
    str_0 = default_0.__str__()
    str_1 = bool_0.__str__()
    var_2 = module_1.ismodule(bool_2)
    var_3 = var_0.__repr__()
    str_2 = var_0.__str__()
    var_4 = var_1.__repr__()
    str_3 = var_1.__str__()
    dict_0 = {var_3: var_4, str_1: str_1, str_1: var_3}
    default_1 = module_0.Default()
    default_2 = module_0.Default()
    default_3 = module_0.Default()
    str_4 = var_3.__str__()
    var_5 = module_0.remove_entity_headers(dict_0)
    str_5 = var_1.__str__()
    str_6 = module_0.remove_entity_headers(var_5)
    var_6 = module_0.is_hop_by_hop_header(str_5)
    str_7 = var_6.__str__()
    str_8 = var_6.__str__()
    var_7 = default_0.__repr__()
    var_8 = default_2.__repr__()
    default_4 = module_0.Default()
    int_0 = 304
    var_9 = module_0.has_message_body(int_0)
    str_9 = var_8.__repr__()
    module_0.has_message_body(var_1)
