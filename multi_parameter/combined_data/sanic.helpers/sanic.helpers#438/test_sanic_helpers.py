# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bytes_0 = b"\x91\x96\xa3h"
    module_0.has_message_body(bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"6\x19r\xaa\xfa\x15\xa5|\xb2\x85K*\xdd\x88\xc2\x8d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bytes_0 = b"40U-"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_5():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)
    var_1 = var_0.__repr__()
    module_0.is_entity_header(default_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {var_0: int_0, var_0: int_0}
    module_0.remove_entity_headers(dict_0)


def test_case_9():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0)
