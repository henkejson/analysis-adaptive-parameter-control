# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "WD$"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_1 = module_1.ismodule(bool_0)
    var_2 = var_1.__repr__()


def test_case_6():
    bytes_0 = b"\xd7\x83\x9b(D\x8e+\xce\xa1\x92\no3"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = module_0.has_message_body(var_0)
    int_0 = 202
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.is_entity_header(bytes_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_entity_header(var_3)


def test_case_7():
    int_0 = 355
    var_0 = module_0.has_message_body(int_0)
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    bytes_0 = b">\xfdsm\xd1\x80\xa7F\xf6\xf5\xba\xbb\x1a\x0e\xcav\xb9r"
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = module_0.is_hop_by_hop_header(bytes_0)
    var_3 = var_1.__repr__()
    var_4 = module_0.is_entity_header(var_3)
    str_0 = default_0.__str__()
    default_1 = module_0.Default(*var_0)
    var_5 = var_1.__repr__()
    int_0 = 204
    var_6 = module_0.has_message_body(int_0)
    var_7 = module_0.has_message_body(var_1)
    var_8 = var_7.__repr__()
    module_0.is_entity_header(var_0)


def test_case_9():
    str_0 = "content-length"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    str_1 = var_0.__str__()
    var_2 = var_0.__repr__()


def test_case_10():
    str_0 = 'WmHSuQB>]v(<qGP"'
    var_0 = module_0.is_hop_by_hop_header(str_0)
    str_1 = var_0.__str__()
    str_2 = "content-length"
    dict_0 = {str_2: str_2}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    str_3 = var_1.__str__()
    module_0.is_entity_header(dict_0)
