# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    set_0 = set()
    module_0.has_message_body(set_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "6d)J6Ml\n*\x0bwSqNnv"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)


def test_case_4():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_0 = default_1.__repr__()
    var_1 = var_0.__repr__()
    var_2 = default_1.__repr__()
    bool_1 = False
    module_0.import_string(bool_1)


def test_case_6():
    str_0 = "6d)J6Ml\n*\x0bwSqNnv"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = module_0.has_message_body(var_1)
    default_0 = module_0.Default()
    str_1 = var_0.__str__()
    bool_1 = module_0.is_atty()
    str_2 = default_0.__str__()
    module_0.Default(*var_0, **dict_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    int_0 = 203
    str_0 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_1.ismodule(var_0)
    var_2 = module_0.has_message_body(bool_0)
    default_0 = module_1.ismodule(int_0)
    str_0 = default_0.__str__()
    var_3 = module_1.ismodule(var_0)
    str_1 = var_0.__str__()
    bool_1 = module_0.is_atty()
    str_2 = default_0.__str__()
    str_3 = var_0.__str__()
    str_4 = var_2.__str__()
    int_1 = -1064
    module_0.is_hop_by_hop_header(int_1)


def test_case_9():
    str_0 = "last-modified"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_entity_header(dict_0)


def test_case_10():
    str_0 = "last-modified"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = module_0.remove_entity_headers(dict_0, dict_0)
    int_0 = 203
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.remove_entity_headers(dict_0)
    float_0 = 994.39
    var_2 = module_0.has_message_body(float_0)
    module_0.is_hop_by_hop_header(dict_0)
