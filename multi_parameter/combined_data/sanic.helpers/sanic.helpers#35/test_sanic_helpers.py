# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import inspect as module_0
import sanic.helpers as module_1


def test_case_0():
    str_0 = "'&|/)!rUu:"
    var_0 = module_0.ismodule(str_0)
    var_1 = module_1.has_message_body(var_0)


def test_case_1():
    none_type_0 = None
    module_1.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    str_0 = "Sanic is running in PRODUCTION mode. Consider using '--debug' or '--dev' while actively developing your application."
    var_0 = module_1.is_entity_header(str_0)


def test_case_4():
    int_0 = 100
    var_0 = module_1.has_message_body(int_0)
    var_1 = var_0.__repr__()
    bool_0 = module_1.is_atty()
    default_0 = module_1.Default()
    bool_1 = module_1.is_atty()
    var_2 = var_0.__repr__()
    module_1.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    none_type_0 = None
    module_1.is_entity_header(none_type_0)


def test_case_6():
    bool_0 = module_1.is_atty()
    int_0 = 208
    var_0 = module_1.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    var_3 = module_1.has_message_body(int_0)
    str_0 = '_VA`})"'
    module_1.has_message_body(str_0)


def test_case_7():
    bool_0 = module_1.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_1.remove_entity_headers(dict_0)


def test_case_8():
    bool_0 = module_1.is_atty()
    var_0 = bool_0.__repr__()
    var_1 = var_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_1, var_0: var_0, var_1: var_1}
    var_2 = module_1.is_hop_by_hop_header(var_1)
    var_3 = module_1.is_hop_by_hop_header(var_1)
    var_4 = var_3.__repr__()
    var_5 = module_1.remove_entity_headers(dict_0)
    bool_1 = module_1.is_atty()
    int_0 = 204
    float_0 = 19.455715007574646
    var_6 = module_1.has_message_body(float_0)
    var_7 = module_1.has_message_body(int_0)
    module_1.is_entity_header(bool_1)
