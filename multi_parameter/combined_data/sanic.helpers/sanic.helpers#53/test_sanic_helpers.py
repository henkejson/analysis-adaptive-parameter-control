# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b"\xf5n\x83\x95\xa9\x19\xee\xd4\xc5\xaa!A"
    module_0.remove_entity_headers(bytes_0, bytes_0)


def test_case_2():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0, var_0: bool_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.remove_entity_headers(list_0, bool_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = bool_0.__repr__()
    str_1 = var_1.__str__()
    dict_0 = {var_1: var_1, var_1: bool_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.is_hop_by_hop_header(var_1)
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    module_0.Default(*var_1)


def test_case_8():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_9():
    bool_0 = module_0.is_atty()
    int_0 = 304
    str_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(int_0)
