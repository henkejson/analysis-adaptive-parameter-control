# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_1, var_0)


def test_case_1():
    bytes_0 = b"\xff["
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    module_0.remove_entity_headers(var_0, bytes_0)


def test_case_2():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()
    module_0.remove_entity_headers(bool_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()


def test_case_6():
    str_0 = '"K+tK4|M)'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = module_0.is_entity_header(str_0)
    var_2 = var_1.__repr__()
    var_3 = str_0.__repr__()


def test_case_7():
    bool_0 = module_0.is_atty()
    int_0 = 3870
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = var_0.__str__()


def test_case_8():
    bool_0 = False
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_1.ismodule(bool_0)
    float_0 = 204.0
    var_2 = module_0.has_message_body(float_0)
    var_3 = var_0.__repr__()
    var_4 = var_2.__repr__()
    default_1 = module_0.Default()
    str_1 = var_1.__str__()
    bool_1 = module_0.is_atty()
    var_5 = module_0.has_message_body(bool_0)
    bool_2 = module_0.is_atty()
    var_6 = var_3.__repr__()
    var_7 = var_4.__repr__()
    str_2 = var_0.__str__()
    object_0 = module_2.object(*var_0)
    var_8 = module_0.is_hop_by_hop_header(var_7)
    var_9 = var_8.__repr__()
    default_2 = module_0.Default(*var_0)
    module_0.has_message_body(default_2)


def test_case_9():
    str_0 = "content-location"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(var_0)


def test_case_10():
    str_0 = "content-location"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    default_0 = module_0.Default()
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    module_0.has_message_body(var_0)
