# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import inspect as module_0
import sanic.helpers as module_1
import builtins as module_2


def test_case_0():
    str_0 = "K;0r"
    var_0 = module_0.ismodule(str_0)
    var_1 = module_1.has_message_body(var_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    none_type_0 = None
    module_1.is_entity_header(none_type_0)


def test_case_4():
    str_0 = "!o'lBZlo|_-q>)N`"
    var_0 = module_1.is_entity_header(str_0)
    var_1 = module_1.has_message_body(var_0)
    bytes_0 = b"\xb1\xe7"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_1.is_hop_by_hop_header(dict_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_1.remove_entity_headers(dict_0)
    var_1 = dict_0.__repr__()
    default_0 = module_1.Default(**var_0)
    str_0 = default_0.__str__()
    str_1 = str_0.__str__()


def test_case_6():
    str_0 = "5(g0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 206
    var_0 = module_1.has_message_body(int_0)
    bool_0 = module_1.is_atty()
    module_1.is_entity_header(bool_0)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    var_0 = module_2.object()
    bool_1 = module_1.is_atty()
    var_1 = module_1.has_message_body(bool_1)
    var_2 = module_1.has_message_body(var_1)
    int_0 = 204
    var_3 = module_1.has_message_body(int_0)
    var_4 = var_1.__repr__()
    var_5 = var_3.__repr__()
    module_1.is_entity_header(dict_0)


def test_case_9():
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    str_1 = "content-encoding"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    var_0 = module_1.remove_entity_headers(dict_0, dict_0)
    bool_0 = module_1.is_atty()
    module_1.has_message_body(var_0)


def test_case_10():
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_1 = "content-encoding"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    var_1 = module_1.remove_entity_headers(dict_0, str_0)
    bool_0 = module_1.is_atty()
    module_1.has_message_body(var_1)
