# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bytes_0 = b"\xb5XC"
    module_0.has_message_body(bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "W[S=!#>\n"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    bool_2 = False
    module_0.is_hop_by_hop_header(bool_2)


def test_case_6():
    set_0 = set()
    default_0 = module_0.Default(*set_0)
    var_0 = default_0.__repr__()
    module_0.has_message_body(set_0)


def test_case_7():
    int_0 = 329
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    dict_0 = {}
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    var_2 = module_0.is_hop_by_hop_header(str_0)
    var_3 = module_0.has_message_body(var_0)
    var_4 = default_0.__repr__()
    module_0.is_entity_header(int_0)


def test_case_8():
    int_0 = 508
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    bytes_0 = b"\xf1Rn\xb2\x160\x7f\x19p\x92Nu\xc9I~\x89\xf3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = module_0.is_entity_header(bytes_0)
    var_2 = module_0.has_message_body(var_1)


def test_case_10():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    str_0 = int_0.__str__()
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    dict_0 = {str_0: str_0}
    var_2 = var_1.__repr__()
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = var_2.__repr__()
    module_0.is_hop_by_hop_header(int_0)
