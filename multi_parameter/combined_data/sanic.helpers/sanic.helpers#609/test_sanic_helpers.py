# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bytes_0 = b"\x8a8\xdf\xda\x15E\xaf\xb3"
    module_0.has_message_body(bytes_0)


def test_case_1():
    str_0 = "X'sS"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    module_0.import_string(bool_1)


def test_case_7():
    int_0 = 203
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    dict_0 = {str_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 204
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    var_2 = module_0.has_message_body(bool_0)
    dict_0 = {str_0: bool_1}
    var_3 = var_0.__repr__()
    var_4 = var_3.__repr__()
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = var_5.__repr__()
    var_7 = var_0.__repr__()
    var_8 = module_0.has_message_body(int_0)
    var_9 = module_0.is_hop_by_hop_header(var_7)
    var_10 = var_9.__repr__()
    default_0 = module_0.Default()
