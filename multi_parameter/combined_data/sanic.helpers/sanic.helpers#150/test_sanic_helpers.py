# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    str_0 = "\x0ccr}.$R\\"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    bool_0 = True
    module_0.remove_entity_headers(bool_0, bool_0)


def test_case_6():
    str_0 = "Strict"
    var_0 = module_0.is_entity_header(str_0)
    bytes_0 = b":status"
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(var_0)
    var_2 = default_0.__repr__()
    var_3 = module_0.is_hop_by_hop_header(bytes_0)
    module_0.import_string(default_0)


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    dict_0 = {}
    bool_1 = module_0.is_atty()
    str_0 = default_0.__str__()
    default_1 = module_0.Default()
    var_0 = default_1.__repr__()
    var_1 = default_1.__repr__()
    default_2 = module_0.Default()
    var_2 = module_0.remove_entity_headers(dict_0, var_1)


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = 20
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    bytes_0 = b'vY\xdf\xb1\x92=\n\xe1L\xaag\xf2"y\x9d"\xbc\xc5\xc1\xe7'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default(**dict_0)
    var_1 = module_1.ismodule(dict_0)
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    int_0 = 304
    object_0 = module_2.object(**dict_0)
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.has_message_body(var_2)
    str_1 = default_0.__str__()
    module_0.is_hop_by_hop_header(bool_0)
