# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_1():
    str_0 = "; chrset=utf-8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(var_0)
    var_3 = module_0.is_entity_header(var_0)
    module_0.import_string(var_3, var_3)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = module_0.is_entity_header(var_1)
    str_1 = var_2.__str__()
    bool_1 = module_0.is_atty()
    str_2 = default_0.__str__()
    module_0.remove_entity_headers(var_2)


def test_case_6():
    int_0 = 2417
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    module_0.import_string(str_0)


def test_case_7():
    int_0 = -729
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    module_0.remove_entity_headers(var_1)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.has_message_body(bool_0)
    str_0 = var_2.__str__()
    var_4 = var_3.__repr__()
    var_5 = default_0.__repr__()
    dict_0 = {}
    var_6 = module_0.remove_entity_headers(dict_0)
    str_1 = var_4.__str__()
    var_7 = var_6.__repr__()
    var_8 = var_7.__repr__()
    var_9 = module_0.is_hop_by_hop_header(var_7)
    var_10 = module_1.ismodule(str_1)
    var_11 = var_2.__repr__()
    default_1 = module_0.Default()
    var_12 = var_9.__repr__()
    str_2 = default_1.__str__()
    dict_1 = {var_8: dict_0, var_12: str_1, var_5: var_3}
    var_13 = module_0.remove_entity_headers(dict_1)
    module_0.is_hop_by_hop_header(bool_0)
