# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 305
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    list_0 = []
    module_0.is_hop_by_hop_header(list_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_1 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    str_0 = var_0.__str__()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    list_0 = []
    default_0 = module_0.Default(*list_0)
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_7():
    int_0 = 305
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_8():
    str_0 = "<__ftMile_uri__:"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    str_0 = "<__f^tMile_u0i__:"
    var_0 = module_0.is_entity_header(str_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = var_1.__repr__()
    int_0 = 304
    str_1 = var_0.__str__()
    var_3 = var_1.__repr__()
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_1.__repr__()
    var_6 = module_0.is_entity_header(var_1)
    dict_0 = {str_0: var_4}
    var_7 = module_0.remove_entity_headers(dict_0)
    var_8 = module_0.has_message_body(var_0)
    var_9 = module_0.has_message_body(var_6)
    module_0.remove_entity_headers(var_4)


def test_case_10():
    str_0 = "Content-Length"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {str_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.has_message_body(var_0)
    var_3 = module_0.has_message_body(var_2)


def test_case_11():
    str_0 = "Content-Length"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    dict_0 = {str_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.has_message_body(var_1)
