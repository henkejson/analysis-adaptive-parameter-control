# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 349
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_1.ismodule(bool_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    int_0 = 349
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    list_0 = [default_0]
    str_0 = "&7lvP~ik\n)-"
    str_1 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_2 = "NQ*D@ofsMS*&0_"
    dict_0 = {str_0: default_0, str_2: list_0, str_2: list_0}
    module_0.Default(*list_0, **dict_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = bool_0.__str__()


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = bool_0.__repr__()
    module_0.import_string(int_0)


def test_case_10():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    str_0 = "allow"
    dict_0 = {str_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.is_hop_by_hop_header(var_0)


def test_case_11():
    int_0 = 202
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    str_0 = var_0.__str__()
    var_3 = bool_0.__repr__()
    str_1 = "allow"
    dict_0 = {str_1: var_3}
    var_4 = module_0.remove_entity_headers(dict_0)
    list_0 = [str_1, str_1]
    var_5 = module_0.remove_entity_headers(dict_0, list_0)
    module_0.has_message_body(str_1)
