# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 301
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bool_0 = True
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "Dk?%J\\b\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    dict_0 = {}
    list_0 = []
    default_0 = module_0.Default(*list_0, **dict_0)
    str_0 = default_0.__str__()
    int_0 = 378
    var_0 = module_0.has_message_body(int_0)
    module_0.has_message_body(str_0)


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.import_string(var_1)


def test_case_7():
    str_0 = "allow"
    var_0 = module_0.is_entity_header(str_0)
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    str_1 = var_2.__str__()
    var_3 = module_0.is_hop_by_hop_header(str_0)
    var_4 = var_0.__repr__()
    dict_1 = {}
    bool_1 = module_0.is_atty()
    module_0.Default(*var_3, **dict_1)


def test_case_8():
    str_0 = "allow"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    var_1 = module_0.has_message_body(var_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.is_hop_by_hop_header(str_0)
    bool_0 = module_0.is_atty()
    list_0 = []
    default_0 = module_0.Default(*list_0, **var_2)
    var_4 = module_0.remove_entity_headers(dict_0, dict_0)
    str_1 = default_0.__str__()
    default_1 = module_0.Default()
    var_5 = var_2.__repr__()
    int_0 = 400
    var_6 = module_0.has_message_body(int_0)
    str_2 = var_4.__str__()
    module_0.import_string(var_2)


def test_case_9():
    str_0 = "allow"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    var_1 = module_0.is_entity_header(str_0)
    var_2 = module_0.has_message_body(var_1)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = module_0.is_hop_by_hop_header(str_0)
    dict_1 = {}
    var_5 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    list_0 = []
    default_0 = module_0.Default(*list_0, **dict_1)
    var_6 = module_0.is_entity_header(str_0)
    str_1 = default_0.__str__()
    default_1 = module_0.Default()
    bool_1 = module_0.is_atty()
    var_7 = var_5.__repr__()
    int_0 = 204
    var_8 = module_0.Default(**dict_1)
    var_9 = default_0.__repr__()
    var_10 = module_0.has_message_body(int_0)
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, bool_0)
