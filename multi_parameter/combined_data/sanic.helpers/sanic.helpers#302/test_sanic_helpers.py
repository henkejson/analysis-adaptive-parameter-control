# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 201
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bool_0 = False
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.is_hop_by_hop_header(dict_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_0 = module_1.ismodule(bool_0)
    float_0 = 102.37039
    var_1 = module_0.has_message_body(float_0)
    module_0.is_hop_by_hop_header(var_1)


def test_case_7():
    bool_0 = module_0.is_atty()
    float_0 = 10.0
    var_0 = module_0.has_message_body(float_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    str_0 = "-pkI"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)


def test_case_11():
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = module_0.is_entity_header(str_0)
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.has_message_body(bool_0)


def test_case_12():
    str_0 = "content-range"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.is_entity_header(str_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = dict_0.__repr__()
    var_3 = module_0.remove_entity_headers(dict_0, dict_0)
    var_4 = module_0.remove_entity_headers(var_3)
