# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 336
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"/\xa7\xab\xa6u"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    bool_0 = True
    module_0.remove_entity_headers(bool_0, bool_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    int_0 = -365
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()


def test_case_7():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_8():
    bool_0 = module_0.is_atty()
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_0 = module_0.has_message_body(bool_0)
    bytes_0 = b"\x15\x83\xab\xb3\x00u"
    bool_1 = False
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(var_1)
    var_3 = var_0.__repr__()
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_1}
    str_1 = default_0.__str__()
    var_4 = var_0.__repr__()
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = module_0.has_message_body(bool_1)
    int_0 = 304
    var_7 = module_0.has_message_body(int_0)
    var_8 = module_0.has_message_body(var_0)
    var_9 = var_7.__repr__()
