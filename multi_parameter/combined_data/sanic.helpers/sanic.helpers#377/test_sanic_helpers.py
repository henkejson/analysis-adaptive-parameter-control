# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = "r[="
    module_0.has_message_body(str_1)


def test_case_1():
    str_0 = "Q-k)I>g\rkkT:^$My(5h"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_5():
    float_0 = -190.68
    dict_0 = {float_0: float_0}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_6():
    int_0 = 115
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    var_2 = module_0.is_hop_by_hop_header(var_1)
    var_3 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    dict_0 = {var_3: var_1, var_0: var_0}
    module_0.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = -75
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    float_0 = 704.9409
    module_0.import_string(float_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    var_1 = var_0.__repr__()
    str_2 = default_0.__str__()
    var_2 = default_0.__repr__()
    var_3 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    str_3 = default_0.__str__()
    var_4 = default_0.__repr__()
    str_4 = var_4.__str__()
    var_5 = default_0.__repr__()
    module_0.import_string(str_4, int_0)
