# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    tuple_0 = ()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = -78
    module_0.is_entity_header(int_0)


def test_case_4():
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(default_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)


def test_case_7():
    int_0 = 150
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    str_0 = var_1.__str__()


def test_case_8():
    str_0 = "14SKB$I\\h<&!"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = int_0.__repr__()
    bool_0 = module_0.is_atty()
    str_0 = int_0.__str__()
    var_2 = var_0.__repr__()
    var_3 = var_1.__repr__()
    str_1 = var_0.__str__()
    var_4 = var_1.__repr__()
    str_2 = "14SKB$I\\h,<&!"
    dict_0 = {str_2: bool_0}
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = module_0.is_hop_by_hop_header(var_1)
    var_7 = module_0.is_entity_header(str_1)
    var_8 = module_1.ismodule(var_5)
    var_9 = module_0.is_hop_by_hop_header(var_1)
    var_10 = module_0.has_message_body(var_6)
    module_0.has_message_body(var_2)
