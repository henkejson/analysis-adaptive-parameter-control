# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 54
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"Insufficient Storage"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "data is a dict-like object"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    int_0 = 100
    module_0.remove_entity_headers(int_0, int_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    module_0.has_message_body(var_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    list_0 = [bool_0, bool_0]
    module_0.Default(*list_0)


def test_case_8():
    float_0 = 3780.86
    var_0 = module_0.has_message_body(float_0)
    int_0 = 4208
    module_0.is_hop_by_hop_header(int_0)


def test_case_9():
    bytes_0 = b"\x1b\xae\xc20\x8b&!\xc3x\xb31\xe8S\xd4"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = bytes_0.__repr__()
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = var_0.__str__()
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    str_1 = default_0.__str__()
    var_3 = module_0.has_message_body(var_2)
    module_0.is_hop_by_hop_header(var_0)
