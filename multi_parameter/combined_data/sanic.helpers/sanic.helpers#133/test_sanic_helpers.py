# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 228
    str_0 = module_0.has_message_body(int_0)


def test_case_1():
    tuple_0 = ()
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(tuple_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bytes_0 = b"k=<ptp"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_5():
    tuple_0 = ()
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    int_0 = 273
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_1.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    int_0 = 273
    var_1 = module_0.has_message_body(int_0)
    module_0.has_message_body(default_0)


def test_case_8():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = module_0.has_message_body(var_0)


def test_case_9():
    float_0 = 304.0
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_0.__repr__()
    str_1 = default_0.__str__()
    var_3 = float_0.__repr__()
    var_4 = var_0.__repr__()
    str_2 = var_1.__str__()
    str_3 = float_0.__str__()
    dict_0 = {var_2: default_0, var_3: bool_0, var_3: var_3}
    var_5 = module_0.has_message_body(var_0)
    str_4 = var_4.__str__()
    var_6 = module_0.remove_entity_headers(dict_0)
    var_7 = module_0.is_hop_by_hop_header(var_3)
    str_5 = var_3.__str__()
    var_8 = var_3.__repr__()
    var_9 = default_0.__repr__()
    var_10 = var_9.__repr__()
    var_11 = module_0.is_hop_by_hop_header(str_5)
    var_12 = var_4.__repr__()
    module_0.has_message_body(var_4)
