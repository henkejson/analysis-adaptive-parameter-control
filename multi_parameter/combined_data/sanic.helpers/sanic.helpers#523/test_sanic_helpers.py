# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 305
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"\xaf\xe0Z\xe4\x94\xd0S\x83\xf0.\x1cW{\xb0C"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = 647
    list_0 = [int_0, int_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    default_1 = module_0.Default()


def test_case_5():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    module_0.remove_entity_headers(dict_0)


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.Default()
    bool_1 = module_0.is_atty()
    int_0 = 304
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.has_message_body(bool_1)
    module_0.is_hop_by_hop_header(var_3)
