# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_entity_header(bool_0)


def test_case_1():
    bytes_0 = b"Unavailable For Legal Reasons"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bytes_0 = b"\x08\x84s"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    module_0.import_string(bytes_0, bytes_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    complex_0 = 18.2 - 14.695j
    module_0.has_message_body(complex_0)


def test_case_6():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    object_0 = module_1.object()
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    str_0 = default_0.__str__()
    var_3 = module_0.is_entity_header(var_1)


def test_case_7():
    float_0 = 1495.52
    var_0 = module_0.has_message_body(float_0)
    module_0.is_entity_header(float_0)


def test_case_8():
    bytes_0 = b"4\t\xe4\x96\xfdX\xaa>s\x1a\x82@9<\xc7Wjc"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.is_entity_header(bytes_0)
    var_3 = var_2.__repr__()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 204
    var_4 = module_0.has_message_body(int_0)
    var_5 = module_0.remove_entity_headers(dict_0)
    object_0 = module_1.object()
    var_6 = module_0.remove_entity_headers(var_5)
    var_7 = module_0.has_message_body(var_2)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    var_8 = var_0.__repr__()
    str_1 = var_1.__str__()
    module_0.is_entity_header(default_0)
