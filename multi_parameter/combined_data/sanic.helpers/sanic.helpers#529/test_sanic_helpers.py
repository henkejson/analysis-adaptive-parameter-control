# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_entity_header(var_0)


def test_case_4():
    bytes_0 = b"\xd6\xcdc\xdd\xc1\xc3F"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_5():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    bool_1 = False
    var_2 = module_0.is_hop_by_hop_header(var_1)
    var_3 = default_1.__repr__()
    dict_0 = {bool_1: var_3, bool_1: var_3, bool_1: var_3}
    module_0.has_message_body(dict_0)


def test_case_6():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(var_1)
    module_0.is_entity_header(var_2)


def test_case_7():
    int_0 = 431
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    float_0 = 204.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(var_0)
    default_0 = module_0.Default()
    module_0.import_string(default_0)
