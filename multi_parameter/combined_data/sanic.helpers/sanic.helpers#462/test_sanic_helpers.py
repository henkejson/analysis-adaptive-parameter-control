# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b"\t\xb6\xc9\x01<\xd4\xd8\xc1\x0b\\12_\xc6y\xda\xbf\x82R\x9b"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = 672
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    var_2 = module_0.has_message_body(var_1)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    default_1 = module_0.Default()
    int_0 = 76
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(str_0)


def test_case_6():
    bytes_0 = b"Requested Range Not Satisfiable"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    default_1 = module_0.Default()
    var_2 = default_0.__repr__()
    int_0 = 204
    var_3 = module_0.has_message_body(int_0)
    module_0.import_string(int_0)
