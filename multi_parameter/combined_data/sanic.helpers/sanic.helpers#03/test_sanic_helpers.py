# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = (
        "Listener events for the main process are not available with create_server()"
    )
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    int_0 = 203
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    float_0 = 107.33937327988924
    var_0 = module_0.has_message_body(float_0)


def test_case_6():
    float_0 = 220.37967
    str_0 = module_0.has_message_body(float_0)


def test_case_7():
    str_0 = "YH"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_1.ismodule(str_0)
    var_1 = module_0.remove_entity_headers(dict_0, str_0)
    var_2 = var_0.__repr__()
    str_1 = var_0.__str__()
    var_3 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    dict_1 = {}
    str_2 = var_1.__str__()
    var_4 = var_1.__repr__()
    var_5 = var_3.__repr__()
    default_0 = module_0.Default(**dict_1)
    var_6 = module_0.has_message_body(var_0)
    str_3 = default_0.__str__()
    int_0 = 204
    str_4 = var_2.__str__()
    var_7 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_6)
