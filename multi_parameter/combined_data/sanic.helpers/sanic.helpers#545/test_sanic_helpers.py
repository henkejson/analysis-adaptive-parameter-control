# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    float_0 = 304.50485
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    str_0 = "^[d>'Q8Ld"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"Ci\xab\x9e\xeeKq\xe8\x15\x11\xfc\x0c\x19v"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    bool_0 = True
    module_0.import_string(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_entity_header(var_0)


def test_case_5():
    float_0 = 304.50485
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_6():
    float_0 = 304.0
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(float_0)
    str_1 = "^[D>CQ8("
    var_2 = var_1.__repr__()
    var_3 = var_1.__repr__()
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    var_4 = module_0.remove_entity_headers(dict_0)
    str_2 = var_0.__str__()
    var_5 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    var_6 = module_0.has_message_body(bool_0)
    var_7 = var_4.__repr__()
    default_1 = module_0.Default()
    var_8 = module_0.is_entity_header(str_1)
    module_0.is_hop_by_hop_header(var_4)
