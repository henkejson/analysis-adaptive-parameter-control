# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "fv\\F2NR#I8cmD \x0b:^"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_4():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, none_type_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(bool_0)
    module_0.is_entity_header(var_0)


def test_case_7():
    int_0 = 1012
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = var_1.__str__()
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(str_0)


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_1.ismodule(tuple_0)
    var_1 = var_0.__repr__()
    object_0 = module_2.object()
    str_0 = object_0.__str__()
    str_1 = "fv\\.2NR#I8cmD \x0b:^"
    bool_1 = module_0.is_atty()
    var_2 = module_0.is_entity_header(str_1)
    dict_0 = {str_1: str_1}
    var_3 = module_0.remove_entity_headers(dict_0)
    str_2 = var_3.__str__()
    str_3 = var_3.__str__()
    default_0 = module_0.Default()
    var_4 = default_0.__repr__()
    var_5 = module_1.ismodule(var_4)
    var_6 = var_5.__repr__()
    var_7 = var_5.__repr__()
    str_4 = default_0.__str__()
    var_8 = module_0.has_message_body(var_2)
    str_5 = var_4.__str__()
    var_9 = default_0.__repr__()
    str_6 = var_9.__str__()
    str_7 = var_1.__str__()
    int_0 = 304
    var_10 = module_0.has_message_body(int_0)
    var_11 = var_9.__repr__()
    var_12 = default_0.__repr__()
    str_8 = tuple_0.__str__()
    module_0.import_string(str_3)
