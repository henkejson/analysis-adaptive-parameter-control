# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    default_0 = module_0.Default()
    module_0.has_message_body(default_0)


def test_case_1():
    str_0 = "display access logs"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()
    dict_0 = {bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    int_0 = -1620
    module_0.is_entity_header(int_0)


def test_case_5():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    int_0 = -1709
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()
    var_3 = module_1.object()
    var_4 = module_0.is_entity_header(var_1)
    module_0.has_message_body(var_3)


def test_case_7():
    int_0 = 307
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_1 = var_0.__repr__()
    var_2 = int_0.__repr__()
    bool_0 = True
    var_3 = default_0.__repr__()
    var_4 = module_0.has_message_body(bool_0)
    str_0 = default_0.__str__()
    var_5 = var_4.__repr__()
    str_1 = var_5.__str__()
    bool_1 = module_0.is_atty()
    var_6 = module_0.is_hop_by_hop_header(str_1)
    var_7 = module_2.ismodule(var_0)
    var_8 = module_0.is_entity_header(var_2)
    dict_0 = {str_1: bool_1, bool_1: bool_1}
    module_0.remove_entity_headers(dict_0)


def test_case_8():
    float_0 = 3649.34
    var_0 = module_0.has_message_body(float_0)


def test_case_9():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    bool_0 = True
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_12():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_0 = False
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    str_0 = var_2.__str__()
    bool_1 = module_0.is_atty()
    module_0.import_string(bool_1, var_2)
