# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "No certificates with SubjectAlternativeNames found."
    module_0.remove_entity_headers(str_0, str_0)


def test_case_2():
    bytes_0 = b"\xf3\x10\xb4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_4():
    bool_0 = module_0.is_atty()


def test_case_5():
    bytes_0 = b"\xea\xcf\xbd\xd4c\x0fC\xca;\x93\xcc(\xb2\x90>?\x94\xa7\x81"
    list_0 = [bytes_0, bytes_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    int_0 = 302
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {var_0: var_0, int_0: var_0, var_0: int_0, var_0: var_0}
    module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    var_3 = module_0.is_hop_by_hop_header(var_1)
    var_4 = var_0.__repr__()
    list_0 = []
    var_5 = var_1.__repr__()
    str_0 = var_0.__str__()
    var_6 = var_2.__repr__()
    default_0 = module_0.Default(*list_0)
    str_1 = default_0.__str__()
    var_7 = var_0.__repr__()
    var_8 = module_0.has_message_body(var_3)
    var_9 = var_7.__repr__()
    bool_0 = module_0.is_atty()
    dict_0 = {var_2: var_9}
    var_10 = module_0.is_entity_header(var_4)
    var_11 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.remove_entity_headers(var_7)
