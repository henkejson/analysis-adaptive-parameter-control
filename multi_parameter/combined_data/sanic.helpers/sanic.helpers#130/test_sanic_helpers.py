# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b"\x1f\xbf+Gh\x0f\xcf}\xf4ug\xfe+\xac\xc6T\xe0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_4():
    int_0 = 2153
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.has_message_body(var_0)
    str_0 = var_0.__str__()
    var_2 = var_0.__repr__()
    default_0 = module_0.Default()
    var_3 = default_0.__repr__()
    var_4 = module_0.is_entity_header(str_0)


def test_case_5():
    int_0 = 2153
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    var_2 = module_0.is_entity_header(var_1)
    var_3 = var_0.__repr__()
    str_2 = var_2.__str__()
    str_3 = default_0.__str__()


def test_case_6():
    bool_0 = module_0.is_atty()
    int_0 = 408
    var_0 = module_0.has_message_body(int_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    bool_1 = module_0.is_atty()
    str_0 = var_0.__str__()
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    str_1 = var_1.__str__()
    bytes_0 = b"]m\xcb\xfe\x10+\x82\xd0\x1f k8\x97{\x1f\xf1\x00"
    var_3 = var_0.__repr__()
    var_4 = var_2.__repr__()
    var_5 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: str_1}
    var_6 = module_0.remove_entity_headers(dict_0)
    var_7 = module_1.ismodule(str_0)
    int_0 = 304
    var_8 = module_0.has_message_body(int_0)
