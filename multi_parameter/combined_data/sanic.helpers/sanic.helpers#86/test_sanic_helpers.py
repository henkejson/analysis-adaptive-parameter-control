# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    complex_0 = -741.07 + 1820.07337j
    module_0.has_message_body(complex_0)


def test_case_1():
    str_0 = "H=u1qN\x0b\r$ }6I=+Yfq\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    module_0.Default(*var_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    str_2 = "b`}*%f5L)A~^sV"
    list_0 = [str_2, str_2, str_2, str_2]
    module_0.has_message_body(list_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    bool_3 = module_0.has_message_body(bool_2)


def test_case_8():
    float_0 = 294.1028198434383
    str_0 = float_0.__str__()
    var_0 = float_0.__repr__()
    str_1 = "H=u1qN\x0b\r$ }6I=+Yfq\x0b"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    str_2 = dict_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0, dict_0)
    var_2 = module_0.has_message_body(float_0)
    str_3 = var_1.__str__()
    var_3 = var_2.__repr__()
    var_4 = var_3.__repr__()


def test_case_9():
    float_0 = 304.0
    var_0 = module_0.has_message_body(float_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.has_message_body(float_0)
    var_2 = module_0.has_message_body(var_1)
    str_0 = var_1.__str__()
    var_3 = var_1.__repr__()
    module_0.has_message_body(var_3)
