# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import typed_ast._ast3 as module_1
import py_backwards.transformers.base as module_2


def test_case_0():
    none_type_0 = None
    module_0.parse(none_type_0, none_type_0)


def test_case_1():
    gt_0 = module_1.Gt()
    base_import_rewrite_0 = module_2.BaseImportRewrite(gt_0)


def test_case_2():
    mult_0 = module_1.Mult()
    base_import_rewrite_0 = module_2.BaseImportRewrite(mult_0)
    list_0 = [base_import_rewrite_0, base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    mult_0 = module_1.Mult()
    base_import_rewrite_0 = module_2.BaseImportRewrite(mult_0)
    base_import_rewrite_1 = module_0.walk(mult_0)
    list_0 = [base_import_rewrite_1, base_import_rewrite_1, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    mult_0 = module_1.Mult()
    base_import_rewrite_0 = module_2.BaseImportRewrite(mult_0)
    var_0 = module_0.iter_child_nodes(mult_0)
    list_0 = [var_0, var_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_5():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "\"|~]3{7a[.x',,"
    str_1 = "\r:=L_\t^[a"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    bool_op_0 = module_1.BoolOp()
    base_import_rewrite_0 = module_2.BaseImportRewrite(bool_op_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
