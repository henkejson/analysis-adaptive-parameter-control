# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    with_0 = module_1.With()
    base_import_rewrite_0 = module_0.BaseImportRewrite(with_0)
    list_0 = [base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bytes_0 = b"\xc4\xa2`\x83z\x12\xcaQ9\xd2}\xde\xc1t\x02\xc3\xc53"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    list_0 = [base_import_rewrite_0, bytes_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    with_0 = module_1.With()
    base_import_rewrite_0 = module_0.BaseImportRewrite(with_0)
    var_0 = module_2.iter_child_nodes(with_0)
    list_0 = [with_0, var_0, var_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_2.iter_fields(none_type_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    bool_0 = True
    list_0 = [none_type_0, bool_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
