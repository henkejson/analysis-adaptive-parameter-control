# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast.ast3 as module_0
import typed_ast._ast3 as module_1
import py_backwards.transformers.base as module_2


def test_case_0():
    dict_0 = {}
    module_0.get_docstring(dict_0)


def test_case_1():
    not_in_0 = module_1.NotIn()
    base_import_rewrite_0 = module_2.BaseImportRewrite(not_in_0)


def test_case_2():
    constant_0 = module_1.Constant()
    base_import_rewrite_0 = module_2.BaseImportRewrite(constant_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    constant_0 = module_1.Constant()
    base_import_rewrite_0 = module_2.BaseImportRewrite(constant_0)
    list_0 = [constant_0, constant_0, constant_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    constant_0 = module_1.Constant()
    base_import_rewrite_0 = module_2.BaseImportRewrite(constant_0)
    str_0 = "F{>+"
    list_0 = [str_0, str_0, constant_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_5():
    constant_0 = module_1.Constant()
    base_import_rewrite_0 = module_2.BaseImportRewrite(constant_0)
    list_0 = []
    list_1 = [list_0, list_0, constant_0]
    import_from_0 = module_1.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
