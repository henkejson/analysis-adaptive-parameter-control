# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    lt_e_0 = module_0.LtE()
    base_import_rewrite_0 = module_1.BaseImportRewrite(lt_e_0)


def test_case_1():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    base_node_transformer_0 = module_1.BaseNodeTransformer(none_type_0)
    async_function_def_0 = module_0.AsyncFunctionDef(*list_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(async_function_def_0)
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    return_0 = module_0.Return()
    base_import_rewrite_0 = module_1.BaseImportRewrite(return_0)
    list_0 = [base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    return_0 = module_0.Return()
    base_import_rewrite_0 = module_1.BaseImportRewrite(return_0)
    list_0 = [base_import_rewrite_0]
    list_1 = [return_0, list_0, base_import_rewrite_0]
    str_0 = "Gkk1@YVw@\tbJ"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: list_1}
    import_from_0 = module_0.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    return_0 = module_0.Return()
    base_import_rewrite_0 = module_1.BaseImportRewrite(return_0)
    var_0 = module_2.iter_child_nodes(return_0)
    list_0 = [return_0, var_0, base_import_rewrite_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
