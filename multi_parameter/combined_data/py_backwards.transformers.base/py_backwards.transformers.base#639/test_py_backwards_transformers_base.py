# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    a_s_t_0 = module_1.AST()
    base_import_rewrite_0 = module_0.BaseImportRewrite(a_s_t_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    lambda_0 = module_1.Lambda()
    base_import_rewrite_0 = module_0.BaseImportRewrite(lambda_0)
    list_0 = [base_import_rewrite_0, base_import_rewrite_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    bytes_0 = b"\x13j\xfc\xbc$\x9c\x81\xfem\x05$"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    list_0 = [base_import_rewrite_0, bytes_0, base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    bytes_0 = b"\x13j\xfc\xbc$\x9c\x81\xfem\x05$"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
