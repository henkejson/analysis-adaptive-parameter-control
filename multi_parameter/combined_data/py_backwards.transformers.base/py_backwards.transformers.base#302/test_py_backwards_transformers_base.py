# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1


def test_case_0():
    assert_0 = module_0.Assert()
    base_import_rewrite_0 = module_1.BaseImportRewrite(assert_0)


def test_case_1():
    is_0 = module_0.Is()
    base_import_rewrite_0 = module_1.BaseImportRewrite(is_0)
    none_type_0 = None
    list_0 = [none_type_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    is_0 = module_0.Is()
    base_import_rewrite_0 = module_1.BaseImportRewrite(is_0)
    list_0 = [is_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    is_0 = module_0.Is()
    base_import_rewrite_0 = module_1.BaseImportRewrite(is_0)
    list_0 = [is_0]
    list_1 = [list_0, list_0]
    str_0 = 'l\r\n5rJ":jcVs'
    dict_0 = {str_0: base_import_rewrite_0, str_0: list_1, str_0: str_0, str_0: str_0}
    import_from_0 = module_0.ImportFrom(*list_1, **dict_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    is_0 = module_0.Is()
    base_import_rewrite_0 = module_1.BaseImportRewrite(is_0)
    list_0 = []
    list_1 = [list_0, list_0]
    import_from_0 = module_0.ImportFrom(*list_1)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
