# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    bytes_0 = b"s\xc0\x93v-\xad\xe7)\xe4\x8b\xb7\xe6"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    none_type_0 = None
    list_0 = [none_type_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    bytes_0 = b"\x84\xa9T\xb5\xbb\x04\xcdC\x0b\xf2\xb3\xdd\x8a\x86\xf0\xae+\xc3\xe8\xcf"
    base_import_rewrite_0 = module_0.BaseImportRewrite(bytes_0)
    list_0 = [base_import_rewrite_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    unary_op_0 = module_1.UnaryOp()
    var_0 = module_2.iter_fields(unary_op_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    list_0 = [var_0, var_0, var_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    unary_op_0 = module_1.UnaryOp()
    var_0 = module_2.walk(unary_op_0)
    list_0 = [var_0, var_0]
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)
