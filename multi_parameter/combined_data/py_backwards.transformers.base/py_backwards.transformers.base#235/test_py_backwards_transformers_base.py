# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.base as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    base_node_transformer_0 = module_0.BaseNodeTransformer(none_type_0)


def test_case_1():
    type_ignore_0 = module_1.TypeIgnore()
    list_0 = [type_ignore_0]
    import_from_0 = module_1.ImportFrom(*list_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(type_ignore_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_2():
    type_ignore_0 = module_1.TypeIgnore()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "Compiles:\n        super()\n    To:\n        super(Cls, self)\n        super(Cls, cls)\n            \n    "
    dict_0 = {str_0: list_0}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(type_ignore_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_3():
    type_ignore_0 = module_1.TypeIgnore()
    var_0 = module_2.dump(type_ignore_0)
    list_0 = [var_0, var_0, var_0]
    dict_0 = {}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    base_import_rewrite_0.visit_ImportFrom(import_from_0)


def test_case_4():
    type_ignore_0 = module_1.TypeIgnore()
    var_0 = module_2.iter_fields(type_ignore_0)
    list_0 = [var_0, var_0, var_0]
    dict_0 = {}
    import_from_0 = module_1.ImportFrom(*list_0, **dict_0)
    base_import_rewrite_0 = module_0.BaseImportRewrite(var_0)
    var_1 = base_import_rewrite_0.visit_ImportFrom(import_from_0)
