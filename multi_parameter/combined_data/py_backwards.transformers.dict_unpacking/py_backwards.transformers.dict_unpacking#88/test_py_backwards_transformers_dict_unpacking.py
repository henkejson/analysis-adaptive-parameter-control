# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.dict_unpacking as module_1


def test_case_0():
    not_in_0 = module_0.NotIn()
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(not_in_0)


def test_case_1():
    none_type_0 = None
    str_0 = "]K"
    dict_0 = {none_type_0: none_type_0, str_0: none_type_0}
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(dict_0)
    list_0 = [dict_0, str_0]
    dict_1 = module_0.Dict(*list_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
    dict_unpacking_transformer_0.visit_Module(list_0)


def test_case_2():
    str_0 = "&F`^b\x0b^vP9X1yW}m8^S"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(str_0)
    list_0 = [dict_0, str_0]
    dict_1 = module_0.Dict(*list_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)


def test_case_3():
    none_type_0 = None
    str_0 = "&F`^b\x0b^vP9X1yW}m8^S"
    dict_0 = {none_type_0: none_type_0, str_0: none_type_0}
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(none_type_0)
    list_0 = [dict_0, str_0]
    dict_1 = module_0.Dict(*list_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
