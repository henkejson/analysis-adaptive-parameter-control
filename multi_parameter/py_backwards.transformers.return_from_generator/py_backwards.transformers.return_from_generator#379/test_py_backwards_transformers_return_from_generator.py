# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        none_type_0
    )


def test_case_1():
    yield_from_0 = module_1.YieldFrom()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        yield_from_0
    )
    list_0 = [yield_from_0, yield_from_0]
    list_1 = [yield_from_0, return_from_generator_transformer_0, list_0]
    function_def_0 = module_1.FunctionDef(*list_1)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    tuple_0 = ()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        tuple_0
    )
    list_0 = [tuple_0, return_from_generator_transformer_0, tuple_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    tuple_0 = ()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        tuple_0
    )
    list_0 = [return_from_generator_transformer_0, return_from_generator_transformer_0]
    list_1 = [tuple_0, return_from_generator_transformer_0, list_0]
    function_def_0 = module_1.FunctionDef(*list_1)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
