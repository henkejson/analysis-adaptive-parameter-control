# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bool_0 = True
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bool_0
    )


def test_case_1():
    str_0 = "!{Sat"
    async_for_0 = module_1.AsyncFor(*str_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(str_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(async_for_0)


def test_case_2():
    str_0 = "!{Sat"
    list_0 = [str_0, str_0, str_0]
    async_for_0 = module_1.AsyncFor(*list_0)
    slice_0 = module_1.slice()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        slice_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(async_for_0)


def test_case_3():
    str_0 = ""
    list_0 = [str_0, str_0, str_0]
    async_for_0 = module_1.AsyncFor(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        async_for_0
    )
    return_from_generator_transformer_1 = module_0.ReturnFromGeneratorTransformer(
        async_for_0
    )
    var_0 = return_from_generator_transformer_0.generic_visit(async_for_0)
    var_1 = return_from_generator_transformer_0.generic_visit(async_for_0)
    var_2 = module_2.dump(var_1)
    return_from_generator_transformer_2 = module_0.ReturnFromGeneratorTransformer(var_1)
    function_def_0 = return_from_generator_transformer_2.visit_FunctionDef(async_for_0)


def test_case_4():
    str_0 = "%g"
    list_0 = [str_0, str_0, str_0]
    async_for_0 = module_1.AsyncFor(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        async_for_0
    )
    return_from_generator_transformer_1 = module_0.ReturnFromGeneratorTransformer(
        async_for_0
    )
    var_0 = return_from_generator_transformer_0.generic_visit(async_for_0)
    var_1 = return_from_generator_transformer_0.generic_visit(async_for_0)
    var_2 = module_2.dump(var_1)
    return_from_generator_transformer_2 = module_0.ReturnFromGeneratorTransformer(var_1)
    var_3 = module_2.parse(var_2)
    function_def_0 = return_from_generator_transformer_2.visit_FunctionDef(var_3)
