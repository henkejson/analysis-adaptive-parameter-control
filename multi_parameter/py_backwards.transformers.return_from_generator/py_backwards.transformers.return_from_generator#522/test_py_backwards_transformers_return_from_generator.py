# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    set_0 = module_0.Set()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(set_0)


def test_case_1():
    set_0 = module_0.Set()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(set_0)
    bytes_0 = b"Z\xed\xba\x89\xa9FE"
    list_0 = [
        return_from_generator_transformer_0,
        set_0,
        bytes_0,
        return_from_generator_transformer_0,
    ]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    set_0 = module_0.Set()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(set_0)
    bytes_0 = b""
    list_0 = [set_0, set_0, bytes_0, return_from_generator_transformer_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    none_type_0 = None
    var_0 = module_2.iter_fields(none_type_0)
    module_2.dump(none_type_0)
