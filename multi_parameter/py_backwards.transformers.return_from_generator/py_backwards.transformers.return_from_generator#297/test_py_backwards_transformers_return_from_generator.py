# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    bytes_0 = b"P\x12g\xba [s\x8b\x1f\xd7/\xe9;@<R.\xbdXX"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )


def test_case_1():
    assert_0 = module_1.Assert()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        assert_0
    )
    var_0 = module_2.dump(assert_0)
    var_1 = module_2.parse(var_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_1)


def test_case_2():
    assert_0 = module_1.Assert()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        assert_0
    )
    var_0 = module_2.iter_fields(assert_0)
    list_0 = [return_from_generator_transformer_0, var_0, var_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
