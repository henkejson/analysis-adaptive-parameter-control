# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    return_0 = module_0.Return()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        return_0
    )


def test_case_1():
    str_0 = "3.0"
    var_0 = module_2.parse(str_0)
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(var_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(var_0)


def test_case_2():
    keyword_0 = module_0.keyword()
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        keyword_0
    )
    none_type_0 = None
    list_0 = return_from_generator_transformer_0.visit(keyword_0)
    return_from_generator_transformer_1 = module_1.ReturnFromGeneratorTransformer(
        keyword_0
    )
    return_from_generator_transformer_2 = module_1.ReturnFromGeneratorTransformer(
        keyword_0
    )
    str_0 = ""
    var_0 = module_2.parse(str_0)
    return_from_generator_transformer_3 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    function_def_0 = return_from_generator_transformer_3.visit_FunctionDef(var_0)
    dict_0 = {str_0: none_type_0}
    return_from_generator_transformer_4 = module_1.ReturnFromGeneratorTransformer(var_0)
    module_0.Starred(*list_0, **dict_0)
