# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    bool_1 = False
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1.filter(bool_1)


def test_case_1():
    none_type_0 = None
    int_0 = 2669
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(int_0)
    list_0 = [int_0, int_0, int_0, var_0]
    none_type_1 = None
    immutable_list_1 = module_0.ImmutableList(none_type_1)
    immutable_list_2 = immutable_list_1.unshift(list_0)
    bool_0 = immutable_list_2.__eq__(none_type_0)


def test_case_2():
    complex_0 = -695 + 3794.2295j
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(complex_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(tail=var_0, is_empty=var_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_0.unshift(bool_0)
    bool_1 = True
    immutable_list_3 = module_0.ImmutableList(tail=bool_1)
    immutable_list_2.__add__(bool_0)


def test_case_4():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_5():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    none_type_0 = None
    immutable_list_2 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1, is_empty=none_type_1)
    immutable_list_0.map(none_type_0)


def test_case_8():
    bytes_0 = b"o\xae\x07,-W\x94\x88b6D\x92\xffT\x98"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_1.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0)
    var_0 = immutable_list_2.find(immutable_list_0)
    var_1 = immutable_list_0.reduce(immutable_list_0, immutable_list_1)
    var_1.filter(var_0)


def test_case_11():
    bytes_0 = b"\xa0\xcc\x80L\xee\xfe\x04\xaf\xfe\xed\x18)\x9f\x136"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(bytes_0, bytes_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    bytes_0 = b"'|\x1e\xd9\n\x02\xa1<;\xd4\xf5"
    int_0 = -1335
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_1.find(bytes_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    none_type_0 = None
    immutable_list_3 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_16():
    bytes_0 = b"\xa0\xcc\x80L\xee\xfe\x04\xaf\xfe\xed\x18)\x9f\x136"
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_17():
    int_0 = -1335
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(bool_0, immutable_list_0)
    immutable_list_2.find(immutable_list_0)


def test_case_19():
    int_0 = -1672
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_2)
    immutable_list_3 = immutable_list_2.append(immutable_list_0)
    var_0 = immutable_list_2.__len__()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_1.reduce(var_1, var_1)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, immutable_list_0, bool_0
    )
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_1)
