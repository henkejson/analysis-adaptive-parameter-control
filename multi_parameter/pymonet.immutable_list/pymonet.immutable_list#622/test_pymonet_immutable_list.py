# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    str_0 = "BolNloU>O4'I=%"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    str_0 = "/.BolNloU4{I=%"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    str_0 = "qq"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_1, immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = var_0.__add__(immutable_list_0)


def test_case_5():
    str_0 = "\\@n%\nd"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    str_0 = "5(]&C0T"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(var_0)


def test_case_7():
    str_0 = "\n        Transform Lazy into Either (Right) with constructor_fn result.\n\n        :returns: Right monad with constructor_fn result\n        :rtype: Right[A]\n        "
    bytes_0 = b"\x06\xe5\x9c"
    set_0 = {bytes_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    str_1 = immutable_list_1.__str__()


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(immutable_list_1)
    immutable_list_2.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    int_0 = 1
    immutable_list_0 = module_0.ImmutableList(tail=int_0, is_empty=int_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_13():
    str_0 = ".BolNloU4{I=%"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(bool_0, bool_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_15():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(list_0, is_empty=list_0)
    bytes_0 = b"i\xc8\xabm*\xcb\xc4_\xcbj\xf1\xb1\xa8\xb1\xc8"
    immutable_list_0.reduce(immutable_list_0, bytes_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    str_1 = immutable_list_1.__str__()


def test_case_18():
    str_0 = ".BolNloU4{I=%"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_19():
    str_0 = "jH;74e&`rc\n\\Pg:m"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(str_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_0.append(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(str_0, none_type_0, none_type_0)
    var_1 = var_0.__add__(immutable_list_1)
    immutable_list_2.find(str_0)


def test_case_20():
    str_0 = "jH;74e&`rc\n\\Pg:m"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(str_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(str_0, none_type_0, none_type_0)
    var_1 = immutable_list_2.to_list()
    immutable_list_2.find(str_0)


def test_case_21():
    none_type_0 = None
    str_0 = "Box[U]"
    set_0 = {str_0, str_0}
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(set_0, is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0, immutable_list_0)
    list_0 = []
    dict_0 = {none_type_0: list_0, none_type_0: none_type_0}
    bool_1 = immutable_list_1.__eq__(set_0)
    immutable_list_2 = immutable_list_0.unshift(dict_0)
    immutable_list_3 = immutable_list_0.append(none_type_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_4 = immutable_list_3.unshift(none_type_0)
    bool_2 = immutable_list_2.__eq__(bool_0)
    immutable_list_3.reduce(none_type_0, str_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    str_0 = immutable_list_1.__str__()
    bool_1 = True
    immutable_list_2.find(bool_1)
