# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, tuple_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(tuple_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_3():
    bool_0 = False
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList(bool_1)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_1.__len__()
    bool_2 = True
    float_0 = -1545.094
    immutable_list_2 = module_0.ImmutableList(float_0)
    immutable_list_3 = immutable_list_2.unshift(bool_2)
    immutable_list_3.__add__(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, tuple_0)
    immutable_list_0.to_list()


def test_case_8():
    complex_0 = 204.56841 - 1108j
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(complex_0, complex_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_0.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1, is_empty=bool_1)
    var_0 = immutable_list_0.find(none_type_0)
    var_0.__add__(bool_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_12():
    float_0 = 1346.5412
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(float_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_0 = immutable_list_1.reduce(float_0, none_type_0)
    immutable_list_0.find(none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.unshift(bool_0)
    immutable_list_0.find(var_0)


def test_case_16():
    int_0 = 3538
    immutable_list_0 = module_0.ImmutableList(tail=int_0, is_empty=int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.filter(var_0)


def test_case_17():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, tuple_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(tuple_0)


def test_case_18():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, tuple_0)
    immutable_list_0.find(tuple_0)


def test_case_19():
    float_0 = 1346.5412
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(float_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(float_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.find(none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    float_0 = -1559.4231
    str_1 = immutable_list_2.__str__()
    immutable_list_3 = immutable_list_0.__add__(immutable_list_2)
    bool_0 = True
    immutable_list_4 = immutable_list_2.unshift(float_0)
    var_1 = immutable_list_2.find(float_0)
    immutable_list_5 = immutable_list_4.unshift(var_1)
    immutable_list_6 = module_0.ImmutableList()
    immutable_list_7 = immutable_list_4.append(var_1)
    immutable_list_7.map(bool_0)


def test_case_21():
    complex_0 = 751.1 + 2662.176234j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0, is_empty=complex_0)
    immutable_list_0.filter(complex_0)


def test_case_22():
    bytes_0 = b"\xf3Mm\xd2[\x1a\xfd\x9e\x99Q>!\xd0"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = list_0.__eq__(bytes_0)
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = False
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_1)
    none_type_0 = None
    immutable_list_2 = immutable_list_1.append(none_type_0)
    bool_2 = True
    immutable_list_3 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_4 = immutable_list_2.append(none_type_0)
    var_0 = immutable_list_4.find(immutable_list_3)
    immutable_list_5 = immutable_list_2.unshift(bool_0)
    immutable_list_6 = module_0.ImmutableList(tail=list_0, is_empty=var_0)
    immutable_list_7 = immutable_list_2.append(immutable_list_6)
    immutable_list_5.reduce(bool_2, bool_2)


def test_case_23():
    float_0 = 1346.5412
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(float_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(none_type_0)


def test_case_24():
    bool_0 = True
    str_0 = "jgy>CC\n?"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, is_empty=str_0)
    none_type_0 = None
    immutable_list_0.reduce(none_type_0, immutable_list_0)
