# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.immutable_list as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_1():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(str_0)
    immutable_list_0.find(str_0)


def test_case_2():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(tail=none_type_0)
    bool_0 = False
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_3():
    dict_0 = {}
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(dict_0, none_type_0, bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.__add__(var_0)


def test_case_4():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_5():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_1.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = var_0.__len__()
    immutable_list_1.map(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_3 = immutable_list_0.append(var_0)
    immutable_list_3.filter(immutable_list_3)


def test_case_12():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = module_1.ImmutableList()
    var_0 = immutable_list_1.reduce(immutable_list_0, immutable_list_0)
    var_1 = var_0.__len__()
    var_1.append(none_type_0)


def test_case_14():
    immutable_list_0 = module_1.ImmutableList()


def test_case_15():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_16():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_0.find(str_0)


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    bool_0 = False
    immutable_list_1 = module_1.ImmutableList(tail=none_type_0, is_empty=bool_0)
    str_1 = immutable_list_1.__str__()
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    var_0 = immutable_list_0.find(immutable_list_1)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_1)
    none_type_1 = None
    none_type_2 = None
    immutable_list_4 = module_1.ImmutableList(none_type_2, none_type_2)
    bool_1 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_4.map(none_type_1)


def test_case_18():
    bytes_0 = b"T\xb0S\x81Y#\xf8\x98\xbd"
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_2 = immutable_list_1.append(bytes_0)
    immutable_list_3 = immutable_list_2.unshift(immutable_list_2)
    immutable_list_3.find(none_type_0)


def test_case_19():
    int_0 = 1704
    set_0 = {int_0}
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(set_0, set_0, bool_0)
    var_0 = immutable_list_0.__len__()


def test_case_20():
    bool_0 = True
    immutable_list_0 = module_1.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_1.ImmutableList(is_empty=bool_0)
    immutable_list_2 = immutable_list_1.append(str_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_3 = immutable_list_1.unshift(str_0)
    var_0 = immutable_list_1.find(immutable_list_3)
    immutable_list_1.filter(var_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(is_empty=none_type_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bool_0 = False
    immutable_list_2 = module_1.ImmutableList(str_0, is_empty=bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2.reduce(var_0, immutable_list_1)


def test_case_22():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(generic_0)
    immutable_list_0.find(generic_0)


def test_case_23():
    immutable_list_0 = module_1.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_1 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    str_2 = immutable_list_0.__str__()
    immutable_list_1.reduce(str_0, str_2)


def test_case_24():
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_0.find(bool_0)
