# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    bool_0 = False
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(bool_0, dict_0, bool_0)
    bool_1 = immutable_list_0.__eq__(dict_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    immutable_list_0.find(dict_0)


def test_case_3():
    int_0 = 590
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(int_0, int_0)
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(var_0, var_0, bool_0)
    immutable_list_2 = immutable_list_0.unshift(int_0)
    immutable_list_3 = module_0.ImmutableList()
    str_0 = immutable_list_3.__str__()
    none_type_0 = None
    immutable_list_4 = immutable_list_3.append(none_type_0)
    var_1 = immutable_list_3.__len__()
    str_1 = immutable_list_3.__str__()
    immutable_list_3.__add__(str_0)


def test_case_4():
    int_0 = 0
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    var_0 = immutable_list_1.__len__()


def test_case_5():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(dict_0)


def test_case_6():
    bool_0 = False
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(bool_0)


def test_case_7():
    float_0 = 2149.0
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(float_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_1)
    var_0 = immutable_list_3.to_list()
    immutable_list_2.filter(var_0)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    bool_0 = False
    bytes_0 = b"{\xb4\xc85\x86\xe5\x91-\xc4\xbb,\x8cLE"
    immutable_list_0 = module_0.ImmutableList(bool_0, bytes_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    bool_2 = True
    immutable_list_0.map(bool_2)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=bool_0)
    immutable_list_0.filter(bool_0)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)
    var_0.append(bool_0)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_0.find(bool_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_15():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_0.reduce(immutable_list_0, bool_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    bool_0 = False
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(bool_0, dict_0, bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_18():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0)
    immutable_list_0.find(dict_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    none_type_0 = None
    immutable_list_2 = immutable_list_1.append(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_20():
    bytes_0 = b"\xec[<PS\nL\xc2\xc3\x0c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_0.reduce(immutable_list_0, none_type_0)
