# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    bytes_0 = b"\x8b\xe1\x95(\xe5\xc4r\xae_5\x1f\xc3u\xaeYg"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.find(bool_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__len__()


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_2 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    str_0 = "\nYN{W-N?"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(str_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_2.filter(var_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(bool_0)
    var_0.to_list()


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_13():
    bytes_0 = b"b\xf0\xeb\x91L\xa75\x83e\xd6\xab"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_1.__str__()
    none_type_0 = None
    immutable_list_0.reduce(immutable_list_1, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    bytes_0 = b"\x8b\xe1\x95(\xe5\xc4r\xae_5\x1f\xc3u\xaeYg"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(tail=var_1)
    var_2 = immutable_list_0.reduce(var_1, var_1)
    immutable_list_0.__add__(var_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_0 = immutable_list_1.to_list()
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.__len__()
    immutable_list_2.map(str_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"T\xc6\xd7Ch\xaf\xd5[\xd5Q\x9c\x0b),\rWCk\x11n"
    var_0 = immutable_list_0.reduce(bytes_0, bytes_0)
    str_0 = immutable_list_0.__str__()
    str_1 = immutable_list_0.__str__()
    none_type_0 = None
    bool_0 = var_0.__eq__(str_1)
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_2.reduce(var_0, str_1)


def test_case_22():
    bytes_0 = b"\x8b\xe1\x95(\xe5\xc4r\xae_5\x1f\xc3u\xaeYg"
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bytes_0)
    var_0 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = var_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_23():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)
