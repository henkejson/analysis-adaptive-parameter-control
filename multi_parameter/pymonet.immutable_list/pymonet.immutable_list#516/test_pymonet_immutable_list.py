# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    complex_0 = 1625.59227 + 2244.7781j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    bool_0 = immutable_list_0.__eq__(complex_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    complex_0 = 1625.59227 + 2244.7781j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(complex_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xd0\xd0#\t\xe55\xa7\xa82\xe5\n\xc9\\:"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.to_list()


def test_case_8():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_0.map(immutable_list_0)


def test_case_9():
    bytes_0 = b"Y\xa3g\x8e\x91\x82\x1322!\xfd\xacR\xa7BV\x961"
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.reduce(var_0, str_0)
    immutable_list_2.map(var_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.to_list()
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(var_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    int_0 = -800
    var_0 = immutable_list_0.reduce(int_0, immutable_list_0)
    immutable_list_1 = var_0.__add__(immutable_list_0)
    var_1 = immutable_list_0.__len__()


def test_case_14():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_0.reduce(bool_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(none_type_0)
    var_0.append(str_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_18():
    tuple_0 = ()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.append(tuple_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_1)
    var_0 = immutable_list_1.append(immutable_list_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_1.reduce(var_1, var_1)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_23():
    bytes_0 = b"U~"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bytes_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(var_0)


def test_case_24():
    bytes_0 = b"U~"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bytes_0, none_type_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_0.find(immutable_list_1)
