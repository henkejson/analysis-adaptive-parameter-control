# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()
    bool_0 = immutable_list_0.__eq__(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(immutable_list_1)


def test_case_3():
    bytes_0 = b"\xa9l\x96^\x9f^{"
    str_0 = "\n    Return increased by 1 argument.\n\n    :param value:\n    :type value: Int\n    :returns:\n    :rtype: Int\n    "
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_1.__add__(bytes_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    str_1 = immutable_list_0.__str__()
    immutable_list_1.map(str_1)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_0)
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_0.reduce(bool_0, bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_13():
    int_0 = 573
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.reduce(immutable_list_0, immutable_list_1)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.find(str_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    int_0 = -4055
    immutable_list_1 = module_0.ImmutableList(int_0, is_empty=immutable_list_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(int_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__add__(immutable_list_0)
    bool_1 = var_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_1)
    var_1 = var_0.reduce(var_0, immutable_list_1)
    immutable_list_1.find(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    bool_1 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    var_1 = immutable_list_1.find(immutable_list_1)
    immutable_list_1.filter(var_1)


def test_case_22():
    dict_0 = {}
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    int_0 = 907
    list_0 = [immutable_list_1, int_0, immutable_list_1, immutable_list_1]
    bool_1 = False
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_3 = immutable_list_2.unshift(list_0)
    immutable_list_3.reduce(dict_0, dict_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_1.find(immutable_list_1)
