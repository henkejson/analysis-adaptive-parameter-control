# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    none_type_0 = None
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_1)


def test_case_1():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(none_type_0)


def test_case_2():
    list_0 = []
    str_0 = "\n    First is a Monoid that will always return the first, value when 2 First instances are combined.\n    "
    immutable_list_0 = module_0.ImmutableList(tail=str_0, is_empty=str_0)
    immutable_list_0.__add__(list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_4():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_5():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.to_list()
    immutable_list_0.find(var_0)


def test_case_6():
    str_0 = "f&sVXf-"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    float_0 = 81.732122
    tuple_0 = (str_0, str_0, float_0)
    immutable_list_2 = module_0.ImmutableList(tuple_0)
    str_1 = immutable_list_1.__str__()
    immutable_list_2.find(none_type_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_0.map(bool_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    int_0 = 56
    var_0 = immutable_list_0.find(int_0)
    var_1 = immutable_list_0.reduce(var_0, int_0)
    none_type_0 = None
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(none_type_0, is_empty=bool_0)
    immutable_list_2 = immutable_list_1.append(int_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_0)
    immutable_list_4 = var_1.__add__(immutable_list_0)
    immutable_list_3.map(var_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    bool_0 = True
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_0.reduce(immutable_list_1, immutable_list_1)
    immutable_list_1.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    str_0 = "H-7GS["
    int_0 = -513
    immutable_list_0 = module_0.ImmutableList(int_0)
    float_0 = -915.635752
    immutable_list_0.reduce(str_0, float_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    none_type_0 = None
    tuple_0 = (none_type_0,)
    dict_0 = {tuple_0: none_type_0, none_type_0: tuple_0, tuple_0: tuple_0}
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(dict_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_3 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_17():
    int_0 = -1612
    list_0 = []
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_1.reduce(bool_0, int_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    bool_1 = immutable_list_1.__eq__(bool_0)
    immutable_list_2 = immutable_list_1.append(bool_1)
    immutable_list_3 = immutable_list_2.unshift(immutable_list_1)
    var_0 = immutable_list_1.reduce(immutable_list_3, immutable_list_2)
    immutable_list_4 = immutable_list_2.__add__(immutable_list_1)
    str_0 = immutable_list_2.__str__()
    bool_2 = immutable_list_2.__eq__(immutable_list_3)
    immutable_list_5 = var_0.__add__(var_0)
    var_1 = immutable_list_2.__len__()
    var_2 = immutable_list_5.__len__()
    immutable_list_6 = module_0.ImmutableList(tail=none_type_0)
    var_3 = immutable_list_1.find(none_type_0)
    immutable_list_4.filter(immutable_list_1)
