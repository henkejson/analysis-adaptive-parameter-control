# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.immutable_list as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(is_empty=generic_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = module_1.ImmutableList()
    bool_0 = immutable_list_1.__eq__(immutable_list_1)


def test_case_1():
    bytes_0 = b"\xff \xf2P\x94;d"
    immutable_list_0 = module_1.ImmutableList()
    bool_0 = immutable_list_0.__eq__(bytes_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_2():
    bytes_0 = b"\xe8\xf6\xd9\xa2\xcf\x97"
    bytes_1 = b"\x0c\xbc\x07\x11.\x07}#\x92\x15\xe2\xfc"
    immutable_list_0 = module_1.ImmutableList(tail=bytes_1)
    immutable_list_0.append(bytes_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(none_type_0, is_empty=bool_0)
    immutable_list_1 = module_1.ImmutableList()
    bool_1 = immutable_list_0.__eq__(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_2)


def test_case_5():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(none_type_0, none_type_0, none_type_0)
    var_0 = immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_1.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_9():
    bytes_0 = b"\x0b\xe4\xe4s\xda\xc1yk\xddbg\x1eY\xfbb%\xd8"
    tuple_0 = ()
    bool_0 = False
    set_0 = {tuple_0, tuple_0, bool_0, bool_0}
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(set_0)
    immutable_list_1.map(bytes_0)


def test_case_10():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bytes_0 = b"Oo*\x95\xe5T(\xc9\xe8\x7f6T\xd8`\xfb7@"
    int_0 = -2038
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(int_0)
    immutable_list_1.filter(bytes_0)


def test_case_12():
    none_type_0 = None
    str_0 = "<}W\tH\tUUcT.\tFM\n="
    immutable_list_0 = module_1.ImmutableList(str_0)
    immutable_list_0.find(none_type_0)


def test_case_13():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_14():
    immutable_list_0 = module_1.ImmutableList()


def test_case_15():
    bool_0 = True
    int_0 = 2259
    immutable_list_0 = module_1.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(int_0)


def test_case_16():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.unshift(var_0)
    immutable_list_0.filter(var_2)


def test_case_17():
    none_type_0 = None
    str_0 = ">\x0bVaImZt#|Zh5d*[lv"
    none_type_1 = None
    immutable_list_0 = module_1.ImmutableList(str_0, none_type_1, str_0)
    var_0 = immutable_list_0.__len__()
    var_0.append(none_type_0)


def test_case_18():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    str_0 = ""
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList(is_empty=generic_0)
    immutable_list_1 = module_1.ImmutableList(is_empty=immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_3 = immutable_list_1.append(str_0)
    bool_0 = immutable_list_2.__eq__(immutable_list_1)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_1.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_0)
    var_0 = immutable_list_3.to_list()
    immutable_list_3.reduce(var_0, immutable_list_3)


def test_case_21():
    bool_0 = True
    immutable_list_0 = module_1.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.reduce(bool_0, str_0)


def test_case_22():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = module_1.ImmutableList(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)
