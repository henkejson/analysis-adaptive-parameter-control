# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(str_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    object_0 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    none_type_0 = None
    bytes_0 = b"t;\xf2\xbd\xf3\xfb\xa8\xf4\xe0\xc3"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_0.find(str_0)


def test_case_8():
    bytes_0 = b"'\xd6Uek_~F{"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(bytes_0)


def test_case_9():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_3 = immutable_list_2.unshift(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_2.reduce(var_0, var_0)
    none_type_0 = None
    immutable_list_2.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.filter(var_1)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = immutable_list_0.append(var_0)
    immutable_list_0.map(var_0)


def test_case_13():
    bytes_0 = b"\x85p\x04\xd8\x88/\xec\x0fT\xa5\xd9\xbc8m\xcf\xf5x\x88\x82*"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.reduce(bytes_0, immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_0.find(str_0)


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    str_0 = immutable_list_1.__str__()
    immutable_list_0.find(str_0)


def test_case_18():
    complex_0 = -1608.18 + 3211.38j
    set_0 = {complex_0, complex_0}
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(set_0, none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.reduce(immutable_list_0, immutable_list_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(bool_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    immutable_list_1 = var_0.append(var_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    bool_1 = immutable_list_2.__eq__(var_0)
    var_1 = immutable_list_2.__len__()
    immutable_list_2.find(var_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    var_0 = immutable_list_0.reduce(bool_0, none_type_0)
    var_1 = immutable_list_0.to_list()
    bool_1 = False
    var_2 = immutable_list_0.reduce(bool_1, immutable_list_0)
    immutable_list_1 = immutable_list_0.append(var_2)
    immutable_list_2 = immutable_list_0.unshift(var_2)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    bool_3 = var_1.__eq__(immutable_list_0)
    immutable_list_2.find(var_1)


def test_case_22():
    generic_0 = module_1.Generic()
    bool_0 = False
    generic_1 = module_1.Generic()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(generic_1)
    immutable_list_1.find(bool_0)
