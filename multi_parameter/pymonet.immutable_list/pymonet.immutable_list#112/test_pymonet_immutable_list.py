# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typing as module_0
import pymonet.immutable_list as module_1


def test_case_0():
    generic_0 = module_0.Generic()
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(none_type_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_1.ImmutableList()


def test_case_1():
    set_0 = set()
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(set_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_0.find(set_0)


def test_case_2():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_1)


def test_case_3():
    complex_0 = 3064.36484 - 532.638j
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_0.__add__(complex_0)


def test_case_4():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    set_0 = set()
    immutable_list_0 = module_1.ImmutableList(set_0, set_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = var_0.__len__()
    var_1.__len__()


def test_case_7():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_0.reduce(var_0, immutable_list_2)


def test_case_8():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = module_1.ImmutableList()
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.find(immutable_list_1)
    immutable_list_1.map(var_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_1)
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    set_0 = set()
    immutable_list_0 = module_1.ImmutableList(set_0, set_0)
    immutable_list_0.find(set_0)


def test_case_13():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.reduce(bool_0, bool_0)
    immutable_list_1 = module_1.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1.reduce(var_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_1.ImmutableList()


def test_case_15():
    immutable_list_0 = module_1.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_16():
    set_0 = set()
    immutable_list_0 = module_1.ImmutableList(set_0, set_0)
    var_0 = immutable_list_0.unshift(set_0)
    immutable_list_0.find(var_0)


def test_case_17():
    set_0 = set()
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(set_0, none_type_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(set_0)


def test_case_18():
    set_0 = set()
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(set_0, none_type_0)
    immutable_list_0.find(set_0)


def test_case_19():
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.find(var_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = module_1.ImmutableList()
    immutable_list_1.filter(var_1)


def test_case_20():
    generic_0 = module_0.Generic()
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_21():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    int_0 = 0
    none_type_0 = None
    immutable_list_0 = module_1.ImmutableList()
    float_0 = -566.0
    bool_1 = list_0.__eq__(bool_0)
    immutable_list_1 = module_1.ImmutableList(is_empty=float_0)
    immutable_list_2 = immutable_list_1.unshift(int_0)
    var_0 = immutable_list_0.find(int_0)
    immutable_list_3 = module_1.ImmutableList(tail=none_type_0)
    immutable_list_4 = module_1.ImmutableList(int_0)
    immutable_list_5 = immutable_list_4.__add__(immutable_list_4)
    var_1 = immutable_list_4.to_list()
    immutable_list_5.reduce(bool_1, immutable_list_0)


def test_case_22():
    generic_0 = module_0.Generic()
    immutable_list_0 = module_1.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.to_list()
    immutable_list_1.find(var_1)
