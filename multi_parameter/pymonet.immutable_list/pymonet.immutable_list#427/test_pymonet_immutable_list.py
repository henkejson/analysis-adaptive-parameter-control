# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.filter(bool_0)


def test_case_1():
    int_0 = 886
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    bool_0 = immutable_list_0.__eq__(dict_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(tail=dict_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.__add__(dict_0)


def test_case_4():
    bool_0 = True
    str_0 = bool_0.__str__()
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    str_1 = var_0.__str__()


def test_case_5():
    str_0 = "LJ81b\r+n{\r4z^|qJ%p>Y"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    str_1 = immutable_list_0.__len__()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    var_2 = immutable_list_0.reduce(var_1, var_1)


def test_case_7():
    bytes_0 = b"\x1aR\x8d\x88\t\x9fsAGh\xcb\x12\x8fN\x8c\xe8\x1e\xdc}\xb0"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_1.to_list()


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_0.map(none_type_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    int_0 = 886
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    int_0 = 2524
    bool_1 = False
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_0.find(bool_0)
    list_0 = [int_0, bool_0, bool_1]
    tuple_0 = (immutable_list_0, int_0, list_0, list_0)
    immutable_list_2 = module_0.ImmutableList(tuple_0)
    immutable_list_3 = immutable_list_1.__add__(immutable_list_2)
    immutable_list_2.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_0)


def test_case_17():
    bytes_0 = b"he\xe8\x06K\xa9\x05\xe3\xdc\xfc\x01\xec\xb8\xa4m6.<"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bytes_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_1.reduce(bool_0, bool_0)


def test_case_19():
    int_0 = 900
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    immutable_list_1 = immutable_list_0.unshift(dict_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(int_0)
    immutable_list_2.find(var_0)


def test_case_20():
    int_0 = 904
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(immutable_list_1)
    immutable_list_2 = immutable_list_0.unshift(dict_0)
    immutable_list_2.find(var_0)


def test_case_21():
    int_0 = 896
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(var_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)
