# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_2.find(none_type_0)


def test_case_2():
    none_type_0 = None
    int_0 = 2391
    str_0 = "\n        Transform Lazy into successful Validation with constructor_fn result.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    int_1 = -1474
    tuple_0 = (int_0, str_0, int_1)
    immutable_list_0 = module_0.ImmutableList(is_empty=tuple_0)
    immutable_list_0.__add__(none_type_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_2 = immutable_list_0.unshift(immutable_list_1)
    immutable_list_2.find(none_type_0)


def test_case_4():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__len__()
    immutable_list_0.find(str_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_6():
    str_0 = "%kG'!"
    immutable_list_0 = module_0.ImmutableList(tail=str_0)
    immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1.filter(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.to_list()
    var_2 = immutable_list_0.__len__()
    var_3 = immutable_list_0.reduce(var_2, immutable_list_0)
    var_4 = var_3.find(var_1)
    immutable_list_0.filter(var_3)


def test_case_11():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_12():
    list_0 = []
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.reduce(list_0, list_0)


def test_case_13():
    none_type_0 = None
    bytes_0 = b"\xd5k\xb5{\xd2\x0e#G\xea\xd3R\x91\x01q3\r"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_0.append(set_0)
    immutable_list_2.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_16():
    none_type_0 = None
    int_0 = -2175
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(int_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_3 = immutable_list_0.unshift(var_0)
    immutable_list_3.find(none_type_0)


def test_case_17():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    immutable_list_3 = immutable_list_0.unshift(bytes_0)
    var_0 = immutable_list_3.__len__()
    immutable_list_0.find(bytes_0)


def test_case_18():
    bytes_0 = b"\xfa\xe3.8\xd6L\x0bF"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_19():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    var_1 = immutable_list_1.to_list()
    var_2 = immutable_list_1.__len__()
    immutable_list_2.map(var_2)


def test_case_20():
    bytes_0 = b"\xa3\x19\xbf\xffF\xad"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_22():
    float_0 = -1525.8
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.reduce(float_0, float_0)
