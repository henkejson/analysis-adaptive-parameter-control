# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(str_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(var_0)
    var_1 = var_0.__len__()
    var_2 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.__add__(var_1)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(var_0)


def test_case_4():
    str_0 = "^\tE[w!I_HP8T"
    immutable_list_0 = module_0.ImmutableList(str_0, str_0)
    var_0 = immutable_list_0.__len__()
    var_0.to_list()


def test_case_5():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.__str__()


def test_case_6():
    bytes_0 = b"\x14\xdf\xe4\x7f"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(bytes_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList()
    bytes_0 = b"\xee\x16\xc7\xbf\xeb\xa2\xf5c\x89\x84\xf7\xc2\x12\x17Ii\xfa\x9cj"
    immutable_list_2 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_2.map(none_type_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_1.filter(var_0)


def test_case_10():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(bool_0)
    str_0 = var_0.__str__()


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(bool_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    int_0 = -2174
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    str_0 = "E.$"
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_0.find(bool_0)


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    none_type_0 = None
    bytes_0 = b"\xe7\x1e\xcb\xd7"
    str_0 = "''\"f7@PZjCWAam4"
    set_0 = {bytes_0, bytes_0, bytes_0, str_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_0.find(none_type_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_1.find(immutable_list_0)
    immutable_list_1.filter(bool_0)


def test_case_22():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(is_empty=tuple_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(tuple_0, immutable_list_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_1.reduce(var_0, immutable_list_1)
