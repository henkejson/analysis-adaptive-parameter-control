# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(none_type_0)
    immutable_list_0.filter(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.__add__(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(immutable_list_0)


def test_case_9():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bool_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_2 = var_0.append(var_1)
    var_2 = immutable_list_0.find(var_1)
    immutable_list_2.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    bool_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(none_type_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    bool_0 = False
    var_1 = immutable_list_0.reduce(var_0, bool_0)
    immutable_list_0.map(var_1)


def test_case_14():
    bytes_0 = b"+\x0c\x16\xd4\xd9\xa1f\x90:\x87+6\xcf\xd9i"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=bytes_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0, is_empty=none_type_0)
    immutable_list_1.reduce(bytes_0, none_type_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    str_0 = "i_k2^4^u+;}-;Goc"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    var_0.reduce(var_0, var_0)


def test_case_19():
    bool_0 = True
    tuple_0 = ()
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=bool_1)
    immutable_list_0.find(bool_0)


def test_case_20():
    none_type_0 = None
    bytes_0 = b"#\xc6#E\x84\xa9\x0c\xb0\xb8C/\xca\xba<$\xafA"
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=bytes_0)
    immutable_list_3 = immutable_list_2.append(none_type_0)
    immutable_list_4 = immutable_list_3.__add__(immutable_list_3)
    bool_0 = immutable_list_4.__eq__(immutable_list_3)
    var_0 = immutable_list_1.reduce(bool_0, none_type_0)
    var_1 = immutable_list_3.__len__()
    var_2 = immutable_list_2.__len__()
    var_2.filter(var_2)


def test_case_21():
    bytes_0 = b"+\x0c\x16\xd4\xd9\xa1f\x90:\x87+6\xcf\xd9i"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=bytes_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.reduce(bytes_0, none_type_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1.filter(var_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)
