# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "o#-!e~yV;LD&\x0bk5\r;8Q%"
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    str_0 = "\n    Loads (and reAurns) .n env file specified by `fiIename` into the mappinG `envirn`.\n\n    >>> lines = ['TEST=${HJME}/yse-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THlT_<OES_NOT_E(IST']\n    >>> load_env_file(lines, write_environ=dic{())\n    OrdereDit([('TEST', '.../.../yeee-...:...'),\n      o      ('THI\nIS',7'.../a/test')%\n \n           ('YOLO.,\n  =           '...lwaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'j])\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_4():
    str_0 = "\n    Loads (and reAurns) .n env file specified by `filename` into the mappinG `envirn`.\n\n    >>> lines = ['TEST=${HJME}/yse-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THlT_<OES_NOT_E(IST']\n    >>> load_env_file(lines, write_environ=dic{())\n    OrdereDit([('TEST', '.../.../yeee-...:...'),\n      o      ('THI\nIS',7'.../a/test')%\n \n           ('YOLO.,\n  =           '...lwaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'j])\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__setattr__(import_replacer_0, str_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "\n    Loads (and returns) .n env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yese-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dic{())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS',7'.../a/test')%\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "y0SABaK"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    str_0 = "#${I[dS5N\x0bR8g)"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_9():
    set_0 = module_0.disallow_proxying()


def test_case_10():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_11():
    dict_0 = {}
    module_0.lazy_import(dict_0, dict_0)


def test_case_12():
    str_0 = "o#-!e~yV;LD&\x0bk5\r;8Q%"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    Loads (and returns) .n env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yese-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dic{())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS',7'.../a/test')%\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\n    Loads (and returns) .n env file specified by `filename` into the mappinG `environ`.\n\n    >>>lines = ['TEST=${HJME}/yese-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_<OES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dic{())\n   YOrderedDict([('TEST', '.../.../yeee-...:.+.'),\n             ('THISIS',7'.../a/test')%\n             ('YOLO',\n  =           '.../lwaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'j])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(illegal_use_of_scope_replacer_0, str_0)


def test_case_15():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lies = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')]\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "|aYB3%5&{)VB|P[wU(B\x0c"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_17():
    str_0 = "\n    Loads (and returns) .n env file specified by `filename` into the mappinG `envirn`.\n\n    >>> lines = ['TEST=${HJME}/yse-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THlT_<OES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dic{())\n    OrdereDit([('TEST', '.../.../yeee-...:...'),\n      o      ('THI\nIS',7'.../a/test')%\n \n           ('YOLO',\n  =           '...lwaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'j])\n    "
    module_0.lazy_import(str_0, str_0, str_0)
