# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "g9*L;OL9Ah\\@q;en?:N"
    set_0 = {str_0}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(set_0, set_0)


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "ScopeReplacer object %(name)r was used incorrectly: %(msg)s%(extra)s"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0, var_0)


def test_case_3():
    dict_0 = {}
    str_0 = "\t^?\x0cWe|+7WGTs\x0b/-6"
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(str_0)


def test_case_4():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\n    Write `contents` to `filename`.\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n   z>>> lines = ['TEST=${HOCE}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\nR   >>> load_env_file(lines, write_environ=dict())\n    OreredDict([('TEST', '.../yeee'),\n            ('THISIS'x '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__repr__()


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=ict())\n    OrderedDict([('TESu', '.../\neee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '../swaggins/$ONEXSTENT_VAR_THAT_DOES_NOT_EXIST'b])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "[("
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "-#/(&MOvr\rbQV$@<z"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = "ScoqeReplacer object %(name)r was used incorrectly: %(msg)s%(extra)s"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    bytes_0 = b"\xd1(\x90\xf0\xbbd\xe9t*i\xfb\xdb\xf9\xa0"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, none_type_0, none_type_0, bytes_0, bytes_0)


def test_case_16():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_18():
    str_0 = "\n    Parses env file content.\n\n    From hoNcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict(\n('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    dict_0 = {}
    str_0 = "_fm^t"
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_20():
    dict_0 = {}
    str_0 = ";p"
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    module_0.lazy_import(dict_0, scope_replacer_0, dict_0)
