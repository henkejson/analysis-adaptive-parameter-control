# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)


def test_case_1():
    str_0 = 'ms<R"r]",f'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "\n    An ordered dictionary can be combined with the Counter class so that the counter remembers the order elements are\n    first encountered.\n\n    From Python stdlib in `collections`.\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    str_0 = "9:x"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_4():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = 'CheX"o;!yJ|U)'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = 'CheX(""o;!yJ|U)'
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = ".PWvzWGrdjov\n"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = 'CheX"o;!yJ|U)'
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "n/Gs`dC#LY \n2"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = 'dCheX"o;!yJ|U)'
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__repr__()


def test_case_14():
    str_0 = "S|+m\nm%(Y=oKA\n<"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = 'CheX("o;!y\nJ|U)'
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    bool_0 = True
    str_0 = "\n    Stores items in the order the keys were last added.\n\n    From Python stdlib in `collections`.\n    "
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, bool_0)


def test_case_17():
    str_0 = 'CheX(""_o;!y\x0b\tJ|U)'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_18():
    bool_0 = False
    str_0 = "#`7!*;\\st["
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    import_processor_0 = module_0.ImportProcessor()
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_19():
    str_0 = "b from/imrtg%r"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)
