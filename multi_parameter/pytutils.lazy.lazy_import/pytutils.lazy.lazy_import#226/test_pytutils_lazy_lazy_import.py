# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "VUsS"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )


def test_case_2():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "}m)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    import_processor_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_4():
    str_0 = "}m)(D"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_5():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, none_type_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "!sH)k"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "!sH)k"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "&BhCQ(X\x0b\ni`Cwca"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    var_0 = module_0.disallow_proxying()


def test_case_11():
    float_0 = -297.9714676609981
    module_0.lazy_import(float_0, float_0)


def test_case_12():
    str_0 = "monokai"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_13():
    str_0 = "o*3#!4I\\RaV*dh="
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "lm)(D"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    complex_0 = 2772.3402 - 973.0699j
    module_0.ImportReplacer(complex_0, complex_0, complex_0, complex_0, complex_0)


def test_case_16():
    str_0 = "B%%-C,JR9R\n"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "AvY7"
    str_1 = "\x0c"
    module_0.lazy_import(str_0, str_1, str_0)


def test_case_18():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_19():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0)
    module_0.lazy_import(list_0, import_replacer_0)


def test_case_20():
    str_0 = "monokai"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)
