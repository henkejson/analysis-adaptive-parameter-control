# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\\{(\\w+)\\}"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, none_type_0)
    import_replacer_0.__setattr__(none_type_0, none_type_0)


def test_case_4():
    str_0 = "LCf17r>]"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_5():
    int_0 = -2423
    module_0.ImportReplacer(int_0, int_0, int_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    bytes_0 = b"{\xdf\x9e\xffh\xb9\xf3\x1f\x1c\xfc*\x99\x91\xec\xaa\x8dE\xfcP"
    module_0.ScopeReplacer(bytes_0, bytes_0, bytes_0)


def test_case_8():
    import_processor_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "_"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    bytes_0 = b"o\xae\x96\xea\x01"
    none_type_0 = None
    module_0.ImportReplacer(bytes_0, bytes_0, none_type_0, bytes_0, bytes_0)


def test_case_11():
    str_0 = "(:\rVi{\n_WqmQ!,"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    str_0 = "_"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_13():
    str_0 = "'<~("
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    str_0 = "+M^$/~ #TN{8"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    var_0 = module_0.disallow_proxying()
    none_type_0 = None
    import_processor_0 = var_0.__str__()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_1 = import_processor_0.__str__()
    str_0 = ""
    module_0.lazy_import(import_processor_0, str_0, none_type_0)


def test_case_16():
    str_0 = "\n    Write `contents` to `filename`.\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\\{(\\w+)\\}"
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "(:\rVi{\n_WqmQ!,"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "6e:K3p"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_20():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)
