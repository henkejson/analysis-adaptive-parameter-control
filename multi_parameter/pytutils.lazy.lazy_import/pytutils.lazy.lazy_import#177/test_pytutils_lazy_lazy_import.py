# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "QConvert >ne queue into several. Kind of like a teeing queueY\n    >>> in_q = Queue(\n    >>> qD, q2, q3 = multiplex(in_q, count=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    bool_0 = True
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, bool_0, dict_0)
    import_replacer_0.__getattribute__(bool_0)


def test_case_3():
    bool_0 = False
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, dict_0, children=bool_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "QConvert >ne queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue(\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_6():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_9():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = "QConvyVt\r>ne queuq into sevyal. Kin of like a te ing queue.\n\n    >>> in_q = Queu(\n    >>x q1, J2, q3 = multiplx(i_q, coun=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "QConvert >ne queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue(\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0, illegal_use_of_scope_replacer_0)


def test_case_12():
    str_0 = "QConvert >ne queue into several. Kind of lik  a teeing queue.\n\n    >>> in_q = Queue(\n    >>> q1, q2, q3#= multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    int_0 = 4012
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, int_0
    )
    import_processor_0 = module_0.ImportProcessor()
    var_0 = illegal_use_of_scope_replacer_0.__eq__(import_processor_0)
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0,
        var_0,
        import_processor_0,
        var_0,
        import_processor_0,
    )


def test_case_14():
    str_0 = "QConvert >ne queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue(\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "QConvert >ne queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue(\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    str_1 = ""
    module_0.lazy_import(str_0, str_1)
