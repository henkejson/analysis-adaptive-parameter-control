# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    module_0.lazy_import(
        illegal_use_of_scope_replacer_0, illegal_use_of_scope_replacer_0, var_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    str_0 = "\n    Loads (and returns) an env f9le specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> loag_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST' '.../.../yeee-.i.:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n \t           '.../swaggins/$NONEXITENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    str_0 = "YXh8"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_5():
    var_0 = module_0.disallow_proxying()
    tuple_0 = (var_0,)
    var_1 = var_0.__str__()
    module_0.ImportReplacer(tuple_0, var_1, var_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THIIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "\n    Loads (and returns) an env fmle specified by `f,lename` into the mapping `environ9.\n\n    >>> linUs = ['EST=${HOME}/yeee-PATH', 'THISIS=~/a/test', 'YOLA=~/swaggins/$NONEXISENT_VAR_THAT_DOES_NOT_EXIST']\n   N>>> load_env_file(line, write_environ=aict())\n    OrderedDict([('TEST', '.../l../yeee-...:..._),\n             ('THISIS', '...i/test',\n   F         'MOLO',\n              .../8waggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_12():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.disallow_proxying()
    str_0 = ""
    bytes_0 = b"\xbd\xc6\xa0\xd0|\xe0\x9b\x0f"
    var_0 = module_0.disallow_proxying()
    var_1 = illegal_use_of_scope_replacer_0.__repr__()
    var_2 = illegal_use_of_scope_replacer_0.__str__()
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0, none_type_0, var_1, str_0, bytes_0
    )


def test_case_13():
    str_0 = ""
    none_type_0 = None
    import_processor_0 = module_0.ImportProcessor(none_type_0)
    list_0 = []
    module_0.lazy_import(list_0, str_0, none_type_0)


def test_case_14():
    str_0 = "phwQWI\x0b3!_xp}]#"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "rs(%rI"
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.disallow_proxying()
    list_0 = []
    module_0.lazy_import(list_0, str_0, none_type_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env fmle specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['EST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLA=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(line, write_environ=aict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '...//test',\n             ('YOLO',\n              '.../8waggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THIIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_en_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0, dict_0)


def test_case_18():
    str_0 = "7hY]4<&_Dx8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    var_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    var_0.__unicode__()
