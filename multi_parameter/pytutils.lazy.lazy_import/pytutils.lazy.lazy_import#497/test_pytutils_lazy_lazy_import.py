# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    >>> log = get_logg\nr(o\n    [>> log.ino('test'O\n\n    >>> lo = get_ogger('test2')\n    >>> logEinf('test2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    str_0 = "r"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "\n    >>> log = get_logg\nr(o\n    [>> log.ino('test'O\n\n    >>> o = get_ogger('test2')\n    >>> logEinf('test2')\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    import_replacer_0.__setattr__(str_0, dict_0)


def test_case_3():
    str_0 = "r"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_4():
    str_0 = ""
    module_0.ImportReplacer(str_0, str_0, str_0, children=str_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "r"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "r"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    complex_0 = -1711.591395 - 1216.2j
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        complex_0, complex_0, complex_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    str_0 = "r"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "{}*#$`0R"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "mh7+\x0bf(}Jg<'2R=e\\kw-"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    complex_0 = 37.205522 - 2529.379j
    module_0.ImportReplacer(complex_0, complex_0, complex_0, complex_0, complex_0)


def test_case_16():
    str_0 = "r"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_17():
    str_0 = "\n    >>> log = get_logg\nr()\n    [>> log.info('test'O\n\n    >>> log = get_ogger('test2')\n    >>> log.inf('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "\n    >>> log = get_logg\nr(o\n    [>> log.ino('test'O\n\n    >>> lo = get_ogger('test2')\n    >>> logEinf('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n    >>> log = get_logg\nr(o\n    [>> log.ino('test'O\n\n    >>> o = get_ogger('test2')\n    >>> logEinf('test2')\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    var_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    var_0.__eq__(dict_0)


def test_case_20():
    str_0 = "}sFz\\s"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    import_replacer_0.__getattribute__(str_0)
