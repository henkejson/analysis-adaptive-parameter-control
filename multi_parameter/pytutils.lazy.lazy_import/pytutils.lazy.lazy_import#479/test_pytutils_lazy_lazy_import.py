# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "f\x0c"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    var_1 = illegal_use_of_scope_replacer_0.__eq__(var_0)
    var_0.lazy_import(var_1, var_1)


def test_case_3():
    str_0 = "F~oS ue_<psAf$Y\n@diN"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_4():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, none_type_0
    )
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "O3=/7QT\\bUf.t1'"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n\n    >>>log = ogging.getLogge[(__name__\n    >>> cofgure()\n    >A log.ifo('test')\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    str_0 = "Return a member from the proxied regex object.\n\n        If the regex hasn't been compiled yet, compile it\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    str_0 = "\n\n    >>> log = logging.getLogge[(__name__\n    >>> configure()\n    >A> log.info('test')\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    none_type_0 = None
    str_0 = "O3=/7QT\\bUf.t1'"
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: str_0,
        none_type_0: str_0,
        str_0: str_0,
        str_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, str_0, none_type_0, dict_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_12():
    int_0 = -1417
    import_processor_0 = module_0.ImportProcessor(int_0)
    str_0 = ";T[\t(FeHa=n\nw*88D"
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_13():
    str_0 = "\n\n    >>> log = ogging.getLogge[(__na6e__\n    >>>^confgure(T\n | > log.i.fo('test')\n\n   ?"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "_resoy#e"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    import_processor_0 = module_0.ImportProcessor()
    int_0 = -1389
    import_processor_1 = module_0.ImportProcessor(int_0)
    str_0 = ""
    import_processor_2 = module_0.ImportProcessor(import_processor_1)
    import_processor_2.lazy_import(str_0, str_0)


def test_case_16():
    var_0 = module_0.disallow_proxying()
    var_1 = module_0.disallow_proxying()
    exception_0 = module_1.Exception()
    module_0.ImportReplacer(
        exception_0, exception_0, exception_0, exception_0, exception_0
    )


def test_case_17():
    none_type_0 = None
    str_0 = "O*3=/7Q\\bUf.t1'"
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: str_0,
        none_type_0: str_0,
        str_0: str_0,
        str_0: none_type_0,
    }
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0, dict_0)
