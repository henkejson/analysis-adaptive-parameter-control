# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = ";"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    int_0 = -2446
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    int_0 = 818
    dict_0 = {int_0: int_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, int_0, int_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_3():
    import_processor_0 = module_0.ImportProcessor()


def test_case_4():
    str_0 = "\tNY')mv("
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_5():
    str_0 = "\tNY')mv("
    module_0.lazy_import(str_0, str_0)


def test_case_6():
    str_0 = ""
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    complex_0 = 439.27006 - 2128.62327j
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        complex_0, complex_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_9():
    str_0 = "imports"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    int_0 = 7
    module_0.ImportReplacer(str_0, int_0, var_0, var_0)


def test_case_10():
    str_0 = "%(%)\n"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = ";"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_12():
    str_0 = "f%(K\n%)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "_EB&TH0#n>\x0cnq_q"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    int_0 = -2446
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_15():
    str_0 = "NY'1^v("
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "8f"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.ImportReplacer(list_0, str_0, list_0, str_0, str_0)


def test_case_17():
    str_0 = "HqOd"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_18():
    str_0 = "f%($\n%)"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "f%($\n%"
    none_type_0 = None
    module_0.lazy_import(str_0, str_0, none_type_0)


def test_case_20():
    int_0 = 3833
    str_0 = "ZFt/f &y3&1ci"
    dict_0 = {int_0: int_0}
    bool_0 = True
    import_replacer_0 = module_0.ImportReplacer(dict_0, int_0, str_0, bool_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
