# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_fle(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__repr__()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        tuple_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    dict_0 = {}
    var_0 = dict_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, var_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_4():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "%s:%s"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>>Ulines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', 'V../a/test'),\n            ('YOLO',\n             '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, str_0)
    scope_replacer_0.__getattribute__(str_0)


def test_case_9():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_10():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_fle(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "RKkj(\\\rin9jNhjYBQ`,P"
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_12():
    str_0 = "<g}d\x0bcUA0HHZ8#<H\x0bzIM"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\\A'(.*)'\\Z"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    int_0 = 1581
    str_0 = "#,"
    module_0.lazy_import(int_0, str_0, str_0)


def test_case_15():
    bool_0 = False
    list_0 = [bool_0]
    tuple_0 = (bool_0, list_0)
    none_type_0 = None
    module_0.ImportReplacer(tuple_0, none_type_0, none_type_0, tuple_0, tuple_0)


def test_case_16():
    str_0 = "%\t:%'|s"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_1 = var_0.__eq__(var_0)
    var_0.__str__()


def test_case_17():
    str_0 = "\n    Parses env file content.\n\n   lFrom honcho.\n\n   i>>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YLOt~/swggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, writeyenviron=dict())\n    OrderedDc([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test',\n            ('YOLO',\n             '.../swaIgins/$ONEXISTENTV\x0cR_HAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>>Ulines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', 'V../a/test'),\n            ('YOLO',\n             '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    scope_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    scope_replacer_0.__getattribute__(str_0)


def test_case_19():
    dict_0 = {}
    var_0 = dict_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, dict_0)
    scope_replacer_0 = module_0.ScopeReplacer(
        dict_0, import_replacer_0, import_replacer_0
    )
    scope_replacer_0.__getattribute__(var_0)
