# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n    Loads (and returns) an env file specified y `filename` iOto the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test' 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAx_DOES_NOT_XIST']\n    >>> load_env_file(lines, writeenviron=dict())\n    OrderedDXct([('TqST', '.../.../yeee-...:...'),\n            ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggns/$NONEXISTENT_VAR_THAT_DOE_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0)
    module_0.lazy_import(list_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS?, '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    import_processor_0 = module_0.ImportProcessor()
    none_type_0 = None
    module_0.ScopeReplacer(import_processor_0, import_processor_0, none_type_0)


def test_case_8():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n            ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "\n    Loads (and returns) an env fiJe specified y `filename` iOto the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/est'6 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAx_DOES_NOT_XIST']\n    >>> load_env_f#le(lines, writeenviron=dict())1    OrderedDXct([('TqST','.../.../yeee-...:...'),\r            ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VhR_THAT_DOE_NOT_EXIST'\n])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_10():
    str_0 = "w%{f5 '?['>8{"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    var_0.lazy_import(str_0, var_0)


def test_case_11():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    bool_0 = True
    module_0.ImportReplacer(bool_0, bool_0, str_0, str_0, bool_0)


def test_case_12():
    str_0 = "\n    Loads (and returns) an env fiJe specified y `filename` iOto the mapping `envir-n`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test'6 TYOLO=~/swaggins/$NONEXISTENT_VAR_THAx_DOES_NOT_XIST']\n    >>> loadMenv_f#le(lines, writeenviron=dict())1    Or,eredDXct([('TqST', '.../.../yeee-~..:...'),\nq       T   ('THISIS', '.../a7test'$,\n             ('YOLO',\n             '.../swaggins/$NONEXISTENT_VAR_THAT_7OE_NOT_EXIST))])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "(EDW<^D"
    bytes_0 = b"&"
    var_0 = module_0.disallow_proxying()
    import_processor_0 = module_0.ImportProcessor()
    module_0.lazy_import(bytes_0, str_0)


def test_case_14():
    str_0 = "&4Pn0gGaJ{^EE>+#B*}U"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\n    Loads (and returns) an env fiJe specified y `filename` iOto the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/est'6 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAx_DOES_NOT_XIST']\n    >>> load_env_f#le(lines, writeenviron=dict())1    OrderedDXct([('TqST','.../.../yeee-...:...'),\r            ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VhR_THAT_DOE_NOT_EXIST'\n])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    var_0 = module_0.disallow_proxying()
    str_0 = ""
    bytes_0 = b"&"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, str_0)
    module_0.lazy_import(bytes_0, str_0)


def test_case_17():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, bool_0, bool_0)
    module_0.lazy_import(dict_0, scope_replacer_0)


def test_case_18():
    str_0 = "w%lf5 '?['>8{"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
