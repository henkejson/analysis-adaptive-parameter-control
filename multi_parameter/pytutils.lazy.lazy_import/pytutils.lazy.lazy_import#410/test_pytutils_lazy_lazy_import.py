# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pytutils.lazy.lazy_import as module_1


def test_case_0():
    object_0 = module_0.object()
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_1.IllegalUseOfScopeReplacer(
        object_0, none_type_0
    )


def test_case_1():
    str_0 = "=$1&\nA"
    var_0 = module_1.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_2():
    str_0 = "Create a proxy object whic+ will compile,th! regex on demnd.\n\n  B :return: a LazyRegex proxy object.\n    "
    illegal_use_of_scope_replacer_0 = module_1.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    var_0 = module_1.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_1.ImportReplacer(dict_0, var_0, dict_0, var_0, var_0)
    import_replacer_0.__call__()


def test_case_4():
    import_processor_0 = module_1.ImportProcessor()


def test_case_5():
    str_0 = "\x0b0(Fu[Yymc3w):"
    module_1.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_1.disallow_proxying()


def test_case_7():
    str_0 = "T=;`MY9:Zy!5.G%"
    var_0 = module_1.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__repr__()


def test_case_8():
    int_0 = 830
    set_0 = {int_0, int_0}
    module_1.ScopeReplacer(set_0, int_0, set_0)


def test_case_9():
    str_0 = "a8WF"
    module_1.lazy_import(str_0, str_0, str_0)


def test_case_10():
    exception_0 = module_0.Exception()
    bool_0 = False
    dict_0 = {exception_0: exception_0, exception_0: bool_0}
    import_replacer_0 = module_1.ImportReplacer(
        dict_0, exception_0, dict_0, exception_0, bool_0
    )
    import_replacer_0.__call__()


def test_case_11():
    import_processor_0 = module_1.ImportProcessor()
    int_0 = 5830
    bool_0 = False
    module_1.ImportReplacer(int_0, int_0, int_0, bool_0, int_0)


def test_case_12():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_1.IllegalUseOfScopeReplacer(bool_0, bool_0)
    complex_0 = 3064.51104 - 2362j
    none_type_0 = None
    str_0 = ""
    module_1.lazy_import(none_type_0, str_0, complex_0)


def test_case_13():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue() for _ i: range(3)]\n    >>> out_q = merge(q1g q2, q3)\n    "
    module_1.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "Hlh ('(.1HC`W\n!<]zhX"
    module_1.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue( forU_ i: range(3 d\n    >>\t out_q = merge@q1g q2, q3)\n    "
    module_1.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = " Merge ulXiple queues together\n\n    >>> q1, q,q3 = [Queue( forU_ i: r\nnge43 d\n    >>\t out_q = merge@q1g q2, q3)\n   A"
    module_1.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "`.*=Ccl~puL^"
    var_0 = module_1.IllegalUseOfScopeReplacer(str_0, str_0)
    var_1 = var_0.__eq__(var_0)
    var_0.__repr__()


def test_case_18():
    str_0 = "i\x0c,6v<41uiJL!#E"
    module_1.lazy_import(str_0, str_0, str_0)


def test_case_19():
    var_0 = module_1.disallow_proxying()
    dict_0 = {var_0: var_0}
    var_1 = dict_0.__str__()
    import_replacer_0 = module_1.ImportReplacer(dict_0, var_1, var_1, var_0)
    module_1.lazy_import(var_0, import_replacer_0)


def test_case_20():
    var_0 = module_1.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    var_1 = var_0.__str__()
    import_replacer_0 = module_1.ImportReplacer(dict_0, var_1, var_1, var_1)
    module_1.lazy_import(var_1, import_replacer_0)
