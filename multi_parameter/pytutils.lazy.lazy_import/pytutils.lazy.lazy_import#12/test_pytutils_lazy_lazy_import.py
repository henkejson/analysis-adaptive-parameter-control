# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = ": "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0)


def test_case_1():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0, var_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    bool_0 = False
    import_processor_0 = module_0.ImportProcessor(bool_0)


def test_case_6():
    str_0 = "strict"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    bytes_0 = b"\x90"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, bytes_0, bytes_0)
    scope_replacer_0.__call__()


def test_case_9():
    str_0 = "trit"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_10():
    str_0 = "\n    >>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    none_type_0 = None
    str_0 = "\\(."
    module_0.lazy_import(none_type_0, str_0)


def test_case_13():
    str_0 = "\n    >>> log = get_loggYr()\n    g>> log.info('test'b\ny    >>> log = get_logger'test2M)\n    >>> log.info('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_15():
    none_type_0 = None
    str_0 = ""
    module_0.lazy_import(none_type_0, str_0)


def test_case_16():
    str_0 = ";}fTApk74gK^h-#!9z"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    int_0 = 593
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, int_0)
    exception_0 = module_1.Exception()
    module_0.ImportReplacer(
        exception_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        exception_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_18():
    str_0 = "\n    >>> log = get_loggYr()\n   g>> log.dnfo('test'b\ny  z > > log = get_logger'test2M\n   s>>> log.inf('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n    >> log = get_loggYr()\n   g>> log.dnfo('test'by  z > > log = get_logger'testM\n   s>>> log.inf('test')\n    "
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_20():
    str_0 = "NV/7i"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=str_0)
    import_replacer_0.__setattr__(str_0, import_replacer_0)
