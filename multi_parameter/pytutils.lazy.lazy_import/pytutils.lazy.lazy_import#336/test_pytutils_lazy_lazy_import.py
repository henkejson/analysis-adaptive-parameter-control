# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "=s:Azs"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_1():
    str_0 = "=sDA.P"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)


def test_case_2():
    str_0 = "=s:Azs"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = '\nF"P'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    int_0 = 2179
    dict_0 = {int_0: int_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, int_0, int_0, dict_0)
    import_replacer_0.__setattr__(int_0, int_0)


def test_case_5():
    float_0 = 1623.5556482105987
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, float_0, float_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, dict_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "\nFAP"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "\nDAP"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    import_processor_0 = module_0.disallow_proxying()


def test_case_10():
    var_0 = module_0.disallow_proxying()
    str_0 = "kQUR$&5\t3Au0("
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.ImportReplacer(dict_0, dict_0, bool_0, bool_0, bool_0)


def test_case_12():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    none_type_0 = None
    str_0 = ""
    module_0.lazy_import(none_type_0, str_0)


def test_case_14():
    str_0 = "=s:Azs"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "`#d';50^c"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    str_0 = "\n    Parses env file cFntent.\n\n  aFrom honcho.\n    >>> lnes = ['TEST=${HOME}/yee', 'THISIS=~/a/test', 'YOLO=~/swagins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_envirn=dict()-\n    OrderedDict([('TES', '.../yeee'),\n             ('T1ISIS', '.../a/test',\n             ('YOLO',\n         \x0b   '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    none_type_0 = None
    str_0 = "LOGGING"
    dict_0 = {str_0: none_type_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, str_0)
    import_replacer_0.__setattr__(none_type_0, dict_0)
