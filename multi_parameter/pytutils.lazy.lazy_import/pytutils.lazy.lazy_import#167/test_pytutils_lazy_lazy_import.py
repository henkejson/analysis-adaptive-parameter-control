# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "YL"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    str_0 = "Uii"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "?"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "`&\rf qB4^\x0bGI#"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_4():
    float_0 = -2541.0
    none_type_0 = None
    module_0.ImportReplacer(float_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "Pi"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "TZvF`;-+Z`Yz"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "i\nT=]xN6A~Y).r(COG"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "\n    Walks up a domain by subdomain.\n\n    >>> split_domain_into_subdomains('this.is.a.test.skywww.net')\n    ['this.is.a.test.skywww.net', 'is.a.test.skywww.net', 'a.test.skywww.net', 'test.skywww.net', 'skywww.net']\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "\n    Loads (and returnsw an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "i\nT=]xN6A~Y).r(COG"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = ">ud(7]qwN'%YZ"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\x0b@+z~,`Uz|#eh"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = ""
    str_1 = "89Ka%uolOBsaukMEiI"
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0, str_1)


def test_case_16():
    str_0 = "UPi"
    list_0 = []
    str_1 = "r"
    module_0.ImportReplacer(str_0, str_1, list_0, str_0, str_0)


def test_case_17():
    str_0 = "`B\r|N\x0c*&l"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_18():
    str_0 = "\nF&\x0cA9pl\t3"
    dict_0 = {
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
        str_0: str_0,
    }
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    int_0 = -1053
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, int_0)
    module_0.lazy_import(dict_0, import_replacer_0, scope_replacer_0)
