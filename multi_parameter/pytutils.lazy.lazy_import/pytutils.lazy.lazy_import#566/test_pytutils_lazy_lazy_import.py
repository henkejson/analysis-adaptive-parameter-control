# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "`#0r9P(p$\n1cxqAu$"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__unicode__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_2():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines =['TEST=${HOME}/yeee-PATH', 'THISIS=~/a/test', 'YOO=~/swaggins/$NONEXISTENT_VAR_THAT_D]ES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrdeedDict([('TEST', '.../.../yeee-...:...',\n             ('THISIS', '../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VZR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_3():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >> lines =['TEST=${HOME}/yeee-PATH', 'THISIS=~/a/test', 'YOO=~/swaggins/$NONEXISTENT_VAR_THAT_D]ES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrdeedDict([('TEST', '.../.../yeee-...:...',\n             ('THISIS', '../a/test'),\n             ('YOLO',\n             '.../swaggins/$NONEXISTENT_VZR_THAT_DOES_NOT_EXIST')])\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0, dict_0)


def test_case_4():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "P6g^menr3fX?V 0M}dS\t"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\n    Loads(and returns) an env file specified by `filenameR into the mapping `environ`.\n\n    >>> lines =['TEST=${HOME/yeee-PATH', 'THISIS=~/a/test', 'YOO=~/swaggins/$NONEXISTENT_VAR_THAT_D]ES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    O0deedDict([('TEST', '.../.../yeee-...:...',\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VZR_THAT_DOES_NOT_EXIlT')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    import_processor_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "0#r9P(#$\n1cxqAtu$"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(var_0, str_0)


def test_case_10():
    str_0 = "\n        This is primarily\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "09P(\n`x$"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "0#s]9b(px]"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    bool_0 = False
    var_0 = module_0.disallow_proxying()
    list_0 = [var_0]
    module_0.ImportReplacer(bool_0, bool_0, list_0, bool_0, list_0)


def test_case_15():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, dict_0, none_type_0
    )
    import_replacer_0.__call__()


def test_case_17():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines =['TEST=${HOME}/yeee-PATH', 'THISIS=~/a/test', 'YOO=~/swaggins/$NONEXISTENT_VAR_THAT_D]ES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrdeedDict([('TEST', '.../.../yeee-...:...',\n             ('THISIS', '../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VZR_THAT_DOES_NOT_EXIST')])\n    "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)
