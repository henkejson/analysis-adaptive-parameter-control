# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    float_0 = -2576.42619
    var_0 = module_0.has_message_body(float_0)
    var_1 = float_0.__repr__()


def test_case_1():
    str_0 = "Convenience method to register a request middleware for all blueprints in the group.\n\n        Args:\n            middleware (Optional): Optional positional Parameters to be use middleware\n\n        Returns:\n            Partial function to apply the middleware\n        "
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    int_0 = -2578
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    bytes_0 = b"\x00\x05\xbez\xb3\xdf;\xb6K\xc7Qd\\\x161\x97\xc4\x99\x9f\xc6"
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    module_0.import_string(bytes_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    int_0 = 307
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    default_1 = module_0.Default()
    float_0 = 24.3
    var_0 = module_0.has_message_body(float_0)
    str_1 = "na+"
    var_1 = module_0.is_hop_by_hop_header(str_1)
    module_0.import_string(str_1)


def test_case_9():
    default_0 = module_0.Default()
    var_0 = module_1.ismodule(default_0)
    bool_0 = module_0.is_atty()
    str_0 = "Convenience method to register a request middleware for all blueprints in the group.\n\n        Args:\n            middleware (Optional): Optional positional Parameters to be use middleware\n\n        Returns:\n            Partial function to apply the middleware\n        "
    bool_1 = True
    str_1 = default_0.__str__()
    dict_0 = {str_0: bool_1}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(bool_1)
    int_0 = 304
    var_4 = var_1.__repr__()
    var_5 = module_0.has_message_body(int_0)
    var_6 = var_1.__repr__()
    var_7 = module_0.has_message_body(var_3)
    var_8 = var_3.__repr__()
    var_9 = module_0.is_hop_by_hop_header(var_8)
    var_10 = var_9.__repr__()
    module_0.import_string(var_9)
