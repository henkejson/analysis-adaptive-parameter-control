# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b";"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xde\xe3\xb9"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    module_0.import_string(var_0)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    default_1 = module_0.Default()
    module_0.remove_entity_headers(default_0)


def test_case_5():
    float_0 = 219.82504976622175
    var_0 = module_0.has_message_body(float_0)
    object_0 = module_1.object()
    module_0.is_hop_by_hop_header(var_0)


def test_case_6():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    dict_0 = {var_1: var_1, var_1: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = default_0.__repr__()
    str_0 = default_0.__str__()
    str_1 = var_3.__str__()
    module_0.has_message_body(str_0)


def test_case_7():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0, str_0)


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    default_0 = module_0.Default()
    dict_0 = {var_2: var_2, var_2: var_2}
    var_3 = var_2.__repr__()
    var_4 = module_0.remove_entity_headers(dict_0)
    var_5 = module_2.ismodule(var_1)
    var_6 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_7 = module_0.has_message_body(bool_2)
    str_0 = default_0.__str__()
    var_8 = default_0.__repr__()
    str_1 = var_0.__str__()
    var_9 = module_0.has_message_body(var_7)
    module_0.remove_entity_headers(default_0, var_8)
