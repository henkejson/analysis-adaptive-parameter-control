# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    list_0 = []
    module_0.has_message_body(list_0)


def test_case_1():
    bytes_0 = b"\x8a\x89\xcf\x19\xb3z\xa6\xf2\xa9\x90\xc2\xa8I"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "You are trying to use an event loop policy that is not compatible with your system. You can simply let Sanic handle selecting the best loop for you. Sanic will now continue to run using the default event loop."
    var_0 = module_1.ismodule(str_0)
    var_1 = var_0.__repr__()
    str_1 = var_1.__str__()
    var_2 = module_0.is_hop_by_hop_header(var_1)


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = var_0.__str__()
    bool_0 = False
    str_1 = default_0.__str__()
    var_1 = var_0.__repr__()
    module_0.remove_entity_headers(bool_0)


def test_case_5():
    float_0 = 1067.3022
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(float_0)
    var_2 = var_0.__repr__()
    bytes_0 = b"xf*\\P8n\xbc"
    module_0.remove_entity_headers(bytes_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_0.__repr__()
    bytes_0 = b"@\x01\t\xe9zb\xb2\xb2c\xdc5_bE\xf6I\x92K"
    module_0.has_message_body(bytes_0)


def test_case_7():
    int_0 = 10
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    dict_0 = {str_0: var_0}
    str_1 = var_0.__str__()
    var_2 = module_0.remove_entity_headers(dict_0)
    int_1 = 204
    var_3 = module_0.has_message_body(int_1)
    var_4 = var_3.__repr__()
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(var_0)
