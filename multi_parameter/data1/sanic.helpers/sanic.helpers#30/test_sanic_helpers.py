# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = False
    list_0 = [bool_0]
    module_0.has_message_body(list_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_5():
    list_0 = []
    var_0 = list_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    float_0 = -4199.0
    module_0.is_hop_by_hop_header(float_0)


def test_case_6():
    dict_0 = {}
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = default_0.__str__()


def test_case_7():
    list_0 = []
    var_0 = list_0.__repr__()
    var_1 = module_1.ismodule(var_0)
    var_2 = module_0.has_message_body(var_1)
    dict_0 = {var_0: var_0, var_1: var_0, var_0: var_2, var_2: var_2}
    module_0.remove_entity_headers(dict_0)


def test_case_8():
    int_0 = 868
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.Default(*var_1)


def test_case_9():
    list_0 = []
    var_0 = list_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    float_0 = 204.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = var_0.__repr__()
    str_0 = var_1.__str__()
    list_0 = [var_1, var_1]
    dict_0 = {}
    str_1 = list_0.__str__()
    var_2 = module_0.remove_entity_headers(dict_0, list_0)
    var_3 = dict_0.__repr__()
    default_0 = module_0.Default(*var_2)
    var_4 = default_0.__repr__()
    str_2 = var_2.__str__()
    bool_0 = module_0.is_atty()
    str_3 = default_0.__str__()
    var_5 = var_2.__repr__()
    default_1 = module_0.Default(**var_2)
    var_6 = module_0.is_hop_by_hop_header(var_4)
    dict_1 = {var_4: var_1, var_0: var_1, var_6: var_3, bool_0: var_2, var_1: var_3}
    module_0.remove_entity_headers(dict_1)
