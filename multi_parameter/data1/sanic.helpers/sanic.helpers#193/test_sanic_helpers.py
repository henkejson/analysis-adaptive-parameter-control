# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "\x0bAi"
    module_0.has_message_body(str_0)


def test_case_1():
    bytes_0 = b"\xdb\x05\xb5\xa3~\xde\xddqI\x0f\x10\x8b\xf9\x03\x0cvg\xb4e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = "Jp\x0bDC)bl]+;Ri#lM"
    var_0 = module_0.is_entity_header(str_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    tuple_0 = ()
    var_0 = module_1.ismodule(tuple_0)
    var_1 = module_0.has_message_body(var_0)
    var_2 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_6():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    dict_1 = {str_0: str_0}
    var_0 = module_1.ismodule(dict_1)
    var_1 = module_0.remove_entity_headers(dict_1)


def test_case_7():
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    var_0 = module_0.has_message_body(bool_0)


def test_case_8():
    int_0 = 322
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = module_1.ismodule(var_0)
    str_1 = var_1.__str__()
    var_2 = var_0.__repr__()
    default_0 = module_0.Default()
    var_3 = default_0.__repr__()


def test_case_9():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = module_1.ismodule(var_0)
    str_1 = var_1.__str__()
    var_2 = var_0.__repr__()
    default_0 = module_0.Default()
    var_3 = default_0.__repr__()
