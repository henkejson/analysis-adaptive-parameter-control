# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_5():
    bytes_0 = b"Not Implemented"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()


def test_case_7():
    bool_0 = True
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    none_type_0 = None
    var_1 = none_type_0.__repr__()
    str_0 = default_0.__str__()
    module_0.import_string(bool_0)


def test_case_8():
    default_0 = module_0.Default()
    float_0 = 2995.57717
    var_0 = module_0.has_message_body(float_0)
    module_0.import_string(float_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    int_0 = -976
    int_1 = 304
    var_0 = module_0.has_message_body(int_1)
    var_1 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(var_1)
    var_3 = module_1.ismodule(default_0)
    var_4 = default_0.__repr__()
    str_0 = var_2.__str__()
    module_0.is_entity_header(int_0)


def test_case_10():
    bytes_0 = b"U\x9d\xd2\xb3d9\xbby\xee\x94\x82\x1b\xad\x94\xf7:\xc8\x8c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
