# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"Bad Request"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    var_0 = module_1.ismodule(none_type_0)
    module_0.is_entity_header(var_0)


def test_case_4():
    str_0 = "Convenience property to access `Request.get_query_args` with default values.\n    "
    list_0 = []
    default_0 = module_0.Default(*list_0)
    bool_0 = module_0.is_atty()
    var_0 = module_0.is_hop_by_hop_header(str_0)
    bool_1 = module_0.is_atty()


def test_case_5():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    int_0 = 200
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.import_string(default_0, default_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)
    module_0.remove_entity_headers(bool_1)


def test_case_8():
    int_0 = 823
    var_0 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_0)


def test_case_9():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    dict_0 = {var_0: var_0, var_0: var_0}
    bool_1 = module_0.is_atty()
    str_0 = default_0.__str__()
    int_0 = 204
    var_1 = var_0.__repr__()
    default_1 = module_0.Default()
    str_1 = default_0.__str__()
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.remove_entity_headers(dict_0)
    bool_2 = module_0.is_atty()
    module_0.has_message_body(var_0)
