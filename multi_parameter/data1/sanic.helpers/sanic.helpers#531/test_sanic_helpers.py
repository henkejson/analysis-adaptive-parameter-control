# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.has_message_body(set_0)


def test_case_1():
    int_0 = -4477
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = -1711
    var_0 = int_0.__repr__()
    dict_0 = {var_0: int_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    int_0 = 674
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_0 = default_0.__repr__()
    default_1 = module_0.Default()
    module_0.is_entity_header(default_1)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_1 = default_0.__repr__()
    str_1 = default_0.__str__()


def test_case_7():
    int_0 = 198
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = -1711
    var_0 = module_1.ismodule(bool_0)
    var_1 = int_0.__repr__()
    int_1 = 204
    var_2 = bool_0.__repr__()
    var_3 = module_0.has_message_body(int_1)
    var_4 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()
    var_5 = module_1.ismodule(var_0)
    var_6 = bool_1.__repr__()
    var_7 = var_5.__repr__()
    var_8 = module_0.has_message_body(var_5)
    dict_0 = {var_1: int_0}
    var_9 = var_1.__repr__()
    var_10 = module_0.remove_entity_headers(dict_0)
    var_11 = module_0.is_hop_by_hop_header(var_6)
    module_0.import_string(var_2)
