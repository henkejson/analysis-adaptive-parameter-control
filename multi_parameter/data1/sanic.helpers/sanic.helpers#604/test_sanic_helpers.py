# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    complex_0 = 1278.483 - 946.52968j
    module_0.is_entity_header(complex_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_hop_by_hop_header(dict_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    float_0 = 4598.41481
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    int_0 = -828
    module_0.import_string(int_0, int_0)


def test_case_8():
    dict_0 = {}
    bool_0 = module_0.is_atty()
    bool_1 = True
    var_0 = module_0.has_message_body(bool_1)
    var_1 = bool_0.__repr__()
    var_2 = var_0.__repr__()
    var_3 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_4 = default_0.__repr__()
    default_1 = module_0.Default()


def test_case_9():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    bytes_0 = b"Z\xe5c;\xa4\x01~\xd0\xf0*{\xd2\xbe\xa5\xe0X\xf4"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_11():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = dict_0.__repr__()
    var_1 = module_1.ismodule(bool_0)
    var_2 = module_0.has_message_body(var_1)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_1 = {var_0: bool_0}
    var_3 = module_0.remove_entity_headers(dict_1)
    object_0 = module_2.object(**dict_0)
    int_0 = 304
    str_1 = var_3.__str__()
    var_4 = module_0.has_message_body(int_0)
    var_5 = var_3.__repr__()
    var_6 = var_3.__repr__()
    var_7 = var_0.__repr__()
    module_0.is_hop_by_hop_header(bool_0)
