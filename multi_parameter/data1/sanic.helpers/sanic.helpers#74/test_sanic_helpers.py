# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "ConnectionProtocol"
    set_0 = {str_0, str_0, str_0}
    module_0.has_message_body(set_0)


def test_case_1():
    int_0 = 3180
    module_0.remove_entity_headers(int_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    complex_0 = -4453.89402 + 538.823105j
    module_0.is_entity_header(complex_0)


def test_case_4():
    complex_0 = -4453.89402 + 538.823105j
    module_0.is_hop_by_hop_header(complex_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_7():
    int_0 = 295
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = module_1.ismodule(var_1)


def test_case_8():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    int_0 = 304
    var_1 = module_0.has_message_body(int_0)
    var_2 = module_0.has_message_body(bool_0)
    var_3 = var_1.__repr__()
    str_2 = default_0.__str__()
    module_0.remove_entity_headers(bool_0)
