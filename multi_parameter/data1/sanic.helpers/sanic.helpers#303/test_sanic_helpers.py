# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    set_0 = set()
    module_0.remove_entity_headers(set_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    set_0 = set()
    module_0.is_entity_header(set_0)


def test_case_4():
    str_0 = "+V"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    str_0 = "1~[Q}4v"
    dict_0 = {str_0: str_0}
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_1.ismodule(bool_0)
    var_1 = module_0.has_message_body(bool_0)


def test_case_7():
    int_0 = 1081
    bool_0 = module_1.ismodule(int_0)
    var_0 = module_0.has_message_body(int_0)
    default_0 = module_0.Default()
    var_1 = module_1.ismodule(var_0)
    var_2 = module_0.has_message_body(int_0)


def test_case_8():
    str_0 = "1~[Q}4v:"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    default_0 = module_0.Default()
    int_0 = 304
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.has_message_body(var_2)
    var_4 = default_0.__repr__()
    bool_0 = True
    var_5 = var_2.__repr__()
    var_6 = module_0.has_message_body(bool_0)
    str_0 = var_5.__str__()
    bool_1 = module_0.is_atty()
    var_7 = var_1.__repr__()
    var_8 = var_7.__repr__()
    var_9 = var_6.__repr__()
    dict_0 = {var_5: bool_1}
    var_10 = module_0.is_hop_by_hop_header(var_8)
    var_11 = module_0.is_hop_by_hop_header(var_0)
    var_12 = module_0.has_message_body(var_2)
    var_13 = module_0.remove_entity_headers(dict_0, var_1)
    module_0.has_message_body(dict_0)
