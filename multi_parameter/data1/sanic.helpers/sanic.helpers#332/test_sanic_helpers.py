# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 349
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    int_0 = 365
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(int_0)


def test_case_2():
    complex_0 = -948.87242 + 938.6j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    int_0 = 349
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.is_entity_header(dict_0)


def test_case_5():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    module_0.remove_entity_headers(default_0)


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()


def test_case_8():
    dict_0 = {}
    bool_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(bool_0)


def test_case_9():
    bytes_0 = b"6"
    int_0 = 1035
    dict_0 = {bytes_0: bytes_0, int_0: int_0}
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    default_0 = module_0.Default()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    dict_0 = {}
    var_2 = default_0.__repr__()
    var_3 = dict_0.__repr__()
    var_4 = var_2.__repr__()
    var_5 = default_0.__repr__()
    var_6 = var_1.__repr__()
    var_7 = module_0.is_hop_by_hop_header(var_3)
    dict_1 = {var_6: var_6, var_6: var_6, var_6: var_6}
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_8 = module_0.has_message_body(bool_1)
    var_9 = module_0.remove_entity_headers(dict_1)
    var_10 = module_1.ismodule(var_9)
    str_0 = var_10.__str__()
    module_0.is_hop_by_hop_header(int_0)
