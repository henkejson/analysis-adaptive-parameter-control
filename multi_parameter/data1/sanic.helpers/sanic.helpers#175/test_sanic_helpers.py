# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import inspect as module_0
import sanic.helpers as module_1


def test_case_0():
    dict_0 = {}
    var_0 = module_0.ismodule(dict_0)
    var_1 = module_1.has_message_body(var_0)


def test_case_1():
    none_type_0 = None
    module_1.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_1.is_atty()


def test_case_3():
    str_0 = "*h\x0c8ne/c+t"
    var_0 = module_1.is_entity_header(str_0)


def test_case_4():
    str_0 = "h\x0c8/c+t"
    var_0 = module_1.is_hop_by_hop_header(str_0)


def test_case_5():
    default_0 = module_1.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    bool_0 = module_1.is_atty()
    list_0 = []
    default_0 = module_1.Default(*list_0)
    str_0 = default_0.__str__()
    default_1 = module_1.Default()
    var_0 = default_1.__repr__()


def test_case_7():
    bool_0 = module_1.is_atty()
    float_0 = 280.4997
    var_0 = module_1.has_message_body(float_0)
    var_1 = module_0.ismodule(var_0)


def test_case_8():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_1.remove_entity_headers(dict_0)


def test_case_9():
    bool_0 = False
    default_0 = module_1.Default()
    var_0 = module_1.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    default_1 = module_1.Default()
    var_2 = module_1.has_message_body(var_0)
    bool_1 = module_1.is_atty()
    str_1 = var_0.__str__()
    var_3 = var_0.__repr__()
    float_0 = 193.91787322827327
    var_4 = module_1.has_message_body(float_0)
    default_2 = module_1.Default()
    str_2 = var_3.__str__()
    str_3 = var_4.__str__()
    str_4 = var_0.__str__()
    str_5 = default_2.__str__()
    var_5 = module_1.has_message_body(var_0)
    dict_0 = {var_3: var_5, var_1: var_3}
    bool_2 = module_1.is_atty()
    var_6 = module_1.remove_entity_headers(dict_0, var_1)
    var_7 = module_1.is_hop_by_hop_header(str_2)
    int_0 = 304
    var_8 = module_1.has_message_body(int_0)
    list_0 = []
    module_1.Default(*list_0, **var_0)
