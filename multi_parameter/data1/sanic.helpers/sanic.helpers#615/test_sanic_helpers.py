# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"Loop Detected"
    module_0.remove_entity_headers(bytes_0, bytes_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    bytes_0 = b"\xf6\xe7"
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_6():
    bytes_0 = b"\xf0\xe7"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    default_1 = module_0.Default()


def test_case_8():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    str_0 = "A%A*1c\\M\rI("
    var_0 = module_0.is_entity_header(str_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_10():
    str_0 = "\x0c#&]<KpPc"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    str_0 = "Content-Length"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_12():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = "\x0c#&]ncHJpPF"
    dict_0 = {str_0: str_0}
    str_1 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0)
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_3)


def test_case_13():
    str_0 = "Content-Length"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_14():
    str_0 = "logging.StreamHandler"
    var_0 = module_0.import_string(str_0, str_0)
