# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = 'W \x0cK#m>p"Oy4(-l'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bytes_0 = b".\xfc\x12\xf1\x1dU\x94\xd2?V1\xb7\xa0*\x03\x17)\xe9%"
    var_0 = module_1.ismodule(bytes_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    str_2 = default_0.__str__()
    default_1 = module_0.Default()
    default_2 = module_0.Default()


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = 364
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    str_1 = bool_0.__str__()
    bool_1 = module_0.is_atty()
    int_0 = 304
    var_1 = module_0.has_message_body(int_0)
    var_2 = var_0.__repr__()
    var_3 = module_0.is_hop_by_hop_header(str_1)
    dict_0 = {str_1: var_2, var_1: bool_0}
    bool_2 = module_0.is_atty()
    module_0.remove_entity_headers(dict_0)
