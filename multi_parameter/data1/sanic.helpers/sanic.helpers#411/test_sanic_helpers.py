# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    complex_0 = 1687.2 - 2084.456j
    module_0.remove_entity_headers(complex_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    complex_0 = 1687.248817 - 2084.456j
    module_0.is_hop_by_hop_header(complex_0)


def test_case_5():
    complex_0 = 1687.248817 - 2084.456j
    module_0.remove_entity_headers(complex_0, complex_0)


def test_case_6():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_2)
    var_3 = module_0.is_entity_header(var_1)
    var_4 = var_0.__repr__()
    var_5 = var_1.__repr__()


def test_case_7():
    bytes_0 = b"X\x88Z|\t\x9d"
    var_0 = module_1.ismodule(bytes_0)
    str_0 = var_0.__str__()
    str_1 = 'g&x!TK("7@LxV9kLsx~;'
    dict_0 = {str_1: str_1}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = module_0.has_message_body(var_2)
    str_2 = var_3.__str__()
    default_0 = module_0.Default()
    var_5 = module_1.ismodule(var_2)
    var_6 = var_5.__repr__()
    str_3 = default_0.__str__()
    module_0.has_message_body(default_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(var_0)
    bool_1 = module_0.is_atty()
    int_0 = 161
    var_2 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(bool_1)


def test_case_9():
    dict_0 = {}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_1)
    var_3 = module_0.is_entity_header(var_1)
    var_4 = var_0.__repr__()
    var_5 = var_1.__repr__()


def test_case_10():
    str_0 = 'g&x!TK("7@LxV9MkLsx~'
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    bool_0 = False
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    module_0.remove_entity_headers(dict_0)


def test_case_12():
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    int_1 = 161
    var_2 = module_0.has_message_body(var_1)
    module_0.remove_entity_headers(int_1, var_2)
