# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    dict_0 = {}
    module_0.has_message_body(dict_0)


def test_case_1():
    str_0 = "S.1b{\\8KmFC!;3oq6Xx"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_0.is_entity_header(str_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()
    module_0.is_entity_header(default_0)


def test_case_5():
    str_0 = "S.1b{\\8KmFC!;3oq6Xx"
    default_0 = module_0.Default()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: default_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_1 = module_0.is_entity_header(str_0)
    module_0.is_hop_by_hop_header(default_1)


def test_case_6():
    str_0 = "content-type"
    int_0 = -46
    default_0 = module_0.Default()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_3 = default_0.__str__()
    var_1 = module_0.remove_entity_headers(var_0, str_3)
    var_2 = var_1.__repr__()
    str_4 = default_0.__str__()


def test_case_7():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    var_0 = module_0.has_message_body(bool_0)
    module_0.import_string(bool_0, none_type_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    int_0 = 224
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    int_0 = 168
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    none_type_0 = None
    var_2 = var_1.__repr__()
    str_0 = var_0.__str__()
    var_3 = module_0.has_message_body(var_1)
    bool_1 = module_0.is_atty()
    var_4 = module_1.ismodule(none_type_0)
    str_1 = var_3.__str__()
    str_2 = var_3.__str__()
    int_1 = 204
    var_5 = module_0.has_message_body(int_1)
    dict_0 = {}
    str_3 = var_4.__str__()
    var_6 = module_0.remove_entity_headers(dict_0, dict_0)
    var_7 = var_1.__repr__()
    module_0.is_entity_header(var_3)


def test_case_10():
    str_0 = "content-type"
    int_0 = -46
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_2 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(var_0, str_2)
    var_2 = var_1.__repr__()
    str_3 = var_1.__str__()


def test_case_11():
    str_0 = "content-type"
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    str_1 = var_0.__str__()
    str_2 = default_0.__str__()
    str_3 = default_0.__str__()
    bool_1 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(str_1)
    str_4 = var_1.__str__()
    module_0.is_hop_by_hop_header(var_1)
