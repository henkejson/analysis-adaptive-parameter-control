# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "method"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xf0\xe4\x0f"
    var_0 = module_0.is_entity_header(bytes_0)
    module_0.import_string(var_0, bytes_0)


def test_case_4():
    str_0 = "vA\t`'%e7\x0bFe<$%# D@"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()


def test_case_5():
    bool_0 = True
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(bool_0)
    str_0 = var_1.__str__()
    str_1 = default_0.__str__()


def test_case_6():
    int_0 = 178
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()


def test_case_7():
    str_0 = "vA\t`'%e7\x0bFe<$%# D@"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    bytes_0 = b"z\x15"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = module_0.is_entity_header(bytes_0)
    str_0 = "vA\t`'%e7\x0bFe<$%# D"
    var_2 = module_0.has_message_body(var_1)
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = var_1.__str__()
    var_3 = var_2.__repr__()
    var_4 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_5 = module_1.ismodule(bool_0)
    int_0 = 204
    var_6 = module_0.has_message_body(int_0)
    var_7 = module_0.has_message_body(var_5)
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_8 = module_1.ismodule(dict_0)
    bool_1 = module_0.is_atty()
    module_0.is_hop_by_hop_header(var_2)
