# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    default_0 = module_0.Default()
    bool_0 = True
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(bool_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_2 = default_0.__str__()


def test_case_7():
    float_0 = 312.0
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = var_1.__str__()


def test_case_8():
    bytes_0 = b"i\xacz"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    bytes_0 = b"\x9d\xdd\x12n\xa2v&\xb4\xd9$\r\x03"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(var_0)
    object_0 = module_1.object()
    bool_0 = module_0.is_atty()
    dict_0 = {var_1: bytes_0}
    var_3 = object_0.__repr__()
    var_4 = module_0.remove_entity_headers(dict_0)
    float_0 = 304.0
    default_0 = module_0.Default()
    var_5 = module_0.has_message_body(float_0)
    var_6 = var_1.__repr__()
    var_7 = module_2.ismodule(var_5)
    var_8 = module_2.ismodule(var_7)
    str_0 = var_3.__str__()
