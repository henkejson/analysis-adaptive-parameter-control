# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    float_0 = 1662.3
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    str_0 = ".8n7!Ab\\}%~"
    list_0 = [str_0]
    module_0.remove_entity_headers(list_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    float_0 = 1662.3
    module_0.is_hop_by_hop_header(float_0)


def test_case_5():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = module_1.ismodule(bool_0)
    var_1 = module_0.has_message_body(bool_0)
    var_2 = default_0.__repr__()
    bool_1 = module_0.is_atty()


def test_case_6():
    var_0 = module_0.Default()
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    str_1 = var_0.__str__()
    var_3 = var_0.__repr__()
    bool_0 = module_0.is_atty()


def test_case_7():
    bool_0 = False
    var_0 = module_1.ismodule(bool_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_9():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    dict_0 = {var_0: default_0, var_0: var_0, default_0: var_0, default_0: default_0}
    module_0.remove_entity_headers(dict_0)


def test_case_10():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_2 = default_0.__str__()
    bool_1 = module_0.is_atty()
    var_1 = var_0.__repr__()
    dict_0 = {var_1: var_0, var_1: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(var_0)


def test_case_11():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b'\xd5u\xd5"\x8c\xe5\xdd\x192\xb1\xd3\x96\xc4h\xb4'
    var_1 = module_0.is_entity_header(bytes_0)
    str_0 = var_1.__str__()
    var_2 = module_0.is_entity_header(str_0)
