# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bytes_0 = b"H\x16\xb3\xcf\xd9\x8ev\xefq\x01~\xfbH&+n\xa1\xc0\xb5"
    module_0.has_message_body(bytes_0)


def test_case_1():
    float_0 = 2918.9
    dict_0 = {float_0: float_0}
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    var_1 = default_0.__repr__()


def test_case_5():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    str_0 = "7-8xiv>-.\x0c3"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    var_1 = var_0.__repr__()
    str_1 = var_1.__str__()
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    int_0 = 303
    var_2 = module_0.has_message_body(int_0)
    var_3 = default_0.__repr__()
    str_3 = var_0.__str__()


def test_case_8():
    str_0 = '3"'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    str_0 = ""
    dict_0 = {str_0: str_0}
    str_1 = str_0.__str__()
    var_0 = module_0.remove_entity_headers(dict_0)
    str_2 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_3 = "7-8xiv>-.\x0c3"
    var_1 = module_0.is_hop_by_hop_header(str_3)
    var_2 = module_0.has_message_body(var_1)
    var_3 = var_0.__repr__()
    default_0 = module_0.Default()
    str_4 = default_0.__str__()
    default_1 = module_0.Default()
    int_0 = 304
    var_4 = module_0.has_message_body(int_0)
    module_0.Default(**var_2)


def test_case_10():
    str_0 = "expires"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    str_0 = "expires"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = var_0.__repr__()
    str_1 = var_0.__str__()
    var_2 = module_0.is_hop_by_hop_header(str_0)
    var_3 = module_0.remove_entity_headers(dict_0, var_1)
    var_4 = module_0.is_entity_header(str_1)
    var_5 = module_1.ismodule(var_1)
    module_0.has_message_body(var_1)
