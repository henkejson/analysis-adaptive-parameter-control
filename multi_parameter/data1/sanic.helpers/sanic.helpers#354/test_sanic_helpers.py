# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    str_0 = "?bPF$uj{Y"
    var_0 = module_0.is_entity_header(str_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_7():
    float_0 = 229.608442
    var_0 = module_0.has_message_body(float_0)


def test_case_8():
    str_0 = "2mltoM(9C` "
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = var_0.__repr__()
    int_0 = 204
    var_3 = module_0.has_message_body(bool_0)
    var_4 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_3)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    var_3 = module_0.is_entity_header(var_2)
    str_0 = var_1.__str__()
    str_1 = "content-location"
    dict_1 = {str_1: default_0, default_0: dict_0}
    module_0.remove_entity_headers(dict_1)


def test_case_11():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_1 = var_0.__repr__()
    int_0 = 213
    var_2 = var_1.__repr__()
    var_3 = module_0.is_entity_header(var_2)
    var_4 = module_0.has_message_body(int_0)
    str_0 = var_4.__str__()
    str_1 = var_1.__str__()
    str_2 = "content-location"
    dict_1 = {str_2: var_4, var_4: dict_0}
    module_0.remove_entity_headers(dict_1, str_0)
