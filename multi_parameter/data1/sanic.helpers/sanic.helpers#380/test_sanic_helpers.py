# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    module_0.import_string(bool_0)


def test_case_1():
    bytes_0 = b"\x0b\xba\x82^\xda~8\x01\xd0 "
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(none_type_0)


def test_case_4():
    none_type_0 = None
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    int_0 = 510
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(var_1)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bytes_0 = b"\x0b\xcf\x82^\xda~ "
    int_0 = 204
    var_0 = default_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    var_2 = module_0.has_message_body(int_0)
    var_3 = module_0.has_message_body(int_0)
    var_4 = var_0.__repr__()
    var_5 = module_0.has_message_body(var_3)
    var_6 = module_1.object()
    str_1 = default_0.__str__()
    var_7 = var_3.__repr__()
    bool_0 = module_0.is_atty()
    dict_0 = {
        str_1: bytes_0,
        bytes_0: var_3,
        int_0: var_6,
        bytes_0: int_0,
        int_0: bool_0,
        var_1: var_2,
    }
    module_0.remove_entity_headers(dict_0)
