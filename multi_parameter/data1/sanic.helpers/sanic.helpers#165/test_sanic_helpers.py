# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "H'\"*\t[7(pK?}A"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.has_message_body(dict_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = module_0.is_atty()
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.remove_entity_headers(dict_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    int_0 = 107
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0, tuple_0]
    bool_0 = module_0.is_atty()
    str_0 = " failed to come ack within "
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    var_0 = default_0.__repr__()
    str_2 = "No certificate found matching hostname "
    dict_0 = {str_0: int_0, str_2: str_0, str_0: int_0, str_0: str_0}
    module_0.Default(*list_0, **dict_0)


def test_case_7():
    int_0 = 300
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    dict_0 = {}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    module_0.is_entity_header(var_1)


def test_case_9():
    str_0 = '|dR"6\x0bd{\x0b5W?b|,'
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    str_1 = "(OxM\rCl/11Q"
    str_2 = str_1.__str__()
    var_1 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    str_3 = var_0.__str__()
    var_2 = str_2.__repr__()
    int_0 = 204
    var_3 = module_0.has_message_body(int_0)
    var_4 = int_0.__repr__()
    var_5 = var_1.__repr__()
    var_6 = var_2.__repr__()
    float_0 = 445.0
    var_7 = str_2.__repr__()
    var_8 = module_0.is_entity_header(str_1)
    str_4 = var_1.__str__()
    dict_1 = {var_5: bool_0, bool_0: bool_1, var_2: float_0}
    module_0.remove_entity_headers(dict_1)


def test_case_11():
    str_0 = "expires"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_12():
    str_0 = "expires"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_1.ismodule(dict_0)
