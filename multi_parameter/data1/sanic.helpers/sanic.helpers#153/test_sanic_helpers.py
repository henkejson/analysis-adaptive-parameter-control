# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 223
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    int_0 = 8
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(int_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "|9}O;07+z"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    int_0 = 8
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    module_0.is_hop_by_hop_header(var_0)


def test_case_5():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_0 = default_0.__str__()
    int_0 = 287
    var_0 = module_0.has_message_body(int_0)


def test_case_6():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()


def test_case_7():
    str_0 = "You have set the USE_UVLOOP configuration option, but Sanic cannot control the event loop when running in ASGI mode.This option will be ignored."
    var_0 = module_0.is_hop_by_hop_header(str_0)
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    dict_0 = {str_0: str_0}
    var_1 = module_0.has_message_body(var_0)
    default_2 = module_0.Default()
    var_2 = module_1.ismodule(default_2)
    bool_0 = module_0.is_atty()
    str_1 = default_2.__str__()
    str_2 = var_2.__str__()
    str_3 = default_2.__str__()
    var_3 = default_2.__repr__()
    str_4 = var_2.__str__()
    var_4 = module_0.is_hop_by_hop_header(var_3)
    var_5 = var_0.__repr__()
    var_6 = module_0.remove_entity_headers(dict_0)
    var_7 = module_1.ismodule(var_5)
    var_8 = module_0.has_message_body(var_4)
    str_5 = default_2.__str__()
    int_0 = 304
    default_3 = module_0.Default()
    var_9 = module_0.has_message_body(int_0)


def test_case_8():
    str_0 = "Content-Type"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.remove_entity_headers(var_0)
    module_0.is_entity_header(dict_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    var_0 = module_1.ismodule(bool_0)
    str_0 = var_0.__str__()
    str_1 = "Content-Type"
    var_1 = module_0.has_message_body(bool_0)
    dict_0 = {str_1: str_1}
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    var_3 = var_2.__repr__()
    str_2 = var_3.__str__()
    module_0.remove_entity_headers(bool_0)
