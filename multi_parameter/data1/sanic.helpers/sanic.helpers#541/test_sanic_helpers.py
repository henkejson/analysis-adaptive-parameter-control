# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    str_0 = "M:KNMwi}#>v"
    module_0.has_message_body(str_0)


def test_case_1():
    float_0 = 0.1
    module_0.remove_entity_headers(float_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bytes_0 = b""
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_5():
    bytes_0 = b"Expectation Failed"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_6():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_0 = default_1.__str__()


def test_case_7():
    float_0 = 268.37728295258063
    var_0 = module_0.has_message_body(float_0)


def test_case_8():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    str_2 = var_2.__str__()
    var_3 = default_0.__repr__()
    default_1 = module_0.Default()
    var_4 = module_0.is_hop_by_hop_header(var_2)
    var_5 = module_0.is_entity_header(str_2)
    var_6 = var_3.__repr__()
    default_2 = module_0.Default()
    str_3 = var_4.__str__()
    var_7 = var_0.__repr__()
    var_8 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    float_0 = 396.535415
    var_9 = module_0.has_message_body(float_0)
    default_3 = module_0.Default()
    str_4 = var_0.__str__()
    str_5 = default_0.__str__()
    str_6 = var_1.__str__()
    default_4 = module_0.Default()
    default_5 = var_8.__repr__()
    bool_2 = module_0.is_atty()
    str_7 = var_3.__str__()
    str_8 = default_3.__str__()
    var_10 = module_0.has_message_body(var_9)
    str_9 = default_3.__str__()
    bool_3 = module_0.is_atty()
    int_0 = 304
    bool_4 = module_0.is_atty()
    var_11 = module_0.has_message_body(int_0)
    var_12 = default_3.__repr__()
    var_13 = module_0.is_entity_header(var_3)
    dict_0 = {var_8: var_0, var_2: var_4, var_6: var_6}
    var_14 = module_0.remove_entity_headers(dict_0)
