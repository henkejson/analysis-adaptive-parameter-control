# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()


def test_case_1():
    bool_0 = False
    str_0 = bool_0.__str__()
    dict_0 = {str_0: str_0, str_0: bool_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = ">.BCy"
    var_0 = module_0.is_entity_header(str_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, none_type_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    float_0 = 213.112
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_7():
    int_0 = 121
    var_0 = module_0.has_message_body(int_0)
    list_0 = [int_0, int_0]
    module_0.import_string(list_0, list_0)


def test_case_8():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    bool_0 = True
    str_1 = default_0.__str__()
    var_2 = module_0.has_message_body(bool_0)
    str_2 = var_2.__str__()
    str_3 = var_1.__str__()
    dict_1 = {str_2: str_2, str_2: bool_0}
    var_3 = module_0.remove_entity_headers(dict_1)
    var_4 = module_0.has_message_body(var_2)
    var_5 = var_0.__repr__()
    bool_1 = module_0.is_atty()
    str_4 = var_2.__str__()
    str_5 = var_4.__str__()
    int_0 = 304
    var_6 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_6)
