# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    int_0 = 293
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bool_0 = True
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_4():
    float_0 = 2183.38007
    module_0.is_hop_by_hop_header(float_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    str_1 = default_0.__str__()


def test_case_6():
    int_0 = 293
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_7():
    dict_0 = {}
    str_0 = dict_0.__str__()
    bool_0 = module_0.is_atty()
    var_0 = str_0.__repr__()
    var_1 = module_0.remove_entity_headers(dict_0, var_0)
    str_1 = var_1.__str__()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_2 = default_0.__repr__()
    var_3 = module_1.ismodule(str_1)
    int_0 = 204
    var_4 = module_0.has_message_body(int_0)
    str_2 = default_1.__str__()
    var_5 = module_0.is_entity_header(str_1)
    var_6 = var_1.__repr__()
    str_3 = var_0.__str__()
    float_0 = 302.82554115208603
    var_7 = module_0.is_hop_by_hop_header(var_0)
    var_8 = module_0.has_message_body(float_0)
    str_4 = var_3.__str__()
    object_0 = module_2.object()
    var_9 = var_1.__repr__()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    var_10 = module_0.is_hop_by_hop_header(str_2)
    var_11 = object_0.__repr__()
    var_12 = var_5.__repr__()
    str_5 = var_11.__str__()
    str_6 = var_0.__str__()
    var_13 = var_5.__repr__()
    var_14 = var_3.__repr__()
    var_15 = module_1.ismodule(var_8)
    dict_1 = {str_0: str_1, str_1: var_15, var_5: int_0, str_0: var_0}
    bool_3 = module_0.is_atty()
    var_16 = var_7.__repr__()
    module_0.remove_entity_headers(dict_1, str_1)
