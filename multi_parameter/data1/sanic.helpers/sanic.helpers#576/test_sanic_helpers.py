# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    str_0 = "charset="
    module_0.has_message_body(str_0)


def test_case_1():
    str_0 = "f\x0c\x0cuy%-[%ko9c]d"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    str_0 = "f\x0c\x0cuy%-[%k1o9c]"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    bool_1 = True
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(bool_1)
    var_2 = var_1.__repr__()
    str_0 = default_0.__str__()
    var_3 = module_0.is_hop_by_hop_header(var_2)
    module_0.remove_entity_headers(var_2)


def test_case_8():
    int_0 = 382
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    module_0.import_string(var_0)


def test_case_9():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_10():
    bytes_0 = b"9\x96\x9e`\xb1e\xae\x11Y\x9a\x0f\x84\xa6\x0egB\xdd\xd0\xd7\xd0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()


def test_case_11():
    bool_0 = module_0.is_atty()
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    bool_1 = module_0.is_atty()
    var_1 = module_1.ismodule(var_0)
    str_0 = var_1.__str__()
    var_2 = module_0.has_message_body(var_0)
    default_0 = module_0.Default()
    var_3 = bool_1.__repr__()
    module_0.remove_entity_headers(str_0)
