# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = '"P4z$0ChM"Zxp$'
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    str_0 = default_0.__str__()
    str_1 = "yBo(9eo? b(O;g\r,:b`~"
    module_0.has_message_body(str_1)


def test_case_8():
    int_0 = 246
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_0)


def test_case_9():
    bytes_0 = b""
    str_0 = "charset="
    var_0 = module_0.is_hop_by_hop_header(str_0)
    str_1 = var_0.__str__()
    var_1 = module_0.has_message_body(var_0)
    var_2 = module_0.is_entity_header(str_0)
    str_2 = var_0.__str__()
    var_3 = module_0.has_message_body(var_1)
    str_3 = bytes_0.__str__()
    dict_0 = {str_0: var_3}
    var_4 = module_0.remove_entity_headers(dict_0)
    var_5 = var_4.__repr__()
    default_0 = module_0.Default()
    var_6 = module_0.is_entity_header(str_0)
    var_7 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_8 = module_0.has_message_body(int_0)
    var_9 = default_0.__repr__()
    var_10 = default_0.__repr__()
    str_4 = var_9.__str__()
    var_11 = var_9.__repr__()
    var_12 = var_11.__repr__()
