# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    tuple_0 = ()
    module_0.has_message_body(tuple_0)


def test_case_1():
    bytes_0 = b"W\xf8\x00\xb6W\x8f\x02\xdf\xce"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_4():
    default_0 = module_0.Default()
    list_0 = []
    str_0 = default_0.__str__()
    module_0.is_entity_header(list_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.import_string(var_0)


def test_case_6():
    int_0 = 303
    var_0 = module_0.has_message_body(int_0)


def test_case_7():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0, str_0)


def test_case_8():
    bool_0 = True
    str_0 = bool_0.__str__()
    bytes_0 = b"*r\xd3\xb6\x8f+\xbb.l\x01\xaf\xcc\xdfPo\xa6\xc9\x03\xd0"
    var_0 = module_1.ismodule(bytes_0)
    str_1 = bool_0.__str__()
    bool_1 = module_0.is_atty()
    var_1 = bool_0.__repr__()
    bool_2 = module_0.is_atty()
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(bool_1)
    int_0 = 304
    var_4 = bool_0.__repr__()
    var_5 = module_0.has_message_body(int_0)
    dict_0 = {bytes_0: var_1, var_1: bytes_0}
    var_6 = module_0.remove_entity_headers(dict_0)
    tuple_0 = ()
    var_7 = module_0.remove_entity_headers(dict_0, tuple_0)
