# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.has_message_body(bool_0)


def test_case_1():
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_5():
    complex_0 = 2729.446816 + 506.5394j
    module_0.is_hop_by_hop_header(complex_0)


def test_case_6():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()


def test_case_7():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    bytes_0 = b"\xa9<|\x06\xb1\x94c\x9d\xdaA/\x0c{\x86\xfbO\x87\xb7]"
    default_1 = module_0.Default()
    bool_0 = module_0.is_atty()
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = default_1.__str__()
    var_0 = module_0.remove_entity_headers(dict_1)


def test_case_8():
    dict_0 = {}
    default_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_0 = default_0.__repr__()


def test_case_9():
    int_0 = 2308
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()


def test_case_10():
    bytes_0 = b"\xa9<|\x06\xb1\x94c\x9d\xdaA/\x0c{\x86\xfbO\x87\xb7]"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    bool_0 = True
    var_2 = var_0.__repr__()
    var_3 = module_0.has_message_body(bool_0)
    bytes_0 = b"\xa9<|\x06\xb1\x94c\x9d\xdaA/\x0c{\x86\xfbO\x87\xb7]"
    default_0 = module_0.Default()
    var_4 = var_3.__repr__()
    str_0 = default_0.__str__()
    bool_1 = module_0.is_atty()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_5 = module_0.remove_entity_headers(dict_0)
    str_1 = var_5.__str__()
    module_0.is_hop_by_hop_header(var_5)
