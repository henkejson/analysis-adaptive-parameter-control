# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bytes_0 = b"L@"
    module_0.has_message_body(bytes_0)


def test_case_1():
    bytes_0 = b"L@"
    module_0.remove_entity_headers(bytes_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(bool_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    float_0 = 306.5434589847143
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(float_0)
    str_0 = default_0.__str__()
    var_1 = module_0.has_message_body(var_0)
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.is_hop_by_hop_header(str_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_7():
    int_0 = -475
    str_0 = int_0.__str__()
    dict_0 = {str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    float_0 = 330.7700706176569
    var_0 = module_0.has_message_body(float_0)
    str_0 = var_0.__str__()
    dict_0 = {str_0: float_0}
    str_1 = dict_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0)
    module_0.import_string(var_1)


def test_case_9():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    float_0 = 304.0
    str_0 = float_0.__str__()
    dict_0 = {str_0: float_0}
    var_1 = module_0.is_hop_by_hop_header(var_0)
    str_1 = var_0.__str__()
    var_2 = default_0.__repr__()
    var_3 = module_0.is_entity_header(str_0)
    var_4 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    str_2 = var_4.__str__()
    var_5 = module_0.has_message_body(float_0)
    str_3 = default_0.__str__()
    var_6 = module_0.has_message_body(var_5)
    var_7 = module_0.has_message_body(var_5)
    module_0.is_hop_by_hop_header(var_6)
