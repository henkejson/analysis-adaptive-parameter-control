# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    default_0 = module_0.Default()
    bytes_0 = b"\xe2"
    module_0.has_message_body(bytes_0)


def test_case_1():
    bytes_0 = b"\xa6\xc6UMW:\x9a\x0f"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(default_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_7():
    float_0 = 106.23011
    var_0 = module_0.has_message_body(float_0)
    str_0 = var_0.__str__()


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    bytes_0 = b"N\xd3\xd6\x1c\xcb\x8f\xb0e7\x95\xb4{(_,i\xd0\xaa\x89h"
    str_0 = "P"
    default_0 = module_0.Default()
    str_1 = default_0.__str__()
    dict_0 = {str_0: bool_0, bytes_0: bytes_0, bytes_0: bool_0, str_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_1 = module_0.is_atty()
    var_1 = default_0.__repr__()
    str_2 = str_1.__str__()
    bool_2 = module_0.is_atty()
    var_2 = var_0.__repr__()
    float_0 = 304.0
    var_3 = module_0.has_message_body(float_0)


def test_case_10():
    bool_0 = module_0.is_atty()
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0)
