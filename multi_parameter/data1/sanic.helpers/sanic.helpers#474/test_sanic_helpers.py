# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = -1834
    set_0 = {int_0}
    int_1 = -1602
    list_0 = [set_0, int_1, int_1, int_1]
    module_0.has_message_body(list_0)


def test_case_1():
    str_0 = '\n    Add a deprecation notice\n\n    Example when a feature is being removed. In this case, version\n    should be AT LEAST next version + 2\n\n        deprecation("Helpful message", 99.9)\n\n    Example when a feature is deprecated but not being removed:\n\n        deprecation("Helpful message", 0)\n\n    :param message: The message of the notice\n    :type message: str\n    :param version: The version when the feature will be removed. If it is\n      not being removed, then set version=0.\n    :type version: float\n    '
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    set_0 = set()
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(set_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(default_0)


def test_case_5():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    int_0 = 175
    int_1 = 170
    module_0.import_string(int_1, int_0)


def test_case_6():
    float_0 = 138.47010280015465
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_1.ismodule(var_0)
    str_0 = var_0.__str__()
    bytes_0 = b"\x1a"
    var_2 = module_0.has_message_body(var_1)
    dict_0 = {
        bytes_0: bytes_0,
        var_2: var_0,
        str_0: bytes_0,
        bytes_0: bytes_0,
        var_0: bytes_0,
        var_0: bytes_0,
    }
    var_3 = module_0.is_hop_by_hop_header(bytes_0)
    var_4 = module_1.ismodule(var_1)
    module_0.remove_entity_headers(dict_0)


def test_case_7():
    str_0 = "HH"
    var_0 = module_1.ismodule(str_0)
    var_1 = module_0.is_entity_header(str_0)
    str_1 = var_1.__str__()
    float_0 = 204.0
    var_2 = module_0.has_message_body(float_0)
    var_3 = module_1.ismodule(float_0)
    module_0.has_message_body(str_1)
