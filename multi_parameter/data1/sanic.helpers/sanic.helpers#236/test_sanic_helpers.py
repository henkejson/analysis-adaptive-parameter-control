# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()


def test_case_1():
    str_0 = "LL9*}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    str_1 = "L*}"
    dict_1 = {str_1: str_1, str_1: str_1, str_1: str_1}
    bool_0 = module_0.is_atty()
    var_0 = module_0.remove_entity_headers(dict_1)
    module_0.is_hop_by_hop_header(dict_1)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    complex_0 = 3865.9 - 3829.9j
    var_1 = module_0.is_entity_header(var_0)
    str_0 = "i{~)\\[da"
    module_0.remove_entity_headers(complex_0, str_0)


def test_case_6():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_1)
    module_0.has_message_body(var_0)


def test_case_7():
    int_0 = 100
    var_0 = module_0.has_message_body(int_0)
    str_0 = "L*}he"
    var_1 = module_0.is_hop_by_hop_header(str_0)
    var_2 = var_1.__repr__()
    var_3 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    var_4 = var_0.__repr__()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_1 = module_0.is_atty()
    var_5 = module_0.remove_entity_headers(dict_0)
    var_6 = module_0.has_message_body(bool_1)
    module_0.is_hop_by_hop_header(bool_1)


def test_case_8():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    str_1 = var_0.__str__()
    str_2 = "ssl_object"
    var_3 = default_0.__repr__()
    var_4 = module_0.is_hop_by_hop_header(str_2)
    var_5 = var_4.__repr__()
    dict_1 = {str_2: str_2, str_2: str_2, var_5: str_2}
    bool_0 = module_0.is_atty()
    var_6 = module_0.remove_entity_headers(dict_1)
    var_7 = module_0.is_hop_by_hop_header(var_2)
    var_8 = module_0.has_message_body(bool_0)
    var_9 = module_1.ismodule(str_2)
    var_10 = var_8.__repr__()
    var_11 = module_0.remove_entity_headers(dict_0)
    var_12 = module_0.has_message_body(var_4)
    var_13 = module_0.has_message_body(var_0)
    var_14 = var_3.__repr__()
    str_3 = var_4.__str__()
    str_4 = var_3.__str__()
    default_1 = module_0.Default()
    default_2 = module_0.Default()
    var_15 = var_5.__repr__()
    module_0.has_message_body(var_5)


def test_case_9():
    str_0 = "allow"
    var_0 = str_0.__repr__()
    dict_0 = {str_0: str_0, str_0: str_0, var_0: str_0}
    bool_0 = module_0.is_atty()
    str_1 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    none_type_0 = None
    module_0.import_string(none_type_0)


def test_case_10():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    str_0 = default_0.__str__()
    int_0 = 180
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    str_1 = "allow"
    str_2 = var_1.__str__()
    var_2 = module_0.is_hop_by_hop_header(str_1)
    var_3 = var_2.__repr__()
    dict_1 = {str_1: var_1, str_1: var_3, var_3: str_1}
    bool_0 = module_0.is_atty()
    var_4 = module_0.remove_entity_headers(dict_1)
    var_5 = module_0.remove_entity_headers(dict_1, str_0)
    var_6 = module_0.has_message_body(bool_0)
    var_7 = module_0.remove_entity_headers(dict_1, dict_1)
    module_0.Default(*var_2)
