# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    int_0 = 202
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    int_0 = 202
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "Cannot set host_prefix on a cookie unless path='/'"
    var_0 = module_0.is_entity_header(str_0)
    bool_0 = module_0.is_atty()


def test_case_4():
    bytes_0 = b"\xf1,"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    var_1 = module_0.has_message_body(var_0)
    str_0 = var_1.__str__()


def test_case_5():
    str_0 = "k,Q"
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    var_2 = var_1.__repr__()
    var_3 = var_1.__repr__()


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = default_0.__str__()
    var_1 = var_0.__repr__()


def test_case_7():
    object_0 = module_1.object()
    var_0 = module_2.ismodule(object_0)
    var_1 = module_0.has_message_body(var_0)
    module_0.import_string(var_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    module_0.import_string(dict_0)


def test_case_9():
    str_0 = "mcJd$Pk"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    module_0.Default(*var_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    list_0 = [var_0, dict_0]
    var_1 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    default_1 = module_0.Default(*var_0)
    str_0 = default_1.__str__()
    var_3 = var_0.__repr__()
    var_4 = list_0.__repr__()
    default_2 = module_0.Default()
    var_5 = module_0.is_hop_by_hop_header(str_0)
    var_6 = module_0.is_entity_header(var_3)
    module_1.object(*var_3)


def test_case_11():
    str_0 = "content-range"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()


def test_case_12():
    str_0 = "content-range"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.remove_entity_headers(dict_0, dict_0)
    default_0 = module_0.Default()
    var_1 = default_0.__repr__()
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.is_entity_header(str_0)
    default_1 = module_0.Default()
    var_4 = module_0.is_entity_header(str_0)
    module_0.has_message_body(var_1)
