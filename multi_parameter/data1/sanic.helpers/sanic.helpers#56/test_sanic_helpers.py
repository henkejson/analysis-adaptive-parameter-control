# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_1.ismodule(var_0)


def test_case_1():
    str_0 = "$Vq"
    module_0.remove_entity_headers(str_0, str_0)


def test_case_2():
    str_0 = "\x0cwlrH:\r:x&GE8"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_5():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    bool_1 = default_0.__repr__()


def test_case_7():
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_0 = default_0.__repr__()
    default_1 = module_0.Default()
    str_0 = default_0.__str__()
    default_2 = module_0.Default()
    str_1 = default_2.__str__()
    var_1 = default_2.__repr__()


def test_case_8():
    bool_0 = module_0.is_atty()
    int_0 = 792
    none_type_0 = None
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_1.ismodule(none_type_0)
    module_0.import_string(var_1)


def test_case_9():
    str_0 = "\x0cwlrH:\r:GE8"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_1 = "\n"
    var_1 = module_1.ismodule(str_1)
    bool_0 = module_0.is_atty()
    str_2 = str_0.__str__()
    var_2 = module_0.has_message_body(var_1)
    var_3 = str_0.__repr__()
    str_3 = var_0.__str__()
    int_0 = 204
    var_4 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(bool_0)
