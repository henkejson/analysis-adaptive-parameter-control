# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pypara.accounting.journaling as module_0
import pypara.commons.numbers as module_1
import dataclasses as module_2
import pypara.commons.guid as module_3


def test_case_0():
    pass


def test_case_1():
    complex_0 = -930.09 + 3558.3522113582653j
    journal_entry_0 = module_0.JournalEntry(complex_0, complex_0, complex_0)
    none_type_0 = journal_entry_0.validate()


def test_case_2():
    complex_0 = -930.09 + 3558.3522113582653j
    journal_entry_0 = module_0.JournalEntry(complex_0, complex_0, complex_0)
    dict_0 = {}
    var_0 = module_1.isum(dict_0)
    journal_entry_1 = journal_entry_0.post(var_0, journal_entry_0, var_0)
    var_1 = module_2.field(init=var_0, kw_only=var_0)
    var_2 = module_3.makeguid()
    var_3 = var_1.__repr__()
    iterator_0 = var_2.__iter__()


def test_case_3():
    complex_0 = -929.6815377630991 + 3558.3522113582653j
    journal_entry_0 = module_0.JournalEntry(complex_0, complex_0, complex_0)
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_1.isum(dict_0)
    journal_entry_1 = journal_entry_0.post(var_0, journal_entry_0, var_0)


def test_case_4():
    complex_0 = -930.09 + 3558.3522j
    journal_entry_0 = module_0.JournalEntry(complex_0, complex_0, complex_0)
    none_type_0 = journal_entry_0.validate()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    var_0 = module_1.isum(dict_0)
    journal_entry_1 = journal_entry_0.post(var_0, journal_entry_0, var_0)
    journal_entry_1.validate()
