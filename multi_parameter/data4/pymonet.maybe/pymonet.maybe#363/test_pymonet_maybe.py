# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    float_0 = 3760.0
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"<H\xca\x82\xb0B\x036Exi<7\x88>K"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bytes_1 = b"I\xad\xcf\x9d(\x8aG\x17U\xa2g\xc9\xc7\xf4=\x17"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_1.ap(bytes_0)
    var_1 = var_0.get_or_else(var_0)
    var_2 = maybe_1.map(var_1)
    bool_0 = False
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_3 = var_2.filter(var_0)
    var_4 = var_0.to_validation()
    var_5 = maybe_1.to_either()
    var_6 = var_0.bind(var_4)
    var_7 = var_3.to_box()
    var_8 = var_1.to_either()
    var_9 = var_2.bind(var_8)
    bool_1 = var_9.__eq__(var_1)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_0.to_lazy()
    var_0.filter(var_0)


def test_case_4():
    bytes_0 = b"\xf6r\x0b\xfdS'!\x84\xefr\x8bS\xba\\[\xbd\xbf"
    str_0 = "PvT?"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.map(var_0)
    var_3 = var_1.to_lazy()
    var_3.filter(bytes_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_1.ap(maybe_0)


def test_case_6():
    bytes_0 = b"\xc7O!\xc7\xaa\xe1'\xf4\x94j\x897\x95\x9c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.to_box()
    bool_0 = True
    bool_1 = var_2.__eq__(bool_0)


def test_case_7():
    float_0 = 2340.53
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.to_box()
    maybe_2.bind(bool_0)


def test_case_8():
    int_0 = -3933
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(bool_0)


def test_case_9():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(generic_0)


def test_case_10():
    bytes_0 = b"\xc7\x03\xc3-\xe3\x8cy\xaf\xf1B\xa7\xefa]\x17\xfa\xc9\x99_"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_1.filter(bytes_0)


def test_case_11():
    bytes_0 = b"\xc7\x03\xc3-\xe3\x8cy\xaf\xf1B\xa7\xefa]\x17\xfa\xc9\x99_"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_12():
    bytes_0 = b"<H\xca\x82\xb0B\x036Ex\xa9i<7\x88>K"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bytes_1 = b"\xc8\x12"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_1.ap(bytes_0)
    var_1 = maybe_1.map(var_0)
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_2 = maybe_1.filter(var_0)
    var_3 = maybe_1.to_validation()
    maybe_3 = module_0.Maybe(maybe_0, var_0)
    var_4 = maybe_2.to_either()
    var_5 = maybe_1.to_validation()
    var_6 = var_1.filter(var_5)
    var_7 = maybe_2.to_validation()
    var_8 = var_0.ap(maybe_3)
    var_9 = maybe_3.ap(bytes_0)
    var_10 = var_6.get_or_else(var_0)
    var_11 = maybe_1.to_box()


def test_case_13():
    object_0 = module_2.object()
    list_0 = [object_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(list_0)


def test_case_14():
    int_0 = -308
    set_0 = {int_0, int_0, int_0, int_0}
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: set_0}
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.bind(set_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_3.get_or_else(none_type_0)


def test_case_15():
    float_0 = 1949.0
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(float_0)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    int_0 = 2615
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bytes_0 = b"\xb1\xa4\xd6\x9c\xbe\xbdn^\xf2\xa0\x103\x99\xdc"
    str_0 = "6CI"
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_1.to_try()
    bool_0 = True
    var_2 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, str_0)
    tuple_0 = (bool_0, maybe_2, bool_0)
    maybe_3 = module_0.Maybe(tuple_0, bytes_0)
    var_3 = maybe_3.to_lazy()
    var_4 = var_3.map(var_1)
    maybe_4 = module_0.Maybe(str_0, none_type_0)
    var_5 = maybe_4.to_either()
    var_5.ap(bytes_0)


def test_case_19():
    object_0 = module_2.object()
    bool_0 = True
    dict_0 = {object_0: object_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bytes_0 = b"'\x91I\xdd\x83s,f\x9a\xa2\xd5p\xaeZ"
    bytes_1 = b"\xf5\xe4\xd4w\xc5"
    maybe_1 = module_0.Maybe(bytes_1, bytes_1)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_box()
    var_3.get_or_else(bytes_0)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_1.map(maybe_0)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_3 = var_1.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_0.bind(var_4)
    var_1.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    int_0 = 1
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_1.to_either()
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_2)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_2.to_box()
    var_2.ap(none_type_1)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_2 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    bool_2 = True
    var_1 = maybe_2.ap(none_type_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_0.map(bool_2)
    maybe_3 = module_0.Maybe(maybe_2, maybe_1)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.to_validation()
    var_6 = var_3.filter(maybe_1)
    var_7 = var_4.to_validation()
    var_8 = var_1.ap(var_4)
    var_9 = maybe_2.ap(var_3)
    var_10 = maybe_0.get_or_else(var_5)
    var_11 = var_5.to_lazy()


def test_case_23():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = True
    var_3 = maybe_2.ap(none_type_0)
    var_4 = var_2.to_lazy()
    var_5 = maybe_1.map(bool_3)
    var_6 = var_2.to_either()
    var_7 = var_0.to_either()
    var_8 = var_6.to_validation()
    var_9 = var_5.filter(maybe_2)
    var_10 = var_6.to_validation()
    int_0 = -541
    var_11 = var_5.get_or_else(int_0)
    var_12 = var_0.to_box()
    bool_4 = var_7.__eq__(bool_1)
    maybe_0.filter(var_2)
