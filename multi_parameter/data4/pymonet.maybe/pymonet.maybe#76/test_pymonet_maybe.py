# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    bool_2 = False
    tuple_1 = (bool_2,)
    bytes_0 = b"c]ros\xafj\x96\x05b\xee"
    bool_3 = False
    tuple_2 = (bool_1, tuple_1, bytes_0, bool_3)
    float_0 = 3680.99586
    none_type_1 = None
    bool_4 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_4)
    var_0 = maybe_0.map(float_0)
    var_1 = var_0.map(tuple_2)
    var_2 = var_1.filter(tuple_0)
    var_3 = var_2.to_validation()
    var_3.get_or_else(none_type_0)


def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(list_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)


def test_case_6():
    bool_0 = False
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_7():
    int_0 = -1728
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(int_0)
    var_2 = maybe_0.to_validation()
    var_2.map(none_type_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"\xa0\xf1"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = 4450
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()


def test_case_10():
    int_0 = 4450
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.filter(int_0)


def test_case_11():
    bool_0 = True
    complex_0 = 2227 - 1778.6j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = var_1.filter(bool_0)
    var_2.to_either()


def test_case_12():
    str_0 = "lA*"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)


def test_case_13():
    str_0 = "lA*"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()
    var_3.get_or_else(str_0)


def test_case_14():
    generic_0 = module_2.Generic()
    int_0 = 1805
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(int_0)


def test_case_15():
    int_0 = -242
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.map(var_1)
    var_3 = maybe_1.to_validation()
    var_4 = var_3.to_either()
    var_5 = var_1.to_lazy()
    var_6 = maybe_1.to_validation()
    var_6.get_or_else(var_4)


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(bool_0)


def test_case_17():
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_2 = var_0.map(var_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_0.bind(maybe_1)
    none_type_1 = None
    var_5 = var_4.bind(none_type_1)
    var_6 = var_4.to_validation()
    var_7 = var_3.to_lazy()
    var_8 = maybe_0.to_validation()
    bool_1 = var_5.__eq__(generic_0)
    var_9 = var_5.filter(none_type_0)
    var_10 = var_0.to_either()
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(none_type_0)


def test_case_21():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, set_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.to_either()


def test_case_22():
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    maybe_1 = module_0.Maybe(maybe_0, generic_0)
    var_0 = maybe_0.ap(generic_0)
    var_1 = maybe_1.bind(var_0)
    bool_0 = var_1.__eq__(maybe_0)
    var_2 = var_0.map(maybe_0)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_try()
    var_5 = var_1.get_or_else(maybe_1)
    var_6 = var_1.filter(var_4)
    var_7 = maybe_1.to_validation()
    module_1.object(**var_3)
