# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_0.to_box()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_0.ap(maybe_1)
    var_2 = maybe_0.filter(var_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.filter(none_type_0)
    bool_3 = var_4.__eq__(bool_0)
    var_3.bind(var_3)


def test_case_4():
    float_0 = 2943.722
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.map(float_0)
    var_5 = maybe_0.to_either()


def test_case_5():
    float_0 = 2943.722
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = var_2.filter(float_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_4 = var_2.to_box()
    var_4.filter(var_0)


def test_case_6():
    bytes_0 = b"\xbc\xde"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bytes_0)


def test_case_7():
    int_0 = 2726
    tuple_0 = ()
    int_1 = -832
    int_2 = 1
    maybe_0 = module_0.Maybe(int_2, int_2)
    var_0 = maybe_0.ap(int_1)
    var_1 = var_0.filter(tuple_0)
    var_2 = var_1.filter(int_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"E4j"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.filter(bool_1)


def test_case_11():
    tuple_0 = ()
    str_0 = '8cQ,1ko$X;m"]7w'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_box()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_0.bind(maybe_0)


def test_case_13():
    none_type_0 = None
    list_0 = [none_type_0]
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_either()
    list_0.to_either()


def test_case_14():
    float_0 = 1670.54078
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.map(var_0)
    var_2 = maybe_1.to_either()
    var_3 = var_1.get_or_else(var_1)
    var_4 = var_2.to_lazy()
    var_5 = maybe_1.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_1, var_1)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    var_2.to_lazy()


def test_case_17():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.ap(list_0)


def test_case_18():
    str_0 = "\n        Evaluate function and memoize her output or return memoized value when function was evaluated.\n\n        :returns: result of function in Lazy\n        :rtype: A\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    object_0 = module_1.object()
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.ap(object_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_2 = var_1.to_box()
    var_3 = var_0.bind(var_0)
    bool_3 = maybe_0.__eq__(object_0)
    var_4 = maybe_0.filter(var_2)
    var_5 = maybe_1.to_lazy()
    bool_4 = var_4.__eq__(object_0)
    var_6 = var_0.to_validation()
    var_7 = var_5.to_validation()
    var_7.get_or_else(bool_0)


def test_case_19():
    int_0 = 1226
    maybe_0 = module_0.Maybe(int_0, int_0)
    dict_0 = {int_0: int_0, int_0: int_0}
    float_0 = -1092.3
    bool_0 = False
    var_0 = maybe_0.ap(int_0)
    tuple_0 = (float_0, bool_0)
    tuple_1 = (tuple_0,)
    maybe_1 = module_0.Maybe(tuple_1, float_0)
    var_1 = maybe_0.map(dict_0)
    var_2 = var_0.filter(var_0)
    bool_1 = var_0.ap(float_0)
    var_3 = maybe_1.map(var_0)
    var_4 = var_3.to_box()
    var_5 = maybe_0.ap(tuple_0)
    var_6 = maybe_1.get_or_else(dict_0)
    var_7 = var_1.to_box()
    bool_2 = var_0.__eq__(maybe_0)
    var_4.bind(bool_2)


def test_case_20():
    float_0 = 2943.722
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.map(float_0)
    var_6 = var_3.to_either()


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)
