# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "\n-pAVRKj"
    str_1 = "+EHX5,^AO9s(Q\t]\x0cX\n/"
    set_0 = {str_1, str_1, str_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.filter(str_0)
    var_2 = var_1.to_either()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "tlVJ+QsRd"
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(str_0, none_type_0)
    var_1 = maybe_2.get_or_else(none_type_0)
    var_2 = maybe_2.get_or_else(bool_1)
    maybe_0.ap(maybe_0)


def test_case_4():
    int_0 = 1518
    complex_0 = -2826.815926 - 1740.81j
    maybe_0 = module_0.Maybe(int_0, complex_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.ap(int_0)
    bool_0 = True
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_3 = maybe_1.map(var_1)
    maybe_2 = module_0.Maybe(var_1, var_1)
    maybe_3 = module_0.Maybe(int_0, int_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_0.bind(bool_1)


def test_case_6():
    str_0 = "IdW^c[CV_2b+\x0ct5'!\x0bBu"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(str_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    maybe_0.filter(maybe_1)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    int_0 = -1376
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_validation()
    var_6 = maybe_0.bind(maybe_0)
    var_5.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    maybe_2 = module_0.Maybe(maybe_1, maybe_1)
    var_1 = maybe_2.to_box()
    var_2 = var_1.to_either()
    var_1.to_box()


def test_case_12():
    int_0 = -206
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    list_0 = [maybe_0, int_0, int_0, int_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.to_box()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.filter(none_type_0)
    maybe_0.filter(var_0)


def test_case_14():
    int_0 = -839
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(int_0)


def test_case_15():
    bytes_0 = b'e<\x10"\xbc'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(bytes_0)
    var_1.to_box()


def test_case_16():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, var_3)
    var_4 = var_3.to_lazy()
    var_5 = maybe_1.filter(var_1)
    maybe_0.filter(var_4)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_2 = var_1.to_lazy()
    var_3 = maybe_1.filter(var_2)
    maybe_0.filter(var_1)


def test_case_19():
    float_0 = 1031.58
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.to_box()
    var_6 = maybe_0.filter(var_4)
    var_7 = var_6.get_or_else(var_6)
    var_8 = var_4.to_validation()
    object_0 = module_1.object()
    var_9 = var_6.get_or_else(object_0)
    var_10 = var_4.to_validation()
    var_11 = var_10.to_try()
    var_12 = var_0.to_either()
    maybe_1 = module_0.Maybe(var_5, var_12)
    var_13 = var_8.to_lazy()


def test_case_20():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_validation()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.to_try()
    var_5 = var_3.to_either()
    maybe_1 = module_0.Maybe(none_type_0, var_5)
    var_6 = var_5.to_lazy()
    var_7 = maybe_1.filter(var_4)
    var_8 = maybe_0.to_validation()
    bool_0 = var_7.__eq__(maybe_1)
    var_5.to_either()


def test_case_22():
    bytes_0 = b"\xbe\xff"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    none_type_1 = None
    none_type_2 = None
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, none_type_2)
    var_0 = maybe_1.to_validation()
    var_0.get_or_else(none_type_1)
