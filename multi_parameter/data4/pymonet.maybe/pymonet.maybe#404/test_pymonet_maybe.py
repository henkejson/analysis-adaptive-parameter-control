# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x14\x04g.\xabQ\xebi\r\x8c\xa1lc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x14\x04g.Jz\x8c\xa1lc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.to_try()
    var_4 = maybe_0.map(var_3)
    bool_0 = var_4.__eq__(var_2)
    var_5 = var_2.ap(var_4)
    var_6 = var_2.to_lazy()
    var_7 = var_2.filter(var_4)
    var_8 = var_5.to_validation()
    var_9 = var_1.bind(maybe_0)
    var_10 = var_4.to_either()
    bool_1 = var_10.__eq__(var_2)
    maybe_1 = module_0.Maybe(var_8, bool_1)
    maybe_1.filter(bool_1)


def test_case_3():
    tuple_0 = ()
    bytes_0 = b"\xe7:\x9ak\x84\x1f\xee\x92\xe8\xd7\xd3\x06"
    str_0 = "\n        Transform Validation to Maybe.\n\n        :returns: Maybe with Validation Value when Validation has no errors, in other case empty Maybe\n        :rtype: Maybe[A | None]\n        "
    maybe_0 = module_0.Maybe(bytes_0, str_0)
    bool_0 = maybe_0.__eq__(tuple_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(maybe_0)
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.ap(none_type_0)
    var_4 = var_3.to_try()
    bool_1 = var_4.__eq__(bool_0)


def test_case_6():
    str_0 = 'i*H_Smz/>L}~"~vK'
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(str_0, var_0)
    var_1 = maybe_1.ap(str_0)
    var_2 = var_1.filter(str_0)
    var_3 = var_2.bind(var_0)
    var_4 = var_3.to_lazy()
    var_5 = var_4.ap(str_0)
    var_6 = var_5.bind(none_type_0)
    maybe_2 = module_0.Maybe(str_0, none_type_0)
    var_7 = maybe_2.to_try()
    maybe_2.bind(var_7)


def test_case_7():
    list_0 = []
    object_0 = module_1.object(*list_0)
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_8():
    bytes_0 = b"\xf1yc\xe1\xd7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_9():
    bool_0 = False
    float_0 = 711.93278
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_10():
    none_type_0 = None
    str_0 = ")1xJ\\'j5\ruP| p"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    float_0 = -3608.51585
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.bind(var_2)
    var_5 = var_4.map(none_type_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.get_or_else(bool_0)
    var_1.ap(var_1)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.bind(var_0)
    var_3 = maybe_0.get_or_else(none_type_0)
    var_3.bind(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(bool_1)
    var_1.to_lazy()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_15():
    float_0 = 252.82
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)


def test_case_16():
    bytes_0 = b"\xf1yc\xe1\xd7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.get_or_else(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_2)


def test_case_17():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()


def test_case_18():
    int_0 = 1966
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_1.get_or_else(int_0)


def test_case_19():
    str_0 = ")o!5ud-`i,P16<^RG)N"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.to_lazy()
    bool_2 = maybe_1.__eq__(bool_1)
    none_type_0 = None
    var_2 = maybe_1.get_or_else(str_0)
    bool_3 = var_2.__eq__(bool_2)
    var_3 = maybe_1.filter(none_type_0)
    var_4 = var_3.to_lazy()
    var_5 = var_4.to_validation()


def test_case_20():
    bool_0 = True
    int_0 = -3180
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(bool_0)


def test_case_21():
    bytes_0 = b"\x14\x04g.Jz\x8c\xa1lc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(bytes_0)
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.to_try()
    bool_0 = maybe_0.__eq__(var_3)
    var_5 = var_3.ap(var_0)
    var_6 = var_3.to_lazy()
    var_7 = var_5.to_validation()
    var_8 = var_6.to_try()
    var_9 = var_5.filter(var_1)
    var_10 = var_2.bind(maybe_0)
    var_1.to_either()


def test_case_22():
    bytes_0 = b"\x14\x04g.Jz\x8c\xa1lc"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.bind(var_1)
    var_3 = var_2.to_try()
    var_4 = maybe_0.map(var_3)
    bool_0 = var_4.__eq__(var_2)
    var_5 = var_2.ap(var_0)
    bool_1 = False
    var_6 = var_2.to_lazy()
    var_7 = var_5.to_validation()
    var_8 = var_6.to_try()
    var_9 = var_5.filter(var_0)
    var_10 = var_1.bind(maybe_0)
    maybe_1 = module_0.Maybe(var_3, bool_1)
    var_11 = var_5.ap(var_2)
    var_12 = var_11.bind(var_4)
    bool_2 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, var_7)
    var_13 = maybe_0.filter(bool_1)
    var_14 = var_12.to_either()
