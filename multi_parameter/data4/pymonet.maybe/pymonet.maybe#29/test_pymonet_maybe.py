# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xa4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = -1502.2
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(maybe_0)
    bool_0 = maybe_0.__eq__(float_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.map(bool_0)
    var_4 = maybe_0.map(var_1)
    var_5 = var_2.to_try()
    var_6 = maybe_0.map(none_type_0)


def test_case_3():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.ap(bool_0)
    bool_1 = var_3.__eq__(dict_0)
    var_4 = maybe_0.filter(var_3)
    var_5 = var_0.to_box()


def test_case_4():
    complex_0 = -2146.2 - 2718.1283j
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.map(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(bool_0)
    var_3 = maybe_1.bind(bool_0)
    var_4 = var_0.filter(complex_0)
    var_5 = var_4.to_lazy()
    var_6 = maybe_1.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(maybe_0)


def test_case_6():
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_1 = module_0.Maybe(list_0, list_0)
    maybe_1.bind(maybe_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(bool_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b"/\x97kJ\x1a:\xe4t\x1b\x11\xde\xd0\xa4\xf4;\xb5\xb5d\xb1\xd2"
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.to_either()
    maybe_1.ap(maybe_1)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"I\xa0\xdeD\xf4\x13T"
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.to_box()
    var_4 = var_0.map(var_0)
    var_5 = var_3.to_try()
    var_6 = maybe_0.to_lazy()
    var_7 = var_4.to_either()
    bool_1 = var_4.__eq__(var_5)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_7, bool_2)
    maybe_1.filter(bytes_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_0.to_validation()


def test_case_11():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.filter(var_1)
    var_3 = var_0.ap(bool_0)
    bool_1 = var_2.to_either()
    var_4 = var_3.bind(maybe_0)
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_1.filter(none_type_0)


def test_case_13():
    str_0 = "=RJY* ]"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    maybe_1 = module_0.Maybe(var_3, var_2)
    int_0 = 1388
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    maybe_2 = module_0.Maybe(dict_0, int_0)
    var_4 = maybe_2.map(maybe_1)


def test_case_14():
    int_0 = 452
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = var_1.filter(int_0)
    var_2.to_lazy()


def test_case_15():
    float_0 = 149.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bytes_0 = b"R\xcf\xaf\xb8e\xcf\xb5\xd8k\xd5\xa1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_1 = (tuple_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_1, tuple_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_20():
    none_type_0 = None
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(none_type_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    var_3 = var_1.to_box()
    bool_2 = True
    bool_3 = maybe_1.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    bool_4 = maybe_2.__eq__(maybe_1)
