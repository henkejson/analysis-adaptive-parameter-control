# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -14.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_1 = maybe_0.filter(none_type_0)
    bool_1 = var_1.__eq__(float_0)
    var_2 = var_1.to_lazy()
    var_3 = var_0.ap(var_1)
    var_4 = maybe_0.ap(maybe_0)
    var_5 = maybe_0.ap(var_4)
    var_6 = var_5.ap(bool_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.ap(var_0)


def test_case_4():
    str_0 = "?1VV{$"
    list_0 = [str_0, str_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(maybe_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_validation()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_4 = maybe_1.bind(var_3)
    int_0 = 0
    var_3.filter(int_0)


def test_case_6():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_box()
    maybe_0.ap(var_2)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(maybe_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_0.to_box()


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    bytes_0 = b"ZZ\x15\x98\x83\x18\x1c\xced\xe4\xe7\xac\x9eaV\x00\x98\x87\xa0\x9e"
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    var_2 = maybe_1.to_box()
    maybe_0.filter(var_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.ap(var_1)
    var_4 = var_1.ap(maybe_0)
    var_5 = var_4.ap(var_4)


def test_case_12():
    bool_0 = True
    tuple_0 = (bool_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(tuple_0)


def test_case_13():
    float_0 = -14.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_1)
    none_type_0 = None
    var_2 = maybe_0.filter(none_type_0)
    var_3 = maybe_0.to_either()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, var_3)
    bool_2 = var_3.__eq__(bool_1)
    var_4 = var_1.to_try()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_try()
    maybe_1 = var_1.to_try()


def test_case_15():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()
    maybe_2 = module_0.Maybe(generic_0, generic_0)
    bool_0 = maybe_2.__eq__(generic_0)
    bool_1 = True
    maybe_3 = module_0.Maybe(generic_0, bool_1)
    var_3 = maybe_3.to_try()


def test_case_16():
    float_0 = 3728.8
    list_0 = [float_0, float_0, float_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_box()
    var_3.map(none_type_0)


def test_case_18():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(var_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_20():
    float_0 = -14.5
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_1)
    none_type_0 = None
    var_2 = maybe_0.filter(none_type_0)
    var_3 = var_2.to_validation()
    var_4 = var_0.ap(var_3)
    bool_1 = var_4.__eq__(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, var_3)
    maybe_2 = module_0.Maybe(bool_0, var_4)
    var_5 = var_2.ap(none_type_0)
    var_6 = var_4.to_box()
    maybe_3 = module_0.Maybe(none_type_0, var_4)
    bool_2 = maybe_1.__eq__(var_0)
    var_7 = var_2.bind(var_5)
