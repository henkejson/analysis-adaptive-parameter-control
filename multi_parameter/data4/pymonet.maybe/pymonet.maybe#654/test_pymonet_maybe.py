# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    str_0 = ""
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_2():
    bytes_0 = b"G\xaf\xb4\xca\xea\xbdD\x0e\xc7\x8b\x89\x8fh\x05V=\xba}\x08"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_1.ap(bytes_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_2 = module_0.Maybe(bytes_0, none_type_0)
    maybe_2.filter(none_type_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_either()
    maybe_1.map(var_1)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(bool_0)
    var_2 = maybe_0.to_lazy()
    float_0 = 1327.57
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_3 = maybe_1.bind(var_2)
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2, bool_2]
    maybe_2 = module_0.Maybe(list_0, list_0)
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.get_or_else(list_0)
    var_6 = var_4.to_validation()


def test_case_6():
    bool_0 = True
    bytes_0 = b"j\xabC\xb9y"
    generic_0 = module_1.Generic()
    list_0 = [bytes_0, generic_0, generic_0, bytes_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = False
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.to_validation()
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.map(var_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_2.ap(var_2)
    var_4 = var_3.to_lazy()
    var_5 = maybe_0.to_lazy()
    none_type_1 = None
    var_6 = maybe_2.to_lazy()
    var_7 = var_2.filter(var_6)
    var_8 = var_3.ap(none_type_1)
    var_9 = var_2.get_or_else(var_7)
    var_5.filter(var_4)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = var_0.get_or_else(maybe_0)
    maybe_1.filter(bool_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_either()


def test_case_13():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.map(var_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_1.to_box()
    var_4 = maybe_2.to_validation()
    maybe_2.filter(var_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_0.to_box()
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    int_0 = 2036
    str_0 = "\n?dB^\rv4Y`q5CEFy"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(int_0)


def test_case_19():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_21():
    int_0 = -479
    set_0 = {int_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()


def test_case_22():
    int_0 = -479
    int_0.to_lazy()


def test_case_23():
    bytes_0 = b"G\xaf\xb4\xca\xea\xbdD\x0e\xc7\x8b\x89\x8fh\x05V=\xba}\x08"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_1.ap(bytes_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(bytes_0, none_type_0)
    maybe_2.filter(none_type_0)


def test_case_24():
    str_0 = "Rf2ymtA u%>"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_try()
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.to_try()
    var_6 = var_1.to_lazy()
    var_7 = maybe_0.to_either()
    var_5.ap(var_5)


def test_case_25():
    bytes_0 = b"G\xaf\xb4\xca\xea\xbdD\x0e\xc7\x8b\x89\x8fh\x05V=\xba}\x08"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_26():
    str_0 = "yGa<\x0bH1\\~p"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.map(var_0)
    var_3 = var_0.to_validation()
    var_3.filter(str_0)
