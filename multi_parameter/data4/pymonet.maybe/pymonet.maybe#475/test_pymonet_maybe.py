# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 335
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xd3|\x97\x9d~\xc7\xe9Z\xac"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = False
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, var_2)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_3 = var_1.to_either()
    var_4 = var_0.map(none_type_0)
    bool_2 = var_1.__eq__(var_1)
    var_5 = maybe_2.get_or_else(bytes_0)
    var_6 = var_2.to_either()
    var_7 = var_1.ap(var_1)


def test_case_3():
    int_0 = -1479
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)


def test_case_4():
    int_0 = -1479
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_0.ap(var_3)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bytes_0 = b"\xd8\x8a\x8f\xa8\xaem\xf9\xaf\x950"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    bool_0 = True
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_0.bind(none_type_0)
    bool_1 = var_2.__eq__(var_0)


def test_case_7():
    bytes_0 = b"\xd3\x80|\x97\x9d~\xd9\xc7\xe9LZ\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    bool_3 = True
    var_1 = maybe_0.get_or_else(bool_3)
    maybe_1 = module_0.Maybe(bytes_0, bool_3)
    var_2 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, var_2)
    maybe_0.bind(bool_3)


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.get_or_else(none_type_1)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.ap(bool_0)
    var_4 = maybe_0.filter(bool_0)
    var_5 = maybe_0.bind(bool_0)
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.ap(none_type_0)


def test_case_9():
    int_0 = -1479
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.map(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_either()
    var_4 = var_2.to_either()
    var_5 = var_0.map(var_3)
    bool_1 = var_4.__eq__(bool_0)
    var_6 = var_5.to_either()
    var_7 = var_0.ap(int_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_11():
    bytes_0 = b"\xd3\x80|\x97\x9d~\xd9\xc7\xe9LZ\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bytes_0)
    bool_3 = maybe_0.to_either()
    var_0 = maybe_0.to_lazy()
    bool_4 = True
    var_1 = maybe_0.get_or_else(bool_4)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_2, var_2)
    var_3 = var_0.to_validation()
    maybe_2 = module_0.Maybe(maybe_0, var_0)
    var_4 = var_2.to_validation()
    var_1.bind(var_2)


def test_case_12():
    bytes_0 = b"\xd3|\x97\x9d~\xc7\xe9Z\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.get_or_else(maybe_0)
    bool_2 = maybe_0.to_validation()
    var_0 = maybe_0.to_lazy()
    bool_3 = True
    var_1 = maybe_0.get_or_else(bool_3)
    maybe_1 = module_0.Maybe(bytes_0, bool_3)
    var_2 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, var_2)
    var_3 = maybe_1.bind(var_0)
    var_4 = var_0.bind(var_2)
    var_5 = maybe_0.to_box()
    bool_4 = maybe_1.__eq__(var_1)
    var_6 = var_0.ap(bytes_0)
    var_7 = var_2.to_either()
    var_0.to_lazy()


def test_case_13():
    int_0 = -3180
    set_0 = {int_0, int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_14():
    str_0 = "u~|'?T5{@\x0c"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_try()
    var_3.map(str_0)


def test_case_15():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    var_1 = var_0.filter(bool_1)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(set_0, bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_3 = maybe_1.to_either()
    var_4 = var_3.map(var_2)
    bool_3 = maybe_1.__eq__(var_4)
    var_3.get_or_else(var_0)


def test_case_16():
    bytes_0 = b"\xd3\x80|\x97\x9d~\xd9\xc7\xe9LZ\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_2 = var_0.to_try()
    maybe_2 = module_0.Maybe(bool_0, var_2)
    var_2.bind(maybe_0)


def test_case_17():
    str_0 = "hf|Z8uXRB7C'v.*k"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    bytes_0 = b"\xfc\x97\xaaG\xc2\x1c\xacs\xd1u\xc7"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_lazy()
    var_2.filter(var_0)


def test_case_18():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_19():
    int_0 = -1479
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.map(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_1, var_1)
    maybe_3 = module_0.Maybe(int_0, bool_2)
    bool_3 = maybe_3.__eq__(maybe_1)
    var_2 = var_0.to_box()
    maybe_3.filter(var_2)
