# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\x07\x10\xe6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bytes_0 = b"v\x04K'\x1c\xfc\xf3\xd0\xdc\x8d\x95 \x14\xc2\x8e.\x02\x83"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    str_0 = ""
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.filter(bool_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    var_1.filter(str_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = var_4.__eq__(bool_1)
    var_5 = maybe_0.ap(var_4)
    var_6 = var_4.to_box()


def test_case_4():
    bytes_0 = b"\x19\xb7\x95\x84`\xfd\x0b\x90\x1ev\x1b\xa6"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(var_0)
    bool_1 = var_0.__eq__(bytes_0)
    var_3 = maybe_0.filter(maybe_0)
    var_4 = maybe_0.map(var_3)


def test_case_5():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_6():
    float_0 = -2418.374029
    maybe_0 = module_0.Maybe(float_0, float_0)
    str_0 = "U"
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(float_0, var_0)
    var_1 = var_0.filter(str_0)
    str_1 = "%9[<)&IqNHz1,"
    maybe_2 = module_0.Maybe(float_0, str_1)
    var_2 = maybe_2.to_either()
    var_3 = var_2.to_validation()
    var_4 = maybe_1.filter(var_2)
    var_5 = var_3.to_lazy()
    var_6 = maybe_1.to_either()
    var_7 = var_1.bind(var_1)
    var_8 = var_0.to_try()
    maybe_3 = module_0.Maybe(var_5, var_2)
    var_9 = maybe_0.ap(maybe_3)
    var_10 = maybe_2.to_either()
    var_11 = var_3.to_try()
    var_12 = var_1.to_box()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    int_0 = -1578
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(maybe_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"v\x04K'\x1c\xfc\xf3\xd0\xdc\x8d\x95 \x14\xc2\x8e.\x02\x83"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    str_0 = ""
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_1.filter(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    bool_1 = var_2.__eq__(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"\x9c\xb0>\x9d\xeedH\x11\xe6\x19\xb6\x88\xe1:\xa5\x8c\xac\x86"
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -848
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    tuple_0 = ()
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_0.get_or_else(var_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, var_4)
    var_5 = var_3.ap(var_4)
    var_6 = var_2.get_or_else(var_2)
    var_7 = maybe_1.to_try()
    var_8 = var_3.to_box()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_5 = var_2.bind(var_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_6 = maybe_1.to_box()
    var_7 = var_2.filter(var_5)
    var_8 = var_3.to_lazy()
    var_9 = var_5.get_or_else(var_8)
    var_9.get_or_else(var_1)


def test_case_15():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(none_type_0)


def test_case_17():
    complex_0 = -95.882 - 3125.8206j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_1.to_try()


def test_case_18():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(generic_0, none_type_0)
    var_1 = maybe_1.to_validation()
    bool_0 = maybe_0.__eq__(var_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_2.to_validation()
    var_5 = var_3.to_box()


def test_case_19():
    bool_0 = True
    bytes_0 = b"STEr\xf2"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_3.to_try()
    var_3.ap(bytes_0)


def test_case_20():
    bytes_0 = b"v\x04K'\x1c\xfc\xf3\xd0\xdc\x8d\x95 \x14\xc2\x8e.\x02\x83"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    str_0 = ""
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.get_or_else(bool_1)
    var_2 = maybe_0.filter(var_1)
    int_0 = -1950
    var_3 = var_0.map(int_0)
    bool_2 = maybe_1.__eq__(var_3)
    var_4 = maybe_1.map(maybe_0)
    var_5 = var_0.ap(bytes_0)
    var_6 = var_5.to_box()


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_try()
    var_4 = var_0.to_lazy()
    maybe_0.filter(var_2)
