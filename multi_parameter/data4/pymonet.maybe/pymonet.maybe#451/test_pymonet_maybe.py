# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.map(var_1)
    maybe_1.filter(var_2)


def test_case_3():
    bool_0 = True
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    tuple_0 = (set_0, set_0, list_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_0.map(bool_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_1.bind(maybe_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.bind(none_type_0)


def test_case_6():
    set_0 = set()
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_0 = maybe_1.ap(object_0)
    var_1 = var_0.map(set_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_2.to_validation()
    var_5 = var_4.to_box()
    var_6 = var_5.to_either()
    var_6.bind(var_3)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.ap(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_0.to_validation()
    maybe_1.filter(maybe_0)


def test_case_9():
    bytes_0 = b"L"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bytes_0)


def test_case_10():
    int_0 = 668
    float_0 = 2820.2067
    tuple_0 = (int_0, float_0)
    float_1 = 72.896
    str_0 = "\n        :param semigroup: other semigroup to concat\n        :type semigroup: Last[B]\n        :returns: new Last with last value\n        :rtype: Last[A]\n        "
    maybe_0 = module_0.Maybe(float_1, str_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_either()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_box()
    maybe_2 = module_0.Maybe(var_1, var_2)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_1.map(var_4)
    var_6 = maybe_0.to_lazy()
    var_7 = var_1.to_either()
    maybe_0.filter(var_7)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_either()
    maybe_1.filter(var_2)


def test_case_13():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    var_0.ap(dict_0)


def test_case_14():
    float_0 = -2646.0788
    list_0 = [float_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_either()
    maybe_1.filter(var_3)


def test_case_16():
    str_0 = 'D=B"6"E]'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_17():
    int_0 = -3023
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_18():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.filter(maybe_1)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_1.map(var_3)
    var_5 = maybe_0.to_lazy()
    maybe_0.filter(var_1)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_1.to_try()
    var_2 = maybe_1.to_either()
    bool_2 = maybe_1.__eq__(var_1)
    bool_3 = True
    maybe_2 = module_0.Maybe(var_2, bool_3)
    var_1.map(maybe_1)


def test_case_21():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_1.filter(maybe_1)
    var_2 = maybe_0.to_either()
    bool_2 = maybe_0.__eq__(maybe_1)
    var_3 = var_1.to_box()
    maybe_2 = module_0.Maybe(var_1, none_type_0)
    maybe_3 = module_0.Maybe(var_1, var_2)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_1.map(var_4)
    var_6 = maybe_0.to_lazy()
    var_7 = var_1.to_either()
    maybe_0.filter(var_7)


def test_case_22():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    maybe_1 = module_0.Maybe(var_0, bool_2)
    bool_1.map(maybe_0)


def test_case_23():
    str_0 = "7|T<@o~V:]6J}e\t5;"
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.map(str_0)
    var_3 = var_2.map(var_0)
    var_4 = var_3.ap(var_1)
    maybe_1 = module_0.Maybe(var_1, var_3)
    var_5 = var_2.to_lazy()
    bool_1 = var_1.__eq__(var_1)
    var_6 = maybe_0.to_validation()
    var_7 = var_3.to_validation()
    var_8 = var_3.to_validation()
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_0, bool_2)
    var_9 = var_5.map(bool_0)
    var_9.to_lazy()
