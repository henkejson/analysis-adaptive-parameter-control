# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    var_1 = maybe_0.to_try()
    bool_3 = False
    var_2 = maybe_0.to_box()
    var_3 = maybe_1.ap(bool_3)
    var_4 = var_3.bind(var_3)
    maybe_0.filter(var_2)


def test_case_3():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)


def test_case_4():
    float_0 = -1475.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(float_0)
    int_0 = 0
    bool_3 = True
    var_0 = maybe_1.map(int_0)
    var_1 = maybe_1.bind(maybe_2)
    var_2 = maybe_2.bind(var_0)
    maybe_3 = module_0.Maybe(bool_3, maybe_0)


def test_case_5():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(none_type_0)
    var_3 = var_2.to_either()


def test_case_7():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.bind(int_0)


def test_case_8():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.ap(int_0)


def test_case_9():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.ap(none_type_0)


def test_case_10():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(int_0)


def test_case_11():
    bool_0 = False
    int_0 = -1392
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(int_0)


def test_case_12():
    none_type_0 = None
    str_0 = "d \ri11O3%\\q72PL43ha"
    int_0 = 566
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    bytes_0 = b"\xb6s\x10d#\xb9\x9a\x87K\x83S\x7f"
    tuple_0 = (bytes_0,)
    maybe_1 = module_0.Maybe(str_0, tuple_0)
    var_1 = maybe_1.ap(none_type_0)
    var_2 = var_1.to_box()
    var_3 = maybe_1.to_lazy()
    tuple_1 = (var_3, tuple_0)
    var_4 = maybe_1.get_or_else(bytes_0)
    var_5 = maybe_1.to_lazy()
    tuple_2 = (tuple_1, tuple_1, var_3, var_3)
    maybe_2 = module_0.Maybe(tuple_2, var_3)
    var_6 = maybe_2.get_or_else(none_type_0)


def test_case_13():
    int_0 = 1053
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()


def test_case_14():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    complex_0 = -1033.160615 - 2335.2417j
    maybe_1 = module_0.Maybe(none_type_0, complex_0)
    var_1 = maybe_0.to_try()
    bool_3 = False
    var_2 = maybe_0.to_box()
    var_3 = maybe_1.ap(bool_3)
    var_4 = var_3.bind(var_3)
    var_5 = var_3.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_6 = var_4.to_try()
    var_7 = var_2.to_try()
    var_8 = var_5.to_lazy()
    var_9 = maybe_1.ap(var_2)
    var_10 = maybe_2.to_either()
    maybe_0.ap(var_5)


def test_case_15():
    bool_0 = False
    int_0 = -1392
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    maybe_1.filter(int_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_17():
    bool_0 = False
    int_0 = -1392
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_box()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.to_validation()


def test_case_20():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_1.get_or_else(bool_0)


def test_case_21():
    generic_0 = module_1.Generic()
    bool_0 = False
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    complex_0 = -1033.160615 - 2335.2417j
    maybe_1 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.to_try()
    bool_3 = False
    var_1 = maybe_0.to_box()
    var_2 = maybe_1.ap(bool_3)
    var_3 = var_2.bind(var_2)
    var_4 = var_2.to_validation()
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_5 = var_3.to_try()
    var_6 = var_1.to_try()
    var_7 = maybe_1.bind(generic_0)
    var_8 = var_4.to_lazy()
    var_9 = maybe_1.ap(var_7)
    int_0 = -2829
    var_10 = var_7.to_box()
    maybe_3 = module_0.Maybe(int_0, int_0)
    var_11 = maybe_3.bind(maybe_3)
    tuple_0 = (none_type_0,)
    bool_4 = maybe_0.__eq__(var_7)
    var_12 = var_11.filter(var_8)
    var_13 = var_11.filter(tuple_0)
    bool_5 = maybe_3.__eq__(generic_0)


def test_case_22():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_2.bind(maybe_0)
    var_5 = maybe_0.bind(var_3)
    var_6 = var_5.map(var_1)
    var_7 = maybe_2.to_try()
    var_8 = var_7.filter(maybe_2)
    var_9 = maybe_2.to_lazy()
    var_10 = var_3.to_validation()
    var_11 = var_9.map(var_7)
    var_12 = maybe_2.to_validation()
    bool_2 = maybe_2.__eq__(int_0)
    int_1 = 4084
    var_13 = maybe_2.map(int_0)
    bool_3 = var_12.__eq__(maybe_1)
    var_14 = var_13.ap(int_1)
    var_15 = maybe_2.to_try()
    var_16 = var_13.ap(var_10)


def test_case_23():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_try()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_4 = maybe_2.bind(maybe_0)
    var_5 = maybe_0.to_try()
    bool_2 = maybe_2.__eq__(var_0)
    var_6 = var_0.filter(var_5)
    var_3.to_lazy()
