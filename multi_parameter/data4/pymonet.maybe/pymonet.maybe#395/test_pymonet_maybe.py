# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "\n        Transform Maybe to Box.\n\n        :returns: Box monad with previous value when Maybe is not empty, in other case Box with None\n        :rtype: Box[A | None]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    str_1 = ";^a'DIH!\x0cYry_"
    bool_0 = False
    var_1 = maybe_0.filter(bool_0)
    bool_1 = var_1.__eq__(var_1)
    maybe_1 = module_0.Maybe(str_1, bool_0)
    var_2 = maybe_1.ap(maybe_0)
    var_3 = var_2.to_try()
    var_4 = var_1.to_box()
    var_5 = var_2.to_box()
    bool_2 = var_2.__eq__(str_1)
    var_6 = var_5.to_either()


def test_case_3():
    int_0 = 590
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = var_0.__eq__(maybe_1)
    var_1 = var_0.to_box()
    maybe_0.map(var_0)


def test_case_4():
    str_0 = ";^a'DIH!\x0cYry_"
    bytes_0 = b"\xa6\xe6\xc9\xf5\xf7\xe4\xa6\xe0\xc3\xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.bind(var_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_1.filter(bytes_0)


def test_case_5():
    str_0 = 'y?d-x)\rQP"v/5x'
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_1.get_or_else(none_type_1)
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(str_0, none_type_1)
    bool_1 = var_0.__eq__(str_0)
    maybe_2.bind(var_0)


def test_case_6():
    int_0 = 364
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(int_0)


def test_case_7():
    str_0 = ";^a'DIH!\x0cYry_"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.bind(var_1)
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_2)


def test_case_8():
    int_0 = 1979
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(var_0)
    var_1.to_try()


def test_case_9():
    bytes_0 = b"\xa6\xe6\xc9\xf5\xf7\xe4\xa6\xe0\xc3\xcb"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_try()
    var_3 = var_0.to_either()
    var_4 = var_0.to_lazy()
    var_5 = var_1.to_either()
    var_6 = var_0.bind(var_1)
    var_7 = var_6.to_validation()
    var_8 = var_3.to_box()
    var_9 = var_1.to_validation()
    var_10 = var_2.bind(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_4)


def test_case_10():
    int_0 = -2258
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(int_0)


def test_case_11():
    bytes_0 = b"r\xf0\xd4\x0eY\xb2\xf7\x0c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bytes_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_13():
    bytes_0 = b"\xa6\xe6\xc9\xf5\xf7\xe4\xa6\xe0\xc3\xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_0.to_lazy()
    var_3 = var_0.bind(var_1)
    var_4 = var_3.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(var_2)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_15():
    dict_0 = {}
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_0.ap(dict_0)
    var_3 = maybe_0.to_box()
    var_0.filter(var_0)


def test_case_16():
    str_0 = "\n        Transform Maybe to Box.\n\n        :returns: Box monad with previous value when Maybe is not empty, in other case Box with None\n        :rtype: Box[A | None]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(maybe_0)
    str_1 = ";^a'DIH!\x0cYry_"
    bool_0 = False
    var_1 = maybe_0.filter(bool_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_0.to_try()
    var_3 = var_2.get_or_else(str_1)
    var_4 = var_0.bind(var_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_5 = var_4.get_or_else(var_4)
    var_6 = var_4.filter(var_5)
    var_7 = var_5.to_try()
    var_8 = var_4.ap(var_7)
    var_9 = var_1.to_either()
    var_10 = var_0.map(var_8)
    var_11 = var_5.to_lazy()
    var_12 = var_5.bind(var_6)
    var_13 = var_12.to_validation()
    var_14 = var_8.to_lazy()
    var_15 = var_6.to_validation()
    bool_2 = False
    maybe_2 = module_0.Maybe(var_5, bool_2)
    var_16 = var_15.to_lazy()
    maybe_2.filter(var_11)


def test_case_17():
    int_0 = 590
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, var_0)
    maybe_0.ap(int_0)
