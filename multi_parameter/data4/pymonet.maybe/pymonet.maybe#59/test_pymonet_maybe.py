# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bytes_0 = b"\xaa\x12\x03v\xf5\xaa\xcbmXiG8\x97"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "\n$"
    set_0 = {str_0, str_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_3():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.map(maybe_1)
    var_3 = var_2.to_box()
    var_4 = var_3.to_try()
    var_5 = var_2.bind(var_4)
    bool_1 = var_5.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(bool_1, var_4)
    var_6 = var_2.filter(maybe_0)
    var_7 = var_6.to_validation()
    maybe_1.filter(var_5)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_0.map(var_0)


def test_case_5():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.filter(maybe_1)
    maybe_1.filter(var_0)


def test_case_6():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    str_0 = "/"
    bool_0 = False
    bytes_0 = b"\x8b\x84v)y\x07\x99\xcc\xedJ'\x86\\\x1c\xc8\x19)M"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.get_or_else(str_0)
    var_1.to_try()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_1.to_box()
    var_4 = maybe_1.to_lazy()
    var_5 = maybe_1.to_validation()
    var_6 = var_4.to_box()
    maybe_1.ap(maybe_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(none_type_0)


def test_case_11():
    bool_0 = False
    bytes_0 = b"\xa7\x9e\x95\xf2"
    int_0 = 2539
    tuple_0 = (bytes_0, int_0)
    tuple_1 = (bool_0, bool_0, tuple_0, int_0)
    set_0 = {tuple_1}
    maybe_0 = module_0.Maybe(tuple_1, set_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_13():
    str_0 = "\n$"
    set_0 = {str_0, str_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()


def test_case_15():
    str_0 = "\n    Return increased by 1 argument.\n\n    :param value:\n    :type value: Int\n    :returns:\n    :rtype: Int\n    "
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    none_type_1 = None
    maybe_2 = module_0.Maybe(maybe_0, none_type_1)
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_16():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.bind(int_0)
    var_2 = var_1.filter(maybe_1)
    var_3 = var_2.to_validation()
    maybe_1.filter(var_1)


def test_case_17():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_lazy()
    module_2.object(**var_0)


def test_case_19():
    none_type_0 = None
    none_type_0.to_lazy()


def test_case_20():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_0 = maybe_0.filter(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_21():
    int_0 = -292
    float_0 = -55.02
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(int_0)


def test_case_22():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.bind(int_0)
    bool_1 = var_2.__eq__(maybe_1)
    var_3 = var_2.filter(maybe_0)
    var_4 = var_3.to_validation()
    maybe_1.filter(var_2)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    str_0 = ""
    list_0 = []
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(list_0, bool_1)
    bool_2 = maybe_1.__eq__(str_0)
    var_0 = maybe_1.ap(str_0)
    var_1 = var_0.filter(none_type_0)
    var_2 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(var_2, var_0)
    var_3 = var_1.filter(var_2)
    bool_3 = True
    maybe_3 = module_0.Maybe(list_0, bool_3)
    var_4 = maybe_3.to_validation()
    var_5 = var_0.filter(list_0)
    var_6 = maybe_3.get_or_else(var_4)
    var_7 = maybe_3.filter(str_0)
    var_8 = var_1.to_lazy()
    var_9 = var_1.get_or_else(maybe_1)
    bool_4 = var_9.__eq__(maybe_1)
    bool_5 = var_1.__eq__(none_type_0)
    var_10 = var_0.to_try()


def test_case_24():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(var_2, var_2)
    var_3 = maybe_1.bind(none_type_0)
    bool_1 = var_3.__eq__(var_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_4 = module_0.Maybe(int_0, maybe_2)
    var_5 = var_4.bind(int_0)
    var_6 = var_5.to_lazy()
    var_7 = var_6.to_box()
    var_8 = var_7.to_either()
    none_type_1 = None
    maybe_3 = module_0.Maybe(none_type_1, none_type_1)
    bool_3 = maybe_3.__eq__(maybe_3)
    var_9 = maybe_2.to_either()
    var_2.to_either()
