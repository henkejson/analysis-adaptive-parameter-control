# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    str_0 = "CcFp8+$Vv7#"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_box()
    var_1.map(bool_0)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(maybe_0, none_type_0)


def test_case_4():
    bytes_0 = b"\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(var_1, maybe_0)
    maybe_2 = module_0.Maybe(bytes_0, var_2)
    var_3 = maybe_2.filter(var_0)
    var_4 = maybe_0.map(bytes_0)
    var_5 = var_3.to_lazy()
    var_6 = var_5.to_either()
    var_7 = maybe_1.to_either()


def test_case_5():
    bytes_0 = b"\t"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.ap(var_2)
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_4 = maybe_2.to_validation()
    maybe_1.map(bool_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    var_1 = maybe_2.to_box()


def test_case_7():
    bytes_0 = b"\x9c\x7fu\xfe\xb5\x88\xc4\xf6\xfaDe"
    set_0 = {bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_9():
    none_type_0 = None
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b"\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_1, maybe_0)
    var_2 = maybe_1.to_either()
    var_3 = maybe_0.filter(bytes_0)


def test_case_11():
    str_0 = "L@\rP5eDyWh[d+K"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_12():
    bytes_0 = b"\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    maybe_1 = var_0.get_or_else(var_2)
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.filter(bytes_0)
    var_5 = maybe_0.ap(var_0)
    list_0 = [var_0]
    maybe_1.get_or_else(list_0)


def test_case_13():
    object_0 = module_1.object()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(object_0)
    var_0.to_try()


def test_case_14():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.filter(int_0)


def test_case_15():
    str_0 = "L@\rP5eDyWh[d+K"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    bytes_0 = b"\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(var_1, maybe_0)
    var_3 = maybe_1.to_either()
    var_4 = maybe_0.filter(bytes_0)
    bool_0 = var_1.__eq__(var_4)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_0.filter(var_1)


def test_case_18():
    bytes_0 = b"\x87\x9eK "
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = True
    str_0 = "enCg\r"
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.bind(str_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = var_2.filter(bool_1)
    var_4 = var_1.to_lazy()
    var_5 = var_3.to_try()
    var_6 = maybe_0.ap(var_0)
    var_7 = var_6.to_box()
    var_8 = var_1.map(var_7)
    var_9 = var_8.to_box()
    var_10 = var_5.filter(var_0)
    none_type_0 = None
    bool_3 = False
    var_11 = var_2.get_or_else(none_type_0)
    var_12 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_13 = maybe_2.to_try()
    maybe_3 = module_0.Maybe(bool_2, var_11)
    maybe_3.filter(var_13)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.ap(var_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.to_validation()
    var_3 = var_1.ap(var_1)
    var_2.bind(var_1)


def test_case_20():
    bytes_0 = b"\x87\x9eK "
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.bind(var_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = var_2.filter(bool_0)
    var_4 = var_1.to_lazy()
    var_5 = var_3.to_try()
    var_6 = var_1.bind(var_4)
    var_7 = maybe_1.map(var_3)
    var_8 = maybe_0.ap(var_0)
    var_9 = var_1.map(maybe_0)
    none_type_0 = None
    var_10 = var_2.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(var_3, var_5)
    var_11 = var_0.to_try()
    maybe_3 = module_0.Maybe(bool_1, var_10)
    maybe_3.filter(var_2)
