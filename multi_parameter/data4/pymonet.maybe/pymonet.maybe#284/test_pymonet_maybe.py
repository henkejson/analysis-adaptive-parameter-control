# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.bind(var_1)
    var_3 = var_2.ap(var_0)
    var_4 = maybe_1.to_validation()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_5 = maybe_1.to_box()
    var_6 = var_5.to_lazy()
    var_4.to_validation()


def test_case_3():
    float_0 = -2956.9375
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0.bind(var_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    tuple_0 = ()
    bool_0 = True
    none_type_0 = None
    float_0 = -55.107
    list_0 = [float_0]
    maybe_0 = module_0.Maybe(list_0, float_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.get_or_else(bool_0)
    bool_1 = var_1.__eq__(tuple_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.to_lazy()
    bool_1 = var_1.__eq__(none_type_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_9():
    float_0 = -331.4194
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    var_1.filter(var_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.bind(var_2)
    var_4 = var_2.ap(var_0)
    var_5 = maybe_0.to_validation()
    bool_1 = var_2.__eq__(maybe_0)
    var_6 = var_4.ap(var_3)
    var_7 = var_5.to_box()
    var_4.to_lazy()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_12():
    dict_0 = {}
    complex_0 = 1877.26189 - 3686.1101j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(dict_0)
    str_0 = "Lazy[fn={}, value={}, is_evaluated={}]"
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_box()
    var_1.bind(var_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.bind(var_2)
    var_4 = var_2.ap(none_type_0)
    var_5 = maybe_1.to_validation()
    bool_1 = var_2.__eq__(maybe_1)
    bool_2 = var_5.__eq__(maybe_1)
    var_6 = maybe_0.to_box()
    var_7 = maybe_0.to_lazy()
    var_8 = var_2.to_validation()
    var_9 = var_3.to_try()
    bool_3 = False
    maybe_2 = module_0.Maybe(var_0, bool_3)
    var_10 = maybe_1.bind(var_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(var_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_16():
    bytes_0 = b"d\x90\x07p"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    bool_0 = False
    list_0 = []
    bool_1 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, list_0)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_box()
    var_1.ap(bool_0)


def test_case_19():
    bool_0 = True
    bool_0.to_either()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.bind(var_2)
    var_4 = maybe_0.to_validation()
    bool_1 = var_3.__eq__(maybe_0)
    var_5 = maybe_0.to_box()
    var_6 = var_5.to_lazy()
    var_2.filter(var_5)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    str_0 = "^cc\\A4Ml"
    object_0 = module_1.object()
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(object_0, bool_1)
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_2.bind(str_0)
    var_2 = var_1.ap(str_0)
    bool_2 = False
    var_3 = maybe_2.ap(maybe_0)
    maybe_3 = module_0.Maybe(str_0, bool_2)
    var_4 = var_2.to_either()
    maybe_4 = module_0.Maybe(str_0, bool_2)
    var_5 = maybe_3.to_validation()
    var_6 = maybe_3.to_try()
    var_7 = maybe_3.to_box()
    var_8 = maybe_0.to_either()
    var_9 = maybe_3.to_either()
    var_10 = var_6.get_or_else(maybe_4)
    bool_3 = maybe_4.__eq__(maybe_4)
    var_11 = maybe_4.to_validation()
    bool_4 = var_1.__eq__(maybe_3)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.to_either()
    maybe_0.filter(var_2)
