# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_3():
    bool_0 = True
    bytes_0 = b"f\x92\xabuA]\xe7A\x19\xcbC\xc1\x846\xd5A"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    maybe_0 = module_0.Maybe(set_0, bytes_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.map(set_0)
    var_2 = var_0.to_either()
    var_3 = maybe_0.to_either()
    bool_1 = var_0.__eq__(bytes_0)
    var_4 = var_1.ap(set_0)
    var_5 = var_4.map(var_2)
    var_6 = var_1.map(var_3)
    var_3.filter(var_3)


def test_case_4():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_validation()
    var_3 = var_1.to_either()
    bool_0 = var_3.__eq__(var_1)
    maybe_0.map(var_1)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.bind(bool_0)
    var_2 = var_0.bind(var_0)
    bool_1 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_1.get_or_else(maybe_1)
    var_5 = var_1.bind(var_2)
    var_6 = maybe_1.to_either()


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    int_0 = 2139
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(int_0)


def test_case_8():
    bool_0 = True
    str_0 = "\rdfL3QZ1Ruw[q!1R"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_10():
    float_0 = 909.32
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(float_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_validation()
    var_3 = var_0.bind(var_1)
    var_4 = var_0.to_lazy()
    var_5 = maybe_0.map(var_4)
    bool_0 = True
    maybe_1 = module_0.Maybe(float_0, bool_0)
    bool_1 = maybe_1.__eq__(float_0)
    none_type_0 = None
    var_6 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_7 = maybe_2.to_either()
    bool_2 = var_0.__eq__(maybe_0)
    var_8 = var_6.map(var_3)
    var_9 = maybe_1.map(var_4)
    var_10 = var_5.to_lazy()
    var_11 = var_7.to_lazy()
    var_12 = var_7.to_lazy()
    var_13 = var_5.map(var_11)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    none_type_0 = None
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    bool_3 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_12():
    int_0 = 1
    bool_0 = False
    dict_0 = {int_0: int_0, bool_0: int_0, int_0: bool_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()


def test_case_13():
    bytes_0 = b"~\xef5\x8e\x1bLl#\xf0H\x9b9#\x94"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(list_0)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_try()
    var_2 = var_0.bind(var_0)
    bool_1 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_0.filter(var_0)
    var_4 = maybe_1.get_or_else(maybe_1)
    var_5 = var_1.bind(var_2)
    var_6 = maybe_1.to_either()


def test_case_15():
    float_0 = -166.52226
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(float_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_1.to_validation()
    var_3 = var_1.to_try()
    str_0 = "j OY~.2VgHxiB. s"
    var_4 = maybe_0.ap(str_0)
    var_5 = maybe_1.to_try()
    var_5.to_box()


def test_case_16():
    str_0 = "n_,'\\R;)No"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    bool_1 = var_0.__eq__(bool_0)
    var_0.map(var_1)


def test_case_17():
    float_0 = 909.32
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.bind(float_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.bind(var_1)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.map(var_3)
    var_5 = var_4.ap(var_3)
    bool_0 = var_5.__eq__(float_0)
    var_6 = maybe_0.to_either()
    dict_0 = var_6.ap(bool_0)
    var_7 = var_3.to_either()
    var_8 = var_2.ap(var_3)
    bool_1 = var_8.__eq__(var_2)
    var_6.filter(var_7)


def test_case_18():
    bytes_0 = b"z1^\xe3\xa7\x1aQ\xe4\xbf\x8e\xaa"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_1.to_box()
    bool_2 = maybe_1.__eq__(maybe_1)
    var_0.get_or_else(bytes_0)
