# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 527
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "&\t{woSk"
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_2 = True
    maybe_1 = module_0.Maybe(set_0, bool_2)
    var_0 = maybe_1.ap(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.bind(var_2)
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_4 = maybe_2.map(var_0)
    var_5 = var_3.to_lazy()
    var_6 = var_2.to_box()
    var_7 = var_0.filter(var_5)
    var_8 = var_3.map(var_0)
    bool_3 = maybe_2.__eq__(var_0)


def test_case_3():
    str_0 = "&\twoSk"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bool_1)
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.filter(var_0)


def test_case_4():
    str_0 = "&\twoSk"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bool_1)
    var_2 = var_0.map(var_0)
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.filter(var_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.map(none_type_0)


def test_case_6():
    str_0 = "&\t{woSk"
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.bind(var_2)
    var_4 = maybe_0.to_validation()
    var_5 = var_1.to_box()
    var_6 = var_4.to_box()
    var_7 = var_4.to_either()
    maybe_1 = module_0.Maybe(var_7, var_6)
    var_6.map(var_4)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(bool_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    bool_1 = False
    str_0 = "QX\x0b\x0b\x0b"
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.ap(bool_1)


def test_case_9():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)


def test_case_10():
    bool_0 = False
    bytes_0 = b"\x14\x86"
    tuple_0 = (bool_0, bytes_0, bytes_0, bool_0)
    str_0 = "D\x0bmX(KE<)\n"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_lazy()


def test_case_11():
    str_0 = '"Ew8RI{8H'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    bool_1 = False
    int_0 = 0
    maybe_2 = module_0.Maybe(int_0, int_0)
    float_0 = -3181.013301
    var_0 = maybe_2.get_or_else(float_0)
    maybe_2.ap(bool_1)


def test_case_12():
    str_0 = "&\twoSk"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bool_1)
    var_2 = var_0.to_either()
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.filter(var_0)


def test_case_13():
    bytes_0 = b"\xf6\r\xab\x0e\x14\x98\xdd\xc5\xcd\xbf("
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_either()
    var_1.ap(var_3)


def test_case_14():
    str_0 = "&\twoSk"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(bool_1)
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_1.filter(var_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_16():
    float_0 = -5110.086
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_17():
    str_0 = "k$'y:Z5$g|\x0b(Ng8Ld\x0cw'"
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(bool_1)
    var_4 = var_1.to_either()
    var_5 = var_2.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_6 = maybe_1.to_lazy()
    var_7 = var_3.to_lazy()
    var_8 = var_2.to_box()
    maybe_1.filter(var_2)


def test_case_18():
    int_0 = 3726
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.map(bool_0)


def test_case_21():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    int_1 = 2784
    var_0 = maybe_0.to_try()
    none_type_0 = None
    var_1 = maybe_0.ap(none_type_0)
    list_0 = [int_1, int_1, int_1]
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, list_0)
    var_2 = maybe_0.ap(maybe_1)
    var_3 = maybe_1.ap(list_0)
    var_4 = maybe_1.filter(bool_0)
    maybe_2 = module_0.Maybe(list_0, var_3)
    var_5 = maybe_1.ap(none_type_1)
    var_6 = var_4.get_or_else(maybe_0)
    var_7 = var_5.ap(var_6)
    bool_1 = maybe_1.__eq__(maybe_2)
    maybe_3 = module_0.Maybe(list_0, int_1)
    var_8 = maybe_2.to_lazy()
    var_9 = maybe_3.get_or_else(var_3)
    var_10 = maybe_3.to_lazy()
    var_11 = var_3.bind(var_5)
    var_12 = var_10.to_box()
    var_12.get_or_else(none_type_1)


def test_case_22():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = True
    var_1 = var_0.to_validation()
    bool_3 = var_1.__eq__(bool_1)
    maybe_1 = module_0.Maybe(var_0, bool_2)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.filter(var_2)
    var_4 = var_3.bind(bool_0)
    var_0.to_box()


def test_case_23():
    str_0 = "&\t{woSk"
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_4 = var_1.map(var_1)
    var_5 = var_2.bind(var_1)
    var_6 = maybe_1.to_lazy()
    var_7 = var_6.to_box()
    maybe_1.filter(bool_1)
