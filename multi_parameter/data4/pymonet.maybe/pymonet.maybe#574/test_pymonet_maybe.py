# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\xea\xf4m\xfc\x96\xaf{\xac\xa2@\xc0\x93\xa5y8/2\xb5"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.bind(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_0.to_either()
    bool_1 = var_0.__eq__(bool_0)
    var_5 = maybe_1.ap(bytes_0)
    var_6 = var_2.map(maybe_0)
    bool_2 = var_6.__eq__(var_1)
    maybe_2 = module_0.Maybe(var_6, var_3)
    var_7 = maybe_2.ap(none_type_0)
    bool_3 = True
    maybe_3 = module_0.Maybe(var_5, bool_3)
    var_8 = var_6.get_or_else(none_type_0)
    var_9 = var_7.to_try()
    var_10 = maybe_0.to_box()
    bool_4 = var_5.__eq__(maybe_1)
    var_11 = var_5.to_validation()
    var_12 = maybe_2.to_try()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = var_0.__eq__(bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.filter(bool_1)


def test_case_4():
    float_0 = -1512.633
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = var_1.map(float_0)
    int_0 = -189
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    bool_0 = False
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_6 = maybe_2.to_lazy()
    var_7 = var_6.to_try()
    var_8 = var_6.to_box()
    var_9 = var_8.to_lazy()
    bool_1 = var_9.__eq__(maybe_0)
    var_4.get_or_else(var_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b"\xea\xf4m\xfc\x96\xaf{\xac\xa2@\xc0\x93\xa5y8/2\xb5"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.bind(var_1)
    bool_1 = var_0.__eq__(bool_0)
    var_3 = maybe_1.ap(bytes_0)
    none_type_1 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_2)
    bool_3 = maybe_2.__eq__(none_type_1)
    maybe_2.filter(bool_1)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0]
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.bind(list_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.ap(none_type_0)
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    bool_2 = maybe_1.__eq__(none_type_1)
    maybe_1.filter(var_2)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.ap(maybe_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_box()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_12():
    bytes_0 = b"\xea\xf4m\xfc\x96\xaf{\xac\xa2@\xc0\x93\xa5y8/2\xb5"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_1.bind(var_1)
    bool_1 = var_0.__eq__(bool_0)
    var_3 = maybe_1.ap(bytes_0)
    none_type_1 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_2)
    var_4 = var_2.get_or_else(none_type_1)
    bool_3 = maybe_2.__eq__(none_type_1)
    maybe_2.filter(bool_1)


def test_case_13():
    complex_0 = 3094.49742 + 2735.641812j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bytes_0 = b"\xea\xf4m\xfc\x96\xaf{\xac\xa2@\xc0\x93\xa5y8/2\xb5"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.bind(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_0.to_either()
    bool_1 = var_0.__eq__(bool_0)
    var_5 = maybe_1.ap(bytes_0)
    none_type_1 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_1, bool_2)
    var_6 = var_2.get_or_else(none_type_1)
    maybe_3 = module_0.Maybe(none_type_1, none_type_1)
    var_7 = var_4.bind(var_1)
    var_8 = var_7.bind(bool_0)
    var_9 = maybe_3.to_either()
    var_10 = var_9.to_validation()
    var_11 = var_7.to_validation()
    var_12 = var_2.filter(var_4)
    var_13 = var_12.to_lazy()
    var_14 = var_5.filter(maybe_1)


def test_case_15():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(set_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    bool_1 = var_0.__eq__(bool_0)
    none_type_1 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_2)
    maybe_1.filter(bool_1)


def test_case_17():
    str_0 = "q)MpXsGaP"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.to_lazy()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(tuple_0)


def test_case_20():
    str_0 = "\t\x0bpgA#|LwO)"
    float_0 = -264.19
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_0.ap(float_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_3 = maybe_1.to_either()
    var_3.get_or_else(var_2)


def test_case_21():
    str_0 = ')b}0{\x0c[}bB"`\n'
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.map(maybe_1)
    var_1 = maybe_1.to_lazy()
    bool_0 = maybe_1.__eq__(var_0)
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.to_validation()
    var_4 = var_2.to_try()
    var_2.map(var_4)


def test_case_22():
    complex_0 = 548.173 - 1954.28145j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_0.bind(var_0)
