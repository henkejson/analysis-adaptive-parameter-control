# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "One[value={}]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    int_0 = -1401
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_lazy()
    maybe_2 = module_0.Maybe(var_2, int_0)
    var_3 = maybe_2.ap(int_0)
    var_4 = var_3.ap(int_0)
    var_5 = var_4.to_validation()
    var_6 = maybe_0.bind(var_0)
    tuple_0 = (int_0, var_0)
    list_0 = [tuple_0, var_1]
    maybe_3 = module_0.Maybe(int_0, tuple_0)
    var_7 = maybe_3.filter(maybe_3)
    maybe_4 = module_0.Maybe(list_0, int_0)
    bool_1 = maybe_4.__eq__(list_0)
    var_8 = maybe_3.to_lazy()
    var_9 = maybe_4.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.map(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.to_box()
    var_4 = var_2.to_try()
    maybe_2 = module_0.Maybe(var_1, var_3)
    var_5 = var_2.get_or_else(bool_0)
    bool_0.to_try()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    complex_0 = -565.03958 + 4740j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(complex_0)
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_try()
    bool_0 = False
    maybe_2 = module_0.Maybe(complex_0, bool_0)
    bool_1 = True
    maybe_3 = module_0.Maybe(complex_0, bool_1)


def test_case_7():
    float_0 = -1947.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = var_0.__eq__(maybe_0)
    maybe_0.bind(maybe_0)


def test_case_8():
    float_0 = -3213.0
    dict_0 = {float_0: float_0, float_0: float_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_1 = maybe_1.to_box()
    var_1.get_or_else(dict_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    var_0 = maybe_0.filter(bool_1)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.ap(bool_0)


def test_case_13():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bytes_0 = b"\xa9\xb4\xc3\x7f\x0bY\xa3\xceb/\x12\x82_\xcb\x06\x05\xd20"
    bytes_1 = b"@h\xf7\xf8p"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.to_box()
    var_0.map(bytes_0)


def test_case_15():
    str_0 = "Ib1NY"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    maybe_2 = module_0.Maybe(var_1, var_1)


def test_case_16():
    str_0 = "One[value={}]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    int_0 = 107
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_lazy()


def test_case_18():
    bytes_0 = b"L\x94\x06Y5\x1dFmr\x8c\xc5ETX\xa8/z\x14\xfa\x8d"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_1.map(var_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_1)
    var_2 = var_0.to_either()
    var_3 = var_0.to_box()
    var_4 = var_2.to_box()
    var_5 = var_2.to_lazy()
    var_6 = maybe_0.to_try()
    var_7 = maybe_1.to_either()
    var_6.ap(bool_1)


def test_case_20():
    float_0 = -3213.0
    dict_0 = {float_0: float_0, float_0: float_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)
    var_1 = maybe_1.to_box()
    var_1.get_or_else(dict_0)


def test_case_21():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_1.to_lazy()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_0.map(var_1)
    var_3 = var_2.to_validation()
    var_4 = var_2.map(var_1)
    bool_1 = maybe_0.__eq__(var_2)
    var_5 = maybe_0.ap(none_type_0)
    var_6 = var_2.to_box()
    var_7 = var_5.to_try()
    var_8 = var_5.to_box()
    var_9 = var_8.to_try()
    var_10 = var_5.to_lazy()
    var_11 = var_2.to_try()
    var_12 = var_10.to_validation()
    var_7.to_box()


def test_case_23():
    int_0 = 1
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(int_0)


def test_case_24():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_25():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(var_1)
    maybe_0.ap(none_type_0)
