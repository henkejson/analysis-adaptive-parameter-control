# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 2800.58
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 274
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.bind(var_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.filter(var_2)
    bool_0 = var_1.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    maybe_1.filter(var_2)


def test_case_3():
    none_type_0 = None
    float_0 = 2800.58
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(none_type_0)


def test_case_4():
    int_0 = 274
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.map(maybe_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_2 = var_0.ap(var_0)
    var_3 = var_2.get_or_else(none_type_0)
    var_4 = var_0.filter(none_type_0)
    var_5 = maybe_0.to_lazy()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_6():
    int_0 = 274
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = var_1.filter(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.get_or_else(maybe_0)
    var_3.map(var_3)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = True
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    bytes_0 = b'i\xbd\xc7\xec\xf9\xc3L2fa\x9a"]I'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_1.to_validation()
    bool_3 = True
    maybe_2 = module_0.Maybe(bool_3, bool_3)
    var_1 = maybe_2.to_either()


def test_case_11():
    str_0 = ""
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_2 = False
    var_2.filter(bool_2)


def test_case_12():
    float_0 = -2708.52
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    str_0 = "\n        Transform Box into not empty Maybe.\n\n        :returns: non empty Maybe monad with previous value\n        :rtype: Maybe[A]\n        "
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_box()
    var_1.map(var_0)


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_box()
    var_4 = var_2.get_or_else(none_type_0)
    var_4.to_box()


def test_case_14():
    float_0 = 3030.989751
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = var_1.to_lazy()
    var_3 = var_1.to_try()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.get_or_else(var_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.to_lazy()
    none_type_0 = None
    var_4 = var_3.ap(none_type_0)
    var_5 = var_3.ap(maybe_0)
    maybe_0.ap(var_1)


def test_case_16():
    str_0 = "/-cPX]:`C"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(bool_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = True
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)


def test_case_19():
    int_0 = 1
    set_0 = {int_0}
    maybe_0 = module_0.Maybe(set_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_1.map(var_1)
    bool_0 = var_0.__eq__(int_0)
    bool_1 = var_0.__eq__(maybe_0)
    var_5 = var_4.to_box()
    var_2.get_or_else(maybe_0)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.to_box()


def test_case_21():
    int_0 = 274
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.bind(int_0)


def test_case_22():
    bytes_0 = b"Z\xd5\xdb\xc7U\x92\xa66fQv\x8d\xe7\xdc\xf9\xce{\xbc\x87"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_box()
    var_1.map(none_type_0)
