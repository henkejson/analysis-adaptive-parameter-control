# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_1, maybe_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.get_or_else(none_type_0)
    maybe_0.map(var_0)


def test_case_3():
    int_0 = -126
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    complex_0 = 2971.2 + 2273.9j
    var_0 = maybe_1.get_or_else(complex_0)
    maybe_2 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.to_validation()


def test_case_4():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(set_0)


def test_case_5():
    int_0 = -126
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_0.map(none_type_0)


def test_case_6():
    none_type_0 = None
    float_0 = -123.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_0.to_either()
    var_4 = var_0.bind(var_2)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_2.bind(var_1)


def test_case_7():
    str_0 = "\n        Take function and applied this function on current Validation value and returns folder result.\n\n        :param mapper: mapper function\n        :type mapper: Function(A) -> Validation[B, E]\n        :returns: new Validation with mapped value\n        :rtype: Validation[B, E]\n        "
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(str_0)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.bind(none_type_0)
    var_3 = var_2.bind(var_1)
    var_4 = maybe_0.filter(bool_0)
    var_5 = var_4.ap(none_type_1)
    var_6 = var_5.to_validation()
    bool_1.to_box()


def test_case_9():
    int_0 = 1235
    maybe_0 = module_0.Maybe(int_0, int_0)
    tuple_0 = ()
    bool_0 = maybe_0.__eq__(int_0)
    str_0 = ")ZH4{`[\t"
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    maybe_2 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_0.get_or_else(maybe_2)
    bool_1 = True
    maybe_3 = module_0.Maybe(var_1, bool_1)
    var_2 = maybe_1.to_validation()
    bool_2 = True
    maybe_4 = module_0.Maybe(bool_0, bool_2)
    var_3 = var_0.to_lazy()
    var_4 = var_2.to_either()
    maybe_5 = module_0.Maybe(var_3, bool_1)
    var_5 = maybe_1.ap(maybe_0)
    var_6 = maybe_1.to_validation()
    var_7 = maybe_5.to_either()
    var_8 = var_2.to_try()
    var_9 = var_7.to_validation()
    maybe_2.filter(tuple_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)


def test_case_11():
    set_0 = set()
    int_0 = 1235
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.filter(set_0)


def test_case_12():
    int_0 = -126
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    bool_2 = True
    bool_3 = maybe_0.__eq__(bool_2)
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_0 = maybe_2.get_or_else(none_type_0)
    bool_4 = False
    maybe_3 = module_0.Maybe(bool_1, bool_4)
    var_0.to_validation()


def test_case_13():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(set_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    set_0 = set()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    maybe_1.filter(set_0)


def test_case_16():
    int_0 = -126
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.to_box()
    maybe_0.map(var_0)


def test_case_17():
    str_0 = "'dM3+cQd|9;5+I"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()


def test_case_19():
    float_0 = 2700.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_20():
    int_0 = 5
    float_0 = -331.5196
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.map(int_0)


def test_case_21():
    none_type_0 = None
    float_0 = -123.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_22():
    int_0 = -126
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_0 = maybe_1.get_or_else(int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    bool_1 = True
    maybe_3 = module_0.Maybe(var_2, bool_1)
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_3.to_either()
    var_5 = maybe_1.to_try()
    var_6 = maybe_3.to_validation()
    var_0.filter(var_6)


def test_case_23():
    int_0 = 1235
    maybe_0 = module_0.Maybe(int_0, int_0)
    float_0 = -909.0
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, float_0)
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_2.get_or_else(maybe_1)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.bind(maybe_1)
    var_3 = var_2.filter(float_0)
    var_4 = var_3.to_either()
    var_5 = var_4.to_lazy()
    var_6 = var_2.to_either()
    var_7 = var_4.to_try()
    var_7.to_validation()


def test_case_24():
    int_0 = 1235
    maybe_0 = module_0.Maybe(int_0, int_0)
    tuple_0 = ()
    bool_0 = maybe_0.__eq__(int_0)
    str_0 = ")ZH4{`[\t"
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_0.get_or_else(maybe_2)
    bool_2 = False
    maybe_3 = module_0.Maybe(var_1, bool_2)
    var_2 = maybe_1.to_validation()
    var_3 = maybe_3.to_box()
    var_4 = maybe_2.to_lazy()
    var_5 = var_1.to_either()
    bool_3 = True
    maybe_4 = module_0.Maybe(maybe_0, bool_1)
    var_6 = maybe_1.to_try()
    bool_4 = var_0.__eq__(maybe_2)
    var_7 = var_5.to_validation()
    var_8 = maybe_0.bind(var_4)
    bool_5 = var_5.__eq__(bool_3)
    var_1.filter(maybe_4)
