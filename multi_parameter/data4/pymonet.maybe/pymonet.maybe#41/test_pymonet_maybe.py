# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    str_0 = "+aipxC>7&*>^"
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(str_0)
    bool_3 = var_0.__eq__(bool_0)
    maybe_0.filter(maybe_0)


def test_case_3():
    str_0 = "xai\x0b{~/ms%I;@z"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    bool_0 = True
    bool_1 = var_0.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.to_validation()


def test_case_4():
    none_type_0 = None
    dict_0 = {}
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(dict_0)


def test_case_5():
    str_0 = "xai\x0b{~/ms%I;@z"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    bool_0 = True
    bool_1 = var_0.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_1.bind(maybe_1)
    var_0.filter(var_3)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.to_box()


def test_case_7():
    int_0 = 2476
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_8():
    str_0 = "xai\x0b{~/ms%I;@z"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    bool_0 = var_0.__eq__(var_2)
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.filter(var_0)
    var_0.bind(var_4)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_0.filter(bool_1)


def test_case_10():
    int_0 = 713
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.to_validation()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_12():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_2 = var_1.bind(dict_0)
    var_3 = maybe_0.get_or_else(var_1)
    bool_1 = False
    bool_2 = True
    var_4 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(var_4, bool_2)
    var_5 = maybe_0.bind(bool_1)
    var_6 = maybe_0.filter(var_0)
    var_7 = var_5.bind(var_4)
    var_1.to_either()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    bool_1 = True
    var_1 = maybe_0.to_validation()
    str_0 = "+aipxC>7&*>^"
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(str_0)
    maybe_0.filter(maybe_0)


def test_case_14():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    str_0 = "\n?"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_0.filter(bool_1)


def test_case_19():
    str_0 = 'E9T";vM0 VmBe'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.to_try()
    maybe_0.bind(var_3)


def test_case_20():
    bytes_0 = b"\xa5\xc2\x1b\x94\xc6\xa1[\x02\x07S\x99\x1b=\xc5U.]W\xfb"
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = maybe_0.ap(var_2)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_4 = maybe_1.to_try()
    var_5 = var_0.bind(var_3)
    bool_1 = var_0.__eq__(var_3)
    var_6 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_3)
    var_7 = maybe_0.get_or_else(var_4)
    var_8 = var_7.map(var_6)
    var_4.to_lazy()


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    bool_1 = var_2.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_1.to_lazy()
    complex_0 = 908.149185 - 1941.439949j
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_2.__eq__(maybe_2)
    maybe_2.ap(complex_0)


def test_case_22():
    bytes_0 = b"\xa5\xc2\x1b\x94\xc6\xa1[\x02\x07S\x99\x1b=\xc5U.]W\xfb"
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = maybe_0.ap(var_2)
    var_4 = var_3.bind(var_3)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_5 = maybe_0.get_or_else(bytes_0)
    var_6 = maybe_1.to_try()
    bool_2 = var_0.__eq__(bool_1)
    var_7 = maybe_0.to_lazy()
    bool_3 = maybe_0.__eq__(var_3)
    var_8 = var_3.map(bool_0)
    var_9 = maybe_1.to_lazy()
    var_10 = maybe_1.to_either()
    var_11 = var_9.to_either()
    maybe_2 = module_0.Maybe(var_10, var_9)
    bool_4 = True
    maybe_3 = module_0.Maybe(bytes_0, bool_4)
    var_12 = var_6.get_or_else(maybe_3)
    var_12.to_box()


def test_case_23():
    bytes_0 = b"\xa5\xc2\x1b\x94\xc6\xa1[\x02\x07S\x99\x1b=\xc5U.]W\xfb"
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = maybe_0.ap(var_2)
    var_4 = var_3.bind(var_3)
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    var_5 = maybe_1.to_try()
    bool_1 = var_0.__eq__(var_0)
    var_6 = maybe_0.to_lazy()
    bool_2 = maybe_0.__eq__(var_3)
    var_7 = var_4.get_or_else(var_5)
    var_8 = var_4.to_lazy()
    var_9 = var_8.to_try()
    var_10 = var_2.to_either()
    bool_3 = var_4.__eq__(var_5)
    bool_4 = var_4.__eq__(maybe_1)
    var_7.to_box()
