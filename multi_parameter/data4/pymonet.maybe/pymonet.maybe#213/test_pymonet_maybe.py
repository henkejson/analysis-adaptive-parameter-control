# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_0.to_either()


def test_case_3():
    bytes_0 = b"\xd4_\xcb"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_4():
    float_0 = 961.708945
    str_0 = ']?@rC4R!5"'
    bool_0 = True
    tuple_0 = (float_0, str_0, str_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.get_or_else(maybe_0)
    var_3 = var_2.filter(bool_0)
    bool_1 = var_3.__eq__(tuple_0)
    var_4 = maybe_0.to_box()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    int_0 = 500
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.get_or_else(var_1)
    maybe_1 = module_0.Maybe(int_0, int_0)


def test_case_7():
    bytes_0 = b"\xd4_\xcb"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"wv\x1e\x11\x11\xab.\x1a\xa6\xc1{\x02"
    float_0 = -3715.2
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(bytes_0)


def test_case_10():
    int_0 = 500
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    var_1 = maybe_0.get_or_else(none_type_0)


def test_case_11():
    complex_0 = -4008.4746 + 963j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    none_type_0 = None
    str_0 = "\x0ct}c[sP\t:caf-h\tUW5"
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(set_0)


def test_case_12():
    bytes_0 = b"}S|\x17\xd0\xf9"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_box()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.map(bool_0)


def test_case_14():
    bytes_0 = b"\xe6\xbb*#"
    tuple_0 = (bytes_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_validation()
    var_0.to_either()


def test_case_16():
    bytes_0 = b""
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_17():
    float_0 = 961.708945
    str_0 = ']?@rC4R!5"'
    bool_0 = True
    tuple_0 = (float_0, str_0, str_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_1.map(bool_0)
    var_3 = var_2.get_or_else(maybe_0)
    var_4 = var_3.filter(var_0)
    bool_1 = var_0.to_try()
    var_5 = maybe_0.to_box()
    var_6 = var_5.to_either()


def test_case_18():
    str_0 = 'Af2tPi+_6\x0c|K+;S}"q'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_19():
    int_0 = 2821
    str_0 = 'Af2A1+_6A+|K+;S*}"q'
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    var_0 = maybe_0.map(bool_0)
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(int_0)
    var_2 = maybe_0.filter(str_0)
    var_3 = maybe_0.filter(int_0)
    var_4 = var_3.filter(var_1)
    var_5 = var_0.to_either()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_6 = var_3.map(var_1)
    var_7 = var_6.map(var_5)
    var_8 = var_2.bind(var_5)
    bool_2 = maybe_1.__eq__(var_0)
    var_5.filter(var_1)


def test_case_20():
    str_0 = 'Af2A1+_6A+|K+;S*}"q'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.filter(maybe_0)
