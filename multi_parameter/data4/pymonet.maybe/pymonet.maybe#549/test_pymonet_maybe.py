# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -3006.947
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "("
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_1)
    var_0.bind(var_0)


def test_case_3():
    int_0 = 775
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_either()


def test_case_4():
    set_0 = set()
    tuple_0 = (set_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    maybe_0.map(tuple_0)


def test_case_5():
    int_0 = 0
    dict_0 = {int_0: int_0}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(dict_0)
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    str_0 = "$P?+TQ\t0oP"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(bool_0)
    bytes_0 = b"\xcc\xe6\xce\xe2\t\xb4"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.to_lazy()
    var_2.to_lazy()


def test_case_8():
    str_0 = "\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        "
    bool_0 = False
    float_0 = 1626.2533
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(float_0, float_0)
    maybe_2 = module_0.Maybe(str_0, bool_0)
    maybe_2.ap(float_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(var_1)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.get_or_else(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.map(none_type_0)


def test_case_12():
    none_type_0 = None
    bytes_0 = b'\x1a\x16)"\xe6\x0e\xeb\xde\xb7[C\xdd\x15\xbd\xbdv3\xb7'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.get_or_else(none_type_0)


def test_case_13():
    int_0 = -1143
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, var_0)
    var_2 = maybe_0.to_either()
    var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(var_0)


def test_case_16():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    str_0 = ""
    list_0 = [str_0, str_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    float_0 = 932.06
    none_type_1 = None
    maybe_2 = module_0.Maybe(float_0, none_type_1)
    maybe_2.bind(var_1)


def test_case_18():
    bytes_0 = b"\x8e\xa3"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_box()
    var_2.ap(bytes_0)


def test_case_19():
    str_0 = "yK*G"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(str_0)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.ap(var_1)
    var_4 = var_1.bind(var_1)


def test_case_20():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_try()
    maybe_2 = module_0.Maybe(bool_1, maybe_1)
    var_3 = var_1.to_box()
    var_4 = maybe_1.ap(var_1)
    var_5 = maybe_0.filter(var_3)
    var_6 = var_3.to_either()
    var_7 = var_1.get_or_else(var_4)
    var_8 = var_7.ap(var_4)
    var_9 = maybe_1.to_validation()
    var_10 = var_1.to_box()
    var_11 = var_7.filter(var_8)
    var_12 = var_5.ap(var_1)
    bool_2 = maybe_2.__eq__(var_12)
    bool_3 = maybe_1.__eq__(var_9)
    var_13 = var_11.bind(var_3)
    var_14 = var_6.to_box()
    var_15 = var_13.get_or_else(var_2)
    var_9.map(var_6)
