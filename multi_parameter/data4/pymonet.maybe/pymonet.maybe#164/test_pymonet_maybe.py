# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2.to_box()


def test_case_3():
    bytes_0 = b"4A\xe1;\xc5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.ap(bytes_0)


def test_case_4():
    float_0 = -2584.592174
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(bool_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_1.filter(none_type_0)
    var_3 = maybe_1.to_try()
    var_4 = var_2.ap(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_5 = maybe_2.filter(none_type_0)
    var_6 = maybe_2.to_validation()
    var_7 = var_5.to_try()
    var_8 = maybe_2.to_lazy()
    var_9 = maybe_2.filter(var_7)


def test_case_6():
    int_0 = -2296
    tuple_0 = (int_0,)
    tuple_1 = (tuple_0,)
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.bind(tuple_1)


def test_case_7():
    bool_0 = True
    bytes_0 = b"F\xd3\x8f\xcd8\xa0RY\n\xcbV\xbc]F\xb2"
    bool_1 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_validation()


def test_case_8():
    str_0 = "Lazy[fn={}, value={}, is_evaluated={}]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = -456
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    str_0 = '\t^/km~l@,qp"R\n:s'
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.filter(int_0)
    var_2 = maybe_0.get_or_else(maybe_1)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.ap(maybe_0)


def test_case_10():
    str_0 = "x8|atXb}"
    int_0 = -282
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(str_0)


def test_case_11():
    complex_0 = -4526.46 + 1282j
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(complex_0)


def test_case_12():
    int_0 = -456
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    str_0 = '\t^/km~l@,qp"R\n:s'
    maybe_1 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_1.to_either()
    var_1 = maybe_0.get_or_else(maybe_1)
    var_2 = maybe_1.ap(maybe_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bytes_0 = b"\x07\xdb6\x0f\xd4\xf7p\x0f\xf7\xe3\xf8"
    list_0 = []
    var_1 = maybe_0.to_box()
    none_type_1 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_2 = maybe_1.to_try()
    var_3 = var_2.get_or_else(list_0)
    var_3.get_or_else(bytes_0)


def test_case_14():
    bytes_0 = b"4A\xe1;\xc5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = maybe_0.get_or_else(bool_0)
    var_2.get_or_else(bool_0)


def test_case_15():
    bytes_0 = b"\x134\xa5\xd7'\xa2\xb6\x02"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_16():
    bytes_0 = b".\x7f\xf2TH]\x84\x1d\x8d\xa4\xdf784\xca\xe0,\xcd\xa3\xeb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    tuple_0 = (bytes_0, maybe_0, maybe_0)
    int_0 = -1432
    maybe_1 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    var_1 = maybe_1.ap(none_type_0)
    bool_0 = maybe_1.__eq__(maybe_0)
    bool_1 = False
    var_2 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_2.__eq__(var_2)
    var_3 = maybe_2.to_validation()
    var_3.bind(maybe_1)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_1.filter(none_type_0)
    var_3 = maybe_1.to_try()
    var_4 = var_2.ap(maybe_1)
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_5 = maybe_2.filter(none_type_0)
    var_6 = maybe_2.to_validation()
    var_7 = var_5.to_try()
    var_8 = maybe_2.to_lazy()
    var_9 = maybe_2.get_or_else(bool_0)
    var_10 = var_8.to_either()
    var_11 = maybe_2.to_validation()


def test_case_18():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.filter(none_type_0)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.filter(var_0)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.ap(var_1)
    bool_1 = maybe_1.__eq__(var_1)
    dict_0 = {none_type_0: var_0}
    maybe_2 = module_0.Maybe(dict_0, var_3)
    var_0.filter(var_0)
