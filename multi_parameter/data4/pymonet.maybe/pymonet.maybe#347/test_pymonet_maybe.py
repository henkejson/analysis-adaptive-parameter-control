# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    str_0 = "`U7i9Q\x0b\t\x0coHCL1{%:cAm"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.bind(var_0)
    var_3 = var_2.filter(var_0)
    bool_0 = maybe_0.__eq__(var_1)


def test_case_4():
    str_0 = ')"CXG\\FZ)#j^p'
    none_type_0 = None
    bytes_0 = b"D\x06\xfa\x12P%\x11\xc5xR\x15@I\x0f\xdfu"
    maybe_0 = module_0.Maybe(bytes_0, str_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.filter(str_0)
    var_2 = var_1.to_lazy()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.to_either()
    maybe_1.map(none_type_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    maybe_1.bind(var_0)


def test_case_7():
    generic_0 = module_1.Generic()
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_1 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_1)
    var_0 = maybe_0.ap(generic_0)


def test_case_8():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(tuple_0)


def test_case_9():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.ap(var_0)
    var_3 = var_2.map(bool_0)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1.filter(var_0)


def test_case_10():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(tuple_0)
    var_3 = var_0.to_box()
    var_4 = var_0.get_or_else(var_2)
    bool_2 = var_1.__eq__(maybe_0)


def test_case_11():
    object_0 = module_2.object()
    float_0 = -2182.01
    int_0 = 1
    bytes_0 = b"\x89\x10\xcfL\xc1\xc1\xba\\!\x1b\xebr\xa3I\x83+\xfa\xb0"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    var_0.filter(float_0)


def test_case_12():
    bytes_0 = b"\x13\xeaE\xb7o\x1d\x89{\xb7jL\xc8"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, list_0)
    var_1 = maybe_1.to_validation()
    var_1.to_validation()


def test_case_13():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.to_validation()
    var_2 = var_0.filter(tuple_0)
    var_3 = var_0.to_box()
    var_4 = var_0.filter(var_2)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_15():
    str_0 = ";jgiLIJ}1*t\t0<UW1u"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_16():
    bytes_0 = b"\xe1\x81\xbf:]\xac\xfcI\x9d\xe8\xdd\x8a5-Y"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.ap(bytes_0)


def test_case_17():
    bytes_0 = b"u\xa5-\x07"
    tuple_0 = (bytes_0,)
    maybe_0 = module_0.Maybe(tuple_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    str_0 = ')"CXG\\FZ)=#j^p'
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, str_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_lazy()
    var_1.to_validation()


def test_case_21():
    tuple_0 = ()
    tuple_0.to_box()


def test_case_22():
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.map(none_type_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_2)
    bool_3 = var_0.__eq__(maybe_1)
    var_2 = maybe_1.to_box()
    var_3 = var_0.bind(bool_1)
    var_4 = var_3.ap(dict_0)
    var_5 = var_2.to_validation()
    var_6 = var_4.filter(var_3)
    var_7 = var_6.ap(var_3)
    var_8 = var_7.to_box()
    var_9 = var_3.to_box()
    var_10 = var_9.to_either()
    maybe_2 = module_0.Maybe(var_6, bool_3)
    var_11 = var_0.filter(var_7)
