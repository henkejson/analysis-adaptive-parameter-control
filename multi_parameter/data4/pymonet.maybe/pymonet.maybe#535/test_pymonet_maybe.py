# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.ap(bool_0)
    bool_1 = var_1.__eq__(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    maybe_1.filter(bool_0)


def test_case_3():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    object_0 = module_1.object()
    var_0 = maybe_0.get_or_else(object_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_box()
    var_1.get_or_else(maybe_0)


def test_case_4():
    int_0 = -1838
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    int_1 = -2283
    var_0 = maybe_0.bind(int_0)
    bool_1 = maybe_0.__eq__(int_0)
    dict_0 = {int_1: maybe_0}
    bool_2 = maybe_0.__eq__(dict_0)
    bool_3 = set_0.__eq__(int_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.map(set_0)
    var_2.to_either()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.to_box()
    var_4 = maybe_0.filter(var_1)
    var_5 = var_4.to_box()
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    maybe_1.filter(var_4)


def test_case_7():
    float_0 = 1169.1915
    tuple_0 = (float_0,)
    bytes_0 = b"\xf6\xe8\x10\xc8("
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(tuple_0)


def test_case_8():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    object_0 = module_1.object()
    bool_1 = False
    maybe_0 = module_0.Maybe(object_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_10():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_12():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.to_box()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_1 = maybe_1.to_validation()
    var_1.get_or_else(var_0)


def test_case_14():
    int_0 = 1
    float_0 = 687.96
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(var_1, var_0)
    var_2 = maybe_1.ap(int_0)
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_16():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    bool_2 = var_1.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.filter(bool_0)


def test_case_17():
    bytes_0 = b"\x19=a\x1d:"
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_1.bind(bytes_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.to_box()
    var_4 = var_2.to_validation()
    var_5 = maybe_0.filter(var_1)
    var_6 = var_0.to_try()
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    var_7 = var_5.to_lazy()
    maybe_1.filter(var_5)


def test_case_19():
    bytes_0 = b"\x90\xb8\x86\xc5\x03h\xf6\xc8\x05w\x801j="
    int_0 = -1729
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.get_or_else(bytes_0)


def test_case_20():
    complex_0 = -631.024 - 3015.5989j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()


def test_case_21():
    int_0 = 0
    str_0 = "IRjr.jkq+:"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.filter(int_0)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.ap(bool_0)
    var_3 = var_2.to_box()
    var_4 = var_2.to_validation()
    var_5 = maybe_0.filter(var_1)
    var_6 = var_5.to_box()
    maybe_1 = module_0.Maybe(var_3, none_type_0)
    maybe_1.filter(var_5)


def test_case_23():
    int_0 = 1382
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.ap(none_type_0)
    var_4 = var_0.ap(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_5 = var_0.ap(int_0)
    bool_1 = var_0.__eq__(var_0)
    var_6 = var_3.to_box()
    var_7 = var_0.to_try()
    var_8 = var_0.to_lazy()
    var_9 = var_0.filter(maybe_1)
    var_10 = var_8.to_box()
    bool_2 = var_9.__eq__(var_5)
    var_11 = var_2.to_either()


def test_case_24():
    none_type_0 = None
    bytes_0 = b"\x8f\x02\xb6\xc9\x059O\xf18|'\xe4\xce\x12"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.ap(bool_0)
    var_4 = var_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(var_3, var_3)
    var_5 = maybe_1.ap(bool_0)
    var_6 = var_3.filter(var_4)
    bool_1 = maybe_1.__eq__(var_6)
    var_7 = var_6.to_box()
    var_2.filter(var_1)


def test_case_25():
    int_0 = 1382
    none_type_0 = None
    bytes_0 = b"\x8f\x02\xb6\xc9\x059O\xf18|'\xe4\xce\x12"
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_validation()
    var_3 = var_0.ap(none_type_0)
    var_4 = var_0.ap(var_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_5 = var_0.ap(int_0)
    var_6 = maybe_0.filter(var_3)
    bool_1 = var_0.__eq__(var_0)
    var_7 = var_6.to_box()
    var_8 = maybe_0.filter(bytes_0)
    var_9 = var_0.to_try()
    var_10 = var_8.to_lazy()
    var_11 = module_0.Maybe(var_7, none_type_0)
    var_12 = var_3.map(var_5)
    var_13 = var_12.to_try()
    var_14 = maybe_1.filter(none_type_0)
    var_15 = var_5.to_try()
    var_16 = var_14.to_either()
    var_17 = maybe_1.to_validation()
    var_18 = var_17.to_try()
    var_19 = var_0.to_box()
    bool_2 = var_11.__eq__(var_11)
    var_20 = var_0.to_box()
    var_21 = var_6.get_or_else(var_11)
