# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_validation()
    bool_3 = maybe_1.__eq__(var_0)
    bool_4 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_1.to_lazy()


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.get_or_else(bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_either()


def test_case_4():
    str_0 = "!I%R7n9\tI$OCP\x0b@G^Fl"
    list_0 = []
    tuple_0 = (str_0, list_0)
    maybe_0 = module_0.Maybe(str_0, tuple_0)
    var_0 = maybe_0.map(list_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_0.filter(maybe_0)
    var_3 = maybe_0.to_either()
    maybe_1.filter(var_2)


def test_case_5():
    bytes_0 = b"\xe6\x03\xe0\x1e\xaf^\x17B\x06\x8edtd\xf4\xfb\xac\xfeH\xec"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_1 = maybe_0.to_lazy()
    maybe_1.map(var_1)


def test_case_6():
    bool_0 = False
    object_0 = module_1.object()
    bool_1 = True
    maybe_0 = module_0.Maybe(object_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_try()
    var_2 = var_1.map(maybe_0)
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.bind(var_3)
    var_5 = maybe_0.ap(bool_0)


def test_case_7():
    float_0 = 27.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    bool_0 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.to_try()
    bool_1 = False
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_3 = maybe_2.to_lazy()
    var_4 = maybe_2.to_lazy()
    var_5 = var_1.filter(var_4)
    maybe_2.bind(var_2)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_try()
    var_1.to_try()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    complex_0 = -1541.49518 - 3328.55j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(complex_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(complex_0, bool_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_1.to_try()


def test_case_11():
    str_0 = "!I%R7n9\tI$OCP\x0b@G^Fl"
    list_0 = []
    tuple_0 = (str_0, list_0)
    maybe_0 = module_0.Maybe(str_0, tuple_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_either()
    maybe_1.filter(var_1)


def test_case_12():
    int_0 = -1194
    int_1 = 844
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_1, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_1.bind(int_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()


def test_case_14():
    str_0 = "!I%R7n9\tI$OCP\x0b@G^Fl"
    list_0 = []
    tuple_0 = (str_0, list_0)
    maybe_0 = module_0.Maybe(str_0, tuple_0)
    var_0 = maybe_0.map(list_0)
    bool_0 = False
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_2 = var_0.to_lazy()
    var_3 = maybe_1.to_lazy()
    var_4 = maybe_0.filter(var_2)
    var_5 = maybe_0.bind(var_2)
    var_6 = var_2.ap(var_0)
    var_7 = maybe_1.to_either()
    var_8 = maybe_1.to_either()


def test_case_15():
    complex_0 = -1546.8154 - 1738.68159j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_validation()
    var_4 = var_1.to_either()
    var_5 = var_4.to_validation()
    var_4.bind(var_4)


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_try()
    var_0.map(none_type_0)


def test_case_17():
    float_0 = 27.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    bool_0 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.map(var_0)
    var_0.map(maybe_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = var_0.bind(var_0)
    var_3.to_either()


def test_case_19():
    float_0 = 27.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(float_0, float_0)
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_1 = maybe_2.to_box()
    var_2 = maybe_1.ap(maybe_2)
    var_3 = maybe_2.map(var_2)
    bool_0 = maybe_2.__eq__(maybe_2)
    var_4 = maybe_2.map(var_1)
    var_5 = var_4.to_try()
    bool_1 = False
    maybe_3 = module_0.Maybe(var_1, bool_1)
    maybe_4 = module_0.Maybe(maybe_3, maybe_3)
    var_6 = maybe_3.to_lazy()
    var_7 = var_6.to_either()
    var_8 = var_4.filter(var_7)
    maybe_3.bind(var_5)


def test_case_20():
    str_0 = "!I%R7n9\tI$OCP\x0b@G^Fl"
    list_0 = []
    tuple_0 = (str_0, list_0)
    maybe_0 = module_0.Maybe(str_0, tuple_0)
    var_0 = maybe_0.map(list_0)
    none_type_0 = None
    var_1 = var_0.to_validation()
    bool_0 = maybe_0.__eq__(str_0)
    var_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = var_1.to_lazy()
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.filter(var_3)
    var_6 = var_4.bind(var_1)
    var_7 = var_3.to_either()
    var_8 = var_3.ap(var_4)
    var_9 = var_4.to_box()
    var_10 = maybe_0.filter(var_2)
    bool_1 = maybe_0.__eq__(var_10)
