# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    set_0 = set()
    float_0 = -2327.332
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_try()
    bool_0 = maybe_1.__eq__(set_0)
    var_1 = maybe_1.bind(float_0)
    var_2 = var_1.to_validation()
    var_3 = var_0.bind(var_0)
    var_4 = maybe_0.to_validation()
    bool_1 = var_0.__eq__(set_0)
    var_5 = maybe_1.get_or_else(bool_1)
    var_0.to_lazy()


def test_case_3():
    str_0 = "1lj4KTY{6Xz\rlz\rWr("
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.get_or_else(str_0)
    var_0.filter(var_2)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    bytes_0 = b"\x91I\x13D\x07\xcc"
    bytes_1 = b"\xd6[v\xe3\xf7\x9e\x03\x1c\x03\xbf\xb6&\xde\xee\xce\xe8\xf4"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_1, bool_1)
    maybe_1.map(bytes_0)


def test_case_5():
    bytes_0 = b"J\xb96\xb1\x98J\xb6"
    int_0 = -724
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)


def test_case_6():
    int_0 = 2775
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.bind(int_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.ap(bool_0)


def test_case_8():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    list_0 = [tuple_1, tuple_1, tuple_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_try()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    tuple_0 = (maybe_0, maybe_0, bool_0)
    maybe_0.filter(tuple_0)


def test_case_11():
    none_type_0 = None
    float_0 = -318.4
    none_type_1 = None
    maybe_0 = module_0.Maybe(float_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_validation()


def test_case_12():
    none_type_0 = None
    int_0 = 2711
    dict_0 = {none_type_0: none_type_0, none_type_0: int_0, none_type_0: none_type_0}
    maybe_0 = module_0.Maybe(none_type_0, dict_0)
    var_0 = maybe_0.to_either()
    int_1 = 1107
    maybe_1 = module_0.Maybe(int_1, int_1)
    var_1 = maybe_1.to_box()
    var_1.filter(var_0)


def test_case_13():
    str_0 = "rz(V"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_box()
    var_0.map(var_0)


def test_case_14():
    int_0 = -4915
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.filter(bool_0)


def test_case_16():
    bytes_0 = b"\xe3\xfd<\xc9\xd6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_0.to_lazy()


def test_case_17():
    str_0 = ",\n!o=\tL-/l)m!+"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(str_0)
    var_0.filter(var_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_20():
    int_0 = -321
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(bool_0)
    var_4 = var_2.to_try()
    var_5 = var_2.to_try()
    var_4.to_either()


def test_case_21():
    int_0 = 1331
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_3.to_box()


def test_case_22():
    float_0 = -2327.332
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.bind(float_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.to_either()
    bool_1 = maybe_0.__eq__(var_1)
    var_4 = var_3.to_validation()
    module_1.object(*var_3, **var_4)


def test_case_23():
    int_0 = -321
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_box()
    maybe_0.filter(bool_0)
