# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    int_0 = -390
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_2 = maybe_1.map(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_2.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    bool_3 = maybe_2.__eq__(bool_2)


def test_case_3():
    str_0 = "\\q\nJrp"
    set_0 = {str_0}
    generic_0 = module_1.Generic()
    int_0 = -2167
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(generic_0)
    bool_0 = var_0.__eq__(set_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    int_0 = -1245
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1 = module_0.Maybe(maybe_0, none_type_1)
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_0 = maybe_2.bind(int_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.map(none_type_0)


def test_case_7():
    dict_0 = {}
    object_0 = module_2.object(**dict_0)
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_1 = module_0.Maybe(object_0, bool_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_0 = maybe_2.to_try()
    var_1 = maybe_0.to_either()
    bool_3 = maybe_1.__eq__(dict_0)
    maybe_1.bind(var_0)


def test_case_8():
    str_0 = "\n        Returns True when errors list are empty.\n\n        :returns: True for empty errors list\n        :rtype: Boolean\n        "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_0.ap(var_1)
    var_1.to_either()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_0.filter(bool_0)
    var_4 = maybe_0.bind(bool_1)
    var_5 = var_3.to_try()
    var_6 = var_3.to_either()
    bool_0.to_lazy()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_12():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_2 = module_0.Maybe(maybe_1, maybe_0)
    maybe_3 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_3.get_or_else(none_type_0)
    var_3 = var_0.to_either()
    bool_2 = maybe_2.__eq__(maybe_2)
    var_4 = var_3.to_box()
    var_1.to_either()


def test_case_13():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_1.map(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_4 = maybe_2.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    bool_3 = maybe_2.__eq__(bool_2)


def test_case_14():
    int_0 = -2215
    list_0 = [int_0]
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(list_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_validation()


def test_case_15():
    none_type_0 = None
    int_0 = 3242
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(var_0)


def test_case_17():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(bool_0)


def test_case_19():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.map(var_2)


def test_case_20():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_2 = maybe_1.map(maybe_1)
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    bool_2 = maybe_0.__eq__(maybe_2)
    var_3 = maybe_0.to_validation()
    maybe_0.filter(bool_0)


def test_case_21():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    bool_0 = True
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_1.map(maybe_1)
    bool_2 = var_3.__eq__(maybe_1)
    var_4 = maybe_1.to_try()
    bool_3 = maybe_0.__eq__(bool_1)
    bool_4 = var_3.__eq__(bool_1)
