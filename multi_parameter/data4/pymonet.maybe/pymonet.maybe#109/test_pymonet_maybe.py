# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "[uk/.@Q"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(var_2)
    var_3 = maybe_0.to_try()


def test_case_3():
    list_0 = []
    none_type_0 = None
    generic_0 = module_1.Generic(*list_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.map(list_0)
    bool_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.ap(generic_0)
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.bind(var_3)
    var_5 = var_1.to_validation()
    var_6 = maybe_0.to_validation()
    var_5.ap(generic_0)


def test_case_4():
    bytes_0 = (
        b"\x1ap\x02\\\x18\xc5\xcd\xbf\x0f\xe7\xdbA\xc4\x94\x1c\x8f\x02\xbb\xbe\xdd"
    )
    int_0 = -276
    set_0 = {bytes_0, bytes_0, int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    maybe_1 = module_0.Maybe(set_0, bool_0)
    maybe_1.ap(maybe_1)


def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()
    var_4.to_validation()


def test_case_6():
    int_0 = 0
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_0.bind(none_type_0)


def test_case_7():
    generic_0 = module_1.Generic()
    dict_0 = {
        generic_0: generic_0,
        generic_0: generic_0,
        generic_0: generic_0,
        generic_0: generic_0,
    }
    str_0 = "'"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(dict_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.to_try()


def test_case_9():
    bytes_0 = b")-\x1dI\x87\xe5\xcd8\xd6,)\xb3\xa4y\x90\x10\xebP\xb7\x8a"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = var_1.to_either()
    var_3.to_either()


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_try()


def test_case_13():
    none_type_0 = None
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(none_type_0)


def test_case_14():
    bool_0 = False
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    str_0 = "@5eOQ>|8Dr@$"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = var_0.bind(none_type_0)
    var_2 = maybe_1.to_box()
    none_type_1 = None
    bool_1 = True
    maybe_2 = module_0.Maybe(none_type_1, bool_1)
    var_3 = maybe_2.to_lazy()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = var_1.get_or_else(bool_0)


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_try()
    var_0.to_lazy()


def test_case_18():
    list_0 = []
    none_type_0 = None
    generic_0 = module_1.Generic(*list_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.map(list_0)
    bool_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.ap(generic_0)
    var_3 = var_1.to_either()
    var_4 = var_0.to_lazy()
    var_5 = maybe_0.bind(var_4)
    var_6 = var_2.to_box()
    var_7 = var_3.to_validation()
    bool_2 = maybe_0.__eq__(var_2)
    var_8 = var_4.to_try()


def test_case_19():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.filter(list_0)
    var_1 = var_0.to_box()
    bool_1 = var_0.__eq__(maybe_1)
    var_2 = maybe_1.ap(bool_1)
    var_3 = maybe_0.to_lazy()
    var_4 = maybe_0.to_validation()
    bool_2 = var_4.__eq__(maybe_0)
    var_1.get_or_else(var_0)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_lazy()
    bool_2 = bool_1.__eq__(var_0)
    str_0 = "u"
    bool_3 = False
    maybe_2 = module_0.Maybe(str_0, str_0)
    maybe_3 = module_0.Maybe(str_0, bool_3)
    bool_4 = maybe_3.__eq__(maybe_3)
    bool_4.to_lazy()
