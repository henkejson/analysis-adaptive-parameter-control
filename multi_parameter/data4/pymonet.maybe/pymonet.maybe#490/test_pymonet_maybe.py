# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    int_0 = -1928
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = var_1.to_validation()
    var_4 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_5():
    bytes_0 = b"\xbc\xeeec"
    bytes_1 = b"i\x8a[\xad\xb5@\x9f\xe8\xac"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.get_or_else(bytes_1)
    bytes_2 = b"$T"
    maybe_2 = module_0.Maybe(bytes_2, bytes_2)
    var_1 = maybe_2.bind(var_0)
    var_2 = var_1.get_or_else(bytes_0)


def test_case_6():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.filter(bool_0)
    var_4 = maybe_0.map(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = var_1.to_lazy()
    var_6 = var_3.to_validation()
    var_7 = maybe_1.to_lazy()
    var_8 = var_3.to_lazy()
    maybe_1.filter(var_5)


def test_case_8():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_0, bool_0, bool_1]
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_11():
    str_0 = "VOn\x0ch_ODoq"
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    var_2.map(str_0)


def test_case_12():
    bytes_0 = b"Y\xe5\xe9\x94UU\xa1\xd7\xc5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_1.to_validation()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_try()
    var_3 = var_1.to_either()
    var_1.to_box()


def test_case_15():
    int_0 = 102
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()


def test_case_17():
    none_type_0 = None
    str_0 = "\n9uy\x0bzD\x0c8?T`X2N K"
    none_type_1 = None
    maybe_0 = module_0.Maybe(str_0, none_type_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(none_type_0)
    var_3.to_either()


def test_case_18():
    bool_0 = False
    bytes_0 = b"\xc1\x92k\x08Q\xc6\xf5\x8b"
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.filter(bool_0)
    var_3 = maybe_0.map(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = var_2.to_validation()
    var_5 = maybe_1.to_lazy()
    maybe_1.filter(var_2)


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_box()
    bool_2 = var_0.__eq__(maybe_0)
    var_3 = var_0.to_box()
    var_4 = var_0.to_validation()
    var_5 = var_3.to_lazy()
    var_6 = var_3.to_validation()
    var_4.ap(var_2)


def test_case_21():
    float_0 = -6273.843653396462
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    str_0 = "^"
    maybe_1 = module_0.Maybe(str_0, maybe_0)
    var_3 = var_1.to_lazy()
    var_4 = var_3.ap(var_2)
    var_5 = maybe_1.bind(var_3)
    var_6 = var_2.to_validation()
    bool_1 = maybe_1.__eq__(var_5)
    var_7 = var_4.to_try()
    var_8 = maybe_0.to_box()
    var_9 = maybe_1.map(var_1)
    var_3.to_lazy()
