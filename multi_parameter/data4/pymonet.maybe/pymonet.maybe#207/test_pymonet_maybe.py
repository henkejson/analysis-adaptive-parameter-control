# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    int_0 = 25
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    float_0 = 879.32
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    bool_0 = var_0.__eq__(maybe_0)
    bool_1 = var_1.__eq__(var_2)
    var_3 = var_2.bind(var_0)
    var_4 = var_0.get_or_else(float_0)
    var_5 = var_3.bind(var_0)
    var_6 = var_1.to_box()


def test_case_3():
    bytes_0 = b"\xf1\xf5\xb9\x15\xf1C\xd9"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_0 = maybe_0.bind(set_0)
    maybe_1.ap(maybe_1)


def test_case_4():
    int_0 = -4721
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.get_or_else(int_0)
    var_1.to_box()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.bind(none_type_0)


def test_case_6():
    none_type_0 = None
    tuple_0 = ()
    int_0 = 135
    maybe_0 = module_0.Maybe(tuple_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.get_or_else(object_0)
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()
    var_3 = maybe_0.bind(var_0)
    var_4 = maybe_0.filter(var_1)
    var_5 = var_4.to_validation()
    var_2.to_validation()


def test_case_9():
    bytes_0 = b"\xd04\xd6\xe7\x06"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = False
    set_0 = {bool_0}
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.bind(set_0)
    var_1 = maybe_0.filter(set_0)
    maybe_1.filter(var_1)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    str_0 = 'ky29&"o3"tv'
    set_0 = {str_0}
    none_type_2 = None
    var_0 = maybe_1.to_either()
    var_1 = maybe_1.get_or_else(set_0)
    maybe_2 = module_0.Maybe(set_0, none_type_2)
    maybe_2.ap(set_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bytes_0 = b"\xc3\xf8\x87\xc8\xf1\x9f\xa5\xa1\xe4x"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_0.ap(maybe_1)
    var_2 = var_1.to_validation()
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.filter(var_1)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    none_type_1 = None
    bool_1 = True
    set_0 = {bool_1, bool_1}
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.bind(none_type_1)
    var_2 = var_1.bind(var_0)


def test_case_13():
    bytes_0 = b"U\xb5\xde\xf3v\xebH\xbe\xaf|\xe0,o\xbb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    str_0 = "\n        Returns first element of ImmutableList that passed\n        info argument returns True\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> bool\n        :returns: A\n        "
    float_0 = 1322.458991
    tuple_0 = (str_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_lazy()
    bool_1 = maybe_1.__eq__(bool_0)
    maybe_1.filter(tuple_0)


def test_case_15():
    float_0 = 879.32
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    bool_0 = var_1.__eq__(var_2)
    var_3 = maybe_0.ap(float_0)
    var_4 = var_2.bind(var_0)
    var_5 = var_0.get_or_else(float_0)
    bool_1 = var_2.__eq__(var_1)
    var_6 = var_4.bind(var_0)
    var_7 = var_1.to_try()


def test_case_16():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    bytes_0 = b"\xaa\xf2\x82\x8a4\xab\x84{C\xa9^VU"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    float_0 = 879.32
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = var_0.ap(maybe_0)
    var_3 = maybe_0.bind(bool_0)
    var_4 = var_0.get_or_else(var_0)
    bool_1 = maybe_0.__eq__(var_4)
    var_5 = var_3.bind(var_4)
    bool_2 = var_5.__eq__(var_4)
    bool_3 = False
    maybe_1 = module_0.Maybe(var_1, bool_3)
    var_6 = var_3.filter(var_4)


def test_case_20():
    int_0 = 25
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, int_0)
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_2.map(var_1)
    var_3 = var_2.filter(var_0)
    maybe_3 = module_0.Maybe(var_1, var_1)
    maybe_4 = module_0.Maybe(maybe_0, bool_0)
    var_4 = maybe_3.ap(maybe_4)
    var_5 = maybe_3.bind(maybe_0)
    none_type_0 = None
    var_6 = maybe_2.ap(var_4)
    var_7 = maybe_3.bind(none_type_0)
    var_8 = var_1.map(var_1)
    maybe_5 = module_0.Maybe(var_5, var_8)
    var_9 = var_4.map(var_4)
    var_10 = maybe_3.map(maybe_2)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_4.bind(var_6)


def test_case_21():
    int_0 = 25
    str_0 = ")\rIpgQvr{u}6!6Hs"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = maybe_0.to_lazy()
    var_1 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_2.map(var_1)
    var_3 = var_2.filter(var_0)
    maybe_3 = module_0.Maybe(str_0, str_0)
    maybe_4 = module_0.Maybe(str_0, int_0)
    var_4 = maybe_3.ap(maybe_4)
    var_5 = maybe_3.bind(str_0)
    none_type_0 = None
    var_6 = maybe_2.ap(var_4)
    var_7 = maybe_3.bind(none_type_0)
    var_8 = maybe_3.to_either()
    bool_1 = True
    maybe_5 = module_0.Maybe(var_1, bool_1)
    none_type_1 = None
    maybe_6 = module_0.Maybe(var_5, none_type_1)
    var_9 = var_4.map(var_4)
    bool_2 = var_4.__eq__(var_9)
    var_10 = maybe_3.bind(none_type_0)
    var_11 = var_4.get_or_else(var_10)
    maybe_6.map(bool_0)
