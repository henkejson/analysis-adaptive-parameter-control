# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(int_0)
    bool_0 = True
    tuple_0 = (bool_0, var_2)
    var_3 = var_2.bind(var_2)
    bool_1 = var_3.__eq__(tuple_0)
    var_4 = var_3.ap(int_0)
    var_5 = maybe_0.to_either()
    var_6 = var_4.filter(var_5)
    var_7 = var_5.to_try()
    var_8 = var_3.get_or_else(bool_0)
    var_9 = var_6.ap(int_0)
    var_10 = var_7.bind(var_8)


def test_case_3():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(int_0)
    var_3 = maybe_0.filter(var_1)
    var_4 = var_2.map(var_2)


def test_case_4():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(var_1)


def test_case_5():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.to_validation()
    var_2 = maybe_0.ap(int_0)
    var_3 = maybe_0.filter(var_1)
    var_4 = var_3.to_try()


def test_case_6():
    list_0 = []
    tuple_0 = (list_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(tuple_0)


def test_case_7():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.ap(bool_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    maybe_0.filter(var_1)


def test_case_9():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.get_or_else(maybe_0)
    int_1 = 397
    var_3 = maybe_0.filter(int_1)
    var_4 = var_3.to_try()


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(list_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_1.filter(var_1)


def test_case_11():
    bytes_0 = b"iTU\x18\xab\xe4\xb8\xed\xea\x9cb"
    int_0 = 8
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.filter(maybe_0)
    var_1.get_or_else(bytes_0)


def test_case_12():
    bytes_0 = b"\xe6"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_1.map(var_1)


def test_case_13():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    str_0 = "WJ_l\nOFc.l^]_"
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_0.ap(dict_0)


def test_case_14():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(int_0)
    int_1 = 397
    var_3 = maybe_0.filter(int_1)
    var_4 = var_3.to_try()


def test_case_15():
    int_0 = 1207
    int_1 = -2949
    set_0 = {int_1}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_2.filter(int_0)


def test_case_16():
    str_0 = "H)r\rwH\x0b?s=\\EA"
    set_0 = {str_0}
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(set_0)


def test_case_17():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.ap(int_0)
    bool_0 = var_0.__eq__(var_0)
    var_2 = var_1.ap(bool_0)
    var_3 = var_2.filter(var_1)
    var_4 = maybe_0.to_try()
    var_5 = var_2.get_or_else(var_3)
    var_6 = var_1.ap(int_0)
    var_7 = var_3.to_either()
    none_type_0 = None
    var_8 = var_3.map(none_type_0)
    var_9 = var_8.map(var_7)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.to_validation()
    var_0.bind(var_0)


def test_case_19():
    int_0 = 6513
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.ap(int_0)
    int_1 = 397
    bool_0 = var_0.__eq__(var_0)
    var_3 = var_2.ap(bool_0)
    var_4 = var_3.filter(var_2)
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    bool_1 = maybe_1.__eq__(var_0)
    var_5 = var_1.ap(bool_0)
    var_6 = var_0.to_either()
    var_7 = var_6.ap(int_1)
    var_8 = var_7.to_validation()
    var_9 = var_4.filter(var_8)
    bool_2 = var_5.__eq__(bool_0)
    var_10 = var_4.to_try()
    var_11 = maybe_0.bind(var_3)
