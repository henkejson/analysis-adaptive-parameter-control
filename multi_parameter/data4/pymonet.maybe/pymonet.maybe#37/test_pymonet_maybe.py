# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    int_0 = -1966
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(bool_0)
    var_2 = maybe_0.to_try()
    var_3 = var_1.ap(var_2)
    var_4 = maybe_0.bind(var_3)
    var_5 = var_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_6 = var_3.get_or_else(var_2)
    maybe_1.filter(maybe_1)


def test_case_3():
    int_0 = -1966
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.bind(maybe_0)
    var_3 = var_0.to_box()
    var_4 = var_3.ap(var_0)
    maybe_1 = module_0.Maybe(var_4, bool_0)
    var_5 = var_4.get_or_else(var_1)
    var_6 = var_1.get_or_else(var_4)
    maybe_1.filter(var_4)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.bind(var_1)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_6():
    int_0 = -1208
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.to_lazy()
    maybe_0.bind(var_1)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_try()


def test_case_8():
    int_0 = -1208
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_1.filter(none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_either()


def test_case_9():
    int_0 = -3273
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    bool_0 = False
    dict_0 = {generic_0: bool_0}
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(dict_0)
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = maybe_1.__eq__(int_0)
    maybe_2 = module_0.Maybe(bool_3, var_0)
    none_type_0 = None
    maybe_3 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_3.to_box()
    var_2 = maybe_1.to_lazy()
    maybe_1.bind(var_1)


def test_case_10():
    int_0 = 1903
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, maybe_0)
    var_0 = maybe_1.to_either()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    maybe_3 = module_0.Maybe(maybe_2, maybe_2)
    var_1 = maybe_2.to_box()
    var_2 = var_1.to_validation()
    bool_2 = var_2.__eq__(var_0)


def test_case_11():
    int_0 = 1602
    tuple_0 = (int_0,)
    int_1 = -928
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_1, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.ap(tuple_0)


def test_case_12():
    none_type_0 = None
    tuple_0 = ()
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(tuple_0)
    maybe_1 = module_0.Maybe(none_type_0, tuple_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.map(var_0)


def test_case_14():
    int_0 = -1966
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(bool_0)
    var_2 = maybe_0.to_try()
    var_3 = var_1.ap(var_2)
    var_4 = maybe_0.bind(var_3)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_5 = var_3.to_validation()
    var_6 = var_3.get_or_else(var_2)
    maybe_1.filter(maybe_1)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    none_type_1 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_0)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.get_or_else(var_2)
    var_5 = var_3.to_either()
    var_6 = var_5.to_validation()
    var_7 = maybe_1.to_box()
    var_8 = maybe_1.to_either()
    var_6.map(none_type_0)


def test_case_16():
    bytes_0 = b"\x0e\xf7\x83\\\xbbf\x00D\xb1\x12\x06\xa1;\x8b\xb6f\x94"
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_3 = maybe_1.get_or_else(bytes_0)
    var_3.to_try()


def test_case_17():
    int_0 = -1966
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.bind(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.to_try()
    var_3 = var_0.to_either()
    var_4 = var_1.ap(var_3)
    var_5 = maybe_0.bind(var_3)
    var_6 = var_0.to_box()
    var_7 = var_6.ap(var_4)
    maybe_1 = module_0.Maybe(var_7, bool_0)
    var_8 = var_7.get_or_else(var_2)
    var_9 = var_2.get_or_else(var_4)
    maybe_1.filter(var_7)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.ap(bool_0)
    none_type_0 = None
    var_3 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_4 = var_2.to_try()
    var_5 = module_1.Generic()
    var_6 = var_1.ap(var_3)
    maybe_2 = module_0.Maybe(maybe_1, none_type_0)
    maybe_3 = module_0.Maybe(maybe_2, bool_0)
    var_7 = var_2.to_box()
    var_8 = var_4.get_or_else(maybe_0)
    var_9 = var_8.to_box()
    var_10 = var_9.to_validation()
    maybe_2.filter(var_10)
