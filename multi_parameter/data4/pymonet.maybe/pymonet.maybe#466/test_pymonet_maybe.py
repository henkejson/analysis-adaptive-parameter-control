# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(none_type_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    none_type_0.to_lazy()


def test_case_4():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    none_type_0 = None
    float_0 = 1473.06
    bool_0 = True
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_1.map(none_type_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_0.to_either()
    maybe_0.map(var_1)


def test_case_6():
    none_type_0 = None
    int_0 = -472
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_either()
    var_3 = maybe_0.ap(bool_1)
    var_4 = var_2.ap(var_3)
    var_2.bind(var_4)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(maybe_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: none_type_0, bool_0: bool_1}
    maybe_0 = module_0.Maybe(bool_0, dict_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_3 = maybe_1.to_validation()
    var_4 = maybe_1.to_try()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = var_1.to_either()
    var_4 = var_0.bind(var_1)
    var_5 = var_0.ap(maybe_0)
    maybe_1.filter(var_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_12():
    list_0 = []
    bool_0 = False
    bool_1 = False
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.get_or_else(list_0)
    bool_3 = False
    none_type_0 = None
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    maybe_3 = module_0.Maybe(bool_3, none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.map(var_0)
    maybe_1 = module_0.Maybe(bool_0, var_1)
    var_2 = var_0.to_either()
    var_3 = maybe_0.map(var_0)
    var_4 = var_1.filter(var_2)
    var_5 = maybe_1.ap(maybe_0)
    var_6 = var_5.to_either()
    var_7 = var_5.ap(maybe_1)


def test_case_14():
    bytes_0 = b"\x01\xa2\xa5\xf6"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bytes_1 = b"OPa\xeb\x9a#"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_1, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(list_0)


def test_case_15():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_0.map(var_0)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.to_try()
    var_2.to_either()


def test_case_17():
    str_0 = "8>|ZEsasy12?'"
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_try()
    maybe_0.filter(str_0)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(bool_1)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_try()
    var_3.ap(maybe_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.map(var_0)
    bool_2 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_1.to_try()
    var_4 = maybe_0.ap(var_2)
    var_5 = var_1.filter(var_3)
    var_6 = var_4.filter(maybe_1)
    var_7 = var_0.bind(var_1)
    var_8 = var_1.to_try()
    var_9 = var_5.to_try()
    var_9.to_validation()


def test_case_20():
    none_type_0 = None
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = module_0.Maybe(maybe_0, maybe_0)
    none_type_1 = None
    var_1 = var_0.map(none_type_1)
    bool_1 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_1.to_try()
    var_4 = maybe_0.ap(var_2)
    var_5 = var_4.filter(maybe_1)
    var_6 = maybe_1.get_or_else(set_0)
    var_7 = maybe_0.bind(none_type_0)
    var_8 = maybe_1.to_either()
    var_9 = var_2.to_box()
    var_10 = var_5.to_box()
    var_11 = var_7.filter(set_0)
    maybe_1.filter(var_1)
