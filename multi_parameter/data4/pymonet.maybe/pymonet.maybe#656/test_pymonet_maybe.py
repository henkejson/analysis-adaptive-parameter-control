# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_1.__eq__(none_type_0)
    var_0 = maybe_0.filter(maybe_1)
    var_1 = maybe_1.to_try()
    maybe_1.filter(maybe_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_0)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_0.filter(var_0)
    var_3 = maybe_0.bind(var_0)
    var_4 = var_1.to_box()
    var_5 = maybe_0.to_either()
    var_6 = var_2.to_either()
    var_7 = var_5.to_box()
    var_8 = var_6.to_try()


def test_case_6():
    int_0 = 0
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(int_0)
    maybe_0.bind(bool_1)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(maybe_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_1.to_validation()


def test_case_8():
    float_0 = -2984.76062
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    str_0 = "\n        Return monad value.\n\n        :returns: monad value\n        :rtype: A\n        "
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    list_1 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = True
    maybe_1 = module_0.Maybe(list_1, bool_1)
    var_1 = maybe_1.to_either()
    str_1 = "]d2Deh9!"
    bool_2 = False
    maybe_2 = module_0.Maybe(str_1, bool_2)
    var_2 = maybe_2.ap(var_1)
    var_3 = var_2.to_try()
    var_4 = var_3.map(list_0)
    var_4.to_box()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_lazy()


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.filter(maybe_1)
    maybe_1.filter(maybe_0)


def test_case_11():
    int_0 = 0
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.bind(bool_1)
    var_3 = var_0.to_validation()
    var_4 = maybe_0.to_try()
    var_3.to_validation()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_0.filter(var_0)
    var_3 = var_0.filter(var_1)
    maybe_1 = module_0.Maybe(none_type_0, var_1)
    var_4 = var_3.to_lazy()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_either()
    var_1 = var_0.to_try()
    var_2 = maybe_1.to_lazy()


def test_case_14():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.filter(bool_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    set_0 = set()
    set_1 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_1, bool_0)
    var_0 = maybe_0.to_try()
    var_0.map(set_0)


def test_case_17():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    float_0 = -169.295941
    tuple_0 = (float_0,)
    set_0 = {tuple_0, tuple_0, float_0, tuple_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    int_0 = 22
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.bind(bool_1)
    var_3 = var_2.filter(maybe_0)
    var_4 = maybe_0.to_try()
    bool_2 = True
    tuple_0 = (str_0, bool_2, var_0)
    var_5 = maybe_0.bind(var_4)
    var_6 = var_5.to_lazy()
    var_7 = var_6.ap(var_2)
    var_8 = var_6.to_box()
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_9 = var_3.to_box()
    var_10 = var_2.bind(var_4)
    var_11 = maybe_1.ap(tuple_0)
    var_7.to_validation()


def test_case_20():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_21():
    int_0 = 22
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.bind(bool_1)
    var_3 = var_2.filter(maybe_0)
    bool_2 = True
    bool_3 = maybe_0.__eq__(maybe_0)
    var_4 = var_3.filter(bool_2)
    var_5 = maybe_0.ap(var_1)
    var_6 = var_4.to_box()
    var_7 = var_6.to_try()
    var_1.to_validation()


def test_case_22():
    int_0 = 22
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(int_0)
    maybe_0.bind(bool_1)


def test_case_23():
    str_0 = ""
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.map(str_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.bind(bool_1)
    var_3 = var_2.filter(maybe_0)
    var_4 = maybe_0.to_try()
    var_5 = var_2.filter(str_0)
    bool_2 = maybe_0.__eq__(var_0)
    var_6 = var_3.filter(var_4)
    var_7 = var_3.to_lazy()
    var_8 = maybe_0.ap(var_1)
    var_9 = var_6.to_box()
    bool_3 = False
    maybe_1 = module_0.Maybe(var_4, bool_3)
    var_10 = var_9.to_either()
    bool_4 = var_0.__eq__(maybe_1)
    maybe_1.filter(var_4)
