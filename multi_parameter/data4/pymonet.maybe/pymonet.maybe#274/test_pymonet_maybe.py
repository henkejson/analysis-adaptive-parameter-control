# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    bool_0.get_or_else(bool_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    none_type_0 = None
    var_0 = maybe_1.map(none_type_0)
    var_1 = maybe_1.filter(maybe_0)
    var_2 = maybe_1.map(maybe_1)
    bool_2 = False
    none_type_1 = None
    var_3 = var_2.filter(none_type_1)
    maybe_2 = module_0.Maybe(bool_1, bool_2)
    maybe_2.ap(bool_0)


def test_case_4():
    bool_0 = False
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.bind(set_0)
    var_3 = maybe_1.ap(bool_1)
    var_4 = var_3.to_box()
    var_5 = var_2.map(bool_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)
    var_6 = maybe_0.ap(var_3)
    var_7 = var_6.to_validation()
    var_8 = var_5.to_validation()
    var_9 = var_8.to_either()
    var_10 = var_9.to_box()
    bool_2 = var_10.__eq__(bool_0)
    var_11 = var_5.get_or_else(var_6)
    list_0 = [bool_0]
    maybe_3 = module_0.Maybe(list_0, bool_0)
    maybe_0.map(set_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.bind(bool_1)
    var_1 = maybe_0.filter(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, bool_2)
    maybe_1.filter(var_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.bind(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    tuple_0 = ()
    bool_0 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = var_0.to_try()


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_10():
    int_0 = -535
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_1.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_1.get_or_else(bool_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    str_0 = "KE8\tpq Fe~"
    var_1 = maybe_0.get_or_else(str_0)
    var_0.filter(var_1)


def test_case_12():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(bool_0)
    var_0.get_or_else(bool_1)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_either()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_2, bool_2)
    maybe_1.filter(none_type_0)


def test_case_14():
    int_0 = -1185
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    int_1 = 615
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.ap(int_1)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    var_3.ap(var_0)


def test_case_15():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    int_0 = 246
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_1.filter(var_1)
    var_3 = var_2.to_lazy()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_17():
    bytes_0 = b"|F\x86P\xdc=\x14\x13o"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_validation()
    var_2.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_20():
    bytes_0 = b"|F\x86P\xdc=\x14\x13o"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.map(bytes_0)
    var_4 = var_3.to_try()
    var_5 = maybe_0.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, var_5)
    var_6 = var_3.to_either()
    bool_2 = maybe_0.__eq__(maybe_1)
    var_7 = maybe_0.filter(var_1)
    var_8 = var_7.get_or_else(bytes_0)


def test_case_21():
    bytes_0 = b"|F\x86P\xdc=\x14\x13o"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = maybe_1.map(var_1)
    var_4 = var_3.map(bytes_0)
    var_5 = var_4.to_try()
    var_6 = maybe_0.get_or_else(none_type_0)
    var_7 = var_1.to_box()
    var_8 = var_4.ap(var_3)
    var_9 = var_0.map(var_5)
    var_10 = var_1.to_lazy()
    var_11 = var_10.ap(var_5)
    maybe_2 = module_0.Maybe(var_0, var_6)
    bool_2 = maybe_2.__eq__(maybe_2)
    bool_3 = False
    maybe_3 = module_0.Maybe(bool_1, bool_3)
    var_12 = var_2.map(var_0)
    var_13 = var_12.bind(var_10)
    maybe_4 = module_0.Maybe(var_11, var_7)
    var_14 = var_4.map(var_10)
    var_15 = var_7.to_lazy()
