# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -6107
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    float_0 = -211.6716
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_0.to_try()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bytes_0 = b"\x97}\x84\xc8\x0eB"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.ap(none_type_0)
    var_4 = var_3.map(maybe_0)


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_try()
    maybe_0.map(var_1)


def test_case_6():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.bind(maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "pf.?vaj^>I-g6i6oG}{'"
    set_0 = {str_0, str_0, str_0}
    none_type_1 = None
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    maybe_1.bind(set_0)


def test_case_8():
    str_0 = "b(U>NTlx&g,#m"
    float_0 = -4129.9
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(str_0)


def test_case_9():
    none_type_0 = None
    int_0 = -6107
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)


def test_case_10():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.filter(dict_0)
    maybe_1.filter(bool_0)


def test_case_11():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_1 = maybe_0.bind(dict_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    var_2 = var_0.filter(maybe_1)
    bool_1 = False
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_3 = var_0.to_box()
    var_4 = var_2.get_or_else(maybe_2)
    maybe_2.filter(var_4)


def test_case_12():
    bytes_0 = b"I\xe9\xd4\xf3\xc7\xdc\x96j\xe9\xb9|\x013\xab"
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.to_either()


def test_case_13():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(bool_0)


def test_case_14():
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.ap(generic_0)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    int_0 = -1657
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.bind(var_0)
    var_0.to_box()


def test_case_18():
    none_type_0 = None
    int_0 = -6107
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_try()
    bool_0 = True
    var_1.ap(bool_0)


def test_case_19():
    str_0 = "z\x0c^"
    float_0 = 980.0
    bool_0 = True
    tuple_0 = (str_0, str_0, float_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_21():
    bytes_0 = b"\t\xc8"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_22():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.bind(dict_0)
    var_1 = maybe_0.ap(maybe_0)
    bool_0 = maybe_0.__eq__(var_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_2 = maybe_0.bind(dict_0)
    bool_1 = maybe_0.__eq__(var_0)
    none_type_0 = None
    bool_2 = maybe_1.__eq__(var_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_1.filter(var_3)
    var_5 = var_0.to_try()
    var_6 = maybe_1.bind(var_5)
    int_0 = -6107
    var_7 = var_3.to_either()
    maybe_2 = module_0.Maybe(int_0, int_0)
    var_8 = maybe_2.filter(none_type_0)
    var_9 = maybe_1.to_either()
    var_10 = maybe_1.to_validation()
    var_11 = var_1.filter(maybe_1)
    var_7.bind(var_5)


def test_case_23():
    bytes_0 = b"L\xb8C"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    bytes_1 = b"\xaf\x07\xecy\xa1c\xc9\xb6h:\xe6\x0f\x8e6\xb5)"
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_1, none_type_0)
    maybe_1.map(bytes_0)


def test_case_24():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(var_0)
    maybe_1.filter(var_1)
