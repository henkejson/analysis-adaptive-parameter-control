# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\nb\x10\x1d\x80\xf9\x02\x16\x9f\x0c2=Bhr=_\xec"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "[AG6lMQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_0 = False
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_either()
    var_3 = var_0.bind(var_1)
    var_4 = maybe_1.filter(var_2)
    maybe_2 = module_0.Maybe(var_0, bool_0)
    bool_1 = maybe_2.__eq__(bool_0)
    maybe_2.filter(maybe_1)


def test_case_3():
    str_0 = "[AG6lMzQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(var_0)
    var_2 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_3 = var_0.filter(var_2)
    maybe_1.filter(var_3)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.ap(maybe_1)
    maybe_1.map(var_4)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = True
    var_0 = maybe_0.bind(bool_1)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    bool_3 = var_1.__eq__(maybe_1)
    var_1.to_try()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    str_0 = "[AG6lMzQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = var_0.filter(maybe_1)
    maybe_1.filter(var_1)


def test_case_8():
    tuple_0 = ()
    list_0 = []
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(list_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    str_0 = "[AG6lMzQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_3 = var_0.filter(var_2)
    maybe_1.filter(var_3)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_try()


def test_case_12():
    bytes_0 = b"\nb\x10\x1d\x80\xf9\x02\x16\x9f\x0c2=Bhr=_\xec"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_box()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = var_2.to_try()
    var_1.bind(bool_2)


def test_case_14():
    str_0 = "[AG6lMzQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.to_box()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = var_0.filter(maybe_1)
    maybe_1.filter(var_2)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(none_type_0)


def test_case_16():
    int_0 = -1416
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_17():
    str_0 = "!8II"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()


def test_case_20():
    bytes_0 = b"l\x9d\xf5*\xd5\n\xa5\xbc"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    float_0 = 2220.0
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_22():
    str_0 = "[AG6lMzQZ0 o"
    int_0 = 25
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.get_or_else(var_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = var_0.map(int_0)
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_lazy()
    var_5 = var_2.to_try()
    var_6 = var_3.to_either()
    maybe_1 = module_0.Maybe(var_3, bool_0)
    var_7 = var_0.filter(var_3)
    maybe_1.filter(var_5)


def test_case_23():
    str_0 = "[AG6lMQZ0 o"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    bool_0 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_2 = var_0.get_or_else(bool_0)
    var_3 = maybe_0.to_either()
    var_4 = maybe_1.get_or_else(bool_0)
    var_5 = var_3.to_try()
    var_4.get_or_else(var_3)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_0.get_or_else(var_1)
