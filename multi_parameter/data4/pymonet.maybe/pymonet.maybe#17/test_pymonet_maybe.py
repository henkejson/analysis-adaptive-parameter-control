# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_3():
    int_0 = -3828
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    bool_1 = var_0.__eq__(bool_0)
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(int_0)
    int_1 = -3208
    bool_2 = maybe_0.__eq__(int_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.filter(var_1)


def test_case_4():
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_try()
    list_0 = []
    bytes_0 = b"\x07\xdbw\xfe\x0ci"
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.map(list_0)
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_3.filter(var_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    float_0 = -336.647
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    bytes_0 = b"\xfc,b\xd7-B\xae\x81\xae~l\xac\xd2\x8c"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    int_0 = -934
    complex_0 = 1313.25684 + 3924.527j
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_1.ap(int_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_2.get_or_else(maybe_0)


def test_case_8():
    complex_0 = -3195.98 - 1202.53j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(complex_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()


def test_case_10():
    int_0 = 619
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_11():
    bool_0 = True
    list_0 = []
    tuple_0 = (bool_0, list_0)
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(tuple_0)


def test_case_12():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    str_0 = "a[`SMSu"
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_1.get_or_else(str_0)
    maybe_1.filter(bool_0)


def test_case_13():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_14():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_1.to_either()
    maybe_1.filter(bool_0)


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_16():
    int_0 = -1023
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_17():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(bool_0)


def test_case_18():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_19():
    none_type_0 = None
    bytes_0 = b"+\xd7"
    bool_0 = True
    tuple_0 = (bytes_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_20():
    set_0 = set()
    str_0 = ")`ah3i"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(set_0)


def test_case_21():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    var_0 = maybe_0.ap(bool_2)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.map(bool_3)
    var_2 = maybe_0.to_try()
    var_3 = var_2.filter(var_2)
    var_4 = var_2.get_or_else(var_1)
    var_5 = maybe_0.filter(var_2)
    var_6 = var_4.to_validation()
    var_7 = var_6.to_try()
    var_8 = maybe_0.get_or_else(var_3)
    var_8.to_either()


def test_case_22():
    int_0 = -1437
    str_0 = "Pz|gJo@hudc&7(,*"
    int_1 = 147
    bool_0 = True
    maybe_0 = module_0.Maybe(int_1, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.map(int_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    none_type_0 = None
    bool_2 = var_1.__eq__(maybe_1)
    bool_3 = True
    maybe_2 = module_0.Maybe(maybe_0, bool_3)
    var_2 = var_0.to_lazy()
    var_3 = var_1.filter(var_2)
    var_4 = maybe_1.bind(var_2)
    maybe_3 = module_0.Maybe(none_type_0, var_2)
    bool_4 = maybe_0.__eq__(var_4)
    var_5 = maybe_0.bind(var_2)
    var_6 = var_1.get_or_else(var_1)
    bool_5 = var_5.__eq__(maybe_3)
    var_7 = var_0.ap(none_type_0)
    var_8 = maybe_1.bind(var_2)
    var_9 = var_0.to_validation()
    var_10 = var_9.to_box()
    var_11 = var_0.to_try()
    var_12 = maybe_3.to_either()
