# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.ap(var_0)


def test_case_3():
    bytes_0 = b"X:p.p\t\xe0\xe5\xd0\xd5\x1d\xc8;\xf7\xf1\xe0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.ap(dict_0)
    var_2 = var_1.get_or_else(bytes_0)
    var_3 = var_1.to_either()
    var_4 = var_3.ap(var_1)
    var_5 = maybe_0.bind(var_4)
    var_6 = var_1.filter(none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    bool_2 = True
    var_7 = maybe_1.get_or_else(bool_2)


def test_case_4():
    float_0 = -1520.3
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    list_0 = [float_0, float_0, float_0, float_0]
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.to_box()
    var_3 = maybe_1.map(var_1)


def test_case_5():
    bytes_0 = b"R3\x13\xefP\x17\x02"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.map(bool_0)
    var_2 = var_1.bind(bool_0)
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()
    var_4.bind(var_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.ap(bool_0)


def test_case_8():
    int_0 = 264
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_1.filter(var_1)
    module_1.Generic(*var_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.filter(none_type_0)


def test_case_13():
    str_0 = "#^mBPjx@=d_S)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    generic_0 = module_1.Generic()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_3 = maybe_1.to_try()
    var_4 = maybe_1.to_lazy()
    var_5 = var_4.map(generic_0)
    var_6 = maybe_1.to_validation()
    var_5.to_either()


def test_case_17():
    int_0 = -1618
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.ap(int_0)


def test_case_18():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.ap(bool_0)
    var_4 = maybe_0.to_lazy()
    var_5 = maybe_0.filter(tuple_0)
    var_6 = var_4.to_either()
    none_type_0 = None
    var_7 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_8 = var_0.to_try()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_21():
    bool_0 = False
    set_0 = {bool_0}
    str_0 = '{2T T}X}-\n"Hn]9P'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(maybe_0, var_0)
    var_1 = maybe_1.bind(str_0)
    var_2 = maybe_0.ap(set_0)
    var_3 = maybe_0.ap(set_0)
    var_4 = maybe_0.to_validation()
    var_5 = var_2.map(var_3)
    bool_1 = var_3.__eq__(var_2)
    maybe_2 = module_0.Maybe(var_2, var_4)
    bool_2 = maybe_2.__eq__(maybe_1)
    var_6 = var_4.to_lazy()
    var_7 = maybe_2.to_try()
    var_8 = var_4.to_try()
    var_9 = var_4.to_box()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(bool_0)
