# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)


def test_case_3():
    float_0 = 4366.891
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_validation()
    bool_0 = maybe_1.__eq__(var_0)
    var_1 = var_0.to_box()
    var_2 = maybe_1.filter(var_0)
    var_0.get_or_else(var_2)


def test_case_4():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\xc3\xaev[\xd1\xc0\xe8\xc8p\xad\x9d\xc0\xb2e\x89U"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_1)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.map(bool_0)
    var_3 = var_2.to_either()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    bytes_0 = b"\xc3\xaev[\xd1\xc0\xe8\xc8p\xad\x9d\xc0\xb2e\x89U"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.bind(maybe_0)
    var_2 = var_1.map(bool_0)
    var_3 = var_2.to_either()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.ap(bool_1)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_9():
    bytes_0 = b"\x06H\xfaS\x8e?"
    complex_0 = -517.19 - 513.8578j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    bytes_1 = b"\xc6\x00\x9c\xba\xbe\x8f\xd4\xd3\xba\xfa\xb3X"
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_1, bool_0)
    var_1 = maybe_1.to_try()


def test_case_10():
    tuple_0 = ()
    bytes_0 = b"0\xd0M\xc2+\xd7\x90\xfb\xb3iw@"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(tuple_0)
    var_0.to_try()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = maybe_0.to_validation()
    var_3 = maybe_1.to_try()
    var_4 = maybe_0.ap(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_5 = maybe_1.to_either()
    var_6 = var_0.bind(var_2)
    bool_2 = var_1.__eq__(bool_0)
    maybe_1.filter(none_type_0)


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_13():
    bool_0 = True
    dict_0 = {}
    bytes_0 = b""
    tuple_0 = (bool_0, dict_0, bytes_0)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_2.filter(bool_2)


def test_case_14():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()


def test_case_19():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    str_0 = 'R&"4` FG0[&^9O7'
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(maybe_1)


def test_case_21():
    int_0 = -814
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_1.__eq__(int_0)
    var_1 = var_0.to_box()
    maybe_1.filter(maybe_0)


def test_case_22():
    float_0 = 4366.891
    maybe_0 = module_0.Maybe(float_0, float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.get_or_else(maybe_0)
    bool_0 = maybe_1.__eq__(var_0)
    var_1 = var_0.to_box()
    var_2 = maybe_1.filter(var_0)
    var_3 = var_0.map(var_0)
    var_4 = var_0.bind(bool_0)
    var_5 = var_2.to_try()
    var_6 = maybe_0.to_validation()
    bool_1 = var_4.__eq__(maybe_1)
    var_7 = var_2.get_or_else(bool_1)
    var_8 = var_0.to_lazy()
    var_9 = maybe_1.to_try()
    var_10 = maybe_1.get_or_else(bool_0)
    bool_2 = var_1.__eq__(var_10)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_2 = maybe_0.to_validation()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_3 = maybe_0.filter(var_2)
    bool_2 = maybe_0.__eq__(maybe_0)
    var_4 = maybe_0.to_box()
    var_5 = var_3.filter(bool_2)
    var_6 = var_0.to_lazy()
    var_7 = var_6.map(var_1)
    maybe_1.bind(var_1)


def test_case_24():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.to_either()
    maybe_1 = module_0.Maybe(maybe_0, none_type_0)
    var_3 = maybe_1.to_lazy()
    var_4 = var_3.to_box()
    var_5 = maybe_0.to_validation()
    var_6 = var_5.to_lazy()
    bool_1 = var_6.__eq__(var_1)
    var_7 = maybe_0.filter(var_5)
    bool_2 = maybe_0.__eq__(maybe_0)
    generic_0 = module_1.Generic()
    var_8 = var_0.bind(var_5)
    bool_3 = var_7.__eq__(bool_0)
    var_9 = var_5.to_try()
    var_10 = maybe_0.to_lazy()
    var_1.get_or_else(var_1)
