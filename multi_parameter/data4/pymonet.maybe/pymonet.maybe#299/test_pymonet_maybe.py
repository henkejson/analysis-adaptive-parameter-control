# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    maybe_0 = module_0.Maybe(list_1, list_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()


def test_case_3():
    int_0 = -2601
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    str_0 = "Ke\x0cky\\w"
    tuple_0 = (var_1, str_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_2 = maybe_1.filter(var_1)
    bool_2 = var_2.__eq__(int_0)


def test_case_4():
    bytes_0 = b"yA\x80L-\xb5\xf2\xfe\xd6\xfc"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_5():
    str_0 = "`.PAM\x0cu}s\x0b>(b{"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    int_0 = -1922
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = maybe_0.map(bool_0)
    var_3 = maybe_0.map(bool_0)
    var_4 = var_3.bind(var_3)
    var_5 = var_4.filter(var_1)
    var_6 = maybe_0.to_box()
    var_7 = var_2.to_lazy()


def test_case_7():
    complex_0 = 77.131 - 743.8534j
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.bind(complex_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"9U\xbc\x01M\xc2\x99\x9d\x06p\xa14\xe9\x0b\xcd\xe7"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = var_1.to_validation()
    maybe_2 = module_0.Maybe(bool_0, bool_0)


def test_case_9():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(dict_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_validation()


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_1.to_either()
    var_0.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_14():
    float_0 = -1316.56348
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(float_0)


def test_case_15():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_1 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_1)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.ap(bool_0)
    var_2 = var_0.filter(var_1)
    bool_1 = var_0.__eq__(var_0)
    var_3 = var_0.filter(var_0)
    var_4 = var_2.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = var_4.filter(maybe_0)
    var_7 = var_1.ap(var_6)
    maybe_1 = module_0.Maybe(var_6, var_0)
    var_8 = var_2.ap(maybe_1)
    var_9 = var_5.to_either()
    maybe_2 = module_0.Maybe(var_7, none_type_0)
    var_10 = var_2.to_lazy()
    var_11 = var_0.bind(var_5)
    maybe_2.filter(var_0)


def test_case_18():
    bool_0 = True
    bytes_0 = b"9U\xbc\x01M\xc2\x99\x9d\x06p\xa14\xe9\x0b\xcd\xe7"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(var_0)
    var_2 = var_0.filter(var_0)
    bool_1 = var_1.__eq__(var_2)
    var_3 = var_2.filter(maybe_0)
    var_4 = var_1.to_try()
    var_5 = maybe_0.to_lazy()
    var_6 = maybe_0.filter(bytes_0)
    float_0 = -716.026
    var_7 = var_5.ap(float_0)
    var_8 = var_7.ap(var_5)
    var_9 = var_1.ap(var_8)
    var_4.to_validation()


def test_case_19():
    bytes_0 = b"9U\xbc\x01M\xc2\x99\x9d\x06p\xa14\xe9\x0b\xcd\xe7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_0.filter(var_1)
    bool_0 = var_3.__eq__(maybe_0)
    var_4 = var_0.to_validation()
    var_5 = var_1.filter(var_4)
    var_6 = maybe_0.to_try()
    var_7 = var_1.to_lazy()
    var_8 = var_3.to_box()
    var_9 = var_5.filter(var_8)
    var_4.ap(var_0)
