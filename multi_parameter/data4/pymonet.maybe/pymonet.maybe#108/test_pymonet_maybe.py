# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x97\xc5}\x93)\xd91F\x08\xb1\xe8\xa9\x86\xde\x86\x00\x989"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    int_0 = -706
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.get_or_else(int_0)
    var_2 = maybe_0.to_either()
    var_3 = module_1.object()
    var_0.to_validation()


def test_case_3():
    bytes_0 = b"\xba"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = maybe_0.to_either()
    var_3 = var_1.to_validation()
    var_4 = var_1.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(var_2)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_1.map(var_0)


def test_case_5():
    str_0 = ".szur7]L.l0^oI"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.ap(str_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_1.to_box()


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    maybe_1.bind(bool_2)


def test_case_7():
    int_0 = 2694
    bytes_0 = b"\xd5\xe5-px\xfb\xf9\xcdV\x91\x8d"
    tuple_0 = (int_0, int_0, bytes_0)
    bytes_1 = b"\x97\xc5}\x93)\xd91F\x08\xb1\xe8\xa9\x86\xde\x86\x00\x989"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(tuple_0)
    var_1 = var_0.to_box()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    tuple_0 = (none_type_0,)
    var_1 = var_0.filter(tuple_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = var_0.ap(var_0)
    maybe_1.filter(var_2)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -24
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_1.to_try()
    bool_1 = var_0.__eq__(maybe_1)
    var_1 = maybe_1.get_or_else(bool_0)
    var_2 = maybe_1.to_either()
    var_3 = var_2.to_lazy()
    var_1.filter(var_1)


def test_case_12():
    float_0 = -2650.6987
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    none_type_0 = None
    int_0 = 1
    set_0 = {int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(none_type_0)


def test_case_16():
    complex_0 = -3692.403 + 392.913j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_lazy()
    var_1.map(complex_0)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_18():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_2 = True
    bool_3 = maybe_0.__eq__(bool_2)
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_1.bind(bool_0)
    var_3 = maybe_1.filter(var_2)
    bool_4 = False
    maybe_2 = module_0.Maybe(var_1, bool_4)
    var_4 = var_3.to_either()
    var_5 = maybe_2.to_box()
    maybe_0.filter(var_5)


def test_case_19():
    str_0 = 'd\x0b+XH"o'
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.bind(str_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()


def test_case_21():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.bind(bool_1)
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(bool_1)
    var_4 = var_3.to_try()
    maybe_1 = module_0.Maybe(bool_1, var_4)
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    maybe_2.ap(bool_0)


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_box()
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    var_3 = maybe_2.bind(var_2)
    int_0 = -217
    bool_3 = False
    maybe_3 = module_0.Maybe(int_0, bool_3)
    var_4 = maybe_3.to_lazy()
    bool_4 = var_4.__eq__(maybe_3)
    var_5 = var_4.to_validation()
    var_6 = var_4.to_validation()
    var_7 = maybe_1.to_validation()
    none_type_1 = None
    var_5.ap(none_type_1)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.get_or_else(maybe_1)
    var_0.bind(bool_1)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    bool_1 = var_0.__eq__(bool_0)
    var_1 = maybe_0.get_or_else(bool_1)
    var_0.to_either()


def test_case_25():
    int_0 = 2330
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(int_0, var_0)
    bool_0 = maybe_0.__eq__(int_0)
    maybe_2 = module_0.Maybe(var_1, maybe_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    none_type_0 = None
    maybe_3 = module_0.Maybe(var_3, var_1)
    var_4 = maybe_0.get_or_else(maybe_3)
    var_5 = var_4.bind(none_type_0)
    var_6 = var_5.filter(maybe_2)
    bytes_0 = b"~n\x9awf\x16\x986\x15\x1f\x88CW"
    str_0 = "D2Q@j4l}W!"
    maybe_4 = module_0.Maybe(bytes_0, str_0)
    var_7 = maybe_2.to_either()
    bool_1 = maybe_0.__eq__(maybe_3)
    var_8 = maybe_4.to_either()
    var_9 = maybe_2.ap(var_7)
    var_10 = var_5.to_try()
    var_7.to_either()


def test_case_26():
    bool_0 = True
    bool_1 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_2 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_2 = module_0.Maybe(bool_2, bool_1)
    maybe_0.filter(maybe_1)
