# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xfb\x1aX\xaa\x84"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    bool_1 = maybe_0.__eq__(dict_0)


def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.map(maybe_0)


def test_case_4():
    str_0 = "g88Q78.^E\x0bsAF"
    str_1 = ""
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_2 = var_0.get_or_else(str_0)
    maybe_0.map(str_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.filter(var_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    maybe_1.filter(maybe_1)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.ap(none_type_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    bytes_0 = b""
    var_2 = var_1.filter(bytes_0)
    var_3 = maybe_0.map(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_4 = var_2.to_either()
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_1.get_or_else(bool_0)
    var_1.to_try()


def test_case_10():
    none_type_0 = None
    str_0 = "{We'l\"_?KqvX+<1"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    bytes_0 = b""
    var_2 = var_1.filter(bytes_0)
    var_3 = var_2.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_2, bool_1)
    var_4 = maybe_1.to_either()
    maybe_1.filter(bytes_0)


def test_case_12():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.filter(set_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_15():
    str_0 = '&pu["z>\rJ"9-R]m7vNi]'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.filter(str_0)


def test_case_16():
    bool_0 = True
    bytes_0 = b"s"
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.to_validation()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.ap(var_0)
    none_type_0 = None
    var_3 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_0.map(maybe_0)
    var_5 = maybe_1.to_validation()
    maybe_1.filter(maybe_1)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.ap(maybe_0)
    bytes_0 = b""
    var_3 = var_2.filter(bytes_0)
    var_4 = maybe_0.map(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_3, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_5 = var_3.to_either()
    maybe_1.filter(maybe_1)


def test_case_19():
    bytes_0 = b"V\x1d5\x9a\x19\xcf[-\t\xaa\xbb\x19\x88"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_either()
    none_type_1 = None
    var_3 = maybe_0.get_or_else(var_2)
    var_4 = var_1.filter(var_3)
    var_5 = var_2.to_box()
    var_6 = var_4.bind(none_type_1)
    var_7 = maybe_0.to_either()
    var_8 = maybe_0.ap(var_2)
    maybe_1 = module_0.Maybe(bytes_0, none_type_1)
    var_9 = maybe_1.to_box()
    var_10 = var_8.filter(var_9)
    maybe_1.bind(var_0)


def test_case_20():
    bytes_0 = b"7\xba0T"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_1.bind(none_type_0)
    var_1 = var_0.ap(bytes_0)
    var_2 = var_0.filter(none_type_0)
    var_3 = var_1.map(bytes_0)
    bool_1 = var_1.__eq__(var_3)
    var_4 = var_3.ap(bytes_0)
    var_5 = var_4.to_try()
    bool_2 = maybe_0.__eq__(var_1)
    var_5.to_lazy()


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_either()
    var_0.get_or_else(bool_0)
