# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b'\x94\xfal\xf5\xd7\xd8D\xe16\xd6\x84e\xef\xa8j"\xd2\xa69'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.bind(maybe_0)
    bool_0 = var_0.__eq__(var_0)


def test_case_3():
    none_type_0 = None
    bytes_0 = b",c\xd5\xb6\x87\xa2\xaa\x12y\xd8\xd4\xbfz\x00DR"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    bool_1 = True
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_2 = maybe_1.bind(none_type_0)
    bool_3 = var_2.__eq__(bool_0)


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_try()
    bytes_0 = b"O\x1cr~"
    bool_1 = False
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    maybe_2.map(var_2)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_6():
    str_0 = "K<'58/}Ona\\$p3lvE 45"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_1.bind(var_1)
    var_3 = var_1.to_lazy()
    var_3.filter(var_1)


def test_case_7():
    bytes_0 = b'\x94\xfal\xf5\xd7\xd8D\xe16\xd6\x84e\xef\xa8j"\xd2\xa69'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = var_1.get_or_else(none_type_0)
    bool_0 = var_2.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(var_2, var_2)
    maybe_1.ap(none_type_0)


def test_case_8():
    str_0 = "K<'58/}Ona\\$p3lvE 45"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_1.bind(var_1)
    var_3 = var_0.bind(var_0)
    var_4 = var_3.filter(var_1)
    var_5 = maybe_0.to_lazy()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    bytes_0 = b'\x94\xfal\xf5\xd7\xd8D\xe16\xd6\x84e\xef\xa8j"\xd2\xa69'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    var_3 = var_1.to_try()
    var_2.to_validation()


def test_case_11():
    str_0 = "SEAne#\nO,s"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()


def test_case_13():
    bytes_0 = b'\x94\xfal\xf5\xd7\xd8D\xe16\xd6\x84e\xef\xa8j"\xd2\xa69'
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.bind(maybe_0)
    maybe_1 = maybe_0.to_box()
    bool_0 = var_0.__eq__(var_0)


def test_case_14():
    float_0 = 1602.43
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "BTn$K?\x0b~IQ<M/\r\t"
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.map(var_0)
    var_2 = var_1.to_lazy()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, bool_0)


def test_case_19():
    int_0 = 0
    bytes_0 = b'V"w-'
    maybe_0 = module_0.Maybe(int_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.get_or_else(int_0)


def test_case_20():
    str_0 = ';Y0\tGE"`0>!Jdu4@L'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(str_0)
    var_1 = var_0.to_either()
    maybe_0.ap(bool_0)


def test_case_21():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(maybe_0)


def test_case_22():
    str_0 = ';Y0\tGE"`0>!Jdu4@L'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.map(bool_0)


def test_case_23():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.filter(bool_2)
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.bind(var_0)
    var_4 = var_3.filter(var_0)
    bool_3 = var_1.__eq__(maybe_0)
    var_5 = var_4.ap(var_2)
    var_6 = var_3.map(var_5)
    var_7 = maybe_1.to_lazy()
    bool_4 = maybe_0.__eq__(var_3)
    var_8 = var_4.bind(var_6)
    var_9 = var_8.to_either()
    var_10 = var_2.map(var_2)
    var_11 = var_5.to_lazy()
    maybe_2 = module_0.Maybe(tuple_0, bool_1)
    var_0.to_validation()
