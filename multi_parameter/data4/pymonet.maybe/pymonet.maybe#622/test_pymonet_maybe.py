# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "Z\x0c S8IA"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.map(var_0)


def test_case_3():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_2.map(var_2)
    none_type_0 = None
    var_4 = var_1.to_either()
    var_5 = var_3.ap(var_4)
    maybe_1 = module_0.Maybe(none_type_0, var_3)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_6 = var_1.filter(var_4)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    bool_2 = maybe_0.__eq__(bool_1)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_5():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    var_2 = maybe_0.ap(var_0)
    var_3 = var_0.filter(bool_0)
    var_4 = var_1.to_lazy()
    var_5 = var_4.to_either()
    var_6 = var_3.to_validation()
    var_6.bind(var_0)


def test_case_6():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_7():
    str_0 = "ix+q6H\to0"
    list_0 = [str_0, str_0]
    none_type_0 = None
    bytes_0 = b"\xf0\x12?\x96"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.filter(list_0)
    var_2 = var_1.to_validation()


def test_case_8():
    str_0 = "W7hqBL.="
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(str_0)
    var_2 = var_0.to_try()
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    int_0 = 525
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_10():
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(dict_0)
    bool_1 = False
    bool_2 = True
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(bool_2, bool_2)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_box()
    var_5 = var_4.to_either()
    var_5.get_or_else(bool_1)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_2.to_try()
    var_3 = var_2.map(var_1)


def test_case_12():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(maybe_0)
    bool_1 = var_1.__eq__(var_1)
    var_2 = var_0.to_try()
    var_3 = var_2.get_or_else(var_1)
    var_4 = maybe_0.to_box()
    var_5 = var_4.to_validation()
    var_6 = var_5.to_try()
    var_7 = var_1.bind(var_5)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    float_0 = 72.3
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(bool_1, var_0)
    var_1 = maybe_2.get_or_else(float_0)
    var_1.to_either()


def test_case_14():
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.ap(bool_0)
    var_3 = maybe_1.map(bool_0)
    bool_1 = maybe_1.__eq__(var_2)
    maybe_0.bind(var_0)


def test_case_16():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    tuple_0 = ()
    tuple_1 = (tuple_0, maybe_0)
    var_0 = maybe_0.get_or_else(tuple_1)
    maybe_0.bind(var_0)


def test_case_17():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    bool_1 = bool_0.__eq__(str_0)
    bool_2 = var_0.__eq__(var_0)
    bool_2.to_try()


def test_case_18():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.get_or_else(str_0)
    var_2 = maybe_0.ap(var_0)
    bool_1 = var_1.__eq__(var_2)
    var_3 = var_0.to_either()
    bool_2 = maybe_0.__eq__(var_3)
    var_4 = maybe_0.to_either()
    var_5 = var_3.to_validation()
    var_1.to_either()


def test_case_19():
    str_0 = '/"P(\x0bq_'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.map(var_0)
    var_3 = var_2.to_either()
    bytes_0 = b"\x93s\xd5 \xb9\x12qAhIa\xd5\xe9"
    var_4 = var_2.ap(str_0)
    var_5 = var_2.bind(var_0)
    var_6 = var_5.bind(var_0)
    bool_1 = var_0.__eq__(var_6)
    var_7 = var_2.filter(str_0)
    var_8 = var_4.to_lazy()
    var_9 = var_6.to_box()
    var_10 = var_8.to_either()
    maybe_1 = module_0.Maybe(var_4, var_4)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_11 = var_5.to_try()
    var_12 = maybe_0.map(bytes_0)
    var_13 = maybe_0.to_validation()
    var_14 = var_4.get_or_else(var_8)
