# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xde\xc6j\xf5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_0 = maybe_0.filter(maybe_1)
    bool_0 = maybe_1.__eq__(maybe_1)
    maybe_1.filter(set_0)


def test_case_3():
    str_0 = "(}{"
    set_0 = set()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.filter(var_2)
    var_4 = var_2.to_try()
    bool_1 = var_2.__eq__(none_type_0)
    var_5 = var_2.filter(maybe_1)
    bytes_0 = b"\xf7\x98\xee\x97\x83\x13\xad\x83\xd3P\x86\xf0\x15\xac\x8e;&.\x8a"
    maybe_0.filter(bytes_0)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.get_or_else(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.to_validation()
    var_4 = maybe_0.to_lazy()
    var_5 = var_0.to_either()
    var_6 = var_0.to_box()


def test_case_5():
    str_0 = "EJtSPU\tfD"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.map(bool_0)


def test_case_6():
    str_0 = "}{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = maybe_0.ap(set_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = var_1.filter(str_0)
    var_4 = var_3.to_either()
    var_5 = var_2.to_either()
    var_6 = var_0.to_box()
    var_7 = var_3.to_try()
    bool_0 = var_1.__eq__(var_7)
    none_type_0 = None
    var_8 = var_2.ap(none_type_0)
    var_9 = var_8.map(var_6)
    var_10 = module_0.Maybe(var_1, str_0)
    bool_1 = var_10.to_try()
    var_6.get_or_else(var_3)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    int_0 = 2745
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_either()
    var_3 = var_1.ap(int_0)
    maybe_0.bind(var_3)


def test_case_8():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_1 = maybe_0.filter(maybe_1)
    bool_0 = var_1.ap(var_0)
    var_2 = var_1.get_or_else(bool_0)
    maybe_1.filter(var_2)


def test_case_9():
    complex_0 = 382.784364 + 920.326j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.ap(complex_0)


def test_case_10():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_0 = maybe_0.filter(maybe_1)
    maybe_1.filter(set_0)


def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\xbe!jE|\x04\xe3\xbf\x1a\x92_\xb0\xd3\x9f\xc0\x99\x9e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(dict_0)


def test_case_12():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.get_or_else(list_0)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.to_try()
    var_5.to_lazy()


def test_case_13():
    bytes_0 = b"R\xebp@\x17L\xb5<\xdd\xf7\xb9"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(bytes_0, list_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_14():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_15():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_1 = maybe_0.filter(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_1.filter(var_0)


def test_case_17():
    str_0 = "j"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_1 = maybe_0.filter(maybe_1)
    maybe_1.filter(maybe_1)


def test_case_18():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_0 = maybe_0.filter(maybe_1)
    bool_0 = var_0.to_try()
    maybe_1.filter(set_0)


def test_case_19():
    str_0 = "{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(str_0, set_0)
    var_1 = maybe_0.filter(maybe_1)
    bool_0 = maybe_1.to_try()
    var_2 = var_1.get_or_else(bool_0)
    maybe_1.filter(var_2)


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.map(none_type_0)


def test_case_21():
    str_0 = "(}{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(set_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = var_1.filter(str_0)
    var_4 = maybe_0.to_try()
    var_5 = var_2.to_lazy()
    var_6 = var_5.to_try()
    var_0.filter(var_0)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bytes_0 = b"\xf2R=E\xe0\x0f'{%uU\xab\xd8"
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_2.to_lazy()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_2.ap(bytes_0)


def test_case_23():
    str_0 = "(}{"
    set_0 = set()
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(set_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = var_1.filter(str_0)
    var_4 = maybe_0.to_try()
    bool_0 = maybe_0.__eq__(var_3)
    var_5 = var_3.to_lazy()
    var_6 = var_4.filter(var_0)
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_7 = maybe_1.to_box()
    var_8 = maybe_0.to_validation()
    var_9 = var_8.to_try()
    var_5.get_or_else(var_7)
