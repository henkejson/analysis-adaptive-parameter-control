# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 3847
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_0.filter(var_0)
    bool_2 = var_0.__eq__(maybe_1)
    var_2 = var_0.to_lazy()
    maybe_1.filter(bool_2)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = var_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_4 = var_0.filter(var_3)
    var_5 = maybe_0.get_or_else(bool_1)
    bool_2 = var_0.__eq__(var_2)
    bool_3 = var_3.__eq__(maybe_1)
    var_6 = var_3.to_lazy()
    maybe_1.filter(var_1)


def test_case_4():
    complex_0 = 3527.18 - 349.7j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.map(complex_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_try()
    var_3 = var_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_4 = var_0.filter(var_3)
    var_5 = maybe_0.to_validation()
    var_6 = var_5.to_either()
    bool_2 = var_3.__eq__(maybe_1)
    var_7 = var_3.to_lazy()
    maybe_1.filter(var_5)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_0.filter(var_1)
    bool_2 = var_1.__eq__(maybe_1)
    var_3 = var_1.to_lazy()
    maybe_1.filter(var_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.get_or_else(none_type_0)
    var_3 = maybe_0.to_box()
    maybe_1.ap(none_type_0)


def test_case_8():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.to_box()


def test_case_9():
    bytes_0 = b"\xc8\x9d\xd9\x9e"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_3 = var_0.to_validation()
    var_4 = var_3.to_lazy()


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_lazy()
    bool_1 = var_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_2.to_either()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = var_0.filter(var_2)
    var_4 = maybe_0.to_validation()
    bool_2 = var_4.to_try()
    bool_3 = var_2.__eq__(maybe_1)
    var_5 = var_2.to_lazy()
    maybe_1.filter(var_4)


def test_case_12():
    float_0 = -1953.065
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_13():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_0.filter(dict_0)


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_0.filter(var_1)
    bool_2 = var_1.__eq__(maybe_1)
    var_3 = var_1.to_lazy()
    maybe_1.filter(var_0)


def test_case_15():
    int_0 = 0
    tuple_0 = (int_0, int_0, int_0)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = False
    int_1 = 807
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1}
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(dict_0, bool_2)
    var_1 = maybe_2.to_validation()
    var_1.ap(bool_2)


def test_case_16():
    int_0 = -102
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    var_0 = maybe_0.map(none_type_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, int_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_1.ap(int_0)
    var_4 = var_2.to_try()
    var_5 = var_1.to_either()
    bool_2 = var_5.__eq__(var_2)
    var_6 = var_5.to_validation()
    maybe_2 = module_0.Maybe(var_2, bool_2)
    var_7 = var_1.ap(var_4)
    var_8 = var_7.to_try()
    bool_3 = False
    maybe_3 = module_0.Maybe(var_7, bool_3)
    var_4.to_lazy()


def test_case_17():
    str_0 = "y*`xb"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()
    var_3 = var_1.bind(bool_0)
    var_1.to_lazy()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = var_0.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_3 = var_0.filter(var_2)
    var_4 = maybe_0.get_or_else(bool_1)
    var_5 = maybe_0.to_validation()
    bool_2 = var_0.__eq__(var_2)
    bool_3 = var_2.__eq__(maybe_1)
    var_6 = var_2.to_lazy()
    maybe_1.filter(var_5)


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = True
    var_1 = var_0.to_either()
    bool_2 = True
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_2 = var_0.to_either()
    list_0 = [maybe_1, var_2, none_type_0, bool_0]
    var_3 = var_0.ap(list_0)
    var_4 = var_0.bind(none_type_0)
    maybe_0.map(bool_1)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(var_0)
    var_1 = maybe_0.to_box()
    var_1.to_box()
