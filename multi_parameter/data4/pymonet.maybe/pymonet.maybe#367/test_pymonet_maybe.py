# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "JjOb_#\n-7pH6f"
    maybe_0 = module_0.Maybe(str_0, str_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_0.map(none_type_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.map(var_2)
    var_4 = maybe_0.ap(var_1)
    var_5 = var_4.to_lazy()


def test_case_3():
    float_0 = -3129.8993
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.to_try()
    var_2 = var_1.map(var_1)
    bool_1 = maybe_0.__eq__(float_0)
    var_2.to_try()


def test_case_4():
    float_0 = -3129.8993
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.get_or_else(var_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = var_0.map(var_2)
    var_4 = maybe_1.to_try()
    var_5 = maybe_1.to_either()


def test_case_5():
    dict_0 = {}
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(dict_0)
    var_1 = maybe_0.to_box()
    bool_2 = var_1.__eq__(dict_0)
    maybe_0.map(var_1)


def test_case_6():
    bytes_0 = b"\x1d\x00q"
    dict_0 = {bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(bytes_0, dict_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_1.to_box()
    var_2 = maybe_0.bind(dict_0)
    var_3 = var_0.to_either()
    var_4 = var_2.map(var_0)
    var_5 = var_4.map(var_0)
    bool_0 = var_4.__eq__(var_3)
    var_6 = var_3.to_try()
    var_7 = var_2.map(dict_0)
    var_8 = var_3.ap(var_5)
    var_9 = maybe_1.to_lazy()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.bind(bool_0)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_2.to_either()
    var_3 = maybe_2.get_or_else(none_type_0)
    maybe_0.bind(var_1)


def test_case_8():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = 511
    bool_1 = False
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_1 = module_0.Maybe(int_0, bool_1)
    maybe_1.ap(dict_0)


def test_case_9():
    object_0 = module_1.object()
    maybe_0 = module_0.Maybe(object_0, object_0)
    var_0 = maybe_0.filter(object_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(object_0, bool_0)
    maybe_1.filter(object_0)


def test_case_10():
    float_0 = 3619.34
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(var_0)
    var_2 = var_0.to_either()
    bool_0 = False
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = var_2.to_validation()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.ap(maybe_0)


def test_case_12():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    list_0 = []
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.ap(list_0)


def test_case_14():
    complex_0 = 1391.9 + 2803.889j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_validation()
    var_1.ap(var_0)


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.ap(none_type_1)
    var_2 = var_1.bind(none_type_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_try()


def test_case_17():
    str_0 = "/T#\t~3\nk>2"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_18():
    complex_0 = 2742.858 - 2913.579332j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(complex_0)


def test_case_19():
    bytes_0 = b"\xe7w;A0\xfd\x86\x0e\x0c."
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    dict_0 = {}
    maybe_1 = module_0.Maybe(none_type_0, dict_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(dict_0, none_type_1)
    var_2 = maybe_2.to_validation()
    var_2.map(var_1)


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.ap(maybe_1)
    var_1 = maybe_1.bind(bool_0)
    var_2 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_2.__eq__(var_1)
    var_3 = maybe_2.to_either()
    var_4 = maybe_2.get_or_else(none_type_0)
    maybe_0.bind(var_2)
