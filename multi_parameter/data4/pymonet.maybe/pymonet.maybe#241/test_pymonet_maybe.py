# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xd7KvZ\xd4\xdc\xb5\xd3\xcb{G\x96\xd1\xa9\xd7\xe2\xaaU#\xb5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(maybe_0)


def test_case_3():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    bytes_0 = b"\x88\x15\x17\xa2\xde\xd9\xcb\x1f\xe1\xf70[y2\r"
    var_0 = maybe_0.map(bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(var_1)
    bool_1.to_validation()


def test_case_4():
    bytes_0 = b"\xd7KvZ\xd4\xdc\xb5\xd3\xcb{G\x96\xd1\xa9\xd7\xe2\xaaU#\xb5"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)


def test_case_5():
    bytes_0 = b"L"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(bytes_0)


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_1.bind(none_type_1)
    var_2 = var_1.ap(none_type_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()
    var_5 = var_1.to_validation()
    var_4.to_box()


def test_case_7():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    bytes_0 = b"\x88\x15\x17\xa2\xde\xd9\xcb\x1f\xe1\xf70[y2\r"
    var_1 = maybe_0.map(bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_box()
    bool_1 = var_0.__eq__(var_2)
    var_3 = var_0.to_validation()
    var_4 = var_1.filter(maybe_1)
    var_3.ap(none_type_0)


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.to_lazy()
    maybe_0.filter(maybe_0)


def test_case_9():
    bytes_0 = b"\xe7\xa4\xa6\x995\x0b\xe6\n\xd8\xd8"
    bool_0 = True
    set_0 = {bytes_0, bytes_0, bool_0, bytes_0}
    none_type_0 = None
    list_0 = [set_0]
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_0.to_lazy()


def test_case_10():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_box()


def test_case_11():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    bytes_0 = b"\x88\x15\x17\xa2\xde\xd9\xcb\x1f\xe1\xf70[y2\r"
    var_1 = maybe_0.map(bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_2 = maybe_1.to_box()
    bool_1 = var_0.__eq__(var_2)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_3.ap(bool_0)
    var_5 = var_3.ap(var_0)
    var_6 = var_5.to_either()
    maybe_2 = module_0.Maybe(var_3, maybe_1)
    var_7 = var_0.to_try()
    maybe_3 = module_0.Maybe(var_5, maybe_1)
    maybe_4 = module_0.Maybe(maybe_2, var_0)
    var_8 = var_4.to_try()


def test_case_12():
    int_0 = 2226
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    complex_0 = -903.427845 + 2159.43978j
    complex_1 = -2439.4407 + 1190.49314j
    tuple_0 = (complex_0, complex_1)
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_2 = maybe_1.to_validation()
    var_2.to_validation()


def test_case_14():
    int_0 = 2599
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bool_0)


def test_case_15():
    bytes_0 = b"\xa0\xdfs"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    int_0 = 57
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.bind(int_0)
    var_1.to_either()


def test_case_18():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    bytes_0 = b"\x88\x15\x17\xa2\xde\xd9\xcb\x1f\xe1\xf70[y2\r"
    var_1 = maybe_0.map(bytes_0)
    bool_0 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = var_0.__eq__(maybe_1)
    var_2 = var_0.to_validation()
    var_2.ap(none_type_0)


def test_case_19():
    none_type_0 = None
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(maybe_0)
    var_2 = var_1.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, var_2)
    var_3 = maybe_1.to_box()
    bool_0 = maybe_0.__eq__(maybe_1)
    var_4 = maybe_1.to_validation()
    set_0 = {int_0}
    var_5 = maybe_0.to_validation()
    var_5.filter(set_0)
