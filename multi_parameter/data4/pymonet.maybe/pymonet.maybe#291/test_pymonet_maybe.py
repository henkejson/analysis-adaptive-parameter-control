# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = -3437.074419329786
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    str_0 = "l3n$W5aH"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = var_0.to_either()
    var_3 = var_0.to_lazy()


def test_case_3():
    float_0 = -3437.074419329786
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_1 = var_0.filter(bool_0)
    var_2 = var_1.map(var_0)
    maybe_1.filter(var_2)


def test_case_4():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    float_0 = -120.3
    maybe_1 = module_0.Maybe(float_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_2.to_lazy()


def test_case_6():
    str_0 = "!{ig]]D1-QLTI"
    float_0 = 23.6238
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.bind(str_0)


def test_case_7():
    complex_0 = 3856.045 - 1218.004613j
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    maybe_0.ap(complex_0)


def test_case_8():
    float_0 = -3437.074419329786
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1.filter(maybe_1)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.ap(none_type_0)


def test_case_10():
    str_0 = "l3n$W5aH"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    none_type_1 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2 = module_0.Maybe(maybe_1, none_type_1)
    var_2 = maybe_1.get_or_else(bool_1)
    var_3 = maybe_2.to_try()


def test_case_11():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()
    var_3.ap(bool_0)


def test_case_13():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_14():
    str_0 = "l3n$W5aH"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_either()
    none_type_1 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_2 = module_0.Maybe(maybe_1, none_type_1)
    var_2 = maybe_1.get_or_else(bool_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_1.to_lazy()
    var_5 = maybe_2.to_lazy()


def test_case_15():
    int_0 = -560
    dict_0 = {int_0: int_0, int_0: int_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_try()
    bytes_0 = b"\x80\x97\x9avd\x9a\xa7E\xc7\xd1\xdb\xcfXr"
    bool_0 = False
    tuple_0 = (var_0, bytes_0, bool_0, var_0)
    maybe_1 = module_0.Maybe(tuple_0, var_0)
    var_1 = maybe_1.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    str_0 = "<j"
    bytes_0 = b"\xc1\x8a\x94v^R\xfd\xc2\xb7\\\xda9\xae"
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_1.get_or_else(bytes_0)
    var_1.bind(str_0)


def test_case_17():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_validation()
    list_0 = [none_type_0]
    list_1 = [var_0, list_0, bool_0]
    var_3 = var_0.map(list_1)
    maybe_0.filter(var_0)


def test_case_18():
    str_0 = "l3n$W5aH"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(var_1)
    var_2 = var_0.map(var_1)
    var_3 = module_0.Maybe(var_1, none_type_0)
    var_4 = var_0.map(var_1)
    bool_2 = var_3.__eq__(var_3)
    var_5 = var_2.to_try()
    var_6 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_2, var_3)
    var_7 = var_2.to_lazy()
    var_8 = var_4.ap(bool_0)
    var_9 = var_8.to_box()
    var_10 = maybe_0.ap(bool_0)
    var_11 = var_10.ap(str_0)
    var_1.to_try()


def test_case_19():
    str_0 = "l3n$W5aH"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.map(maybe_0)


def test_case_20():
    int_0 = -2510
    none_type_0 = None
    float_0 = -3438.1
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = maybe_0.__eq__(float_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = maybe_0.to_try()
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_2.filter(var_0)
    var_4 = var_0.filter(var_0)
    var_5 = maybe_0.get_or_else(none_type_0)
    bool_1 = False
    var_6 = maybe_0.get_or_else(var_1)
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_7 = var_0.filter(var_1)
    var_8 = maybe_1.to_validation()
    var_9 = maybe_0.to_lazy()
    var_10 = var_2.ap(none_type_0)
    var_11 = var_0.to_box()
    bool_2 = var_4.__eq__(maybe_0)
    bool_3 = True
    maybe_2 = module_0.Maybe(var_7, bool_3)
