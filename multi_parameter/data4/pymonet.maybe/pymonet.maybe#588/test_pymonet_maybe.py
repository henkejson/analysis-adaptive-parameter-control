# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    var_0.bind(none_type_0)


def test_case_3():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    str_0 = ""
    maybe_1 = module_0.Maybe(bool_0, str_0)
    bool_3 = var_2.__eq__(var_1)
    var_0.to_either()


def test_case_4():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = True
    var_1 = maybe_1.get_or_else(none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_2.map(maybe_1)
    var_3 = maybe_1.get_or_else(maybe_2)


def test_case_5():
    str_0 = "jR[@r\t&\x0cgV\t4\t%Cfo"
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.get_or_else(str_0)
    bool_2 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.map(bool_2)


def test_case_6():
    str_0 = "tUvg`(i,08pDZ DU/q"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.ap(str_0)
    var_2 = var_1.bind(var_1)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    list_0 = []
    bool_0 = False
    bool_1 = True
    object_0 = module_1.object()
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_0, bool_2)
    maybe_1 = module_0.Maybe(list_0, bool_1)
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_2.to_lazy()
    var_1 = maybe_1.map(var_0)
    bool_3 = maybe_0.__eq__(var_1)
    var_2 = maybe_2.to_either()
    maybe_3 = module_0.Maybe(object_0, bool_0)
    none_type_0 = None
    maybe_3.ap(none_type_0)


def test_case_9():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = maybe_0.filter(var_0)
    var_0.to_box()


def test_case_10():
    complex_0 = -3321 - 2533.121758j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_11():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.filter(bool_0)
    var_3 = var_2.ap(bool_1)
    var_4 = var_3.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_12():
    none_type_0 = None
    bytes_0 = b":\xbc \xea\xa5\r$\xf7`+"
    none_type_1 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_lazy()


def test_case_13():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.get_or_else(set_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_either()
    var_4 = var_2.to_lazy()
    var_5 = var_2.ap(var_2)
    var_6 = var_2.to_box()
    var_7 = maybe_0.filter(var_1)
    var_8 = var_6.to_either()


def test_case_14():
    dict_0 = {}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_either()
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = var_0.__eq__(var_0)
    var_0.map(var_0)


def test_case_15():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_2.ap(var_0)


def test_case_16():
    none_type_0 = None
    bytes_0 = b"<%\xfc\xb4\x08\x0c\xbb\x86\x9eI\xf9G\x19\xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(none_type_0)


def test_case_17():
    complex_0 = -3321 - 2533.121758j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_18():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_try()
    var_1.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.to_lazy()
    var_3 = maybe_0.ap(maybe_0)
    bool_2 = var_2.__eq__(var_0)
    var_4 = var_2.map(var_2)
    var_4.to_either()


def test_case_20():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_1.to_validation()
    var_3.map(var_1)
