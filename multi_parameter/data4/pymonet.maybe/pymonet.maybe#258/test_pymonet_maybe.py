# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\xccr\xa2\xad\xe0p\x7f\x984\xb1\xf6\xed:\xac\x89/Rr\xd7"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.map(var_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.to_box()
    var_3.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    var_2 = var_0.map(none_type_0)
    var_3 = var_2.ap(none_type_0)
    var_4 = var_3.filter(none_type_0)
    bool_1 = var_0.__eq__(none_type_0)
    bool_1.ap(var_3)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    list_0 = []
    maybe_1 = module_0.Maybe(list_0, list_0)
    none_type_1 = None
    maybe_2 = module_0.Maybe(list_0, none_type_1)
    maybe_2.map(list_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_1.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.get_or_else(var_3)
    var_5 = var_4.ap(var_2)
    var_6 = var_1.to_try()
    var_7 = var_1.filter(var_3)


def test_case_7():
    dict_0 = {}
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.to_try()
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    none_type_1 = None
    var_2 = maybe_1.to_try()
    maybe_1.bind(none_type_1)


def test_case_8():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_validation()
    bool_1 = False
    bool_2 = var_0.__eq__(var_0)
    var_1 = maybe_0.ap(none_type_0)
    var_2 = var_0.to_try()
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_3 = maybe_1.to_box()
    bool_3 = var_3.__eq__(none_type_0)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = maybe_0.to_try()
    maybe_0.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    bool_0 = var_0.__eq__(var_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.bind(var_0)
    var_3 = var_2.to_either()
    bool_2 = True
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_4 = maybe_2.to_box()
    var_4.to_box()


def test_case_12():
    bool_0 = False
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    maybe_0 = module_0.Maybe(bool_0, str_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(dict_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_lazy()
    var_3 = var_2.to_box()
    var_0.to_box()


def test_case_14():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_2.filter(int_0)


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_1.to_validation()


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.to_box()
    bool_1 = var_0.__eq__(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_0.to_lazy()
    var_5 = var_0.to_box()
    var_6 = var_4.to_box()
    var_2.to_box()


def test_case_18():
    bool_0 = True
    str_0 = "z;}S-C-mL\rJpb> \r;V"
    maybe_0 = module_0.Maybe(bool_0, str_0)
    none_type_0 = None
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(none_type_0)
    var_2 = var_1.to_either()
    var_3 = var_1.map(var_2)
    var_4 = var_1.to_try()
    bool_1 = var_2.__eq__(none_type_0)
    var_5 = var_3.filter(maybe_0)
    var_6 = maybe_0.ap(bool_0)
    var_7 = var_3.bind(var_5)
    var_8 = maybe_0.filter(var_6)
    var_9 = var_1.get_or_else(var_5)
    bool_2 = maybe_0.__eq__(var_5)
    var_10 = var_6.map(bool_0)
    var_11 = var_10.to_try()
    var_12 = var_11.get_or_else(maybe_0)
    var_13 = var_7.filter(var_9)
    var_14 = var_9.to_either()
    var_15 = var_14.to_lazy()
    var_16 = var_12.get_or_else(var_15)
    var_17 = var_16.to_either()
    var_18 = var_9.map(none_type_0)
    var_19 = var_6.to_lazy()
    var_20 = var_12.to_lazy()
    var_21 = var_15.to_validation()
    var_22 = var_11.filter(var_21)
    bool_3 = True
    var_23 = var_14.ap(bool_3)
    var_24 = var_2.ap(var_14)
    var_24.to_either()


def test_case_19():
    bytes_0 = b"\xa1^H\xb7\xd9\xa0\x84\x0fl\x80N\xa1\x9d\x9c\xb6Y\x0eB"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_2 = maybe_0.__eq__(bytes_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = maybe_0.to_lazy()
    var_5 = var_1.to_try()
    var_5.to_try()
