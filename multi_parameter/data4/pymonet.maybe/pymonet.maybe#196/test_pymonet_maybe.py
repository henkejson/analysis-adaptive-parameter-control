# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"J\xe5\\\xe6:\xb7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_box()


def test_case_3():
    float_0 = -426.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(float_0)
    bool_0 = maybe_0.__eq__(var_1)
    var_1.get_or_else(var_1)


def test_case_4():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    bool_0 = True
    var_2 = maybe_0.map(bool_0)
    var_3 = var_1.filter(var_0)
    var_4 = maybe_0.bind(var_3)


def test_case_5():
    bytes_0 = b"E\xf9\x9a\x87"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    none_type_0 = None
    bytes_0 = b"$P\xca\x9f"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    list_0 = []
    var_1 = maybe_0.bind(list_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)


def test_case_7():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = maybe_0.filter(var_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.get_or_else(bytes_0)
    var_3 = maybe_0.to_box()


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_0 = maybe_1.get_or_else(maybe_1)
    var_1 = var_0.to_box()
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_2 = maybe_2.get_or_else(maybe_1)
    var_2.filter(bool_0)


def test_case_10():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_1.to_either()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_13():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_box()


def test_case_14():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(var_1)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bytes_0)


def test_case_15():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_1.to_try()
    var_1.filter(var_1)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_0.ap(var_2)


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    int_0 = -3447
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.map(none_type_1)
    var_1 = var_0.filter(none_type_0)
    none_type_2 = None
    none_type_3 = None
    maybe_1 = module_0.Maybe(none_type_3, none_type_3)
    var_2 = maybe_1.to_validation()
    var_2.get_or_else(none_type_2)


def test_case_18():
    list_0 = []
    float_0 = -3986.365633
    set_0 = {float_0, float_0, float_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.map(list_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"$P\xca\x9f"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.bind(none_type_0)


def test_case_20():
    bytes_0 = b"E\xf9\x87"
    list_0 = [bytes_0, bytes_0]
    maybe_0 = module_0.Maybe(list_0, bytes_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.bind(var_0)
    var_2 = var_0.filter(var_0)
    var_3 = var_0.ap(var_2)
    bool_0 = var_3.__eq__(maybe_0)
    var_4 = var_3.get_or_else(bool_0)
    var_4.map(var_0)


def test_case_21():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.map(bool_0)
