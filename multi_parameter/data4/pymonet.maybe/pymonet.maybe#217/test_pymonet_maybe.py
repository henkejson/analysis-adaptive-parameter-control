# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xc8\x8f\x96a\xea?\x1a"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    bool_2 = var_1.__eq__(none_type_0)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_0.filter(bool_0)


def test_case_3():
    none_type_0 = None
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    tuple_0 = (list_1, list_0)
    str_0 = "H*rn>dB:/9RKcH{BF,T"
    set_0 = {str_0, str_0, str_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.map(tuple_0)
    var_1 = var_0.bind(none_type_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_1.to_either()
    maybe_1.map(var_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_1.to_try()
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.to_box()
    var_3 = var_0.bind(var_2)
    var_4 = maybe_0.to_lazy()
    maybe_0.bind(var_2)


def test_case_6():
    float_0 = 2786.87212
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.map(bool_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_validation()
    var_3 = var_0.bind(var_2)
    var_4 = var_3.ap(bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_5 = maybe_0.to_box()
    var_6 = maybe_0.to_validation()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.ap(none_type_0)


def test_case_8():
    bytes_0 = b"J\xc8"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)


def test_case_9():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.filter(var_1)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    set_0 = set()
    var_1 = maybe_0.to_either()
    int_0 = -2877
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_2 = maybe_1.get_or_else(set_0)
    var_2.filter(var_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.get_or_else(bool_1)
    var_0.to_either()


def test_case_12():
    bytes_0 = b"\xbc0\xea\x94\xc8%="
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -2461
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_1.ap(dict_0)


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    float_0 = -1055.3
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_1.to_box()
    var_1 = var_0.to_either()
    var_1.bind(maybe_0)


def test_case_14():
    bytes_0 = b"\x9a[\xad\x01\x12\xc9\xc8\xc3\xa8\xdai"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.map(bytes_0)


def test_case_15():
    bytes_0 = b"\xc8\x8f\x96a\xea?7"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bytes_0 = b"\xd67}\xd3\xf5s\x95$\x1f"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(none_type_0)
    var_1.to_lazy()


def test_case_17():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_1)


def test_case_18():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    maybe_1 = module_0.Maybe(tuple_0, none_type_0)
    var_1 = maybe_0.to_validation()
    maybe_1.filter(var_1)


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_validation()
    bytes_0 = b"\xd3\xde\xd5\xc4\xfe\xf4\x8c\x97`f\xb2G\xb6\xceD\xb6\x8b^\x8a\x7f"
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_3 = maybe_0.to_try()
    var_3.to_either()


def test_case_20():
    float_0 = 2786.87212
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.map(bool_0)
    maybe_1 = maybe_0.to_try()
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = var_0.to_either()
    maybe_1.to_lazy()
