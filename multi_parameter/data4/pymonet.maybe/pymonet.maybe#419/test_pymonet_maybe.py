# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"B\x1fw\x0e\xa4]\xe0\x97O\x05\x94\xb4\xf3\x00\xfd)4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.bind(var_0)
    var_2 = var_0.filter(none_type_0)
    var_3 = var_0.to_try()
    bool_1 = var_3.__eq__(var_0)
    var_4 = maybe_0.get_or_else(var_1)
    var_5 = var_3.filter(var_4)
    bool_2 = var_4.__eq__(bool_1)
    var_6 = var_4.ap(none_type_1)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(var_0)
    bool_1 = var_1.__eq__(maybe_0)
    var_2 = var_1.filter(none_type_0)
    var_3 = maybe_0.to_lazy()


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.bind(var_0)
    var_2 = var_0.filter(none_type_0)
    var_3 = var_0.to_try()
    bool_1 = var_3.__eq__(var_0)
    var_4 = maybe_0.get_or_else(var_0)


def test_case_6():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.bind(set_0)


def test_case_7():
    int_0 = 549
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.ap(int_0)
    var_2 = var_0.bind(var_0)
    var_3 = var_1.to_lazy()
    var_4 = var_3.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_0, none_type_0)


def test_case_8():
    str_0 = "Maybe[U]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)


def test_case_9():
    str_0 = "Maybe[U]"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_0.map(var_1)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(none_type_1)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.filter(none_type_0)
    var_3 = var_0.to_try()
    var_4 = maybe_0.map(var_0)
    var_5 = var_1.filter(var_0)
    var_6 = var_2.to_try()
    bool_1 = var_0.__eq__(var_2)
    var_7 = var_1.get_or_else(bool_0)
    var_8 = var_2.to_either()
    var_9 = var_4.to_lazy()
    var_10 = var_4.bind(var_8)
    var_11 = var_0.bind(var_1)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    str_0 = "g(i:H{f:t %j/i"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.to_box()


def test_case_14():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    str_0 = "Maybe[U]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = maybe_1.to_try()
    maybe_1.filter(var_2)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_2.filter(var_1)


def test_case_18():
    str_0 = "Maybe[U]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    bool_0 = maybe_0.__eq__(str_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.ap(str_0)
    tuple_0 = (maybe_0,)
    bool_2 = True
    maybe_2 = module_0.Maybe(tuple_0, bool_2)
    var_1 = maybe_1.bind(var_0)
    var_2 = maybe_1.filter(var_0)
    var_3 = var_1.to_try()
    var_4 = var_3.get_or_else(tuple_0)
    var_5 = var_1.map(maybe_2)
    bool_3 = maybe_0.__eq__(var_2)


def test_case_19():
    str_0 = "g(i:H{f:t %j/i"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(str_0, bool_1)
    maybe_0.ap(str_0)
