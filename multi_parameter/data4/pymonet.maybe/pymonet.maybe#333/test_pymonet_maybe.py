# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"9\x022\xb28\xa39\xb2\x97\xf0]SF\xc1\x86\xafM\x0c\xcb"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)


def test_case_3():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    object_0 = module_1.object()
    maybe_1 = module_0.Maybe(object_0, object_0)
    none_type_0 = None
    bool_0 = maybe_1.__eq__(none_type_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    maybe_2.filter(none_type_0)


def test_case_4():
    str_0 = "Y~6S_`gv[K"
    dict_0 = {str_0: str_0, str_0: str_0}
    maybe_0 = module_0.Maybe(str_0, dict_0)
    bool_0 = True
    var_0 = maybe_0.map(dict_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = var_1.to_try()
    var_4 = maybe_1.get_or_else(bool_0)
    var_5 = maybe_1.filter(var_4)
    var_2.to_lazy()


def test_case_5():
    float_0 = -2674.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    maybe_0.map(bool_0)


def test_case_6():
    bytes_0 = b"Q3\xd3\xca"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(none_type_0)
    var_1 = var_0.get_or_else(bytes_0)
    var_1.to_box()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_0.filter(var_0)


def test_case_11():
    float_0 = -1469.47025
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_0.bind(var_0)


def test_case_12():
    int_0 = -2178
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = -1633
    maybe_0 = module_0.Maybe(int_1, int_1)
    var_0 = maybe_0.filter(dict_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(var_1, int_1)
    bool_0 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_0)
    var_2 = maybe_2.to_validation()
    var_2.to_validation()


def test_case_13():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = False
    bool_3 = maybe_1.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(maybe_1, bool_2)
    var_1 = maybe_1.bind(bool_1)
    maybe_3 = module_0.Maybe(none_type_0, bool_1)
    var_2 = maybe_1.to_box()
    var_3 = var_1.get_or_else(bool_1)
    var_4 = maybe_3.ap(var_1)
    var_5 = maybe_3.to_validation()


def test_case_14():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_validation()
    var_2.filter(var_2)


def test_case_16():
    int_0 = 2765
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    str_0 = "ImmutableList[U]"
    bool_0 = False
    maybe_1 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_box()
    var_1.map(var_1)


def test_case_18():
    float_0 = -261.7
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_either()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = maybe_1.to_validation()
    int_0 = 79
    var_3 = maybe_0.map(int_0)
    var_4 = maybe_0.filter(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_4.to_try()
    var_7 = var_0.bind(var_6)
    var_8 = maybe_0.to_validation()
    var_9 = maybe_0.map(var_8)
    var_10 = var_4.ap(float_0)
    bool_2 = var_4.__eq__(var_4)
    var_11 = var_4.map(var_10)
    var_12 = var_9.ap(maybe_0)
    var_13 = var_11.get_or_else(var_7)
    maybe_2 = module_0.Maybe(var_0, maybe_0)
    var_14 = var_4.map(var_10)
    var_15 = var_4.ap(float_0)
    var_16 = maybe_0.filter(var_15)
    var_17 = var_7.to_either()
    list_0 = [var_10, bool_2, bool_2, bool_2]
    var_18 = var_10.get_or_else(maybe_0)
    var_19 = var_14.to_lazy()
    var_20 = var_15.to_box()
    var_21 = var_5.bind(var_19)
    var_22 = maybe_0.map(list_0)
    var_23 = var_3.filter(var_1)
    var_24 = var_11.to_either()
    bool_3 = var_18.__eq__(var_12)
    var_25 = var_2.to_lazy()
    var_26 = var_7.filter(var_21)
    var_27 = var_13.to_validation()
    var_28 = var_9.filter(var_1)
    var_29 = var_27.to_either()
