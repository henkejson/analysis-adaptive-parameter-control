# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    float_0 = 155.3383
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bytes_0 = b"I\xde\xbff\xaa\xb7\xde9$QzmMN|\xf6"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bytes_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1.filter(maybe_1)


def test_case_3():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(bool_0)
    var_2 = maybe_0.map(var_1)
    var_3 = var_0.to_either()
    var_4 = maybe_0.ap(bytes_0)
    var_5 = maybe_0.bind(maybe_0)


def test_case_4():
    int_0 = -895
    float_0 = 605.2
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.map(int_0)


def test_case_5():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = maybe_0.bind(maybe_0)


def test_case_6():
    bytes_0 = b"\xe4(\x1d\xcc>}\xc5&\xdd\x02\xb1S\xadUKn"
    bytes_1 = b"\xc0\xc0\xef0\t\xcd\xbd#}\xf1\xbb"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bytes_0)
    var_1 = maybe_0.to_lazy()
    maybe_0.bind(bool_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    bool_2 = False
    maybe_2 = module_0.Maybe(bool_2, bool_2)
    bool_3 = maybe_2.__eq__(var_1)
    bool_4 = False
    maybe_2.ap(bool_4)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)


def test_case_9():
    bytes_0 = b"yZ("
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bytes_0)
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.filter(bytes_0)
    var_2 = var_1.get_or_else(bytes_0)


def test_case_10():
    str_0 = "lE\t0Ai3M!"
    bytes_0 = b"\xe9\x1c\x12\xa8\x15L+C\xf0@\xe7\x83\xed\xe2\xb5\xe2!"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    float_0 = 89.51
    maybe_1 = module_0.Maybe(float_0, float_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_validation()


def test_case_13():
    str_0 = "MI`|XKNt%RIA"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_either()
    var_0.ap(var_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()


def test_case_15():
    float_0 = 1528.702
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    list_0 = [var_0, var_0, var_0, var_0]
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_lazy()
    var_2.get_or_else(float_0)


def test_case_16():
    bytes_0 = b"\xb6\x9a\x8a\xed\x90\xa0'\xc1\xe9O\xef+"
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.get_or_else(bytes_0)
    var_1.to_validation()


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_2 = maybe_0.to_lazy()
    bool_2 = maybe_1.__eq__(var_1)
    bool_3 = var_0.__eq__(bool_1)
    var_3 = maybe_1.bind(maybe_1)


def test_case_18():
    complex_0 = -2322.08883 - 2380.76j
    str_0 = "@-:L\x0bA-z\t7(pz8+lSp"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(complex_0)


def test_case_19():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.ap(bytes_0)
    var_3 = var_2.to_validation()


def test_case_20():
    bool_0 = False
    int_0 = -2171
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: int_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_21():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(var_1, bytes_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.bind(var_2)
    var_4 = var_3.to_try()
    var_5 = var_2.to_validation()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_box()
    var_2.bind(var_0)


def test_case_23():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, bytes_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.bind(var_1)
    var_3 = var_2.to_try()
    var_4 = var_1.ap(var_3)


def test_case_24():
    bytes_0 = b"yZ("
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bytes_0, var_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_0.to_lazy()
    bool_2 = False
    var_2 = maybe_0.bind(bool_2)
    var_3 = maybe_1.ap(var_2)
    var_4 = var_3.bind(var_1)
    var_5 = var_1.to_validation()
    var_6 = maybe_0.to_lazy()
    var_7 = var_4.map(var_3)


def test_case_25():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = maybe_0.filter(var_3)
    var_5 = var_1.bind(var_4)
    var_6 = var_2.ap(var_1)
    var_7 = var_3.bind(var_4)
    var_8 = var_3.to_validation()
