# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    str_0 = "~A\\LY;Cb"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x98\x97~\xa8veJ^\xec:C\x7fH\xa7\x91\xb2U\xc1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    bool_2 = maybe_0.__eq__(var_0)
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    maybe_1.filter(maybe_0)


def test_case_3():
    bytes_0 = b"q\xcc\xe0\x16\x15\xfc\xb2*\xa7S\xa1:\x0fF\xcb\xfb\xda\x1a"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_validation()
    var_1.map(var_0)


def test_case_4():
    int_0 = -2182
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = var_0.to_validation()
    var_3 = maybe_0.map(var_0)
    var_4 = var_2.to_lazy()
    var_0.get_or_else(var_4)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_validation()
    maybe_1.map(bool_0)


def test_case_6():
    bytes_0 = b"id4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.get_or_else(maybe_1)
    var_4 = maybe_1.bind(var_3)
    var_5 = maybe_1.bind(var_1)
    none_type_0 = None
    var_6 = maybe_1.map(none_type_0)
    var_7 = maybe_1.bind(none_type_0)
    var_8 = var_3.to_try()
    var_9 = maybe_1.to_validation()
    var_10 = var_9.to_lazy()
    var_11 = var_9.to_lazy()
    var_12 = var_11.to_either()
    bool_0 = var_11.__eq__(none_type_0)
    var_13 = var_12.to_lazy()
    var_9.ap(var_9)


def test_case_7():
    bytes_0 = b"\xd3O.\x9c"
    str_0 = "\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        "
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    maybe_1.bind(maybe_0)


def test_case_8():
    bytes_0 = b"id4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = maybe_1.filter(var_1)
    var_3 = maybe_1.get_or_else(maybe_1)
    var_4 = maybe_1.bind(var_3)
    var_5 = maybe_1.bind(var_1)
    none_type_0 = None
    var_6 = maybe_1.map(none_type_0)
    var_7 = maybe_1.bind(none_type_0)
    var_8 = var_3.to_try()
    var_9 = var_4.ap(var_4)
    var_10 = var_1.to_validation()
    var_11 = maybe_0.ap(var_8)
    var_12 = maybe_0.to_lazy()
    var_13 = var_2.to_lazy()
    var_14 = var_3.get_or_else(var_7)
    var_15 = var_9.filter(var_11)
    var_16 = var_5.to_lazy()
    var_0.to_box()


def test_case_9():
    str_0 = "Box[U]"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(str_0)


def test_case_10():
    bytes_0 = b"\x98\x97~\xa8veJ^\xec:C\x7fH\xa7\x91\xb2U\xc1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    int_0 = 1
    maybe_2 = module_0.Maybe(none_type_0, int_0)
    var_2 = maybe_0.get_or_else(var_0)
    var_2.to_try()


def test_case_12():
    none_type_0 = None
    none_type_1 = None
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(none_type_1)
    var_2 = var_1.map(none_type_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()


def test_case_14():
    bytes_0 = b"b\x04\xd0\x1c7.\x12\x16x\xe2N\x8b\x1c\xcao"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_box()


def test_case_15():
    bool_0 = False
    set_0 = {bool_0}
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(set_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bytes_0 = b"\x98\x97~\xa8veJ^\xec:C\x7fH\xa7\x91\xb2U\xc1"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_lazy()
    bool_2 = maybe_0.__eq__(var_1)
    var_3 = var_1.to_try()
    maybe_1.filter(var_3)


def test_case_19():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    float_0 = 570.0
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()


def test_case_21():
    bytes_0 = b"\x03\xd4*T\xcc\xd7q\x1b#\x1e\xf1\x98\x9d\x1b\x04\xc0\x06\xdc\x8f\xe5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0.bind(list_0)


def test_case_22():
    bytes_0 = b"\x98\x97~\xa8veJ^\xec:C\xa7\x91\xb2U\xc1\xfd"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.filter(bytes_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_2 = maybe_1.to_lazy()
    bool_2 = var_2.to_try()
    var_3 = var_1.to_try()
    maybe_1.filter(var_3)


def test_case_23():
    bytes_0 = b"}\xbdu%\xc5\x01b\xba!\xd6\xe8\x00\xee"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_2 = var_0.__eq__(var_0)
    generic_0 = module_1.Generic()
    var_2 = var_0.filter(var_0)
    var_3 = maybe_0.get_or_else(maybe_0)
    var_4 = var_3.ap(var_3)
    bool_3 = True
    var_5 = var_4.get_or_else(maybe_0)
    var_6 = var_4.to_lazy()
    var_7 = maybe_0.bind(bool_0)
    var_8 = module_0.Maybe(var_0, var_6)
    var_9 = var_8.map(bool_3)
    var_10 = var_9.to_lazy()
    var_11 = var_5.to_lazy()
    var_12 = var_2.bind(var_6)
    bool_4 = var_5.__eq__(var_8)
    maybe_1 = module_0.Maybe(bytes_0, bool_3)
    var_13 = var_4.bind(var_5)
    var_14 = maybe_1.ap(var_8)
    var_15 = var_14.to_box()
    var_16 = var_13.to_validation()
    var_17 = var_12.bind(var_3)
    var_18 = var_1.to_box()
    var_18.map(var_5)
