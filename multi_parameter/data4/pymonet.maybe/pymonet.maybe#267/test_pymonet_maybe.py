# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"Z\xad\x0c%1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    complex_0 = 1550 + 547.215j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.ap(complex_0)
    var_2.get_or_else(maybe_0)


def test_case_3():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(generic_0)
    var_1 = maybe_0.filter(bool_0)
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_2.map(maybe_0)
    generic_0.to_validation()


def test_case_4():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    bytes_0 = b"\x10\x9d\r: \xa1X\x93\xf2\x82\x1a\x84Kv"
    bool_0 = True
    bytes_1 = b"\xa1"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_2.ap(bytes_0)


def test_case_6():
    bytes_0 = b"x\t\xd4\x07"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    maybe_1.bind(bytes_0)


def test_case_7():
    bytes_0 = b"e\xf5\xc8\x13\x9c\x0f\x074\xe5U\xbb\x12\xb7\t\x85\xe0\x0e\x96\x91"
    int_0 = 2957
    float_0 = 98.81322
    int_1 = 783
    list_0 = [float_0, int_1, int_1, int_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.ap(int_0)
    var_1 = var_0.ap(bytes_0)


def test_case_8():
    bytes_0 = b""
    int_0 = 1116
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_lazy()


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(maybe_0)


def test_case_10():
    none_type_0 = None
    str_0 = "2l:#g"
    dict_0 = {}
    none_type_1 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_1)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.get_or_else(none_type_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.to_either()


def test_case_12():
    str_0 = "ImmutableList[U]"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_either()
    var_1.filter(var_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    int_0 = 829
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(maybe_0, int_0)
    var_1.bind(var_2)


def test_case_14():
    dict_0 = {}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_15():
    complex_0 = 1550 + 547.215j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(complex_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_1.ap(complex_0)
    var_3.get_or_else(maybe_0)


def test_case_16():
    bytes_0 = b"\xecgo\x84\xfbqC\x07\x1fF\x17\x94\xb4\xfc:\xde\\"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(var_0)
    var_1.filter(var_0)


def test_case_17():
    int_0 = -4767
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_lazy()
    var_2.to_lazy()


def test_case_18():
    bytes_0 = b"\xc7\xd7"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_1.to_box()


def test_case_19():
    int_0 = 1316
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_0, bool_0)
    str_0 = "pb"
    bool_1 = False
    bytes_0 = b"\x11\xb9\xa4\xeb\x9b\xb2\x98dF\xebRF1m\xab4#"
    maybe_2 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.to_box()
    var_3 = var_2.to_lazy()
    var_4 = maybe_2.to_lazy()
    var_5 = maybe_2.to_either()
    var_6 = var_3.to_box()
    maybe_3 = module_0.Maybe(str_0, bool_1)
    var_7 = var_4.to_box()
    var_8 = var_6.ap(var_0)
    var_9 = maybe_3.to_try()
    var_10 = maybe_3.to_try()
    maybe_2.filter(bytes_0)


def test_case_20():
    bytes_0 = b"x\t\xd4\x07"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    var_0.bind(var_1)


def test_case_21():
    bytes_0 = b"x\t\xd4\x07"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_1 = module_0.Maybe(bytes_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, maybe_1)
    maybe_3 = module_0.Maybe(maybe_0, bool_0)
    bool_1 = maybe_1.__eq__(maybe_2)
    var_0 = maybe_3.to_box()
    var_1 = maybe_3.bind(var_0)
    var_2 = maybe_3.filter(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_2.to_box()
    var_3.ap(bytes_0)
