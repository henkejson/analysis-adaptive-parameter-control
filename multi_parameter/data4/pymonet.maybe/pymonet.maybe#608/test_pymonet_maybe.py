# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()


def test_case_3():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_box()


def test_case_4():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.to_box()
    var_2 = var_0.to_box()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.ap(var_2)
    var_5 = var_0.to_lazy()
    var_6 = var_1.to_validation()
    var_7 = var_4.ap(var_3)
    var_8 = maybe_0.map(var_7)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(maybe_0)


def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.bind(list_0)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()


def test_case_7():
    bool_0 = True
    int_0 = -1472
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.to_validation()
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = maybe_0.ap(maybe_0)
    var_3 = maybe_0.to_box()


def test_case_8():
    str_0 = "O#<ErY3]?rjOx"
    set_0 = {str_0, str_0}
    maybe_0 = module_0.Maybe(set_0, str_0)
    var_0 = maybe_0.to_validation()
    list_0 = []
    bool_0 = False
    maybe_1 = module_0.Maybe(list_0, bool_0)
    maybe_1.filter(var_0)


def test_case_9():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = var_1.bind(var_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.filter(var_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, maybe_0)
    var_0 = maybe_1.to_lazy()
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_validation()
    var_3 = maybe_1.to_either()
    var_4 = var_0.bind(var_1)
    var_5 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_6 = maybe_2.ap(var_5)
    maybe_2.filter(var_0)


def test_case_12():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()


def test_case_13():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_box()
    maybe_0.filter(maybe_0)


def test_case_14():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.get_or_else(maybe_0)
    var_3 = maybe_0.bind(var_2)
    var_4 = var_2.to_box()
    var_5 = maybe_0.filter(var_4)
    var_6 = var_5.filter(var_4)
    var_0.to_lazy()


def test_case_15():
    float_0 = 2289.724
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(str_0)
    var_0 = maybe_0.to_try()


def test_case_17():
    tuple_0 = ()
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.get_or_else(tuple_0)
    var_1.to_lazy()


def test_case_18():
    int_0 = -714
    bytes_0 = b"\x94<lq\xdf\xe3a\xae\x05.\x1b"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.ap(int_0)
    str_0 = "\n        Return monad value.\n\n        :returns: monad value\n        :rtype: A\n        "
    bool_0 = False
    var_2 = var_1.ap(str_0)
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_3 = maybe_1.to_validation()
    var_3.ap(var_1)


def test_case_19():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.filter(maybe_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(var_1)
    int_0 = 2182
    var_5 = var_0.filter(int_0)
    var_6 = var_3.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()
    var_1.ap(none_type_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    maybe_0.bind(bool_0)


def test_case_22():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_0.filter(var_2)
    var_4 = var_2.ap(var_1)
    var_5 = var_3.filter(var_4)
    maybe_1 = module_0.Maybe(var_2, var_4)


def test_case_23():
    str_0 = "P7'/[g;yYW-<_\x0cE7\n.N^"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(bool_1)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    maybe_0.filter(var_0)
