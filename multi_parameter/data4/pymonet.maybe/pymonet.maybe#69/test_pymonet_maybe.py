# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    float_0 = -4824.894
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    bool_1 = var_1.__eq__(var_1)
    var_2 = maybe_0.to_validation()
    var_3 = var_0.to_box()
    var_4 = maybe_0.to_either()


def test_case_3():
    complex_0 = -1413.81 - 3971.514j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    bool_0 = maybe_1.__eq__(complex_0)
    var_0 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_2.to_lazy()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_validation()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    maybe_1.bind(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = module_0.Maybe(bool_0, bool_0)
    bool_1 = var_0.__eq__(var_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_2.to_box()
    var_4 = var_0.to_either()


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    bytes_0 = b"<\x92\xb7\x13Ni"
    str_0 = "rV6Zj('q{2\x0coj"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(var_1)
    var_3 = maybe_0.to_lazy()
    var_4 = var_0.bind(none_type_0)


def test_case_12():
    object_0 = module_1.object()
    list_0 = []
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.get_or_else(list_0)
    var_0.to_validation()


def test_case_13():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_1: bool_1}
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_3 = maybe_1.to_either()
    maybe_1.filter(none_type_0)


def test_case_15():
    bool_0 = False
    int_0 = 1
    bool_1 = True
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.bind(bool_0)


def test_case_16():
    complex_0 = -1413.81 - 3971.514j
    none_type_0 = None
    maybe_0 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.to_either()
    var_2.to_either()


def test_case_17():
    str_0 = "\\=\\=}vILz}5"
    str_1 = ": zgw/4M4:P?c\tw"
    bytes_0 = b"\xfd\x1d\xd6\xdd\x99\x89t\xc5e\xech\x80\xbf\x9f\xc0:"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_try()
    list_0 = [var_0, var_0]
    maybe_1 = module_0.Maybe(list_0, var_0)
    var_1 = maybe_1.ap(str_1)
    var_2 = var_1.get_or_else(str_0)


def test_case_18():
    generic_0 = module_2.Generic()
    maybe_0 = module_0.Maybe(generic_0, generic_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(generic_0, bool_0)
    var_1 = maybe_1.to_box()
    bool_1 = False
    var_2 = maybe_0.to_lazy()
    maybe_2 = module_0.Maybe(generic_0, bool_1)
    var_3 = maybe_2.to_try()
    var_0.to_either()


def test_case_19():
    int_0 = -131
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = False
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1 = maybe_1.to_validation()
    var_0.map(var_1)


def test_case_21():
    bytes_0 = b"UE\xec\xd7\x92\xe6\xd6h\xdd\xa2\x03\xe4\xdb\xb9"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.bind(var_1)
    maybe_2 = module_0.Maybe(bool_1, var_1)
    var_3 = var_1.to_lazy()
    var_4 = maybe_1.to_validation()
    bool_2 = maybe_1.__eq__(var_0)
    float_0 = -97.3709
    var_5 = var_0.ap(float_0)
    var_6 = var_0.map(var_4)
    var_7 = var_6.ap(var_2)
    var_8 = var_6.to_try()
    var_9 = maybe_1.to_box()
    var_0.get_or_else(var_9)


def test_case_23():
    str_0 = "Fist[value={}]"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = maybe_0.__eq__(var_1)
    var_2 = maybe_0.ap(str_0)
    var_3 = maybe_1.to_either()
    var_4 = var_3.to_validation()
    var_5 = maybe_0.to_validation()
    var_6 = var_5.to_box()
    bool_2 = var_2.__eq__(var_0)
    var_7 = maybe_0.to_box()
    maybe_2 = module_0.Maybe(var_6, var_4)
    var_8 = var_3.to_validation()
    bool_3 = maybe_2.__eq__(var_1)
    var_7.to_box()


def test_case_24():
    bytes_0 = b"\x942\x1f\xbc]@\x97\xba\x9f"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_lazy()
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [dict_0]
    bool_2 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_2, none_type_0)
    var_2 = maybe_1.get_or_else(list_0)
    var_2.to_try()
