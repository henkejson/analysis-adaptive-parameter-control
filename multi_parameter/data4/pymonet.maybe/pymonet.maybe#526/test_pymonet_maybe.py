# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = -1225
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.map(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.to_box()
    bool_1 = var_3.__eq__(maybe_0)
    var_4 = var_0.to_lazy()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_1)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(bool_0)
    var_1 = maybe_1.to_try()
    var_2 = var_0.get_or_else(maybe_1)
    var_3 = var_2.to_try()
    var_4 = maybe_0.to_validation()
    var_5 = var_2.bind(var_4)
    maybe_0.filter(var_5)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_0.bind(var_1)


def test_case_8():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(generic_0)
    list_0 = var_0.to_validation()
    var_1 = maybe_0.ap(generic_0)
    var_2 = maybe_0.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_0.to_try()


def test_case_9():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_1.filter(generic_0)
    list_0 = [generic_0, generic_0, generic_0]
    var_2 = maybe_0.to_try()
    var_3 = maybe_1.filter(none_type_0)
    maybe_2 = module_0.Maybe(maybe_0, var_3)
    var_4 = maybe_1.ap(maybe_1)
    var_5 = var_4.map(list_0)
    bool_1 = var_5.__eq__(bool_0)
    var_6 = maybe_0.ap(var_4)
    var_2.ap(var_5)


def test_case_10():
    bytes_0 = b"g/\xeb\xf6\xf7uZ\xfbq\xa7\xc9\xf8\xaf\xdb\xb1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_validation()
    var_2 = var_0.to_box()
    var_3 = var_2.to_validation()
    var_4 = var_3.to_either()
    var_5 = maybe_0.filter(var_4)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.bind(maybe_1)
    maybe_0.filter(var_2)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.filter(bool_0)
    var_1 = var_0.get_or_else(maybe_1)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_13():
    bytes_0 = b"\xda\xf6\x81s\x04"
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_1 = module_0.Maybe(list_0, tuple_0)
    var_0 = maybe_1.to_either()
    var_0.get_or_else(bytes_0)


def test_case_14():
    set_0 = set()
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    float_0 = 3058.2
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(float_0, float_0)
    var_2 = maybe_1.to_try()
    var_3 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(float_0, float_0)
    var_3.to_lazy()


def test_case_15():
    str_0 = "\n    Perform left-to-right function composition.\n\n    :param value: argument of first applied function\n    :type value: Any\n    :param functions: list of functions to applied from left-to-right\n    :type functions: List[Function]\n    :returns: result of all functions\n    :rtype: Any\n    "
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = False
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.bind(var_1)
    var_3 = var_1.to_try()
    var_4 = var_2.map(var_0)
    var_5 = maybe_1.to_lazy()
    var_6 = maybe_0.to_box()
    var_7 = var_5.to_box()
    var_8 = var_7.to_try()
    var_8.to_validation()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = var_0.to_box()
    var_1.get_or_else(var_1)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = True
    var_2 = var_1.to_try()
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_3 = var_0.to_try()
    var_4 = var_2.get_or_else(bool_1)
    var_5 = maybe_1.filter(var_4)
    maybe_3 = module_0.Maybe(none_type_0, bool_2)
    var_6 = maybe_2.map(var_3)
    bool_3 = maybe_1.__eq__(var_5)
    var_0.ap(var_2)


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(var_0)
    str_0 = "sv\nN9aJ#wb\r"
    var_3 = maybe_0.bind(str_0)
    var_4 = var_3.to_box()
    var_5 = var_0.ap(var_1)
    bool_1 = True
    var_6 = var_4.to_validation()
    maybe_1 = module_0.Maybe(var_1, bool_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(var_0, bool_2)
    var_7 = var_6.to_lazy()
    var_8 = var_3.filter(bool_0)
    bool_3 = maybe_0.__eq__(maybe_2)
    var_1.to_validation()
