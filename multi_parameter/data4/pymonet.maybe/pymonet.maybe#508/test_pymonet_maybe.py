# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    str_0 = "D3TfrhMyKyJH<>\rG}K"
    maybe_0 = module_0.Maybe(str_0, str_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.map(dict_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(var_0, none_type_0)
    var_2 = maybe_2.to_lazy()
    var_3 = maybe_0.map(dict_0)
    var_4 = var_1.filter(var_0)
    var_5 = maybe_1.map(var_4)
    var_6 = var_3.get_or_else(maybe_2)
    var_7 = var_4.to_either()
    var_8 = maybe_1.to_lazy()
    var_6.filter(var_2)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_0.map(var_1)
    var_3 = var_0.filter(bool_0)
    var_4 = var_3.to_box()
    var_5 = maybe_1.map(var_3)
    var_6 = var_2.get_or_else(maybe_2)
    var_7 = var_3.to_either()
    var_6.filter(var_1)


def test_case_4():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    complex_0 = -2278 - 1930.1129j
    dict_0 = {complex_0: complex_0}
    bytes_0 = b"\x006m7"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.bind(var_0)
    var_2 = maybe_0.filter(bytes_0)
    var_3 = var_2.filter(dict_0)
    maybe_1 = module_0.Maybe(var_3, bool_0)
    var_4 = maybe_1.map(none_type_1)
    var_5 = var_4.map(none_type_0)
    var_6 = var_5.to_try()


def test_case_6():
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.bind(dict_0)


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    maybe_0.ap(none_type_0)


def test_case_8():
    float_0 = 1256.4
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.filter(float_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(float_0, bool_1)


def test_case_9():
    float_0 = 1217.8147
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    maybe_0.filter(float_0)


def test_case_10():
    bytes_0 = b"\x87\x1bg\\|\xe1\xec]E\xe1U\xcb\xcffaE>\xc4f\x04"
    str_0 = "{AOSA4X5"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_11():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    bool_2 = var_2.__eq__(set_0)
    var_3 = var_2.to_box()
    maybe_1.filter(var_1)


def test_case_12():
    float_0 = -365.5943
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(float_0)


def test_case_13():
    str_0 = "D3TfrhMyKy+H<>\rG}K"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_lazy()


def test_case_14():
    str_0 = "\n        Take function and applied this function with monad value and returns function result.\n\n        :params binder: function to apply on monad value\n        :type binder: Function(A) -> Try[B]\n        :returns: for successfully result of binder, othercase copy of self\n        :rtype: Try[B]\n        "
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_try()
    var_3 = var_1.to_either()


def test_case_16():
    str_0 = "su~<NB.tLb-J\tf5R/^"
    complex_0 = 842.5 - 1126.4492j
    bool_0 = True
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(str_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()


def test_case_18():
    complex_0 = -2278 - 1930.1129j
    dict_0 = {complex_0: complex_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = var_0.map(var_0)
    var_2 = var_0.to_box()
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.to_either()
    var_5 = var_4.to_box()
    var_6 = var_1.bind(var_5)
    var_7 = var_6.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(var_4, bool_1)
    var_8 = maybe_1.get_or_else(dict_0)
    var_9 = var_3.ap(var_5)
    var_10 = var_1.get_or_else(var_6)
    var_11 = var_4.to_validation()
    var_2.map(var_11)


def test_case_19():
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.filter(set_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(set_0, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    bool_3 = var_2.__eq__(set_0)
    var_3 = var_2.to_box()
    maybe_1.filter(var_1)


def test_case_20():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.map(dict_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_0.map(dict_0)
    var_3 = var_0.filter(bool_0)
    var_4 = var_3.to_box()
    var_5 = maybe_1.map(var_3)
    var_6 = var_2.get_or_else(maybe_2)
    var_7 = var_3.to_either()
    var_8 = maybe_1.to_lazy()
    var_6.filter(var_1)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, none_type_0: none_type_0, bool_0: bool_0}
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = False
    none_type_2 = None
    var_0 = maybe_0.get_or_else(none_type_2)
    var_1 = maybe_0.map(dict_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    maybe_2 = module_0.Maybe(bool_1, none_type_2)
    var_2 = var_1.ap(dict_0)
    var_3 = maybe_2.to_lazy()
    var_4 = maybe_1.bind(none_type_1)
    var_5 = maybe_0.map(var_0)
    var_6 = var_4.to_box()
    var_7 = var_4.ap(var_3)
    var_8 = var_7.bind(none_type_1)
    bool_2 = var_2.__eq__(maybe_2)
    var_9 = var_8.get_or_else(var_8)
    maybe_2.map(none_type_1)
