# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    maybe_0.bind(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bool_1 = maybe_0.__eq__(list_0)
    var_0 = maybe_0.map(none_type_0)
    bytes_0 = b"O\xab>\xc9\xc5\x7f\xa3\xb6\xed8\xb9\xc9"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.ap(var_0)


def test_case_4():
    str_0 = "z Fh7\x0c\x0b/*kX/J"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = var_0.to_lazy()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.map(var_1)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    var_2 = maybe_1.bind(var_1)


def test_case_6():
    bytes_0 = b'1\xce\xa0M\x975\x9d\x1f\xaf"\xab\xe6|'
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.ap(bytes_0)
    var_2 = maybe_0.to_validation()
    var_0.to_either()


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_8():
    bytes_0 = b"\x00\xdf\xcd\xf14{\xd2\x9b$\xd5S&"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_try()
    bool_1 = var_1.__eq__(bytes_0)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_10():
    str_0 = "uE;j\tb2d6gs>aJe{"
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.get_or_else(str_0)


def test_case_11():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    complex_0 = 371 - 1293.6454j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    var_2.ap(dict_0)


def test_case_12():
    str_0 = "j"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_try()
    var_3 = var_1.get_or_else(var_2)
    maybe_1 = module_0.Maybe(maybe_0, var_2)
    var_4 = var_1.bind(var_3)


def test_case_13():
    bytes_0 = b"\xc3"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_15():
    int_0 = -1638
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    none_type_0 = None
    none_type_0.to_validation()


def test_case_18():
    str_0 = "j"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    none_type_0 = None
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.to_box()
    var_4 = var_3.to_try()
    var_5 = maybe_0.bind(var_2)
    var_2.get_or_else(none_type_0)


def test_case_19():
    str_0 = "j"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(str_0)
    none_type_0 = None
    var_1 = maybe_0.bind(none_type_0)
    bool_1 = var_1.__eq__(none_type_0)
    var_2 = var_0.bind(bool_0)
    maybe_1 = module_0.Maybe(str_0, var_2)
    bool_1.bind(bool_1)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(var_0, bool_1)
    bool_2 = maybe_0.__eq__(maybe_1)
    bool_3 = var_0.__eq__(none_type_0)
    bool_4 = var_1.__eq__(none_type_0)
    var_0.ap(var_0)
