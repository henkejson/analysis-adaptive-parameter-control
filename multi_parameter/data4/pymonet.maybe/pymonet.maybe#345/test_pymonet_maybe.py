# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    complex_0 = 2016.17206 + 2365.085624j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.map(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.ap(maybe_0)
    generic_0 = module_1.Generic()
    var_4 = maybe_0.ap(generic_0)
    bytes_0 = b"\xb0t/\x07\xe0\xc8\xf1\x8d\x18"
    var_5 = var_0.get_or_else(bytes_0)
    var_6 = var_3.filter(var_4)
    var_7 = var_6.get_or_else(var_5)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    maybe_2 = module_0.Maybe(var_7, var_0)
    bool_1 = var_3.__eq__(generic_0)
    var_8 = var_3.to_lazy()
    bool_2 = var_3.__eq__(bool_0)
    bool_3 = var_0.__eq__(maybe_0)
    var_9 = var_3.to_lazy()
    bool_4 = var_3.__eq__(var_3)
    var_10 = var_4.bind(var_4)
    bool_5 = var_3.__eq__(bool_1)


def test_case_3():
    bool_0 = False
    str_0 = "a7\nqq/(&W.1Jm%&X"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    bool_2 = maybe_0.__eq__(bool_1)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.filter(bool_1)
    var_4 = var_2.to_either()
    var_5 = var_2.to_lazy()
    var_2.get_or_else(bool_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    var_1 = maybe_0.map(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_3.to_try()
    var_5 = maybe_0.to_try()
    var_6 = var_1.get_or_else(var_2)
    maybe_1 = module_0.Maybe(var_5, var_6)
    var_7 = var_0.to_try()
    var_7.to_validation()


def test_case_5():
    int_0 = -227
    maybe_0 = module_0.Maybe(int_0, int_0)
    tuple_0 = ()
    int_1 = 1868
    none_type_0 = None
    maybe_1 = module_0.Maybe(int_1, none_type_0)
    maybe_1.map(tuple_0)


def test_case_6():
    str_0 = ":cptF}\rN5mR"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.get_or_else(str_0)
    var_4 = maybe_0.bind(var_3)
    var_5 = maybe_0.to_try()
    var_6 = maybe_0.to_lazy()
    var_3.map(maybe_0)


def test_case_7():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(var_0)


def test_case_8():
    tuple_0 = ()
    float_0 = 145.3
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_0.ap(tuple_0)


def test_case_9():
    str_0 = "Validation.success[{}]"
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(str_0)


def test_case_10():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)


def test_case_11():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.ap(bool_0)


def test_case_12():
    bytes_0 = b"\xe9"
    generic_0 = module_1.Generic()
    maybe_0 = module_0.Maybe(bytes_0, generic_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    int_0 = 515
    var_2 = maybe_0.to_try()
    var_3 = var_2.get_or_else(int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_4 = var_0.to_validation()
    var_4.map(var_0)


def test_case_13():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    maybe_0.map(var_0)


def test_case_14():
    str_0 = ")`^z"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_box()
    var_0.ap(none_type_0)


def test_case_16():
    none_type_0 = None
    int_0 = -638
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.filter(none_type_0)


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()


def test_case_18():
    float_0 = -1004.7
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_19():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(bool_0)


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = module_0.Maybe(bool_0, maybe_0)
    none_type_0 = None
    var_1 = maybe_0.map(none_type_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.filter(var_2)
    var_4 = maybe_0.ap(maybe_0)
    generic_0 = module_1.Generic()
    var_5 = maybe_0.ap(generic_0)
    bytes_0 = b"\xb0t/\x07\xe0\xc8\xf1\x8d\x18"
    var_6 = var_1.get_or_else(bytes_0)
    var_7 = var_4.filter(var_5)
    var_8 = var_7.get_or_else(var_6)
    maybe_1 = module_0.Maybe(var_1, bool_0)
    bool_1 = var_6.__eq__(var_8)
    bool_2 = var_7.to_box()
    var_9 = var_4.to_lazy()
    var_10 = var_1.to_lazy()
    var_11 = var_5.to_try()
    bool_3 = maybe_1.__eq__(var_9)
    bool_4 = var_11.__eq__(maybe_0)
    var_12 = var_7.to_lazy()
    maybe_2 = module_0.Maybe(bool_2, bool_3)
    bool_5 = maybe_2.__eq__(maybe_0)
    var_13 = var_0.bind(maybe_0)
    var_14 = var_5.to_box()
    bool_6 = var_14.__eq__(var_7)
    var_6.bind(var_8)


def test_case_22():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(bool_0)
    var_2 = maybe_0.to_try()
    none_type_0 = None
    var_3 = maybe_0.ap(none_type_0)
    var_4 = maybe_0.to_validation()
    var_5 = maybe_0.map(none_type_0)
    var_6 = maybe_0.to_lazy()
    var_7 = maybe_0.filter(var_6)
    var_8 = var_3.map(var_3)
    var_9 = maybe_0.ap(maybe_0)
    generic_0 = module_1.Generic()
    var_10 = var_5.get_or_else(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_11 = var_0.to_validation()
    var_12 = maybe_0.map(none_type_0)
    var_13 = var_9.ap(maybe_1)
    var_14 = var_13.to_either()
    var_15 = maybe_0.to_either()
    var_16 = var_15.map(var_13)
    var_17 = var_10.to_try()
    var_18 = var_5.to_try()
    var_19 = var_17.map(generic_0)
    var_20 = var_3.to_try()
    var_21 = var_13.ap(var_20)
    maybe_2 = module_0.Maybe(var_0, var_10)
    var_22 = var_8.to_lazy()
    var_23 = var_14.ap(var_9)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_24 = var_1.to_box()
    var_25 = var_7.to_try()
    var_26 = var_21.to_try()
    var_19.to_box()
