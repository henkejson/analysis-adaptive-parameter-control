# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"N\xef\x8cn\x9c/\x11"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -1995.25
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(float_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    dict_0 = var_0.to_lazy()
    maybe_1 = module_0.Maybe(dict_0, float_0)
    var_3 = maybe_1.to_try()
    int_0 = -1332
    bool_0 = maybe_1.__eq__(dict_0)
    var_3.ap(int_0)


def test_case_3():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.map(maybe_0)
    var_3 = maybe_0.to_try()
    var_1.to_either()


def test_case_4():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    maybe_0.ap(maybe_0)


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_validation()
    var_4 = maybe_0.to_box()
    var_5 = maybe_0.bind(var_2)
    var_3.ap(var_3)


def test_case_6():
    bool_0 = False
    str_0 = "\n        :returns: Copy of self\n        :rtype: Left[A]\n        "
    list_0 = [str_0, str_0, str_0, str_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.bind(bool_0)


def test_case_7():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_try()
    generic_0 = var_0.get_or_else(int_0)
    var_2 = var_0.ap(int_0)
    var_3 = var_2.to_box()


def test_case_8():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(var_0)


def test_case_9():
    none_type_0 = None
    dict_0 = {}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    bytes_0 = b"\x1a\x86\xeb \xcf\x8fK\xdc\xaey\xe9\x19\xae\xb9\xe0\xe7"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(var_0, var_1)
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()


def test_case_14():
    str_0 = "Y-JQS3{2UQ`"
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(str_0)
    var_1 = maybe_0.to_try()
    generic_0 = module_1.Generic()
    var_2 = var_0.to_validation()
    var_3 = maybe_0.to_lazy()
    var_1.to_validation()


def test_case_15():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_1.map(var_0)
    var_2.get_or_else(bool_0)


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\xeb\xe1\xcbf\xfa\xf0\x0e\xe5H\xefr"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.to_try()
    var_2 = var_1.map(var_0)
    var_2.to_either()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_1 = False
    var_1.filter(bool_1)


def test_case_18():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    generic_0 = module_1.Generic()
    bool_0 = var_0.__eq__(var_0)
    var_1 = var_0.to_validation()


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    set_0 = set()
    list_0 = [set_0, set_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_box()
    var_3.filter(set_0)


def test_case_21():
    bytes_0 = b"\xe0\xadY\x83?J`mf\x8aY\xbc\xea\x1b#\xa6H"
    none_type_0 = None
    int_0 = 159
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_2 = var_1.map(bytes_0)
    var_3 = var_2.to_try()
    var_3.to_try()


def test_case_22():
    float_0 = 715.50199
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(float_0)
    maybe_1 = module_0.Maybe(float_0, var_0)
    bool_0 = maybe_1.__eq__(var_0)
    var_2 = maybe_1.ap(maybe_1)
    var_3 = maybe_1.to_box()
    var_3.ap(bool_0)


def test_case_23():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(bool_0)
