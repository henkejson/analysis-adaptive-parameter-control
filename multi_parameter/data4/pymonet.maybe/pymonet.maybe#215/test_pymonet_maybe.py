# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -777.8
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    int_0 = 4475
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(int_0)


def test_case_3():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    bool_2 = maybe_1.__eq__(bool_0)
    var_0 = maybe_1.bind(bool_1)
    bool_2.to_box()


def test_case_5():
    str_0 = "vq m+nEgzj<q"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_1.bind(var_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = maybe_0.filter(maybe_0)
    bool_2 = var_3.__eq__(var_3)
    var_4 = maybe_0.to_either()
    module_1.Generic(*maybe_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_8():
    float_0 = -3264.530600169158
    maybe_0 = module_0.Maybe(float_0, float_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    maybe_1.filter(bool_0)


def test_case_9():
    int_0 = 1
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(int_0)


def test_case_10():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_1.get_or_else(maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.get_or_else(maybe_1)
    var_3 = maybe_1.get_or_else(bool_0)
    var_4 = var_2.to_try()
    var_3.get_or_else(none_type_0)


def test_case_11():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_12():
    str_0 = "t6@\x0c~jACo]0Ew"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_1.to_lazy()


def test_case_13():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    bytes_0 = b":\xc7\xf9"
    str_0 = "*2\n!+gpEuEXO6^%hJ"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_either()
    var_4 = var_3.to_validation()
    var_4.get_or_else(bytes_0)


def test_case_16():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()
    var_1.to_try()


def test_case_17():
    bool_0 = True
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(set_0, set_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_19():
    none_type_0 = None
    float_0 = -2988.39
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)


def test_case_20():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    maybe_0.ap(var_1)


def test_case_21():
    int_0 = 2101
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    dict_0 = {bool_0: none_type_0, int_0: bool_0, bool_0: int_0}
    list_0 = [none_type_0, none_type_0, dict_0, int_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    bool_2 = maybe_1.__eq__(int_0)
    none_type_1 = None
    var_1 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(bool_0, none_type_1)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.to_try()
    var_4 = var_2.ap(var_1)
    var_5 = maybe_1.to_either()
    var_6 = var_1.to_validation()
    var_7 = maybe_1.to_box()
    var_8 = var_1.bind(var_7)
    var_9 = var_2.to_either()
    var_10 = maybe_0.to_try()
    var_11 = var_7.to_try()


def test_case_22():
    bool_0 = True
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    bool_1 = False
    var_0 = maybe_0.to_try()
    bool_2 = maybe_0.__eq__(bool_1)
    var_1 = maybe_0.ap(maybe_0)
    bool_3 = maybe_0.__eq__(bool_1)
    var_2 = var_1.ap(maybe_0)
    var_3 = var_2.map(var_0)
    bool_4 = var_1.__eq__(var_3)
    var_4 = var_1.to_either()


def test_case_23():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_try()
    var_1.map(none_type_0)


def test_case_24():
    float_0 = -3264.96629
    maybe_0 = module_0.Maybe(float_0, float_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    none_type_1 = None
    var_0 = maybe_0.filter(none_type_1)
    bool_1 = maybe_0.__eq__(maybe_1)
    maybe_2 = module_0.Maybe(maybe_0, bool_1)
    var_1 = maybe_1.to_try()
    maybe_1.filter(none_type_0)
