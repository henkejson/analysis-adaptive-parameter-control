# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = 2981.29423
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bytes_0, maybe_0)
    var_0 = maybe_1.to_validation()
    bool_1 = maybe_0.__eq__(var_0)
    maybe_0.ap(bytes_0)


def test_case_3():
    int_0 = 1
    dict_0 = {int_0: int_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bytes_0 = b"W\x8a\x11\xa7\xfb\xfa"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.filter(bytes_0)
    var_1 = var_0.get_or_else(bytes_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_either()
    var_4 = maybe_1.to_box()
    var_5 = var_3.to_box()
    maybe_2 = module_0.Maybe(bytes_0, var_3)
    bool_1 = True
    var_6 = maybe_1.ap(var_5)
    var_7 = var_6.map(bool_1)
    maybe_3 = module_0.Maybe(bytes_0, bool_1)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(var_0)


def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_lazy()
    generic_0 = module_1.Generic()
    bool_2 = True
    maybe_1 = module_0.Maybe(generic_0, bool_2)
    var_1 = maybe_1.bind(var_0)
    var_2 = var_1.to_box()
    set_0 = set()
    maybe_2 = module_0.Maybe(set_0, set_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    none_type_0 = None
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(generic_0)
    var_1 = var_0.ap(none_type_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.get_or_else(bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_1.filter(bool_0)


def test_case_10():
    complex_0 = -1540 - 3631j
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(complex_0)
    var_0.to_box()


def test_case_11():
    complex_0 = 1868.4 - 2266.26j
    bytes_0 = b"\xfd\xf5\n~\xc1v\xb01?\xbd\x12(\xd3@"
    maybe_0 = module_0.Maybe(bytes_0, complex_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(complex_0, bytes_0)


def test_case_12():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(list_0)


def test_case_13():
    bool_0 = True
    float_0 = 5604.9
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_try()
    var_0.get_or_else(var_1)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_2.to_lazy()
    var_4 = var_0.to_validation()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    maybe_1.filter(var_4)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_1.filter(bool_0)


def test_case_17():
    bytes_0 = b"\xfc\x01c\x1c\xddv"
    bytes_1 = b"C"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_1, bool_0)
    var_0 = maybe_0.to_try()
    var_0.map(bytes_0)


def test_case_18():
    bytes_0 = b"m\x8c\x85\xaf\xaf\x08\x01_"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = var_0.__eq__(bytes_0)


def test_case_19():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    none_type_0 = None
    none_type_1 = None
    bool_2 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_2)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    var_4 = var_3.get_or_else(none_type_0)
    var_4.to_lazy()


def test_case_20():
    int_0 = -1027
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_validation()


def test_case_21():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_22():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    maybe_0 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_0.to_lazy()
    generic_0 = module_1.Generic()
    maybe_1 = var_0.to_validation()
    maybe_1.bind(var_0)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = module_0.Maybe(bool_0, maybe_0)
    bool_1 = maybe_0.__eq__(var_0)
    var_1 = var_0.filter(var_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    maybe_1.filter(var_0)
