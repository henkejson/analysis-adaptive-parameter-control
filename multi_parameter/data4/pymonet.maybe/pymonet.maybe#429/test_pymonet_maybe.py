# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_2 = maybe_0.__eq__(var_0)
    bool_3 = False
    var_1 = maybe_0.map(bool_3)
    var_2 = var_0.to_lazy()
    bool_4 = var_1.__eq__(var_1)
    var_3 = maybe_0.to_validation()
    var_4 = var_3.to_try()


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bytes_0 = b"\x92*P\x9e\xc5cC\xd5\xf6\x9f"
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, bytes_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_try()


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.map(var_1)
    var_3 = var_2.to_validation()


def test_case_5():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    complex_0 = 1581.3234 - 2935j
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(complex_0)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    maybe_1.map(var_0)


def test_case_6():
    str_0 = "1`\t/"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_validation()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_3 = maybe_1.to_either()
    var_1.filter(var_1)


def test_case_7():
    generic_0 = module_1.Generic()
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(generic_0, none_type_1)
    maybe_0.bind(none_type_0)


def test_case_8():
    bytes_0 = b"\x1c\xf4\xca\r\xecR\x83s\\0\x88\x99"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    list_0 = [maybe_0]
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_0.map(var_0)
    maybe_1.ap(list_0)


def test_case_9():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    bool_2 = maybe_0.__eq__(var_0)
    bool_3 = False
    var_1 = maybe_0.map(bool_3)
    var_2 = var_1.to_try()
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.get_or_else(bool_3)
    var_5 = maybe_0.filter(var_2)


def test_case_10():
    tuple_0 = ()
    maybe_0 = module_0.Maybe(tuple_0, tuple_0)
    none_type_0 = None
    maybe_0.filter(none_type_0)


def test_case_11():
    int_0 = -1920
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.map(var_0)
    float_0 = 2667.3751
    tuple_0 = (float_0,)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)


def test_case_12():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_either()


def test_case_13():
    bytes_0 = b"\x1a4J\xb5\xdd\x00ap\xeb"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, var_1)
    var_2 = maybe_1.to_validation()
    none_type_1 = None
    maybe_2 = module_0.Maybe(bytes_0, none_type_1)


def test_case_14():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()


def test_case_15():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_0.map(none_type_0)


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_1.to_either()


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(none_type_0)
    var_1.to_either()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.filter(var_0)


def test_case_19():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0]
    tuple_0 = (bool_0, bool_1, list_0)
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    complex_0 = 1581.3234 - 2935j
    list_0 = [complex_0]
    var_0 = maybe_0.map(maybe_0)
    var_1 = maybe_0.to_either()
    var_2 = var_0.to_either()
    bool_1 = var_0.__eq__(var_2)
    var_3 = maybe_0.filter(var_1)
    var_4 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_5 = maybe_1.map(none_type_0)
    var_6 = maybe_0.get_or_else(complex_0)
    bool_2 = var_2.__eq__(bool_1)
    var_7 = var_2.to_validation()
    var_8 = maybe_1.ap(none_type_0)
    var_9 = var_5.to_validation()
    var_10 = var_3.to_try()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    complex_0 = 1581.3234 - 2935j
    list_0 = [complex_0]
    maybe_1 = module_0.Maybe(list_0, maybe_0)
    var_0 = maybe_1.ap(maybe_0)
    var_1 = maybe_0.to_either()
    maybe_2 = module_0.Maybe(list_0, var_1)
    bool_1 = var_0.__eq__(maybe_2)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_box()
    maybe_3 = module_0.Maybe(list_0, list_0)
    var_4 = maybe_3.map(none_type_0)
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_2.get_or_else(bool_0)
    bool_2 = var_6.__eq__(var_6)
    var_7 = var_1.to_validation()
    var_8 = var_2.to_validation()
    var_9 = var_2.to_try()
