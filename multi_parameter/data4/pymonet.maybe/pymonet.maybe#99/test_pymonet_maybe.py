# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b"\x14\xca"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = maybe_0.to_try()
    var_3 = var_2.bind(var_2)
    var_4 = maybe_0.ap(var_3)
    var_3.to_lazy()


def test_case_3():
    none_type_0 = None
    str_0 = "'\x0cnlqx<iMYPF/OXl#"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)


def test_case_4():
    bool_0 = True
    str_0 = "'\x0cJ\n2y0N#54Lw%\t"
    float_0 = -2353.928
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.map(bool_0)
    var_2 = var_1.to_box()


def test_case_5():
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_6():
    bytes_0 = b""
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.bind(bytes_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    maybe_0.bind(none_type_0)


def test_case_8():
    str_0 = "\x0c$!Te6G<-6K0f"
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.ap(str_0)


def test_case_9():
    float_0 = 431.41
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_0.filter(var_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_1)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_box()
    var_2.bind(var_1)


def test_case_12():
    bool_0 = True
    str_0 = "$hb+K+U"
    bool_1 = False
    set_0 = {bool_1}
    bool_2 = True
    maybe_0 = module_0.Maybe(set_0, bool_2)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(str_0)
    bool_3 = var_1.__eq__(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    str_0 = "|?"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_try()
    var_2.to_lazy()


def test_case_17():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    float_0 = 677.0
    int_0 = -2087
    none_type_1 = None
    str_0 = "Fist[value={}]"
    maybe_1 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_1.ap(none_type_1)
    var_1 = var_0.filter(int_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_box()
    var_4.bind(float_0)


def test_case_18():
    float_0 = 3139.8168
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(float_0, maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_try()


def test_case_19():
    bytes_0 = b"Zo\x87\xc4\x8fp\xe0d\x06UG\xcd\x94"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(bytes_0, var_1)
    bool_0 = maybe_0.__eq__(maybe_1)
    list_0 = [bytes_0, bytes_0, var_1, bytes_0]
    bool_1 = False
    tuple_0 = (list_0, bool_1)
    none_type_0 = None
    bool_2 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_2)
    var_2 = var_1.to_try()
    var_3 = maybe_2.to_validation()
    var_4 = var_0.map(bool_1)
    var_5 = var_3.to_lazy()
    var_5.filter(tuple_0)


def test_case_20():
    bytes_0 = b"\x14+\xcaKa"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    var_0.bind(var_0)
