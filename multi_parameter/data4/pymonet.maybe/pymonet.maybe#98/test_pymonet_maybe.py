# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 19
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    int_0 = 0
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_2():
    str_0 = "\"\rDOT\\pY(3ZZR^'$Z6m"
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.filter(bool_1)
    var_2 = maybe_0.to_box()
    list_0.get_or_else(str_0)


def test_case_3():
    int_0 = 1914
    bool_0 = True
    list_0 = [bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    tuple_0 = (list_0, list_0)
    bool_1 = maybe_0.__eq__(tuple_0)
    var_0 = maybe_0.filter(list_0)
    var_1 = var_0.ap(int_0)
    var_2 = maybe_0.get_or_else(list_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xb0\xd6]r$"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = maybe_0.filter(none_type_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    maybe_0.map(bool_0)


def test_case_6():
    int_0 = 2812
    str_0 = "R{/4apI?w2JS"
    dict_0 = {}
    tuple_0 = (str_0, dict_0, dict_0)
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    bool_2 = True
    maybe_2 = module_0.Maybe(bool_0, bool_2)
    var_0 = maybe_0.ap(bool_0)
    var_1 = maybe_2.bind(var_0)
    var_2 = maybe_1.to_box()
    var_2.map(int_0)


def test_case_7():
    float_0 = -1171.731742
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(float_0)


def test_case_8():
    bytes_0 = b"\xee\xc3\xcdF_\xf0\xbbj"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.map(var_0)
    var_2 = var_1.ap(var_0)
    var_3 = maybe_0.ap(var_1)


def test_case_9():
    set_0 = set()
    tuple_0 = (set_0,)
    str_0 = "-Cpz48"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(tuple_0)


def test_case_10():
    str_0 = "Z.qP"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.filter(str_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    maybe_1.filter(maybe_0)


def test_case_11():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_0.to_try()


def test_case_12():
    tuple_0 = ()
    complex_0 = -2037 + 675.33305j
    dict_0 = {tuple_0: tuple_0, tuple_0: complex_0, complex_0: tuple_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_0.ap(dict_0)


def test_case_13():
    str_0 = "Z.qP"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = False
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = maybe_1.to_try()
    bool_1 = maybe_1.__eq__(var_0)
    bool_2 = maybe_0.__eq__(bool_0)
    var_3 = maybe_0.map(str_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(str_0, none_type_0)
    var_4 = maybe_1.to_box()
    bool_3 = var_2.__eq__(var_4)
    var_5 = var_3.filter(var_1)
    var_4.ap(none_type_0)


def test_case_14():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.map(list_0)
    var_4 = var_3.map(var_2)


def test_case_15():
    int_0 = 0
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    int_0 = -1492
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    set_0 = set()
    none_type_0 = None
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.bind(set_0)


def test_case_18():
    float_0 = 598.0
    dict_0 = {float_0: float_0}
    maybe_0 = module_0.Maybe(float_0, dict_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.get_or_else(dict_0)
    var_3 = var_0.to_box()
    bool_0 = True
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_2.to_lazy()


def test_case_19():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    maybe_1.ap(tuple_0)


def test_case_20():
    str_0 = "Z.qP"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = True
    var_0 = maybe_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.map(str_0)
    none_type_0 = None
    maybe_2 = module_0.Maybe(str_0, none_type_0)
    var_3 = maybe_1.to_box()
    var_4 = var_2.to_either()
    var_5 = maybe_0.to_box()
    bool_1 = maybe_2.__eq__(maybe_2)
    var_4.filter(var_5)
