# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_2 = True
    maybe_2 = module_0.Maybe(var_0, bool_2)
    bool_3 = maybe_2.__eq__(maybe_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.filter(bool_0)
    var_3 = var_1.to_try()
    var_4 = maybe_1.bind(bool_3)
    var_5 = var_2.bind(var_1)
    var_6 = maybe_1.map(var_2)
    var_7 = maybe_1.to_box()
    maybe_0.filter(var_7)


def test_case_3():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    dict_0 = {bool_0: bool_0}
    maybe_2 = module_0.Maybe(dict_0, bool_1)
    var_0 = maybe_2.to_lazy()
    bool_2 = maybe_2.__eq__(dict_0)
    var_1 = maybe_1.filter(bool_0)
    var_2 = maybe_1.bind(bool_2)
    var_3 = var_1.bind(maybe_0)
    var_4 = maybe_1.map(var_1)
    maybe_0.filter(bool_2)


def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(list_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    none_type_0 = None
    var_1 = var_0.filter(none_type_0)
    var_2 = var_0.to_either()
    var_3 = var_2.map(var_0)
    maybe_1.filter(var_2)


def test_case_5():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.to_box()
    dict_0 = {bool_0: bool_0}
    bool_2 = True
    maybe_2 = module_0.Maybe(dict_0, bool_2)
    var_1 = maybe_2.bind(dict_0)
    bool_3 = maybe_2.__eq__(dict_0)
    var_2 = maybe_1.filter(var_0)
    var_3 = maybe_1.filter(var_0)
    var_4 = var_1.to_try()
    var_5 = var_4.bind(var_4)
    var_6 = maybe_1.bind(maybe_0)
    var_7 = var_6.to_try()
    maybe_0.map(var_7)


def test_case_6():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.filter(var_1)


def test_case_7():
    complex_0 = -1266 - 1469.94969j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.bind(maybe_0)


def test_case_8():
    int_0 = -547
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_0.ap(maybe_1)
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.get_or_else(int_0)
    var_3.to_lazy()


def test_case_9():
    str_0 = "L."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = -778
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.ap(dict_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    maybe_0.filter(var_1)


def test_case_11():
    bool_0 = True
    bytes_0 = b"\xa7"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bytes_0: bytes_0}
    str_0 = ""
    bool_1 = False
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.get_or_else(dict_0)
    var_0.to_box()


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    bool_1 = var_1.__eq__(maybe_0)


def test_case_13():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_0 = maybe_0.to_box()
    var_0.ap(bool_0)


def test_case_14():
    float_0 = -2442.579628
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.bind(float_0)


def test_case_15():
    int_0 = -547
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_2 = maybe_0.ap(maybe_1)
    var_3 = maybe_0.to_try()
    generic_0 = module_1.Generic()
    var_4 = maybe_1.to_lazy()
    var_5 = var_0.ap(var_1)
    var_6 = maybe_0.bind(int_0)
    var_7 = var_5.get_or_else(var_1)
    var_8 = var_1.to_validation()
    var_9 = maybe_0.filter(var_5)
    var_10 = var_2.get_or_else(var_6)
    var_11 = var_1.get_or_else(var_3)
    var_12 = maybe_1.ap(var_5)
    var_13 = var_12.to_lazy()


def test_case_16():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_17():
    bytes_0 = b",\xfb\x85\x11\xa6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.bind(var_1)
    maybe_1 = module_0.Maybe(dict_0, bytes_0)
    var_3 = var_0.ap(bytes_0)
    var_4 = var_3.ap(var_1)
    var_5 = maybe_0.to_try()
    var_2.get_or_else(bytes_0)


def test_case_18():
    str_0 = "\n        Transform Either into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        "
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_validation()
    bool_0 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.to_either()
    bool_1 = maybe_1.__eq__(var_2)
    var_1.bind(var_1)


def test_case_19():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_1 = maybe_1.to_validation()
    dict_0 = {bool_0: bool_0}
    bool_2 = True
    maybe_2 = module_0.Maybe(dict_0, bool_2)
    var_2 = maybe_2.to_lazy()
    bool_3 = maybe_2.__eq__(dict_0)
    maybe_3 = module_0.Maybe(maybe_2, bool_2)
    var_3 = maybe_1.filter(bool_0)
    var_4 = maybe_3.to_try()
    var_5 = var_3.bind(maybe_3)
    var_6 = maybe_1.map(var_3)
    maybe_0.filter(dict_0)


def test_case_20():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_1.to_box()
    dict_0 = {bool_0: bool_0}
    bool_2 = True
    maybe_2 = module_0.Maybe(dict_0, bool_2)
    bool_3 = maybe_2.__eq__(dict_0)
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.filter(bool_0)
    var_3 = var_1.to_try()
    var_4 = maybe_2.ap(var_0)
    var_5 = maybe_1.bind(var_4)
    var_6 = var_5.map(bool_2)
    bool_4 = maybe_2.__eq__(maybe_1)
    var_7 = maybe_2.to_box()
    maybe_0.filter(bool_1)


def test_case_21():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_box()
    var_0.filter(var_0)


def test_case_22():
    int_0 = -547
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_1 = maybe_0.ap(maybe_1)
    var_2 = maybe_0.to_try()
    generic_0 = module_1.Generic()
    var_3 = maybe_1.to_lazy()
    var_4 = var_0.ap(var_3)
    var_5 = maybe_0.bind(int_0)
    var_6 = var_4.get_or_else(var_3)
    var_7 = var_5.to_lazy()
    var_8 = var_6.to_validation()
    var_9 = maybe_0.filter(var_4)
    var_10 = var_1.get_or_else(var_5)
    var_3.get_or_else(var_2)
