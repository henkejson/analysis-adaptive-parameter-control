# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = maybe_0.get_or_else(none_type_0)
    bool_2 = maybe_1.__eq__(var_0)
    var_1.filter(var_1)


def test_case_3():
    str_0 = "d-v"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.map(var_1)
    var_3 = var_2.get_or_else(maybe_0)
    var_0.to_box()


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.map(var_0)


def test_case_5():
    bool_0 = False
    int_0 = 3339
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()


def test_case_6():
    bool_0 = True
    float_0 = -433.689399
    set_0 = set()
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(set_0, bool_1)
    maybe_1.bind(float_0)


def test_case_7():
    str_0 = "d-v"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.ap(str_0)
    var_3 = var_1.to_either()
    var_4 = var_3.ap(var_0)


def test_case_8():
    int_0 = -2373
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_0.ap(int_0)


def test_case_9():
    str_0 = "d-v"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_box()


def test_case_10():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(bool_0)


def test_case_11():
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bytes_0 = b"Z\x01"
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    bool_2 = False
    maybe_1 = module_0.Maybe(list_1, bool_2)
    var_0 = maybe_1.get_or_else(bytes_0)
    var_0.to_validation()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.get_or_else(none_type_0)
    var_2.to_validation()


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(var_0, none_type_0)
    var_1 = var_0.map(maybe_1)
    var_2 = var_1.to_lazy()
    var_3 = var_0.filter(none_type_0)
    maybe_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    str_0 = "%V~\x0cux<0Nu#4"
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.map(str_0)


def test_case_15():
    complex_0 = 3686.72432 - 3461.791244j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_1.to_either()


def test_case_16():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    int_0 = -423
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(bool_1)
    var_1 = var_0.bind(bool_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_lazy()
    var_3.get_or_else(none_type_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.bind(maybe_0)
    var_3 = maybe_0.ap(none_type_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_4 = maybe_0.to_either()
    var_5 = var_3.bind(none_type_0)
    bool_2 = var_5.__eq__(var_2)
    var_6 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(var_3, var_0)
    bool_3 = var_2.__eq__(var_1)
    var_7 = var_3.map(bool_1)
    var_8 = var_1.map(maybe_1)
    var_9 = var_3.to_validation()
    bool_4 = var_9.__eq__(var_7)
    var_10 = var_7.to_lazy()
    var_11 = var_7.get_or_else(maybe_1)
    var_12 = var_2.filter(none_type_0)
    var_13 = var_11.to_validation()
    var_11.filter(var_1)


def test_case_18():
    bool_0 = True
    bool_0.bind(bool_0)


def test_case_19():
    int_0 = 17
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_1 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_1.ap(var_0)
    var_3 = maybe_0.to_lazy()
    var_4 = var_3.map(var_3)
    var_5 = var_1.ap(maybe_0)
    var_6 = var_0.to_try()
    var_7 = var_5.ap(maybe_1)
    var_8 = var_0.ap(int_0)
    var_9 = var_3.to_box()
    var_10 = maybe_0.map(var_8)
    var_11 = maybe_1.to_box()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.get_or_else(none_type_0)
