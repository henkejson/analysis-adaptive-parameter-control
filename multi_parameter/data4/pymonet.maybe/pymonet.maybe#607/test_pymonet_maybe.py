# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"\xf9\x89\xd2{G\xddx\xaf\x9f\xe9O\xec\r\xf3\x8a]#\x88GH"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bytes_0 = b""
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_2():
    int_0 = -26
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = maybe_0.bind(var_1)
    var_4 = maybe_0.map(var_2)
    var_5 = maybe_0.get_or_else(maybe_0)
    var_6 = maybe_0.to_lazy()
    var_7 = var_6.to_validation()
    var_7.ap(bool_0)


def test_case_3():
    int_0 = 2616
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    maybe_0.map(var_1)


def test_case_4():
    bytes_0 = b"\x06\xc3a\xfc,Eg\x96\xfb\xd1\x04\x9e\xe1\xe2\xd0\xd6\x80l("
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    bytes_1 = b"4\xb5c\xd5J8\x7f\xf6\x87\x86\xe4\x86\xc6"
    bool_0 = False
    maybe_1 = module_0.Maybe(bytes_1, bool_0)
    maybe_1.bind(none_type_0)


def test_case_5():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.filter(var_0)
    var_3 = var_2.filter(var_0)
    var_4 = maybe_0.ap(var_2)
    var_5 = var_4.to_box()
    var_6 = var_5.to_try()
    var_7 = var_1.to_try()
    var_8 = var_7.bind(var_0)
    var_6.to_validation()


def test_case_6():
    bytes_0 = b'\xf8\xa6\xa7M\x8b\xb7\x02}\x9a\x91\x8d"\xa9'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    maybe_0.ap(bytes_0)


def test_case_7():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    maybe_1.filter(var_0)


def test_case_8():
    float_0 = 960.09
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    var_1 = maybe_0.to_either()


def test_case_9():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    set_0 = set()
    maybe_1 = module_0.Maybe(set_0, set_0)
    var_1 = maybe_1.to_box()
    var_1.to_box()


def test_case_13():
    bytes_0 = b"\xba\x04\xea6\xc1C\xd47\x88c"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_0.to_try()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(var_1)


def test_case_16():
    str_0 = ""
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_17():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    maybe_0 = module_0.Maybe(tuple_1, tuple_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_0 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, none_type_0)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = maybe_1.to_box()
    maybe_1.filter(var_2)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = maybe_0.filter(var_0)
    bool_1 = maybe_0.__eq__(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    maybe_1.filter(var_1)


def test_case_19():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    complex_0 = -2939.997 + 835.9j
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(bool_0, complex_0)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.filter(var_0)
    var_2 = maybe_1.filter(maybe_0)
    bool_2 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_1.to_validation()
    bool_3 = var_1.__eq__(var_3)
    var_3.filter(var_0)


def test_case_20():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    bool_2 = maybe_0.__eq__(none_type_0)
    bool_3 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)
