# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"x\xfa"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "(4V7_D"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.bind(var_0)
    var_2 = var_0.bind(var_0)
    maybe_1 = module_0.Maybe(maybe_0, str_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.to_either()


def test_case_3():
    complex_0 = 868.2 + 2669.1325607300187j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    dict_0 = {}
    bool_0 = maybe_0.__eq__(dict_0)
    var_1 = var_0.to_lazy()
    maybe_1 = maybe_0.to_try()
    var_2 = module_0.Maybe(var_1, var_1)
    var_3 = var_2.bind(maybe_0)


def test_case_4():
    bytes_0 = b"\xa8\x83x^L\xb9\x95\xeaj"
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.to_either()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    int_0 = -691
    int_1 = 1625
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1}
    bool_0 = True
    bytes_0 = b'?"\xf9'
    maybe_0 = module_0.Maybe(int_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_3 = maybe_1.ap(int_0)


def test_case_8():
    float_0 = -3448.47299
    int_0 = 2211
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    maybe_1.ap(float_0)


def test_case_9():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_10():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_0.map(bool_0)


def test_case_12():
    int_0 = 1
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_1.bind(list_0)


def test_case_13():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.get_or_else(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_1.to_box()
    maybe_1.filter(bool_0)


def test_case_14():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_1 = False
    int_0 = 2314
    list_0 = [int_0, int_0, int_0, int_0]
    none_type_0 = None
    maybe_1 = module_0.Maybe(list_0, none_type_0)
    var_2 = maybe_1.to_box()
    var_3 = var_2.to_validation()
    var_3.filter(bool_1)


def test_case_15():
    complex_0 = -1058.886 + 411.473259j
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(none_type_0, list_0)
    var_0 = maybe_0.to_try()
    none_type_1 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_1)


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_box()
    var_2.get_or_else(bool_0)


def test_case_17():
    int_0 = 4350
    bytes_0 = b"\xbaMc\xc1Q\xc1"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    bool_0 = False
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_2 = maybe_1.ap(bool_0)
    var_3 = var_1.to_validation()
    var_4 = var_3.to_either()
    var_4.filter(int_0)


def test_case_18():
    bool_0 = False
    set_0 = {bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(var_0)
    bool_2 = var_0.__eq__(set_0)
    var_1 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    bool_3 = maybe_1.__eq__(maybe_0)
    none_type_0 = None
    var_1.ap(none_type_0)


def test_case_19():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_1 = maybe_1.to_try()
    var_1.to_either()
