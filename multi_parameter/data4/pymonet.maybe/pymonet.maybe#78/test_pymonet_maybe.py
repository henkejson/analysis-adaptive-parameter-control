# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bytes_0 = b"vp\xa3\xe0\x85$\xb8EhE.\x03\xa6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bytes_0 = b" \x04\x92BA\xc2e\xad#\xc6\x8d@\x97\xfdY"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = var_1.to_try()


def test_case_3():
    bytes_0 = b" \x04\x92BA\xc2e\xad#\xc6\x8d@\x97\xfdY"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_lazy()
    var_4 = var_3.to_box()
    var_5 = var_1.to_try()


def test_case_4():
    int_0 = 3182
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.map(none_type_0)


def test_case_5():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.bind(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(bool_0)


def test_case_6():
    bytes_0 = b"\x18\xab"
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    maybe_0.bind(bytes_0)


def test_case_7():
    str_0 = "=l"
    maybe_0 = module_0.Maybe(str_0, str_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_0.bind(var_0)
    var_3 = var_0.to_either()
    var_4 = maybe_0.get_or_else(var_1)
    var_5 = var_4.to_validation()
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = var_1.__eq__(var_1)
    bytes_0 = b"ffK\xc6p\x1b\x02\xf9"
    var_6 = var_1.get_or_else(bytes_0)
    var_7 = maybe_1.ap(var_3)
    var_8 = var_4.to_try()
    var_8.to_either()


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(bool_0)


def test_case_9():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.filter(none_type_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_validation()


def test_case_11():
    bool_0 = False
    none_type_0 = None
    list_0 = []
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_1 = maybe_0.__eq__(list_0)
    var_0.to_box()


def test_case_12():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.bind(bool_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(none_type_1, none_type_1)
    maybe_1.filter(bool_0)


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = False
    int_0 = 37
    maybe_1 = module_0.Maybe(bool_2, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_1.filter(var_0)
    maybe_2 = module_0.Maybe(var_0, maybe_1)


def test_case_15():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, var_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.map(bool_1)
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.to_either()
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_5 = maybe_2.to_box()
    var_6 = var_2.to_either()
    maybe_2.filter(bool_1)


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_validation()
    bool_2 = False
    maybe_1 = module_0.Maybe(var_1, var_1)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.map(bool_2)
    bool_3 = False
    var_4 = maybe_0.map(bool_3)
    var_5 = var_4.to_either()
    var_6 = var_0.filter(none_type_0)
    maybe_2 = module_0.Maybe(var_1, bool_0)


def test_case_19():
    none_type_0 = None
    none_type_1 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_1.to_lazy()
    var_1 = var_0.to_validation()
    var_0.get_or_else(var_0)


def test_case_21():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(none_type_1, bool_1)
    var_0 = maybe_1.get_or_else(none_type_0)
    none_type_2 = None
    bool_2 = True
    maybe_2 = module_0.Maybe(none_type_2, bool_2)
    var_1 = maybe_2.to_try()
    var_2 = maybe_1.ap(none_type_0)
    bool_3 = maybe_2.__eq__(none_type_0)
    bool_4 = maybe_1.__eq__(var_1)
    var_0.map(none_type_2)
