# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    float_0 = -714.963
    maybe_0 = module_0.Maybe(float_0, float_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.map(var_0)


def test_case_3():
    bytes_0 = b"\xa3p(|\xd9K\xe5\x0f\xde\xfb"
    none_type_0 = None
    str_0 = '"\x0cTrcYbdatlgN$'
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.map(bytes_0)


def test_case_4():
    bool_0 = True
    int_0 = 4076
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    maybe_0.map(bool_0)


def test_case_5():
    str_0 = "Fist[value={}]"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.bind(str_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    list_0 = [str_0, str_0, str_0, var_2]
    bool_0 = True
    maybe_1 = module_0.Maybe(list_0, bool_0)
    var_3 = maybe_1.to_box()
    var_3.to_box()


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(maybe_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.ap(bool_0)


def test_case_8():
    bytes_0 = b"\xbcB\xb5\xd5\x84"
    bytes_1 = b"\xa8\xfe"
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    maybe_1.filter(var_0)


def test_case_9():
    bytes_0 = b"\xbcB\xb5\xd5\x84"
    bytes_1 = b"\xa8\xfe"
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.to_either()
    var_3 = var_0.get_or_else(bytes_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_2, none_type_0)
    maybe_1.filter(var_1)


def test_case_10():
    bytes_0 = b"QF\xbe\xbd"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    var_0.ap(none_type_0)


def test_case_11():
    bytes_0 = b"\xbcB\xb5\xd5\x84"
    bytes_1 = b"\xa8\xfe"
    maybe_0 = module_0.Maybe(bytes_1, bytes_0)
    var_0 = maybe_0.filter(bytes_0)
    var_1 = maybe_0.to_either()
    none_type_0 = None
    maybe_1 = module_0.Maybe(var_1, none_type_0)
    maybe_1.filter(var_0)


def test_case_12():
    str_0 = "(v-;K'dV)|K[v~"
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    bool_1 = False
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.to_either()
    maybe_1.map(var_0)


def test_case_13():
    float_0 = -714.963
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(float_0)
    maybe_1 = module_0.Maybe(float_0, float_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    list_0 = []
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    maybe_1.map(var_0)


def test_case_15():
    generic_0 = module_1.Generic()
    bool_0 = True
    maybe_0 = module_0.Maybe(generic_0, bool_0)
    tuple_0 = (generic_0, generic_0, maybe_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.map(var_0)
    bool_1 = True
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.filter(var_2)
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_4 = var_3.map(var_2)
    var_5 = maybe_1.to_validation()
    var_6 = maybe_1.to_lazy()
    var_7 = maybe_0.bind(var_5)
    var_8 = var_5.to_lazy()
    var_9 = maybe_1.map(var_7)
    var_10 = var_3.ap(var_9)
    var_11 = var_10.to_try()
    var_12 = maybe_1.to_lazy()


def test_case_16():
    int_0 = -2191
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_try()
    var_4 = maybe_0.to_box()
    var_4.filter(int_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_2 = module_0.Maybe(none_type_0, none_type_0)
    var_2 = maybe_2.to_either()
    var_3 = maybe_2.to_box()
    var_4 = maybe_2.to_either()
    bool_1 = var_4.__eq__(bool_0)
    maybe_2.map(var_4)


def test_case_19():
    int_0 = -4211
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = maybe_0.ap(int_0)
    var_2 = var_1.to_validation()
    bool_0 = maybe_0.__eq__(maybe_0)
    bool_1 = var_0.__eq__(int_0)
    var_3 = maybe_0.filter(bool_1)
    bool_2 = var_0.__eq__(int_0)
    bool_3 = var_3.__eq__(int_0)
    maybe_1 = module_0.Maybe(bool_3, bool_0)
    var_4 = var_2.to_lazy()
    var_5 = var_0.to_box()
    var_6 = maybe_0.to_try()
    var_2.ap(var_4)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(bool_1)


def test_case_21():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.map(var_0)
    var_2 = maybe_0.map(maybe_0)
    var_3 = var_2.to_validation()
    bool_1 = var_2.__eq__(maybe_0)
    bool_2 = var_3.__eq__(var_2)
    var_4 = maybe_0.filter(var_3)
    bool_3 = maybe_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_4 = var_4.__eq__(maybe_1)
    bool_5 = False
    maybe_2 = module_0.Maybe(maybe_0, bool_5)
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_1.to_box()
    var_7 = var_6.to_try()
    var_8 = var_1.ap(var_6)
    var_9 = maybe_1.get_or_else(var_2)
    maybe_3 = module_0.Maybe(bool_2, var_9)
    var_10 = var_1.to_box()
    var_10.ap(bool_2)
