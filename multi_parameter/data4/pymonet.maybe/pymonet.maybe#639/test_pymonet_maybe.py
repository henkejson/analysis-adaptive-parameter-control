# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 157
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = -748.6572
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    float_0.to_try()


def test_case_3():
    bytes_0 = b"y\xafjn\xdda>\\~\xa8K]\x88"
    list_0 = [bytes_0, bytes_0, bytes_0]
    complex_0 = 2003.479 - 112j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = maybe_0.__eq__(list_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bool_0)


def test_case_5():
    float_0 = 2589.613
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.bind(var_1)
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.map(var_0)
    var_5 = var_2.ap(var_2)
    bool_0 = var_0.__eq__(var_5)
    var_6 = var_2.to_try()
    var_7 = var_0.filter(var_1)
    var_8 = var_7.to_try()


def test_case_6():
    bool_0 = False
    str_0 = "F*[74f_}6Ih!8*3(&!"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(str_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.get_or_else(bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    none_type_0.to_try()


def test_case_8():
    bool_0 = True
    list_0 = [bool_0]
    float_0 = -827.54254
    bool_1 = False
    maybe_0 = module_0.Maybe(float_0, bool_1)
    maybe_0.ap(list_0)


def test_case_9():
    float_0 = -748.6572
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(float_0)


def test_case_10():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.filter(bool_0)


def test_case_11():
    int_0 = -714
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_1 = maybe_1.get_or_else(int_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_2 = maybe_1.to_try()


def test_case_12():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    var_2 = maybe_0.filter(var_1)
    maybe_1.filter(bool_0)


def test_case_13():
    none_type_0 = None
    bool_0 = False
    float_0 = -387.0
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_box()
    bool_1 = var_1.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(var_1, float_0)
    var_2 = maybe_1.filter(bool_0)
    maybe_2 = module_0.Maybe(var_2, bool_0)
    var_3 = maybe_2.to_lazy()
    var_4 = var_3.ap(none_type_0)
    maybe_2.filter(var_3)


def test_case_14():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(var_0)


def test_case_15():
    bytes_0 = b'\x83X\xdd"\xd9\xdej\xcf\x92\xac\xd2\r'
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.get_or_else(bytes_0)


def test_case_16():
    float_0 = 2589.613
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = True
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.to_lazy()
    var_2 = var_0.ap(dict_0)
    var_3 = var_2.filter(var_1)


def test_case_17():
    bool_0 = False
    int_0 = 0
    bool_1 = False
    maybe_0 = module_0.Maybe(int_0, bool_1)
    var_0 = maybe_0.to_lazy()
    var_0.get_or_else(bool_0)


def test_case_18():
    float_0 = -1420.6
    none_type_0 = None
    maybe_0 = module_0.Maybe(float_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_either()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(var_0)
    maybe_1.filter(var_0)


def test_case_20():
    int_0 = -714
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, none_type_0)
    var_0 = maybe_0.get_or_else(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    var_1 = maybe_1.to_try()
    var_2 = maybe_0.to_validation()


def test_case_21():
    bytes_0 = b"\x13 \xfa\x1b\x13LVy\x1a\x17\xad\xdez:\xc2\xae\x16j"
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(bytes_0)


def test_case_22():
    bytes_0 = b"\xd7\xe1h,g;\x9f\xfc4]\x92"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(bytes_0)
    var_2 = var_1.to_validation()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_3 = maybe_1.ap(bool_1)
    var_4 = maybe_1.map(var_3)
    bool_2 = maybe_1.__eq__(var_4)
    var_5 = maybe_1.to_lazy()
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_6 = var_1.get_or_else(maybe_0)
    var_7 = var_6.get_or_else(var_1)
    bool_3 = var_4.__eq__(var_0)
    var_8 = maybe_1.to_try()


def test_case_23():
    bytes_0 = b"\xd7\xe1h,g;\x9f\xfc4]\x92"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.ap(bytes_0)
    var_1 = var_0.filter(bytes_0)
    var_2 = var_1.to_validation()
    bool_1 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bytes_0)
    var_3 = maybe_1.ap(bool_1)
    var_4 = maybe_1.map(var_3)
    bool_2 = maybe_1.__eq__(var_4)
    var_5 = var_1.to_lazy()
    var_6 = var_5.to_validation()
    var_7 = var_5.bind(var_5)
    var_7.get_or_else(var_0)


def test_case_24():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.map(maybe_0)
