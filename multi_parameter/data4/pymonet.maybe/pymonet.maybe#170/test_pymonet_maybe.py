# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 1744
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)


def test_case_2():
    float_0 = 1373.236284
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(float_0)
    bool_1 = var_0.__eq__(var_0)


def test_case_3():
    float_0 = 1373.236284
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_try()
    var_0.map(var_2)


def test_case_4():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    none_type_1 = None
    var_1 = var_0.to_try()
    var_2 = var_0.map(var_1)
    str_0 = ".Y\t\x0cvChb'^\x0b>^&L0PTj"
    var_3 = maybe_0.get_or_else(str_0)
    maybe_1 = module_0.Maybe(var_0, none_type_1)
    maybe_1.filter(var_2)


def test_case_5():
    none_type_0 = None
    bytes_0 = b"\x84\xcen\xe7\x91\xd9tS"
    none_type_1 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(maybe_0)
    var_2 = var_0.to_either()
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\xdd}}\xd66\xe9^\xe9\xa9\x8ax\x91\x8ex"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.bind(var_0)
    var_0.filter(bytes_0)


def test_case_7():
    bytes_0 = b"\xa5"
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.bind(bytes_0)


def test_case_8():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = maybe_0.ap(var_1)
    var_4 = var_2.to_validation()
    var_5 = var_1.ap(var_2)


def test_case_9():
    str_0 = ']"e!Q6)T'
    int_0 = 721
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    maybe_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.ap(none_type_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_0.to_either()
    var_3 = maybe_0.ap(var_1)
    var_4 = var_2.to_validation()
    var_5 = var_0.to_validation()
    var_6 = var_3.ap(var_0)
    var_7 = var_3.filter(var_2)


def test_case_11():
    int_0 = 1
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    bytes_0 = b""
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_3 = maybe_1.get_or_else(int_0)
    maybe_1.filter(var_3)


def test_case_12():
    complex_0 = -1917.596 - 1983.54j
    list_0 = [complex_0, complex_0, complex_0]
    maybe_0 = module_0.Maybe(complex_0, list_0)
    var_0 = maybe_0.to_either()


def test_case_13():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(none_type_0)


def test_case_14():
    int_0 = 191
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, int_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_try()
    var_2 = maybe_0.ap(bool_0)
    var_3 = var_2.to_either()
    var_3.to_either()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.to_validation()
    bool_0 = maybe_0.__eq__(none_type_0)
    tuple_0 = (var_1,)
    var_1.ap(tuple_0)


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_try()


def test_case_17():
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    list_0 = [set_0, set_0]
    tuple_0 = ()
    tuple_1 = (maybe_0, list_0, tuple_0)
    maybe_1 = module_0.Maybe(tuple_0, set_0)
    maybe_2 = module_0.Maybe(tuple_1, set_0)
    var_0 = maybe_2.to_lazy()


def test_case_18():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_box()


def test_case_19():
    bool_0 = False
    str_0 = "0g\\p&%b=CNB' .Y`\\26\x0b"
    list_0 = [bool_0, str_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_20():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    bool_1 = True
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = maybe_1.to_lazy()
    var_3 = var_2.to_try()
    var_4 = maybe_1.filter(none_type_0)


def test_case_21():
    float_0 = 1373.236284
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_validation()
    bool_1 = maybe_0.__eq__(bool_0)
    var_1 = maybe_0.ap(var_0)
    var_2 = var_1.ap(var_1)
    bool_2 = var_1.__eq__(maybe_0)
    var_0.ap(var_0)


def test_case_22():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()
