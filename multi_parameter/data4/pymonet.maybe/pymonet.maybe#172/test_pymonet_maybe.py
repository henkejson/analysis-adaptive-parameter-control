# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_1.get_or_else(bool_1)


def test_case_3():
    int_0 = 1357
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.ap(maybe_0)
    bool_1 = maybe_0.__eq__(int_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.to_box()
    var_4 = var_0.bind(var_0)
    var_5 = var_2.to_either()
    var_6 = var_0.to_try()


def test_case_4():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_validation()
    var_3 = maybe_0.map(tuple_0)


def test_case_5():
    int_0 = 0
    none_type_0 = None
    maybe_0 = module_0.Maybe(int_0, int_0)
    maybe_0.map(none_type_0)


def test_case_6():
    float_0 = -3662.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.filter(var_1)
    var_3 = var_2.filter(var_0)
    maybe_1 = module_0.Maybe(float_0, var_1)
    var_4 = maybe_0.get_or_else(var_2)
    var_5 = var_4.ap(float_0)
    bool_0 = var_3.__eq__(maybe_1)
    var_6 = maybe_0.to_validation()
    var_7 = var_4.to_box()
    var_8 = var_2.bind(var_5)
    var_9 = var_0.to_either()
    var_10 = var_9.to_try()


def test_case_7():
    complex_0 = -3552.68 + 1743.8644j
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    maybe_0.bind(complex_0)


def test_case_8():
    none_type_0 = None
    bytes_0 = b" q\x83\xc9\x80\xd3\xdc\n6\xf61\xcf\xa3\tM\x07\xf5"
    list_0 = [bytes_0]
    int_0 = -1001
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.ap(list_0)
    var_1 = var_0.filter(none_type_0)


def test_case_9():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    maybe_0.ap(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.to_validation()


def test_case_11():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_0.filter(bool_0)


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.bind(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_either()
    var_2 = var_1.ap(var_1)
    maybe_1 = module_0.Maybe(var_2, var_1)


def test_case_14():
    float_0 = -3662.0
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.filter(float_0)
    var_2 = var_1.filter(var_0)
    var_3 = var_2.to_validation()
    bool_0 = var_2.__eq__(var_3)
    var_4 = var_1.get_or_else(float_0)
    var_5 = maybe_0.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(var_4, bool_1)
    var_6 = var_0.to_either()
    var_7 = maybe_1.to_either()
    var_8 = maybe_0.to_try()
    var_8.to_validation()


def test_case_15():
    str_0 = "A61\x0cd3\t,"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, str_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    maybe_0.filter(maybe_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_try()
    var_2 = maybe_0.to_lazy()


def test_case_18():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_validation()


def test_case_19():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_box()
    bool_0 = maybe_0.__eq__(var_1)
    var_2 = var_1.to_try()
    var_2.to_validation()


def test_case_20():
    int_0 = 1357
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_either()
    none_type_0 = None
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    var_1 = maybe_0.ap(maybe_0)
    bool_1 = maybe_1.__eq__(var_1)
    var_2 = maybe_1.to_validation()
    var_2.bind(var_0)


def test_case_21():
    int_0 = 0
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_22():
    str_0 = "mN*ks3TpI..#mg;dvd"
    str_1 = "''AyYe''jgU>NAG\rME.:"
    maybe_0 = module_0.Maybe(str_0, str_1)
    none_type_0 = None
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    var_1 = var_0.to_either()
    var_2 = maybe_0.filter(var_1)
    maybe_2 = module_0.Maybe(var_2, bool_0)
    var_3 = maybe_2.get_or_else(none_type_0)
    bool_2 = maybe_1.__eq__(maybe_1)
    var_4 = maybe_0.to_either()
    var_3.to_validation()
