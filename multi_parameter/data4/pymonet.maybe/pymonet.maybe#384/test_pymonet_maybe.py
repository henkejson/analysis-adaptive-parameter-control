# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    str_0 = "kQcjrZ ^9&6["
    int_0 = -1860
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(str_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = var_0.filter(maybe_1)
    var_2 = var_0.to_lazy()
    var_3 = var_1.to_validation()
    var_4 = maybe_0.map(str_0)
    var_5 = var_0.to_box()
    maybe_1.filter(var_0)


def test_case_3():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    bool_2 = False
    maybe_0 = module_0.Maybe(bool_1, bool_2)
    maybe_0.map(dict_0)


def test_case_4():
    str_0 = "kQcjrZ ^9&6["
    int_0 = -1852
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(str_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = var_0.filter(maybe_1)
    var_2 = var_0.bind(var_0)
    var_3 = var_1.to_validation()
    var_4 = maybe_0.map(str_0)
    var_5 = var_0.to_box()
    maybe_1.filter(var_0)


def test_case_5():
    list_0 = []
    maybe_0 = module_0.Maybe(list_0, list_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_6():
    bytes_0 = b"}J\xd25`\x87\xbf"
    str_0 = "V\x0bO\x0be$IJ#"
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    maybe_0 = module_0.Maybe(list_0, none_type_0)
    maybe_0.ap(bytes_0)


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_8():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.get_or_else(var_0)
    var_3 = var_0.to_either()
    var_4 = var_0.map(var_3)
    var_5 = maybe_0.to_validation()
    var_6 = maybe_0.get_or_else(var_5)
    bool_1 = var_0.__eq__(maybe_0)
    var_7 = var_4.ap(maybe_0)
    var_8 = maybe_0.ap(var_5)
    var_5.get_or_else(maybe_0)


def test_case_9():
    str_0 = "kQcjrZ ^9&6["
    int_0 = -1860
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(str_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_1 = var_0.filter(maybe_1)
    var_2 = maybe_1.get_or_else(bool_0)
    var_3 = var_0.to_lazy()
    var_4 = var_1.to_validation()
    var_5 = maybe_0.map(str_0)
    var_6 = var_0.to_box()
    maybe_1.filter(var_2)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_11():
    int_0 = -2489
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_12():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = var_0.to_try()
    var_1.get_or_else(var_1)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_either()
    var_3 = maybe_0.to_lazy()
    var_4 = var_2.to_try()
    var_5 = var_1.to_lazy()
    var_6 = maybe_0.to_try()
    var_7 = var_2.to_try()
    bool_1 = var_6.__eq__(var_0)
    var_8 = var_6.bind(var_0)
    var_0.to_either()


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_15():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()


def test_case_16():
    none_type_0 = None
    none_type_0.to_validation()


def test_case_17():
    str_0 = "kQcjrZ ^9&6["
    int_0 = -1860
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_2 = var_0.filter(maybe_1)
    var_3 = var_0.to_lazy()
    var_4 = maybe_1.to_lazy()
    var_5 = var_3.to_box()
    var_6 = maybe_0.map(var_4)
    var_7 = var_4.to_validation()
    var_8 = var_0.to_box()
    maybe_1.filter(var_4)


def test_case_18():
    int_0 = -1177
    str_0 = "hzW{=`~/r2L2'[KdSMvv"
    int_1 = -1861
    maybe_0 = module_0.Maybe(int_1, int_1)
    none_type_0 = None
    bool_0 = maybe_0.__eq__(int_1)
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(int_0, bool_1)
    bool_2 = maybe_0.__eq__(var_0)
    tuple_0 = (str_0,)
    var_1 = var_0.ap(tuple_0)
    var_2 = maybe_0.filter(int_0)
    var_3 = maybe_0.ap(var_0)
    var_4 = var_0.to_validation()
    var_5 = maybe_0.map(var_1)
    var_6 = var_0.bind(int_0)
    var_7 = var_1.ap(none_type_0)
    var_8 = var_5.to_either()
    var_9 = maybe_0.to_either()
    var_10 = var_5.ap(var_2)
    var_11 = var_0.to_lazy()


def test_case_19():
    str_0 = "kQcjrZ ^9&6["
    int_0 = -1860
    maybe_0 = module_0.Maybe(int_0, int_0)
    bool_0 = maybe_0.__eq__(int_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = module_0.Maybe(bool_0, bool_0)
    var_2 = var_0.ap(bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_3 = var_0.filter(maybe_1)
    var_4 = maybe_1.get_or_else(bool_0)
    var_5 = var_0.to_lazy()
    var_6 = var_3.to_validation()
    bool_1 = var_1.__eq__(var_1)
    var_7 = var_2.to_lazy()
    var_8 = maybe_1.to_either()
    var_9 = var_8.to_validation()
    var_10 = var_0.to_box()
    maybe_1.filter(var_7)
