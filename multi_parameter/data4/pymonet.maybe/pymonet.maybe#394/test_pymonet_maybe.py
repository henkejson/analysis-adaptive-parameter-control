# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1
import builtins as module_2


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.filter(var_1)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_4 = maybe_1.to_box()
    maybe_1.filter(var_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    str_0 = "r\n/BtC;mKdiR?\r k8@JG"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.map(maybe_0)
    var_1 = var_0.to_try()
    var_2 = maybe_0.to_box()
    var_3 = var_0.map(var_1)
    var_4 = maybe_0.to_try()
    var_5 = var_0.bind(var_4)
    var_4.to_lazy()


def test_case_5():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_box()
    maybe_0.map(var_1)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.bind(var_0)
    var_2 = var_0.filter(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.filter(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_9():
    bytes_0 = b'\xbb\x02L\x19/"\xfc\xc4\x07#(\x87'
    dict_0 = {bytes_0: bytes_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(dict_0)


def test_case_10():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_11():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1.ap(none_type_0)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.get_or_else(none_type_0)
    var_1.ap(none_type_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.to_either()
    var_2 = var_0.filter(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    maybe_1.filter(bool_0)


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    var_0.bind(tuple_0)


def test_case_15():
    int_0 = 0
    tuple_0 = (int_0,)
    bool_0 = True
    float_0 = -499.4
    bool_1 = tuple_0.__eq__(int_0)
    maybe_0 = module_0.Maybe(bool_0, float_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(tuple_0)
    var_2 = var_1.to_validation()
    var_0.to_box()


def test_case_16():
    complex_0 = 3419.9 - 2101.627j
    bytes_0 = b"d\xb2\x88"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_0.map(complex_0)


def test_case_17():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.ap(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.filter(var_1)
    var_4 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_5 = var_3.to_lazy()
    maybe_1.filter(var_0)


def test_case_18():
    bool_0 = False
    set_0 = {bool_0}
    bytes_0 = b"d\xb2\x88"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_0.bind(var_1)
    var_2.get_or_else(set_0)


def test_case_19():
    list_0 = []
    generic_0 = module_1.Generic(*list_0)
    object_0 = module_2.object()
    float_0 = -1305.275
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_try()
    var_1 = var_0.map(object_0)
    var_1.to_try()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()


def test_case_21():
    bytes_0 = b"(\t\xeeK"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    bool_1 = maybe_0.__eq__(bytes_0)
    dict_0 = {}
    bool_2 = True
    maybe_1 = module_0.Maybe(dict_0, bool_2)
    var_0 = maybe_0.bind(maybe_1)
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()


def test_case_22():
    int_0 = -2123
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(int_0)


def test_case_23():
    bool_0 = False
    bool_1 = bool_0.__eq__(bool_0)


def test_case_24():
    bool_0 = True
    str_0 = "C bdDG7Lka27"
    bool_1 = True
    maybe_0 = module_0.Maybe(str_0, bool_1)
    var_0 = maybe_0.ap(bool_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.bind(var_0)
    var_3 = maybe_0.to_validation()
    var_4 = var_1.map(var_3)
    maybe_1 = module_0.Maybe(var_2, bool_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_1.to_lazy()
    var_7 = var_4.map(var_3)
    maybe_2 = module_0.Maybe(var_0, var_6)
    var_8 = var_6.to_try()
    var_9 = var_5.to_either()
    var_9.map(bool_0)


def test_case_25():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.ap(maybe_0)
    var_2 = var_1.to_validation()
    var_3 = var_1.bind(var_1)
    var_4 = var_1.filter(var_1)
    var_5 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_6 = maybe_1.to_box()
    maybe_1.filter(var_0)


def test_case_26():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = module_0.Maybe(bool_0, none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_0.to_try()
    var_2 = maybe_1.to_either()
    var_3 = maybe_1.get_or_else(none_type_0)
    maybe_0.bind(var_3)
