# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"c\xe1\xa6\x91\xa8\xa7\x88\xd6OL\xe6"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.get_or_else(bool_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = maybe_0.map(var_0)
    var_3 = var_2.filter(var_0)
    bool_2 = maybe_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_4 = var_3.map(none_type_0)
    var_5 = maybe_1.to_either()
    var_6 = var_4.filter(var_5)
    var_7 = var_2.get_or_else(bool_1)
    var_8 = var_2.to_box()
    var_9 = maybe_0.to_box()
    bool_3 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_3)
    var_10 = var_4.get_or_else(var_7)
    var_11 = var_2.to_box()
    var_11.bind(var_9)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(var_0)
    var_3 = maybe_0.map(var_2)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_4 = maybe_1.to_box()
    maybe_1.filter(var_3)


def test_case_4():
    complex_0 = -5798 - 6329.60708j
    int_0 = 0
    dict_0 = {int_0: int_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(dict_0, none_type_0)
    maybe_0.map(complex_0)


def test_case_5():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    int_0 = -1759
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_1.ap(bool_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.map(var_3)
    var_6 = maybe_1.to_either()
    var_7 = var_5.get_or_else(var_2)
    var_8 = var_3.to_box()
    int_1 = -1455
    var_9 = var_3.to_box()
    maybe_2 = module_0.Maybe(var_1, int_1)
    var_10 = maybe_1.to_box()
    var_11 = var_9.ap(maybe_0)
    var_12 = var_11.bind(var_2)
    maybe_3 = module_0.Maybe(maybe_1, bool_0)
    bool_2 = var_0.__eq__(var_5)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(none_type_0)


def test_case_7():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_either()
    int_0 = -1759
    maybe_1 = module_0.Maybe(int_0, int_0)
    var_3 = maybe_1.ap(bool_0)
    var_4 = maybe_1.to_either()
    var_5 = maybe_1.map(var_3)
    var_6 = maybe_1.to_either()
    var_7 = var_3.filter(var_3)
    var_8 = var_5.get_or_else(var_2)
    var_9 = var_3.to_box()
    var_10 = var_1.to_box()
    bytes_0 = b"\xf8"
    maybe_2 = module_0.Maybe(var_3, bytes_0)
    var_11 = maybe_2.get_or_else(int_0)
    var_12 = var_3.to_box()
    var_11.bind(var_9)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    bool_0 = False
    complex_0 = 1871.55 + 1609.02545j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_validation()
    var_1.map(bool_0)


def test_case_10():
    str_0 = "Maybe[None]"
    float_0 = 824.0
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.filter(float_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_lazy()
    bool_2 = False
    bool_3 = True
    var_1 = maybe_0.get_or_else(bool_3)
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    var_1.to_box()


def test_case_12():
    float_0 = -1656.947
    tuple_0 = (float_0,)
    none_type_0 = None
    maybe_0 = module_0.Maybe(tuple_0, none_type_0)
    var_0 = maybe_0.get_or_else(float_0)
    var_0.to_validation()


def test_case_13():
    dict_0 = {}
    generic_0 = module_1.Generic(**dict_0)
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(bool_0)
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.to_lazy()


def test_case_14():
    bool_0 = True
    list_0 = []
    bool_1 = False
    maybe_0 = module_0.Maybe(list_0, bool_1)
    var_0 = maybe_0.to_either()
    var_0.get_or_else(bool_0)


def test_case_15():
    bytes_0 = b"\xf5\xf4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_box()
    var_3 = var_2.to_validation()


def test_case_16():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    none_type_0 = None
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = var_0.to_try()
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    maybe_2.map(none_type_0)


def test_case_17():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_0, bool_2)
    maybe_2 = module_0.Maybe(none_type_0, maybe_1)
    var_0 = maybe_0.to_lazy()


def test_case_18():
    bytes_0 = b"sJ\xa1DI\xe0\x0cM\xd7\xce\x1aE&\xb8\x1c\xef"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_box()
    var_1.get_or_else(none_type_0)


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_20():
    none_type_0 = None
    set_0 = set()
    maybe_0 = module_0.Maybe(set_0, set_0)
    var_0 = maybe_0.to_try()
    var_0.ap(none_type_0)


def test_case_21():
    complex_0 = 1871.55 + 1609.02545j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.to_validation()
    var_0.to_validation()


def test_case_22():
    none_type_0 = None
    complex_0 = 2678.00568 - 698.1305j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    none_type_1 = None
    maybe_1 = module_0.Maybe(maybe_0, none_type_1)
    var_0 = maybe_1.to_validation()
    var_1 = var_0.to_either()
    var_1.ap(none_type_0)


def test_case_23():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_0.filter(var_1)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    var_3 = var_1.to_box()
    maybe_1.filter(var_1)


def test_case_24():
    none_type_0 = None
    str_0 = "TLhIB1\x0b2"
    bool_0 = False
    set_0 = {bool_0, str_0, none_type_0, none_type_0}
    maybe_0 = module_0.Maybe(set_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_validation()
    var_2.to_validation()


def test_case_25():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.to_lazy()
    var_2 = var_1.ap(var_0)
    var_3 = maybe_0.map(var_2)
    var_4 = var_3.get_or_else(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_1, bool_1)
    bool_2 = var_3.__eq__(maybe_1)
    var_5 = maybe_1.to_box()
    maybe_1.filter(var_3)


def test_case_26():
    complex_0 = -5194.9 - 1805.4j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    bool_0 = True
    none_type_0 = None
    maybe_1 = module_0.Maybe(complex_0, none_type_0)
    var_0 = maybe_1.get_or_else(bool_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_1 = maybe_0.filter(var_0)
    var_2 = var_1.map(var_0)
    var_3 = var_2.filter(maybe_1)
    var_4 = var_1.ap(var_0)
    bool_2 = maybe_0.__eq__(var_1)
    maybe_2 = module_0.Maybe(var_0, complex_0)
    var_5 = maybe_2.get_or_else(var_0)
    var_5.get_or_else(maybe_2)
