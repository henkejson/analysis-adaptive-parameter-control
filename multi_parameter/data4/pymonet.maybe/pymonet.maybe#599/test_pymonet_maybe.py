# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    bytes_0 = b"\x06_l&\x00\x12X"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.bind(maybe_0)
    bool_2 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_1.filter(maybe_0)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    bool_1 = var_0.__eq__(bool_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.bind(var_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_2 = var_1.filter(maybe_0)
    var_3 = var_1.map(var_0)
    var_4 = var_3.bind(var_1)
    bool_2 = var_2.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_2)
    maybe_1.filter(maybe_0)


def test_case_5():
    int_0 = -4665
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    maybe_0.map(int_0)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    bytes_0 = b"?\xc4"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(var_0)
    bool_0 = var_1.__eq__(bytes_0)
    var_2 = maybe_0.to_lazy()
    var_3 = maybe_0.ap(var_2)
    var_2.to_lazy()


def test_case_8():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    maybe_0.ap(none_type_0)


def test_case_9():
    str_0 = "&D8<\tIJTN0wv<T"
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.filter(str_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    int_0 = 1832
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    var_0.to_box()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.ap(none_type_0)
    var_2 = var_0.to_box()
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    dict_0 = {}
    maybe_2 = module_0.Maybe(dict_0, dict_0)


def test_case_12():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_13():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(maybe_0)
    bool_1 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_14():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_box()
    maybe_0.filter(var_1)


def test_case_15():
    bytes_0 = b"\x06_l&\x00\x12X"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_lazy()


def test_case_16():
    bool_0 = True
    none_type_0 = None
    bool_1 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_1)
    bool_2 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    bool_3 = False
    bool_4 = maybe_0.__eq__(bool_2)
    maybe_1 = module_0.Maybe(none_type_0, bool_3)
    var_1 = maybe_0.to_try()
    var_2 = var_0.to_try()
    var_3 = var_0.to_validation()
    maybe_0.ap(maybe_1)


def test_case_17():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.filter(maybe_0)
    var_2 = maybe_0.to_try()
    bool_1 = var_1.__eq__(var_0)
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(maybe_0)


def test_case_18():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_0.to_lazy()


def test_case_19():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_20():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    bool_0 = maybe_0.__eq__(var_0)
    var_1 = maybe_0.to_validation()
    var_0.get_or_else(maybe_0)


def test_case_21():
    int_0 = 2699
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.filter(int_0)
    bool_0 = var_0.__eq__(maybe_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_1 = var_0.to_try()
    generic_0 = module_1.Generic()
    var_2 = maybe_0.filter(var_1)
    bool_2 = maybe_0.__eq__(var_0)
    var_3 = var_2.to_lazy()
    var_4 = var_3.ap(var_0)
    var_5 = maybe_0.to_lazy()
    var_6 = var_5.bind(var_1)
    var_6.to_either()


def test_case_22():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(maybe_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    maybe_0.ap(none_type_0)
