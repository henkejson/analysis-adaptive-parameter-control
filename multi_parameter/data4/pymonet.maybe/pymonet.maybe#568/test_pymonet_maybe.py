# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = 195
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    var_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    float_0 = 368.08
    set_0 = {float_0, float_0, float_0, float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_1 = module_0.Maybe(set_0, float_0)
    var_1 = maybe_1.to_lazy()
    bool_1 = maybe_1.__eq__(maybe_1)


def test_case_3():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)


def test_case_4():
    int_0 = -3201
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = var_1.to_try()
    var_4 = maybe_0.map(var_1)
    var_5 = maybe_0.bind(var_4)
    var_6 = maybe_0.to_lazy()
    var_7 = var_4.ap(int_0)
    var_8 = var_1.to_box()
    maybe_1 = module_0.Maybe(int_0, var_3)
    maybe_2 = module_0.Maybe(var_2, var_8)
    var_9 = maybe_2.to_lazy()
    var_10 = var_7.to_validation()
    bool_2 = var_10.__eq__(none_type_0)


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.bind(bool_0)


def test_case_7():
    float_0 = 3330.086696
    complex_0 = 855.1953 - 4032.66j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    maybe_0.ap(float_0)


def test_case_8():
    bytes_0 = b"&\x85\x19u\xc2]\xa1\x87oj"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_0.Maybe(bool_0, var_1)


def test_case_9():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    maybe_0.filter(var_0)


def test_case_10():
    float_0 = 3184.7756
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(maybe_0)
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_3 = maybe_0.to_try()


def test_case_11():
    int_0 = -576
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.filter(int_0)
    maybe_1 = module_0.Maybe(none_type_0, int_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(none_type_0, bool_1)
    var_1 = maybe_2.to_box()
    var_2 = maybe_2.to_box()
    var_3 = maybe_2.get_or_else(var_2)
    maybe_2.filter(maybe_2)


def test_case_12():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = maybe_0.to_try()
    var_4 = var_1.to_try()
    var_5 = maybe_0.map(var_1)
    var_6 = var_5.to_box()
    var_7 = maybe_0.to_lazy()
    var_8 = var_5.ap(var_1)
    var_9 = maybe_0.bind(var_7)
    var_10 = var_4.get_or_else(var_1)
    maybe_1 = module_0.Maybe(var_10, var_10)
    var_11 = var_5.to_either()
    maybe_1.filter(var_0)


def test_case_13():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.filter(maybe_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.get_or_else(none_type_0)
    var_3 = var_1.to_try()
    var_4 = maybe_0.map(var_1)
    var_5 = var_4.to_box()
    var_6 = maybe_0.to_lazy()
    var_7 = var_4.ap(var_1)
    var_8 = var_3.get_or_else(var_1)
    maybe_1 = module_0.Maybe(var_8, var_8)
    maybe_1.filter(var_0)


def test_case_14():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    bool_1 = False
    bool_2 = maybe_0.__eq__(bool_1)
    none_type_0 = None
    var_0.get_or_else(none_type_0)


def test_case_16():
    bool_0 = False
    int_0 = -2566
    set_0 = {bool_0, bool_0, int_0}
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_validation()


def test_case_17():
    none_type_0 = None
    bytes_0 = b"\xc4\x05\xc4w->1\x8c\x02\x86\x9du\x91\xa1/\xb3\x1d"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.ap(maybe_1)
    var_1 = maybe_0.to_box()
    var_2 = maybe_1.to_validation()
    var_3 = maybe_0.map(var_1)
    var_4 = var_3.bind(var_0)
    var_5 = maybe_0.get_or_else(none_type_0)
    var_5.to_either()


def test_case_18():
    bool_0 = False
    bool_0.to_lazy()


def test_case_19():
    none_type_0 = None
    str_0 = "zb[XtU<hPp`"
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_lazy()
    var_3 = var_2.ap(maybe_0)
    bool_0 = var_3.__eq__(var_2)
    var_4 = maybe_0.to_try()
    var_5 = var_2.to_box()
    var_2.filter(none_type_0)


def test_case_20():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)
    maybe_0.filter(maybe_0)


def test_case_21():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_validation()
    maybe_0.filter(var_0)
