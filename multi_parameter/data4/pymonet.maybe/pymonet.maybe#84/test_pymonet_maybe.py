# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    complex_0 = 2215.0403 - 865.2j
    maybe_0 = module_0.Maybe(complex_0, complex_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_1 = maybe_0.map(var_0)
    var_2 = var_0.ap(var_1)
    bool_2 = var_2.__eq__(var_2)
    var_3 = var_0.to_lazy()
    var_4 = var_0.filter(var_0)
    var_5 = var_2.to_validation()
    var_6 = var_1.to_box()
    maybe_2 = module_0.Maybe(var_6, maybe_1)
    var_7 = var_2.ap(var_0)
    var_8 = var_6.to_lazy()
    var_9 = var_3.bind(var_7)
    maybe_3 = module_0.Maybe(none_type_0, var_8)
    bool_3 = maybe_1.__eq__(bool_1)
    var_10 = maybe_1.to_either()
    maybe_1.filter(var_5)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = maybe_0.__eq__(none_type_0)
    bool_2 = False
    maybe_0.filter(bool_2)


def test_case_4():
    str_0 = "\n}5"
    bytes_0 = b"\x97\xa1+"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, maybe_0)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.to_either()
    bool_0 = False
    maybe_2 = module_0.Maybe(bool_0, bool_0)
    var_2 = maybe_0.to_either()


def test_case_5():
    str_0 = "3Se?1WwN["
    none_type_0 = None
    maybe_0 = module_0.Maybe(str_0, none_type_0)
    maybe_0.map(str_0)


def test_case_6():
    float_0 = -432.44
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = var_0.map(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_0.filter(var_1)
    var_5 = var_2.to_box()
    maybe_2 = module_0.Maybe(float_0, maybe_1)
    var_6 = var_2.ap(var_1)
    var_7 = var_5.to_lazy()
    var_8 = var_3.bind(var_6)
    bool_2 = maybe_1.__eq__(bool_1)
    var_9 = var_2.bind(var_7)
    maybe_1.filter(maybe_2)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.bind(bool_0)


def test_case_8():
    float_0 = -432.44
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = var_0.map(var_1)
    var_3 = var_0.filter(var_1)
    var_4 = var_2.to_box()
    var_5 = var_2.ap(var_1)
    var_6 = var_4.to_lazy()
    var_7 = var_6.bind(var_5)
    maybe_1.filter(var_4)


def test_case_9():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.to_lazy()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    maybe_1.ap(bool_0)


def test_case_10():
    generic_0 = module_1.Generic()
    bytes_0 = b"g"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.filter(generic_0)
    var_1 = var_0.to_validation()
    var_1.to_validation()


def test_case_11():
    bool_0 = True
    none_type_0 = None
    maybe_0 = module_0.Maybe(bool_0, none_type_0)
    bool_1 = True
    maybe_0.filter(bool_1)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_lazy()


def test_case_13():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.get_or_else(none_type_0)
    var_2 = var_0.to_try()
    var_0.map(none_type_0)


def test_case_14():
    int_0 = -1913
    set_0 = {int_0, int_0}
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, int_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_1.to_either()
    none_type_1 = None
    maybe_2 = module_0.Maybe(none_type_1, none_type_1)
    var_1 = var_0.to_validation()


def test_case_15():
    tuple_0 = ()
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()


def test_case_16():
    float_0 = -432.44
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = var_0.ap(none_type_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    var_2 = var_0.map(var_1)
    var_3 = var_1.to_lazy()
    var_4 = var_0.filter(var_1)
    var_5 = var_2.to_box()
    var_6 = var_2.ap(var_1)
    var_7 = var_5.to_lazy()
    var_8 = var_3.bind(var_6)
    maybe_1.filter(var_5)


def test_case_17():
    generic_0 = module_1.Generic()
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(generic_0)


def test_case_18():
    str_0 = ";K]zfq8k?"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.to_try()
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    var_1 = maybe_1.to_box()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_19():
    bytes_0 = b'\x1d\xfa\x11\xba\x1f\xb8\x14\xa7\xbe"\xaf\xacC\xb3G'
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_try()
    var_1.to_validation()


def test_case_20():
    generic_0 = module_1.Generic()
    bytes_0 = b"g"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_validation()
    var_1 = var_0.to_either()


def test_case_21():
    int_0 = 26
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(int_0)


def test_case_22():
    float_0 = -432.44
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.filter(none_type_0)
    var_1 = maybe_0.to_validation()
    var_2 = var_0.ap(none_type_0)
    var_3 = var_2.map(var_1)
    var_4 = maybe_0.to_either()
    var_5 = maybe_0.to_lazy()
    generic_0 = module_1.Generic()
    maybe_1 = module_0.Maybe(generic_0, generic_0)
    var_6 = var_5.to_box()
    var_7 = maybe_1.to_lazy()
    var_8 = maybe_0.to_try()
    var_8.to_lazy()


def test_case_23():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    maybe_0 = module_0.Maybe(set_0, set_0)
    maybe_1 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    bool_2 = maybe_0.__eq__(maybe_1)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = maybe_0.ap(none_type_0)
    var_3 = maybe_0.to_try()
    var_4 = var_2.to_lazy()
    var_5 = var_0.bind(var_1)
    bool_3 = maybe_1.__eq__(none_type_0)
    maybe_2 = module_0.Maybe(bool_0, var_0)
    var_6 = var_1.to_either()
    maybe_3 = module_0.Maybe(var_5, bool_0)
    var_7 = var_4.to_box()
    var_8 = maybe_2.get_or_else(none_type_0)
    var_9 = var_6.to_try()
    maybe_4 = module_0.Maybe(var_4, none_type_0)
    var_3.to_try()


def test_case_24():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_either()
    bool_1 = maybe_0.__eq__(maybe_0)
    var_0.ap(maybe_0)
