# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    int_0 = -2213
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(maybe_0)
    bool_0 = var_0.__eq__(var_0)
    var_1 = var_0.map(complex_0)
    var_2 = var_1.to_validation()
    var_3 = var_2.to_box()


def test_case_3():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(var_0, var_0)
    bool_1 = maybe_1.__eq__(maybe_0)
    maybe_2 = module_0.Maybe(complex_0, maybe_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_1.to_either()
    var_3 = var_0.filter(var_0)


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_1.__eq__(bool_0)
    maybe_2 = module_0.Maybe(bool_0, none_type_0)
    var_0 = maybe_1.to_try()
    maybe_2.map(var_0)


def test_case_5():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, complex_0)
    var_1 = maybe_1.to_validation()
    complex_1 = -3599.24 - 2505j
    var_2 = maybe_1.map(complex_1)
    var_3 = var_0.bind(var_1)
    var_4 = var_0.filter(var_3)


def test_case_6():
    float_0 = -1687.122
    maybe_0 = module_0.Maybe(float_0, float_0)
    var_0 = maybe_0.to_either()
    bool_0 = False
    var_1 = maybe_0.filter(bool_0)
    maybe_1 = module_0.Maybe(float_0, bool_0)
    maybe_1.bind(float_0)


def test_case_7():
    complex_0 = -3939.217 + 1143.46j
    list_0 = []
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, complex_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_validation()
    var_2 = var_1.to_either()
    maybe_1 = module_0.Maybe(list_0, list_0)
    var_3 = maybe_1.to_try()
    maybe_1.ap(list_0)


def test_case_8():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, complex_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.to_either()
    var_3 = maybe_0.filter(var_2)


def test_case_9():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    var_1 = var_0.to_try()
    bool_0 = False
    tuple_0 = (bool_0,)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    maybe_1.filter(var_1)


def test_case_10():
    bool_0 = True
    int_0 = -2227
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.get_or_else(bool_0)
    var_0.to_try()


def test_case_11():
    complex_0 = 2127.5280274228485 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.to_either()
    var_2 = maybe_1.get_or_else(var_0)
    var_3 = var_0.bind(var_2)
    var_4 = var_3.map(bool_1)
    var_5 = var_0.bind(var_2)
    var_6 = var_0.get_or_else(var_3)
    var_7 = maybe_0.to_either()


def test_case_12():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    maybe_1 = module_0.Maybe(maybe_0, complex_0)
    var_1 = maybe_1.to_validation()
    var_2 = var_0.to_box()
    var_3 = maybe_1.ap(complex_0)
    var_4 = var_2.to_either()


def test_case_13():
    complex_0 = 2128 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(maybe_0)
    var_1 = var_0.filter(var_0)
    var_2 = var_1.to_box()
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_3 = maybe_1.to_box()
    maybe_2 = module_0.Maybe(maybe_1, var_0)
    var_4 = var_1.to_either()
    var_2.bind(var_4)


def test_case_14():
    str_0 = ""
    bytes_0 = b"ZM"
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_0.filter(str_0)


def test_case_15():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = maybe_0.to_validation()
    bool_2 = var_0.__eq__(bool_1)
    maybe_1 = module_0.Maybe(bool_2, var_0)
    var_3 = var_1.to_validation()
    var_4 = var_1.to_lazy()
    var_5 = var_4.to_either()
    var_6 = maybe_1.filter(bool_1)


def test_case_16():
    int_0 = 870
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.to_try()
    var_0.ap(int_0)


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_18():
    bytes_0 = b"M\xc8\xeesr"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_0.map(var_0)


def test_case_19():
    complex_0 = 2127.5280274228485 + 319.68j
    maybe_0 = module_0.Maybe(complex_0, complex_0)
    var_0 = maybe_0.ap(complex_0)
    bool_0 = var_0.__eq__(var_0)
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.map(var_1)
    var_3 = var_1.to_validation()
    var_4 = var_3.to_either()
    var_5 = var_2.filter(var_4)


def test_case_20():
    none_type_0 = None
    str_0 = "G"
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = ()
    maybe_1 = module_0.Maybe(tuple_0, tuple_0)
    var_1 = maybe_1.to_box()
    bool_1 = maybe_1.__eq__(maybe_1)
    var_2 = var_1.to_either()
    var_3 = var_2.to_lazy()
    var_3.get_or_else(str_0)
