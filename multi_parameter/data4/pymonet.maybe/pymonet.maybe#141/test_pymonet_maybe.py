# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(var_1)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.bind(none_type_0)
    var_4 = var_1.to_lazy()
    bool_2 = True
    maybe_1 = module_0.Maybe(var_1, bool_2)
    var_5 = var_0.to_either()
    maybe_2 = module_0.Maybe(bool_2, var_2)
    var_6 = maybe_2.to_validation()


def test_case_3():
    bytes_0 = b"\x04\xde\xa6\x99\x87"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    bool_0 = False
    bool_1 = False
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_1.__eq__(bytes_0)
    var_2 = maybe_1.to_either()
    maybe_2 = module_0.Maybe(bytes_0, bool_0)
    var_3 = maybe_1.to_validation()


def test_case_4():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.filter(var_1)
    none_type_0 = None
    bool_1 = maybe_0.__eq__(maybe_0)
    var_3 = maybe_0.bind(none_type_0)
    var_4 = var_0.to_either()
    var_5 = maybe_0.to_validation()
    var_6 = maybe_0.bind(none_type_0)
    var_7 = maybe_0.filter(var_5)
    var_8 = var_2.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, var_8)
    var_9 = maybe_1.to_validation()
    var_10 = var_0.to_box()
    var_11 = var_7.bind(var_10)
    var_12 = var_7.map(var_8)
    var_13 = maybe_1.to_validation()


def test_case_5():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(none_type_0)


def test_case_6():
    bytes_0 = b"\xd1\xe0\x8c\xbe\x19\xde\xe72\x93Jf&\xe4HS\x81\x10\x82\x0e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    maybe_0 = module_0.Maybe(dict_0, bytes_0)
    set_0 = {bytes_0, bytes_0, bytes_0}
    var_0 = maybe_0.bind(maybe_0)
    var_1 = var_0.get_or_else(bytes_0)
    maybe_1 = module_0.Maybe(set_0, bytes_0)
    var_2 = maybe_0.to_validation()


def test_case_7():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.get_or_else(none_type_0)
    maybe_0.bind(var_0)


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    var_1 = var_0.ap(list_0)
    var_2 = var_1.to_try()
    int_0 = 1109
    float_0 = -399.812
    dict_0 = {int_0: int_0, int_0: float_0, int_0: float_0}
    maybe_1 = module_0.Maybe(dict_0, dict_0)
    bool_1 = False
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    maybe_2.filter(bool_0)


def test_case_9():
    bytes_0 = b'5>\xbf\xbf\xb2\t\x06E5\x93\xf7\xd0"\x8e\x8b'
    float_0 = -2738.555
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_try()
    maybe_0.ap(bytes_0)


def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.filter(bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_0, bool_1)
    maybe_1.filter(bool_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_0)
    maybe_0.filter(none_type_0)


def test_case_12():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(maybe_0)


def test_case_13():
    bytes_0 = b"\x04\xde\xa6\x99\x87"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_lazy()
    var_2 = maybe_0.to_validation()
    var_3 = maybe_0.filter(var_2)
    var_4 = var_3.to_box()
    var_5 = var_3.get_or_else(var_3)
    var_6 = var_5.filter(maybe_0)
    var_7 = maybe_0.to_validation()
    var_8 = var_5.to_either()
    var_9 = var_6.bind(var_5)
    var_10 = maybe_0.to_box()
    var_11 = var_9.to_box()
    var_10.map(var_1)


def test_case_14():
    bool_0 = False
    int_0 = -15
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_15():
    bool_0 = False
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(bool_0, var_0)
    var_1 = maybe_0.to_validation()
    var_2 = maybe_1.bind(var_0)
    var_3 = var_0.map(dict_0)
    var_3.to_validation()


def test_case_16():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_0.to_try()


def test_case_17():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()


def test_case_18():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.ap(dict_0)
    var_1 = var_0.to_try()
    bool_1 = maybe_0.__eq__(var_0)
    var_2 = var_0.ap(var_1)
    var_3 = var_0.bind(bool_0)
    var_4 = var_0.bind(var_2)
    var_5 = var_0.ap(maybe_0)
    var_6 = var_1.filter(var_2)
    var_7 = var_4.bind(var_6)
    var_8 = var_5.get_or_else(bool_0)
    var_9 = var_7.bind(var_0)
    var_10 = var_9.filter(var_8)
    var_8.to_try()


def test_case_19():
    bytes_0 = b""
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    none_type_0 = None
    maybe_1 = module_0.Maybe(bytes_0, none_type_0)
    bool_1 = maybe_1.__eq__(maybe_1)
    var_0 = maybe_1.to_box()
    var_1 = maybe_1.to_either()
    var_2 = var_1.to_validation()
    var_2.filter(var_0)
