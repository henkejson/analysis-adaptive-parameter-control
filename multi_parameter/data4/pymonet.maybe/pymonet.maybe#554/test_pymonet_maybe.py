# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import typing as module_1


def test_case_0():
    int_0 = 471
    maybe_0 = module_0.Maybe(int_0, int_0)


def test_case_1():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(maybe_0)


def test_case_3():
    str_0 = "4fWrUO[M"
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    bool_1 = maybe_0.__eq__(str_0)


def test_case_4():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.map(bool_0)
    var_1 = var_0.filter(bool_1)
    var_2 = var_1.get_or_else(var_0)
    var_3 = var_2.ap(bool_0)
    var_4 = var_1.bind(var_1)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(int_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    maybe_0 = module_0.Maybe(none_type_1, none_type_1)
    maybe_0.map(none_type_0)


def test_case_6():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.bind(var_0)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(int_0)


def test_case_7():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    generic_0 = module_1.Generic()
    none_type_0 = None
    maybe_0.bind(none_type_0)


def test_case_8():
    bool_0 = False
    bytes_0 = b"\x7f/Q\xfbb\xebQ\xe7V\xa0\xeb8\xda\x08\xd9\xea"
    tuple_0 = (bool_0, bytes_0, bytes_0)
    set_0 = {tuple_0, bytes_0}
    bytes_1 = b"\xaf0\x8f\xf2\xe7\x9c\xb85#TY\xf5\xa4\xb4"
    maybe_0 = module_0.Maybe(bytes_1, bytes_1)
    var_0 = maybe_0.ap(set_0)


def test_case_9():
    complex_0 = -645.0935 + 3531.5628j
    float_0 = 2293.3975
    set_0 = {float_0, float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_0.ap(complex_0)


def test_case_10():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_1)
    maybe_1.filter(int_0)


def test_case_11():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    maybe_0.filter(tuple_0)


def test_case_12():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(bool_0)
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.get_or_else(maybe_0)
    var_2 = var_0.bind(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(var_1)


def test_case_13():
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(bool_0)
    bool_2 = maybe_1.__eq__(var_0)
    var_1 = maybe_1.to_validation()
    var_2 = maybe_1.to_validation()
    var_0.to_try()


def test_case_14():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.to_either()
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.bind(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(int_0)


def test_case_15():
    float_0 = -660.2
    bool_0 = False
    maybe_0 = module_0.Maybe(float_0, bool_0)
    var_0 = maybe_0.to_either()
    var_0.map(maybe_0)


def test_case_16():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    bool_1 = maybe_0.to_box()
    var_0 = maybe_0.filter(bool_1)
    var_1 = var_0.bind(var_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(bool_1, bool_2)
    maybe_1.filter(int_0)


def test_case_17():
    int_0 = -616
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    maybe_0.ap(int_0)


def test_case_18():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.bind(var_0)
    set_0 = {bool_0}
    maybe_2 = module_0.Maybe(var_0, var_0)
    var_2 = maybe_2.to_validation()
    var_3 = maybe_2.to_try()
    bool_1 = maybe_2.__eq__(maybe_2)
    var_4 = maybe_2.to_validation()
    var_5 = maybe_0.to_lazy()
    var_6 = var_3.filter(set_0)
    var_7 = maybe_2.map(maybe_2)


def test_case_19():
    int_0 = 715
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.map(int_0)
    var_1.to_validation()


def test_case_20():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_0)
    var_1 = maybe_1.bind(var_0)
    str_0 = "\x0bVi$\n\x0ckz4{E`\x0b\ta3IB}"
    maybe_2 = module_0.Maybe(str_0, str_0)
    var_2 = maybe_2.to_validation()
    var_3 = maybe_2.to_try()
    bool_1 = maybe_2.__eq__(maybe_2)
    var_4 = maybe_2.to_validation()
    var_5 = maybe_2.to_box()
    var_3.to_validation()


def test_case_21():
    str_0 = "\x0bot61n=0c_1H,VRV^'RV"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    bool_0 = True
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.ap(maybe_1)
    bool_1 = var_1.__eq__(bool_0)
    var_2 = var_1.bind(maybe_1)
    var_3 = maybe_1.to_box()
    var_4 = var_3.to_validation()


def test_case_22():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.ap(none_type_0)


def test_case_23():
    float_0 = -1222.02241
    complex_0 = 2041.235 + 3313.83j
    bool_0 = False
    maybe_0 = module_0.Maybe(complex_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.map(float_0)


def test_case_24():
    none_type_0 = None
    bytes_0 = b""
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.bind(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_box()
    var_5 = var_4.to_lazy()
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    maybe_2 = module_0.Maybe(bool_0, bool_1)
    var_6 = maybe_2.get_or_else(bytes_0)
    var_7 = maybe_0.get_or_else(var_4)
    maybe_3 = module_0.Maybe(var_7, var_1)
    var_8 = maybe_3.bind(var_5)
    var_6.bind(maybe_1)


def test_case_25():
    int_0 = -616
    maybe_0 = module_0.Maybe(int_0, int_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.bind(var_0)
    maybe_1 = module_0.Maybe(int_0, maybe_0)
    maybe_2 = module_0.Maybe(var_2, var_0)
    var_3 = maybe_2.ap(var_1)
    bool_0 = maybe_2.__eq__(var_1)
    var_4 = maybe_2.bind(var_3)
    var_5 = var_1.to_try()
    var_6 = var_1.to_lazy()
    maybe_3 = module_0.Maybe(var_2, bool_0)
    var_7 = maybe_1.bind(var_4)
    var_8 = var_4.to_box()
    module_1.Generic(*var_1)


def test_case_26():
    int_0 = -616
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = maybe_0.ap(int_0)
    var_2 = maybe_0.to_validation()
    var_3 = var_1.to_try()
    var_4 = var_1.bind(var_3)
    bool_1 = False
    maybe_1 = module_0.Maybe(var_4, bool_1)
    bool_2 = maybe_1.__eq__(maybe_1)
    bool_3 = var_3.__eq__(maybe_1)
    var_5 = var_1.to_try()
    var_2.map(var_1)
