# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = maybe_0.__eq__(none_type_0)
    maybe_1 = module_0.Maybe(none_type_0, bool_0)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.map(maybe_0)


def test_case_4():
    bytes_0 = b"\x1ej\xcfKp\xac\xfa"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    maybe_0.map(bytes_0)


def test_case_5():
    int_0 = 2744
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = var_0.get_or_else(set_0)
    bool_1 = maybe_0.__eq__(var_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_either()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.filter(bool_0)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_2 = var_0.get_or_else(var_1)
    maybe_1.filter(var_0)


def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    maybe_0.ap(bool_0)


def test_case_9():
    none_type_0 = None
    int_0 = 2744
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.bind(bool_0)
    var_1 = maybe_0.filter(none_type_0)
    var_2 = maybe_0.to_validation()


def test_case_10():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_1, none_type_0)
    var_0 = maybe_1.to_lazy()
    maybe_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(none_type_1, bool_0)
    var_0 = maybe_0.get_or_else(none_type_0)


def test_case_12():
    bool_0 = False
    str_0 = "vD2kwnUQr=WW:Qwc"
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)
    var_0.to_lazy()


def test_case_13():
    str_0 = "7\x0b$"
    str_1 = "A"
    maybe_0 = module_0.Maybe(str_1, str_1)
    var_0 = maybe_0.to_validation()
    var_1 = maybe_0.to_lazy()
    bool_0 = True
    maybe_1 = module_0.Maybe(var_1, bool_0)
    var_2 = var_1.to_either()
    var_3 = var_2.to_validation()
    bool_1 = var_1.__eq__(str_1)
    var_4 = maybe_1.to_either()
    var_5 = var_4.to_validation()
    var_6 = maybe_1.bind(str_0)


def test_case_14():
    str_0 = "5YD&T"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_either()
    var_2 = maybe_0.to_either()


def test_case_15():
    int_0 = 2744
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = maybe_0.__eq__(set_0)
    maybe_1 = module_0.Maybe(bool_0, bool_1)


def test_case_16():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    var_0.to_box()


def test_case_17():
    int_0 = -4377
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.bind(int_0)
    var_1 = var_0.filter(bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_2 = maybe_0.to_lazy()
    bool_1 = maybe_1.__eq__(maybe_0)
    var_3 = maybe_1.to_box()
    bool_2 = var_1.__eq__(var_1)
    maybe_2 = module_0.Maybe(bool_0, var_2)


def test_case_18():
    int_0 = 2744
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    none_type_0 = None
    var_0 = maybe_0.bind(none_type_0)
    list_0 = [none_type_0]
    var_1 = maybe_0.get_or_else(int_0)
    var_2 = maybe_0.filter(var_1)
    var_3 = maybe_0.to_try()
    var_4 = var_2.get_or_else(list_0)
    bool_1 = var_1.__eq__(maybe_0)


def test_case_19():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.filter(bool_0)
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    bool_2 = maybe_1.to_validation()
    var_1 = var_0.get_or_else(var_0)
    maybe_2.filter(bool_2)


def test_case_20():
    float_0 = -1887.6062
    dict_0 = {float_0: float_0, float_0: float_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_box()


def test_case_21():
    bool_0 = False
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    maybe_1 = module_0.Maybe(bool_1, bool_0)
    var_0 = maybe_0.ap(maybe_0)
    var_1 = var_0.filter(bool_0)
    maybe_2 = module_0.Maybe(bool_1, bool_0)
    bool_2 = maybe_2.__eq__(maybe_0)
    var_2 = var_0.get_or_else(var_1)
    maybe_2.filter(bool_2)


def test_case_22():
    bytes_0 = b"KeH\xc8Z\xb8\t\xb7\x94#\xe3H\x9a\xaaW"
    none_type_0 = None
    maybe_0 = module_0.Maybe(bytes_0, none_type_0)
    bool_0 = maybe_0.__eq__(maybe_0)
    var_0 = maybe_0.to_either()
    var_1 = maybe_0.to_box()
    var_2 = var_1.to_either()
    str_0 = "0TNpN1M<+| Rgnj~"
    var_3 = var_2.to_try()
    bool_1 = False
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_4 = maybe_1.get_or_else(var_2)
    var_4.to_lazy()
