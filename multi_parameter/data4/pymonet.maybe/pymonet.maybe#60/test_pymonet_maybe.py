# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.maybe as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_1():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)


def test_case_2():
    bytes_0 = b"\x922"
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    bool_0 = maybe_0.__eq__(bytes_0)
    object_0 = module_1.object()


def test_case_3():
    str_0 = "\n        Create not empty maybe.\n\n        :param mapper: value to store in Maybe\n        :type mapper: Any\n        :returns: Maybe[Any]\n        "
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    var_0 = maybe_0.map(str_0)
    var_1 = var_0.to_box()


def test_case_4():
    dict_0 = {}
    maybe_0 = module_0.Maybe(dict_0, dict_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.map(maybe_0)


def test_case_5():
    bytes_0 = b"\x922"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.bind(bytes_0)
    maybe_1 = module_0.Maybe(maybe_0, maybe_0)
    var_2 = maybe_1.to_box()
    bool_0 = maybe_1.__eq__(bytes_0)
    var_3 = maybe_0.to_box()
    var_4 = var_1.map(var_3)
    str_0 = "m=C-:W\x0cf}\r~'B?m"
    var_5 = maybe_1.to_validation()
    var_6 = var_0.map(var_0)
    var_7 = var_0.ap(str_0)
    var_8 = var_0.to_validation()
    bool_1 = var_8.__eq__(maybe_0)


def test_case_6():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    maybe_0.bind(var_0)


def test_case_7():
    bool_0 = True
    str_0 = "!mD_,"
    maybe_0 = module_0.Maybe(str_0, str_0)
    var_0 = maybe_0.ap(str_0)
    var_1 = var_0.filter(maybe_0)
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.get_or_else(bool_0)
    var_4 = var_1.to_either()
    var_3.filter(bool_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    none_type_0 = None
    maybe_0.ap(none_type_0)


def test_case_9():
    bytes_0 = b"M\xd8\xe3\x05"
    int_0 = -419
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_0.filter(bytes_0)


def test_case_10():
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.get_or_else(maybe_0)
    var_2 = maybe_0.to_lazy()
    maybe_1 = module_0.Maybe(none_type_0, none_type_0)
    bool_0 = maybe_1.__eq__(maybe_1)
    maybe_1.filter(none_type_0)


def test_case_11():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_lazy()
    tuple_0 = (bool_0,)
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_2.to_either()
    bool_2 = var_1.__eq__(maybe_1)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_box()
    bool_1 = var_0.__eq__(maybe_0)
    var_1 = maybe_0.to_lazy()
    var_2 = maybe_0.to_either()
    var_2.get_or_else(maybe_0)


def test_case_13():
    tuple_0 = ()
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_box()
    var_1 = var_0.to_validation()
    var_2 = maybe_0.to_lazy()
    var_3 = var_1.to_lazy()


def test_case_14():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_box()
    list_0 = [var_0, var_0, var_0, var_0]
    maybe_1 = module_0.Maybe(var_0, maybe_0)
    var_1 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(list_0, var_0)
    bool_1 = maybe_2.__eq__(maybe_0)
    var_2 = maybe_2.to_lazy()
    var_3 = var_2.to_try()
    var_0.filter(var_0)


def test_case_15():
    int_0 = 2051
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()


def test_case_16():
    none_type_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_validation()
    var_0.filter(none_type_0)


def test_case_17():
    none_type_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(none_type_0, bool_0)
    var_0 = maybe_0.to_validation()
    bytes_0 = b"\x97J\xf0~"
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_1 = maybe_1.map(bytes_0)
    var_2 = maybe_1.to_lazy()
    var_3 = maybe_1.bind(none_type_0)
    var_4 = maybe_1.filter(var_2)
    bool_1 = True
    maybe_2 = module_0.Maybe(var_0, bool_1)
    var_5 = maybe_1.to_try()
    var_6 = maybe_2.to_validation()
    var_7 = maybe_1.to_box()
    bool_2 = var_4.__eq__(maybe_0)
    var_8 = var_4.filter(maybe_0)
    maybe_0.filter(var_2)


def test_case_18():
    bytes_0 = b"\x922"
    none_type_0 = None
    maybe_0 = module_0.Maybe(none_type_0, none_type_0)
    var_0 = maybe_0.to_lazy()
    var_1 = var_0.to_try()
    bool_0 = var_1.__eq__(bytes_0)
    maybe_1 = module_0.Maybe(bytes_0, bytes_0)
    var_2 = maybe_1.map(bytes_0)
    var_3 = var_2.ap(var_2)
    var_4 = maybe_1.to_box()
    var_5 = var_2.to_box()
    var_6 = var_2.bind(var_4)
    var_7 = var_3.to_validation()
    maybe_2 = module_0.Maybe(var_3, var_5)
    var_8 = var_5.to_validation()
    var_9 = var_5.to_validation()
    var_10 = var_3.to_box()
    bool_1 = maybe_2.__eq__(maybe_1)
    bool_2 = var_3.__eq__(var_5)
    var_11 = maybe_2.get_or_else(var_10)
    var_12 = var_6.filter(var_2)
    bool_1.filter(var_10)


def test_case_19():
    bytes_0 = b"\x922"
    maybe_0 = module_0.Maybe(bytes_0, bytes_0)
    var_0 = maybe_0.map(bytes_0)
    var_1 = var_0.ap(var_0)
    var_2 = maybe_0.to_box()
    var_3 = var_0.to_box()
    var_4 = var_0.bind(var_2)
    maybe_1 = module_0.Maybe(var_1, var_3)
    var_5 = maybe_0.to_try()
    var_6 = maybe_1.to_box()
    bool_0 = var_0.__eq__(var_1)
    var_7 = maybe_0.get_or_else(var_5)
    var_8 = var_4.filter(var_2)
    var_9 = var_8.map(var_8)
    var_10 = var_0.filter(var_5)
    var_11 = var_10.filter(var_4)
    var_12 = var_0.to_box()
