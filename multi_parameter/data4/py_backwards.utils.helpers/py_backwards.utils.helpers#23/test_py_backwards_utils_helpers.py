# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import re as module_0
import py_backwards.utils.helpers as module_1


def test_case_0():
    var_0 = module_0.purge()
    none_type_0 = module_1.debug(var_0)


def test_case_1():
    variables_generator_0 = module_1.VariablesGenerator()


def test_case_2():
    bool_0 = False
    callable_0 = module_1.eager(bool_0)


def test_case_3():
    str_0 = "BO5H\tG'."
    none_type_0 = module_1.warn(str_0)
    none_type_1 = module_1.warn(str_0)
    variables_generator_0 = module_1.VariablesGenerator()
    dict_0 = {variables_generator_0: variables_generator_0}
    module_1.get_source(dict_0)


def test_case_4():
    str_0 = "*Y<"
    none_type_0 = module_1.warn(str_0)


def test_case_5():
    str_0 = ">\\\r\t"
    none_type_0 = module_1.warn(str_0)
    none_type_1 = module_1.warn(str_0)
    var_0 = module_0.purge()
    none_type_2 = module_1.debug(var_0)
    none_type_3 = module_1.warn(var_0)
    none_type_4 = module_1.warn(var_0)
    callable_0 = module_1.eager(none_type_3)
    variables_generator_0 = module_1.VariablesGenerator()
    variables_generator_1 = module_1.VariablesGenerator()
    callable_0.__call__(none_type_1, none_type_3, type=none_type_2)
