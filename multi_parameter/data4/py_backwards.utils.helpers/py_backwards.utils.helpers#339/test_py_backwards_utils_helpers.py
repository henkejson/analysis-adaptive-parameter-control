# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    list_0 = []
    none_type_0 = module_0.debug(list_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    var_0 = module_1.purge()
    callable_0 = module_0.eager(var_0)
    callable_1 = module_0.eager(var_0)
    var_0.__getattr__(callable_0, var_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "a5In"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    str_0 = "Compiles return in generators like:\n        def fn():\n            yield 1\n            return 5\n    To:\n        def fn():\n            yield 1\n            exc = StopIteration()\n            exc.value = 5\n            raise exc\n    "
    none_type_0 = module_0.warn(str_0)
    float_0 = -1011.970384
    var_0 = module_0.eager(float_0)
    none_type_1 = module_0.debug(var_0)
    none_type_2 = None
    var_0.__call__(none_type_2, none_type_0, module=none_type_2)
