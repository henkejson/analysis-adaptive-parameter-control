# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "3.5"
    none_type_0 = module_0.warn(str_0)
    str_1 = "<d%HlI_`)n>3"
    none_type_1 = module_0.debug(str_0)
    variables_generator_0 = module_0.VariablesGenerator()
    dict_0 = {str_0: str_0, str_1: str_0}
    none_type_2 = module_0.warn(str_1)
    callable_0 = module_0.eager(dict_0)
    module_0.VariablesGenerator(**dict_0)


def test_case_3():
    bytes_0 = b"\xbb/\x13\xf5\xdcHD\xa1e\xd5\xe2\x95fp4~_\x82\xfer"
    str_0 = "9"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(bytes_0)
    module_0.get_source(bytes_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    none_type_2 = module_0.debug(none_type_0)
    none_type_3 = module_0.debug(bool_0)


def test_case_5():
    none_type_0 = None
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "b1Q,PuTuUquX\ts"
    none_type_1 = module_0.warn(str_0)
    callable_0 = module_0.eager(none_type_0)
    none_type_2 = module_0.warn(none_type_0)
    callable_0.__call__(none_type_1, none_type_1)
