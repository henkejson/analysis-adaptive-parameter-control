# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    dict_0 = {}
    none_type_0 = module_0.debug(dict_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    float_0 = 343.63949
    str_0 = "<~3RR['\"] 6roB`}"
    none_type_0 = module_0.warn(str_0)
    callable_0 = module_0.eager(float_0)
    var_0 = module_1.purge()
    none_type_1 = module_0.debug(var_0)


def test_case_3():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)
    str_0 = "&\r~sW@4*$}[ Q))|t!OB"
    none_type_1 = module_0.warn(str_0)
    none_type_2 = module_0.warn(bool_0)
    none_type_3 = module_0.warn(str_0)
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "YQkmE*yQ<a.<1/6"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    float_0 = 343.63949
    str_0 = "<~3RR['\"] 6roB`}"
    none_type_0 = module_0.warn(str_0)
    callable_0 = module_0.eager(float_0)
    str_1 = "-o"
    none_type_1 = module_0.warn(str_1)
    callable_0.__call__(none_type_1, none_type_0)
