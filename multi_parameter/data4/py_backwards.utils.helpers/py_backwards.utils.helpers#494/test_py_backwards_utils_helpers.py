# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    str_0 = "`3A\r-I4t\r8."
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\x8f\x1f\x13\x7f\xc1z\xf0\xc51\xb9\x1b\xe8\xe4\x8c\xfe8\x84\t\xa2"
    var_0 = module_1.match(bytes_0, bytes_0)
    callable_0 = module_0.eager(var_0)
    float_0 = -1525.1
    none_type_0 = module_0.warn(float_0)
    module_1.compile(float_0)


def test_case_3():
    bool_0 = False
    module_0.get_source(bool_0)


def test_case_4():
    dict_0 = {}
    none_type_0 = module_0.warn(dict_0)


def test_case_5():
    str_0 = "pY|$n3P`m>pG\t[`}Z"
    callable_0 = module_0.eager(str_0)
    callable_0.__call__(str_0, callable_0, callable_0)
