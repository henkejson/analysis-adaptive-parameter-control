# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import collections as module_1
import re as module_2


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\x91 Q\xe1`\xb3n\xd0\x0c\xb0\xf2"
    callable_0 = module_0.eager(bytes_0)


def test_case_3():
    set_0 = set()
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    ordered_dict_0 = module_1.OrderedDict(*set_0)
    callable_0 = module_0.eager(ordered_dict_0)
    module_0.get_source(callable_0)


def test_case_4():
    str_0 = "VWB]OldW<."
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    regex_flag_0 = module_2.RegexFlag.LOCALE
    regex_flag_1 = module_2.RegexFlag.UNICODE
    none_type_0 = None
    none_type_1 = module_0.warn(regex_flag_1)
    str_0 = "0Cv.0}n!.TGoL"
    none_type_2 = module_0.warn(str_0)
    callable_0 = module_0.eager(regex_flag_0)
    none_type_3 = module_0.debug(callable_0)
    callable_1 = module_0.eager(callable_0)
    none_type_4 = module_0.warn(none_type_3)
    none_type_5 = module_0.debug(callable_0)
    none_type_6 = module_0.warn(none_type_0)
    none_type_7 = module_0.debug(callable_1)
    bool_0 = False
    callable_0.__call__(none_type_4, none_type_6, module=bool_0, type=none_type_4)
