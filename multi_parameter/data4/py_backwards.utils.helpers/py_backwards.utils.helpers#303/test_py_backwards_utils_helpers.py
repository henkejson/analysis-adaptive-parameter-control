# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    dict_0 = {}
    none_type_0 = module_0.debug(dict_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    dict_0 = {}
    callable_0 = module_0.eager(dict_0)
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_3():
    variables_generator_0 = module_0.VariablesGenerator()
    module_0.get_source(variables_generator_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    str_0 = ">3oI)4"
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_2 = module_0.warn(str_0)
    bytes_0 = b"\x8d\x0b\x9f]\x0e{\x15\x8c\x10W\x86\xb3t\x91"
    none_type_3 = module_0.warn(bytes_0)
    callable_0 = module_0.eager(none_type_3)
    none_type_4 = module_0.warn(str_0)
    dict_0 = {
        bytes_0: none_type_0,
        none_type_1: none_type_4,
        variables_generator_0: none_type_3,
    }
    callable_0.__call__(
        none_type_3, dict_0, module=callable_0, qualname=variables_generator_0
    )
