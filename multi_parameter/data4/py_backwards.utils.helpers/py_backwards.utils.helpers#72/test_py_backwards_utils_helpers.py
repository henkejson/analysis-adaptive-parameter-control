# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"p\xc3\xa0\x99\x0fKvJ\x84\x9ch\xa0\x19\xa1:\x12"
    str_0 = "addinfo"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(bytes_0)
    str_1 = "9*'\r+1[>r<Fv,o4vc-"
    none_type_2 = module_0.warn(str_1)
    none_type_3 = None
    none_type_4 = module_0.debug(none_type_3)
    none_type_5 = module_0.warn(none_type_3)
    none_type_6 = module_0.warn(str_0)
    none_type_7 = module_0.warn(str_0)
    var_0 = module_1.purge()
    callable_0 = module_0.eager(var_0)


def test_case_3():
    bool_0 = True
    module_0.get_source(bool_0)


def test_case_4():
    str_0 = "html_entities"
    none_type_0 = module_0.warn(str_0)
    var_0 = module_1.escape(str_0)
    var_1 = var_0.__dir__()
    var_1.__bool__()


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    callable_0.__call__(none_type_0, callable_0)
