# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "J\\[Pj[L;T`C?ZT"
    callable_0 = module_0.eager(str_0)
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    str_1 = "XF{efp;7"
    none_type_2 = module_0.warn(str_1)
    regex_flag_0 = module_1.RegexFlag.UNICODE
    module_0.get_source(regex_flag_0)


def test_case_3():
    str_0 = "tX_hAiL')\x0c"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = None
    none_type_2 = module_0.debug(none_type_1)
    var_0 = module_1.RegexFlag.UNICODE
    module_0.get_source(var_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)


def test_case_5():
    str_0 = "tXbhAiB')\x0c"
    str_1 = "J\\[Pj[L;T`C?ZT"
    none_type_0 = module_0.debug(str_1)
    none_type_1 = None
    var_0 = module_0.eager(str_0)
    none_type_2 = module_0.warn(str_0)
    var_0.__call__(none_type_1, str_0, none_type_2, module=none_type_2)
