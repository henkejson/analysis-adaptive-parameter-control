# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    float_0 = 1339.083
    none_type_0 = module_0.debug(float_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_0)


def test_case_3():
    regex_flag_0 = module_1.RegexFlag.TEMPLATE
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(regex_flag_0)
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "T>68Tcc.\tiX"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    callable_0 = module_0.eager(none_type_0)
    none_type_2 = module_0.warn(none_type_0)
    str_0 = ".#Z69Q0[,\r"
    callable_1 = module_0.eager(none_type_2)
    callable_2 = module_0.eager(callable_1)
    callable_2.__call__(str_0, none_type_1, type=none_type_0, start=callable_2)
