# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import builtins as module_1
import re as module_2


def test_case_0():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "#lM.VOa\\~?]]`>sQ4_"
    variables_generator_0 = module_0.VariablesGenerator()
    object_0 = module_1.object()
    callable_0 = module_0.eager(object_0)
    dict_0 = {str_0: str_0}
    module_0.VariablesGenerator(**dict_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator()
    str_0 = "unquote_to_bytes"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    str_0 = "b80\\0R0th%Q^1-|k"
    callable_0 = module_0.eager(str_0)
    callable_1 = module_0.eager(callable_0)
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(str_0)
    none_type_2 = module_0.warn(str_0)
    none_type_3 = module_0.debug(callable_1)
    module_2.subn(str_0, callable_0, str_0)
