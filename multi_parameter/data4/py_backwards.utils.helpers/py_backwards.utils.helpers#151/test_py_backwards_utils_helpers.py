# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    bool_0 = False
    none_type_0 = module_0.debug(bool_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(variables_generator_0)
    module_1.Match()


def test_case_3():
    str_0 = "zvl]\nni3J|B,FIz@mo"
    module_0.get_source(str_0)


def test_case_4():
    int_0 = 0
    none_type_0 = module_0.warn(int_0)
    dict_0 = {int_0: int_0, int_0: int_0}
    module_1.sub(dict_0, dict_0, dict_0, int_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    none_type_2 = module_0.debug(none_type_0)
    none_type_3 = None
    callable_0 = module_0.eager(none_type_3)
    callable_1 = module_0.eager(none_type_3)
    none_type_4 = module_0.warn(none_type_2)
    callable_2 = module_0.eager(callable_1)
    none_type_5 = module_0.debug(callable_0)
    callable_3 = module_0.eager(callable_0)
    str_0 = "/"
    none_type_6 = module_0.warn(str_0)
    callable_3.__call__(none_type_3, callable_3, module=none_type_2)
