# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    dict_0 = {}
    variables_generator_0 = module_0.VariablesGenerator(**dict_0)
    callable_0 = module_0.eager(none_type_1)
    callable_1 = module_0.eager(none_type_1)
    str_0 = "C~&_(H8f^VpcEl|"
    none_type_2 = module_0.warn(str_0)
    module_0.get_source(none_type_0)


def test_case_4():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    var_0 = module_1._EnumDict()
    none_type_2 = module_0.warn(var_0)
    var_0.__repr__(none_type_0)


def test_case_5():
    complex_0 = -4199.983 - 2985.866j
    var_0 = module_0.eager(complex_0)
    var_0.__call__(complex_0, var_0, start=var_0)
