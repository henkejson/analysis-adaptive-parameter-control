# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    variables_generator_0 = module_0.VariablesGenerator()
    none_type_0 = module_0.debug(variables_generator_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    bytes_0 = b"\xbe7y0,G\xa0\xd5e\xc3`VG\x86\x80\xa0\x0e\x92+"
    variables_generator_0 = module_0.VariablesGenerator()
    callable_0 = module_0.eager(bytes_0)
    none_type_0 = module_0.debug(bytes_0)
    module_1.findall(none_type_0, bytes_0, bytes_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    str_0 = "0"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.warn(str_0)
    module_1.findall(str_0, none_type_1)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.warn(none_type_0)
    none_type_2 = module_0.debug(none_type_0)
    var_0 = module_1.purge()
    none_type_3 = None
    callable_0 = module_0.eager(var_0)
    none_type_4 = module_0.warn(var_0)
    callable_0.__call__(var_0, none_type_3, start=none_type_0)
