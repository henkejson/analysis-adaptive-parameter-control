# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import re as module_1


def test_case_0():
    bytes_0 = b"\xec\x00un\x87\x18\xf8\x8e#\r\xdf\xe6Z\x88TG<\xcc"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    str_0 = "]\x0ca^%&\nM"
    var_0 = module_1.findall(str_0, str_0)
    callable_0 = module_0.eager(var_0)
    none_type_0 = module_0.warn(str_0)
    callable_1 = module_0.eager(callable_0)


def test_case_3():
    bytes_0 = b"\x8f\xd8I\x18q4\x00o\x8e\xd2\xa4_wyf\x87\x1a\x1a"
    module_0.get_source(bytes_0)


def test_case_4():
    str_0 = "__builtin__"
    none_type_0 = module_0.warn(str_0)


def test_case_5():
    none_type_0 = None
    none_type_1 = module_0.debug(none_type_0)
    str_0 = ">"
    callable_0 = module_0.eager(none_type_1)
    none_type_2 = module_0.warn(str_0)
    none_type_3 = module_0.debug(callable_0)
    none_type_4 = module_0.debug(callable_0)
    none_type_5 = module_0.debug(callable_0)
    callable_0.__call__(
        none_type_3, none_type_4, module=none_type_2, type=callable_0, start=none_type_2
    )
