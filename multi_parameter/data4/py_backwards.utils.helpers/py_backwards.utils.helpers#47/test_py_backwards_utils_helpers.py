# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0
import enum as module_1
import re as module_2


def test_case_0():
    str_0 = "IFp+OP{"
    none_type_0 = module_0.debug(str_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    enum_dict_0 = module_1._EnumDict()
    callable_0 = module_0.eager(enum_dict_0)
    none_type_0 = None
    module_2.escape(none_type_0)


def test_case_3():
    none_type_0 = None
    module_0.get_source(none_type_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    variables_generator_1 = module_0.VariablesGenerator()
    str_0 = "Rthx!DYon07b4\rzELH,\x0b"
    none_type_0 = module_0.warn(str_0)
    module_2.fullmatch(none_type_0, none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"L\x13"
    var_0 = module_2.template(bytes_0)
    callable_0 = module_0.eager(var_0)
    none_type_0 = module_0.debug(callable_0)
    module_2.sub(var_0, callable_0, bytes_0)
