# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.utils.helpers as module_0


def test_case_0():
    bytes_0 = b"<\xe3>7B\x12\xc8\xbd\xb3\xc8\xf8"
    none_type_0 = module_0.debug(bytes_0)


def test_case_1():
    variables_generator_0 = module_0.VariablesGenerator()


def test_case_2():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)


def test_case_3():
    int_0 = -2838
    module_0.get_source(int_0)


def test_case_4():
    variables_generator_0 = module_0.VariablesGenerator()
    str_0 = "# -*- coding: utf-8 -*-\n{}"
    none_type_0 = module_0.warn(str_0)
    none_type_1 = module_0.debug(none_type_0)
    variables_generator_1 = module_0.VariablesGenerator()


def test_case_5():
    none_type_0 = None
    callable_0 = module_0.eager(none_type_0)
    none_type_1 = module_0.warn(callable_0)
    callable_1 = module_0.eager(none_type_0)
    str_0 = "#B*<1nQ[&0:I"
    dict_0 = {str_0: none_type_1}
    variables_generator_0 = module_0.VariablesGenerator()
    callable_1.__call__(none_type_1, callable_1, str_0, module=dict_0, type=none_type_0)
