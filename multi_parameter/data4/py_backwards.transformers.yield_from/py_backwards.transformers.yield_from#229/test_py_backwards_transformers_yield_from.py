# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    arg_0 = module_0.arg()
    yield_from_transformer_0 = module_1.YieldFromTransformer(arg_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    arg_0 = module_0.arg()
    yield_from_transformer_0 = module_1.YieldFromTransformer(arg_0)


def test_case_2():
    return_0 = module_0.Return()
    list_0 = [return_0, return_0, return_0, return_0]
    async_function_def_0 = module_0.AsyncFunctionDef(*list_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(async_function_def_0)
    var_0 = yield_from_transformer_0.visit(async_function_def_0)


def test_case_3():
    return_0 = module_0.Return()
    list_0 = [return_0, return_0, return_0, return_0]
    list_1 = [list_0, list_0, list_0]
    async_function_def_0 = module_0.AsyncFunctionDef(*list_1)
    yield_from_transformer_0 = module_1.YieldFromTransformer(return_0)
    var_0 = yield_from_transformer_0.visit(async_function_def_0)
