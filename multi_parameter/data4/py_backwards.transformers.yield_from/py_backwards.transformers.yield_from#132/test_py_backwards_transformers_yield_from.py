# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    slice_0 = module_0.slice()
    yield_from_transformer_0 = module_1.YieldFromTransformer(slice_0)
    a_s_t_0 = yield_from_transformer_0.visit(slice_0)


def test_case_1():
    boolop_0 = module_0.boolop()
    yield_from_transformer_0 = module_1.YieldFromTransformer(boolop_0)


def test_case_2():
    l_shift_0 = module_0.LShift()
    yield_from_transformer_0 = module_1.YieldFromTransformer(l_shift_0)
    list_0 = [l_shift_0, l_shift_0, l_shift_0]
    async_for_0 = module_0.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)
    list_0 = [
        none_type_0,
        none_type_0,
        none_type_0,
        yield_from_transformer_0,
        none_type_0,
    ]
    dict_0 = {}
    list_1 = [list_0, yield_from_transformer_0, list_0]
    async_for_0 = module_0.AsyncFor(*list_1, **dict_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)
