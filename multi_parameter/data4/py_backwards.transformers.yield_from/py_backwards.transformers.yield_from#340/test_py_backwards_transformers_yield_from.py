# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    type_ignore_0 = module_0.TypeIgnore()
    yield_from_transformer_0 = module_1.YieldFromTransformer(type_ignore_0)
    var_0 = yield_from_transformer_0.visit(type_ignore_0)


def test_case_1():
    joined_str_0 = module_0.JoinedStr()
    yield_from_transformer_0 = module_1.YieldFromTransformer(joined_str_0)


def test_case_2():
    str_0 = "P8u"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    var_0 = module_2.parse(str_0, str_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "P8u"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    break_0 = module_0.Break(**dict_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(break_0)
    list_0 = [str_0, yield_from_transformer_1, yield_from_transformer_1, break_0]
    async_function_def_0 = module_0.AsyncFunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)
    tuple_0 = (break_0, yield_from_transformer_0, a_s_t_0, break_0)
    async_function_def_0.visit(tuple_0)
