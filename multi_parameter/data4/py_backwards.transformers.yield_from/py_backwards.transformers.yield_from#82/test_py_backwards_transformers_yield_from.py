# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    str_0 = "Eg]*F\\N0D=)Y#}r2\x0b"
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    yield_from_transformer_0.visit(str_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    str_0 = "_wnreg"
    var_0 = module_1.parse(str_0, str_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    str_0 = "OVspesC"
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    list_0 = [str_0, str_0, yield_from_transformer_0, yield_from_transformer_0]
    async_function_def_0 = module_2.AsyncFunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_function_def_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(async_function_def_0)
    var_0 = module_1.walk(yield_from_transformer_1)
    yield_from_transformer_2 = module_0.YieldFromTransformer(str_0)
    int_0 = 1085
    var_1 = module_1.iter_fields(int_0)
    module_1.NodeVisitor(**var_0)
