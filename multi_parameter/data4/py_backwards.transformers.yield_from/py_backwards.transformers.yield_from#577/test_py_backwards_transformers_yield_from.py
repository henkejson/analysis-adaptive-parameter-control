# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    mod_0 = module_0.Mod()
    yield_from_transformer_0 = module_1.YieldFromTransformer(mod_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    bytes_0 = b"{\x89\x85w\x9f\x13\x98\x96\xedq"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)


def test_case_2():
    bytes_0 = b"\xe2kE\xd1\xbf8"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    function_def_0 = module_0.FunctionDef(*bytes_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)


def test_case_3():
    bytes_0 = b"SO\xabVi\x81\xbd0`Y\xb2\xa1"
    yield_from_transformer_0 = module_1.YieldFromTransformer(bytes_0)
    list_0 = [
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    list_1 = [yield_from_transformer_0, yield_from_transformer_0, list_0]
    function_def_0 = module_0.FunctionDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)
