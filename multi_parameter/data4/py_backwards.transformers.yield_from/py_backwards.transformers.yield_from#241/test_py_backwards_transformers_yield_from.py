# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    excepthandler_0 = module_1.excepthandler()
    yield_from_transformer_0 = module_0.YieldFromTransformer(excepthandler_0)


def test_case_2():
    module_0 = module_1.Module()
    yield_from_transformer_0 = module_0.YieldFromTransformer(module_0)
    list_0 = [module_0]
    module_1 = module_1.Module(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(module_1)


def test_case_3():
    str_0 = "Tkinter"
    var_0 = module_2.parse(str_0, str_0)
    str_1 = "_py_backwards_merge_dicts"
    dict_0 = {str_1: var_0, str_1: var_0}
    boolop_0 = module_1.boolop(**dict_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(boolop_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(var_0)
    list_0 = [var_0]
    module_0 = module_1.Module(*list_0)
