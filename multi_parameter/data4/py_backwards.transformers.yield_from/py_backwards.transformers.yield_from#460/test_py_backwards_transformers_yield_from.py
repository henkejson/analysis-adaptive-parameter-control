# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(none_type_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    async_for_0 = module_1.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_3():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    list_1 = [none_type_0, none_type_0, list_0, yield_from_transformer_0]
    async_for_0 = module_1.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_0)


def test_case_4():
    str_0 = module_1.Str()
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(str_0)
    a_s_t_0 = yield_from_transformer_0.visit(str_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(none_type_0)
    var_0 = module_1.Assign()
    a_s_t_1 = yield_from_transformer_1.visit(str_0)
    list_0 = [var_0, none_type_0, none_type_0, none_type_0, none_type_0]
    float_0 = -2012.1815
    yield_from_transformer_2 = module_0.YieldFromTransformer(float_0)
    ann_assign_0 = module_1.AnnAssign()
    list_1 = [a_s_t_1, a_s_t_1, list_0, yield_from_transformer_1]
    async_for_0 = module_1.AsyncFor(*list_1)
    import_0 = module_1.Import()
    yield_from_transformer_0.visit(async_for_0)
