# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    excepthandler_0 = module_0.excepthandler()
    yield_from_transformer_0 = module_1.YieldFromTransformer(excepthandler_0)
    a_s_t_0 = yield_from_transformer_0.visit(excepthandler_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(none_type_0)


def test_case_2():
    str_0 = "_e(\t_MfXmW"
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)
    list_0 = [yield_from_transformer_0, yield_from_transformer_0]
    while_0 = module_0.While(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(while_0)


def test_case_3():
    async_with_0 = module_0.AsyncWith()
    yield_from_transformer_0 = module_1.YieldFromTransformer(async_with_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    list_1 = [yield_from_transformer_0, list_0, yield_from_transformer_0]
    if_0 = module_0.If(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(if_0)
