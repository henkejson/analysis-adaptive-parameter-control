# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    expr_0 = module_0.expr()
    yield_from_transformer_0 = module_1.YieldFromTransformer(expr_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    async_with_0 = module_0.AsyncWith()
    yield_from_transformer_0 = module_1.YieldFromTransformer(async_with_0)


def test_case_2():
    expr_0 = module_0.expr()
    yield_from_transformer_0 = module_1.YieldFromTransformer(expr_0)
    list_0 = [
        expr_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    function_def_0 = module_0.FunctionDef(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)


def test_case_3():
    class_def_0 = module_0.ClassDef()
    yield_from_transformer_0 = module_1.YieldFromTransformer(class_def_0)
    list_0 = [yield_from_transformer_0, class_def_0, class_def_0, class_def_0]
    list_1 = [class_def_0, list_0, list_0]
    function_def_0 = module_0.FunctionDef(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(function_def_0)
