# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1


def test_case_0():
    aug_assign_0 = module_0.AugAssign()
    yield_from_transformer_0 = module_1.YieldFromTransformer(aug_assign_0)
    a_s_t_0 = yield_from_transformer_0.visit(aug_assign_0)


def test_case_1():
    str_0 = 'H"zb|'
    yield_from_transformer_0 = module_1.YieldFromTransformer(str_0)


def test_case_2():
    async_for_0 = module_0.AsyncFor()
    yield_from_transformer_0 = module_1.YieldFromTransformer(async_for_0)
    list_0 = [async_for_0, yield_from_transformer_0, yield_from_transformer_0]
    async_for_1 = module_0.AsyncFor(*list_0)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_1)


def test_case_3():
    async_for_0 = module_0.AsyncFor()
    yield_from_transformer_0 = module_1.YieldFromTransformer(async_for_0)
    list_0 = [
        async_for_0,
        async_for_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
        yield_from_transformer_0,
    ]
    list_1 = [list_0, yield_from_transformer_0, list_0, yield_from_transformer_0]
    async_for_1 = module_0.AsyncFor(*list_1)
    a_s_t_0 = yield_from_transformer_0.visit(async_for_1)
