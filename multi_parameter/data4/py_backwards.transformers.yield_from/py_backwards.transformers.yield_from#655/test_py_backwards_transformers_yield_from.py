# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.yield_from as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)
    yield_from_transformer_0.visit(yield_from_transformer_0)


def test_case_1():
    none_type_0 = None
    yield_from_transformer_0 = module_0.YieldFromTransformer(none_type_0)


def test_case_2():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    class_def_0 = module_1.ClassDef(*list_1)
    yield_from_transformer_0 = module_0.YieldFromTransformer(list_0)
    a_s_t_0 = yield_from_transformer_0.visit(class_def_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(list_0)


def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(function_def_0)
    yield_from_transformer_1 = module_0.YieldFromTransformer(list_0)
    yield_from_transformer_2 = module_0.YieldFromTransformer(yield_from_transformer_0)
    var_0 = yield_from_transformer_2.visit(function_def_0)
    aug_load_0 = module_1.AugLoad()


def test_case_4():
    list_0 = []
    bool_op_0 = module_1.BoolOp(*list_0)
    var_0 = module_2.dump(bool_op_0)
    yield_from_transformer_0 = module_0.YieldFromTransformer(var_0)
    var_1 = module_2.parse(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_1)
