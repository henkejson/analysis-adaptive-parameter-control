# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    if_0 = module_0.If()
    yield_from_transformer_0 = module_1.YieldFromTransformer(if_0)
    a_s_t_0 = yield_from_transformer_0.visit(if_0)


def test_case_1():
    dict_0 = {}
    yield_from_transformer_0 = module_1.YieldFromTransformer(dict_0)


def test_case_2():
    str_0 = "\rI4F1kas/THtC"
    var_0 = module_2.parse(str_0)
    yield_from_transformer_0 = module_1.YieldFromTransformer(var_0)
    a_s_t_0 = yield_from_transformer_0.visit(var_0)


def test_case_3():
    if_0 = module_0.If()
    none_type_0 = None
    yield_from_transformer_0 = module_1.YieldFromTransformer(if_0)
    list_0 = [none_type_0, none_type_0]
    str_0 = 'Ap"i=(#{#-^-Sow4z9C'
    str_1 = ""
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    with_0 = module_0.With(*list_0, **dict_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(with_0)
    a_s_t_0 = yield_from_transformer_0.visit(with_0)
