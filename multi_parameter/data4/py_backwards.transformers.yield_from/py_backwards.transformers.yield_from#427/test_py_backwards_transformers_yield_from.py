# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.yield_from as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    floor_div_0 = module_0.FloorDiv()
    yield_from_transformer_0 = module_1.YieldFromTransformer(floor_div_0)
    a_s_t_0 = yield_from_transformer_0.visit(floor_div_0)


def test_case_1():
    floor_div_0 = module_0.FloorDiv()
    yield_from_transformer_0 = module_1.YieldFromTransformer(floor_div_0)


def test_case_2():
    param_0 = module_0.Param()
    yield_from_transformer_0 = module_1.YieldFromTransformer(param_0)
    var_0 = module_2.dump(param_0)
    var_1 = module_2.parse(var_0)
    var_2 = yield_from_transformer_0.visit(var_1)


def test_case_3():
    param_0 = module_0.Param()
    yield_from_transformer_0 = module_1.YieldFromTransformer(param_0)
    yield_from_transformer_1 = module_1.YieldFromTransformer(param_0)
    var_0 = yield_from_transformer_1.generic_visit(param_0)
    var_1 = module_2.dump(param_0)
    var_2 = module_2.parse(var_1)
    var_3 = yield_from_transformer_1.visit(var_2)
    continue_0 = module_0.Continue()
    list_0 = [param_0, var_1, var_2]
    for_0 = module_0.For(*list_0)
    a_s_t_0 = yield_from_transformer_1.visit(for_0)
