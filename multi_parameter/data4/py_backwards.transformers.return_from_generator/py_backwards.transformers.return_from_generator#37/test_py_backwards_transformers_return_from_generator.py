# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        none_type_0
    )


def test_case_1():
    str_0 = "cRKu\tm6U#&g|v"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: list_0}
    function_def_0 = module_1.FunctionDef(*list_0, **dict_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        function_def_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    module_0 = module_1.Module()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        module_0
    )
    return_from_generator_transformer_1 = module_0.ReturnFromGeneratorTransformer(
        return_from_generator_transformer_0
    )
    str_0 = ""
    none_type_0 = None
    return_from_generator_transformer_2 = module_0.ReturnFromGeneratorTransformer(
        none_type_0
    )
    list_0 = [str_0, str_0, str_0, return_from_generator_transformer_0]
    str_1 = "|*sz6Z;'q!:z*"
    dict_0 = {str_0: str_1, str_0: str_0, str_0: str_1, str_1: list_0, str_0: list_0}
    function_def_0 = module_1.FunctionDef(*list_0, **dict_0)
    list_1 = module_1.List()
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
    function_def_2 = return_from_generator_transformer_2.visit_FunctionDef(
        function_def_0
    )
    return_from_generator_transformer_1.visit_FunctionDef(dict_0)


def test_case_3():
    module_0 = module_1.Module()
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        module_0
    )
    str_0 = "sN"
    str_1 = "|*sz6Z;'q!:z*"
    var_0 = module_2.parse(str_0, str_1)
    list_0 = module_1.List()
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    var_1 = module_2.walk(var_0)
    var_1.generic_visit(var_1)
