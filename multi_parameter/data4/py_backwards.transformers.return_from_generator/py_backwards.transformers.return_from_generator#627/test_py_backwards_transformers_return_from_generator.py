# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1
import typed_ast.ast3 as module_2


def test_case_0():
    none_type_0 = None
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        none_type_0
    )


def test_case_1():
    bytes_0 = b"m\xabX\xd7\xbc"
    list_0 = [bytes_0, bytes_0]
    while_0 = module_1.While(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        while_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(while_0)


def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    while_0 = module_1.While(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        while_0
    )
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(while_0)


def test_case_3():
    bytes_0 = b"\x82\xf0"
    list_0 = [bytes_0, bytes_0]
    while_0 = module_1.While(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )
    var_0 = module_2.dump(while_0)
    var_1 = module_2.parse(var_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_1)
