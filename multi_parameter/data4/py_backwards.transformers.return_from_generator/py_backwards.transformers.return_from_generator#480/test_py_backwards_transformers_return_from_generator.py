# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import typed_ast._ast3 as module_0
import py_backwards.transformers.return_from_generator as module_1


def test_case_0():
    none_type_0 = None
    module_0.Assert(*none_type_0)


def test_case_1():
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    dict_0 = {none_type_0: none_type_0}
    list_0 = [return_from_generator_transformer_0, dict_0, dict_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    dict_0 = {}
    list_0 = [return_from_generator_transformer_0, dict_0, dict_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_3():
    none_type_0 = None
    return_from_generator_transformer_0 = module_1.ReturnFromGeneratorTransformer(
        none_type_0
    )
    dict_0 = {
        none_type_0: return_from_generator_transformer_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        return_from_generator_transformer_0: return_from_generator_transformer_0,
    }
    list_0 = [return_from_generator_transformer_0, dict_0, dict_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )
