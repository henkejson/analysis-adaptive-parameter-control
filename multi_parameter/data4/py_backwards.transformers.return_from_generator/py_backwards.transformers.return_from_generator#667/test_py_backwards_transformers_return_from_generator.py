# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2


def test_case_0():
    float_0 = -1901.056
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        float_0
    )


def test_case_1():
    str_0 = "hwifiler"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(str_0)
    var_0 = module_1.parse(str_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)


def test_case_2():
    str_0 = ""
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(str_0)
    var_0 = module_1.parse(str_0)
    var_1 = return_from_generator_transformer_0.visit(var_0)
    function_def_0 = return_from_generator_transformer_0.visit_FunctionDef(var_0)
    var_2 = module_2.UnaryOp()
    var_3 = module_1.iter_fields(var_0)
    var_4 = module_1.copy_location(var_3, var_0)
    index_0 = module_2.Index()
    return_from_generator_transformer_1 = module_0.ReturnFromGeneratorTransformer(var_2)
    var_5 = module_1.increment_lineno(var_0)
    module_1.dump(return_from_generator_transformer_0)
