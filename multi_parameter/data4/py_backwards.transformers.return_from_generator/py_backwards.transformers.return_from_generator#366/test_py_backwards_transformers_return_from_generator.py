# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import py_backwards.transformers.return_from_generator as module_0
import typed_ast._ast3 as module_1


def test_case_0():
    bytes_0 = b"\xd3\x19;P\xf1(\x93J\x99\x97\xe4"
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        bytes_0
    )


def test_case_1():
    bytes_0 = b"\xd3;\x87\xd6\xf1\xb5\x93J\x99\x1e\xe4"
    list_0 = [bytes_0, bytes_0, bytes_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        function_def_0
    )
    function_def_1 = return_from_generator_transformer_0.visit_FunctionDef(
        function_def_0
    )


def test_case_2():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    function_def_0 = module_1.FunctionDef(*list_0)
    return_from_generator_transformer_0 = module_0.ReturnFromGeneratorTransformer(
        list_0
    )
    var_0 = return_from_generator_transformer_0.visit(function_def_0)
