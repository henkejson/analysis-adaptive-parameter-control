# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.find(none_type_0)
    none_type_1 = None
    none_type_2 = None
    immutable_list_1 = module_0.ImmutableList(none_type_2)
    immutable_list_2 = immutable_list_1.unshift(none_type_0)
    immutable_list_1.__add__(none_type_1)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    bytes_0 = b"\xaa\xe4)[M\x1di\xaa\xd4]\xc2H\x0f$\xa9\x15\xb9\x1b\rL"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    var_0 = immutable_list_1.to_list()


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.map(immutable_list_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.filter(immutable_list_1)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_0.filter(var_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_16():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(none_type_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_18():
    bytes_0 = b"\x13e\xfa\xaf\x8f]\x05\x15\xeeAyp"
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_1.to_list()
    float_0 = -948.8
    immutable_list_2 = module_0.ImmutableList(tail=float_0)
    immutable_list_2.map(var_0)


def test_case_19():
    none_type_0 = None
    bytes_0 = b"\xca"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.reduce(none_type_0, bytes_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"\x81\xac\x8e\x81\xa7\xe3\xfd\xdf\x06\xa6\x85"
    tuple_0 = (bytes_0,)
    immutable_list_1 = module_0.ImmutableList(tuple_0)
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_2.reduce(immutable_list_0, immutable_list_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_23():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_0)
    immutable_list_4 = immutable_list_0.unshift(var_0)
    immutable_list_4.find(immutable_list_3)
