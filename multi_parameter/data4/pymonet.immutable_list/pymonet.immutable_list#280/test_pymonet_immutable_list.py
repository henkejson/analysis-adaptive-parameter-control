# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(list_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_1.find(bool_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)


def test_case_3():
    str_0 = "[AiR46>F\t p8KiKJf"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.reduce(str_0, str_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.unshift(var_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(var_0)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(var_0)


def test_case_8():
    str_0 = "Last[value={}]"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(str_0)


def test_case_9():
    complex_0 = -1195.4579 - 754.07917j
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(complex_0)
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    bytes_0 = b"k6#\xe2\xa5\xc8\xceo\xad\x91\xcf\x05b"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bytes_0, none_type_0)
    complex_0 = -2360.1314 + 1050.24j
    bool_0 = True
    bytes_1 = b"\xa2\xf7\xe9%\xca\x179<\x98"
    tuple_0 = (complex_0, complex_0, bool_0, bytes_1)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.append(tuple_0)
    immutable_list_2.filter(immutable_list_0)


def test_case_12():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_0.find(var_0)
    immutable_list_1.find(var_0)


def test_case_13():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_0.reduce(list_0, list_0)
    immutable_list_1.find(list_0)


def test_case_14():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList(tail=bool_0, is_empty=none_type_0)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    var_0 = immutable_list_2.__len__()
    none_type_1 = None
    immutable_list_3 = module_0.ImmutableList(tail=none_type_1)
    immutable_list_4 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_2.reduce(var_0, immutable_list_3)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_1)
    immutable_list_1.find(list_0)


def test_case_17():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_1.find(bool_0)


def test_case_18():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(list_0)


def test_case_19():
    bytes_0 = b""
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0]
    immutable_list_0 = module_0.ImmutableList(tuple_0, bytes_0)
    immutable_list_0.find(list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    none_type_0 = None
    immutable_list_2 = module_0.ImmutableList(none_type_0, immutable_list_1)
    str_0 = var_0.__str__()
    var_1 = immutable_list_2.to_list()
    str_1 = immutable_list_0.__str__()
    var_2 = immutable_list_0.find(none_type_0)
    immutable_list_1.reduce(immutable_list_1, immutable_list_1)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = True
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_2.__eq__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    var_0.find(var_0)


def test_case_22():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(list_0)


def test_case_23():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    int_0 = -1140
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(int_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_2.find(none_type_0)
