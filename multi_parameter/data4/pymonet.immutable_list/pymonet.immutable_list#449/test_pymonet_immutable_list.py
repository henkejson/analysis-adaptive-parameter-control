# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    str_0 = "#GI+\t[Tq>H?X\\**8$E"
    immutable_list_0 = module_0.ImmutableList(str_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(none_type_0)


def test_case_1():
    str_0 = "hyxH3%&pt<n(q}k>V"
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_1 = immutable_list_1.__eq__(str_0)


def test_case_2():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    none_type_0 = None
    int_0 = -2497
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    immutable_list_0.__add__(none_type_0)


def test_case_4():
    bytes_0 = b"\x0b\xd1G\xf37\xd4J\x0c/V\xe0\x99u\x94C>\xc4\xb6\x9bB"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_0.filter(bytes_0)


def test_case_5():
    none_type_0 = None
    bytes_0 = b"\x1d\x15T\xeb1\xab"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_1.__len__()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()


def test_case_7():
    bytes_0 = b")\x8ab\xe7~i"
    str_0 = "\n        Transform Either to Try.\n\n        :returns: Lazy monad with function returning previous value\n        :rtype: Lazy[Function() -> A]\n        "
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(str_0)
    var_0 = immutable_list_1.to_list()
    var_0.reduce(bytes_0, bytes_0)


def test_case_8():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_3 = immutable_list_2.append(none_type_0)
    immutable_list_2.map(bool_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"i\xa6\x80\x95\xf2\x9a\xca3F\x92\xc0\x0e%\x93\x99"
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.map(none_type_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    object_0 = module_1.object()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    var_0 = immutable_list_0.reduce(list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    var_1 = immutable_list_0.__len__()
    var_2 = immutable_list_0.find(var_0)
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    object_0 = module_1.object()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    var_0 = immutable_list_0.reduce(list_0, immutable_list_0)
    generic_0 = module_2.Generic()
    var_1 = immutable_list_0.find(var_0)
    var_0.filter(var_1)


def test_case_15():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0, is_empty=tuple_0)
    none_type_0 = None
    immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_18():
    str_0 = "#GI+\t[Tq>H?X\\+**8$E"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    none_type_0 = None
    immutable_list_2.find(none_type_0)


def test_case_19():
    str_0 = "#GI+\t[Tq>H?X\\**8$E"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_20():
    str_0 = "#GI+\t'[Tq>H?X\\**8$E"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    none_type_0 = None
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(none_type_0)


def test_case_21():
    str_0 = "#GI+\t[Tq>H?X\\+**8$E"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    none_type_0 = None
    immutable_list_2.find(none_type_0)


def test_case_22():
    object_0 = module_1.object()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    var_0 = immutable_list_0.find(list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.reduce(var_0, immutable_list_0)
