# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_1():
    bool_0 = True
    bool_1 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    bool_2 = immutable_list_0.__eq__(bool_0)
    none_type_0 = None
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.to_list()
    var_0.find(none_type_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    none_type_1 = None
    str_0 = "%Ev"
    set_0 = set()
    immutable_list_2 = module_0.ImmutableList(is_empty=set_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_3 = module_0.ImmutableList(immutable_list_2, none_type_1)
    immutable_list_4 = module_0.ImmutableList(tail=immutable_list_3)
    immutable_list_2.__add__(str_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_5():
    bytes_0 = b"\xe3\x0b"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(dict_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    str_0 = immutable_list_0.__str__()


def test_case_7():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(none_type_0)


def test_case_8():
    str_0 = "\n    Immutable list is data structure that doesn't allow to mutate instances\n    "
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.map(str_0)


def test_case_9():
    float_0 = 827.29
    complex_0 = -1584 + 1940.710654j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0)
    immutable_list_0.map(float_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_1.find(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    immutable_list_2.find(immutable_list_2)


def test_case_16():
    int_0 = 3758
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    var_0 = immutable_list_2.__len__()
    immutable_list_2.find(immutable_list_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(bool_0)


def test_case_19():
    bytes_0 = b"\x05e&\xc4Y'E\xbc\xae$\xc0\xb5\x83\xdd1\xa6\xf2t"
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_3 = immutable_list_0.unshift(var_0)
    immutable_list_4 = module_0.ImmutableList(bytes_0)
    var_1 = immutable_list_4.__len__()
    immutable_list_4.reduce(var_1, immutable_list_4)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    var_1 = immutable_list_0.to_list()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(none_type_0)
    var_2 = immutable_list_2.to_list()
    immutable_list_3 = module_0.ImmutableList()
    bool_1 = False
    immutable_list_4 = module_0.ImmutableList(immutable_list_1, is_empty=var_0)
    immutable_list_5 = immutable_list_2.append(bool_1)
    immutable_list_6 = module_0.ImmutableList(
        immutable_list_5, is_empty=immutable_list_5
    )
    immutable_list_7 = immutable_list_5.append(immutable_list_1)
    immutable_list_8 = module_0.ImmutableList(immutable_list_2, is_empty=bool_1)
    immutable_list_9 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_10 = var_2.append(bool_0)
    immutable_list_1.reduce(var_0, var_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(bool_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_3 = immutable_list_0.unshift(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_3)
    immutable_list_4 = immutable_list_0.append(immutable_list_0)
    none_type_0 = None
    immutable_list_3.find(none_type_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_2)
    immutable_list_2.find(immutable_list_2)
