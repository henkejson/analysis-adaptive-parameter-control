# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.__len__()


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList()
    var_0 = immutable_list_1.__len__()
    immutable_list_1.__add__(var_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    immutable_list_0.map(var_0)


def test_case_9():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.filter(immutable_list_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_1 = var_0.append(var_0)
    str_0 = "\n        Return monad value when is successfully.\n        Othercase return default_value argument.\n\n        :params default_value: value to return when monad is not successfully.\n        :type default_value: B\n        :returns: monad value\n        :rtype: A | B\n        "
    immutable_list_2 = module_0.ImmutableList()
    int_0 = 2834
    var_1 = immutable_list_2.reduce(immutable_list_2, int_0)
    immutable_list_3 = immutable_list_2.unshift(var_0)
    var_2 = immutable_list_3.__len__()
    immutable_list_4 = module_0.ImmutableList(str_0)
    immutable_list_5 = immutable_list_4.unshift(immutable_list_2)
    immutable_list_4.reduce(var_2, immutable_list_3)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.append(immutable_list_0)
    var_0.find(var_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.filter(immutable_list_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_23():
    none_type_0 = None
    str_0 = "d/RkF[|u B)Ol\\`"
    int_0 = 225
    immutable_list_0 = module_0.ImmutableList(is_empty=int_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_2 = immutable_list_0.unshift(int_0)
    immutable_list_3 = immutable_list_1.append(none_type_0)
    int_1 = -2070
    bool_0 = immutable_list_1.__eq__(int_1)
    str_1 = "\rd"
    immutable_list_2.reduce(var_0, str_1)


def test_case_24():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    bool_0 = immutable_list_2.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)
