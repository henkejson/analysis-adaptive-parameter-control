# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)


def test_case_1():
    str_0 = "wt8UG-?76!"
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(str_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    none_type_0 = None
    immutable_list_2 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_3 = immutable_list_2.append(immutable_list_2)
    str_0 = immutable_list_2.__str__()
    immutable_list_4 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_5 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_6 = immutable_list_5.append(none_type_0)
    immutable_list_4.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(immutable_list_0)


def test_case_7():
    str_0 = "jghqr{\na-C"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    str_1 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    float_0 = -2836.42
    tuple_0 = (float_0,)
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(tuple_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_0.append(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_2 = immutable_list_1.find(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList(tail=immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = var_0.__len__()


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_3 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)


def test_case_14():
    none_type_0 = None
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_0.find(none_type_0)


def test_case_15():
    str_0 = "jghqr{\na-C"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_1)


def test_case_16():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.map(none_type_0)


def test_case_17():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()
    none_type_0 = None
    str_1 = immutable_list_0.__str__()
    immutable_list_0.reduce(none_type_0, immutable_list_0)


def test_case_18():
    str_0 = 'lA>\r0"\tVt?)M'
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_1)
    none_type_0 = None
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(none_type_0)


def test_case_19():
    str_0 = "jghqr{\na-C"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_1.__len__()
    str_1 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = immutable_list_0.append(none_type_0)
    var_0 = immutable_list_2.find(immutable_list_2)
    var_1 = immutable_list_2.to_list()
    str_1 = immutable_list_2.__str__()
    immutable_list_3 = immutable_list_0.append(var_1)
    var_2 = immutable_list_3.__len__()
    str_2 = "\n        Transform Box into Right either.\n\n        :returns: right Either monad with previous value\n        :rtype: Right[A]\n        "
    immutable_list_1.reduce(immutable_list_2, str_2)


def test_case_21():
    str_0 = "jghqr{\na-C"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    var_0 = immutable_list_0.reduce(str_0, immutable_list_1)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)
