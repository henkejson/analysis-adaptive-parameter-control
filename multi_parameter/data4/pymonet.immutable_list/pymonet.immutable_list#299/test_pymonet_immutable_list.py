# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = module_0.ImmutableList()
    bool_1 = immutable_list_0.__eq__(immutable_list_2)


def test_case_1():
    dict_0 = {}
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(dict_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_3():
    bytes_0 = b"\xf2\xfa&\xdc\xe4r\x1f\xbf{\xf9\xf9\x1a\xfc\x7f\xc7\xe9\x8cW"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(bytes_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    var_0 = immutable_list_0.__len__()
    var_0.reduce(none_type_0, none_type_0)


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    object_0 = module_1.object()
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_0.map(object_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList(list_0, bool_1)
    immutable_list_0.filter(bool_1)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_2 = immutable_list_0.__len__()
    immutable_list_3 = immutable_list_1.__add__(immutable_list_1)
    var_0 = immutable_list_3.find(bool_0)


def test_case_11():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_0.find(bool_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(bool_0, bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1.find(bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_2.reduce(immutable_list_1, bool_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_1.find(var_0)


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_0.find(bool_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_0.find(bool_0)


def test_case_19():
    bytes_0 = b"\xe7\t\x90\xafH\xc9^"
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bytes_0)
    immutable_list_1 = module_0.ImmutableList()
    bool_0 = True
    none_type_1 = None
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_2.unshift(none_type_1)
    immutable_list_4 = module_0.ImmutableList(tail=bool_0)
    immutable_list_5 = immutable_list_3.append(bool_0)
    bool_1 = immutable_list_3.__eq__(immutable_list_3)
    bool_2 = immutable_list_2.__eq__(immutable_list_5)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_21():
    float_0 = 1449.0
    none_type_0 = None
    str_0 = "m8bb>M{Qp'\x0c#hpvW"
    none_type_1 = None
    immutable_list_0 = module_0.ImmutableList(none_type_1)
    immutable_list_1 = immutable_list_0.append(str_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_0 = immutable_list_2.to_list()
    var_1 = var_0.__len__()
    complex_0 = 2566.5 + 1882.56737j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    immutable_list_3 = module_0.ImmutableList(is_empty=list_0)
    immutable_list_4 = immutable_list_3.append(var_1)
    immutable_list_4.map(float_0)


def test_case_22():
    none_type_0 = None
    str_0 = "qG"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.append(str_0)
    var_0 = immutable_list_1.reduce(none_type_0, immutable_list_1)
    immutable_list_3 = immutable_list_1.append(none_type_0)
    immutable_list_0.reduce(immutable_list_1, var_0)


def test_case_23():
    int_0 = -255
    immutable_list_0 = module_0.ImmutableList(int_0, is_empty=int_0)
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.find(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_24():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)
