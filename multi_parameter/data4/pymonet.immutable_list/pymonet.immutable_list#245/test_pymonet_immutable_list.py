# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    str_0 = "B%cp:#\t(]1j"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    str_1 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(str_0)


def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    bool_1 = immutable_list_0.__eq__(none_type_0)
    immutable_list_1 = module_0.ImmutableList(list_0, is_empty=none_type_0)
    immutable_list_1.find(bool_0)


def test_case_2():
    bool_0 = True
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1 = immutable_list_0.append(bool_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    var_0 = immutable_list_1.find(immutable_list_1)
    var_1 = immutable_list_0.to_list()
    var_2 = var_1.__len__()
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(is_empty=none_type_0)
    var_0 = immutable_list_0.__len__()
    str_0 = var_0.__str__()
    immutable_list_1 = module_0.ImmutableList(var_0, is_empty=var_0)
    immutable_list_1.find(var_0)


def test_case_5():
    str_0 = "B%cp:#\t(]1j"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(str_0)


def test_case_6():
    str_0 = "B%cp:#\t(]1j"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_0.find(str_0)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0)
    immutable_list_0.to_list()


def test_case_8():
    object_0 = module_1.object()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    bool_0 = immutable_list_0.__eq__(object_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.map(var_0)


def test_case_9():
    bytes_0 = b"\x08\xcb\x98d\xb4z.X$\x0e\xbf\xfe\x94s"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(dict_0)
    bool_2 = True
    immutable_list_1 = module_0.ImmutableList(is_empty=bool_2)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    bool_3 = immutable_list_2.__eq__(bool_2)
    var_0 = immutable_list_2.to_list()
    immutable_list_2.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_1.to_list()
    str_0 = var_0.__str__()
    var_2 = immutable_list_0.find(var_0)
    var_3 = var_1.__len__()
    immutable_list_1.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    var_0.__len__()


def test_case_13():
    str_0 = "B%cp:#\t(]1j"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    immutable_list_0.find(str_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(none_type_0)
    var_2 = immutable_list_0.find(var_1)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_3 = immutable_list_0.to_list()
    str_1 = var_3.__str__()
    var_4 = var_3.__len__()
    int_0 = 774
    immutable_list_1.reduce(int_0, var_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    str_0 = "B%cp:#\t(]1j"
    immutable_list_0 = module_0.ImmutableList(str_0, is_empty=str_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_0.find(str_0)


def test_case_18():
    bytes_0 = b" r\xb3\xf4\x17\x94\xce\xe0\xafw\x0c\xe5\tc\x9a 1\xfb"
    bytes_1 = b'B\x8a"\xf4\xa4'
    bytes_2 = b"\xc1}h\xb9\x11\xa7\x10"
    complex_0 = -1658.151 + 3117.88j
    tuple_0 = (bytes_1, bytes_2, bytes_1, complex_0)
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(tuple_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = module_0.ImmutableList(bytes_0, bytes_0)
    immutable_list_2.__add__(immutable_list_2)


def test_case_19():
    bytes_0 = b"\x90\xd1\x96`E\xe3d\xa3\xe6"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0, bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList(bytes_0, bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_20():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    immutable_list_0.reduce(bool_0, none_type_0)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(bool_0)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    var_2 = immutable_list_0.reduce(var_1, var_1)
    str_0 = immutable_list_0.__str__()
    bool_1 = immutable_list_0.__len__()
    var_3 = immutable_list_0.to_list()
    var_4 = immutable_list_0.find(var_2)
    var_5 = var_3.__len__()
    immutable_list_0.filter(var_3)
