# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_1.find(immutable_list_1)


def test_case_1():
    bytes_0 = b"\x8f\x94r\\\xf2J\x16[\x7f\xca"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(bytes_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(immutable_list_1)
    immutable_list_2.find(immutable_list_1)


def test_case_3():
    float_0 = -1774.707921
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(float_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    var_0 = immutable_list_0.__len__()


def test_case_5():
    bytes_0 = b"J=`M"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_1.__add__(immutable_list_1)
    immutable_list_2.find(var_0)


def test_case_8():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(tuple_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList()
    var_0 = immutable_list_2.find(immutable_list_2)
    immutable_list_1.filter(var_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(bool_0)
    none_type_0 = None
    immutable_list_0.filter(none_type_0)


def test_case_12():
    bytes_0 = b"J=`M"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    none_type_0 = None
    var_0 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    var_1 = var_0.find(immutable_list_0)
    var_0.filter(var_1)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    bytes_0 = b"\x83\x08\xf4\xc9\xe8\x1f9(\x16\x91<]\n7\xc3@*P\x8c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_15():
    bytes_0 = b"\x83\x08\xf4\xc9\xe8\x1f9(\x16\x91<]\n7\xc3@*P\x8c"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    bool_1 = False
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_1)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_0.find(immutable_list_0)
    var_2 = immutable_list_0.reduce(immutable_list_0, var_1)
    immutable_list_3 = module_0.ImmutableList(immutable_list_1)
    immutable_list_4 = immutable_list_1.append(immutable_list_2)
    immutable_list_5 = module_0.ImmutableList(immutable_list_2, bool_0)
    var_3 = immutable_list_2.__len__()
    immutable_list_3.reduce(var_3, var_3)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_0)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_0.find(immutable_list_0)
    var_2 = immutable_list_0.reduce(immutable_list_0, var_1)
    bool_1 = True
    immutable_list_3 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_4 = module_0.ImmutableList(immutable_list_1)
    immutable_list_5 = module_0.ImmutableList(immutable_list_3, bool_0)
    var_3 = immutable_list_2.__len__()
    var_4 = immutable_list_2.to_list()
    immutable_list_5.reduce(var_1, immutable_list_2)


def test_case_18():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_0.__len__()
    complex_0 = -3152.736622 - 1900.632445j
    immutable_list_1.map(complex_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_0)
    immutable_list_3 = module_0.ImmutableList(immutable_list_1)
    immutable_list_4 = module_0.ImmutableList()
    immutable_list_3.find(immutable_list_4)


def test_case_21():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0, is_empty=bool_0)
    immutable_list_3 = immutable_list_2.unshift(immutable_list_2)
    bool_1 = immutable_list_3.__eq__(immutable_list_0)
    list_0 = [bool_0]
    immutable_list_3.find(list_0)
