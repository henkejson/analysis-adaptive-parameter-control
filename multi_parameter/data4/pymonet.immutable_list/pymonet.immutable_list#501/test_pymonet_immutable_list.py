# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bytes_0 = b"\xd5\x99]\x96"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bytes_0)


def test_case_1():
    dict_0 = {}
    int_0 = 1967
    immutable_list_0 = module_0.ImmutableList(int_0, int_0)
    bool_0 = immutable_list_0.__eq__(int_0)
    immutable_list_0.find(dict_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)


def test_case_3():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    bytes_0 = b"."
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.map(var_0)


def test_case_8():
    float_0 = -305.928
    int_0 = 1114
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    bool_0 = immutable_list_0.__eq__(float_0)
    bool_1 = True
    immutable_list_0.map(bool_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    float_0 = 1331.921
    immutable_list_0 = module_0.ImmutableList(tail=float_0)
    none_type_0 = None
    var_0 = immutable_list_0.find(none_type_0)
    var_1 = immutable_list_0.reduce(none_type_0, immutable_list_0)
    var_1.filter(float_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    dict_0 = {}
    immutable_list_0 = module_0.ImmutableList(dict_0, dict_0)
    immutable_list_0.find(dict_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.reduce(str_0, str_0)
    immutable_list_0.filter(var_0)


def test_case_14():
    str_0 = "Lazy[T, U]"
    immutable_list_0 = module_0.ImmutableList(str_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(str_0, str_0)


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()


def test_case_16():
    dict_0 = {}
    int_0 = 1967
    immutable_list_0 = module_0.ImmutableList(int_0, int_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    immutable_list_0.find(dict_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    dict_0 = {}
    int_0 = 1961
    immutable_list_0 = module_0.ImmutableList(int_0, int_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.find(dict_0)


def test_case_19():
    bytes_0 = b"\x19\xd5\x96\\"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_3 = immutable_list_0.unshift(var_0)
    str_0 = immutable_list_0.__str__()
    str_1 = var_0.__str__()
    immutable_list_4 = module_0.ImmutableList()
    immutable_list_5 = immutable_list_0.append(immutable_list_0)
    immutable_list_6 = immutable_list_1.append(immutable_list_1)
    immutable_list_7 = immutable_list_4.unshift(immutable_list_2)
    var_1 = immutable_list_6.reduce(var_0, immutable_list_1)
    immutable_list_8 = immutable_list_4.unshift(immutable_list_5)
    str_2 = immutable_list_6.__str__()
    var_2 = immutable_list_1.reduce(var_1, immutable_list_6)
    immutable_list_9 = module_0.ImmutableList()
    bool_0 = immutable_list_8.__eq__(immutable_list_1)
    immutable_list_8.reduce(immutable_list_4, var_2)


def test_case_21():
    bytes_0 = b"\x19\xd5\x96\\"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_22():
    str_0 = "Lazy[T, U]"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_1 = immutable_list_0.append(str_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_0.find(var_0)


def test_case_23():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_1.reduce(immutable_list_0, none_type_0)
    var_1 = immutable_list_0.find(none_type_0)
    str_0 = immutable_list_1.to_list()
    str_1 = immutable_list_0.__str__()
    immutable_list_1.filter(str_1)
