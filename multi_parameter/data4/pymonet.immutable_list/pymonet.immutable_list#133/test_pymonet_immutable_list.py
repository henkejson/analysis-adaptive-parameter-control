# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    bytes_0 = b"\x15\xd5\x85\xc5\xfc}"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.__add__(str_0)


def test_case_3():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    str_0 = immutable_list_0.__str__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_6():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_7():
    bytes_0 = b"\xfb\xb0H\x07\xbf\xc2\x05U\xe2$yp\xf5E\x94d4\x8e"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, bytes_0)
    var_1 = var_0.find(var_0)
    str_0 = "\n        :returns: True\n        :rtype: Boolean\n        "
    immutable_list_0.map(str_0)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    tuple_0 = ()
    var_0 = immutable_list_0.find(tuple_0)
    var_1 = immutable_list_0.reduce(var_0, tuple_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_11():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, none_type_0, none_type_0)
    var_0 = immutable_list_0.to_list()
    bool_0 = False
    immutable_list_1 = module_0.ImmutableList(bool_0, bool_0)
    bytes_0 = b"\xe9\x1e\xa9\x83|/>\xde$\x18PA="
    immutable_list_1.reduce(bytes_0, immutable_list_1)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_14():
    float_0 = -1109.33
    immutable_list_0 = module_0.ImmutableList(float_0, is_empty=float_0)
    immutable_list_0.find(immutable_list_0)


def test_case_15():
    float_0 = -1109.33
    immutable_list_0 = module_0.ImmutableList(float_0, is_empty=float_0)
    bool_0 = immutable_list_0.__eq__(float_0)
    immutable_list_0.find(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.find(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_1 = immutable_list_0.reduce(immutable_list_0, var_0)
    str_1 = var_1.__str__()
    var_2 = immutable_list_0.find(str_1)
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_1.filter(var_1)


def test_case_17():
    float_0 = -1109.33
    immutable_list_0 = module_0.ImmutableList(float_0, is_empty=float_0)
    bool_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_18():
    bytes_0 = b""
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    var_1 = immutable_list_0.__len__()
    immutable_list_0.reduce(var_1, str_0)


def test_case_19():
    str_0 = "\n        Return rejected Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: rejected Task\n        :rtype: Task[Function(reject, _) -> A]\n        "
    immutable_list_0 = module_0.ImmutableList(is_empty=str_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_20():
    none_type_0 = None
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_0.find(none_type_0)
