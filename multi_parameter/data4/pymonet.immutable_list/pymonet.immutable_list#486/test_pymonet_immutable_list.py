# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = immutable_list_0.append(bool_1)
    var_0 = immutable_list_0.find(none_type_0)
    immutable_list_2 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_2.filter(bool_0)


def test_case_1():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(none_type_0)
    bytes_0 = b"\x88\x01q\xf2"
    immutable_list_1 = module_0.ImmutableList(is_empty=bytes_0)
    str_0 = immutable_list_1.__str__()
    bool_0 = immutable_list_1.__eq__(bytes_0)
    immutable_list_1.filter(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_3():
    bytes_0 = b".\xe8J\x92\xaeW\x88\x99\xba\x81"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    var_0 = immutable_list_0.to_list()
    bool_0 = True
    str_0 = "F]#I)sO,K<Hy`>s3"
    set_0 = {str_0, str_0}
    bool_1 = True
    immutable_list_1 = module_0.ImmutableList(set_0, is_empty=bool_1)
    immutable_list_1.__add__(bool_0)


def test_case_4():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(var_1)


def test_case_5():
    none_type_0 = None
    float_0 = -88.3124
    immutable_list_0 = module_0.ImmutableList(float_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(none_type_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_1.filter(var_1)


def test_case_8():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.unshift(none_type_0)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_0.to_list()
    immutable_list_0.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    bytes_0 = b"\x04\x1c"
    float_0 = -2173.0
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.append(float_0)
    immutable_list_2.map(bytes_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.unshift(immutable_list_0)
    var_0.find(immutable_list_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    str_0 = immutable_list_0.__str__()
    var_1 = immutable_list_0.reduce(str_0, immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    none_type_0 = None
    float_0 = -88.3124
    immutable_list_0 = module_0.ImmutableList(float_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_16():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    float_0 = -3900.2
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_1)
    immutable_list_1 = immutable_list_0.unshift(float_0)
    immutable_list_2 = immutable_list_1.append(list_0)
    immutable_list_2.find(bool_0)


def test_case_17():
    none_type_0 = None
    float_0 = -88.3124
    immutable_list_0 = module_0.ImmutableList(float_0)
    immutable_list_0.find(none_type_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_1 = immutable_list_0.to_list()
    immutable_list_1 = var_0.__add__(var_0)
    str_0 = var_0.__str__()
    bool_0 = var_0.__eq__(immutable_list_1)
    immutable_list_2 = var_1.__add__(var_1)
    var_2 = immutable_list_0.to_list()
    immutable_list_3 = immutable_list_1.__add__(immutable_list_1)
    str_1 = var_0.__str__()
    immutable_list_2.filter(bool_0)


def test_case_19():
    bytes_0 = b".\xe8J\x92\xaeW\x88\x99\xba\x81"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    str_0 = "F]#I)sO,K<Hy`>s3"
    set_0 = {str_0, str_0}
    bool_0 = True
    immutable_list_1 = module_0.ImmutableList(set_0, is_empty=bool_0)
    immutable_list_1.reduce(bool_0, bool_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(tail=immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_2 = module_0.ImmutableList(tail=immutable_list_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_1)
    immutable_list_4 = immutable_list_1.append(immutable_list_3)
    bool_1 = immutable_list_3.__eq__(immutable_list_4)
    immutable_list_4.__add__(bool_0)


def test_case_21():
    bool_0 = False
    int_0 = -5219
    none_type_0 = None
    none_type_1 = None
    bool_1 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_1, is_empty=bool_1)
    bool_2 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.unshift(int_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.reduce(var_0, none_type_0)
    immutable_list_0.filter(var_1)


def test_case_22():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    bytes_0 = b"\x88\x01q0"
    immutable_list_1 = module_0.ImmutableList(is_empty=bytes_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_2 = module_0.ImmutableList(str_0)
    immutable_list_3 = immutable_list_2.unshift(bytes_0)
    bool_0 = immutable_list_3.__eq__(immutable_list_1)
    var_1 = immutable_list_2.__len__()
    immutable_list_4 = immutable_list_2.__add__(immutable_list_2)
    immutable_list_4.reduce(var_1, immutable_list_2)
