# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_1.find(bool_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    bool_1 = immutable_list_2.__eq__(bool_0)


def test_case_2():
    str_0 = "? )ZznL:f8\x0b%F=~P.}P"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)


def test_case_3():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0]
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(list_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_2.__add__(none_type_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)


def test_case_5():
    int_0 = 1485
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=none_type_0)
    var_0 = immutable_list_0.to_list()
    var_0.reduce(immutable_list_0, var_0)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    immutable_list_1.find(immutable_list_1)


def test_case_8():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_0.__len__()
    immutable_list_1.map(var_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    set_0 = set()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(set_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = module_0.ImmutableList(none_type_0)
    immutable_list_3 = immutable_list_2.append(set_0)
    immutable_list_4 = immutable_list_3.append(set_0)
    var_1 = immutable_list_4.find(immutable_list_2)
    immutable_list_3.filter(var_1)


def test_case_12():
    str_0 = "k"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.find(str_0)


def test_case_13():
    int_0 = 1485
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(immutable_list_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    var_0.filter(immutable_list_0)


def test_case_15():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bytes_0 = b"9y\xc67\x99\x91k\x87r\x94\xb1t\r"
    immutable_list_2 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_2.reduce(var_0, none_type_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    bytes_0 = b"9y\xc67\x99\x91k\x87r\x94\xb1t\r"
    immutable_list_2 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__str__()


def test_case_18():
    bytes_0 = b"\xbcL\xeeIi\xc1\x1c\xf2A\xfe\xf6\x1a\xfb.\xb7E\x18"
    int_0 = -5766
    immutable_list_0 = module_0.ImmutableList(tail=int_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)


def test_case_19():
    float_0 = -2166.6
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.unshift(float_0)
    var_0 = immutable_list_1.__len__()
    str_0 = var_0.__str__()


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2.find(immutable_list_2)


def test_case_21():
    str_0 = "-:ZV3kl}3C{H* 5x"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_1.find(str_0)


def test_case_22():
    generic_0 = module_1.Generic()
    set_0 = {generic_0}
    immutable_list_0 = module_0.ImmutableList(set_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_2 = immutable_list_0.unshift(generic_0)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_4 = immutable_list_3.append(generic_0)
    immutable_list_4.reduce(none_type_0, set_0)
