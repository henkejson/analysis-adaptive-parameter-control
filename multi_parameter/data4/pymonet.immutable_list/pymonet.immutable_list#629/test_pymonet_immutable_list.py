# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    float_0 = -93.885621
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(float_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_3():
    bytes_0 = b"\x8cJ\x0f?\xa3\x1ej7\x85$7\xb9\xd0\x8e\xf2s"
    list_0 = [bytes_0, bytes_0]
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_0.__add__(list_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_5():
    int_0 = 1774
    list_0 = [int_0]
    immutable_list_0 = module_0.ImmutableList(list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    none_type_0 = None
    immutable_list_2 = immutable_list_0.append(none_type_0)
    str_0 = immutable_list_2.__str__()
    immutable_list_1.find(immutable_list_0)


def test_case_8():
    list_0 = []
    immutable_list_0 = module_0.ImmutableList(tail=list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_1.unshift(list_0)
    var_1 = immutable_list_2.__len__()
    immutable_list_2.map(var_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    var_0 = immutable_list_2.find(immutable_list_1)
    immutable_list_3 = immutable_list_1.append(none_type_0)
    immutable_list_4 = immutable_list_2.unshift(immutable_list_3)
    immutable_list_5 = module_0.ImmutableList(
        tail=immutable_list_1, is_empty=immutable_list_1
    )
    var_1 = immutable_list_5.reduce(none_type_0, immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_2)
    immutable_list_2.filter(var_1)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=none_type_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.find(str_0)
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)


def test_case_12():
    generic_0 = module_1.Generic()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(generic_0, none_type_0)
    bytes_0 = b"G"
    immutable_list_0.reduce(none_type_0, bytes_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_15():
    list_0 = []
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(list_0)
    immutable_list_2 = immutable_list_1.append(bool_0)
    immutable_list_2.find(immutable_list_2)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(
        tail=immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    var_0 = immutable_list_2.to_list()
    var_1 = immutable_list_2.__len__()
    immutable_list_2.find(var_1)


def test_case_17():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0)
    immutable_list_1 = module_0.ImmutableList(
        immutable_list_0, is_empty=immutable_list_0
    )
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    bool_0 = immutable_list_0.__eq__(str_0)
    generic_0 = module_1.Generic()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0)
    immutable_list_2 = immutable_list_1.unshift(immutable_list_0)
    immutable_list_0.map(immutable_list_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    str_1 = immutable_list_0.__str__()
    none_type_0 = None
    var_0 = immutable_list_0.reduce(immutable_list_0, none_type_0)
    var_1 = immutable_list_0.reduce(var_0, immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = immutable_list_0.__add__(immutable_list_1)
    immutable_list_3 = immutable_list_0.__add__(var_1)
    immutable_list_4 = immutable_list_2.unshift(immutable_list_0)
    var_2 = immutable_list_1.to_list()
    var_3 = immutable_list_0.reduce(none_type_0, str_1)
    immutable_list_4.reduce(var_1, var_1)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_1.find(immutable_list_0)
