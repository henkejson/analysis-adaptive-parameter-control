# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0


def test_case_0():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_1():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.filter(immutable_list_1)


def test_case_3():
    none_type_0 = None
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(tail=none_type_0, is_empty=bool_0)
    immutable_list_0.__add__(bool_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    var_0 = immutable_list_0.__len__()


def test_case_5():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(var_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    float_0 = -2017.0
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_0.map(float_0)


def test_case_8():
    str_0 = "\n        Take mapper function and returns result of them called with Right value.\n\n        :param mapper: function to apply on Right value\n        :type mapper: Function(A) -> Either[B]\n        :returns: result of mapper\n        :rtype: Either[B]\n        "
    tuple_0 = (str_0,)
    float_0 = 3170.38647
    dict_0 = {tuple_0: float_0, str_0: float_0, str_0: str_0, tuple_0: str_0}
    immutable_list_0 = module_0.ImmutableList(is_empty=dict_0)
    str_1 = immutable_list_0.__str__()
    immutable_list_1 = immutable_list_0.append(dict_0)
    immutable_list_1.map(dict_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_12():
    dict_0 = {}
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(bool_0, bool_0, bool_0)
    immutable_list_1 = immutable_list_0.append(dict_0)
    immutable_list_0.reduce(immutable_list_1, bool_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_2 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(immutable_list_0)


def test_case_16():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_2 = var_0.__add__(immutable_list_1)
    bool_0 = immutable_list_2.__eq__(var_0)


def test_case_17():
    bytes_0 = b"\x9e"
    float_0 = 3994.25837
    dict_0 = {float_0: float_0}
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    list_0 = [dict_0]
    immutable_list_1 = module_0.ImmutableList(list_0)
    immutable_list_1.reduce(bytes_0, dict_0)


def test_case_18():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    none_type_0 = None
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.find(none_type_0)
    var_1 = immutable_list_0.find(immutable_list_0)
    var_2 = immutable_list_2.__len__()
    immutable_list_0.filter(immutable_list_0)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_1)


def test_case_20():
    int_0 = 0
    immutable_list_0 = module_0.ImmutableList(int_0)
    immutable_list_0.find(int_0)
