# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    bool_2 = immutable_list_0.__eq__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_1)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=immutable_list_0)
    immutable_list_1.find(bool_1)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=immutable_list_0)
    immutable_list_1.find(bool_1)


def test_case_2():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_1.find(immutable_list_1)


def test_case_3():
    int_0 = 3314
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.reduce(var_0, var_0)
    immutable_list_0.__add__(int_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bool_0)


def test_case_6():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(var_0)


def test_case_7():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = module_0.ImmutableList(bool_0, is_empty=immutable_list_1)
    immutable_list_2.find(var_0)


def test_case_8():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_2 = immutable_list_1.append(bool_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.map(bool_1)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    var_0 = immutable_list_0.find(bool_0)
    var_1 = immutable_list_1.to_list()
    immutable_list_2 = module_0.ImmutableList(bool_0, is_empty=immutable_list_1)
    immutable_list_1.filter(var_0)


def test_case_11():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.find(bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=var_0)
    immutable_list_1.find(immutable_list_1)


def test_case_12():
    none_type_0 = None
    bytes_0 = b"X{\x0e\x96\xbe\xbd"
    str_0 = "Q=W)|PBu&fgYT"
    tuple_0 = (str_0, str_0)
    immutable_list_0 = module_0.ImmutableList(tuple_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.reduce(none_type_0, none_type_0)


def test_case_13():
    immutable_list_0 = module_0.ImmutableList()


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__str__()
    immutable_list_0.filter(immutable_list_0)


def test_case_15():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(none_type_0)
    immutable_list_0.find(bool_0)


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    immutable_list_2 = immutable_list_1.__add__(immutable_list_0)
    immutable_list_3 = module_0.ImmutableList(is_empty=immutable_list_0)
    immutable_list_4 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    immutable_list_4.find(bool_0)


def test_case_17():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList(is_empty=generic_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    bool_1 = False
    immutable_list_2 = module_0.ImmutableList(immutable_list_1, is_empty=bool_1)
    str_0 = "\n        Transform Either to Try.\n\n        :returns: Lazy monad with function returning previous value\n        :rtype: Lazy[Function() -> A]\n        "
    immutable_list_3 = immutable_list_1.unshift(str_0)
    immutable_list_4 = immutable_list_3.__add__(immutable_list_0)
    var_0 = immutable_list_3.__len__()
    immutable_list_5 = module_0.ImmutableList(bool_0)
    immutable_list_3.find(immutable_list_1)


def test_case_18():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    none_type_0 = None
    immutable_list_1 = immutable_list_0.unshift(none_type_0)
    bool_2 = immutable_list_0.__eq__(immutable_list_1)
    var_0 = immutable_list_0.find(bool_1)
    immutable_list_2 = module_0.ImmutableList(bool_0, is_empty=immutable_list_0)
    immutable_list_2.find(bool_1)


def test_case_19():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = immutable_list_0.append(bool_0)
    immutable_list_1.map(immutable_list_0)


def test_case_20():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    str_0 = immutable_list_0.__len__()
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = module_0.ImmutableList(bool_0, is_empty=bool_0)
    none_type_0 = None
    immutable_list_2 = module_0.ImmutableList(
        none_type_0, none_type_0, immutable_list_0
    )
    bool_2 = immutable_list_1.__eq__(immutable_list_0)
    immutable_list_3 = immutable_list_0.__add__(immutable_list_1)


def test_case_21():
    bool_0 = False
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(bool_0, is_empty=none_type_0)
    immutable_list_0.find(bool_0)


def test_case_22():
    bytes_0 = b"\xa4\xaf`\xd0\xca\xf9\r\xd7o\xd5\x9a\x1f\xbbM\x11\xf1"
    immutable_list_0 = module_0.ImmutableList(is_empty=bytes_0)
    immutable_list_1 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.to_list()
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.reduce(bytes_0, immutable_list_1)
