# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1
import typing as module_2


def test_case_0():
    bytes_0 = b"\x905pZ{\xbc\x07^4\xdb\xe2\xe6\\\x06$\xedA\x8c\xc4"
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    var_1 = immutable_list_0.reduce(bool_0, bool_0)
    var_0.filter(bytes_0)


def test_case_1():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_1.find(var_0)


def test_case_3():
    object_0 = module_1.object()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(object_0)


def test_case_4():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    var_0 = immutable_list_0.__len__()


def test_case_5():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.to_list()
    immutable_list_0.filter(immutable_list_0)


def test_case_6():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_1.find(immutable_list_1)


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    immutable_list_0.map(none_type_0)


def test_case_8():
    bytes_0 = b"\xb5p"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_2 = immutable_list_1.unshift(bytes_0)
    immutable_list_2.map(bytes_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    none_type_0 = None
    bytes_0 = b"@\x9c\xc8C\xaf\xc0\xaaI\x97\x05"
    immutable_list_0 = module_0.ImmutableList(tail=bytes_0)
    immutable_list_0.filter(none_type_0)


def test_case_11():
    set_0 = set()
    immutable_list_0 = module_0.ImmutableList(set_0)
    immutable_list_0.find(immutable_list_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_13():
    str_0 = "}SD"
    immutable_list_0 = module_0.ImmutableList(str_0)
    immutable_list_0.reduce(str_0, str_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    list_0 = []
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0, is_empty=none_type_0)
    immutable_list_1 = immutable_list_0.append(list_0)
    immutable_list_2 = immutable_list_1.append(list_0)
    immutable_list_3 = module_0.ImmutableList(list_0)
    str_0 = immutable_list_3.__str__()
    immutable_list_4 = module_0.ImmutableList(list_0, immutable_list_3)


def test_case_16():
    generic_0 = module_2.Generic()
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList(none_type_0)
    immutable_list_1 = immutable_list_0.unshift(generic_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_0 = immutable_list_1.to_list()
    immutable_list_0.filter(var_0)


def test_case_17():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(immutable_list_0, immutable_list_0)
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.__add__(var_0)
    immutable_list_1.find(immutable_list_0)


def test_case_18():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(immutable_list_1)


def test_case_19():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = module_0.ImmutableList(immutable_list_0, immutable_list_0)
    immutable_list_1.find(none_type_0)


def test_case_20():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.__len__()
    bool_0 = immutable_list_1.__eq__(immutable_list_1)
    bool_1 = var_1.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_0.append(var_1)
    var_2 = immutable_list_2.find(immutable_list_0)
    bool_2 = immutable_list_2.__eq__(immutable_list_0)
    immutable_list_3 = immutable_list_2.__add__(immutable_list_0)
    var_3 = immutable_list_2.reduce(var_1, var_1)
    immutable_list_4 = module_0.ImmutableList(tail=var_1)
    immutable_list_2.filter(immutable_list_2)


def test_case_21():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(none_type_0)
    var_0 = immutable_list_0.to_list()
    var_1 = immutable_list_2.to_list()
    var_2 = var_1.__len__()
    bool_0 = False
    immutable_list_3 = immutable_list_1.unshift(var_2)
    immutable_list_3.reduce(bool_0, bool_0)
