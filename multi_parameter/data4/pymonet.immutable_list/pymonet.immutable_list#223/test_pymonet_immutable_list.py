# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(bytes_0)


def test_case_1():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.to_list()
    bool_0 = immutable_list_0.__eq__(var_0)
    immutable_list_0.find(bytes_0)


def test_case_2():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = module_0.ImmutableList()
    immutable_list_2 = module_0.ImmutableList()
    immutable_list_3 = immutable_list_2.unshift(immutable_list_2)


def test_case_3():
    bytes_0 = b"o\xaf\xd8U\xdbH\x9f\x13\xcd"
    none_type_0 = None
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_1.__add__(none_type_0)


def test_case_4():
    str_0 = "F!,UJ"
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.__len__()
    immutable_list_1 = var_0.__add__(str_0)


def test_case_5():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(bytes_0)


def test_case_6():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.find(bytes_0)


def test_case_7():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    var_0 = immutable_list_1.to_list()
    var_1 = immutable_list_1.__len__()
    immutable_list_0.map(var_0)


def test_case_8():
    object_0 = module_1.object()
    complex_0 = -875.356 + 1220.41364j
    none_type_0 = None
    str_0 = "hO"
    set_0 = {str_0, str_0, str_0}
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(complex_0, str_0, bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=set_0)
    immutable_list_1.map(none_type_0)


def test_case_9():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    immutable_list_0 = module_0.ImmutableList(dict_0, dict_0, bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_1 = module_0.ImmutableList(tail=dict_0, is_empty=bool_0)
    bool_2 = immutable_list_1.__eq__(bool_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.filter(var_0)


def test_case_11():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_12():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.reduce(bool_0, immutable_list_0)
    var_1 = immutable_list_0.to_list()
    var_1.find(var_1)


def test_case_13():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    var_0 = immutable_list_0.to_list()
    immutable_list_0.reduce(var_0, bool_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    str_0 = immutable_list_0.__str__()
    immutable_list_0.find(bytes_0)


def test_case_16():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    immutable_list_1 = immutable_list_0.append(bytes_0)
    immutable_list_0.find(bytes_0)


def test_case_17():
    bytes_0 = b"\xa0\x04\xb7\x91\xd0mB\xd74B\t\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.unshift(bytes_0)
    var_0.find(var_0)


def test_case_18():
    bytes_0 = b'\xca\x87\x00/"\xad\xd4\x0f'
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bytes_0, bytes_0, bool_0)
    tuple_0 = (bytes_0, immutable_list_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=tuple_0)
    immutable_list_2 = immutable_list_0.unshift(bytes_0)
    immutable_list_2.reduce(tuple_0, immutable_list_2)


def test_case_19():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    str_0 = "q"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(str_0)
    immutable_list_2 = immutable_list_1.append(bool_2)
    immutable_list_3 = immutable_list_2.unshift(bool_1)
    immutable_list_3.find(bool_0)


def test_case_20():
    bytes_0 = b"AH\xa0\x04\x91\xd0mB\xd74B\xd4\x8c>\x81"
    immutable_list_0 = module_0.ImmutableList(bytes_0)
    var_0 = immutable_list_0.append(bytes_0)
    immutable_list_1 = module_0.ImmutableList(is_empty=bytes_0)
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_0.find(bytes_0)


def test_case_21():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_1 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=var_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_1)
    none_type_0 = None
    var_1 = module_0.ImmutableList(immutable_list_0, is_empty=none_type_0)
    immutable_list_2.filter(immutable_list_1)
