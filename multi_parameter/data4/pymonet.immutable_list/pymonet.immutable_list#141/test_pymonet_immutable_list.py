# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.immutable_list as module_0
import typing as module_1


def test_case_0():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(immutable_list_0)
    immutable_list_0.find(immutable_list_0)


def test_case_1():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    bool_1 = immutable_list_0.__eq__(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_2():
    bytes_0 = b"\xfb\xbb;\xd3\xe99\x03\xdd-\x96\xe3\xba\x0c\x02Z"
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(bytes_0)
    immutable_list_2 = module_0.ImmutableList()
    bool_0 = immutable_list_2.__eq__(immutable_list_1)


def test_case_3():
    tuple_0 = ()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.__add__(tuple_0)


def test_case_4():
    immutable_list_0 = module_0.ImmutableList()
    none_type_0 = None
    var_0 = immutable_list_0.__len__()
    var_1 = immutable_list_0.find(var_0)
    immutable_list_0.filter(none_type_0)


def test_case_5():
    complex_0 = 104.491 - 307.5j
    immutable_list_0 = module_0.ImmutableList(complex_0)
    var_0 = immutable_list_0.__len__()
    immutable_list_0.find(immutable_list_0)


def test_case_6():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    str_0 = immutable_list_0.__str__()


def test_case_7():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    str_0 = immutable_list_1.__str__()
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_8():
    generic_0 = module_1.Generic()
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.map(generic_0)


def test_case_9():
    float_0 = -2606.057
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_1.map(float_0)


def test_case_10():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_0.filter(immutable_list_0)


def test_case_11():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(immutable_list_0)
    immutable_list_2 = immutable_list_1.append(immutable_list_1)
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_2.filter(var_0)


def test_case_12():
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.find(immutable_list_0)
    immutable_list_0.filter(var_0)


def test_case_13():
    none_type_0 = None
    immutable_list_0 = module_0.ImmutableList()
    var_0 = immutable_list_0.reduce(none_type_0, none_type_0)


def test_case_14():
    immutable_list_0 = module_0.ImmutableList()


def test_case_15():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    var_0 = immutable_list_1.__len__()
    immutable_list_1.find(var_0)


def test_case_16():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(bool_0)
    immutable_list_0.find(immutable_list_0)


def test_case_17():
    bool_0 = False
    immutable_list_0 = module_0.ImmutableList(is_empty=bool_0)
    immutable_list_1 = immutable_list_0.unshift(bool_0)
    immutable_list_2 = immutable_list_0.__add__(immutable_list_0)
    immutable_list_1.reduce(bool_0, immutable_list_1)


def test_case_18():
    complex_0 = 104.5 - 307.5j
    immutable_list_0 = module_0.ImmutableList(tail=complex_0)
    immutable_list_1 = module_0.ImmutableList()
    bool_0 = immutable_list_0.__eq__(immutable_list_1)
    immutable_list_2 = immutable_list_1.unshift(bool_0)
    var_0 = immutable_list_2.__len__()
    var_1 = immutable_list_1.__len__()
    immutable_list_2.find(var_1)


def test_case_19():
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.unshift(immutable_list_0)
    immutable_list_1.find(immutable_list_0)


def test_case_20():
    bool_0 = True
    immutable_list_0 = module_0.ImmutableList()
    immutable_list_1 = immutable_list_0.append(bool_0)
    immutable_list_2 = module_0.ImmutableList(is_empty=bool_0)
    bool_1 = immutable_list_2.__eq__(bool_0)
    immutable_list_3 = module_0.ImmutableList(bool_1, is_empty=immutable_list_2)
    var_0 = immutable_list_3.to_list()
    immutable_list_3.reduce(var_0, var_0)
