# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "8\x0cbZszCeh\n-"
    int_0 = 408
    dict_0 = {str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "Nh~2S,\x0b_$.n.="
    var_0 = module_0.is_entity_header(str_0)
    bool_0 = module_0.is_atty()


def test_case_4():
    str_0 = "8\x0cbZszCeh\n-"
    int_0 = 408
    dict_0 = {str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_5():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_1 = module_0.is_hop_by_hop_header(str_0)
    default_0 = module_0.Default(*var_0)
    var_2 = module_0.has_message_body(var_1)
    str_2 = var_1.__str__()
    var_3 = default_0.__repr__()


def test_case_6():
    bytes_0 = b""
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    default_0 = module_0.Default()
    var_1 = module_0.has_message_body(var_0)
    str_0 = default_0.__str__()
    module_0.import_string(var_0)


def test_case_7():
    str_0 = "8\x0cbZszCeh\n-"
    int_0 = 408
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {str_0: int_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    var_2 = module_0.has_message_body(var_0)
    module_0.remove_entity_headers(var_0, var_0)


def test_case_8():
    str_0 = "8\x0cbZszCeh\n-"
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    dict_0 = {str_0: int_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    list_0 = []
    default_0 = module_0.Default(*list_0)
    var_2 = module_0.remove_entity_headers(dict_0)
    str_1 = var_1.__str__()
    str_2 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_9():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0, str_0)
    object_0 = module_1.object()
    int_0 = -1235
    module_0.remove_entity_headers(int_0)


def test_case_10():
    str_0 = "expires"
    int_0 = 301
    dict_0 = {str_0: int_0}
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    module_0.Default(**var_0)


def test_case_11():
    str_0 = "expires"
    int_0 = 301
    str_1 = str_0.__str__()
    dict_0 = {str_0: int_0}
    var_0 = module_0.remove_entity_headers(dict_0, str_0)
    var_1 = module_0.has_message_body(int_0)
    dict_1 = {}
    str_2 = dict_1.__str__()
    var_2 = module_0.remove_entity_headers(dict_0)
    str_3 = var_2.__str__()
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default(**dict_1)
