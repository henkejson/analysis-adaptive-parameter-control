# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    module_0.remove_entity_headers(dict_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    bool_0 = module_0.is_atty()
    set_0 = set()
    module_0.is_entity_header(set_0)


def test_case_5():
    bytes_0 = b"LW\xf0H\r\x8f\x01\x16\x16qm\xcc\xc6#\xdav\xbe"
    var_0 = module_0.is_entity_header(bytes_0)
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    module_1.object(**var_1)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    var_2 = module_0.has_message_body(var_0)
    str_0 = bool_1.__str__()


def test_case_7():
    default_0 = module_0.Default()
    int_0 = 205
    bool_0 = module_0.is_atty()
    str_0 = default_0.__str__()
    var_0 = module_0.has_message_body(int_0)
    var_1 = default_0.__repr__()


def test_case_8():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    float_0 = 151.0
    var_0 = module_0.has_message_body(float_0)


def test_case_9():
    int_0 = -745
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"HiB+C\x93\x10\xe5l\xdby\xe2\xc44\x98\x81"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    bytes_0 = b"HiB+C\x93\x10\xe5l\xdby\xe2\xc44\x98\x81"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    bytes_0 = b"\xe5\xce\xf2-\x8e\r\xa2eH\xf3\xcd\x1a\x0b 4\x0e\xc8^"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    dict_1 = {}
    var_1 = module_0.remove_entity_headers(dict_1)
    default_0 = module_0.Default()
    int_0 = 304
    var_2 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    var_3 = module_0.has_message_body(var_2)
    bool_1 = module_0.is_atty()
    str_0 = var_1.__str__()
    var_4 = module_0.has_message_body(var_3)
    str_1 = var_2.__str__()
    str_2 = var_4.__str__()
    var_5 = module_0.has_message_body(var_3)
    var_6 = var_1.__repr__()
    module_0.import_string(var_6, var_6)
