# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    list_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bytes_0 = b":u7\xa9\x1e{\xcc\xb7b\x045<1M\xad\x01"
    module_0.remove_entity_headers(bytes_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    str_0 = " K|Ez~+ Ccw"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_5():
    bool_0 = True
    module_0.is_hop_by_hop_header(bool_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    str_0 = default_0.__str__()
    var_2 = module_0.has_message_body(var_0)
    tuple_0 = ()
    module_0.import_string(tuple_0)


def test_case_7():
    int_0 = 2487
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    list_0 = [int_0]
    list_1 = [list_0, list_0, list_0, int_0]
    module_0.is_entity_header(list_1)


def test_case_8():
    bytes_0 = b'\xd7\xd1\xad\xae\x13b"'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = module_0.is_atty()
    var_0 = module_0.is_entity_header(bytes_0)
    var_1 = module_0.remove_entity_headers(dict_0)
    str_0 = var_0.__str__()
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_2)
