# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bytes_0 = b"[\xf5\xa3\xf8\xa0\x8b\x82\xe5\x88N\xdb\x9d\xb5!\xe9q$,\r-"
    module_0.has_message_body(bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    none_type_0 = None
    str_1 = "<![jCLz"
    dict_0 = {str_1: none_type_0, str_1: str_1, str_1: none_type_0}
    module_0.Default(**dict_0)


def test_case_7():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_8():
    int_0 = 333
    var_0 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_0)


def test_case_9():
    none_type_0 = None
    str_0 = "<2[jLb"
    dict_0 = {str_0: none_type_0, str_0: str_0, str_0: none_type_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(str_0)
    var_3 = module_0.is_entity_header(var_1)
    var_4 = int_0.__repr__()
    var_5 = var_1.__repr__()
    str_1 = var_1.__str__()
    bool_0 = module_0.is_atty()
    var_6 = var_0.__repr__()
    module_0.import_string(var_1, int_0)
