# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 500
    str_0 = "3>#"
    tuple_0 = (int_0, str_0)
    set_0 = {tuple_0}
    module_0.has_message_body(set_0)


def test_case_1():
    bytes_0 = b"\xbe\xfa\x18I!(\xd0\r/X"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()


def test_case_4():
    bytes_0 = b""
    var_0 = module_0.is_entity_header(bytes_0)


def test_case_5():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = var_0.__repr__()
    str_0 = var_1.__str__()
    var_2 = var_0.__repr__()
    str_1 = "Run Sanic server using HTTP/1.1"
    var_3 = module_0.is_entity_header(str_1)


def test_case_7():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    list_0 = []
    default_0 = module_0.Default(*list_0)
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_2 = default_0.__repr__()
    var_3 = var_2.__repr__()
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_8():
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    var_0 = default_0.__repr__()
    str_0 = "h3eg{d}0uCJd\x0b\x0bc"
    str_1 = "7\n<7wH^^q"
    var_1 = module_0.is_hop_by_hop_header(str_1)
    var_2 = module_0.has_message_body(var_1)
    dict_1 = {str_0: str_0, str_1: str_1}
    var_3 = var_2.__repr__()
    module_0.import_string(dict_1)


def test_case_9():
    int_0 = 207
    var_0 = int_0.__repr__()
    var_1 = module_0.is_hop_by_hop_header(var_0)
    bytes_0 = b"\xbe\xfa\x18I!(\xd0\r/X"
    bool_0 = module_0.has_message_body(int_0)
    var_2 = int_0.__repr__()
    dict_0 = {var_2: bytes_0, bytes_0: var_2, bytes_0: bool_0}
    var_3 = module_0.remove_entity_headers(dict_0)


def test_case_10():
    bool_0 = module_0.is_atty()
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"\xbe\xfa\x18\x9a!(\xd0\r/X"
    var_1 = module_0.is_entity_header(bytes_0)
    str_0 = var_1.__str__()
    bool_1 = module_0.is_atty()
    var_2 = var_0.__repr__()
    var_3 = var_1.__repr__()
    dict_0 = {var_3: var_2, var_1: str_0, bytes_0: bool_1}
    module_0.remove_entity_headers(dict_0)
