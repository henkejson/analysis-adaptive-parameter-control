# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"\x0f8\x08TKG\x1c\x8fi\x8a\xdd\x8a\xcb\x1e\xa4\x7f\x97r\x8f\xa7"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()
    module_0.is_entity_header(default_0)


def test_case_4():
    int_0 = 2538
    bool_0 = module_0.is_atty()
    set_0 = {int_0}
    tuple_0 = (set_0,)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_5():
    float_0 = 851.588534
    default_0 = module_0.Default()
    module_0.remove_entity_headers(float_0, float_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = default_0.__repr__()
    default_1 = module_0.Default()


def test_case_7():
    int_0 = 1339
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = var_1.__str__()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_1 = default_1.__str__()
    default_2 = module_0.Default()
    str_2 = default_1.__str__()


def test_case_8():
    int_0 = 1339
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(int_0)
    str_0 = var_1.__str__()
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    default_2 = module_0.Default()


def test_case_9():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    none_type_0 = None
    module_0.remove_entity_headers(none_type_0, none_type_0)


def test_case_10():
    bytes_0 = b"\x0f8\x08TKG\x1c\x8fi\x8a\xdd\x8a\xcb\x1e\xa4\x7f\x97r\x8f\xa7"
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    dict_0 = {bytes_0: bytes_0}
    bool_0 = module_0.is_atty()
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_1.ismodule(dict_0)
    module_0.is_hop_by_hop_header(bool_0)
