# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    str_0 = "--a#ces-logsW6"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    int_0 = 1767
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_6():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_hop_by_hop_header(bool_0)


def test_case_7():
    float_0 = 304.5
    var_0 = module_0.has_message_body(float_0)
    str_0 = "--a#cess-logs"
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    dict_0 = {str_0: str_0}
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_3 = var_0.__str__()
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = module_0.has_message_body(var_0)
    var_3 = default_0.__repr__()
    str_4 = default_0.__str__()
    module_0.is_hop_by_hop_header(var_2)


def test_case_8():
    float_0 = 305.09744491058075
    var_0 = module_0.has_message_body(float_0)
    var_1 = var_0.__repr__()
    default_0 = module_0.Default()
    bool_0 = module_0.is_atty()
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(var_0)
    str_0 = float_0.__str__()
    var_4 = default_0.__repr__()
    module_0.remove_entity_headers(float_0)


def test_case_9():
    float_0 = 304.0
    var_0 = module_0.has_message_body(float_0)
    default_0 = module_0.Default()
    str_0 = "--a#cess-logs"
    str_1 = var_0.__str__()
    dict_0 = {str_0: str_0}
    default_1 = module_0.Default()
    bool_0 = module_0.is_atty()
    str_2 = default_0.__str__()
    var_1 = module_0.has_message_body(var_0)
    module_0.import_string(dict_0)
