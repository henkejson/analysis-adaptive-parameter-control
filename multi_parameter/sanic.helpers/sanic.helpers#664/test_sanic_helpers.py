# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 301
    var_0 = module_0.has_message_body(int_0)
    var_1 = int_0.__repr__()


def test_case_1():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    module_0.remove_entity_headers(set_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"}\xba\xb2};]\xa3|z\xdfMd\xd4A\xf2\x1a\xe9F\xfe\xba"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    default_0 = module_0.Default()
    module_0.is_hop_by_hop_header(default_0)


def test_case_5():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_0.has_message_body(bool_1)


def test_case_7():
    bytes_0 = b"\x92\x7fM\xc5\xceG"
    dict_0 = {
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
        bytes_0: bytes_0,
    }
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.remove_entity_headers(var_0)
    var_3 = module_0.is_hop_by_hop_header(bytes_0)
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    float_0 = 304.0
    var_4 = module_0.has_message_body(float_0)
    var_5 = module_1.ismodule(var_3)
    var_6 = module_0.is_entity_header(var_1)
    str_0 = var_0.__str__()
    var_7 = var_6.__repr__()
    var_8 = module_0.remove_entity_headers(dict_0)
    default_0 = module_0.Default()
    module_0.is_entity_header(dict_0)


def test_case_8():
    str_0 = "sanic.server"
    var_0 = module_0.import_string(str_0)
    module_0.is_hop_by_hop_header(var_0)
