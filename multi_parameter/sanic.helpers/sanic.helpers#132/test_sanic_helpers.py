# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bytes_0 = b"Unprocessable Entity"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    set_0 = set()
    module_0.is_hop_by_hop_header(set_0)


def test_case_5():
    tuple_0 = ()
    var_0 = module_1.ismodule(tuple_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.Default()
    default_0 = module_0.Default()
    module_0.import_string(var_1, var_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    float_0 = 304.0660829958052
    var_0 = module_0.has_message_body(float_0)
    bool_1 = module_0.is_atty()
    default_0 = module_0.Default()
    bytes_0 = b"Error Occurred"
    var_1 = module_0.is_hop_by_hop_header(bytes_0)
    var_2 = default_0.__repr__()
    var_3 = var_2.__repr__()


def test_case_7():
    bytes_0 = b"s\xb4\xc8,2*\xa5\x85\x84\x05\x8c\xfa\xdf\x9a\xf5\x02n\x95s"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = bytes_0.__repr__()
    tuple_0 = ()
    var_2 = module_1.ismodule(tuple_0)
    var_3 = var_2.__repr__()
    str_0 = var_2.__str__()
    var_4 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    var_5 = var_0.__repr__()
    str_1 = var_0.__str__()
    var_6 = module_0.has_message_body(bool_0)
    str_2 = "G$4IahV\x0cW*\x0b#S&6aHf"
    var_7 = var_0.__repr__()
    var_8 = var_1.__repr__()
    var_9 = module_0.is_entity_header(str_2)
    default_0 = module_0.Default()
    str_3 = default_0.__str__()
    str_4 = default_0.__str__()
    bool_1 = module_0.is_atty()
    var_10 = var_4.__repr__()
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    float_0 = 390.1959799929875
    var_0 = module_0.has_message_body(float_0)
    module_0.is_entity_header(float_0)


def test_case_9():
    bytes_0 = b"s\xb4,2*\xa5\x85\x84\x05\x8c\xfa\xdf\x9a\xf5\x02n\x95s"
    var_0 = module_1.ismodule(bytes_0)
    var_1 = var_0.__repr__()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = module_0.remove_entity_headers(var_2)
    var_4 = module_1.ismodule(var_2)
    var_5 = var_3.__repr__()
    var_6 = bytes_0.__repr__()
    var_7 = module_1.ismodule(var_2)
    var_8 = module_0.has_message_body(var_7)
    bool_0 = module_0.is_atty()
    var_9 = var_3.__repr__()
    var_10 = module_0.remove_entity_headers(dict_0)
    str_0 = var_9.__str__()
    var_11 = var_6.__repr__()
    str_1 = var_1.__str__()
    float_0 = 304.0
    var_12 = module_0.has_message_body(float_0)
    module_0.is_hop_by_hop_header(var_12)
