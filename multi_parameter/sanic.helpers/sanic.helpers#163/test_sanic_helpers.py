# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = 100
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    str_0 = "E+_,i\r~/;&Ro"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = "content-type"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_5():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)
    int_0 = 100
    var_1 = module_0.has_message_body(int_0)


def test_case_6():
    float_0 = 304.0
    str_0 = float_0.__str__()
    var_0 = module_0.has_message_body(float_0)
    str_1 = "|+_,i\r~o\r&Ro"
    var_1 = float_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = var_1.__repr__()
    bool_1 = module_0.is_atty()
    var_3 = var_0.__repr__()
    var_4 = module_0.is_entity_header(str_1)
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    var_5 = module_0.remove_entity_headers(dict_0)
    bool_2 = module_0.is_atty()
    var_6 = var_0.__repr__()
    bytes_0 = b"I0O\xd1\xb7\x8e\xfd<\x03^\xf8\xe8\xd4\x97\xe8\x0f\xe0\x1d\xc1"
    var_7 = module_0.is_entity_header(bytes_0)
    var_8 = var_1.__repr__()
    var_9 = module_0.remove_entity_headers(dict_0, var_8)
    module_0.Default(*var_3)


def test_case_7():
    str_0 = "content-type"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    float_0 = 303.6
    var_0 = module_0.has_message_body(float_0)
    str_0 = "content-type"
    var_1 = float_0.__repr__()
    bool_0 = module_0.is_atty()
    var_2 = var_1.__repr__()
    bool_1 = module_0.is_atty()
    var_3 = var_0.__repr__()
    var_4 = module_0.is_entity_header(str_0)
    dict_0 = {str_0: str_0, var_2: var_0, str_0: str_0, str_0: str_0}
    var_5 = module_0.remove_entity_headers(dict_0)
    bool_2 = module_0.is_atty()
    var_6 = module_0.remove_entity_headers(dict_0, dict_0)
    var_7 = var_3.__repr__()
    module_0.is_hop_by_hop_header(var_5)
