# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    bytes_0 = b"%x\r\n%b\r\n"
    module_0.has_message_body(bytes_0)


def test_case_1():
    none_type_0 = None
    bytes_0 = b"\xf9\xa5QG\xdf\xc6\x16\xe5"
    module_0.remove_entity_headers(none_type_0, bytes_0)


def test_case_2():
    bytes_0 = b"\xb9n0\xe6?\xbb\x0e\xd7\x98\xeb\x7f\x06"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    dict_0 = {}
    module_0.is_entity_header(dict_0)


def test_case_6():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_7():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_8():
    float_0 = 3103.2831009568713
    var_0 = module_0.has_message_body(float_0)
    module_0.is_entity_header(float_0)


def test_case_9():
    bool_0 = False
    str_0 = bool_0.__str__()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    str_1 = var_0.__str__()


def test_case_10():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = bool_0.__repr__()
    var_2 = var_0.__repr__()
    dict_0 = {str_0: bool_0}
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    str_1 = default_0.__str__()
    var_3 = module_0.remove_entity_headers(dict_0)
    object_0 = module_1.object()
    var_4 = module_0.is_entity_header(var_2)
    var_5 = default_1.__repr__()
    str_2 = var_1.__str__()
    str_3 = default_0.__str__()
    float_0 = 204.0
    var_6 = module_0.has_message_body(float_0)
    bool_1 = module_0.is_atty()
    var_7 = module_2.ismodule(var_0)
    str_4 = default_0.__str__()
    bool_2 = True
    tuple_0 = (var_5, bool_0, bool_2, var_7)
    module_0.is_hop_by_hop_header(tuple_0)
