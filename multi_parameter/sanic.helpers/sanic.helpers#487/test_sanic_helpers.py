# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "oI{"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    module_0.Default(*default_0)


def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_hop_by_hop_header(dict_0)


def test_case_7():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)


def test_case_8():
    str_0 = "o=I{"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    bool_1 = False
    var_1 = module_0.has_message_body(bool_1)
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    module_0.has_message_body(var_0)
