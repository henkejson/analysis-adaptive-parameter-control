# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    str_0 = "7uhYDctx|P@+E}~G"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(dict_0)


def test_case_1():
    str_0 = "7uhYDctx|P@+E}~G"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"\xb4H\xdf2q\x85v\xc6\xcd\xd4\xee\x1a"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bytes_0 = b"Request Header Fields Too Large"
    module_0.has_message_body(bytes_0)


def test_case_5():
    dict_0 = {}
    str_0 = dict_0.__str__()
    default_0 = module_0.Default()
    int_0 = 214
    str_1 = default_0.__str__()
    var_0 = module_0.has_message_body(int_0)
    str_2 = int_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = module_1.ismodule(var_0)
    module_2.object(*var_1)


def test_case_6():
    str_0 = "7uhYDctx|P@+E}~G"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = module_1.ismodule(dict_0)
    var_2 = var_0.__repr__()
    int_0 = 141
    var_3 = module_0.has_message_body(int_0)
    str_1 = dict_0.__str__()
    var_4 = var_0.__repr__()
    var_5 = var_0.__repr__()


def test_case_7():
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_8():
    str_0 = "7uhYDct|5@+E}~G"
    dict_0 = {}
    default_0 = module_0.Default(**dict_0)
    dict_1 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0, dict_0)
    var_1 = module_0.remove_entity_headers(dict_1)
    default_1 = module_0.Default()
    var_2 = module_1.ismodule(dict_1)
    var_3 = var_1.__repr__()
    int_0 = 204
    bool_0 = module_0.is_atty()
    var_4 = var_2.__repr__()
    var_5 = module_0.has_message_body(int_0)
    str_1 = var_3.__str__()
    var_6 = var_1.__repr__()
    var_7 = var_6.__repr__()
    bool_1 = module_0.is_atty()
    var_8 = var_7.__repr__()
    module_0.is_hop_by_hop_header(var_1)
