# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = module_0.is_atty()
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_1():
    bool_0 = False
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.is_entity_header(tuple_0)


def test_case_4():
    default_0 = module_0.Default()
    list_0 = [default_0, default_0, default_0]
    module_0.is_hop_by_hop_header(list_0)


def test_case_5():
    int_0 = 265
    var_0 = module_0.has_message_body(int_0)
    bool_0 = True
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_1.__repr__()
    str_0 = bool_0.__str__()
    default_0 = module_0.Default()
    var_3 = default_0.__repr__()
    module_0.remove_entity_headers(var_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    int_0 = 229
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    str_0 = var_1.__str__()
    default_0 = module_0.Default()
    bool_1 = module_0.is_atty()
    str_1 = default_0.__str__()
    var_2 = default_0.__repr__()
    dict_0 = {var_2: str_0, var_0: var_2, var_0: str_0}
    module_0.remove_entity_headers(dict_0)


def test_case_7():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_8():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: var_0, var_0: var_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_9():
    int_0 = 256
    var_0 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_0)


def test_case_10():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    var_1 = module_0.has_message_body(var_0)
    var_2 = var_1.__repr__()
    str_0 = var_0.__str__()
    var_3 = module_0.is_hop_by_hop_header(var_2)
    bool_0 = module_0.is_atty()
    str_1 = var_1.__str__()
    var_4 = var_3.__repr__()
    module_0.is_hop_by_hop_header(var_3)
