# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"\xef\x15,=\x074}\x00g\x05\xb4%?(\xdf\xe0^s\xaa"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    int_0 = 331
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"\xef\x15,=\x074}\x00g\x05\xb4%?(\xdf\xe0^s\xaa"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.has_message_body(int_0)
    var_4 = module_0.has_message_body(var_3)
    var_5 = var_4.__repr__()
    default_0 = module_0.Default()
    var_6 = default_0.__repr__()
    str_0 = var_1.__str__()
    module_0.is_hop_by_hop_header(int_0)


def test_case_6():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"\xef\x15,=\x074}\x00g\x05\xb4%?(\xdf\xe0^s\xaa"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    var_2 = var_1.__repr__()
    bool_0 = module_0.is_atty()
    var_3 = module_0.has_message_body(var_0)
    var_4 = var_0.__repr__()
    var_5 = module_0.has_message_body(var_0)
    var_6 = module_1.ismodule(var_0)
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.is_hop_by_hop_header(var_6)


def test_case_7():
    float_0 = -29.1
    tuple_0 = (float_0,)
    var_0 = module_0.has_message_body(float_0)
    var_1 = module_1.ismodule(tuple_0)
    str_0 = var_1.__str__()


def test_case_8():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
    bytes_0 = b"\xef\x15,=\x074}\x00g\x93\x05\xb4%?(\xdf\xe0^s\xaa"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_1 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    var_2 = module_0.has_message_body(var_0)
    bool_1 = module_0.is_atty()
    var_3 = var_0.__repr__()
    var_4 = var_2.__repr__()
    bool_2 = module_0.is_atty()
    var_5 = module_0.is_hop_by_hop_header(bytes_0)
    str_0 = var_1.__str__()
    default_0 = module_0.Default()
    var_6 = module_0.is_hop_by_hop_header(var_3)
