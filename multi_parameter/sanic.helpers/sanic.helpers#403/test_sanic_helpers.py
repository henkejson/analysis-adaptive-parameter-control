# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    default_0 = module_0.Default()


def test_case_1():
    bool_0 = module_0.is_atty()
    str_0 = bool_0.__str__()
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"(u\x86k\x12\x19Y{\xb1\tAU\x89\xf4\xf8Y\xfc"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)


def test_case_4():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()


def test_case_5():
    int_0 = 250
    var_0 = module_0.has_message_body(int_0)
    bool_0 = module_0.is_atty()
    module_0.Default(**var_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = module_0.has_message_body(var_0)
    dict_0 = {str_0: var_1}
    var_2 = module_0.remove_entity_headers(dict_0)
    var_3 = var_1.__repr__()
    var_4 = var_3.__repr__()
    object_0 = module_1.object()
    int_0 = 204
    var_5 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(bool_0, bool_0)
