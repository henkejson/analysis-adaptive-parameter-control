# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = False
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "f~E+&\\>ky"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = False
    module_0.is_entity_header(bool_0)


def test_case_4():
    int_0 = 325
    module_0.is_hop_by_hop_header(int_0)


def test_case_5():
    default_0 = module_0.Default()
    default_1 = module_0.Default()
    var_0 = default_1.__repr__()
    module_0.import_string(default_1)


def test_case_6():
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    float_0 = 234.659
    var_0 = module_0.has_message_body(float_0)


def test_case_7():
    int_0 = 2319
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    module_0.remove_entity_headers(var_1)


def test_case_8():
    str_0 = "c.!o^V"
    bool_0 = module_0.is_atty()
    var_0 = module_0.is_hop_by_hop_header(str_0)
    var_1 = str_0.__repr__()
    str_1 = var_0.__str__()
    default_0 = module_0.Default()
    str_2 = default_0.__str__()
    str_3 = "\x0c"
    dict_0 = {str_0: str_0, str_3: str_0, str_3: str_0}
    str_4 = default_0.__str__()
    str_5 = str_0.__str__()
    str_6 = var_0.__str__()
    var_2 = module_0.remove_entity_headers(dict_0)
    default_1 = module_0.Default()
    var_3 = default_1.__repr__()
    var_4 = module_1.ismodule(var_3)
    str_7 = var_4.__str__()
    var_5 = module_0.is_entity_header(str_4)
    str_8 = module_1.ismodule(var_3)
    var_6 = module_0.has_message_body(var_5)
    var_7 = module_0.is_hop_by_hop_header(str_5)
    var_8 = var_7.__repr__()
    float_0 = 204.0
    var_9 = module_0.has_message_body(float_0)
    module_0.is_entity_header(dict_0)


def test_case_9():
    str_0 = "content-md5"
    default_0 = module_0.Default()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = default_0.__str__()
    str_2 = str_0.__str__()
    var_0 = module_0.remove_entity_headers(dict_0)
    default_1 = module_0.Default()
    var_1 = default_1.__repr__()
    var_2 = module_1.ismodule(var_1)
    var_3 = module_0.has_message_body(var_2)
    module_0.is_hop_by_hop_header(var_0)
