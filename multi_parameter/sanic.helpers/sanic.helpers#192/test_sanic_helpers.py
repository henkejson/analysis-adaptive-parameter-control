# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = -786
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    str_0 = ")!uYWTn"
    dict_0 = {str_0: str_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    default_0 = module_0.Default()
    module_0.is_entity_header(default_0)


def test_case_4():
    bool_0 = False
    module_0.is_hop_by_hop_header(bool_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    var_1 = module_0.is_entity_header(var_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    float_0 = 3.7421521133350044
    var_0 = module_0.has_message_body(float_0)
    var_1 = str_0.__repr__()
    var_2 = module_1.ismodule(var_0)


def test_case_7():
    int_0 = 339
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = int_0.__repr__()


def test_case_8():
    str_0 = ""
    default_0 = module_0.Default()
    str_1 = "Expected a Blueprint instance"
    dict_0 = {str_1: str_1}
    var_0 = module_0.is_hop_by_hop_header(str_1)
    var_1 = var_0.__repr__()
    default_1 = module_0.Default()
    str_2 = var_0.__str__()
    var_2 = module_0.remove_entity_headers(dict_0)
    str_3 = default_1.__str__()
    var_3 = module_0.remove_entity_headers(var_2)
    bool_0 = module_0.is_atty()
    var_4 = var_2.__repr__()
    var_5 = module_0.is_hop_by_hop_header(str_0)
    var_6 = module_1.ismodule(var_2)
    var_7 = module_0.is_hop_by_hop_header(var_1)
    var_8 = module_0.has_message_body(var_0)
    var_9 = var_6.__repr__()
    str_4 = var_8.__str__()
    int_0 = 304
    var_10 = module_0.has_message_body(int_0)
    module_0.is_entity_header(var_2)


def test_case_9():
    bool_0 = module_0.is_atty()
    str_0 = "Allow"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {str_0: str_0}
    bool_1 = module_0.is_atty()
    var_1 = module_0.remove_entity_headers(dict_0)
    module_0.has_message_body(var_1)


def test_case_10():
    bool_0 = module_0.is_atty()
    str_0 = "Allow"
    var_0 = module_0.is_hop_by_hop_header(str_0)
    dict_0 = {str_0: str_0}
    var_1 = var_0.__repr__()
    var_2 = module_0.remove_entity_headers(dict_0, dict_0)
    module_0.has_message_body(var_1)
