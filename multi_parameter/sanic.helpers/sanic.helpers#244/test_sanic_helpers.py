# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    module_0.remove_entity_headers(var_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = module_0.is_atty()
    var_0 = bool_0.__repr__()
    dict_0 = {var_0: bool_0, var_0: var_0}
    var_1 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    bool_0 = True
    bytes_0 = b":<"
    tuple_0 = (bool_0, bool_0, bytes_0, bytes_0)
    module_0.is_hop_by_hop_header(tuple_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    module_0.remove_entity_headers(bool_0, bool_0)


def test_case_6():
    float_0 = 1677.0
    var_0 = module_0.has_message_body(float_0)
    bool_0 = module_0.is_atty()
    var_1 = module_0.Default()
    str_0 = var_0.__str__()
    var_2 = var_1.__repr__()


def test_case_7():
    float_0 = 1677.0
    default_0 = module_1.ismodule(float_0)
    default_1 = module_0.Default()
    str_0 = default_1.__str__()
    bool_0 = module_0.is_atty()
    str_1 = default_0.__str__()
    module_0.remove_entity_headers(bool_0)


def test_case_8():
    int_0 = 299
    var_0 = module_0.has_message_body(int_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    str_1 = var_0.__str__()
    str_2 = var_0.__str__()
    var_1 = var_0.__repr__()
    int_0 = 204
    var_2 = module_0.has_message_body(int_0)
    str_3 = var_2.__str__()
    var_3 = module_0.is_entity_header(str_2)
    bool_1 = module_0.is_atty()
    var_4 = str_0.__repr__()
    var_5 = bool_1.__repr__()
    var_6 = module_0.is_hop_by_hop_header(str_1)
    dict_0 = {var_5: bool_1, var_0: bool_0}
    module_0.remove_entity_headers(dict_0)
