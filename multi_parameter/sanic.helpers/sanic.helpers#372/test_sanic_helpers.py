# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    complex_0 = -3944.5 - 248j
    module_0.remove_entity_headers(complex_0)


def test_case_2():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    complex_0 = -3024.1 + 1008j
    module_0.is_entity_header(complex_0)


def test_case_6():
    bytes_0 = b"0\xb4\n}\x07\xe62\xc2t\xc9\x80\x86 \xc1\xb9\xcb\xd1\t]e"
    var_0 = module_0.is_hop_by_hop_header(bytes_0)
    bool_0 = False
    var_1 = module_0.has_message_body(bool_0)
    var_2 = var_0.__repr__()
    none_type_0 = None
    module_0.has_message_body(none_type_0)


def test_case_7():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_8():
    set_0 = set()
    dict_0 = {}
    bool_0 = module_0.is_atty()
    default_0 = module_0.Default(**dict_0)
    default_1 = module_0.Default()
    str_0 = default_0.__str__()
    module_0.import_string(set_0)


def test_case_9():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    float_0 = 207.39751
    var_1 = module_0.has_message_body(float_0)
    module_0.is_entity_header(float_0)


def test_case_10():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    var_2 = module_0.is_hop_by_hop_header(var_1)
    str_0 = var_0.__str__()
    bool_0 = module_1.ismodule(dict_0)
    var_3 = module_0.is_entity_header(var_1)
    var_4 = module_0.has_message_body(bool_0)
    bool_1 = module_0.is_atty()
    float_0 = 204.0
    bool_2 = module_0.is_atty()
    var_5 = module_0.has_message_body(float_0)
    module_0.is_entity_header(float_0)


def test_case_11():
    none_type_0 = None
    var_0 = none_type_0.__repr__()
    dict_0 = {var_0: none_type_0}
    var_1 = module_0.remove_entity_headers(dict_0)
