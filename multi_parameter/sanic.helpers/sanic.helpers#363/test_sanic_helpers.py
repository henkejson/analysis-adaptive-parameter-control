# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    dict_0 = {}
    module_0.has_message_body(dict_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bytes_0 = b"*"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_4():
    int_0 = 80
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.is_hop_by_hop_header(dict_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    bool_0 = module_0.is_atty()


def test_case_6():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    module_0.is_entity_header(default_0)


def test_case_7():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = module_1.ismodule(bool_0)


def test_case_8():
    int_0 = 104
    var_0 = module_0.has_message_body(int_0)
    var_1 = var_0.__repr__()
    str_0 = var_0.__str__()


def test_case_9():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0, str_0)


def test_case_10():
    int_0 = 304
    var_0 = module_0.has_message_body(int_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    module_0.remove_entity_headers(var_1)
