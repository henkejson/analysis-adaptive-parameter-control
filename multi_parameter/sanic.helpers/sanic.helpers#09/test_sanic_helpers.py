# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)


def test_case_1():
    str_0 = "fB}[H\tj/_-"
    module_0.remove_entity_headers(str_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    bool_0 = True
    module_0.is_entity_header(bool_0)


def test_case_4():
    str_0 = "fB}[H\tj/_"
    var_0 = module_0.is_hop_by_hop_header(str_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()
    str_0 = default_0.__str__()
    var_1 = default_0.__repr__()
    var_2 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    float_0 = 3684.0
    var_0 = module_0.has_message_body(float_0)
    default_1 = module_0.Default()


def test_case_7():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_8():
    dict_0 = {}
    var_0 = module_0.remove_entity_headers(dict_0)
    bool_0 = module_0.is_atty()
    int_0 = 304
    var_1 = var_0.__repr__()
    var_2 = module_0.has_message_body(bool_0)
    var_3 = module_0.has_message_body(int_0)
    module_0.is_hop_by_hop_header(var_2)


def test_case_9():
    bytes_0 = b"\x1a\xeb\xd7\x17\xbd\x18\n"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
