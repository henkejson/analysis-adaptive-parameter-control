# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    float_0 = 138.9
    var_0 = module_0.has_message_body(float_0)


def test_case_1():
    bool_0 = False
    module_0.remove_entity_headers(bool_0)


def test_case_2():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0)
    var_1 = var_0.__repr__()
    var_2 = str_0.__repr__()
    str_1 = var_2.__str__()


def test_case_3():
    bool_0 = module_0.is_atty()


def test_case_4():
    default_0 = module_0.Default()


def test_case_5():
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_6():
    bool_0 = module_0.is_atty()
    bool_1 = True
    module_0.is_hop_by_hop_header(bool_1)


def test_case_7():
    set_0 = set()
    default_0 = module_0.Default(*set_0)
    var_0 = default_0.__repr__()
    module_0.is_entity_header(set_0)


def test_case_8():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    bool_0 = module_0.is_atty()
    str_1 = default_0.__str__()
    str_2 = "i="
    module_0.remove_entity_headers(str_2, str_2)


def test_case_9():
    bool_0 = True
    var_0 = module_0.has_message_body(bool_0)
    module_0.is_entity_header(var_0)


def test_case_10():
    bytes_0 = b"\xa3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_11():
    bytes_0 = b"\xbc\xeaIO\xf8+\xadno\xe9\xd7s\xfd=B\x97\x04"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    var_1 = var_0.__repr__()
    bool_0 = module_0.is_atty()
    bool_1 = module_0.is_atty()
    bool_2 = module_0.is_atty()
    int_0 = 304
    var_2 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(bytes_0, bytes_0)
