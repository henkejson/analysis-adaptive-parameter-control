# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = -2368
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"Request En\x10ity Too Larg"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    int_0 = -2533
    module_0.is_entity_header(int_0)


def test_case_4():
    set_0 = set()
    module_0.is_hop_by_hop_header(set_0)


def test_case_5():
    default_0 = module_0.Default()
    var_0 = default_0.__repr__()


def test_case_6():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    int_0 = 1231
    var_0 = default_0.__repr__()
    var_1 = module_0.has_message_body(int_0)
    module_0.remove_entity_headers(var_1, int_0)


def test_case_7():
    float_0 = 187.20941499608531
    var_0 = module_0.has_message_body(float_0)
    var_1 = float_0.__repr__()


def test_case_8():
    bytes_0 = b"Request Entity Too Large"
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)
    int_0 = 204
    var_1 = module_0.has_message_body(int_0)
    bool_0 = True
    var_2 = module_0.has_message_body(bool_0)
    str_0 = var_2.__str__()
    str_1 = "d\r{$.`"
    bool_1 = module_0.is_atty()
    module_0.import_string(str_1)


def test_case_9():
    str_0 = "sanic.Sanic"
    module_0.import_string(str_0)
