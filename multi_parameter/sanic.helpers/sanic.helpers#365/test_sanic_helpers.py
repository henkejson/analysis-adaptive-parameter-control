# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0


def test_case_0():
    int_0 = -436
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"Unsupported Media Type"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    str_0 = '\n    Removes all the entity headers present in the headers given.\n    According to RFC 2616 Section 10.3.5,\n    Content-Location and Expires are allowed as for the\n    "strong cache validator".\n    https://tools.ietf.org/html/rfc2616#section-10.3.5\n\n    returns the headers without the entity headers\n    '
    var_0 = module_0.is_entity_header(str_0)


def test_case_4():
    none_type_0 = None
    module_0.is_hop_by_hop_header(none_type_0)


def test_case_5():
    int_0 = -436
    module_0.remove_entity_headers(int_0, int_0)


def test_case_6():
    default_0 = module_0.Default()
    str_0 = "_strict_slashes"
    var_0 = default_0.__repr__()
    var_1 = module_0.is_entity_header(str_0)
    bool_0 = module_0.is_atty()
    var_2 = default_0.__repr__()
    bool_1 = module_0.is_atty()
    str_1 = default_0.__str__()


def test_case_7():
    int_0 = 205
    var_0 = module_0.has_message_body(int_0)


def test_case_8():
    str_0 = "logging.Formatter"
    var_0 = module_0.import_string(str_0, str_0)


def test_case_9():
    int_0 = 204
    var_0 = module_0.has_message_body(int_0)
