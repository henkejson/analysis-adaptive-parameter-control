# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.helpers as module_0
import inspect as module_1


def test_case_0():
    int_0 = 406
    var_0 = module_0.has_message_body(int_0)


def test_case_1():
    bytes_0 = b"Request Timeout"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_entity_headers(dict_0)


def test_case_2():
    bool_0 = module_0.is_atty()


def test_case_3():
    float_0 = 479.0
    module_0.is_hop_by_hop_header(float_0)


def test_case_4():
    default_0 = module_0.Default()
    str_0 = default_0.__str__()
    none_type_0 = None
    module_0.is_entity_header(none_type_0)


def test_case_5():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    var_1 = var_0.__repr__()
    bool_1 = module_0.is_atty()


def test_case_6():
    bool_0 = module_0.is_atty()
    var_0 = module_0.has_message_body(bool_0)
    str_0 = var_0.__str__()
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: var_0}
    var_3 = module_0.remove_entity_headers(dict_0)
    var_4 = module_0.is_entity_header(var_2)
    var_5 = module_1.ismodule(var_1)
    str_1 = var_4.__str__()
    str_2 = dict_0.__str__()
    var_6 = var_5.__repr__()
    var_7 = var_0.__repr__()
    var_8 = module_1.ismodule(var_0)
    var_9 = var_0.__repr__()
    int_0 = 204
    var_10 = module_0.has_message_body(int_0)
    str_3 = var_0.__str__()
    dict_1 = {}
    default_0 = module_0.Default(**dict_1)
    str_4 = var_4.__str__()
    var_11 = var_4.__repr__()
    var_12 = module_0.is_hop_by_hop_header(var_9)
    var_13 = var_0.__repr__()
    module_0.import_string(var_2)
