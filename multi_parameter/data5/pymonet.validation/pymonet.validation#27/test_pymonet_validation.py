# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_1.to_lazy()


def test_case_1():
    str_0 = "Y5{\x0bQ!d#"
    set_0 = set()
    int_0 = -1450
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.bind(str_0)


def test_case_2():
    bytes_0 = b"/(\xe6\xc0oP\xbfDo\x12\x0c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_0.bind(var_0)


def test_case_3():
    str_0 = "-CN\\s"
    dict_0 = {str_0: str_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_3 = validation_0.to_either()
    var_4 = var_2.to_either()
    var_5 = var_4.to_maybe()
    var_4.is_fail()


def test_case_4():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    float_0 = -3339.227766
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    int_0 = 500
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = '?W7Qjn-WNs\tML"w^_zFq'
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(str_0)


def test_case_9():
    int_0 = -262
    int_1 = 1
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.ap(int_0)


def test_case_10():
    none_type_0 = None
    float_0 = 1973.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_0.map(none_type_0)


def test_case_11():
    bytes_0 = b"\xae"
    str_0 = "@_<QMj"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(str_0)
    var_2 = var_1.bind(bytes_0)
    var_2.is_fail()


def test_case_12():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_either()
    var_3 = var_1.to_either()
    var_4 = var_3.to_maybe()
    var_3.is_fail()


def test_case_13():
    int_0 = 1
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, int_0)
    validation_0.to_try()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_15():
    str_0 = "g"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_2 = validation_1.__eq__(validation_0)
    var_2.to_either()
