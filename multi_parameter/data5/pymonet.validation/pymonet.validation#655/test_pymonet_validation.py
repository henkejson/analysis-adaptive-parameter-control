# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.is_fail()


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()


def test_case_2():
    int_0 = 192
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    dict_0 = {none_type_0: none_type_0}
    validation_1 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.__str__()
    var_2 = var_0.map(int_0)
    var_1.to_either()


def test_case_3():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_4():
    set_0 = set()
    bool_0 = False
    tuple_0 = (set_0, bool_0, bool_0)
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(none_type_0)
    var_2 = var_1.to_maybe()
    var_3 = var_2.bind(set_0)
    var_4 = var_3.map(none_type_0)
    var_4.to_maybe()


def test_case_5():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.map(none_type_0)


def test_case_6():
    bool_0 = False
    bool_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    str_0 = "4r-/tCc)9X i>?A"
    list_0 = [str_0]
    bool_0 = True
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.map(list_0)


def test_case_10():
    float_0 = 1322.3
    validation_0 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_11():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    bool_0 = False
    var_1 = validation_0.to_box()
    var_1.ap(bool_0)


def test_case_12():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    var_1 = var_0.to_try()
    int_0 = 2243
    var_2 = validation_1.to_lazy()
    var_3 = var_2.__eq__(int_0)


def test_case_13():
    str_0 = "\n        Transform Box into Validation.\n\n        :returns: failed Validation monad with previous value as error\n        :rtype: Validation[None, [A]]\n        "
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_2 = var_1.to_try()
    var_2.to_box()


def test_case_14():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, var_0)
    validation_1.to_try()


def test_case_15():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.bind(none_type_0)
