# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    complex_0 = 644.2254 - 526.86158j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_1():
    none_type_0 = None
    int_0 = -780
    list_0 = [int_0, int_0, int_0, int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.map(none_type_0)


def test_case_2():
    bytes_0 = b"\xfb\xd5\xc8\xe3\xe6>?\xb7\xf9\xcc'\xe3\x94\x9a\xd8\x14[F\x8a"
    bytes_1 = b"\x92Y@\x88\xb5\xff\xfa\x96"
    tuple_0 = (bytes_1,)
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(bytes_0)
    var_1.is_success()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bytes_0 = b"W\xed'\x0b\xd7\x1a&l\xf0\xc0\x8f\x9b\xcc#}\x84)B\x16u"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.to_try()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = False
    complex_0 = -1935.38534 - 3601.28j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.map(bool_0)


def test_case_7():
    bytes_0 = b"\x92Y@\x88\xb5\xff\xfa\x96"
    tuple_0 = (bytes_0,)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(validation_0)


def test_case_8():
    float_0 = 489.282986
    str_0 = "I5fh?"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(float_0)


def test_case_9():
    complex_0 = -1539.67866 + 688.5445j
    float_0 = -3533.926737
    dict_0 = {complex_0: complex_0, complex_0: complex_0, float_0: complex_0}
    validation_0 = module_0.Validation(complex_0, dict_0)
    var_0 = validation_0.to_box()
    dict_0.to_box()


def test_case_10():
    int_0 = -5289
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_0.is_success()


def test_case_11():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(list_1)
    validation_2 = module_0.Validation(list_1, list_0)
    var_2 = validation_2.to_either()
    var_3 = validation_2.to_maybe()
    var_4 = var_3.to_box()
    var_0.is_success()


def test_case_12():
    int_0 = -1472
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(int_0)
    validation_1 = module_0.Validation(var_1, bytes_0)
    var_2 = validation_1.to_maybe()
    var_1.to_either()


def test_case_13():
    str_0 = "xSF6|oE!2tXP6"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_1.map(str_0)
    var_3.to_maybe()


def test_case_14():
    str_0 = "xSF6|oE!2tXP6"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    bytes_0 = b""
    validation_1 = module_0.Validation(str_0, bytes_0)
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_try()
    var_4 = var_3.__eq__(validation_0)
    var_5 = var_3.__eq__(validation_0)
    var_6 = validation_1.to_maybe()
    var_7 = validation_1.to_either()
    none_type_0 = None
    validation_2 = module_0.Validation(validation_0, none_type_0)
    var_5.map(validation_2)


def test_case_15():
    str_0 = "xSF6|oE!2tXP6"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(str_0, validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_3 = var_2.__eq__(str_0)
    var_4 = var_0.__eq__(validation_0)
    var_1.to_maybe()
