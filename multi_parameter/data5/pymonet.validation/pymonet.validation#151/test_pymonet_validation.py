# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(var_0)


def test_case_1():
    none_type_0 = None
    str_0 = "QSv\x0cpzM{F4\x0bMd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_lazy()


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.to_try()


def test_case_3():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_4():
    str_0 = "T~D1C%|-HV[en"
    str_1 = "j"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(str_0)
    var_1.is_success()


def test_case_5():
    bytes_0 = b"F\x00\xb1\xbe?\n+\xa6\xd1\x92\x0c\x17\xa8\x10\xb7\xbb\xb1\x06\xbc\x1c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_lazy()
    var_1.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    str_0 = "QSv\x0cpzM{F4\x0bMd"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_lazy()


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_9():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(list_0)


def test_case_10():
    none_type_0 = None
    float_0 = -2141.0792
    float_1 = 2434.1932
    validation_0 = module_0.Validation(float_1, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.bind(none_type_0)


def test_case_11():
    none_type_0 = None
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.ap(list_0)


def test_case_12():
    int_0 = 278
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_13():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    dict_1 = {none_type_0: none_type_0, none_type_0: dict_0}
    validation_0 = module_0.Validation(none_type_0, dict_1)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_0.to_lazy()


def test_case_14():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_1, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = var_2.to_try()
    var_5 = var_4.__str__()
    var_6 = var_2.to_try()
    validation_2 = module_0.Validation(var_5, var_3)
    var_7 = validation_0.to_lazy()
    validation_0.to_try()
