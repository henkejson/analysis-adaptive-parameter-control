# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = -409
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = validation_0.to_box()


def test_case_1():
    str_0 = ">CT-m[ \n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.ap(str_0)


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_3():
    int_0 = -409
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    validation_0.to_maybe()


def test_case_4():
    str_0 = "t.pD+A3L'\t*]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.to_lazy()


def test_case_5():
    bool_0 = False
    int_0 = 1101
    set_0 = {int_0, int_0, int_0, int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    validation_0.map(bool_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    validation_0.bind(var_1)


def test_case_7():
    str_0 = "Callable[[U], Lazy[U, W]]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.ap(str_0)


def test_case_8():
    complex_0 = 592.607214 - 1492.30872j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(complex_0)
    var_3 = var_0.to_maybe()
    validation_0.to_try()


def test_case_9():
    str_0 = "CallablB[[U], !azy[U, W]]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    validation_0.ap(str_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_11():
    bytes_0 = b"="
    set_0 = {bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_12():
    str_0 = ">CTm[ \n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"="
    set_0 = {bytes_0}
    var_1 = validation_0.is_fail()
    var_2 = var_0.to_maybe()
    set_0.to_lazy()


def test_case_13():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_maybe()
    var_5 = var_3.to_maybe()
    var_6 = validation_0.__eq__(var_3)
    var_5.to_maybe()


def test_case_14():
    str_0 = ").n~"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = var_0.__eq__(validation_0)
    var_4 = validation_0.is_fail()
    var_4.is_fail()
