# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    set_0 = set()
    list_0 = [set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.is_fail()
    object_0 = module_1.object(*set_0)
    var_1 = validation_0.__eq__(list_0)
    var_0.to_lazy()


def test_case_1():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"\xea_\\R\xb0\xf6\xf0\xfc\x99#\xd3\xe3\x01\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    var_1.to_maybe()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.is_success()


def test_case_4():
    bytes_0 = b"\xa8\xfa\x85\x13\xe2\xe7\xaa\xd5\xcc\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(bytes_0)
    var_1.is_success()


def test_case_5():
    bytes_0 = b"\x8ed\xbc\xb1\x00I\xf1m\xcb\xd5\x87"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_6():
    set_0 = set()
    set_0.to_box()


def test_case_7():
    set_0 = set()
    object_0 = module_0.Validation(set_0, set_0)


def test_case_8():
    str_0 = "/0$HO4{5A;}KIhi4Q00"
    list_0 = []
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: str_0}
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    validation_0.map(none_type_1)


def test_case_10():
    bool_0 = False
    int_0 = 434
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, int_0)
    validation_0.bind(bool_0)


def test_case_11():
    float_0 = 704.75
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(validation_0)


def test_case_12():
    float_0 = -3377.46175
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_success()


def test_case_14():
    none_type_0 = None
    bytes_0 = b"\xdd\x9c5N\xd1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.to_maybe()
    var_3 = var_1.__eq__(none_type_0)
    var_3.to_box()


def test_case_15():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = True
    validation_0 = module_0.Validation(list_0, bool_1)
    validation_0.to_try()


def test_case_16():
    set_0 = set()
    list_0 = [set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.is_fail()
    object_0 = module_1.object(*set_0)
    var_4 = validation_0.__eq__(list_0)
    var_3.to_box()


def test_case_17():
    set_0 = set()
    list_0 = [set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    object_0 = module_1.object(*set_0)
    var_3 = validation_0.__eq__(list_0)
    var_4 = validation_0.is_success()
    var_4.to_try()


def test_case_18():
    set_0 = set()
    list_0 = [set_0, set_0]
    validation_0 = module_0.Validation(list_0, set_0)
    validation_1 = module_0.Validation(set_0, list_0)
    var_0 = validation_1.to_box()
    var_1 = validation_1.__str__()
    var_2 = validation_0.is_success()
    var_3 = validation_1.__eq__(validation_0)
    var_4 = validation_0.__str__()
    var_4.map(var_0)
