# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(validation_0)


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__str__()
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.__eq__(var_2)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.bind(dict_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_2 = validation_0.is_success()
    var_3 = validation_0.__str__()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = validation_0.to_box()
    validation_0.bind(dict_0)


def test_case_4():
    str_0 = '1-"?\nAqk+eB\tDefA'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.is_success()
    bool_0 = False
    validation_1.map(bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    int_0 = -936
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(int_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(validation_0)


def test_case_8():
    bytes_0 = b"g&\x91\x96\x8b"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_1 = set()
    validation_0 = module_0.Validation(set_1, set_1)
    validation_0.ap(set_0)


def test_case_9():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    module_1.object(**var_0)


def test_case_10():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(set_0)
    var_2 = validation_0.to_box()
    var_0.is_fail()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_0.is_fail()


def test_case_12():
    float_0 = 430.0
    int_0 = -3031
    str_0 = "v;3I\\B\n5f*t#-V\r[')"
    validation_0 = module_0.Validation(float_0, str_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = var_0.__str__()
    var_2 = validation_0.to_try()


def test_case_13():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_14():
    float_0 = 3205.1102
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    tuple_0 = (dict_0, dict_0)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(bool_0)
    var_2 = var_1.ap(float_0)
    var_3 = var_2.__str__()
    var_3.to_lazy()


def test_case_15():
    str_0 = '1-"\nAqk+eB\tDef'
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = validation_0.__str__()
    var_0 = validation_0.is_fail()
    validation_1.is_success()


def test_case_16():
    bytes_0 = b"\xc8\xcf\xd0}\xe8h\xf1d<\xdf\xbd_4\x94l\xa7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()
