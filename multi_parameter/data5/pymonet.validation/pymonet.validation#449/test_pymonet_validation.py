# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 1541
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.to_lazy()


def test_case_1():
    tuple_0 = ()
    set_0 = {tuple_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()


def test_case_2():
    str_0 = "\rG?Sa-a].Z\x0b%)09s"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_1.to_lazy()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_5():
    int_0 = 1448
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 1487
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(int_0)


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(validation_0)


def test_case_8():
    int_0 = 1487
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_0.ap(none_type_0)


def test_case_9():
    str_0 = "<Brus)d>\x0c\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_10():
    int_0 = -2163
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    int_0 = -3529
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.to_maybe()


def test_case_12():
    int_0 = -2552
    bool_0 = False
    set_0 = {int_0, int_0, bool_0}
    validation_0 = module_0.Validation(int_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(set_0)


def test_case_13():
    str_0 = "<Brusd>\x0c\x0c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    none_type_0 = None
    int_0 = 1794
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: int_0}
    validation_0 = module_0.Validation(int_0, dict_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.to_box()
    validation_0.map(none_type_0)


def test_case_15():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(none_type_0)


def test_case_16():
    none_type_0 = None
    none_type_1 = None
    set_0 = set()
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.__str__()
    var_0.bind(none_type_1)


def test_case_17():
    none_type_0 = None
    tuple_0 = ()
    set_0 = {none_type_0, none_type_0, none_type_0, tuple_0}
    validation_0 = module_0.Validation(set_0, tuple_0)
    bool_0 = False
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bool_0)
    var_2 = validation_0.to_box()
    var_3 = var_1.__eq__(var_2)
    var_3.to_box()
