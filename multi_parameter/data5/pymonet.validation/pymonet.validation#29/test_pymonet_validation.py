# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    int_0 = -454
    object_0 = module_1.object()
    int_1 = 1
    validation_0 = module_0.Validation(int_0, int_1)
    var_0 = validation_0.__eq__(object_0)
    var_0.to_maybe()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_try()
    var_4 = validation_0.__str__()
    var_4.to_try()


def test_case_3():
    int_0 = 1
    bool_0 = True
    int_1 = 0
    list_0 = [int_0]
    bool_1 = True
    tuple_0 = (int_1, list_0, bool_1)
    tuple_1 = (bool_0, bool_0, tuple_0)
    validation_0 = module_0.Validation(int_0, tuple_1)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_4():
    bytes_0 = b"\x8b\xd5\xf0\xa2\x9f\xd8f~~=\xff\xd8)\xe7\x1c\xd3"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.map(bytes_0)


def test_case_5():
    bytes_0 = b"\x10\x83\x8c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_6():
    bytes_0 = b"S\x18\xda\xcb\xe7\x18h:\xec\x9e\xdc\xbfn\xee\xeai\xb6"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(bool_0)
    var_1.ap(list_0)


def test_case_7():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)


def test_case_8():
    bytes_0 = b"\xff\xb06'\xb1\x89\x0f\xd1g\xe8b\xf0"
    int_0 = -1074
    validation_0 = module_0.Validation(bytes_0, int_0)
    validation_0.to_maybe()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_10():
    set_0 = set()
    var_0 = module_0.Validation(set_0, set_0)
    var_0.map(set_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()


def test_case_15():
    str_0 = "V|t>U"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()


def test_case_16():
    bool_0 = False
    str_0 = "J\t=Yb,l_fA[>^#)Pio@X"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = var_0.__eq__(bool_0)
    var_1.to_lazy()


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = var_0.__str__()
    var_3 = var_1.__eq__(var_1)
    var_4 = validation_0.__eq__(validation_0)
    var_1.to_either()


def test_case_18():
    int_0 = -454
    none_type_0 = None
    object_0 = module_0.Validation(none_type_0, none_type_0)
    int_1 = 1
    validation_0 = module_0.Validation(int_0, int_1)
    var_0 = validation_0.__eq__(object_0)
    var_1 = module_0.Validation(none_type_0, var_0)
    var_1.to_try()
