# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"c\xe2*\x81\xf3\xa1\x13\xd99\xa7\x8c\xd8XP\x97y\x02\xba\xfaA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()


def test_case_2():
    str_0 = "u!"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    str_0 = "u!"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    str_0 = "r{`6hFDESjD[AI"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_5():
    int_0 = -6995
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(int_0)


def test_case_6():
    str_0 = "Efe"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(str_0)


def test_case_7():
    str_0 = "EfwS"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_8():
    bytes_0 = b"c\xe2*\xf3\xa1P\x13\xd99\xa7\x8c\xd8XP\x97y\x02\xba\xfaA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    str_0 = "\x0b\x0b8OjXF37Sf)g {r\\mB@"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    bytes_0 = b"\x17\x88\xba^O\x89\xf9(r\x19\x03\x04"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_box()
    var_3 = validation_0.to_try()
    var_3.is_fail()


def test_case_11():
    str_0 = "\\</Dmc!do^H@^"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_12():
    bytes_0 = b"[\xba\x8b\xdb\x91\xb8\x03ba\xcbE\x9e\xee\xdd\xa2"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()


def test_case_13():
    bytes_0 = b"c\xe2*\xf3\xa1\x9a\x13\xd99\xb8\x8c\xd8XP\x97y\x02\xba\xfaA"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.is_success()
    str_0 = "8%.>"
    validation_1 = module_0.Validation(str_0, str_0)


def test_case_15():
    bytes_0 = b"\xb6\xec\x00\xb7c\xf1\xf0\x15\xa7D\xf5k\xc8\xc5\x11\xcb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_0.to_lazy()
    var_0.to_either()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, bytes_0)


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()
