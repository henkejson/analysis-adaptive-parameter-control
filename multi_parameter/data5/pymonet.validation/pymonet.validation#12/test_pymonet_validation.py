# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"aY\x9ez"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.__str__()
    var_1.to_box()


def test_case_1():
    str_0 = "~M5xOk\\A"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_2():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_4():
    bytes_0 = b"aY\x9ez"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.__str__()
    var_3 = var_0.bind(bytes_0)
    validation_1 = module_0.Validation(var_3, var_3)
    var_4 = validation_0.to_lazy()
    var_5 = validation_0.is_fail()
    var_2.bind(var_0)


def test_case_5():
    dict_0 = {}
    set_0 = set()
    validation_0 = module_0.Validation(set_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    bytes_0 = b""
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = var_0.__eq__(dict_0)
    var_2 = validation_1.is_fail()
    validation_1.map(set_0)


def test_case_6():
    bytes_0 = b"v\x00"
    bytes_1 = b'\xeb\xb0\xd6=\x1e\xa7a\xdc\x0c\x1do"\xf2\xce\x01'
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.bind(bytes_0)


def test_case_7():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    validation_0 = module_0.Validation(bool_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_9():
    bool_0 = False
    int_0 = -855
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(bool_0)


def test_case_10():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "x/g][1K-FBs%%IBX"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_maybe()
    validation_0.to_try()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "x/g][1K-FBs%%IBX"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_1.is_success()
    validation_1.ap(var_0)


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_14():
    bytes_0 = b"aY\x9ez"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = module_0.Validation(validation_0, var_0)
    var_2 = var_0.bind(validation_0)
    var_3 = var_2.bind(var_1)


def test_case_15():
    bytes_0 = b"\x93\xf6\xf8s\x9b\x81\x0b\x90\xe5\x865\xb9Y\xc9{\xd9"
    bytes_1 = b""
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.__str__()
    var_2.bind(var_1)


def test_case_16():
    bytes_0 = b"aY\x9ez"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(bytes_0)
    set_0 = set()
    validation_1 = module_0.Validation(var_1, set_0)
    var_3 = validation_1.to_either()
    var_4 = validation_0.is_fail()
    var_4.is_fail()


def test_case_17():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.__str__()
    var_4 = validation_0.to_lazy()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_5 = var_4.to_maybe()
    var_6 = validation_0.to_maybe()
    validation_1.is_fail()
