# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(validation_0)
    var_0.is_fail()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    var_0 = validation_0.__eq__(none_type_1)
    module_1.object(**var_0)


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    str_0 = "\x0cJ\n?m!oyz"
    tuple_0 = (list_0, str_0)
    validation_1 = validation_0.to_either()
    var_1 = validation_1.__str__()
    validation_2 = module_0.Validation(var_1, tuple_0)
    validation_1.to_either()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    str_0 = "S4x#\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(str_0)
    var_2 = validation_0.to_either()


def test_case_5():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(validation_0)
    validation_0.map(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    str_0 = "S4x#\n"
    validation_0.bind(str_0)


def test_case_8():
    str_0 = "S4x#\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(str_0)


def test_case_9():
    bytes_0 = b"\xf4\xdd\x15B\xae\xaf\x12\xc4O"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_box()
    var_0.is_success()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    bytes_0 = b"\x04\x07\xfd"
    bytes_1 = b"\x17L\xaa\xc4\x13\x7f\xd0\x83 \x91[\x00>\xa2\x009\xc1m\\\xcf"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.ap(var_1)
    var_3 = var_1.to_try()
    var_4 = var_1.__eq__(bytes_0)
    var_5 = var_4.__eq__(none_type_0)
    var_5.to_maybe()


def test_case_12():
    complex_0 = -1137.56832 + 2624j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = module_0.Validation(validation_0, var_0)
    str_0 = "S4x#\n"
    validation_1 = module_0.Validation(str_0, var_1)
    var_2 = validation_0.__eq__(var_1)
    validation_0.to_either()


def test_case_14():
    tuple_0 = ()
    int_0 = -445
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, int_0: int_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_2 = module_0.Validation(validation_1, none_type_0)
    validation_1.map(none_type_0)


def test_case_15():
    list_0 = []
    str_0 = "\x0cJ\n?m!oyz"
    tuple_0 = (list_0, str_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.__str__()
    str_1 = "\t[2lCk7uWYJO>"
    validation_1 = module_0.Validation(str_1, str_1)
    var_1 = validation_1.to_either()
    var_2 = validation_1.to_maybe()
    none_type_0 = None
    var_3 = var_1.__eq__(tuple_0)
    var_3.bind(none_type_0)


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    str_0 = "\x0cJ\n?m!oyz"
    tuple_0 = (list_0, str_0)
    validation_1 = module_0.Validation(tuple_0, str_0)
    var_1 = validation_1.__str__()
    validation_2 = module_0.Validation(var_1, tuple_0)
    var_2 = validation_1.to_either()
    var_3 = validation_2.to_maybe()
    validation_0.bind(var_3)
