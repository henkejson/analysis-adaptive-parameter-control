# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_maybe()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__str__()
    var_2.to_either()


def test_case_2():
    bytes_0 = b'\xd9\xc8\x84\xfc\xf6X\xaf\xf6"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.ap(var_0)
    var_3 = validation_0.__str__()
    var_2.is_fail()


def test_case_3():
    bytes_0 = b"\xd9\xc8T\xf6X\xaf\xf6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(var_0)
    var_2 = var_0.ap(var_0)


def test_case_4():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(validation_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_0.to_maybe()


def test_case_5():
    bytes_0 = b'\xd9\xc8\x84\xfc\xf6X\xaf\xf6"'
    bytes_0.is_fail()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_7():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    validation_1.map(none_type_0)


def test_case_9():
    int_0 = 985
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(int_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_11():
    none_type_0 = None
    float_0 = 720.9395
    validation_0 = module_0.Validation(float_0, float_0)
    validation_1 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(float_0)
    var_1 = validation_0.to_box()
    validation_1.to_try()


def test_case_12():
    none_type_0 = None
    bool_0 = True
    float_0 = 720.9395
    validation_0 = module_0.Validation(float_0, float_0)
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    validation_2 = module_0.Validation(float_0, none_type_0)
    var_2 = validation_0.__eq__(float_0)
    validation_0.to_maybe()


def test_case_13():
    str_0 = "$Q?|LW:8"
    list_0 = [str_0, str_0]
    tuple_0 = (list_0,)
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, str_0)
    set_0 = {bool_0, bool_0}
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.to_try()
    var_2 = var_0.to_box()
    var_3 = var_0.__eq__(tuple_0)
    var_4 = var_0.to_box()
    var_2.map(var_1)


def test_case_14():
    bytes_0 = b"\x1a\x19\xcb\x89\x9d\x9cR\xdel\x7f\x0e\xb5+}\x7f\xe8\xc5\x00"
    bytes_1 = b"\x86\xf5\xa9\x12"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.to_try()
    var_1 = var_0.bind(bytes_0)
    var_2 = var_0.bind(var_0)
    var_1.is_fail()


def test_case_15():
    bytes_0 = b'\xd9\xc8\x84\xfc\xf6X\xaf\xf6"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_0.__eq__(validation_0)
    validation_1.is_fail()


def test_case_16():
    bytes_0 = b'\xd9\xc8\x84\xfc\xf6X\xaf\xf6"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    float_0 = 720.9395
    validation_1 = module_0.Validation(float_0, validation_0)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_2.to_box()
    validation_2.to_try()


def test_case_17():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    float_0 = -179.04
    validation_1 = module_0.Validation(var_0, float_0)
    var_1 = validation_1.__eq__(var_0)
    var_1.is_fail()
