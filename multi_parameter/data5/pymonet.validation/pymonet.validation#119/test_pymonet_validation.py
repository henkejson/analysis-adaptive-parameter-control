# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "];q4O'[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_1.to_lazy()
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = validation_1.to_box()
    var_1.is_fail()


def test_case_2():
    str_0 = "W63v0^550V0WV*E\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    str_0 = "rD"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_maybe()


def test_case_4():
    str_0 = "];q4O'[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()


def test_case_5():
    float_0 = 225.926
    validation_0 = module_0.Validation(float_0, float_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_success()


def test_case_7():
    str_0 = "];q4O'[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.is_fail()


def test_case_8():
    complex_0 = 899.809333 + 403.7j
    float_0 = 415.0
    bool_0 = True
    validation_0 = module_0.Validation(float_0, bool_0)
    validation_0.map(complex_0)


def test_case_9():
    str_0 = "];q4O'[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    var_3 = var_2.__str__()
    var_4 = var_1.to_maybe()
    var_5 = var_4.__str__()
    validation_0.bind(str_0)


def test_case_10():
    str_0 = "];tOn/V[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    validation_0.ap(var_0)


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()


def test_case_12():
    float_0 = -1346.0
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_13():
    int_0 = -595
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    tuple_1 = (set_0,)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    var_0 = validation_0.__str__()
    validation_0.map(tuple_0)


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = var_0.to_maybe()


def test_case_16():
    str_0 = "];q4O'[VE\\"
    validation_0 = module_0.Validation(str_0, str_0)
    int_0 = 1497
    validation_1 = module_0.Validation(str_0, int_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_maybe()
    var_4 = var_3.map(var_3)
    var_5 = validation_0.to_either()
    var_6 = validation_0.__eq__(str_0)
    var_7 = validation_0.__str__()
    var_8 = var_3.to_either()
    var_2.bind(var_3)
