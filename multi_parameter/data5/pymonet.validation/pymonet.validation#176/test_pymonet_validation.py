# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_either()
    var_1.bind(var_1)


def test_case_1():
    none_type_0 = None
    float_0 = -498.14
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.__str__()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = validation_0.__eq__(validation_0)
    var_3 = validation_0.to_lazy()
    var_4 = var_3.to_either()
    validation_0.map(var_4)


def test_case_3():
    bytes_0 = b"\x1de\x9e? \x84\xbc\xf3\xe9`\xdbp\x11\x89\x80\xf0'\xb5"
    str_0 = "\n        Transform Either to Box.\n\n        :returns: Box monad with previous value\n        :rtype: Box[A]\n        "
    bool_0 = False
    tuple_0 = (str_0, str_0, bytes_0, bool_0)
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(tuple_0)


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xe5w\x04\xc8<\x9bk\xebh\xcdv]\xdcG7r,"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.is_success()


def test_case_5():
    bytes_0 = b"X7:\x91e\xe8\xa5\x12=}\xbf\x96Q\x0eI\x80\xe5\x93X"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_lazy()
    var_3 = var_2.__eq__(bytes_0)
    var_3.to_box()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_8():
    int_0 = 1667
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_fail()


def test_case_9():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.to_lazy()
    str_0 = "@[W\x0c|(7!]"
    list_1 = [str_0]
    validation_1 = module_0.Validation(list_1, list_1)
    none_type_0 = None
    validation_1.map(none_type_0)


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_11():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.ap(none_type_0)


def test_case_12():
    int_0 = -685
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_0.ap(validation_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(var_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.to_maybe()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_16():
    str_0 = "/SgmoCTd.{`e?>8Dbh"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(str_0, str_0)
    float_0 = -3609.693331
    validation_2 = module_0.Validation(str_0, float_0)
    var_0 = validation_0.__eq__(validation_2)
    none_type_0 = None
    validation_1.map(none_type_0)
