# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.__str__()


def test_case_1():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_2 = validation_0.__eq__(bytes_0)
    var_2.to_maybe()


def test_case_2():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_1.is_success()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_6():
    str_0 = "\\*]zLy\t?c=9?S'"
    bytes_0 = b"p\xb2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(str_0)


def test_case_7():
    float_0 = 1196.0
    validation_0 = module_0.Validation(float_0, float_0)
    bool_0 = False
    validation_1 = module_0.Validation(float_0, float_0)
    none_type_0 = None
    validation_2 = module_0.Validation(bool_0, none_type_0)
    validation_2.ap(float_0)


def test_case_8():
    int_0 = -1004
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_1.is_success()


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_12():
    int_0 = 0
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()
    var_1.bind(int_0)


def test_case_13():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_maybe()
    var_2.to_maybe()


def test_case_14():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.is_success()
    var_3 = var_1.to_maybe()
    var_0.bind(var_3)


def test_case_15():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    float_0 = 1991.511
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.is_success()
    var_2.to_lazy()


def test_case_16():
    bytes_0 = b"1\x87\xdfs\x02'\x19\x0e\xc8\xef\xc6!"
    dict_0 = {}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__str__()
    var_3 = var_1.__eq__(var_1)
    var_0.bind(bytes_0)
