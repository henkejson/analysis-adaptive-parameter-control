# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(bool_0)
    var_2 = validation_0.__eq__(validation_0)


def test_case_1():
    bytes_0 = b"C\xeb5A\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.to_either()


def test_case_2():
    bytes_0 = b"CLA\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()


def test_case_3():
    bytes_0 = b"\xaa\x90,\r\xdbW\t3\x86\x08\x14\x17\xceS:c\x86\x14\xd6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(validation_0, bytes_0)


def test_case_4():
    bytes_0 = b"CL5A\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    bytes_0 = b"\xb8\xe66pYo\x14\xd2\xd5\tv\xfb\x07\x9f\xae|:|\xf0\xce"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    validation_2 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_2.to_either()
    var_3 = validation_2.to_try()
    validation_2.map(var_3)


def test_case_8():
    bytes_0 = b"CL5A\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    int_0 = -1730
    none_type_0 = None
    int_1 = 1804
    var_1 = int_1.__eq__(none_type_0)
    validation_0.bind(int_0)


def test_case_9():
    str_0 = "&:7\x0bU"
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(str_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_0.__eq__(validation_0)
    var_3 = validation_0.__eq__(validation_0)
    var_4 = validation_0.to_box()
    var_5 = module_0.Validation(bool_0, var_1)


def test_case_11():
    bytes_0 = b"CL5A\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    int_0 = -1730
    none_type_0 = None
    var_1 = validation_0.to_lazy()
    none_type_1 = None
    validation_1 = module_0.Validation(int_0, none_type_1)
    var_2 = validation_1.__eq__(none_type_0)
    var_3 = var_1.to_try()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()


def test_case_13():
    bytes_0 = b"CL5A\xd0{"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    float_0 = 1855.709
    validation_1 = module_0.Validation(var_0, float_0)
    validation_2 = module_0.Validation(bytes_0, validation_1)
    var_1 = validation_0.__eq__(validation_2)
    validation_3 = module_0.Validation(float_0, bytes_0)
    var_2 = validation_3.to_maybe()
    var_3 = var_2.to_try()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_0.to_either()
    validation_2 = module_0.Validation(var_1, bytes_0)
    var_2 = validation_0.__str__()
    var_3 = validation_1.__eq__(var_0)
    var_2.ap(var_1)
