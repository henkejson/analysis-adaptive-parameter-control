# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    tuple_0.to_try()


def test_case_1():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = var_0.__eq__(none_type_0)
    var_1.to_either()


def test_case_2():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = False
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    bytes_0 = b"\x89\xa6\x98\xd57\xc5E\x8c\xad\xee\n'@\x08"
    validation_1 = module_0.Validation(bool_0, bytes_0)
    var_2 = validation_1.to_box()
    var_2.is_success()


def test_case_3():
    str_0 = "LZ?EI/ iEH T!"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0, list_0]
    validation_0 = module_0.Validation(list_1, list_1)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    str_0 = "rt`"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.is_success()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "{W$Zz6\nmpvP6DM;i|"
    bool_0 = False
    set_0 = {bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    validation_0.map(str_0)


def test_case_8():
    int_0 = 536
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.bind(none_type_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = False
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.__eq__(validation_0)
    bytes_0 = b"\x89\xa6\x98\xd57\xc5E\x8c\xad\xee\n'@\x08"
    var_3 = var_2.__str__()
    validation_1 = module_0.Validation(bool_0, bytes_0)
    validation_1.ap(var_0)


def test_case_10():
    none_type_0 = None
    list_0 = [none_type_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_maybe()


def test_case_11():
    bytes_0 = b"z\xa8\xef\xbe\xca\xbe\xdf\xb1-\xd6|%\xd0"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bool_0 = False
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_0.to_lazy()
    var_3 = validation_0.__eq__(validation_0)
    bytes_0 = b"\x89\xa6\x98\xd57\xc5E\x8c\xad\xee\n'@\x08"
    validation_1 = module_0.Validation(bool_0, bytes_0)
    var_4 = validation_1.to_box()
    var_3.is_fail()


def test_case_14():
    complex_0 = 1625.24411 - 676.2j
    str_0 = "7Cyuh)'T_Mz^/<%pqp"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(list_0, str_0)
    validation_1 = module_0.Validation(list_0, complex_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_15():
    dict_0 = {}
    bool_0 = True
    dict_1 = {bool_0: bool_0}
    validation_0 = module_0.Validation(dict_1, dict_1)
    var_0 = validation_0.__str__()
    var_0.bind(dict_0)


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_box()
    var_2.is_fail()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_either()
    var_2.map(validation_0)


def test_case_18():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_1.__eq__(validation_0)
    var_1.is_success()
