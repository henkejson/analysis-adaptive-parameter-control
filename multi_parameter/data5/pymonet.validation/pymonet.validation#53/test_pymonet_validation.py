# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_1 = validation_1.__eq__(validation_1)
    validation_1.bind(none_type_1)


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bytes_0 = b"\xfa\x9e\x8e\xb8V\xb9\xd6\x8d[\x06"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    str_0 = "Lazy[fn={}, value={}, is_evaluated={}]"
    validation_2 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_2.to_try()
    var_1 = validation_0.is_fail()
    validation_3 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_lazy()
    var_4 = validation_3.is_success()


def test_case_2():
    str_0 = "H6"
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.__str__()
    list_0 = [none_type_0, str_0, str_0, str_0]
    tuple_0 = (list_0,)
    validation_1 = module_0.Validation(tuple_0, list_0)
    var_1 = validation_1.to_either()
    validation_2 = module_0.Validation(tuple_0, str_0)
    validation_2.bind(validation_2)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = True
    set_0 = {bool_0}
    list_0 = []
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_either()
    var_1 = var_0.to_box()
    var_1.ap(set_0)


def test_case_4():
    str_0 = '2Lf}"U?}9M9N)\rg0/{e'
    none_type_0 = None
    str_1 = "{|0[;\x0c(~mii"
    str_2 = "\"^mv\x0c\n)'D\nN"
    dict_0 = {str_2: str_2, str_2: str_2, str_2: str_2}
    list_0 = [dict_0, str_2, str_2, str_2]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(str_1)
    var_2 = var_1.__eq__(none_type_0)
    validation_1 = module_0.Validation(str_0, str_1)
    dict_0.is_fail()


def test_case_5():
    str_0 = "1-"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_6():
    bool_0 = True
    bytes_0 = b"\xd3\xd0\xe1"
    dict_0 = {bool_0: bytes_0, bytes_0: bool_0, bool_0: bool_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    validation_0.to_maybe()


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    int_0 = -2471
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(int_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(none_type_0)


def test_case_10():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_1 = validation_1.__eq__(validation_1)
    validation_1.ap(bool_0)


def test_case_11():
    int_0 = -2227
    bytes_0 = b";\xc1C\xf9\xda"
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_box()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    var_3 = var_1.bind(none_type_0)
    var_4 = var_1.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.ap(validation_1)


def test_case_13():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_lazy()
    validation_1 = validation_0.to_maybe()
    var_1 = validation_1.__eq__(dict_0)
    module_1.object(*none_type_0)


def test_case_14():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    none_type_1 = None
    validation_1 = module_0.Validation(var_0, none_type_1)
    var_1 = validation_0.__eq__(validation_1)
    validation_1.bind(none_type_1)
