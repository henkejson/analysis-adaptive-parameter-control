# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = module_1.object()
    var_1.is_success()


def test_case_1():
    float_0 = 240.79807798726148
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(float_0)
    var_0.to_lazy()


def test_case_2():
    str_0 = "\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_lazy()
    var_0.to_try()


def test_case_3():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_1 = module_0.Validation(list_0, list_0)
    var_0 = validation_1.to_either()
    var_0.map(list_0)


def test_case_4():
    bytes_0 = b"\xab\xe7o\xb2\xbd'\xe9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_either()
    var_0.is_success()


def test_case_5():
    none_type_0 = None
    none_type_1 = None
    dict_0 = {none_type_1: none_type_1, none_type_1: none_type_1}
    validation_0 = module_0.Validation(none_type_1, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__str__()
    var_2.to_box()


def test_case_6():
    bool_0 = True
    bool_0.to_box()


def test_case_7():
    bool_0 = False
    var_0 = module_0.Validation(bool_0, bool_0)


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_lazy()
    var_0.is_success()


def test_case_9():
    none_type_0 = None
    float_0 = 1776.12
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.to_lazy()
    validation_0.is_fail()


def test_case_10():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(list_0)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(bool_0)


def test_case_12():
    bytes_0 = b"\xab/ \xf7\x10\xb7\x94\xec\xf0\xe6Y\xee"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bytes_0)
    var_0 = validation_0.is_success()
    validation_0.ap(bytes_0)


def test_case_13():
    str_0 = "U^JIo/-V"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_14():
    bytes_0 = b"\xea\xbb\x0c "
    tuple_0 = (bytes_0, bytes_0, bytes_0)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.to_lazy()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_1.to_try()


def test_case_16():
    bool_0 = True
    str_0 = "s<BXJh"
    validation_0 = module_0.Validation(str_0, bool_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = ()
    validation_1 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_1.__str__()
    var_0.to_lazy()


def test_case_17():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0 = True
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_1 = validation_0.__eq__(validation_1)
    var_0.map(var_1)
