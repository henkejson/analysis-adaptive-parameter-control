# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_0, none_type_1)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_1)
    validation_1 = module_0.Validation(none_type_1, none_type_1)
    var_2 = validation_0.to_box()
    validation_1.__str__()


def test_case_1():
    complex_0 = 95 - 1260j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    validation_0 = module_0.Validation(complex_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()


def test_case_2():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_3():
    bool_0 = True
    bool_0.to_maybe()


def test_case_4():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)


def test_case_5():
    complex_0 = -1723.4359 + 251.898j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_maybe()


def test_case_6():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(none_type_0)
    int_0 = 736
    bytes_0 = b"+\xfd\x9f&\x7f\xd3s\xfb\x02\xa8\xfa(I*\xcfv\r\xee"
    float_0 = -1536.093127
    tuple_0 = (int_0, bytes_0, float_0)
    set_0 = {tuple_0, float_0, tuple_0, float_0}
    validation_1 = module_0.Validation(set_0, float_0)
    validation_1.bind(none_type_0)


def test_case_9():
    str_0 = "Md\\>N"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0}
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(dict_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()


def test_case_11():
    str_0 = "vi}e8aBa;ues[v_^."
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_try()
    var_2 = var_1.__eq__(var_0)
    var_0.to_try()


def test_case_12():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, var_0)
    var_0.bind(validation_0)


def test_case_13():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    validation_0 = module_0.Validation(tuple_0, set_0)
    var_0 = validation_0.to_maybe()
    tuple_0.to_try()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_15():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\xa9~\xf7lP\x1a\x86\xb4"
    bool_0 = False
    validation_1 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_1.__eq__(validation_1)


def test_case_16():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_try()


def test_case_17():
    none_type_0 = None
    none_type_1 = None
    none_type_2 = None
    validation_0 = module_0.Validation(none_type_0, none_type_2)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__eq__(none_type_2)
    validation_1 = module_0.Validation(none_type_2, none_type_1)
    var_2 = validation_0.to_box()
    bool_0 = False
    validation_2 = module_0.Validation(none_type_0, var_2)
    var_3 = var_2.to_try()
    var_4 = validation_0.__eq__(validation_2)
    var_5 = validation_1.__eq__(bool_0)
    validation_3 = module_0.Validation(var_2, validation_1)
    var_4.to_box()


def test_case_18():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_maybe()
    var_2 = var_1.to_try()
    var_2.to_maybe()
