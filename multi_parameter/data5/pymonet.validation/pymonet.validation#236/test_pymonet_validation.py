# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bytes_0 = b"\x0c\xf5\xcda\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_try()


def test_case_1():
    bytes_0 = b"\xdc\xea"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_2():
    bytes_0 = b"\xa4\xce~\x16\x9e\x07n\xa1\x1d\x1c\xa1\x8a\x90\x7f\xe9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_3():
    bytes_0 = b"\x0c\xf5\xcda\xaf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = False
    str_0 = "X0,l{}eh&Szg"
    validation_0 = module_0.Validation(bool_0, str_0)
    validation_1 = module_0.Validation(bool_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(bool_0)


def test_case_6():
    bool_0 = False
    bytes_0 = b"\x8a\xd5\xda\xd8\xe9\x01\x19\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(bool_0)


def test_case_7():
    bool_0 = False
    bool_1 = False
    bool_2 = False
    validation_0 = module_0.Validation(bool_2, bool_2)
    var_0 = validation_0.__eq__(bool_1)
    var_1 = module_0.Validation(validation_0, bool_0)
    var_1.ap(bool_0)


def test_case_8():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()


def test_case_9():
    bool_0 = False
    bool_1 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(bool_0)
    bool_2 = False
    validation_1 = module_0.Validation(bool_2, bool_2)
    var_2 = validation_1.__eq__(bool_1)
    var_2.is_fail()


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_11():
    bool_0 = False
    str_0 = "X0,l{}eh&Szg"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    none_type_1 = None
    var_1 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = validation_0.to_try()
    validation_2 = module_0.Validation(var_3, none_type_0)
    var_4 = validation_0.to_maybe()
    var_5 = var_4.ap(none_type_1)
    validation_3 = module_0.Validation(none_type_1, bool_0)
    var_6 = var_1.to_either()
    var_7 = var_5.to_try()
    validation_3.is_success()


def test_case_12():
    bool_0 = False
    str_0 = "X0,l{}eh&Szg"
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_0.__eq__(validation_1)
    var_1.is_fail()


def test_case_13():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    var_2.is_success()


def test_case_14():
    bool_0 = False
    str_0 = ""
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    none_type_1 = None
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_1)
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_0.map(var_1)


def test_case_15():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    set_0 = set()
    var_0 = validation_0.__eq__(set_0)
    var_1 = validation_0.__str__()
    none_type_0 = None
    none_type_1 = None
    var_2 = validation_0.to_either()
    var_3 = var_2.to_maybe()
    validation_1 = module_0.Validation(none_type_1, bool_0)
    validation_2 = module_0.Validation(none_type_0, none_type_1)
    validation_3 = module_0.Validation(validation_1, var_2)
    var_4 = validation_3.__eq__(validation_2)
    var_4.to_try()
