# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    str_0 = "f+H\t\t3(RE8g"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.is_success()
    validation_1 = module_0.Validation(var_1, var_1)
    var_3 = validation_1.__eq__(validation_0)
    var_4 = var_1.bind(validation_0)
    var_5 = validation_0.is_fail()
    var_4.to_either()


def test_case_1():
    int_0 = 531
    tuple_0 = (int_0, int_0)
    int_1 = 0
    bytes_0 = b"\xcb\x1f\xb4\x13\xbe\xd7O\xda\x12c\x18\t\xb2\xc7%\xd8E\xbd\x18"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(int_1)
    var_0.bind(tuple_0)


def test_case_2():
    str_0 = "V{1.\t\rJl.b\n\x0b~/p-e@o"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = var_1.to_box()
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    validation_1.ap(validation_1)


def test_case_3():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    set_0 = {tuple_0}
    list_0 = [set_0, tuple_0, bool_0, bool_0]
    str_0 = ";,p\tT)b@x9g)7x5Su\\O"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(list_0)
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_4():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    bool_0 = True
    set_1 = {bool_0, bool_0, bool_0}
    bool_1 = True
    bool_2 = True
    tuple_0 = ()
    tuple_1 = (bool_1, bool_2, bool_0, tuple_0)
    list_0 = [set_1, set_1, set_1, tuple_1]
    module_1.object(*list_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    set_0 = set()
    tuple_0 = (set_0,)
    list_0 = [tuple_0, tuple_0, set_0]
    bytes_0 = b"a\xe0\xd0m}\x9ap\xdf\xc1\x1d\xcf\xce\x90\x88\xc9\x1b"
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_1.is_success()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_9():
    bytes_0 = b"\x98&\x90\xff\xce\xc7\x8d\xf0aZ\xd4R\xf1\x1da\xba.-"
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_0.bind(bytes_0)


def test_case_10():
    float_0 = -1914.93
    validation_0 = module_0.Validation(float_0, float_0)
    validation_1 = module_0.Validation(float_0, float_0)
    validation_1.ap(validation_1)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.ap(none_type_0)


def test_case_12():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(int_0)
    var_2 = var_1.to_try()
    var_1.to_either()


def test_case_13():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.to_try()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(var_1, validation_0)
    var_1.bind(var_1)
