# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = 4841.4
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, float_0)
    none_type_1 = None
    validation_1 = module_0.Validation(none_type_1, float_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_2 = module_0.Validation(var_0, var_0)
    var_1 = validation_2.to_box()
    var_2 = var_1.to_either()
    var_3 = var_1.__eq__(var_1)
    validation_1.to_maybe()


def test_case_1():
    str_0 = "9=Ux_K>|<UA')WW{Q?Q"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_0.is_success()


def test_case_3():
    str_0 = ""
    bytes_0 = b"\x1bJ\x948\xec\xfc\\y\xc0\x15\xe2\xe0L\x1e\x1a"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()


def test_case_4():
    str_0 = "f,WP\x0b^N"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    float_0 = 4841.4
    list_0 = [float_0, float_0]
    validation_0 = module_0.Validation(float_0, list_0)
    none_type_0 = None
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(none_type_0)
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(var_1, validation_0)
    var_4 = validation_0.to_box()
    var_5 = validation_0.to_either()
    validation_1.to_either()


def test_case_7():
    tuple_0 = ()
    str_0 = "f,WP\x0b^N"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.map(tuple_0)


def test_case_8():
    bytes_0 = b"\x83\xb2\xd51\xc9a\xab\xd4\x9b\xfa\x88\xf3"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bytes_0)


def test_case_9():
    int_0 = -3230
    bytes_0 = b"\x82\xf3\x19%4\xe3\xa9\x1a"
    list_0 = [int_0, bytes_0]
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(list_0)


def test_case_10():
    float_0 = 4836.337992021399
    list_0 = [float_0]
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.to_try()
    var_4 = var_0.to_lazy()


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    var_0 = validation_0.to_box()
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.__eq__(var_1)
    var_3 = var_1.map(none_type_0)
    var_4 = var_0.__eq__(var_1)
    var_3.to_maybe()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    str_0 = ""
    bytes_0 = b"\x1bJ\x948\xec\xfc\\y\xc0\x15\xe2\xe0L\x1e\x1a"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_14():
    str_0 = ""
    bytes_0 = b"\x1bJ\x948\xec\xfc\\y\xc0\x15\xe2\xe0L\x1e\x1a"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_either()


def test_case_15():
    float_0 = 4841.4
    none_type_0 = None
    none_type_1 = None
    bytes_0 = b"\x01X\xbb#8\xca\xacaLh\xc4\x08t\xf5Na\x85"
    validation_0 = module_0.Validation(none_type_1, bytes_0)
    int_0 = 0
    validation_1 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(int_0, var_0)
    validation_1.is_fail()


def test_case_16():
    int_0 = 1474
    str_0 = ""
    str_1 = "tU0bEwCk\nMcx\nQR"
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.__str__()
    var_0.bind(str_1)


def test_case_17():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.map(set_0)
