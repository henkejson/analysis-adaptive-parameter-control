# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_lazy()


def test_case_1():
    bytes_0 = b"\x15\x9f^\xde\x83\x831"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xdc\xf8\xeem"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = 19
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_5():
    int_0 = -2
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(validation_0)


def test_case_7():
    int_0 = -8
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(validation_0)


def test_case_8():
    bytes_0 = b"\x966\x1d\x8f\xf3\x07\x95\xae\xa3\xbe\x11u\xb8\x00\xd4\xc7q"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_9():
    int_0 = 40
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(int_0, int_0)


def test_case_10():
    int_0 = -4
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.__str__()
    var_3.to_box()


def test_case_12():
    int_0 = 19
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    var_0.ap(set_0)


def test_case_14():
    bytes_0 = b'\x9c\xb15\xb7\x82"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_15():
    int_0 = -1959
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_2 = var_1.__eq__(dict_0)


def test_case_17():
    int_0 = 685
    validation_0 = module_0.Validation(int_0, int_0)
    set_0 = set()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_2 = module_0.Validation(validation_1, set_0)
    validation_3 = module_0.Validation(bool_0, validation_1)
    var_0 = validation_3.__eq__(validation_1)
    validation_1.to_either()


def test_case_18():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.ap(set_0)
