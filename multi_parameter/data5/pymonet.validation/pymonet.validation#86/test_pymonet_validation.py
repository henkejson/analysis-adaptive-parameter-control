# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    bytes_0 = b"\xf9A'?\xb4"
    str_0 = "5tWh'n[!hr\"$Q9'm<)l"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"\xf9A'?\xb4"
    str_0 = "5tWh'n[!hr\"$Q9'm<)l"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_0.__str__()


def test_case_2():
    str_0 = '9?"\n14Twmu7'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    bytes_0 = b"(@\xd0\xf5a{X\xbch\xcd"
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = bytes_0.__eq__(var_1)
    var_3 = var_0.bind(validation_0)
    validation_1 = module_0.Validation(var_0, var_0)
    validation_1.is_success()


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\xf9A'?\xb4"
    str_0 = "5tWh'n[!hr\"$Q9'm<)l"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_1 = None
    validation_1 = module_0.Validation(bytes_0, none_type_1)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(none_type_0)


def test_case_4():
    bytes_0 = b"\xef\x80VR"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    bytes_0 = b"h\xf7msQq~\xda\x9c\xfcy\x88}'\xc7Q\xe5p\xa4"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, bool_0)
    validation_0.map(bytes_0)


def test_case_7():
    float_0 = -1632.6
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    tuple_0 = (float_0,)
    validation_0.bind(tuple_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(validation_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"N"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, var_0)
    var_1 = validation_1.to_box()
    var_2 = var_1.to_try()
    var_0.to_maybe()


def test_case_10():
    float_0 = -1632.6
    str_0 = "`h\rFs\nm5Va|6yz{J\t>;"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_lazy()
    var_3 = var_0.to_either()
    var_4 = var_2.bind(float_0)
    list_0 = [str_0]
    var_5 = validation_0.__eq__(list_0)
    var_4.is_success()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_1.to_box()


def test_case_13():
    bytes_0 = b"\xef\x80VR"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_15():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_16():
    float_0 = -1603.4696063144315
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    str_0 = "^Q.#\x0b*Bq\x0b9Aqz"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.__eq__(validation_1)
    var_1 = validation_1.__eq__(float_0)
    var_2 = validation_1.to_either()
    var_3 = validation_1.to_maybe()
    var_4 = validation_1.to_lazy()
    var_5 = validation_1.is_fail()
    var_6 = validation_1.__eq__(validation_0)
    var_7 = validation_1.__str__()
    var_4.is_success()
