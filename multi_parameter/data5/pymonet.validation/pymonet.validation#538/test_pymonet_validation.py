# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = '"6vGhsEm:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.to_either()
    var_2 = var_0.__eq__(validation_1)
    var_3 = validation_1.__eq__(validation_0)
    var_4 = var_2.__str__()
    var_5 = validation_0.to_box()
    var_5.to_box()


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_3():
    str_0 = "Wb\t3b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_6():
    str_0 = "@"
    list_0 = [str_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_0.is_success()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    str_0 = ""
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.bind(str_0)


def test_case_9():
    float_0 = -2456.1
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(validation_0)


def test_case_10():
    dict_0 = {}
    list_0 = [dict_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_box()
    var_0.to_box()


def test_case_11():
    float_0 = -2456.1
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    str_0 = 'H"39|L83QwN1@6'
    set_0 = {str_0, str_0}
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(list_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_2 = var_1.__eq__(none_type_0)
    var_2.to_maybe()


def test_case_13():
    str_0 = '"6vGhsEm:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    float_0 = 245.0
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = validation_0.__eq__(float_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    var_4 = var_2.to_box()
    validation_2 = module_0.Validation(var_4, str_0)
    validation_1.__str__()


def test_case_14():
    str_0 = '"6vGhsEm:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    complex_0 = 483 - 120.7674j
    var_1 = validation_0.to_either()
    list_0 = []
    validation_1 = module_0.Validation(complex_0, list_0)
    var_2 = validation_1.__eq__(validation_1)
    none_type_0 = None
    var_3 = validation_1.to_maybe()
    var_4 = var_3.__eq__(none_type_0)
    var_5 = var_0.__str__()
    var_2.to_box()


def test_case_15():
    str_0 = '"6vGhsEm:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    float_0 = 245.0
    validation_1 = module_0.Validation(float_0, float_0)
    var_1 = validation_1.__eq__(float_0)
    var_2 = validation_0.__eq__(float_0)
    var_3 = validation_1.__eq__(var_2)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = validation_0.__eq__(float_0)
    validation_2 = module_0.Validation(float_0, var_5)
    var_6 = var_0.__str__()
    var_7 = validation_0.to_either()
    var_8 = var_7.bind(var_4)
    var_9 = var_7.to_box()
    var_10 = var_8.to_box()


def test_case_16():
    bytes_0 = b"\xec\xe0"
    bytes_1 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_1)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_17():
    str_0 = '"6vGhsEm:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_3 = var_2.__eq__(validation_0)
    dict_0 = {}
    validation_1 = module_0.Validation(str_0, dict_0)
    var_4 = validation_1.to_either()
    validation_2 = module_0.Validation(validation_1, var_3)
    var_5 = var_3.__eq__(var_2)
    var_6 = var_0.__eq__(var_0)
    var_7 = var_6.__str__()
    validation_3 = module_0.Validation(var_2, dict_0)
    var_6.to_box()
