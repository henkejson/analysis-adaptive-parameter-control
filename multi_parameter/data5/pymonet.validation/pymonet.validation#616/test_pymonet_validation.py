# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_0.ap(dict_0)


def test_case_2():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.bind(validation_0)
    var_3 = var_2.ap(validation_0)
    var_4 = validation_0.__eq__(var_3)
    var_5 = validation_0.__str__()
    var_2.is_success()


def test_case_3():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(bytes_0)
    validation_0.map(var_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(dict_0, var_1)
    var_2 = validation_0.is_fail()
    none_type_0 = None
    validation_2 = module_0.Validation(var_1, none_type_0)
    var_3 = var_1.bind(var_2)
    var_4 = var_0.__eq__(var_2)
    var_4.to_box()


def test_case_6():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.map(var_0)


def test_case_7():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(set_0)


def test_case_8():
    none_type_0 = None
    bool_0 = False
    bool_1 = True
    validation_0 = module_0.Validation(bool_0, bool_1)
    validation_0.ap(none_type_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_10():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    complex_0 = 2.072 - 106.605j
    list_0 = [complex_0]
    list_1 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_1, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(list_0)


def test_case_12():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(var_0)
    var_3 = validation_0.to_try()


def test_case_13():
    bytes_0 = b"\xf7\xb9\xbb\xfd\xbd4\x92\xfcW\xb0\r!\xefJ0\x13\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.__eq__(var_0)


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = var_0.__str__()
    var_0.to_maybe()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_0.to_maybe()


def test_case_16():
    bool_0 = True
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    var_0.bind(bool_0)


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(tuple_0, var_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = validation_0.is_fail()
    var_3 = var_2.__str__()
    var_3.to_maybe()
