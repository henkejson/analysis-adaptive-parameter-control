# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bytes_0 = b"3\x1b\xad\xfb\x8d\xaa \x85\xb7\xe3s\xcf\xdc\xdb(\xb6\xc3/y"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.__eq__(list_0)
    var_0.to_lazy()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(list_0)
    var_2 = var_0.to_either()
    var_3 = validation_0.to_either()
    var_4 = var_0.to_either()
    var_0.is_fail()


def test_case_2():
    bytes_0 = b"Ig\x10\xf2\x8f\x9a\xd0Cl\xf1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_3():
    bytes_0 = b"3\x1b\xad\xfb\x8d\xaa \x85\xb7\xe3s\xcf\xdc\xdb(\xb6\xc3/y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__eq__(validation_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = 2344
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(int_0)


def test_case_8():
    bool_0 = True
    bytes_0 = b"3\x1b\xad\xfb\x8d\xaa \x85\xb7\xe3s\xcf\xdc\xdb(\xb6\xc3/y"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    list_0 = [bytes_0, bytes_0, none_type_0]
    var_0 = validation_1.to_maybe()
    var_1 = var_0.__eq__(list_0)
    var_2 = validation_1.__eq__(validation_1)
    validation_1.bind(var_1)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(bool_0)


def test_case_10():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_11():
    complex_0 = -283.3261 - 3153.117385j
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_0.ap(complex_0)


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_13():
    bool_0 = True
    bytes_0 = b"3\x1b\xad\xfb\x8d\xaa \x85\xb7\xe3s\xcf\xdc\xdb(\xb6\xc3/y"
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    var_1 = validation_1.__eq__(validation_0)
    validation_1.map(none_type_0)


def test_case_14():
    bytes_0 = b"3\x1b\xad\xfb\x8d\xaa \x85\xb7\xe3s\xcf\xdc\xdb(\xb6\xc3/y"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    bytes_0.to_try()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__eq__(list_0)
    var_2 = var_0.to_either()
    var_3 = validation_0.to_either()
    var_4 = validation_0.to_maybe()
    var_5 = var_0.to_either()
    var_0.is_fail()
