# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = 'gE"zu8^.n^w'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.to_box()
    validation_0.ap(validation_0)


def test_case_1():
    str_0 = 'gE"zu8^.n^w'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    bool_0 = True
    var_1 = validation_0.__eq__(bool_0)
    var_0.to_lazy()


def test_case_2():
    bytes_0 = b"\x1f\x82\xa4\xd3\xf1\x15\xc8\x08\xbc\x7f\\|\xeb\xe71\xeb\xc5\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_2 = var_1.__str__()
    var_2.to_box()


def test_case_3():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    var_2 = var_0.to_box()
    var_3 = var_2.to_lazy()
    var_3.to_lazy()


def test_case_4():
    bytes_0 = b"! \x19\xf4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    int_0 = 2076
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    float_0 = -2948.0297
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.map(float_0)


def test_case_8():
    str_0 = "58H'-GcZ^pD"
    int_0 = -455
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.bind(str_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_2 = var_0.to_box()
    var_1.to_maybe()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = var_2.to_lazy()
    var_4 = var_3.to_try()
    var_1.to_maybe()


def test_case_12():
    str_0 = "\n7hk@Z"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    int_0 = -169
    bool_0 = False
    var_1 = validation_0.__eq__(bool_0)
    validation_1 = module_0.Validation(int_0, var_0)
    var_2 = validation_1.__eq__(validation_1)
    var_3 = validation_1.__eq__(validation_1)
    var_4 = validation_0.to_either()
    var_5 = validation_1.to_maybe()
    validation_1.ap(int_0)


def test_case_13():
    str_0 = "\n7hk@Z"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    int_0 = -169
    bool_0 = False
    var_1 = validation_0.__eq__(bool_0)
    validation_1 = module_0.Validation(int_0, var_0)
    var_2 = validation_0.__eq__(validation_1)
    var_3 = var_2.__eq__(validation_0)
    var_4 = var_1.__eq__(str_0)
    var_2.to_box()


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_either()
