# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bytes_0 = b"\x0c\x03)9\xd6\xef\xeb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bool_0)
    var_0.to_either()


def test_case_1():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    validation_1 = module_0.Validation(bool_0, bool_0)
    bool_1 = False
    int_0 = 3297
    validation_2 = module_0.Validation(var_0, bool_1)
    var_2 = validation_1.__eq__(int_0)
    var_3 = validation_0.to_lazy()
    var_2.ap(bool_0)


def test_case_2():
    bytes_0 = b"]}B\xb2\xaeU\xcc\xec\xe9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.bind(bytes_0)


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    validation_0.bind(var_1)


def test_case_4():
    none_type_0 = None
    int_0 = 3297
    int_1 = 3297
    str_0 = '\x0b]-c1=j"L\x0bYD2zd'
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.__eq__(int_1)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_0.ap(none_type_0)


def test_case_5():
    none_type_0 = None
    set_0 = set()
    bytes_0 = b"\x91\xf9\xfcl\x03\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.map(set_0)
    var_2 = var_1.bind(none_type_0)
    var_2.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    str_0 = "ImmutableList{}"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    none_type_0 = None
    int_0 = 3297
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(int_0)


def test_case_10():
    str_0 = "?\nT4aO$\\v:\x0cAa"
    bool_0 = False
    tuple_0 = (str_0, str_0, bool_0)
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(tuple_0)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.ap(var_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_13():
    int_0 = 836
    bool_0 = False
    bool_1 = True
    bool_2 = False
    tuple_0 = (int_0, bool_0, bool_1, bool_2)
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(bool_0, validation_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_either()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    str_0 = "PGZ4H:\rR~NHcI"
    validation_1 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_1.__eq__(none_type_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.is_success()
