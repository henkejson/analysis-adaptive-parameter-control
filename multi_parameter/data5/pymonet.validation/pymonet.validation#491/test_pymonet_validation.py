# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    bool_0.is_fail()


def test_case_2():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__str__()
    var_0.bind(validation_0)


def test_case_3():
    bytes_0 = b"\x96\n\x9bQ\xe1\xf5]4\xa4<\xc8\xf4\xcf"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\x0f\xa8J\xf2\xe1\xc43\x8f\x9c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.ap(none_type_0)
    var_1.is_success()


def test_case_5():
    none_type_0 = None
    str_0 = "poMm\tWMBgS |0vt\t4b"
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(str_0)
    var_2 = var_1.to_either()
    validation_1 = module_0.Validation(var_1, var_1)
    validation_1.bind(none_type_0)


def test_case_6():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    str_0 = "0>m)Sh@,%p<\nT!"
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.is_fail()
    var_0.to_either()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bool_0)
    validation_0.map(var_0)


def test_case_10():
    none_type_0 = None
    str_0 = "\n        Two Lazy are equals where both are evaluated both have the same value and constructor functions.\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    validation_0.ap(none_type_0)


def test_case_11():
    bytes_0 = b"\x90\x1d\xbf\x8a%'\x97\xe8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.is_fail()


def test_case_12():
    str_0 = "poMm\tWMBgS |0vt\t4b"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.bind(str_0)
    var_2 = var_1.to_either()
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_3 = validation_0.to_lazy()


def test_case_13():
    set_0 = set()
    tuple_0 = (set_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.to_try()
    var_2.to_try()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_16():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    str_0 = " ;mqd\n"
    none_type_0 = None
    validation_1 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = validation_1.to_lazy()
    var_2 = validation_0.__eq__(validation_1)
    var_2.to_lazy()
