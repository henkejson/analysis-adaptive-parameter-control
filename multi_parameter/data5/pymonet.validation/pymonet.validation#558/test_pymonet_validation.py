# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_1():
    float_0 = 309.458676
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.is_success()


def test_case_2():
    str_0 = '0bq[GMHU"+B;Ocf@I&[R'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_1.to_lazy()


def test_case_3():
    str_0 = "^(b)\ta@ZMj-N\t"
    set_0 = {str_0}
    none_type_0 = None
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(set_0)
    var_1.is_fail()


def test_case_4():
    int_0 = 722
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    bytes_0 = b"o3)\x124h\xc4\xd6\x0e\x93lE:'\xdaj"
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(bytes_0)


def test_case_6():
    object_0 = module_1.object()
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    bytes_0 = b".\xd4F\xd4\xd1P\xe0\xa1\x9c\x0fm\xd9\xffk\x19\x84\xe8\xa7R"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(list_0)


def test_case_7():
    set_0 = set()
    str_0 = "Max[value={}]"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(set_0)


def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_9():
    bytes_0 = b"%\xf1t\xe2A\xff.\xce\x05\x9e\x1a\xc6'4"
    bool_0 = False
    validation_0 = module_0.Validation(bytes_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_10():
    none_type_0 = None
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.bind(none_type_0)
    var_3.is_success()


def test_case_11():
    none_type_0 = None
    tuple_0 = ()
    list_0 = [none_type_0, none_type_0, tuple_0]
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_lazy()
    var_3 = var_0.__eq__(var_0)
    var_4 = var_0.to_lazy()
    var_5 = validation_0.to_maybe()
    var_6 = validation_0.to_try()
    var_3.ap(none_type_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    int_0 = 329
    validation_1 = module_0.Validation(int_0, int_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.__str__()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.__str__()
    var_0.to_either()


def test_case_14():
    none_type_0 = None
    list_0 = []
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_2 = var_0.__eq__(var_1)
    var_3 = validation_0.to_lazy()
    var_4 = var_3.to_maybe()
    var_5 = var_3.to_try()
    var_2.ap(list_0)


def test_case_15():
    none_type_0 = None
    str_0 = "L0(j{x<"
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.is_success()
