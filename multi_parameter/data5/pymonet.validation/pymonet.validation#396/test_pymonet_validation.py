# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = -1282
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_0.ap(set_0)


def test_case_2():
    bytes_0 = b"I\xf2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_0.bind(bytes_0)


def test_case_3():
    list_0 = []
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, list_0)
    complex_0 = 3870.9 + 239.4j
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_1.to_maybe()
    var_0.ap(complex_0)


def test_case_4():
    int_0 = -732
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_try()


def test_case_6():
    int_0 = -619
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(bool_0)


def test_case_8():
    int_0 = 642
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_9():
    int_0 = -88
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.ap(validation_0)


def test_case_10():
    int_0 = 3138
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_box()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_maybe()


def test_case_13():
    bytes_0 = b"$\xdd\xb7M\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()


def test_case_14():
    str_0 = "vY("
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    none_type_0 = None
    str_0 = "i(%>O:I^wqpqy`k("
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()


def test_case_16():
    int_0 = -838
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_try()


def test_case_17():
    str_0 = ""
    set_0 = {str_0, str_0}
    bool_0 = False
    tuple_0 = (set_0, str_0, str_0, bool_0)
    validation_0 = module_0.Validation(tuple_0, str_0)
    var_0 = validation_0.to_either()
    int_0 = 2875
    validation_1 = module_0.Validation(int_0, int_0)
