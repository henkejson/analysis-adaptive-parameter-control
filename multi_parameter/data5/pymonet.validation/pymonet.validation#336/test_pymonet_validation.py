# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.__eq__(var_0)
    validation_1 = module_0.Validation(var_0, var_0)
    dict_0 = {}
    validation_2 = module_0.Validation(dict_0, dict_0)
    var_2 = validation_1.to_box()
    var_1.ap(validation_2)


def test_case_1():
    str_0 = "B \rEjx3o`"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.__str__()


def test_case_2():
    str_0 = "{ab\\UYgzrhBF"
    validation_0 = module_0.Validation(str_0, str_0)
    float_0 = 663.47601
    validation_1 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_maybe()
    validation_1.to_maybe()


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_box()
    var_1 = validation_0.__str__()


def test_case_5():
    str_0 = "B \rEjx3o`"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.is_fail()
    var_4 = validation_0.__str__()


def test_case_6():
    int_0 = -2309
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.map(int_0)


def test_case_7():
    set_0 = set()
    bool_0 = True
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.bind(bool_0)


def test_case_8():
    bytes_0 = b"\x80\xa8"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.ap(validation_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\x85\xe4 \xdf\r\xa9>\xae\x9b+\x92H/\x94\xef\x85\x03"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    bytes_0 = b'\x91\xb7\xb4\xa3i\x8c\xe1=\xf2d0n7\x12\xeaV"'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bytes_0)
    var_1.to_either()


def test_case_12():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_success()
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_14():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    validation_1 = module_0.Validation(set_0, set_0)
    var_2 = var_1.map(set_0)
    validation_0.bind(var_1)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_0.to_lazy()


def test_case_16():
    str_0 = "{ab\\UYgzrhBF"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(str_0)
    var_2 = validation_0.__eq__(validation_1)
    float_0 = 663.47601
    validation_2 = module_0.Validation(float_0, float_0)
    var_3 = validation_0.to_maybe()
    validation_2.is_fail()
