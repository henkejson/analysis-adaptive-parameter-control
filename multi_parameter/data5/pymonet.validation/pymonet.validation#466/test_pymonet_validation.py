# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.map(none_type_0)


def test_case_1():
    bytes_0 = b"8\xefD\x81i"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.ap(var_0)


def test_case_2():
    none_type_0 = None
    tuple_0 = ()
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    tuple_0.to_box()


def test_case_3():
    str_0 = ">>f5u[\x0b-(H@ngo\x0bybATx"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_4():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = var_1.ap(str_0)
    validation_0.bind(validation_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_8():
    bytes_0 = b"\xa2\x14\xfb\xa31\x99\xbe\x0e"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(none_type_0)
    var_2.bind(bytes_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_10():
    bytes_0 = b"\xa2\x14\xfb\xa31\x99\xbe\x0e"
    bytes_1 = b"\x07\x0c\x040\xad\xe1\x87"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_box()
    var_3 = validation_0.__eq__(none_type_0)
    var_3.bind(bytes_0)


def test_case_11():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    str_0.to_maybe()


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_fail()


def test_case_13():
    str_0 = "ImmutableList[T]"
    validation_0 = module_0.Validation(str_0, str_0)
    str_1 = "2yF>Ipe^@Kjk <@1^bA"
    validation_1 = module_0.Validation(validation_0, str_1)
    var_0 = validation_0.is_success()
    var_1 = validation_1.__eq__(validation_0)
    validation_1.ap(validation_0)
