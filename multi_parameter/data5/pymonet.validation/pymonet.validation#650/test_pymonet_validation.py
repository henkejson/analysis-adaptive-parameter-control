# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = "E\n^"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_lazy()
    var_2 = validation_0.to_maybe()


def test_case_2():
    str_0 = "\n        Return resolved Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: resolved Task\n        :rtype: Task[Function(_, resolve) -> A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    var_1 = validation_0.__eq__(none_type_0)
    validation_0.is_fail()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_7():
    str_0 = "\n        Return resolved Task with stored value argument.\n\n        :param value: value to store in Task\n        :type value: A\n        :returns: resolved Task\n        :rtype: Task[Function(_, resolve) -> A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(str_0)
    bytes_0 = b":7\xac\xbe\x84\xaeu\x9f\xf79LL\xd1\x0e<\x99V\x88\xab"
    validation_0.bind(bytes_0)


def test_case_8():
    bytes_0 = b"_\xd4\xb6\xd8\xbdc#\\\xba)\xe1"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    set_0 = {bytes_0}
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_lazy()
    var_2 = var_1.to_either()
    validation_1.ap(var_2)


def test_case_9():
    str_0 = "E\n^"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_1.map(var_0)


def test_case_10():
    bytes_0 = b"Bh0\x882\x9eU\x10\xd6\xa4\xc9\xd6\xf5\xea|\x1e\x16"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_try()
    var_0.is_fail()


def test_case_11():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_1)
    validation_1.to_maybe()


def test_case_12():
    str_0 = "E\n^"
    set_0 = set()
    validation_0 = module_0.Validation(str_0, set_0)
    none_type_0 = None
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b":7\xac\xbe\x84\xaeu\x9f\xf79LL\xd1\x0e<\x99V\x88\xab"
    var_2 = validation_0.__eq__(bytes_0)
    var_3 = validation_0.to_maybe()


def test_case_13():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, set_0)
    validation_1.map(none_type_0)
