# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__eq__(none_type_0)
    var_1.bind(none_type_0)


def test_case_1():
    bytes_0 = b"_\xb4\xce\xf5\x17\x0bwWp\xaf\x10F\xae23\x02\xc5\xbfax"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_1.is_fail()


def test_case_2():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = var_1.bind(bool_0)


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    float_0 = -1331.010559
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_fail()


def test_case_5():
    int_0 = 1074
    tuple_0 = (int_0,)
    validation_0 = module_0.Validation(tuple_0, int_0)
    validation_0.map(int_0)


def test_case_6():
    int_0 = 2666
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.bind(var_0)


def test_case_7():
    bool_0 = True
    int_0 = 4031
    set_0 = {int_0, int_0, int_0, int_0}
    bool_1 = True
    validation_0 = module_0.Validation(bool_0, set_0)
    validation_0.ap(bool_1)


def test_case_8():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_box()
    var_3 = var_2.__str__()
    var_3.to_box()


def test_case_9():
    float_0 = -3094.106
    int_0 = 1042
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    bytes_0 = b"p\x17L\xc0q@i"
    bool_0 = True
    tuple_0 = (float_0, int_0, bytes_0, bool_0)
    int_1 = -2423
    validation_1 = module_0.Validation(int_1, int_1)
    var_1 = validation_1.__eq__(tuple_0)
    validation_1.is_fail()


def test_case_10():
    int_0 = 518
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    list_0 = []
    validation_1 = module_0.Validation(list_0, list_0)
    var_2 = validation_1.is_success()
    var_2.to_either()


def test_case_11():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_try()
    var_0.is_success()


def test_case_12():
    bool_0 = True
    int_0 = 4031
    set_0 = {int_0, int_0, int_0, int_0}
    float_0 = 1240.9015
    var_0 = bool_0.__eq__(float_0)
    validation_0 = module_0.Validation(set_0, set_0)
    var_1 = validation_0.to_maybe()
    var_1.is_success()


def test_case_13():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(bool_0, var_0)
    bytes_0 = b"\x90\xd4\xb2\xa0`\x7f6.A0\xaa\xfbb\xac\xde\x7f5"
    validation_0.ap(bytes_0)


def test_case_14():
    bytes_0 = b"\xc7\xb7\xfcCw\xfa\x08x\x1f\x0e"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_2 = validation_1.__str__()
    var_2.to_either()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0 = b"\xe0F\xa3K\xde\x9bf>\x9a\xcd"
    validation_1 = module_0.Validation(var_0, bool_0)
    validation_0.ap(bytes_0)


def test_case_16():
    bytes_0 = b"\xe0F\xa3K\xde\x9bf>\x9a\xcd"
    tuple_0 = ()
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_try()
    var_2 = var_0.to_try()
    var_2.to_either()


def test_case_17():
    none_type_0 = None
    bool_0 = False
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, bool_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_lazy()
