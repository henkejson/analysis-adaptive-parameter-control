# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(var_1, var_1)
    var_2 = validation_0.__eq__(var_1)
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, var_2)
    validation_3 = module_0.Validation(var_2, none_type_0)
    validation_3.is_fail()


def test_case_1():
    str_0 = "lu\n H"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_success()


def test_case_3():
    none_type_0 = None
    bytes_0 = b"\xe0e\x18\x15\t\x9f"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.__str__()
    var_3.to_maybe()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = "3t?Bfx\\yQf9}?^b"
    int_0 = 1813
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_0.bind(int_0)
    var_3 = var_2.to_box()
    validation_0.map(var_1)


def test_case_7():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_8():
    float_0 = -1026.611
    bytes_0 = b"\xfdSp\xd3\xe9\x10\x12\xd8\x98\xea\x11\xaf\x96\xf1\x81"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.ap(float_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    bytes_0 = b"\xe0e\x18\x15\t\x9f"
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(none_type_0, set_0)
    var_0 = validation_0.to_box()
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_1 = validation_1.to_maybe()
    var_2 = validation_1.to_either()
    var_3 = validation_0.__str__()
    var_4 = validation_1.to_maybe()
    var_3.ap(var_3)


def test_case_10():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    validation_0.to_try()


def test_case_11():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    var_2 = validation_0.to_either()
    var_3 = var_0.map(none_type_1)
    validation_2 = module_0.Validation(var_0, validation_0)
    validation_3 = module_0.Validation(var_1, none_type_1)
    var_4 = var_3.bind(validation_3)
    validation_3.to_either()


def test_case_12():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_maybe()
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(validation_2)
    var_1.is_fail()


def test_case_13():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_maybe()


def test_case_14():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()
    var_2 = module_1.object()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    none_type_1 = None
    var_3 = validation_0.to_either()
    var_4 = var_1.map(none_type_1)
    validation_2 = module_0.Validation(var_1, validation_0)
    validation_3 = validation_0.to_try()
    var_5 = var_4.bind(validation_3)
    var_1.is_fail()
