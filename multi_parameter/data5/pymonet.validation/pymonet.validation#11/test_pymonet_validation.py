# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = var_0.__str__()
    var_3 = validation_0.is_success()


def test_case_1():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.__str__()
    var_3.is_success()


def test_case_2():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_3():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(bytes_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.__str__()
    var_3.is_success()


def test_case_4():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = True
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xa9\xee\x88\xbe\xc6\xee^\xd5E\xf4\x96\xf0\xc3\x87\x03\xa8c<\xb48"
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    validation_0.map(none_type_0)


def test_case_8():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(bool_0)


def test_case_9():
    none_type_0 = None
    float_0 = 1063.4
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(none_type_0)


def test_case_10():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_box()
    var_0.is_fail()


def test_case_11():
    int_0 = -532
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    validation_0.to_either()


def test_case_12():
    int_0 = -423
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_13():
    int_0 = -423
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_14():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    bytes_0 = b"\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.map(var_0)
