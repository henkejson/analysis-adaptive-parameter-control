# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    int_0 = -666
    complex_0 = -1188.9 + 3746.288j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.__eq__(int_0)
    var_1 = var_0.__eq__(bool_0)
    var_1.is_fail()


def test_case_1():
    tuple_0 = ()
    none_type_0 = None
    bool_0 = False
    list_0 = [tuple_0, none_type_0, tuple_0, bool_0]
    validation_0 = module_0.Validation(tuple_0, list_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(none_type_0, bool_0)
    validation_1.is_success()


def test_case_2():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    tuple_0 = (bool_0, dict_0)
    dict_1 = {}
    validation_0 = module_0.Validation(dict_1, dict_1)
    var_0 = validation_0.to_maybe()
    var_0.ap(tuple_0)


def test_case_3():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(set_0, bool_0)
    var_1 = validation_0.__str__()
    var_2 = validation_1.to_box()
    var_1.bind(set_0)


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_try()
    var_0.is_success()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    complex_0 = -1852.4 - 1592.810836j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.map(none_type_0)


def test_case_8():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    var_3 = var_2.to_maybe()
    var_4 = validation_0.__eq__(validation_0)
    validation_0.bind(var_2)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_10():
    int_0 = -1005
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(var_0)
    var_2 = var_1.to_try()
    validation_1 = module_0.Validation(var_0, var_0)
    var_3 = var_0.bind(none_type_0)
    var_3.to_box()


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_13():
    complex_0 = -383 - 35j
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__eq__(complex_0)
    var_2 = validation_0.to_either()
    var_1.to_either()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, validation_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_either()
    var_4 = var_3.to_maybe()
    var_5 = validation_0.__eq__(validation_0)
    validation_0.bind(var_3)


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_1 = module_0.Validation(list_0, validation_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_either()
    var_3 = validation_1.__eq__(validation_0)
    var_3.bind(list_0)
