# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "5pSE(o\ra (\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = var_1.__eq__(str_0)
    var_3 = validation_0.to_either()
    var_4 = var_3.bind(validation_0)
    var_5 = validation_0.to_maybe()
    var_6 = var_4.to_lazy()
    validation_0.map(var_4)


def test_case_1():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_2():
    str_0 = "Callable[[U], Lazy[U, W]]"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_3():
    str_0 = "5pSE(o\ra (\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.bind(validation_0)
    var_2 = validation_0.to_maybe()
    var_3 = var_1.to_lazy()
    validation_0.map(var_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    float_0 = -1190.74
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.is_success()


def test_case_6():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_fail()


def test_case_7():
    bool_0 = True
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    validation_0.map(bool_0)


def test_case_8():
    str_0 = "\n        Applies the function inside the Box[A] structure to another applicative type.\n\n        :param applicative: applicative contains function\n        :type applicative: Box[B]\n        :returns: new Box with result of contains function\n        :rtype: Box[A(B)]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_0.bind(none_type_0)


def test_case_9():
    str_0 = "5pSE(o\ra (\n"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__eq__(validation_0)
    validation_0.ap(var_1)


def test_case_10():
    float_0 = -1190.74
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    float_0 = -1190.74
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.is_success()


def test_case_14():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    set_0 = {bool_0}
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = validation_1.to_maybe()
    var_1.is_success()


def test_case_15():
    bool_0 = True
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_either()
    none_type_0 = None
    var_1.ap(none_type_0)
