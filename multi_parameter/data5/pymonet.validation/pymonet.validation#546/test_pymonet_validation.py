# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pymonet.validation as module_1


def test_case_0():
    object_0 = module_0.object()
    float_0 = -2574.496095
    validation_0 = module_1.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(object_0)
    var_0.is_fail()


def test_case_1():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    validation_0 = module_1.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__str__()
    var_1.map(none_type_0)


def test_case_2():
    str_0 = 'UD\tS"y%_\x0bK2=\n\x0b)o|8'
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    str_1 = ";{0A;`3"
    tuple_0 = (str_1,)
    list_0 = [var_1, str_0, tuple_0, str_1]
    validation_1 = module_1.Validation(list_0, str_1)
    var_1.ap(tuple_0)


def test_case_3():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1}
    int_0 = -2713
    str_0 = "XFA8szKi"
    tuple_0 = (set_0, int_0, str_0)
    validation_0 = module_1.Validation(bool_1, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = var_1.map(bool_0)
    var_3 = var_2.__str__()


def test_case_4():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    str_0 = "8-2gr[pU@PADTv.iHX=["
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_0.to_either()


def test_case_7():
    none_type_0 = None
    none_type_1 = None
    int_0 = -480
    validation_0 = module_1.Validation(none_type_1, int_0)
    validation_0.map(none_type_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.bind(none_type_0)


def test_case_9():
    list_0 = []
    validation_0 = module_1.Validation(list_0, list_0)
    bool_0 = False
    validation_1 = module_1.Validation(bool_0, bool_0)
    validation_1.ap(validation_1)


def test_case_10():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_0.is_fail()


def test_case_11():
    str_0 = "-\rS"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(str_0)
    set_0 = {str_0, str_0, str_0, str_0}
    bytes_0 = b"\xfaoNk\x03N\xfe\xe9\xe9Z5\xbf\x87\x1a\x011\xb9"
    validation_1 = module_1.Validation(bytes_0, set_0)
    var_2 = validation_1.to_lazy()
    bool_0 = True
    var_3 = var_2.to_try()
    var_4 = validation_1.__eq__(var_1)
    validation_2 = module_1.Validation(validation_0, set_0)
    validation_3 = module_1.Validation(validation_1, validation_2)
    validation_2.map(bool_0)


def test_case_12():
    bytes_0 = b"\x8b#\x06\xf3c\x0f\xaf\x1d^1\xafn\xb6\xc5"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    validation_0.map(bytes_0)


def test_case_13():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    none_type_1 = None
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_1.Validation(var_0, none_type_1)
    validation_1.__str__()


def test_case_14():
    dict_0 = {}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = validation_0.to_maybe()
    var_1.ap(dict_0)


def test_case_15():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_1.Validation(none_type_0, var_0)
    none_type_1 = None
    var_1 = validation_1.__eq__(validation_0)
    validation_2 = module_1.Validation(validation_0, none_type_1)
    validation_3 = module_1.Validation(none_type_1, var_1)
    validation_0.map(validation_0)


def test_case_16():
    none_type_0 = None
    set_0 = set()
    validation_0 = module_1.Validation(set_0, set_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_1 = module_1.Validation(var_0, none_type_0)
    list_0 = []
    validation_2 = module_1.Validation(list_0, none_type_0)
    var_1 = validation_0.__str__()
    validation_3 = module_1.Validation(var_1, validation_0)
    var_2 = validation_0.to_try()
    var_2.map(none_type_0)
