# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xbf\xc0 \xca\xc7a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)


def test_case_1():
    bytes_0 = b"\xbf\xc0 \xca\xc7a"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"\xab\xc0\x81o\xbaa"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()


def test_case_4():
    none_type_0 = None
    bytes_0 = b"\xc8\xf6\xf9\r\xb7\xe7\xa2\x19\x0f\x94\x0et'\xfb`"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    validation_0.map(none_type_0)


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_6():
    bytes_0 = b"\xf2\xf6"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(none_type_0)


def test_case_8():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(set_0)


def test_case_9():
    none_type_0 = None
    bytes_0 = b"\xc8\x88S2k\xcf\x85mU"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(none_type_0)


def test_case_10():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_box()
    var_0.is_fail()


def test_case_11():
    list_0 = []
    str_0 = '+/U"c^HEC\t\x0c?'
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_0.to_lazy()
    var_1 = var_0.ap(list_0)
    var_2 = validation_0.to_box()
    var_2.bind(none_type_0)


def test_case_12():
    bytes_0 = b"\xd8"
    int_0 = 1
    validation_0 = module_0.Validation(bytes_0, int_0)
    validation_0.to_try()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_either()
    var_3.to_either()


def test_case_14():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(set_0)


def test_case_15():
    bytes_0 = b"\x8f\xe4\xe3\xfaD\xb7\x9ah\x80\x04g\xe2:\x9br\xa9\x00\xa9\r\x8b"
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    var_1 = validation_1.__eq__(dict_0)
    validation_1.to_either()


def test_case_16():
    bytes_0 = b"\x8f\xe4\xe3\xfaD\xb7\x9ah\x80\x04g\xe2:\x9br\xa9\x00\xa9\r\x8b"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = validation_0.to_lazy()
    var_1 = validation_1.__eq__(dict_0)
    var_2 = validation_1.to_either()
    var_1.to_either()


def test_case_17():
    bytes_0 = b"\x8f\xe4\xe3\xfaD\xb7\x9ah\x80\x04g\xe2:\x9br\xa9\x00\xa9\r\x8b"
    dict_0 = {bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(var_0, dict_0)
    var_1 = validation_1.__eq__(validation_0)
    var_0.is_success()
