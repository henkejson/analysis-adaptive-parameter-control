# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    int_0.to_box()


def test_case_1():
    none_type_0 = None
    bytes_0 = b'\xde\xee\x82"q\xf6\x93\xf88\xd5O\xa35gIO\xef\xc9N'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_2():
    str_0 = "G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    bytes_0 = b"?\x99\x11G3y\x18 \x15\xc4\xf6C\x80\xd6\x92"
    validation_1 = module_0.Validation(bytes_0, bytes_0)


def test_case_3():
    str_0 = "G"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_2 = var_1.ap(validation_0)
    var_3 = var_0.__str__()
    var_4 = validation_0.__str__()
    var_5 = validation_0.to_box()
    var_4.to_lazy()


def test_case_4():
    str_0 = "}'EtOq<2,<"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_maybe()
    var_1.to_lazy()


def test_case_5():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_6():
    int_0 = -367
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "}'EtOq<2,<"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_8():
    int_0 = -1070
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    validation_0.bind(int_0)


def test_case_9():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(validation_0)


def test_case_10():
    str_0 = "h-\rhC[)s4YPg0'b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_11():
    int_0 = 1
    complex_0 = 5388.915024 + 1702.1j
    none_type_0 = None
    validation_0 = module_0.Validation(complex_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(int_0)
    var_2 = var_1.__str__()
    var_2.to_either()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__str__()
    var_3 = var_1.to_box()
    var_3.is_success()


def test_case_13():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.to_try()


def test_case_14():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_box()
    none_type_0 = None
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_0.is_success()
    var_2.to_box()


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    none_type_0 = None
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = var_1.__str__()
    var_4 = validation_0.to_maybe()
    var_0.ap(none_type_0)


def test_case_16():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    var_1.ap(validation_0)


def test_case_17():
    bytes_0 = b"r\xf1\x82\xf4\x99\xf1\xb2\x0e\x9f=\xda/\x0b\xc7\xba\x80\x0f*"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    int_0 = 2910
    validation_1 = module_0.Validation(int_0, int_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_0.to_maybe()
