# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    int_0 = 1979
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_box()


def test_case_1():
    list_0 = []
    int_0 = 1152
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.to_either()
    list_0.ap(list_0)


def test_case_2():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_lazy()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_lazy()
    var_4 = var_1.to_try()
    var_4.is_fail()


def test_case_3():
    int_0 = 1979
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = 1979
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.__str__()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bool_0 = False
    bytes_0 = b"\xd5?\xf2\x94\xd2"
    str_0 = "=-=JVg YSch_/eF"
    tuple_0 = (str_0,)
    validation_1 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.to_maybe()
    var_3 = var_2.bind(bool_0)
    var_4 = var_3.__str__()
    var_5 = var_2.bind(var_4)
    validation_0.is_fail()


def test_case_6():
    int_0 = 1979
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.map(var_0)


def test_case_7():
    int_0 = 1963
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.bind(int_0)


def test_case_8():
    none_type_0 = None
    dict_0 = {}
    none_type_1 = None
    validation_0 = module_0.Validation(dict_0, none_type_1)
    validation_0.ap(none_type_0)


def test_case_9():
    int_0 = 1970
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_10():
    str_0 = "O*C*|>O[Qv%Rr{??j^"
    str_1 = "Callable[[U], Lazy[U, W]]"
    validation_0 = module_0.Validation(str_1, str_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.map(str_0)


def test_case_11():
    int_0 = 1955
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_12():
    int_0 = 1979
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_13():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(tuple_0)
    var_1 = validation_0.__str__()
    var_1.to_box()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_16():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_1)
    dict_0 = {}
    validation_2 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_1.__eq__(validation_0)
    validation_2.bind(dict_0)
