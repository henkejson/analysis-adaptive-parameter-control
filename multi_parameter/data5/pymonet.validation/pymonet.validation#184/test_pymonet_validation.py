# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    float_0 = -492.182
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    str_0 = "^m^!e!w8/+1%SEyk1?p"
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_1.__str__()
    var_1 = validation_1.is_success()
    var_0.bind(var_1)


def test_case_2():
    bytes_0 = b"\x94\xd1\xb5\xee"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    str_0 = 'OG"}gJ|~~ZY<@(:~C'
    validation_1 = module_0.Validation(str_0, str_0)
    var_0 = validation_1.to_either()
    var_0.to_either()


def test_case_3():
    bytes_0 = b"\x94\x9d|\xee"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_box()
    str_0 = 'OG"}gJ|~~ZY<@(:~C'
    validation_1 = module_0.Validation(str_0, str_0)
    var_1.is_success()


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    int_0 = -1403
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.map(int_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"R\xd0\n\xec1\xc0\xec\xe3"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_10():
    bytes_0 = b"\xa8\x90N\xa3"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_1.to_either()


def test_case_11():
    none_type_0 = None
    float_0 = -492.182
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_1 = validation_0.to_lazy()


def test_case_12():
    bytes_0 = b"\x8c\xde\n"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bytes_1 = b"\xe6\xf4\xb3\xd8\xbc\x8eX\xbc\x91\xf5:\xfb\xfc\xd89"
    set_0 = set()
    validation_1 = module_0.Validation(bytes_1, set_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_1.to_try()
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_maybe()
    var_2.to_either()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\x8c\xde\n"
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__str__()
    var_3 = var_2.__str__()
    var_4 = var_1.to_either()
    var_5 = var_4.__eq__(none_type_0)
    var_6 = var_5.__eq__(none_type_0)
    validation_1 = module_0.Validation(none_type_0, var_2)
    var_7 = var_4.__eq__(var_6)


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_15():
    bool_0 = False
    set_0 = set()
    validation_0 = module_0.Validation(bool_0, set_0)
    var_0 = validation_0.to_either()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    validation_1.to_either()


def test_case_16():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\x8c\xde\n"
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = bytes_0.__str__()
    var_3 = var_2.__eq__(none_type_0)
    bytes_1 = b"\xe6\xf4\xb3\xd8\xbc\x8eX\xbc\x91\xf5:\xfb\xfc\xd89"
    set_0 = set()
    validation_1 = module_0.Validation(bytes_1, set_0)
    var_4 = validation_1.__eq__(none_type_0)
    var_5 = validation_1.to_try()
    var_6 = validation_0.__eq__(validation_1)
    validation_0.to_maybe()
