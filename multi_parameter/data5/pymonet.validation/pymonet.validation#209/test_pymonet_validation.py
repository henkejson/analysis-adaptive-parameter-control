# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "[F^;lH (SerQD`#"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(str_0)
    var_2 = validation_1.to_box()
    var_3 = var_2.to_either()
    tuple_0 = (var_1,)
    validation_2 = module_0.Validation(tuple_0, tuple_0)
    str_0.to_either()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(dict_0)
    var_2.bind(var_2)


def test_case_2():
    bytes_0 = b"\x0b\xbcD'\xbfO\xc7\xf5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_1.__eq__(var_0)
    var_2 = var_1.__str__()
    var_3 = var_0.__eq__(var_2)
    validation_1.bind(validation_0)


def test_case_3():
    str_0 = "6UR"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.map(str_0)
    var_2 = var_1.bind(str_0)
    var_2.is_fail()


def test_case_4():
    int_0 = 1323
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(int_0)


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)


def test_case_6():
    complex_0 = 693.7 + 1253.470365j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.is_success()


def test_case_7():
    str_0 = "[F^;lH (SerQD`#"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(var_0, var_0)
    var_1 = validation_1.__eq__(str_0)
    var_1.is_success()


def test_case_8():
    float_0 = 3000.7
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.map(float_0)


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_10():
    bytes_0 = b"q'q\x8e\xd0E\x1b\xe5\x8f\xbc\x8d\xaddt(L\xa7\xb1\x84"
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_11():
    bytes_0 = b"\xabxm'\xfc\x10\x93G\xaa\x10\xb9mzP\xa5k"
    dict_0 = {bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bytes_0 = b"\x85\xdd\xdc\xb5"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_13():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.__str__()
    var_2 = validation_0.__eq__(dict_0)
    var_3 = validation_0.to_try()
    validation_1 = module_0.Validation(dict_0, var_1)
    var_1.bind(var_1)


def test_case_14():
    bytes_0 = b"p\xbdy\xc1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    validation_0.ap(validation_0)


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_fail()
    var_2 = var_0.to_box()
    var_3 = var_2.__str__()
    var_3.to_try()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.to_box()
    var_2.bind(var_2)


def test_case_17():
    bytes_0 = b"|\xd7}"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.is_fail()
    bytes_1 = b"W\x1fU\x12\xbc!?H\xc5\xe3\t\x1d\x1f\xc72\xdb"
    validation_2 = module_0.Validation(var_1, bytes_1)
    var_2 = validation_2.to_lazy()
    var_3 = var_2.to_maybe()
    var_3.is_fail()


def test_case_18():
    bytes_0 = b"\x0b\xbcD'\xbfO\xc7\xf5"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_either()
    validation_1 = module_0.Validation(var_0, none_type_0)
    var_1 = var_0.__str__()
    var_2 = var_0.__eq__(none_type_0)
    validation_2 = module_0.Validation(none_type_0, var_1)
    var_3 = validation_0.__eq__(validation_2)
    var_4 = var_0.to_box()
    var_3.bind(var_0)
