# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\xa2\x18;\xcae\xd0\xb6\x9c\x10\x01\xff\xeb\xa2\xab\x01\xf7\x9d\xbb"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.to_maybe()


def test_case_1():
    bytes_0 = b"=\xcd\xc7\x88\xf8\xc3\xf0AG)\x97\xb0\xc2\x8d\xa4\xad]\xd5#"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    bytes_0.to_either()


def test_case_2():
    int_0 = -1531
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.bind(int_0)


def test_case_3():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_5():
    int_0 = -1547
    none_type_0 = None
    float_0 = -822.4006
    validation_0 = module_0.Validation(int_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.map(int_0)


def test_case_6():
    none_type_0 = None
    int_0 = 1515
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(none_type_0)


def test_case_7():
    bytes_0 = b"\xa2\x18;\xcae\xd0\xb6\x9c\x10\x01\xff\xeb\xa2\xab\x01\xf7\x9d\xbb"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    validation_0.ap(none_type_0)


def test_case_8():
    bool_0 = True
    bool_1 = True
    bool_2 = False
    validation_0 = module_0.Validation(bool_1, bool_2)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bool_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    bytes_0 = b"\xbc\xca\x06[\xe4/"
    var_0 = validation_0.to_lazy()
    bool_0 = False
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bytes_0, none_type_0)
    list_0 = [bytes_0, bytes_0, validation_1, none_type_0]
    validation_2 = module_0.Validation(list_0, list_0)
    var_3 = validation_2.__str__()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    float_0 = 1119.69304
    bool_0 = True
    list_0 = [float_0, bool_0]
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = var_0.__eq__(bool_0)
    var_2 = validation_0.to_either()
    var_3 = var_0.__str__()
    var_2.is_success()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.is_fail()


def test_case_13():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()


def test_case_14():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.ap(bool_0)


def test_case_15():
    str_0 = "yB^P"
    set_0 = {str_0, str_0, str_0, str_0, str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_box()
    var_4 = validation_0.__eq__(validation_0)
    var_5 = validation_0.__eq__(var_1)
    var_6 = validation_0.__str__()
    var_5.to_box()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_box()
