# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_1():
    none_type_0 = None
    bool_0 = True
    int_0 = 278
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(bool_0)
    var_1 = validation_0.__eq__(var_0)
    var_0.bind(none_type_0)


def test_case_2():
    str_0 = "\n        :returns: False\n        :rtype: Boolean\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_success()


def test_case_3():
    str_0 = ")+qoQt"
    str_0.to_box()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    str_0 = ")+qoQt"
    bytes_0 = b"\t\xed\x18(\x8e\xd9N\xf0+X\xc0\x15\xfd/u6\xb6m\xbc6"
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.is_success()
    var_0.to_box()


def test_case_6():
    int_0 = 111
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = "\n        :returns: False\n        :rtype: Boolean\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.map(validation_0)


def test_case_8():
    bool_0 = False
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"\xb9%\xcb\xb2L\xd86\xbbm\xfc\x81K\xa2\xbb\xfd"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    bool_1 = False
    bytes_0 = b"7\xadt\xda\xae\r\xaa\xa4;\xba\xe3\xa87C\xb2"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_1 = validation_1.to_box()
    var_1.map(bool_1)


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(none_type_0, none_type_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_try()
    var_1.to_lazy()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    bytes_0 = b"\n\x82%\x12\x11+\xc0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_lazy()
    none_type_1 = None
    validation_1 = module_0.Validation(bytes_0, none_type_1)
    validation_2 = module_0.Validation(none_type_1, bytes_0)
    var_3 = validation_2.__eq__(dict_0)
    var_4 = validation_2.to_maybe()
    var_5 = var_3.__eq__(bytes_0)
    var_5.is_fail()


def test_case_15():
    str_0 = ")+qoQt"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.ap(str_0)


def test_case_16():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_try()
    validation_0.bind(var_0)


def test_case_17():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_1.__str__()
    var_2 = validation_1.__eq__(dict_0)
    var_3 = validation_1.to_maybe()
    var_4 = validation_1.to_either()
    var_5 = validation_1.to_either()
    bool_0 = False
    validation_2 = module_0.Validation(none_type_0, bool_0)
    bool_1 = True
    bool_1.map(var_4)


def test_case_18():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_1.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_1.to_lazy()
