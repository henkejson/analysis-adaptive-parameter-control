# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.bind(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__str__()
    var_2 = var_0.__str__()
    var_0.to_lazy()


def test_case_2():
    bytes_0 = b"\xf7 "
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(var_0)
    var_2.to_either()


def test_case_3():
    set_0 = set()
    set_0.to_try()


def test_case_4():
    set_0 = set()
    var_0 = module_0.Validation(set_0, set_0)


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_6():
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.is_fail()


def test_case_7():
    str_0 = '*,H \x0b/%"aQ'
    validation_0 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    validation_0.map(none_type_0)


def test_case_8():
    bytes_0 = b"\xb0Gv\xae)\xabE.>\xb5\x96|5O7\xaf\x83]\xbe"
    str_0 = "wJ:MeI,J{"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bytes_0)


def test_case_9():
    float_0 = -1371.8
    str_0 = "\n        If Maybe is empty return default_value, in other case.\n\n        :param default_value: value to return if Maybe is empty\n        :type default_value: Any\n        :returns: value of Maybe or default_value\n        :rtype: A\n        "
    tuple_0 = (float_0, str_0)
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(tuple_0)


def test_case_10():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    var_0 = validation_0.to_box()
    var_0.map(bool_0)


def test_case_11():
    bytes_0 = b"\xf78:\xf1\xd5\xbc$2\xacv\xf3\xa4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_0.to_lazy()


def test_case_12():
    str_0 = "RLd%/+wxp+\x0bWc"
    bytes_0 = b"\xc6r:\x1c\xb9b\xca\xa82+\xa3\xb1\xad\x8cK\xa9\xd9"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(str_0)
    var_1.to_box()


def test_case_13():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_either()
    var_0.to_box()


def test_case_15():
    bytes_0 = b"\xdc"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_lazy()
    validation_0.map(bytes_0)


def test_case_16():
    str_0 = "?oTy2~pb~c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_try()


def test_case_17():
    str_0 = "wJ:MeI,J{"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.__eq__(str_0)
    var_2.to_either()


def test_case_18():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_19():
    str_0 = '*,H \x0b/%"aQ'
    validation_0 = module_0.Validation(str_0, str_0)
    bytes_0 = b"\xf78:\xf1\xd5\xbc$2\xacv\xf3\xa4"
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(var_0, bytes_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_0.bind(var_1)
