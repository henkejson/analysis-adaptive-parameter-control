# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1, bool_1]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.__eq__(bool_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_1.to_lazy()


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.ap(validation_0)
    var_2 = var_1.bind(var_0)
    var_1.is_fail()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.to_maybe()


def test_case_5():
    int_0 = -2040
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    validation_0.is_fail()


def test_case_6():
    str_0 = ""
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(set_0)


def test_case_7():
    bool_0 = True
    str_0 = "I\x0cL3WJ"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.bind(bool_0)


def test_case_8():
    none_type_0 = None
    str_0 = "o=h, =}7cD*&b%\ns"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(none_type_0)


def test_case_9():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = var_0.map(var_0)
    var_3 = validation_0.__eq__(var_0)


def test_case_10():
    int_0 = -889
    list_0 = [int_0, int_0, int_0]
    str_0 = "+bvfx-;IqeL8@"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    var_2.map(list_0)


def test_case_11():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_maybe()
    var_2 = var_0.map(var_0)


def test_case_12():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(var_0)
    var_3 = var_1.to_box()
    var_4 = validation_0.__str__()
    var_2.to_either()


def test_case_13():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_14():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.__eq__(var_0)
    var_3 = var_1.to_box()
    var_4 = var_2.__str__()
    var_5 = validation_0.to_either()
    var_4.to_either()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(validation_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_1.to_maybe()
