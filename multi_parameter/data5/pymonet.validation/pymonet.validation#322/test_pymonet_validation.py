# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    float_0 = -2268.515
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"\x8a\x98\xa6\xed"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_0.to_either()


def test_case_2():
    str_0 = "!?."
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.__eq__(none_type_0)
    var_2 = var_0.__eq__(none_type_0)
    var_3 = validation_0.to_maybe()


def test_case_3():
    str_0 = "!?."
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_either()


def test_case_5():
    str_0 = "!?."
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1 = validation_1.__eq__(none_type_0)
    none_type_1 = None
    validation_2 = module_0.Validation(none_type_1, none_type_1)
    var_2 = validation_2.to_box()
    validation_2.is_fail()


def test_case_6():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    validation_0.map(bool_0)


def test_case_7():
    bytes_0 = b"\x86MM\xba\xf5\x15b\xa6\xac<to"
    int_0 = 1
    validation_0 = module_0.Validation(int_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_8():
    float_0 = -2268.515
    validation_0 = module_0.Validation(float_0, float_0)
    validation_0.ap(float_0)


def test_case_9():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__eq__(bool_0)
    var_1.to_either()


def test_case_10():
    float_0 = -2268.51
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_2.ap(none_type_0)


def test_case_12():
    bytes_0 = b"\xe4z\xa3\x8b\x7f\x0f\xea\xc8W\x07\xcd_\xad\t"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    float_0 = -2268.515
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    str_0 = "!?."
    none_type_0 = None
    none_type_1 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_1, dict_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = var_0.__eq__(none_type_1)
    var_2.to_maybe()


def test_case_15():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(none_type_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_1.is_success()
