# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_1():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    bool_1 = True
    var_1 = var_0.to_either()
    var_2 = validation_0.__eq__(bool_1)
    validation_0.to_try()


def test_case_2():
    bytes_0 = b"\x1a\xc4\x99\xc3\x01\xc2\x8eI\x0ft\xbc\xb2\xb4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_3():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_maybe()
    var_3 = var_1.__str__()
    validation_0.bind(validation_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.is_fail()


def test_case_6():
    int_0 = 3494
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(int_0)


def test_case_7():
    none_type_0 = None
    bytes_0 = b"\x1a\xc4\x99\xc3\x01\xc2\x8eI\x0ft\xbc\xb2\xb4"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(none_type_0)


def test_case_8():
    int_0 = -1746
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(int_0)


def test_case_9():
    bytes_0 = b"\x9a\x86\xebH\x93\xb6\x96C\xf3%\xbf\x90\xc8\xd3\xb2E\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    str_0 = ")KcvzY/`Hi`>k;"
    validation_1 = module_0.Validation(var_0, str_0)
    var_1 = validation_1.__str__()
    var_2 = validation_1.is_fail()
    var_3 = var_2.__eq__(var_2)
    var_4 = validation_0.is_fail()
    validation_1.map(var_2)


def test_case_10():
    bytes_0 = b"|\xe2\xda\xac"
    str_0 = "56;txUd%G0`)3}#9nX/F"
    validation_0 = module_0.Validation(bytes_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(none_type_0)


def test_case_12():
    complex_0 = -891.904885 - 850.50487j
    validation_0 = module_0.Validation(complex_0, complex_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"3\x9f\x82\xa6\xece\xc4\x01\x05\x82\xb7\x06\x8f\x9e9s+\xc9\x1d\x9f"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    var_3 = var_1.__str__()
    var_3.ap(bytes_0)


def test_case_14():
    none_type_0 = None
    bytes_0 = b"3\x9f\x82\xa6\xece\xc4\x01\x05\x82\xb7\x06\x8f\x9e9s+\xc9\x1d\x9f"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bytes_1 = b"|\xe2\xda\xac"
    str_0 = "Haw~FmF|8G;?ceF~^P"
    validation_0 = module_0.Validation(bytes_1, str_0)
    validation_1 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.__eq__(validation_1)
    var_1 = validation_1.to_either()
    validation_2 = module_0.Validation(none_type_0, bytes_0)
    var_1.is_success()


def test_case_15():
    list_0 = []
    dict_0 = {}
    object_0 = module_1.object(*list_0, **dict_0)
    bool_0 = False
    str_0 = 'Q\t"cmp\\y'
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.is_success()


def test_case_16():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.bind(validation_0)


def test_case_17():
    int_0 = 1
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, int_0)
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bytes_1 = b"|\xe2\xda\xac"
    str_0 = "Haw~FmF|8G;?ceF~^P"
    validation_1 = module_0.Validation(bytes_1, str_0)
    validation_2 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_2.is_success()
    var_1 = validation_1.__eq__(validation_2)
    var_2 = validation_2.to_either()
    var_3 = validation_2.to_either()
    validation_3 = module_0.Validation(bytes_0, validation_1)
    validation_1.bind(none_type_0)
