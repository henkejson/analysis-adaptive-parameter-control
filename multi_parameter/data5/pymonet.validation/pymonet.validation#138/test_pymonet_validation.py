# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "Q$My|v~\t168]r8s82eq"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = "F/,nprNLl>9f&?"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    str_0 = "ZvWw:[\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_5():
    str_0 = "ZvW:[\x0b"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()


def test_case_6():
    str_0 = ",mZ#"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.map(str_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.bind(validation_0)


def test_case_8():
    str_0 = "pD7E$|7x?!?\x0cWz];K*"
    list_0 = [str_0, str_0, str_0]
    validation_0 = module_0.Validation(str_0, list_0)
    validation_0.ap(str_0)


def test_case_9():
    bytes_0 = b"\x1b\x12\xb6\x84`{ X"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_10():
    str_0 = "\nq   Immutable list is data structure tMat doesn't allow to mutate instances\n    "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.is_success()


def test_case_12():
    str_0 = 'C<5o[Y"5,/'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_13():
    str_0 = "3"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = validation_0.__eq__(validation_0)
    validation_1.to_maybe()


def test_case_14():
    str_0 = "<*]$!Uq1u=+,XW[Xj#"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_15():
    str_0 = "C'7FsU0EEzC=\r"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_1 = module_0.Validation(validation_0, validation_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()
    var_2 = validation_1.__eq__(validation_0)
    validation_2 = module_0.Validation(var_2, str_0)


def test_case_16():
    bytes_0 = b"E"
    list_0 = []
    validation_0 = module_0.Validation(bytes_0, list_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_17():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_18():
    str_0 = "C'7FsU0EEzC=\r"
    tuple_0 = ()
    validation_0 = module_0.Validation(str_0, tuple_0)
    validation_1 = module_0.Validation(str_0, validation_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.__eq__(var_1)
    validation_1.to_try()
