# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    dict_0 = {}
    str_0 = "J<(>r1U?<Bfm(fL'\x0bk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_maybe()


def test_case_1():
    str_0 = "NX\x0b$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_0.map(validation_0)


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    validation_0.bind(var_0)


def test_case_3():
    int_0 = -258
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    int_0 = -2488
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.__str__()


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    object_0 = module_1.object()
    validation_1 = module_0.Validation(object_0, object_0)
    validation_1.is_fail()


def test_case_6():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_1)
    validation_0.ap(none_type_0)


def test_case_7():
    bytes_0 = b"-\x90\x03dN"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_8():
    set_0 = set()
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(set_0)
    validation_1 = module_0.Validation(var_0, set_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.__eq__(var_1)
    var_0.to_either()


def test_case_9():
    bytes_0 = b"M\x18\xbf\xfc\\P1\xd6\xa1\xeeF\xe7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    set_0 = set()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(set_0)
    validation_2 = module_0.Validation(var_0, set_0)
    var_1 = validation_2.to_lazy()
    var_2 = validation_0.to_lazy()
    var_3 = var_2.to_either()
    var_4 = validation_0.to_either()
    var_5 = var_1.ap(var_4)
    var_6 = validation_1.to_box()
    var_7 = validation_2.__str__()


def test_case_10():
    str_0 = "N\x0b$"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_either()
    validation_1 = module_0.Validation(str_0, var_1)
    validation_1.to_try()


def test_case_11():
    bytes_0 = b"M\x18\xbf\xfc\\P1\xd6\xa1\xeeF\xe7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    set_0 = set()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_2 = module_0.Validation(validation_1, set_0)
    validation_3 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_3.__str__()
    var_1 = validation_3.__eq__(validation_3)
    var_2 = validation_0.to_maybe()
    var_3 = var_2.to_try()
    var_4 = var_3.__eq__(var_0)
    var_5 = validation_0.to_maybe()


def test_case_12():
    dict_0 = {}
    str_0 = "J<(>r1U?<Bfm(fL'\x0bk"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_maybe()
    var_0.map(validation_0)


def test_case_13():
    bytes_0 = b"M\x18\xbf\xfc\\P1\xd6\xa1\xeeF\xe7"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    validation_0 = module_0.Validation(list_0, list_0)
    set_0 = set()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.__eq__(set_0)
    validation_2 = module_0.Validation(var_0, set_0)
    var_1 = validation_2.to_lazy()
    var_2 = validation_0.to_either()
    var_3 = var_1.ap(var_2)
    var_4 = validation_1.to_box()
    var_5 = validation_2.__str__()


def test_case_14():
    dict_0 = {}
    str_0 = ".H'2cC`S\nvv"
    validation_0 = module_0.Validation(str_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_0.to_lazy()
    validation_0.bind(var_2)


def test_case_15():
    str_0 = "kSgX3<#qn"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, validation_0)
    var_1 = validation_0.__eq__(validation_1)
    var_2 = var_1.__str__()
    var_3 = var_1.__eq__(none_type_0)
    var_4 = validation_0.to_either()
    validation_0.map(var_4)


def test_case_16():
    str_0 = "BmmJD3"
    bytes_0 = b"M\x18\xbf\xfc\\P1\xd6\xa1\xeeF\xe7"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(str_0)
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_1 = validation_1.to_lazy()
    var_2 = validation_1.to_either()
    var_3 = validation_1.__str__()
    var_3.to_maybe()
