# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1041
    set_0 = {int_0, int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_0.is_fail()


def test_case_1():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.__eq__(validation_0)
    validation_0.bind(var_1)


def test_case_2():
    str_0 = "2'~\rP-1E?@e<C7"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_3():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    var_1.to_try()


def test_case_4():
    str_0 = "nz5"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(str_0, str_0)
    var_1.to_lazy()


def test_case_5():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    validation_0 = module_0.Validation(object_0, dict_0)
    none_type_0 = None
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_1 = validation_1.__eq__(none_type_0)
    validation_1.is_fail()


def test_case_6():
    str_0 = 'Xy/>i"U+u)GSd+n'
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    tuple_0 = (str_0, str_0, bool_0, validation_0)
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_1.to_maybe()
    var_1 = var_0.__str__()
    bool_1 = True
    validation_2 = module_0.Validation(bool_1, bool_1)
    validation_2.ap(str_0)


def test_case_7():
    bool_0 = True
    var_0 = module_0.Validation(bool_0, bool_0)


def test_case_8():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.__str__()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_10():
    float_0 = 1120.124
    int_0 = 388
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(float_0)


def test_case_11():
    int_0 = 1034
    set_0 = {int_0, int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.to_box()
    var_0.is_fail()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_1.to_either()


def test_case_13():
    str_0 = "\r.(\x0c@xCX"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_2 = validation_0.to_try()
    var_3 = var_2.__str__()
    var_3.to_box()


def test_case_14():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    validation_0 = module_0.Validation(object_0, dict_0)
    var_0 = validation_0.__str__()
    none_type_0 = None
    var_1 = validation_0.to_maybe()
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_2 = validation_1.__eq__(none_type_0)
    validation_1.is_fail()


def test_case_15():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(validation_0, none_type_0)
    var_0 = validation_1.__eq__(validation_0)
    validation_0.to_either()
