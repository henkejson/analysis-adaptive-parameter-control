# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = tuple_0.__eq__(tuple_0)
    validation_1 = module_0.Validation(var_0, var_1)
    var_1.is_fail()


def test_case_1():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    validation_0.bind(validation_0)


def test_case_2():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_3():
    bytes_0 = b"\t\x8a\xe5\xdb){"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.to_maybe()


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    bytes_0 = b"\x9b\xc8PdR\x9b\xd8\x92\xd7Q\xb4\xd1\xee"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.is_success()
    validation_1 = module_0.Validation(validation_0, var_0)


def test_case_6():
    bytes_0 = b"\xda'\x08"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_7():
    str_0 = "\x0cyo*i"
    int_0 = -1299
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(str_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"\x1a\xfb!;>n_\x1b\xb9\xda\xd5\xa8"
    str_0 = "ImmutableList[U]"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    validation_0.ap(bytes_0)


def test_case_10():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    validation_0.to_either()


def test_case_11():
    tuple_0 = ()
    int_0 = -409
    tuple_1 = (tuple_0, int_0, tuple_0)
    validation_0 = module_0.Validation(tuple_1, int_0)
    validation_0.to_try()


def test_case_12():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.__eq__(dict_0)
    var_0.to_box()


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    dict_0 = {}
    var_1 = dict_0.__eq__(dict_0)
    validation_1 = module_0.Validation(dict_0, var_1)
    var_1.is_fail()


def test_case_14():
    bytes_0 = b"\xf8\x13"
    dict_0 = {bytes_0: bytes_0}
    validation_0 = module_0.Validation(dict_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_15():
    bytes_0 = b"\x06r\xac\xf9d\x0b\xc2\t\xb28\x19\x98\x00"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_maybe()
    var_1.is_success()


def test_case_16():
    bytes_0 = b"\xc7x\x10#;`\xa3 J"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_17():
    bytes_0 = b"\xc7x\x10#;`\xa3 J"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_1 = module_0.Validation(bytes_0, var_0)
    var_1 = validation_1.__eq__(validation_0)
    var_2 = var_0.__eq__(var_0)
    var_0.is_fail()
