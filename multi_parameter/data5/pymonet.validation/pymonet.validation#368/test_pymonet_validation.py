# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    int_0 = 0
    list_0 = [int_0]
    validation_0 = module_0.Validation(list_0, int_0)
    var_0 = validation_0.__eq__(bool_0)


def test_case_1():
    str_0 = "EQsm 8fjqY#5}"
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_2 = validation_0.is_fail()
    validation_1 = module_0.Validation(validation_0, var_0)
    var_3 = var_0.map(bool_0)


def test_case_2():
    bytes_0 = b"j"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()


def test_case_3():
    int_0 = -1029
    validation_0 = module_0.Validation(int_0, int_0)


def test_case_4():
    object_0 = module_1.object()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(object_0)


def test_case_5():
    bytes_0 = b"\xe0\x9a\x9e2K\x83T,\xfa\xc1\x18\xf7\t\x02\x06"
    bytes_1 = b"\xec\xe1m\xdc\x91\xc1o"
    validation_0 = module_0.Validation(bytes_1, bytes_1)
    validation_0.bind(bytes_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    validation_0.ap(none_type_0)


def test_case_7():
    complex_0 = 178.843712 - 645.34j
    validation_0 = module_0.Validation(complex_0, complex_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.is_success()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_11():
    dict_0 = {}
    bytes_0 = b"\xdb9\xa6\xaa\x02\xdcgo\xe3\x8b"
    tuple_0 = (bytes_0,)
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_lazy()
    none_type_0 = None
    dict_1 = {}
    var_1 = module_0.Validation(tuple_0, none_type_0)
    var_2 = var_0.ap(var_1)
    var_3 = var_0.to_either()
    validation_1 = module_0.Validation(var_1, dict_1)
    var_4 = var_3.to_maybe()
    int_0 = 1
    validation_2 = module_0.Validation(tuple_0, int_0)
    var_5 = var_4.to_lazy()
    validation_2.is_fail()


def test_case_12():
    list_0 = []
    float_0 = 2705.19514
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.bind(float_0)


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()


def test_case_14():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_15():
    str_0 = "h;eVy`V*@S/H"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_maybe()
    validation_1 = module_0.Validation(var_2, var_2)
    var_4 = var_3.to_box()
    var_5 = validation_0.__eq__(validation_1)
    var_6 = validation_1.to_either()
    validation_1.bind(var_0)
