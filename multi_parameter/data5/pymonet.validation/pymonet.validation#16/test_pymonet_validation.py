# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()
    var_2 = var_1.to_either()
    var_3 = var_2.__str__()
    var_3.to_either()


def test_case_1():
    int_0 = 0
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(int_0)
    var_0.map(none_type_0)


def test_case_2():
    str_0 = "F4U\nO*tr(JQle[\x0bOCjib"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    tuple_0.is_fail()


def test_case_3():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.map(dict_0)


def test_case_4():
    int_0 = 654
    dict_0 = {int_0: int_0}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()


def test_case_5():
    str_0 = "F4U\nO*tr(JQle[\x0bOCjib"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    tuple_0.is_fail()


def test_case_6():
    none_type_0 = None
    var_0 = none_type_0.__eq__(none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_8():
    int_0 = 1089
    set_0 = {int_0, int_0, int_0, int_0}
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(bool_0)


def test_case_10():
    int_0 = 1256
    int_1 = -4064
    validation_0 = module_0.Validation(int_1, int_1)
    validation_0.bind(int_0)


def test_case_11():
    str_0 = "F4U\nO*tr(JQle[\x0bOCjib"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_maybe()
    validation_0.ap(var_0)


def test_case_12():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_0.is_success()


def test_case_13():
    bytes_0 = b"\x94\\\x80\xd8\x16\xf4\x07\x94\x10\x1f(\n\x13c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    tuple_0 = (bytes_0,)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    set_0 = {tuple_0}
    var_2 = validation_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(set_0, none_type_0)
    var_2.to_either()


def test_case_14():
    none_type_0 = None
    str_0 = "F4U\nO*tr(JQle[\x0bOCjib"
    tuple_0 = (str_0,)
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__eq__(none_type_0)
    validation_1 = module_0.Validation(tuple_0, str_0)
    var_2 = validation_0.__eq__(validation_1)
    var_2.to_try()


def test_case_15():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.to_maybe()


def test_case_16():
    bytes_0 = b""
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_try()
    var_0.to_maybe()
