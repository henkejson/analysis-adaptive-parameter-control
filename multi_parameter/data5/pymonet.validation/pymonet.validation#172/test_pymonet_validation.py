# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -636.61
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, float_0)
    var_0 = validation_0.__eq__(float_0)
    var_1 = var_0.__eq__(var_0)
    var_1.to_maybe()


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    tuple_0 = (bool_0, bool_0, list_0, bool_0)
    validation_0 = module_0.Validation(bool_0, tuple_0)
    var_0 = validation_0.__str__()


def test_case_2():
    dict_0 = {}
    bytes_0 = b"l\xbc\x90}k\x00\r:\xb0\\\xa4s\xcdp\xb60\xcd\x8a\xb6J"
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(var_0, dict_0)
    validation_2.ap(bytes_0)


def test_case_3():
    bytes_0 = b"\x02\x9ei;\xec"
    set_0 = {bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(set_0, bytes_0)
    var_0 = validation_0.is_fail()
    int_0 = -886
    bytes_1 = b"\xf1\xab\xd3\xf2\xa1\xbb\x84\n\x1e\xee\xb2$q"
    dict_0 = {int_0: int_0, int_0: int_0, int_0: bytes_1}
    validation_1 = module_0.Validation(int_0, dict_0)
    var_1 = validation_1.to_either()
    var_2 = var_1.to_lazy()
    var_3 = var_2.to_either()
    var_3.is_success()


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    validation_1 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    str_0 = "h.mL[\\&"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.is_success()
    var_2 = validation_0.to_lazy()
    var_3 = validation_0.__str__()
    var_4 = validation_0.is_success()
    var_5 = var_4.__str__()
    var_6 = validation_0.to_maybe()
    var_5.to_try()


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_7():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.is_success()


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    str_0 = "?Nt3P"
    set_0 = {str_0, str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    str_1 = "q"
    bool_0 = True
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_1.map(str_1)


def test_case_10():
    dict_0 = {}
    bytes_0 = b"l\xbc\x90}k\x00\r:\xb0\\\xa4s\xcdp\xb60\xcd\x8a\xb6J"
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(var_0, dict_0)
    var_3 = var_1.__eq__(dict_0)
    float_0 = -516.6
    validation_0.bind(float_0)


def test_case_11():
    bool_0 = True
    float_0 = -636.61
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, float_0)
    validation_1 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    validation_2 = module_0.Validation(float_0, validation_1)
    var_2 = validation_0.__eq__(validation_1)
    validation_2.bind(bool_0)


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    dict_0 = {}
    bytes_0 = b"V\\\xe6(q_\xc2"
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(var_0, dict_0)
    var_3 = var_1.__eq__(dict_0)
    var_4 = validation_0.__str__()
    bytes_1 = b"v\x05\xd3\xec\x16S"
    var_5 = validation_2.is_fail()
    validation_1.bind(bytes_1)


def test_case_14():
    dict_0 = {}
    bytes_0 = b"l\xbc\x90}k\x00\r:\xb0\\\xa4s\xcdp\xb60\xcd\x8a\xb6J"
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.__eq__(dict_0)
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(bytes_0, var_1)
    var_2 = validation_1.to_box()
    validation_2 = module_0.Validation(var_2, var_0)
    var_3 = validation_1.to_box()
    validation_3 = module_0.Validation(validation_1, dict_0)
    var_4 = validation_3.__eq__(validation_0)
    bytes_1 = b"\xc4\xadj,4tEH\xbf\xbd5D\xe5\t\x83\xee"
    validation_2.bind(bytes_1)
