# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0
import builtins as module_1


def test_case_0():
    int_0 = -706
    int_1 = 0
    validation_0 = module_0.Validation(int_0, int_1)
    var_0 = validation_0.__eq__(int_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_2():
    str_0 = "zhZ^\\b$W?w~/qP"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    validation_0.bind(str_0)


def test_case_3():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_try()
    var_1.ap(none_type_0)


def test_case_4():
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_0.is_success()


def test_case_5():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    int_0 = -706
    validation_0 = module_0.Validation(none_type_0, int_0)
    validation_0.is_fail()


def test_case_8():
    bool_0 = False
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.map(bool_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    validation_0 = module_0.Validation(none_type_1, none_type_0)
    validation_0.bind(none_type_0)


def test_case_10():
    object_0 = module_1.object()
    validation_0 = module_0.Validation(object_0, object_0)
    var_0 = validation_0.to_lazy()
    validation_0.ap(object_0)


def test_case_11():
    bool_0 = True
    int_0 = 372
    set_0 = {bool_0, bool_0, int_0, bool_0}
    validation_0 = module_0.Validation(set_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_maybe()
    var_1.is_fail()


def test_case_12():
    int_0 = 1
    str_0 = "6qek^ET_X3"
    none_type_0 = None
    validation_0 = module_0.Validation(str_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(str_0)
    tuple_0 = (int_0, str_0, int_0)
    dict_0 = {tuple_0: tuple_0, str_0: tuple_0, str_0: str_0}
    bool_0 = True
    validation_1 = module_0.Validation(dict_0, bool_0)


def test_case_13():
    bytes_0 = b"\xb0ZC\xc7.7sT1u"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_maybe()
    var_3.bind(bytes_0)


def test_case_14():
    bytes_0 = b"Ey\xc4"
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = " MK/JMR0,} n<3%I-Z)1"
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_box()
    var_2 = var_1.to_maybe()
    var_3 = var_2.__str__()
    var_4 = var_1.to_lazy()
    validation_1 = module_0.Validation(bytes_0, var_3)
    var_5 = validation_1.is_success()
    var_6 = validation_0.to_either()
    var_7 = validation_0.is_fail()
    var_3.to_lazy()


def test_case_15():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(validation_0)
    var_0.to_lazy()


def test_case_16():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    none_type_0 = None
    validation_1 = module_0.Validation(bool_0, none_type_0)
    var_0 = validation_0.__eq__(validation_1)
    var_0.to_lazy()
