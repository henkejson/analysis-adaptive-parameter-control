# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x05r\xf6\x1f\xb4 %\x9b\x01\x97\x08\x84J\xb2"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_1 = module_0.Validation(none_type_0, bool_0)
    var_0 = validation_0.__eq__(none_type_0)
    var_0.to_maybe()


def test_case_2():
    str_0 = "F*eN"
    set_0 = {str_0, str_0, str_0}
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_3():
    str_0 = "lx\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.__str__()


def test_case_6():
    complex_0 = -881 + 1990.419j
    bytes_0 = b"h\xa8\xe2\x98"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    var_0.ap(complex_0)


def test_case_7():
    str_0 = "lx\t"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.map(str_0)


def test_case_8():
    str_0 = "f){p,+oP.;~F"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, str_0)
    validation_0.bind(str_0)


def test_case_9():
    str_0 = "6CMZ<awt7Z%='huT"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(str_0)


def test_case_10():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_1.to_try()
    bytes_0 = b"\x05r\xf6\x1f\xb4 %\x9b\x01\x97\x08\x84J\xb2"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_3 = validation_1.__eq__(none_type_0)
    var_4 = var_3.__str__()
    validation_2 = module_0.Validation(none_type_0, var_3)
    var_5 = validation_1.__eq__(validation_1)
    var_6 = validation_1.__str__()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()


def test_case_12():
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bool_0)
    validation_0.to_try()


def test_case_13():
    float_0 = -126.02354
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    int_0 = -1857
    validation_1 = module_0.Validation(int_0, validation_0)
    var_1 = validation_0.__eq__(float_0)
    validation_1.to_maybe()


def test_case_14():
    str_0 = '2o\rV=)_"`~:'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_15():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    int_0 = -1857
    validation_1 = module_0.Validation(int_0, validation_0)
    var_0 = validation_0.to_either()
    var_0.is_fail()


def test_case_16():
    float_0 = -126.02354
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__eq__(float_0)
    var_1 = validation_0.to_maybe()
    var_2 = validation_0.to_either()
    var_2.is_fail()


def test_case_17():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.to_either()
    var_3 = var_2.to_try()
    bytes_0 = b"\x05r\xf6\x1f\xb4 %\x9b\x01\x97\x08\x84J\xb2"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_2 = module_0.Validation(bool_0, none_type_0)
    validation_0.to_maybe()


def test_case_18():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_either()
    var_2 = var_0.to_maybe()
    var_3 = var_1.to_try()
    validation_1 = module_0.Validation(bool_0, var_0)
    var_4 = var_1.__eq__(var_3)
    var_5 = var_4.__str__()
    validation_2 = module_0.Validation(var_3, var_1)
    var_6 = validation_1.__eq__(validation_2)
    var_5.to_try()
