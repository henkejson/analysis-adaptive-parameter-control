# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b"\x17\xd7z\xea\xaeU\xc6Uf\xf5\x93\xe2\xd7\xc8=\r"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_0.bind(var_0)


def test_case_1():
    bytes_0 = b"\x17\xd7z\xea\xaeU\xc6Uf\xf5\x93\xe2\xd7\xc8=\r"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    bytes_1 = b"sq\xbb\xedC\r\xe78\xff\x8e\t70\xfe\xabx\\j\xb4"
    var_0 = validation_0.__eq__(bytes_1)
    validation_0.to_maybe()


def test_case_2():
    bytes_0 = b"\x17\xd7z\xea\xaeU\xc6Uf\xf5\x93\xe2\xd7\xc8=\r"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.__str__()
    var_2 = var_0.bind(var_0)
    var_3 = validation_0.to_maybe()
    var_3.to_maybe()


def test_case_3():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_4():
    bytes_0 = b"\x17\xd7z\xea\xaeU\xc6Uf\xf5\x93\xe2\xd7\xc8=\r"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_maybe()


def test_case_5():
    int_0 = 832
    none_type_0 = None
    validation_0 = module_0.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_6():
    set_0 = set()
    str_0 = "L-%<"
    list_0 = [str_0]
    list_1 = [list_0]
    validation_0 = module_0.Validation(list_1, list_1)
    validation_0.map(set_0)


def test_case_7():
    bytes_0 = b"\x17\xd7z\xea\xaeU\xc6Uf\xf5\x93\xe2\xd7\xc8=\r"
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    bytes_1 = b"sq\xbb\xedC\r\xe78\xff\x8e\t70\xfe\xabx\\j\xb4"
    validation_0.bind(bytes_1)


def test_case_8():
    list_0 = []
    var_0 = list_0.__str__()
    bytes_0 = b"\xb0#\xea\xe8\xd8\x9b"
    bool_0 = True
    set_0 = {bool_0, bytes_0, bool_0, bool_0}
    int_0 = 0
    tuple_0 = (bool_0, set_0, set_0, int_0)
    validation_0 = module_0.Validation(bytes_0, tuple_0)
    validation_0.ap(list_0)


def test_case_9():
    int_0 = 0
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (int_0, int_0, dict_0, int_0)
    tuple_1 = (int_0, tuple_0, dict_0)
    validation_0 = module_0.Validation(tuple_1, tuple_0)
    bytes_0 = b"\x1fAq"
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_1.to_box()
    var_0.is_fail()


def test_case_10():
    str_0 = "\ts+7(DpDDBCf"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()


def test_case_11():
    float_0 = 171.0
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_maybe()
    var_2 = var_1.__str__()
    float_1 = -2759.5
    int_0 = -901
    tuple_0 = (float_1, int_0)
    validation_1 = module_0.Validation(tuple_0, int_0)
    validation_1.to_maybe()


def test_case_12():
    bytes_0 = b'\x17\xd7z\xea\xaeU\xc6Uf\xf5"\xe2\xd7\xc8=\r'
    none_type_0 = None
    validation_0 = module_0.Validation(bytes_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)
    validation_0.to_try()


def test_case_13():
    str_0 = "!q>)a"
    dict_0 = {str_0: str_0}
    var_0 = dict_0.__eq__(dict_0)
    validation_0 = module_0.Validation(var_0, dict_0)
    validation_1 = module_0.Validation(dict_0, str_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_1.to_box()
    var_3 = validation_1.to_either()
    var_4 = validation_1.to_try()
    var_5 = var_4.map(validation_1)
    var_6 = var_4.bind(validation_1)
    var_7 = validation_1.to_box()
    var_8 = var_6.bind(dict_0)
    var_4.to_lazy()


def test_case_14():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.bind(tuple_0)


def test_case_15():
    str_0 = "!q>)a"
    dict_0 = {str_0: str_0}
    var_0 = module_0.Validation(dict_0, dict_0)
    validation_0 = module_0.Validation(var_0, dict_0)
    validation_1 = module_0.Validation(dict_0, str_0)
    var_1 = validation_1.__eq__(var_0)
    var_2 = validation_1.to_box()
    var_3 = validation_1.__str__()
    var_4 = validation_1.to_either()
    var_5 = validation_1.to_try()
    var_6 = validation_0.__eq__(var_1)
    var_7 = var_4.to_box()
    var_7.bind(var_5)


def test_case_16():
    str_0 = "!q>)a"
    dict_0 = {str_0: str_0}
    complex_0 = -2159 - 353j
    validation_0 = module_0.Validation(dict_0, complex_0)
    none_type_0 = None
    tuple_0 = ()
    validation_1 = module_0.Validation(none_type_0, tuple_0)
    var_0 = validation_1.to_box()
    var_1 = var_0.to_either()
    validation_2 = module_0.Validation(var_1, var_0)
    var_2 = validation_1.to_box()
    var_3 = validation_1.to_either()
    var_4 = var_2.to_try()
    validation_1.map(dict_0)


def test_case_17():
    list_0 = []
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, list_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.__str__()
    var_1.ap(list_0)
