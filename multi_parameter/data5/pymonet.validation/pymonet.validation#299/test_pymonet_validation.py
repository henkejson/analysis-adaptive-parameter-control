# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1}
    str_0 = ":}S"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(set_0)
    var_0.ap(bool_0)


def test_case_1():
    str_0 = "4sMX&).]0h=pMC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_2 = validation_0.__eq__(none_type_0)
    var_3 = validation_1.to_try()
    var_4 = var_3.__eq__(validation_0)
    var_2.to_lazy()


def test_case_2():
    float_0 = 4643.0
    tuple_0 = (float_0,)
    dict_0 = {tuple_0: tuple_0}
    validation_0 = module_0.Validation(dict_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_0.is_fail()


def test_case_3():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_5():
    bool_0 = True
    int_0 = 1326
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(bool_0)


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    validation_0 = module_0.Validation(list_0, bool_0)
    validation_0.bind(bool_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    bytes_0 = b"\xc2N\xe6\xcf\x15"
    validation_0.ap(bytes_0)


def test_case_8():
    bytes_0 = b")\xab*\xa6\xd6\x1d\x99w\x8e=\xb1\xa2n\x98\xaf\xab"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.is_success()


def test_case_9():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    none_type_0 = None
    set_0 = set()
    none_type_1 = None
    validation_0 = module_0.Validation(set_0, none_type_1)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.bind(none_type_0)
    var_1.to_either()


def test_case_11():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_12():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_13():
    bytes_0 = b"\x8d\x9e\x96\n\x19\xfel\xcd?\x1a\xc6\xdb\x85\xfb"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_either()
    var_0.is_fail()


def test_case_14():
    str_0 = "4sMX&).]0h=pMC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = validation_0.to_try()
    var_3 = validation_0.__eq__(var_2)
    var_4 = validation_1.__eq__(validation_0)
    var_5 = validation_1.to_maybe()
    var_6 = var_0.to_try()
    var_6.to_try()


def test_case_15():
    str_0 = "SsMX&)\r]\th=pMC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_0.__eq__(validation_1)
    validation_2 = module_0.Validation(var_0, var_1)
    validation_2.to_try()


def test_case_16():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_0.bind(dict_0)


def test_case_17():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    validation_1 = module_0.Validation(str_0, str_0)
    var_2 = var_1.to_try()
    var_3 = var_1.to_try()
    var_4 = validation_1.__eq__(validation_0)
    var_3.to_lazy()
