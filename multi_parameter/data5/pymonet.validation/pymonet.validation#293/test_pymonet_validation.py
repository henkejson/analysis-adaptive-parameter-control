# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.is_success()
    var_2 = var_1.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"I\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_3():
    str_0 = "g5tynI\x0b/'Wz.89FVNYK\""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.to_lazy()


def test_case_4():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    bytes_0 = b"l\x0f\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(bytes_0)
    validation_1.is_fail()


def test_case_6():
    bytes_0 = b"I\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    bool_0 = False
    set_0 = set()
    validation_1 = module_0.Validation(set_0, set_0)
    var_0 = validation_1.to_either()
    var_1 = validation_1.__eq__(bool_0)
    var_0.ap(validation_0)


def test_case_7():
    bytes_0 = b"I\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_1 = validation_0.is_success()
    validation_1.bind(var_0)


def test_case_8():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(none_type_0)
    validation_0.ap(none_type_0)


def test_case_9():
    dict_0 = {}
    none_type_0 = None
    validation_0 = module_0.Validation(dict_0, none_type_0)
    var_0 = validation_0.to_box()
    validation_0.to_maybe()


def test_case_10():
    str_0 = "g5tynI\x0b/'Wz.89FVNYK\""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()


def test_case_11():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_1.__str__()
    bool_1 = False
    validation_1 = module_0.Validation(bool_1, bool_1)
    validation_1.to_try()


def test_case_12():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_13():
    bytes_0 = b"I\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_1 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    var_1.is_success()


def test_case_14():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_0.__eq__(validation_1)
    bool_0 = False
    tuple_0 = (var_0, bool_0)
    validation_2 = module_0.Validation(tuple_0, validation_0)
    var_2 = var_0.__str__()
    var_0.is_fail()


def test_case_15():
    bytes_0 = b"I\xe1"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(bytes_0)
    none_type_0.to_box()


def test_case_16():
    bytes_0 = b""
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, bytes_0)
    bool_0 = True
    none_type_1 = None
    validation_1 = module_0.Validation(validation_0, bytes_0)
    var_0 = validation_1.to_maybe()
    validation_2 = module_0.Validation(bytes_0, none_type_0)
    var_1 = validation_2.__eq__(none_type_1)
    var_0.ap(bool_0)
