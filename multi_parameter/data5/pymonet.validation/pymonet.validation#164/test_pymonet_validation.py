# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    none_type_1 = None
    bool_1 = False
    set_0 = {bool_1, none_type_1, bool_1, bool_1}
    bool_2 = False
    tuple_0 = (set_0, bool_2)
    validation_1 = module_0.Validation(none_type_1, tuple_0)
    var_0 = validation_1.__eq__(validation_0)
    var_0.to_either()


def test_case_1():
    str_0 = ']\x0b3"\\V4^k'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_0.to_either()


def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()


def test_case_3():
    str_0 = 'h\x0b1"\\V4^k'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_try()
    var_2 = validation_0.to_maybe()
    var_3 = validation_0.to_try()
    validation_0.ap(str_0)


def test_case_4():
    str_0 = "Tat%M_F{L%"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()


def test_case_5():
    str_0 = ']\x0b3"\\V4^k'
    str_0.to_maybe()


def test_case_6():
    str_0 = "Tat%M_F{L%"
    validation_0 = module_0.Validation(str_0, str_0)


def test_case_7():
    float_0 = 952.538
    int_0 = 1298
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.map(float_0)


def test_case_8():
    bool_0 = True
    bool_1 = False
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_9():
    bytes_0 = b"|\x12ze\xee\x13l\xf4\xae\xb1\x89>\xb7<;\x15\xbc\xbe"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()
    var_1 = var_0.__str__()
    var_1.to_lazy()


def test_case_10():
    str_0 = ']\x0b3"\\V4^k'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(str_0)
    var_2 = validation_0.to_either()
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.is_fail()
    var_5 = validation_0.to_try()
    var_6 = validation_0.to_lazy()
    var_7 = var_1.__eq__(var_4)
    var_7.to_either()


def test_case_11():
    str_0 = "rpT"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_try()
    var_0.is_success()


def test_case_12():
    str_0 = "Tat%M_F{L%"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    var_2 = validation_0.to_try()


def test_case_13():
    str_0 = ']\x0b3"\\V4^k'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_fail()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_3 = validation_0.to_either()
    var_4 = validation_0.is_fail()
    var_5 = var_0.__str__()
    var_6 = validation_0.to_box()
    var_7 = var_6.to_lazy()
    var_8 = var_7.to_maybe()
    var_7.to_lazy()


def test_case_14():
    none_type_0 = None
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_0.ap(none_type_0)


def test_case_15():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.is_success()
    var_1 = validation_0.__str__()
    var_2 = validation_0.to_try()
    var_0.to_box()


def test_case_16():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_try()
    var_1 = validation_0.to_box()
    var_2 = validation_0.to_maybe()
    validation_0.map(validation_0)
