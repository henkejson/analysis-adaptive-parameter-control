# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    bytes_0 = b'\xb7ka\xbe\xc7"\x9f Ua\x94\xa5\xc3\x86'
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    none_type_0 = None
    var_0 = validation_0.__eq__(none_type_0)


def test_case_1():
    bytes_0 = b"M\xe4(#\x82\xa1X\xc0\x88\x92\xdd\xea\xae\x18\xf5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()


def test_case_2():
    bytes_0 = b"j\x91"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_maybe()


def test_case_3():
    bytes_0 = b"\xbc\xfe\xc8\xf2\x04\xdc\x1f\x03z-\x82\xf9\x14T\x0b\xff"
    validation_0 = module_0.Validation(bytes_0, bytes_0)


def test_case_4():
    bytes_0 = b"M\xe4}#\x82\x88:X\xc0\x88\x92\xdd\xea\xae\x18\xf5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()


def test_case_5():
    list_0 = []
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(list_0)


def test_case_6():
    bytes_0 = b"\xbc\xfe\xc8\x7f\x04)'\xdc\x1f\x03z-\x82\xf9\x14T\x0b\xff"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.bind(validation_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, bool_0)
    validation_0.ap(bool_0)


def test_case_8():
    bytes_0 = b"\x99\x1e\xc2\xbbc\xe3\x0e\xc1_"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_box()


def test_case_9():
    bytes_0 = b"\xbc\xfe\xc8\xf20\xdc\x1f\x03z-\x82\xf9\x14\xf3\x0b\xff"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_lazy()


def test_case_10():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_11():
    bytes_0 = b"\xac\xbc4\x9c"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_either()


def test_case_12():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_13():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_14():
    str_0 = "Validation.fail[{}, {}]"
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.to_maybe()
    var_0.ap(str_0)


def test_case_15():
    bool_0 = True
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_box()


def test_case_16():
    bool_0 = True
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    validation_1 = module_0.Validation(bool_0, var_0)
    var_2 = validation_0.to_maybe()
    validation_2 = module_0.Validation(validation_1, bool_0)
    var_3 = validation_0.__eq__(validation_2)
    var_4 = var_3.__str__()
    var_5 = var_2.to_try()
    var_0.to_either()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_either()
    var_0.ap(tuple_0)
