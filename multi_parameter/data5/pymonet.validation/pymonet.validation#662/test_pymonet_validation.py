# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    tuple_0 = ()
    none_type_0 = None
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = none_type_0.__str__()
    var_1 = validation_0.__eq__(validation_0)
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.to_either()
    validation_0.bind(none_type_0)


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.__str__()
    var_0.to_try()


def test_case_2():
    str_0 = "\t3WlrbFjtYVHa<]1QZ\x0cC"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_maybe()
    bool_0 = False
    validation_0.ap(bool_0)


def test_case_3():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    validation_1 = module_0.Validation(tuple_0, tuple_0)
    var_2 = validation_1.to_lazy()
    var_3 = var_2.to_try()
    var_3.bind(var_1)


def test_case_4():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_5():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    var_1 = var_0.__str__()
    var_2 = validation_0.__eq__(validation_0)
    str_0 = "C`}o 8&9^aVU"
    var_3 = var_2.__eq__(str_0)
    var_4 = validation_0.to_either()
    var_5 = var_3.__eq__(tuple_0)
    validation_0.bind(var_0)


def test_case_7():
    set_0 = set()
    bool_0 = False
    none_type_0 = None
    validation_0 = module_0.Validation(bool_0, none_type_0)
    validation_0.map(set_0)


def test_case_8():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.bind(bool_0)


def test_case_9():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_either()
    validation_0.ap(validation_0)


def test_case_10():
    bool_0 = False
    list_0 = [bool_0]
    float_0 = 3642.113443
    list_1 = [float_0, float_0]
    validation_0 = module_0.Validation(list_0, list_1)
    var_0 = validation_0.to_box()
    var_1 = var_0.to_try()
    var_1.to_try()


def test_case_11():
    float_0 = 45.203
    none_type_0 = None
    validation_0 = module_0.Validation(float_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.__str__()
    var_1.is_fail()


def test_case_12():
    bool_0 = False
    dict_0 = {}
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.map(dict_0)
    var_1.to_either()


def test_case_13():
    complex_0 = 120.566 - 606.168891j
    list_0 = [complex_0]
    none_type_0 = None
    validation_0 = module_0.Validation(list_0, none_type_0)
    validation_0.to_try()


def test_case_14():
    int_0 = 683
    set_0 = {int_0, int_0, int_0}
    validation_0 = module_0.Validation(set_0, int_0)
    str_0 = "mHr\x0c(j1b"
    validation_1 = module_0.Validation(str_0, str_0)
    none_type_0 = None
    var_0 = validation_1.__eq__(none_type_0)
    var_1 = validation_1.__eq__(validation_1)
    var_2 = validation_0.__eq__(validation_1)
