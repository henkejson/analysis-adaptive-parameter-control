# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    set_0 = set()
    validation_0 = module_0.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.to_maybe()


def test_case_1():
    list_0 = []
    validation_0 = module_0.Validation(list_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.__eq__(list_0)
    var_2 = var_1.__eq__(list_0)
    var_2.map(list_0)


def test_case_2():
    str_0 = "WJdFp!G&7t("
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_3():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(none_type_0, dict_0)
    var_0 = validation_0.to_maybe()
    var_1 = var_0.__str__()
    var_1.bind(none_type_0)


def test_case_4():
    str_0 = "\n        :returns: Copy of self\n        :rtype: Left[A]\n        "
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    var_1 = var_0.__str__()
    none_type_0 = None
    validation_1 = module_0.Validation(none_type_0, str_0)
    var_2 = validation_1.to_maybe()
    validation_1.bind(validation_1)


def test_case_5():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)


def test_case_6():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_7():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.is_fail()


def test_case_8():
    float_0 = 3678.65876
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_0.map(float_0)


def test_case_9():
    bool_0 = True
    bool_1 = True
    validation_0 = module_0.Validation(bool_1, bool_1)
    validation_0.bind(bool_0)


def test_case_10():
    bytes_0 = b"\x95W\xb5"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    validation_0.ap(bytes_0)


def test_case_11():
    str_0 = "|0v~!Ho5\nF\x0bK]sKi"
    set_0 = {str_0, str_0, str_0}
    float_0 = 2633.85731
    validation_0 = module_0.Validation(float_0, float_0)
    var_0 = validation_0.to_box()
    var_0.bind(set_0)


def test_case_12():
    int_0 = 116
    set_0 = set()
    none_type_0 = None
    validation_0 = module_0.Validation(set_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_either()
    var_1.bind(int_0)


def test_case_13():
    bytes_0 = b"\xde\x9a\x957V/m\xad\xb9\x82QR\xc6\xa7\x04"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = validation_0.__eq__(var_0)
    var_1.map(bytes_0)


def test_case_14():
    str_0 = "&;x:\x0b+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)
    var_1 = var_0.__eq__(validation_0)
    var_2 = validation_0.__str__()
    var_1.to_maybe()


def test_case_15():
    str_0 = "&;x:\x0b+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__eq__(validation_0)
    validation_0.map(var_0)


def test_case_16():
    str_0 = "&;x:\x0b+"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = module_0.Validation(str_0, validation_0)
    var_1 = validation_0.__eq__(var_0)
    var_2 = var_1.__eq__(var_1)
    var_3 = validation_0.__str__()
    var_2.to_maybe()
