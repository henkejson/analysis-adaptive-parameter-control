# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    float_0 = -1983.0
    set_0 = {float_0, float_0, float_0, float_0}
    bytes_0 = b"\xbc\x1e\x07s1y\x14M^\x88\xe3\x08\xc5u\x8b\r\xad"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.__eq__(bytes_0)
    var_0.ap(set_0)


def test_case_1():
    bytes_0 = b"r\xadq6\xb9\x8f\x1am)"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_either()


def test_case_2():
    bytes_0 = b"h\xba2\xc0\xa5\xc0&\xaen\xf1\x01N"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_either()
    var_2 = validation_0.to_try()
    var_2.ap(var_0)


def test_case_3():
    bytes_0 = b"h\xba2\xc0\xa5\xc0&\xaen\xf1\x01N"
    validation_0 = module_0.Validation(bytes_0, bytes_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_1.ap(var_0)


def test_case_4():
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_5():
    none_type_0 = None
    dict_0 = {}
    validation_0 = module_0.Validation(dict_0, dict_0)
    var_0 = validation_0.to_either()
    var_0.map(none_type_0)


def test_case_6():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.is_fail()
    int_0 = -2638
    var_1 = validation_0.is_fail()
    validation_1 = module_0.Validation(int_0, int_0)
    var_2 = validation_1.to_lazy()
    var_0.to_box()


def test_case_7():
    set_0 = set()
    int_0 = -3176
    int_1 = -2901
    validation_0 = module_0.Validation(int_0, int_1)
    validation_0.map(set_0)


def test_case_8():
    str_0 = "|="
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_0.bind(validation_0)


def test_case_9():
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    validation_1 = module_0.Validation(none_type_0, none_type_0)
    validation_1.ap(validation_1)


def test_case_10():
    int_0 = 2149
    bytes_0 = b"h\xba2\xc0\xa5\xc0&\xaen\xf1\x01"
    validation_0 = module_0.Validation(bytes_0, int_0)
    var_0 = validation_0.to_box()


def test_case_11():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.ap(int_0)
    var_2.to_maybe()


def test_case_12():
    str_0 = "5/~?QiESRYv"
    none_type_0 = None
    validation_0 = module_0.Validation(none_type_0, none_type_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_1.bind(str_0)


def test_case_13():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_14():
    int_0 = 1
    validation_0 = module_0.Validation(int_0, int_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_lazy()
    var_2 = var_1.ap(int_0)
    var_3 = var_1.to_either()
    validation_1 = module_0.Validation(int_0, var_2)
    var_4 = validation_0.__eq__(validation_1)
    var_2.to_maybe()


def test_case_15():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.is_fail()
    int_0 = -2638
    var_2 = validation_0.is_fail()
    validation_1 = module_0.Validation(int_0, int_0)
    var_3 = validation_1.to_lazy()
    var_1.to_box()
