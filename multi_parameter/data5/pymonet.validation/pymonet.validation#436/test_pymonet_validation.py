# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pymonet.validation as module_0


def test_case_0():
    str_0 = "\n5@js\x0bp%7F?k M61;"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(str_0)


def test_case_1():
    str_0 = " wwN4\\a/p'N\r\x0b3v\"Q[c"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__str__()


def test_case_2():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(var_0)
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.is_fail()
    validation_1 = module_0.Validation(var_3, var_1)


def test_case_3():
    str_0 = 'qN|BIt9-nyeJzq "XycM'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()


def test_case_4():
    str_0 = "=R="
    str_0.to_box()


def test_case_5():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)


def test_case_6():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    validation_0.is_success()


def test_case_7():
    int_0 = -573
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.is_fail()


def test_case_8():
    int_0 = -18
    validation_0 = module_0.Validation(int_0, int_0)
    str_0 = "um"
    validation_0.map(str_0)


def test_case_9():
    int_0 = 9
    validation_0 = module_0.Validation(int_0, int_0)
    validation_0.bind(validation_0)


def test_case_10():
    str_0 = "W~CCqZo"
    validation_0 = module_0.Validation(str_0, str_0)
    validation_0.ap(validation_0)


def test_case_11():
    str_0 = "*W~CCqZo"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_box()


def test_case_12():
    bool_0 = False
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.to_lazy()


def test_case_13():
    str_0 = "L\n6I:~R<`"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_try()


def test_case_14():
    str_0 = "Hazy[T,I `"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_15():
    str_0 = ""
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_either()
    var_1 = validation_0.__str__()
    var_1.bind(var_0)


def test_case_16():
    str_0 = 'qNrBIt9-nyeJzq "XycM'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()


def test_case_17():
    tuple_0 = ()
    validation_0 = module_0.Validation(tuple_0, tuple_0)
    validation_1 = module_0.Validation(tuple_0, validation_0)
    var_0 = validation_1.to_lazy()
    var_1 = var_0.to_either()
    str_0 = "L\n6I:~R<`"
    none_type_0 = None
    validation_2 = module_0.Validation(none_type_0, str_0)
    var_2 = var_1.to_box()


def test_case_18():
    str_0 = "=R"
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()
    validation_1 = module_0.Validation(var_0, validation_0)
    var_1 = validation_0.to_box()
    var_2 = validation_0.__eq__(validation_1)
    var_3 = validation_0.to_maybe()
    var_4 = validation_0.is_fail()
    none_type_0 = None
    validation_0.ap(none_type_0)
