# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import builtins as module_0
import pymonet.validation as module_1


def test_case_0():
    bool_0 = False
    object_0 = module_0.object()
    validation_0 = module_1.Validation(bool_0, object_0)
    var_0 = validation_0.__eq__(validation_0)


def test_case_1():
    list_0 = []
    object_0 = module_0.object(*list_0)
    float_0 = -1321.08214
    str_0 = "Min[value={}]"
    validation_0 = module_1.Validation(str_0, str_0)
    var_0 = validation_0.__eq__(float_0)
    var_1 = var_0.__str__()
    var_1.bind(var_0)


def test_case_2():
    set_0 = set()
    validation_0 = module_1.Validation(set_0, set_0)
    var_0 = validation_0.__str__()
    var_0.is_fail()


def test_case_3():
    bytes_0 = b"zg'cHl\xd1\xe0/Z\xeb.\x06b\xa3"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.__str__()
    var_0.to_lazy()


def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    object_0 = module_0.object()
    validation_0 = module_1.Validation(object_0, dict_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()
    var_1.is_fail()


def test_case_5():
    set_0 = set()
    validation_0 = module_1.Validation(set_0, set_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_try()
    var_1.is_fail()


def test_case_6():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)


def test_case_7():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    validation_0.to_maybe()


def test_case_8():
    int_0 = 2302
    none_type_0 = None
    validation_0 = module_1.Validation(int_0, none_type_0)
    validation_0.is_fail()


def test_case_9():
    none_type_0 = None
    bool_0 = True
    validation_0 = module_1.Validation(bool_0, bool_0)
    validation_0.map(none_type_0)


def test_case_10():
    bytes_0 = b"*d\xf8^\t\xc5\xd0T\xbf\xd3\x89\xb4~*(\xda"
    validation_0 = module_1.Validation(bytes_0, bytes_0)
    var_0 = validation_0.is_fail()
    validation_0.bind(var_0)


def test_case_11():
    bool_0 = True
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    validation_0.ap(bool_0)


def test_case_12():
    bool_0 = True
    object_0 = module_0.object()
    validation_0 = module_1.Validation(bool_0, object_0)
    var_0 = validation_0.__eq__(validation_0)
    var_1 = validation_0.to_box()


def test_case_13():
    dict_0 = {}
    validation_0 = module_1.Validation(dict_0, dict_0)
    var_0 = validation_0.to_lazy()
    var_1 = var_0.to_box()
    var_2 = var_0.__eq__(var_0)
    var_3 = validation_0.is_success()
    var_4 = var_3.__str__()
    var_4.to_either()


def test_case_14():
    none_type_0 = None
    validation_0 = module_1.Validation(none_type_0, none_type_0)
    validation_0.to_try()


def test_case_15():
    bool_0 = False
    tuple_0 = (bool_0,)
    validation_0 = module_1.Validation(bool_0, tuple_0)
    var_0 = validation_0.to_maybe()
    var_1 = validation_0.to_lazy()
    var_2 = var_1.to_maybe()
    dict_0 = {}
    str_0 = "\tE "
    validation_1 = module_1.Validation(str_0, bool_0)
    validation_1.map(dict_0)


def test_case_16():
    object_0 = module_0.object()
    list_0 = []
    validation_0 = module_1.Validation(object_0, list_0)
    var_0 = validation_0.to_either()
    var_1 = var_0.to_box()


def test_case_17():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    validation_0 = module_1.Validation(dict_0, bool_0)
    validation_1 = module_1.Validation(bool_0, validation_0)
    var_0 = validation_0.__eq__(validation_1)
    validation_1.to_maybe()
