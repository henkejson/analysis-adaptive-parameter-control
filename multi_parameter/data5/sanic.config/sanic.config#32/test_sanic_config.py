# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(none_type_0)


def test_case_3():
    str_0 = "jyI#-q\t}Y2;B.{"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)


def test_case_4():
    float_0 = -536.4571
    none_type_0 = None
    module_0.Config(float_0, none_type_0)


def test_case_5():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0)
    config_0.__getattr__(dict_0)


def test_case_6():
    none_type_0 = None
    str_0 = "n.\nu~#PBJt0"
    config_0 = module_0.Config(keep_alive=str_0)
    config_0.load_environment_vars(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    bool_0 = False
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "yn"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    str_0 = "zZ:33_U4\t"
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.register_type(var_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.load_environment_vars(str_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__setattr__(str_0, none_type_1)
