# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2
import sanic.errorpages as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "No change needed. There are alrexd5 "
    module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = module_1.isdatadescriptor(bool_0)
    var_1 = config_0.load_environment_vars()
    module_0.DescriptorMeta(var_1)


def test_case_3():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    bytes_0 = b"\xbas\x0c\x14]\xc2\xad"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(bytes_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_2.load_module_from_file_location(bool_0, *list_0, **bool_0)


def test_case_6():
    str_0 = "G8*#d$Y.V"
    module_0.Config(str_0)


def test_case_7():
    str_0 = "No change needed. There are already "
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.update()
    dict_0 = {str_0: str_0}
    config_0.__getattr__(dict_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    bytes_0 = b"Reset Content"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_0.update_config(bytes_0)


def test_case_11():
    str_0 = "H"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1 = module_0.Config(env_prefix=str_0)
    module_3.check_error_format(none_type_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    none_type_1 = None
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_1)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(none_type_0)
    str_0 = "H"
    config_1.load_environment_vars(str_0)
