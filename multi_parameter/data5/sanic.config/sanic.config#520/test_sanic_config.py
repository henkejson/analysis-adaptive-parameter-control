# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    float_0 = -4572.756022680376
    config_0 = module_0.Config(keep_alive=float_0)
    config_1 = module_0.Config(converters=config_0)
    config_0.update_config(float_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    bool_1 = False
    config_1 = module_0.Config(keep_alive=bool_1)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    bool_0 = False
    none_type_0 = None
    str_0 = "FAILED"
    str_1 = ""
    dict_0 = {str_0: bool_0, str_1: str_1, str_1: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    float_0 = -4572.756023
    config_0 = module_0.Config(keep_alive=float_0)
    none_type_0 = module_1.getmembers(config_0)
    float_1 = 0.1
    config_0.load_environment_vars(float_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    bytes_0 = b'l\x85\x8b"\xa0(\x12\xb35<\xe4\xe8@\xc2\xb3\x08m\x83>\x02'
    module_0.Config(converters=bytes_0)


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    bool_1 = False
    config_1 = module_0.Config(keep_alive=bool_1)
    bytes_0 = b"%x\r\n%b\r\n"
    none_type_0 = config_1.register_type(bytes_0)


def test_case_9():
    str_0 = "VR#|#;K\n^0~,OoH"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    module_0.Config(env_prefix=config_1, keep_alive=none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "sd\x0cT;U\nW5"
    config_0.update_config(str_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)
