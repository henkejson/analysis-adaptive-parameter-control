# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "E]_& "
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=str_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_1.getmembers(none_type_0, none_type_0)
    var_1 = var_0.__repr__()
    int_0 = -514
    list_0 = [var_1, var_1, int_0]
    config_0 = module_0.Config(keep_alive=list_0)


def test_case_3():
    str_0 = 'M.Od",$A'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    module_0.DescriptorMeta(dict_0)


def test_case_4():
    str_0 = "E]_& "
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(env_prefix=none_type_1, converters=str_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "~\tA!P&{qK+x"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_9():
    str_0 = "-v"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_10():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.update(**config_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_0)
    none_type_2 = config_1.register_type(none_type_0)
    none_type_3 = config_1.update()
    config_1.register_type(none_type_0)


def test_case_12():
    str_0 = "LOCAL_CERT_CREATOR"
    config_0 = module_0.Config()
    config_0.__setattr__(str_0, str_0)
