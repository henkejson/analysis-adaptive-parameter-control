# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "`?tZ2h\nEDP|T-!"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config()
    config_0.__getattr__(bool_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0, var_0)
    str_0 = ""
    config_1.load_environment_vars(str_0)


def test_case_4():
    str_0 = "`?tZ2h\nEDP|T-!"
    bool_0 = True
    str_1 = "t'[a~.+ap"
    dict_0 = {str_1: str_1, str_0: bool_0, str_1: str_1, str_1: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    config_0.update_config(str_1)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = "`?tZ2h\nEDP|T-!"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)
    config_0.__getattr__(config_0)


def test_case_7():
    str_0 = "`?tZ2h\nEDP|T-!"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    bytes_0 = b"fHi5?\x07f\xae\x84d=\xd4\x91bU"
    module_0.Config(converters=bytes_0)


def test_case_10():
    str_0 = "`?tZ2h\nEDP|T-!"
    bool_0 = True
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.__setitem__(str_0, bool_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_12():
    str_0 = "_"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    config_1.update_config(var_0)


def test_case_13():
    str_0 = "H"
    bool_0 = False
    module_0.Config(env_prefix=str_0, keep_alive=bool_0, converters=str_0)


def test_case_14():
    str_0 = "S"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(none_type_0)
