# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(bool_0, keep_alive=bool_0)


def test_case_2():
    str_0 = "\nEither the application is not running, or it did not start an inspector instance.\n"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = "\x0c3\x0b2|R\\G+Cdj"
    str_1 = "3d\n^dK\x0bz#Cf)\nWe"
    str_2 = "?7a~>W"
    str_3 = "4ycv\\5!U@1/Ee"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_3: str_2}
    config_0 = module_0.Config(dict_0)
    float_0 = 1022.274
    none_type_0 = config_0.register_type(float_0)
    bytes_0 = b"\xc5\xc0."
    none_type_1 = config_0.update()
    module_0.DescriptorMeta(bytes_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    str_0 = "\nEither the application is not running, or it did not start an inspector instance.\n"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_7():
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(none_type_0)
    var_1 = var_0.__repr__()
    config_0 = module_0.Config(converters=var_1)
    none_type_1 = config_0.__setattr__(var_1, var_1)
    var_1.load_environment_vars()


def test_case_8():
    str_0 = "@9C^_5"
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_9():
    str_0 = "v8ft0'x\x0cQ"
    var_0 = str_0.__repr__()
    module_0.Config(converters=var_0)


def test_case_10():
    str_0 = "\nEither the appication is not running, or it did not start an inspector instance.\n"
    config_0 = module_0.Config(keep_alive=str_0)
    config_1 = config_0.update_config(config_0)
    none_type_0 = None
    config_2 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = module_1.getmembers(none_type_0)
    none_type_1 = config_2.register_type(var_0)
    config_2.__setitem__(none_type_0, var_0)


def test_case_11():
    str_0 = "\x0c3\x0b2|R\\G+Cdj"
    str_1 = "3d\n^dK\x0bz#Cf)\nWe"
    str_2 = "?7a~>W"
    str_3 = "Lg\ndh5htMN!F\t,kKt(Z9"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_3: str_2}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.load_environment_vars()
    config_0.__getattr__(dict_0)


def test_case_12():
    str_0 = "@9C^_5"
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_14():
    str_0 = "\nEither the application is not running, or it did not start an inspector instance.\n"
    config_0 = module_0.Config(keep_alive=str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setattr__(str_1, none_type_0)
