# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    var_0 = module_1.isclass(none_type_0)
    str_0 = "lG-p"
    config_0 = module_0.Config(none_type_0, str_0, converters=str_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)


def test_case_3():
    str_0 = "=6,Y.,wS@{BX.\x0cwpVv"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    list_0 = [none_type_0]
    config_0.update(*list_0)


def test_case_8():
    str_0 = '"VGIC7a'
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    str_1 = "oAHSuwnfPT&)o"
    str_2 = "l+g8v#5Vaj]de4vIj7r"
    module_0.Config(str_1, str_2)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)
    str_0 = "=6,Y.,wS@{BX.\x0cwpVv"
    config_1 = module_0.Config(env_prefix=str_0)
    none_type_1 = config_0.update(**config_0)
    none_type_2 = config_1.register_type(list_0)
    config_1.__getattr__(none_type_0)


def test_case_10():
    str_0 = '"VGIC7a'
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "?w\t nF?nTS"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)


def test_case_12():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    list_0 = [config_0]
    none_type_0 = config_0.update(*list_0)
    config_0.__getattr__(config_0)


def test_case_13():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "INSPECTOR_API_KEY"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    module_0.Config(converters=str_0)


def test_case_14():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = True
    str_0 = "y:MK>}>[Kbr)z"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config(none_type_1, none_type_1)
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_1: bool_1, str_0: bool_0, str_0: none_type_0, str_1: str_1}
    module_0.Config(dict_0)


def test_case_15():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "INSPECTOR_API_KEY"
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    list_0 = [config_0]
    none_type_2 = config_0.update(*list_0)
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, none_type_2)


def test_case_16():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
