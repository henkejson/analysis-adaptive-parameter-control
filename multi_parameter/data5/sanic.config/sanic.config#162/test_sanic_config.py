# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\x1b|\xb1o\x81\xbeT\x1c\x9b\x10\xec\xc1\xd0\xf3\x8b"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=bytes_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.load_environment_vars()


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_4():
    bool_0 = False
    str_0 = "SANIC_SERVER_RUNNING"
    str_1 = "r"
    dict_0 = {str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0)
    module_1.check_error_format(bool_0)


def test_case_5():
    bytes_0 = b"\x1b|\xb1o\x81\xbeT\x1c\x9b\x10r\xec\xc1\xad\xd0\xf3\x8b\x91"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0, converters=bytes_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isclass(var_0)
    list_0 = [bytes_0]
    config_0.__getattr__(list_0)


def test_case_6():
    float_0 = 20.0
    module_0.Config(env_prefix=float_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = ""
    none_type_1 = config_0.__setitem__(str_0, str_0)
    config_0.load_environment_vars(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    bytes_0 = b"T\xdd\xc5\xf0"
    config_0.update_config(bytes_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    bytes_0 = b"\x1b|\xb1o\x81\xbeT\x1c\x9b\x10\xec\xc1\xd0\xf3\x8b"
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, bytes_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
