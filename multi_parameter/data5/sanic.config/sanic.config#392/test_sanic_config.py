# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 7356
    module_0.Config(env_prefix=int_0, converters=int_0)


def test_case_2():
    str_0 = "_future_listeners"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    str_0 = "EFX\\Z2\\\nG<B<"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = '^RaafB?A`O"70\\Q4+W'
    config_1 = module_0.Config()
    none_type_1 = config_1.__setattr__(str_1, none_type_0)


def test_case_4():
    str_0 = '1lxiO"+sA^1`J#T"w\x0c\x0b'
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    var_0 = module_1.isclass(set_0)
    config_1 = module_0.Config(none_type_0)
    var_0.register_type(none_type_0)


def test_case_5():
    float_0 = -377.408
    config_0 = module_0.Config()
    config_0.__getattr__(float_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = None
    none_type_2 = None
    none_type_3 = config_0.register_type(none_type_0)
    var_0 = module_1.getmembers(none_type_2, none_type_2)
    var_0.__setattr__(var_0, none_type_1)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.__setitem__(config_0, var_0)


def test_case_8():
    str_0 = "EFX\\Z2\\\nG<B<"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    none_type_2 = config_0.__setattr__(str_0, str_0)
    config_1 = module_0.Config(env_prefix=var_0, keep_alive=none_type_0)
    var_1 = module_1.getmembers(str_0)
    var_0.__getattr__(var_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = '1lxiO"+sA^1`J#T"w\x0c\x0b'
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    list_0 = module_1.isdatadescriptor(str_0)
    var_0 = module_1.getmembers(list_0)
    none_type_0 = config_0.register_type(var_0)
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    var_1 = module_1.isclass(set_0)
    config_0.__getattr__(set_0)


def test_case_12():
    str_0 = "EFX\\Z2\\\nG<B<"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_14():
    str_0 = "zf)\x0b\r\tY1/sv$ixc>f"
    none_type_0 = None
    module_0.Config(none_type_0, converters=str_0)


def test_case_15():
    str_0 = "EFX\\Z2\nG<B"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)
