# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Invalid server event: "
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    list_0 = [bool_0]
    module_1.getmembers(bool_0, list_0)


def test_case_3():
    str_0 = 'YkJgE+v"&Vw[;^'
    module_0.Config(str_0, keep_alive=str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    bool_0 = False
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    module_0.DescriptorMeta(config_0)


def test_case_9():
    str_0 = "gUqh$rGa2M;N"
    str_1 = "r$\n69E9`*~o60%xx"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, str_1, dict_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    var_0.respond(str_1)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    str_0 = "ztyK"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.AUTO
    config_0.update_config(var_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    config_1 = module_0.Config(converters=config_0)
    var_0.update()


def test_case_14():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)
