# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "q9e"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=str_0
    )


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    int_0 = -4346
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(int_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    int_0 = -4346
    str_0 = "<unK{.Jp\\B"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    none_type_2 = config_0.register_type(none_type_0)
    module_0.DescriptorMeta(int_0)


def test_case_5():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    str_0 = "Du_nK{.Jp\\B"
    config_0.update_config(str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_9():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_1)
    none_type_2 = config_0.update(**config_0)
    module_1.Http(none_type_0)


def test_case_10():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_11():
    int_0 = 2
    str_0 = "Hlmo/~5N"
    str_1 = "7PCh@nAQpd\rh@aW4OS"
    str_2 = "WEBSOCKET_PING_TIMEOUT"
    dict_0 = {str_0: int_0, str_1: str_0, str_0: str_0, str_2: str_0}
    config_0 = module_0.Config(dict_0, str_0, str_2)
    config_0.__getattr__(int_0)
