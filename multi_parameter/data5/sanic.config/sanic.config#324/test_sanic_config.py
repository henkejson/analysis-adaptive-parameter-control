# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"Expectation Failed"
    var_0 = module_1.getmembers(bytes_0)
    config_0 = module_0.Config(converters=var_0)
    str_0 = "5\x0bwu#@v|LG"
    var_0.__setattr__(str_0, var_0)


def test_case_2():
    bool_0 = True
    bool_1 = False
    str_0 = ":Y8as?e+'&;P;lv>4mh/"
    config_0 = module_0.Config(bool_1, str_0, bool_1)
    config_0.update_config(bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_4():
    local_cert_creator_0 = module_2.LocalCertCreator.AUTO
    module_0.Config(local_cert_creator_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.register(config_0, config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(config_0)


def test_case_8():
    str_0 = "Incoming inspector action: %s"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.__getattr__(str_0)
    var_1.register(config_0, var_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    int_0 = 1207
    config_0 = module_0.Config()
    config_0.update_config(int_0)


def test_case_11():
    bytes_0 = b"Expectation Failed"
    module_0.Config(converters=bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    bytes_0 = b"2\xdaS\xa0\xa9"
    config_0.update_config(bytes_0)
