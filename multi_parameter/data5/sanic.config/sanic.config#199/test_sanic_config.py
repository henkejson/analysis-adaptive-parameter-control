# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2
import sanic.constants as module_3
import sanic.errorpages as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    config_0.update_config(bool_0)


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    var_0 = config_0.update_config(config_0)
    module_1.Http(config_0)


def test_case_4():
    str_0 = "6\neC.a63"
    module_0.Config(converters=str_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    var_0 = module_2.getmembers(none_type_0)
    config_1 = module_0.Config(keep_alive=var_0, converters=config_0)
    config_2 = module_0.Config(bool_0, keep_alive=none_type_0)


def test_case_6():
    none_type_0 = None
    var_0 = module_3.LocalCertCreator.AUTO
    bool_0 = True
    set_0 = {none_type_0, var_0, var_0, bool_0}
    module_0.Config(env_prefix=set_0)


def test_case_7():
    float_0 = -433.68
    str_0 = ")8.A_T9#d1e^f?G9k"
    str_1 = "VmF\x0beVFP4"
    dict_0 = {str_0: float_0, str_0: str_1, str_0: float_0, str_0: str_1}
    config_0 = module_0.Config(dict_0)
    none_type_0 = None
    module_4.check_error_format(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "w#bsocket_ping_timeout"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_0.update_config(none_type_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    str_0 = "#h+"
    config_0.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
