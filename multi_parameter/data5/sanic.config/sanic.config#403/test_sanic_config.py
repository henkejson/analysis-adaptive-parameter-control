# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2
import abc as module_3
import sanic.constants as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "~q6DSp\x0c+g]h!#&Og"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(converters=dict_0)
    dict_0.__setattr__(str_0, str_0)


def test_case_2():
    str_0 = "=9J"
    config_0 = module_0.Config(keep_alive=str_0)
    module_1.load_module_from_file_location(str_0)


def test_case_3():
    none_type_0 = None
    str_0 = "=v6ZZV#X"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_5():
    int_0 = 396
    str_0 = "xZ,-[u@0&#"
    str_1 = "=v0^gd-\x0bbrX1iP"
    dict_0 = {str_1: int_0, str_1: str_1}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.load_environment_vars()
    var_0.load_environment_vars(str_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    config_0.load_environment_vars(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config()
    var_0 = config_1.load_environment_vars()
    module_3.ABCMeta()


def test_case_11():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(var_0)
    config_0.register_type(none_type_0)


def test_case_13():
    str_0 = "xZ,-[u@I&>"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = module_4.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_14():
    dict_0 = {}
    config_0 = module_0.Config(keep_alive=dict_0, converters=dict_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    float_0 = -2105.0
    none_type_1 = config_0.register_type(float_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)
