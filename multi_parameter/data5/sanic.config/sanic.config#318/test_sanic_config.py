# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2
import sanic.utils as module_3
import sanic.constants as module_4


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    config_0 = module_0.Config(keep_alive=list_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    var_0.register_type(var_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.load_environment_vars()
    var_0.__getattr__(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(var_0)
    config_1.__setitem__(var_0, none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_9():
    str_0 = "K:"
    config_0 = module_0.Config(env_prefix=str_0)
    float_0 = 1.1
    list_0 = [float_0]
    none_type_0 = config_0.update(**config_0)
    module_3.load_module_from_file_location(float_0, *list_0)


def test_case_10():
    str_0 = "bB$\rt}l\"<>'\x0c?F CI?"
    dict_0 = {str_0: str_0}
    bool_0 = False
    module_0.Config(dict_0, keep_alive=bool_0, converters=str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_4.LocalCertCreator.AUTO
    none_type_0 = None
    var_1 = module_2.isdatadescriptor(none_type_0)
    var_2 = module_2.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, var_0)
