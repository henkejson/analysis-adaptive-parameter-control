# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    config_1.respond(config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = config_0.update(**config_0)
    config_0.update(*none_type_1, **config_0)


def test_case_6():
    bool_0 = True
    none_type_0 = None
    module_0.Config(none_type_0, bool_0, none_type_0, converters=none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_1 = module_0.Config(config_0)
    config_1.__getattr__(config_1)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = module_1.isdatadescriptor(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=var_0)
    var_0.__getattr__(none_type_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_13():
    bytes_0 = b"\xa6\xa4#\x93\xab:;f\x8c'\x92\xf1\xe7`\xd1\xa5"
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(bytes_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.update()
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    none_type_2 = config_0.register_type(config_1)
    none_type_3 = module_1.isdatadescriptor(none_type_2)
    str_0 = "USE_UVLOOP"
    none_type_4 = config_0.__setitem__(str_0, config_1)
    var_0 = module_2.LocalCertCreator.TRUSTME
    module_0.Config(converters=var_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_16():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, none_type_0, converters=none_type_0)
