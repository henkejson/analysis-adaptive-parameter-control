# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "bzdUM"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    str_0 = "wCM;DaorQ4V66?E8nhh"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = ")w"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)


def test_case_4():
    bytes_0 = b"\xc4\xbb\xe8F,u\x15"
    str_0 = "wCM;DaorQ4V66?E8nhh"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__getattr__(bytes_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = '&\\C7K.qJZ7"#(3Ix9Z'
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_8():
    str_0 = "bzdUM"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=var_0)
    config_2 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    none_type_0 = config_2.register_type(var_0)
    config_0.update_config(var_0)


def test_case_9():
    str_0 = "bzdUM"
    config_0 = module_0.Config(keep_alive=str_0)
    var_0 = config_0.update_config(config_0)
    module_1.Http(config_0)


def test_case_10():
    str_0 = "wCM;DaorQ4V66?E8nhh"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_11():
    bool_0 = True
    str_0 = "I\rP`iv%5k"
    str_1 = "WEBSOCKET_PING_INTERVAL"
    config_0 = module_0.Config()
    dict_0 = {str_0: str_0, str_1: bool_0, str_1: str_0}
    config_0.__getattr__(dict_0)


def test_case_12():
    str_0 = "bzdUM"
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    config_2 = module_0.Config(keep_alive=str_0)
    config_0.__setitem__(var_0, var_0)


def test_case_13():
    str_0 = ""
    config_0 = module_0.Config(converters=str_0)
    var_0 = config_0.update_config(config_0)
    config_0.load_environment_vars(str_0)
