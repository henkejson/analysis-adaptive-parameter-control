# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    module_0.Config(bool_0, none_type_0, converters=none_type_0)


def test_case_2():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(env_prefix=var_0, converters=none_type_0)
    module_0.DescriptorMeta(config_1)


def test_case_3():
    config_0 = module_0.Config()
    int_0 = 16396
    none_type_0 = config_0.register_type(int_0)
    var_0 = module_1.getmembers(config_0)
    none_type_1 = None
    module_0.Config(keep_alive=none_type_1, converters=int_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    var_0.load_environment_vars()


def test_case_5():
    config_0 = module_0.Config()
    bytes_0 = b"a7*_\xcf\xb6\xce\x15\xe5\xd6M\xab!\xa1\xe5\xc7\xddF"
    str_0 = "<0o]:"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = module_1.isclass(bytes_0)


def test_case_6():
    str_0 = "ECDHE-ECDSA-AES128-GCM-SHA256"
    str_1 = "\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    config_0 = module_0.Config(dict_0, str_0, dict_0)
    var_0 = config_0.__getattr__(str_1)
    module_0.Config(config_0, config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b"Gateway Timeout"
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    str_0 = "Configuration object for Sanic.\n\n    You can use this object to both: (1) configure how Sanic will operate, and\n    (2) manage your application's custom configuration values.\n    "
    config_0 = module_0.Config()
    module_0.Config(converters=str_0)


def test_case_12():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(none_type_0, keep_alive=bool_0)
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(bool_0)
    config_2 = module_0.Config(converters=var_0)
    config_2.update_config(var_0)


def test_case_13():
    str_0 = "Configuration object for Sanic.\n\n    You can use this object to both: (1) configure how Sanic will operate, and\n    (2) manage your application's custom configuration values.\n    "
    config_0 = module_0.Config()
    str_1 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_1, str_0)
