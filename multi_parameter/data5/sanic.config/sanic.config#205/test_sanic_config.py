# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=config_0)
    var_0 = config_1.update_config(config_1)
    var_0.__getattr__(config_1)


def test_case_2():
    config_0 = module_0.Config()
    bool_0 = True
    str_0 = "Vv\rAm'y-B\n.6@"
    config_1 = module_0.Config(config_0, str_0, bool_0)
    none_type_0 = config_0.register_type(bool_0)
    none_type_1 = None
    config_0.update_config(none_type_1)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = ".~|xu;7e/b0w{%+"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.register_type(none_type_0)
    module_1.load_module_from_file_location(config_0, none_type_1)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "n.~5:W#n'V"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = module_2.isclass(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(converters=var_0)


def test_case_10():
    config_0 = module_0.Config()
    str_0 = ".~|xu;7e/b0w{%+"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(var_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    var_0 = module_2.getmembers(config_0)
    var_1 = var_0.__repr__()
    tuple_0 = (var_1,)
    var_2 = module_2.getmembers(tuple_0)
    none_type_1 = config_0.register_type(var_2)
    str_1 = ".~|xu;7e/b0w{%+"
    none_type_2 = config_0.__setitem__(str_1, str_1)
    none_type_3 = config_0.register_type(none_type_2)
    var_3 = config_0.update_config(config_0)
    config_0.update_config(none_type_2)


def test_case_12():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.__setitem__(str_0, str_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [var_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    list_0 = [var_0, config_0, config_0]
    none_type_1 = config_0.update(*list_0)
    none_type_1.update_config(none_type_1)
