# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import sanic.constants as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_2():
    str_0 = "P"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, str_0)
    module_1.Http(config_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.__getattr__(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "Axn$>-|\x0c3oqu"
    none_type_1 = config_0.__setitem__(str_0, str_0)


def test_case_5():
    str_0 = "P"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(config_0, keep_alive=none_type_0)


def test_case_9():
    str_0 = "P"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, str_0)
    var_0 = module_2.LocalCertCreator.TRUSTME
    none_type_0 = config_0.register_type(var_0)
    config_0.update_config(var_0)


def test_case_10():
    str_0 = "psdu}\nafAsxB7j\\r"
    str_1 = "\x0bO7Oo|Kd2r"
    str_2 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_2: str_0}
    bool_0 = True
    module_0.Config(dict_0, keep_alive=bool_0)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(keep_alive=none_type_1)
    var_0 = config_1.load_environment_vars()
    none_type_2 = config_1.register_type(var_0)
    config_1.register_type(var_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = module_3.isclass(none_type_0)
    none_type_1 = config_0.update()
    config_0.__setitem__(str_0, var_0)


def test_case_13():
    str_0 = "P"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0, str_0)
    none_type_0 = module_3.isdatadescriptor(config_0)
    var_0 = module_3.isclass(none_type_0)
