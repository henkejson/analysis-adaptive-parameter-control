# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_2():
    str_0 = "uw|"
    str_1 = "L,_bbBv6'm[A_.\"a"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_1, converters=none_type_0)
    none_type_1 = config_0.update(**dict_0)


def test_case_3():
    int_0 = 502
    module_0.Config(int_0, int_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.__setattr__(none_type_0, str_0)


def test_case_7():
    str_0 = "uw|"
    str_1 = "L,_bbBv6'm[A_.\"a"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_1, converters=none_type_0)
    config_0.__getattr__(dict_0)


def test_case_8():
    str_0 = "XGO8X)\t~i~{X`.\ta\\X"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(str_0)


def test_case_9():
    str_0 = "w|"
    str_1 = "L,_bbBv6'm[A_.\"a"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    float_0 = -5046.043
    none_type_0 = config_0.register_type(float_0)
    none_type_1 = None
    config_1 = module_0.Config(env_prefix=str_1, converters=none_type_1)
    config_2 = module_0.Config(keep_alive=none_type_1, converters=none_type_1)
    config_2.update_config(str_0)


def test_case_10():
    str_0 = "w|"
    str_1 = "L,_bbBv6'm[A_.\"a"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    str_2 = 'Yv!Lx2e"O\rc*\x0ckQ'
    config_0 = module_0.Config(dict_0, str_2, dict_0, converters=str_0)
    config_0.update_config(str_2)


def test_case_11():
    config_0 = module_0.Config()
    module_1.getmembers(config_0, config_0)


def test_case_12():
    str_0 = "w|"
    str_1 = "L,_bbBv6'm[A_.\"a"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.load_environment_vars()
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    str_2 = "+ -Vo1"
    none_type_0 = config_0.__setitem__(str_2, dict_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(none_type_1)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_15():
    bool_0 = False
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, bool_0)
