# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=none_type_0, converters=config_0)
    var_0 = config_1.update_config(config_1)


def test_case_2():
    none_type_0 = None
    str_0 = "6\t\t#V7)>"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=dict_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "L"
    config_1 = module_0.Config(config_0, str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    complex_0 = 4498.9646 - 1546.917j
    config_0.update_config(complex_0)


def test_case_6():
    str_0 = "kYx!u!i"
    module_0.Config(converters=str_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_1)
    var_1 = config_1.load_environment_vars()


def test_case_8():
    config_0 = module_0.Config()
    str_0 = "L"
    config_1 = module_0.Config(config_0, str_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "^1zf"
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    none_type_2 = config_0.register_type(none_type_0)
    str_1 = "L"
    config_1 = module_0.Config(config_0, str_1)
    var_0 = module_1.getmembers(config_0, none_type_2)
    var_1 = config_0.update_config(config_0)


def test_case_10():
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0, converters=none_type_0)
    str_0 = "9L>\rwh^s3r'}6"
    str_1 = "Inspector"
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    dict_1 = {str_0: str_0}
    config_0.__getattr__(dict_1)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "L"
    config_1 = module_0.Config(config_0, str_0)
    var_1 = module_1.getmembers(config_0)
    str_1 = "1<K\n\x0b"
    none_type_2 = config_1.__setattr__(str_1, none_type_1)
    module_0.Config(env_prefix=str_0, converters=var_1)
