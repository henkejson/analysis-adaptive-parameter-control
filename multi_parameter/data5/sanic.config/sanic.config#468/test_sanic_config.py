# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import abc as module_0
import sanic.config as module_1
import sanic.errorpages as module_2
import inspect as module_3


def test_case_0():
    module_0.ABCMeta()


def test_case_1():
    config_0 = module_1.Config()


def test_case_2():
    str_0 = "*!uEw"
    config_0 = module_1.Config(env_prefix=str_0, keep_alive=str_0)
    var_0 = config_0.load_environment_vars()
    bool_0 = True
    module_2.check_error_format(bool_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    str_0 = " body not consumed."
    config_0 = module_1.Config(none_type_1, str_0)
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_1.Config()
    var_0 = module_3.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_5():
    int_0 = -1681
    var_0 = module_3.isclass(int_0)
    str_0 = "ey}G{@BW?'l+"
    config_0 = module_1.Config(var_0, converters=str_0)
    var_1 = config_0.update_config(config_0)
    int_0.register(int_0, int_0)


def test_case_6():
    int_0 = -1681
    var_0 = module_3.isclass(int_0)
    str_0 = "n%K}XDkP\n6v-S\nR}w"
    str_1 = ""
    str_2 = "ey}G{@BW?'l+"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    config_0 = module_1.Config(dict_0, converters=str_2)
    module_2.check_error_format(str_0)


def test_case_7():
    int_0 = -1681
    var_0 = module_3.isclass(int_0)
    str_0 = "eK|W7,\x0b}iYo Nk2h"
    str_1 = "8ggrcR\x0cA0=u\r@Vcp7)BG"
    str_2 = ""
    str_3 = "ey}G{@BW?'l+"
    dict_0 = {str_1: str_1, str_2: str_1, str_3: str_2}
    config_0 = module_1.Config(dict_0, converters=str_3)
    config_0.update_config(str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_1.Config(env_prefix=none_type_0)
    var_0 = config_0.update_config(config_0)
    module_2.check_error_format(config_0)


def test_case_9():
    int_0 = -1681
    var_0 = module_3.isclass(int_0)
    str_0 = "8ggrcR\x0cA0=u\r@Vcp7)BG"
    str_1 = ""
    str_2 = "ey}G{@B}?~H+"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    module_1.Config(dict_0, converters=str_2)


def test_case_10():
    config_0 = module_1.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_1.Config()
    var_0 = config_0.update_config(config_0)


def test_case_12():
    config_0 = module_1.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_13():
    str_0 = "n%K}XDkP\n6v-S\nR}w"
    str_1 = ""
    str_2 = "ey}G{@BW?'l+"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    config_0 = module_1.Config(dict_0, converters=str_2)
    none_type_0 = config_0.__setitem__(str_1, str_2)
    config_0.load_environment_vars(str_1)


def test_case_14():
    config_0 = module_1.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setattr__(str_0, none_type_0)


def test_case_15():
    str_0 = "d i~7Y{"
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.Config(dict_0)
