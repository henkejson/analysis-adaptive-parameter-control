# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.constants as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "~;%7;y+cZI"
    none_type_2 = config_1.register_type(str_0)
    module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(bool_0, bool_0, bool_0)
    tuple_0 = ()
    config_1 = module_0.Config(env_prefix=tuple_0)
    config_1.__getattr__(config_1)


def test_case_3():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0)


def test_case_4():
    str_0 = " O57h)yZAf@%6V3u"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    dict_1 = {}
    var_0 = config_0.load_environment_vars()
    str_1 = "ASGI"
    var_1 = module_1.isclass(str_1)
    var_1.update_config(dict_1)


def test_case_5():
    config_0 = module_0.Config()
    int_0 = -95
    config_0.__getattr__(int_0)


def test_case_6():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    int_0 = 1372
    none_type_0 = config_0.register_type(int_0)
    config_0.__setitem__(none_type_0, int_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setitem__(str_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.LocalCertCreator.MKCERT
    config_0.update_config(var_0)


def test_case_14():
    str_0 = ""
    config_0 = module_0.Config()
    config_0.load_environment_vars(str_0)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0, var_0, var_0, var_0, var_0, var_0]
    none_type_0 = config_0.update(*list_0, **config_0)
    var_0.register_type(var_0)
