# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "P"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    complex_0 = 3951.6877 - 4249.9748j
    config_0 = module_0.Config(keep_alive=complex_0)


def test_case_3():
    local_cert_creator_0 = module_1.LocalCertCreator.AUTO
    config_0 = module_0.Config(env_prefix=local_cert_creator_0)


def test_case_4():
    bytes_0 = b"\xcePw\xaf+\x17\xe6k\xc6\x98b\r\xa8\xa5\xd9/\\\x99g\xb2"
    module_0.Config(bytes_0)


def test_case_5():
    bytes_0 = b"Y\xb0\x8d\xac"
    config_0 = module_0.Config(converters=bytes_0)
    config_0.update_config(bytes_0)


def test_case_6():
    bytes_0 = b"\xf9\x91\xa0e\xf5\x98\xd8\xcb\x97\xf1\xe5/@_A\xdcT"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=var_0)
    var_1 = config_1.update_config(config_1)
    var_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    complex_0 = 3951.6877 - 4249.9748j
    config_0 = module_0.Config(keep_alive=complex_0)
    config_0.__getattr__(complex_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_10():
    str_0 = "P"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_11():
    complex_0 = 3951.6877 - 4265.800020803863j
    config_0 = module_0.Config(keep_alive=complex_0)
    config_0.__getattr__(config_0)


def test_case_12():
    bytes_0 = b"Payment Required"
    module_0.Config(keep_alive=bytes_0, converters=bytes_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = '"Fm>] \x0c\tmzX,'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, converters=none_type_0)


def test_case_14():
    bytes_0 = b"\xf9\x91\xa0e\xf5\x98\xd8\xcb\x97\xf1\xe5/@_A\xdcT"
    config_0 = module_0.Config(keep_alive=bytes_0, converters=bytes_0)
    config_1 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setitem__(str_0, config_0)
