# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    int_0 = 3145
    module_0.Config(keep_alive=int_0, converters=int_0)


def test_case_2():
    str_0 = "'(va5N\\uSSq-!"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(str_0, none_type_0)
    str_1 = "oo2FV"
    none_type_1 = config_0.__setattr__(str_1, str_0)
    config_0.update_config(str_0)


def test_case_4():
    str_0 = ", in "
    module_0.Config(converters=str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    var_0 = module_1.getmembers(config_0)
    none_type_1 = config_0.register_type(config_0)
    var_0.__instancecheck__(config_0, config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_7():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    str_0 = "websocket_ping_interval"
    str_1 = "'7eM%pU!"
    dict_0 = {str_1: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=dict_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = "H"
    dict_0 = {}
    config_0 = module_0.Config(converters=str_0)
    module_2.load_module_from_file_location(str_0, **dict_0)


def test_case_12():
    none_type_0 = None
    list_0 = []
    config_0 = module_0.Config(none_type_0, converters=list_0)
    config_0.__getattr__(list_0)


def test_case_13():
    none_type_0 = None
    list_0 = []
    config_0 = module_0.Config(none_type_0, converters=list_0)
    str_0 = "_k"
    list_1 = [list_0, str_0, config_0, list_0]
    none_type_1 = config_0.__setitem__(str_0, list_1)
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)
