# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "&b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0, keep_alive=var_0)
    var_0.__instancecheck__(dict_0, var_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_3():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_0.__getattr__(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)


def test_case_5():
    str_0 = "S"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(config_1)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)


def test_case_10():
    str_0 = "&b"
    str_1 = "S"
    config_0 = module_0.Config(env_prefix=str_1, keep_alive=str_0)
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "FORWARDED_FOR_HEADER"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    module_0.Config(converters=str_0)


def test_case_12():
    str_0 = "S"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)
    config_0.load_environment_vars(str_0)


def test_case_13():
    str_0 = ""
    str_1 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_0: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)
    config_0.update_config(config_0)


def test_case_14():
    str_0 = ""
    str_1 = "_"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_0: str_1}
    config_0 = module_0.Config(dict_0, keep_alive=str_0, converters=dict_0)
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=str_1, keep_alive=var_0)
    none_type_0 = config_0.__setattr__(str_1, config_0)
    config_1.update_config(var_0)
