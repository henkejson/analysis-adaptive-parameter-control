# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    config_0.update_config(none_type_0)


def test_case_2():
    str_0 = "Qv2]~,q"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, dict_0, none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    bool_0 = True
    module_0.Config(env_prefix=bool_0, keep_alive=bool_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    var_0 = module_1.getmembers(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    bytes_0 = b""
    config_1.update_config(bytes_0)


def test_case_10():
    config_0 = module_0.Config()
    int_0 = -2035
    module_0.Config(converters=int_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "h|"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    var_2 = config_0.update_config(config_0)
    config_0.update_config(var_1)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.register_type(var_0)
    var_1 = config_0.update_config(config_0)
    config_0.register_type(var_1)


def test_case_13():
    bool_0 = True
    var_0 = module_1.isdatadescriptor(bool_0)
    default_0 = module_2.Default()
    bytes_0 = b"k\x9eIB"
    config_0 = module_0.Config(converters=bytes_0)
    config_0.__getattr__(default_0)
