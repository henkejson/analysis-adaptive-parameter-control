# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.utils as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_0.Config(config_0, keep_alive=config_0)
    config_1 = module_0.Config(config_0, converters=config_0)
    none_type_0 = None
    config_1.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    module_1.load_module_from_file_location(config_0, **config_1)


def test_case_4():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.__setitem__(bool_0, config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    str_0 = "positional"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.__getattr__(str_0)
    none_type_1 = var_0.__setattr__(str_0, var_0)
    var_1 = config_0.load_environment_vars()
    none_type_2 = var_0.update(**config_0)
    var_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    bool_0 = True
    config_0.update_config(bool_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    str_0 = "{,A\nK1-{*"
    config_2 = module_0.Config(env_prefix=str_0)
    var_0 = config_2.update_config(config_0)
    var_0.update()


def test_case_10():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_11():
    config_0 = module_0.Config()
    str_0 = "positional"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.__getattr__(str_0)
    none_type_1 = var_0.__setattr__(str_0, var_0)
    var_0.update_config(str_0)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    tuple_0 = ()
    var_0 = config_1.load_environment_vars()
    tuple_1 = (tuple_0, var_0, var_0, var_0)
    module_0.Config(converters=tuple_1)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = '" already in use.'
    none_type_0 = config_0.__setattr__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, converters=config_0)
    str_1 = "pOn\\KmY`[^pd|*b29yC"
    str_2 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_2, str_1)
