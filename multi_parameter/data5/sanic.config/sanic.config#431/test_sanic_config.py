# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "7MXM"
    bool_0 = True
    str_1 = "z;u)A*ae~Ks]"
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: str_0}
    config_0 = module_0.Config(dict_0, str_1)


def test_case_3():
    str_0 = "6!^V>_[)"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    none_type_0 = None
    var_0 = module_1.getmembers(config_0, none_type_0)
    list_0 = [config_0, var_0]
    none_type_1 = config_0.update(*list_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_7():
    bool_0 = True
    str_0 = "z;u)A+*ae~Ks"
    module_0.Config(env_prefix=bool_0, converters=str_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)
    var_0 = config_1.load_environment_vars()


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_0.update_config(config_1)
    var_1 = config_0.load_environment_vars()


def test_case_11():
    str_0 = "G"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_12():
    str_0 = "B/Kkxp8Hwl8QHz"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_13():
    str_0 = "6!^V>_[)"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    none_type_1 = config_0.register_type(str_0)
    none_type_2 = None
    config_1 = module_0.Config(keep_alive=none_type_1)
    str_1 = "LOCAL_CERT_CREATOR"
    dict_0 = {str_0: none_type_0, str_1: none_type_2, str_1: none_type_2}
    config_1.update(**dict_0)


def test_case_14():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)
