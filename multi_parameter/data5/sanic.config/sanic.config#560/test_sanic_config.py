# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)


def test_case_3():
    str_0 = "_nitialized"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=bool_0, converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_4():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_5():
    list_0 = []
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    config_1 = module_0.Config()
    config_1.__getattr__(list_0)


def test_case_6():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_7():
    str_0 = "B%?V2?aBdH5"
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_1 = module_0.Config(keep_alive=str_0, converters=config_0)
    config_2 = module_0.Config()


def test_case_8():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0, converters=bool_0)
    str_0 = "sK"
    var_0 = config_0.update_config(config_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_11():
    str_0 = "_\rnitialized"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    module_0.Config(dict_0, keep_alive=bool_0, converters=str_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    var_0 = config_0.load_environment_vars()
    var_1 = config_0.load_environment_vars()
    config_0.__setitem__(str_0, none_type_0)


def test_case_13():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    bool_0 = True
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    float_0 = 10.0
    none_type_1 = config_1.update()
    none_type_2 = config_1.register_type(float_0)
    var_1 = module_1.isdatadescriptor(none_type_0)
    config_1.update_config(var_1)


def test_case_14():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    bool_0 = True
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    var_0 = config_1.update_config(config_1)
    float_0 = 10.0
    none_type_1 = config_1.update()
    none_type_2 = config_1.register_type(float_0)
    var_1 = var_0.__bool__()
    config_1.load_environment_vars(str_0)
