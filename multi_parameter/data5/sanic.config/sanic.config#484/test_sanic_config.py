# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.constants as module_1
import inspect as module_2
import sanic.utils as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ""
    local_cert_creator_0 = module_1.LocalCertCreator.MKCERT
    config_0 = module_0.Config(keep_alive=str_0, converters=local_cert_creator_0)


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    str_0 = " \nL&\x0cx4D\rz"
    none_type_0 = config_1.update(**config_1)
    config_2 = module_0.Config(config_0, converters=str_0)


def test_case_3():
    str_0 = "Return a tuple of the priority and definition order.\n\n        This is used to sort the middleware.\n\n        Returns:\n            tuple[int, int]: The priority and definition order.\n        "
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    str_0 = '%NwL3F%]<"X_o!'
    none_type_0 = None
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    none_type_2 = config_0.__setattr__(str_0, none_type_0)
    none_type_3 = config_1.update()


def test_case_5():
    none_type_0 = None
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    str_0 = '%NL3F%]<"X_o!'
    config_0.update_config(str_0)


def test_case_9():
    int_0 = -2769
    var_0 = module_2.isclass(int_0)
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    int_0 = 565
    str_0 = "ho)Wif]\nw2"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    bytes_0 = b"V\x0c-"
    list_0 = [int_0, bytes_0, bytes_0, int_0]
    module_3.load_module_from_file_location(bytes_0, *list_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    config_0.__setattr__(str_0, none_type_0)
