# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "$}u@u{\r>ClwJ,6L"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=str_0, converters=none_type_0)
    bool_0 = False
    dict_0 = {}
    var_0 = module_1.getmembers(dict_0)
    var_0.respond(bool_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, none_type_0, none_type_0)


def test_case_3():
    str_0 = "*."
    str_1 = "n"
    config_0 = module_0.Config()
    int_0 = 302
    none_type_0 = config_0.__setitem__(str_1, int_0)
    dict_0 = {str_0: str_0, str_1: int_0, str_1: int_0}
    config_1 = module_0.Config(dict_0)
    config_0.update(*config_1)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.__setitem__(config_0, none_type_0)


def test_case_7():
    str_0 = "m0NDWO"
    str_1 = "8:>('fAe#\tE }^2Xk"
    dict_0 = {str_0: str_0, str_1: str_1}
    list_0 = [dict_0, str_0, str_0, dict_0]
    none_type_0 = None
    module_0.Config(dict_0, list_0, converters=none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(config_0)


def test_case_9():
    str_0 = "MX,L\n7>D^*X~4q)p7\r,"
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_12():
    str_0 = 'w\n"7WWe'
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_1 = module_0.Config(none_type_0, none_type_0, converters=config_0)
    float_0 = -3351.722
    bool_0 = True
    bool_1 = False
    tuple_0 = (float_0, bool_0, bool_1)
    none_type_1 = config_0.register_type(tuple_0)
    config_0.update_config(tuple_0)
