# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import abc as module_2
import inspect as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"\xb8\xb6\xa49HU\x9a%\xaa\xd5\x1a\xe1\xb0\x8d\xef"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bytes_0, converters=none_type_0)
    module_1.check_error_format(bytes_0)


def test_case_2():
    config_0 = module_0.Config()
    none_type_0 = None
    config_1 = module_0.Config(none_type_0, none_type_0)
    var_0 = config_0.update_config(config_0)
    module_2.ABCMeta(**config_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    str_0 = "<eZ"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config(config_0, keep_alive=none_type_1)
    none_type_2 = config_0.register_type(none_type_0)
    str_1 = "http.lifecycle.r4]uest"
    var_0 = config_0.update_config(config_0)
    var_1 = config_0.load_environment_vars()
    none_type_3 = config_0.__setattr__(str_1, config_0)
    none_type_4 = config_0.update(**config_0)
    bool_0 = False
    config_2 = module_0.Config()
    config_2.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0)
    var_1 = module_3.getmembers(config_0)
    var_0.update_config(var_1)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    int_0 = 409
    list_0 = [int_0]
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_1 = module_0.Config(converters=list_0)
    var_0 = module_3.isclass(int_0)
    var_0.__setitem__(int_0, int_0)


def test_case_9():
    list_0 = []
    var_0 = module_3.getmembers(list_0)
    var_1 = var_0.__repr__()
    dict_0 = {}
    str_0 = " b|@`S\\<O\x0bF:(RrBtA"
    none_type_0 = None
    config_0 = module_0.Config(dict_0, str_0, converters=none_type_0)
    none_type_1 = config_0.__setattr__(var_1, var_0)
    int_0 = 2702
    bool_0 = True
    module_0.Config(int_0, keep_alive=bool_0)


def test_case_10():
    str_0 = "http.lifecycle.request"
    config_0 = module_0.Config()
    bool_0 = False
    config_1 = module_0.Config(keep_alive=bool_0)
    str_1 = "xV_u?e\tNZx/\x0b\nC)cCFvN"
    none_type_0 = config_0.__setitem__(str_1, str_1)
    var_0 = module_3.isdatadescriptor(str_0)
    var_0.load_environment_vars()


def test_case_11():
    bytes_0 = b"\xb8\xb6\xa49HU\x9a%\xaa\xd5\x1a\xe1\xb0\x8d\xef"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.update_config(bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.register_type(config_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_3.isclass(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
