# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Go\r^r{HrGET]5v-Y"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )


def test_case_3():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0, keep_alive=bool_0)
    str_0 = "J\x0bzxV5d|\x0c\x0c(0<{A"
    config_0.__getattr__(str_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(converters=bool_0)
    config_0.update_config(bool_0)


def test_case_5():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_7():
    str_0 = "21Ur\\"
    config_0 = module_0.Config(converters=str_0)
    config_0.update_config(str_0)


def test_case_8():
    bytes_0 = b"T\x8d\xda\xc1\x18\x19Lfb\x8f<\xe3GvJ"
    module_0.Config(bytes_0)


def test_case_9():
    str_0 = "2\nUj\\"
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_1 = module_0.Config(env_prefix=str_0)
    str_1 = 'j"J gz2`@aWA2 :'
    none_type_0 = config_0.__setattr__(str_1, bool_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = "2;\n:Uj\\"
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    config_0.update_config(str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    none_type_0 = None
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_12():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_13():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_14():
    str_0 = "LOCAL_CERT_CREATOR"
    none_type_0 = None
    str_1 = "websocket_ping_timeout"
    str_2 = "&*GWWk$NN4?"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    config_0 = module_0.Config()
    config_0.update(**dict_0)
