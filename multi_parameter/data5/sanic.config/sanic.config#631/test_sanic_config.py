# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    default_0 = module_1.Default()
    str_0 = ";vEv"
    config_0 = module_0.Config(env_prefix=str_0)
    module_0.Config(converters=str_0)


def test_case_2():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    str_1 = "\rM6`\njE+u\\QPlr/ h"
    none_type_1 = config_0.__setitem__(str_1, none_type_0)
    config_1 = module_0.Config(config_0, converters=none_type_1)
    set_0 = set()
    none_type_2 = config_0.register_type(set_0)
    var_0 = config_0.update_config(config_0)


def test_case_4():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    none_type_0 = None
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_10():
    str_0 = ""
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "2F0>Ft"
    none_type_0 = config_0.__setattr__(str_1, str_1)


def test_case_11():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "LOCALHOST"
    none_type_0 = config_0.__setitem__(str_1, config_0)
    int_0 = 1502
    config_1 = module_0.Config(keep_alive=str_1)
    none_type_1 = config_0.register_type(config_0)
    config_0.update_config(int_0)


def test_case_12():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_13():
    config_0 = module_0.Config()
    config_1 = module_0.Config(converters=config_0)
    list_0 = [config_0, config_0, config_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    none_type_1 = config_0.register_type(none_type_0)
    list_0 = [config_0, config_0, config_0]
    none_type_2 = config_0.update(*list_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)


def test_case_15():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_16():
    str_0 = "_"
    config_0 = module_0.Config(env_prefix=str_0)
    var_0 = config_0.update_config(config_0)
    var_0.__setitem__(config_0, str_0)
