# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.helpers as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "EO+$N.\\(,"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    var_1 = module_1.getmembers(str_0)
    module_0.Config(env_prefix=config_0)


def test_case_2():
    config_0 = module_0.Config()
    var_0 = module_2.Default()
    config_0.__getattr__(var_0)


def test_case_3():
    none_type_0 = None
    dict_0 = {}
    config_0 = module_0.Config(keep_alive=dict_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "5'`B?Zt"
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    str_0 = "0<wVKL&~"
    config_1 = module_0.Config(keep_alive=str_0, converters=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    str_0 = "EO+$N.\\(,"
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    module_0.Config(str_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    str_0 = ":\rG4+N;\n\x0bx;p^~\n8uW"
    module_0.Config(converters=str_0)


def test_case_11():
    str_0 = ":\rG4+N;\n\x0bx;p^~\n8uW"
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.__setattr__(str_0, none_type_0)
    var_0 = config_0.load_environment_vars(str_0)
    var_1 = config_0.update_config(config_0)
    str_1 = "Can only access the manager from the main process after main_process_start has run. For example yo most likely want to use it inside the @app.main_process_ready event listener."
    var_2 = module_0.Config(var_0, var_1)
    none_type_2 = config_0.__setitem__(str_0, config_0)
    list_0 = [str_1, str_1, str_1]
    config_0.update_config(list_0)


def test_case_12():
    str_0 = "(["
    config_0 = module_0.Config()
    str_1 = "_FALLBACK_ERROR_FORMAT"
    none_type_0 = config_0.__setattr__(str_1, config_0)
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = config_0.update_config(config_0)
    var_1 = var_0.__bool__()
    var_2 = module_1.getmembers(config_0)
    config_0.update_config(var_2)
