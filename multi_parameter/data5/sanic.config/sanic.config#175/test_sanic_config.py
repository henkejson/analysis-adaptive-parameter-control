# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    bool_0 = True
    none_type_0 = None
    module_0.Config(none_type_0, converters=bool_0)


def test_case_2():
    str_0 = ".+IN!1A6~;T"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(env_prefix=dict_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_0)
    config_0.update_config(var_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__getattr__(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)


def test_case_10():
    str_0 = 'tf(#!iJLPIl*^u"jKgp:'
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_11():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bool_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    bytes_0 = b"'gWE\x9f\xa3\x0b\xd0lV\x8d\x02"
    none_type_1 = config_0.register_type(bytes_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(env_prefix=var_0, keep_alive=none_type_1)
    config_1.update_config(none_type_1)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_1 = module_0.Config(converters=config_0)
    var_0 = config_0.update_config(config_0)
    bytes_0 = b">J^\xde\x9dT\xb7\xd6\x95\x8f\x84\x18\xb5"
    config_0.update_config(bytes_0)


def test_case_14():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.load_environment_vars()
    config_0.register_type(config_0)


def test_case_15():
    config_0 = module_0.Config()
    bool_0 = False
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(keep_alive=bool_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = ""
    config_0.load_environment_vars(str_0)


def test_case_17():
    config_0 = module_0.Config()
    str_0 = "FALLBACK_ERROR_FORMAT"
    config_0.__setattr__(str_0, config_0)
