# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    str_0 = "9b*KXmg_*KsqX09Er!.u"
    module_0.Config(keep_alive=bool_0, converters=str_0)


def test_case_2():
    str_0 = "_converters"
    list_0 = [str_0, str_0, str_0]
    var_0 = module_1.isclass(list_0)
    config_0 = module_0.Config(env_prefix=var_0)
    str_1 = "A"
    config_1 = module_0.Config(env_prefix=str_1, keep_alive=str_1)
    str_2 = "\\#@9"
    module_2.load_module_from_file_location(str_2, str_2)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "KEEP_ALIVE"
    config_1 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    bool_0 = True
    str_0 = "yre'\rD"
    none_type_0 = config_0.__setitem__(str_0, config_0)
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.register_type(bool_0)
    config_0.__getattr__(config_0)


def test_case_6():
    bool_0 = False
    str_0 = "^}\njTB"
    config_0 = module_0.Config(keep_alive=bool_0, converters=str_0)
    var_0 = config_0.update_config(config_0)
    var_0.register(var_0, str_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.update_config(bool_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    str_0 = "--reloa\\d"
    var_0 = module_1.isclass(str_0)
    str_1 = "4x"
    str_2 = "-;@Sk8t{O2d"
    str_3 = "<i%|"
    dict_0 = {str_1: str_1, str_2: str_1, str_1: str_1, str_3: str_3}
    config_1 = module_0.Config(dict_0)
    str_4 = "|$$ls"
    dict_1 = {str_0: str_0, str_4: str_4, str_0: var_0}
    module_2.load_module_from_file_location(var_0, **dict_1)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    int_0 = 1123
    config_0.update_config(int_0)


def test_case_11():
    str_0 = "G;:HM4g20alXx=w$"
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_12():
    bool_0 = False
    str_0 = "^}\njTB"
    config_0 = module_0.Config(keep_alive=bool_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_13():
    bool_0 = False
    str_0 = "^}\njTB"
    config_0 = module_0.Config(keep_alive=bool_0, converters=str_0)
    str_1 = "FALLBACK_ERROR_FORMAT"
    config_0.__setitem__(str_1, config_0)
