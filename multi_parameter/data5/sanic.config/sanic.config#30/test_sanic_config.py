# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_2():
    set_0 = set()
    config_0 = module_0.Config(keep_alive=set_0, converters=set_0)
    var_0 = module_1.getmembers(config_0)
    config_0.update_config(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_4():
    str_0 = '2C"&29\x0b` Sew&6lW>'
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    bytes_0 = b">9V"
    module_0.Config(config_0, config_0, bytes_0, converters=config_0)


def test_case_7():
    str_0 = "_VSW5qhe>4X6%;9H"
    str_1 = "\ns*c+\x0b\tj47L[Q+y#>\x0c<"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    none_type_0 = None
    config_0 = module_0.Config(dict_0, keep_alive=none_type_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_10():
    int_0 = 1182
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_11():
    set_0 = set()
    config_0 = module_0.Config(keep_alive=set_0, converters=set_0)
    config_0.__getattr__(set_0)


def test_case_12():
    set_0 = set()
    none_type_0 = None
    config_0 = module_0.Config(set_0, none_type_0, none_type_0)
    config_1 = module_0.Config(keep_alive=set_0, converters=set_0)
    var_0 = config_1.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_1.__setattr__(str_0, config_1)
