# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = 'ereWt|XB"8F95'
    config_0 = module_0.Config(keep_alive=str_0)
    var_0 = config_0.update_config(config_0)


def test_case_2():
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    config_2 = module_0.Config(config_0, keep_alive=none_type_0, converters=config_0)
    config_3 = module_0.Config(keep_alive=config_1)
    none_type_1 = config_3.update(**config_2)
    module_1.check_error_format(config_2)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(keep_alive=none_type_0)
    str_0 = "bGYtbEkgQX"
    none_type_1 = config_2.__setitem__(str_0, config_1)
    var_0 = config_2.load_environment_vars()
    config_2.update_config(var_0)


def test_case_7():
    str_0 = 'ereWt|XB"8F95'
    config_0 = module_0.Config()
    none_type_0 = None
    module_0.Config(keep_alive=none_type_0, converters=str_0)


def test_case_8():
    str_0 = 'ereWt|XB"8F95'
    config_0 = module_0.Config()
    config_0.__getattr__(str_0)


def test_case_9():
    str_0 = 'ereWt|XB"8F95'
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_10():
    str_0 = 'ereWt|XB"8F95'
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=str_0)
    config_1.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = module_2.getmembers(config_0)
    list_0 = [config_0, config_0, var_0]
    none_type_0 = config_0.update(*list_0)
    var_0.respond(var_0)


def test_case_12():
    str_0 = "H"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_13():
    str_0 = "_"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=none_type_0)
    var_0 = module_2.getmembers(config_0)
    none_type_1 = config_0.register_type(none_type_0)
    str_1 = "|7i]TVv\r<XfnD#k"
    none_type_2 = config_0.__setitem__(str_1, str_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_0)
    var_0.update_config(var_0)
