# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_0 = None
    config_1 = module_0.Config(keep_alive=bool_0)
    var_0.__subclasscheck__(none_type_0, config_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(bool_0)
    none_type_2 = None
    var_0 = module_1.isdatadescriptor(bool_0)
    var_0.__setitem__(bool_0, none_type_2)


def test_case_6():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    none_type_1 = config_0.register_type(bool_0)
    none_type_2 = config_0.register_type(none_type_1)
    var_0 = module_1.isdatadescriptor(none_type_1)
    config_0.__setitem__(none_type_1, config_0)


def test_case_7():
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.__getattr__(bool_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    bytes_0 = b"Multiple Choices"
    config_0.update_config(bytes_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config()
    bytes_0 = b"Multiple Choices"
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    var_0.register(bytes_0, config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(var_0)
    none_type_0 = config_1.register_type(var_0)
    none_type_1 = config_0.register_type(var_0)
    config_2 = module_0.Config(config_0, converters=none_type_1)
    var_0.load_environment_vars()


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_12():
    bytes_0 = b"Multiple Choices"
    module_0.Config(env_prefix=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=var_0, converters=var_0)
    str_0 = "%3p0jB35x_)l zag"
    module_0.Config(converters=str_0)
