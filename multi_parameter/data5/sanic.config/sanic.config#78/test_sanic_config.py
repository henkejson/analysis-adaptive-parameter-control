# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "Cannot extend Sanic after Sanic Extensions has been setup."
    module_0.Config(converters=str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0)
    module_1.Http(none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.load_environment_vars()
    config_1.__getattr__(config_0)


def test_case_4():
    int_0 = 431
    config_0 = module_0.Config()
    config_0.__getattr__(int_0)


def test_case_5():
    str_0 = "-7~P\x0c>Ftn9}-1\n"
    config_0 = module_0.Config(keep_alive=str_0)
    none_type_0 = None
    config_0.__setitem__(none_type_0, str_0)


def test_case_6():
    int_0 = 431
    str_0 = "h$n*0_6a"
    bool_0 = False
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    module_0.DescriptorMeta(int_0)


def test_case_7():
    int_0 = 445
    config_0 = module_0.Config()
    config_0.update_config(int_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = None
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = config_1.register_type(none_type_0)
    config_0.__setattr__(config_0, bool_0)


def test_case_11():
    str_0 = "Find a route in the router based on the specified view name.\n\n        Args:\n            view_name (str): the name of the view to search for\n            name (Optional[str], optional): the name of the route. Defaults to `None`.\n\n        Returns:\n            Optional[Route]: the route object\n        "
    config_0 = module_0.Config()
    config_0.update_config(str_0)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_1, converters=config_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(none_type_0)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = module_2.isclass(config_0)
    config_1 = module_0.Config(none_type_0, keep_alive=none_type_1, converters=config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, config_0)
