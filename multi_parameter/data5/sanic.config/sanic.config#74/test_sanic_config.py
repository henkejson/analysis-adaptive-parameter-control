# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.http.http1 as module_2
import sanic.constants as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bytes_0 = b"J8\xb1\xe4\xd0"
    config_0 = module_0.Config(converters=bytes_0)
    int_0 = -1909
    var_0 = module_1.isdatadescriptor(int_0)
    config_1 = module_0.Config()
    str_0 = "D?5+\x0bl.}GR"
    module_0.DescriptorMeta(str_0)


def test_case_2():
    str_0 = "&og[16_])JUxk"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0)


def test_case_3():
    str_0 = "]Le2\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.update(*str_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    module_2.Http(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_6():
    int_0 = 3163
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=none_type_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_0.update_config(int_0)


def test_case_7():
    str_0 = ""
    str_1 = "?;Q+^0_|XaD|'"
    str_2 = "Whether the HTTP method is safe.\n\n        See https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.1\n\n        Returns:\n            bool: Whether the HTTP method is safe.\n        "
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_2: str_2}
    module_0.Config(dict_0, converters=str_2)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_11():
    bytes_0 = b"Q["
    config_0 = module_0.Config(converters=bytes_0)
    local_cert_creator_0 = module_3.LocalCertCreator.MKCERT
    config_0.update_config(local_cert_creator_0)


def test_case_12():
    bytes_0 = b"n\xf2"
    config_0 = module_0.Config(converters=bytes_0)
    str_0 = ""
    config_0.load_environment_vars(str_0)
