# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    none_type_0 = config_0.update(**config_0)
    config_1 = module_0.Config(config_0, none_type_0, bool_0)


def test_case_2():
    object_0 = module_1.object()
    bool_0 = True
    module_0.Config(bool_0, converters=bool_0)


def test_case_3():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(keep_alive=none_type_1)
    config_0.__getattr__(none_type_0)


def test_case_4():
    bool_0 = False
    config_0 = module_0.Config(env_prefix=bool_0)
    none_type_0 = config_0.register_type(bool_0)
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    list_0 = []
    var_0 = module_2.isdatadescriptor(list_0)
    str_0 = "MOTD_DISPLAY"
    none_type_0 = config_0.__setitem__(str_0, str_0)
    config_0.update_config(str_0)


def test_case_6():
    bytes_0 = b'"\x88S\xf8\x03g\xf15*'
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = True
    module_0.Config(env_prefix=list_0, keep_alive=bool_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    config_1 = module_0.Config()
    config_0.__getattr__(config_1)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_10():
    bytes_0 = b'"\x88S\xf8\x03g\xf15*'
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = "bN\x0bS<RG\n"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=list_0)


def test_case_11():
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0, converters=config_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    var_0 = config_0.__repr__()
    none_type_1 = config_0.register_type(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
