# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0)
    config_1.__getattr__(config_1)


def test_case_2():
    none_type_0 = None
    str_0 = "H"
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    none_type_1 = config_0.update()


def test_case_3():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_1 = module_0.Config(none_type_0, converters=none_type_0)
    config_1.update_config(none_type_0)


def test_case_5():
    str_0 = "Wva_a"
    module_0.Config(converters=str_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_7():
    str_0 = "Wva_a"
    set_0 = {str_0, str_0, str_0}
    config_0 = module_0.Config(converters=set_0)
    var_0 = config_0.load_environment_vars()
    module_0.DescriptorMeta(str_0, *var_0)


def test_case_8():
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_1 = module_0.Config(config_0)
    var_0 = config_1.load_environment_vars()
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = module_1.isclass(config_0)
    config_0.update_config(var_0)


def test_case_11():
    str_0 = "Wva_a"
    set_0 = {str_0, str_0, str_0}
    config_0 = module_0.Config(converters=set_0)
    str_1 = "H&IkZYk}ej}#_/"
    config_0.update_config(str_1)


def test_case_12():
    str_0 = "va"
    set_0 = {str_0, str_0, str_0}
    config_0 = module_0.Config(converters=set_0)
    str_1 = "_FALLBACK_ERROR_FORMAT"
    bool_0 = True
    str_2 = "y>Mu"
    str_3 = "6']kIKW"
    dict_0 = {str_1: bool_0, str_2: bool_0, str_3: bool_0}
    module_0.Config(dict_0)


def test_case_13():
    str_0 = "Wva_a"
    set_0 = {str_0, str_0, str_0}
    config_0 = module_0.Config(converters=set_0)
    config_1 = module_0.Config(converters=config_0)
    str_1 = "H"
    module_0.Config(env_prefix=str_1, keep_alive=config_1, converters=config_0)
