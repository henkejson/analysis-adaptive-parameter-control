# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.helpers as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    default_0 = module_1.Default()
    str_0 = default_0.__str__()
    var_0 = default_0.__repr__()
    module_0.Config(converters=default_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    config_1 = module_0.Config(env_prefix=none_type_0)
    config_2 = module_0.Config(none_type_0)
    config_1.update_config(none_type_1)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config()
    none_type_2 = module_2.getmembers(config_0)
    float_0 = 2112.8
    config_0.update_config(float_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config()
    none_type_2 = config_0.register_type(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    none_type_1 = None
    config_0.__setitem__(none_type_1, config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.update_config(config_0)
    var_1 = module_2.isclass(config_0)
    config_0.__getattr__(config_0)


def test_case_10():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_1 = module_0.Config()
    none_type_1 = config_0.register_type(none_type_0)
    str_0 = "goAi<K"
    none_type_2 = config_1.__setitem__(str_0, str_0)
    str_1 = "Received unknown ASGI scope"
    config_1.update_config(str_1)


def test_case_11():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config(keep_alive=none_type_0)
    none_type_2 = config_0.register_type(none_type_1)
    config_0.register_type(none_type_2)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    config_1 = module_0.Config()
    config_2 = module_0.Config(converters=config_0)
    var_0 = config_1.update_config(config_0)
    config_3 = module_0.Config(var_0, none_type_1)
    none_type_2 = config_0.register_type(var_0)
    config_0.update_config(none_type_2)


def test_case_13():
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = config_0.update()
    config_1 = module_0.Config()
    none_type_2 = config_1.register_type(config_0)
    bool_0 = True
    module_0.Config(env_prefix=bool_0)


def test_case_14():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    bool_0 = True
    config_1 = module_0.Config(config_0, keep_alive=bool_0)
    var_0 = config_1.update_config(config_0)
    var_1 = module_2.isdatadescriptor(config_1)
    bool_0.respond(bool_0)


def test_case_15():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    none_type_1 = config_0.update(**config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, none_type_0)
