# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ")KLdj"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)
    var_0 = config_1.update_config(config_1)
    config_1.update_config(var_0)


def test_case_2():
    str_0 = "1G\x0b~j?tuOd!]0"
    str_1 = "{onF<S_NE7QQ-(}02:<L"
    dict_0 = {str_1: str_1, str_1: str_0}
    bool_0 = False
    config_0 = module_0.Config(dict_0, keep_alive=bool_0)
    var_0 = module_1.isclass(str_0)
    bytes_0 = b"\x0czb\x10\xb9,["
    none_type_0 = config_0.__setattr__(str_0, bytes_0)
    var_0.__getattr__(str_0)


def test_case_3():
    str_0 = "|c"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_7():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    var_0 = module_1.isclass(none_type_0)
    var_1 = var_0.__bool__()
    var_1.respond(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.load_environment_vars()
    config_0.respond(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )
    str_0 = "{{{A\ru-rw\r#`TE=|"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    var_0 = module_1.isclass(none_type_0)
    var_1 = var_0.__bool__()
    var_1.respond(config_0)


def test_case_10():
    str_0 = ")KLdj"
    config_0 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)
    config_0.update_config(str_0)


def test_case_11():
    str_0 = ")KLdj"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    str_1 = "3qSQ#~XLZ"
    none_type_1 = config_0.register_type(str_1)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)
    config_0.__getattr__(config_0)


def test_case_12():
    str_0 = "!C^ro\rP\\x\rQ#"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_13():
    str_0 = "L"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_14():
    str_0 = "L"
    none_type_0 = None
    config_0 = module_0.Config(
        env_prefix=str_0, keep_alive=none_type_0, converters=none_type_0
    )
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)
