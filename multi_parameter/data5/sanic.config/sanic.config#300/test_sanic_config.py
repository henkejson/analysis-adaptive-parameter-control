# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "$"
    config_0 = module_0.Config(converters=str_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config(keep_alive=bool_0)
    bool_1 = True
    float_0 = 3916.52668
    module_0.Config(keep_alive=bool_1, converters=float_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0, converters=config_0)
    none_type_0 = config_1.update()
    var_0 = module_1.isdatadescriptor(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config()
    str_0 = "Vd{~Sw"
    none_type_1 = config_0.__setitem__(str_0, none_type_0)
    config_0.update_config(none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.__getattr__(config_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    str_0 = "uZcf,\x0b&"
    var_0 = config_0.load_environment_vars()
    config_0.update_config(str_0)


def test_case_10():
    str_0 = "o\x0c>\x0b{K%9F0b.nRGE125"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_11():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = module_1.getmembers(config_1)


def test_case_12():
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    none_type_1 = config_1.register_type(none_type_0)
    var_0 = config_1.update_config(config_1)
    var_1 = config_0.load_environment_vars()
    none_type_2 = config_0.update()
    config_1.register_type(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, str_0)
