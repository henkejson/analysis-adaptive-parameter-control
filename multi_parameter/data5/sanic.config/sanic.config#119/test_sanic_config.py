# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(
        none_type_0, none_type_0, none_type_0, converters=none_type_0
    )


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_3():
    str_0 = "pR8^R?U"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.__getattr__(config_0)


def test_case_4():
    str_0 = "5A2?W"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0)
    config_0.update_config(str_0)


def test_case_5():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_6():
    str_0 = "pR8^R?U"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_7():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.Config(dict_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    int_0 = 2484
    none_type_0 = config_0.register_type(int_0)
    str_0 = "=\\+Gpxn$J&V5mh-]wj2"
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setattr__(str_0, config_0)
    none_type_2 = None
    config_1 = module_0.Config(none_type_2)
    var_0.init_for_request()


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "=\\+Gpxn$J&V5mh-]wj2"
    var_1 = config_0.update_config(config_0)
    none_type_0 = config_0.__setattr__(str_0, config_0)
    config_1 = module_0.Config(keep_alive=none_type_0, converters=str_0)
    none_type_1 = config_0.register_type(var_1)
    var_1.__subclasscheck__(config_0, str_0)


def test_case_12():
    config_0 = module_0.Config()
    str_0 = "'Mmqfwq,t6vg9y0FyJo"
    none_type_0 = config_0.register_type(str_0)
    str_1 = "=\\+Gpxn$J&V5mh-]wj2"
    var_0 = config_0.update_config(config_0)
    none_type_1 = config_0.__setattr__(str_1, config_0)
    none_type_2 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config(config_0, keep_alive=str_0)
    config_0.update_config(none_type_0)


def test_case_13():
    str_0 = "kcZ-\t %j)&\x0c6G=sgs"
    module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=str_0)


def test_case_14():
    str_0 = ""
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    config_0.load_environment_vars(str_0)


def test_case_15():
    config_0 = module_0.Config()
    str_0 = "'Mmqfwq,t6vg9y0FyJo"
    none_type_0 = config_0.register_type(str_0)
    str_1 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.update_config(config_0)
    config_0.__setattr__(str_1, config_0)
