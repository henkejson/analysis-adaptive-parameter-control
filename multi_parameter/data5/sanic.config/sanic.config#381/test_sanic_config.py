# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import abc as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(keep_alive=bool_0, converters=bool_0)


def test_case_2():
    bool_0 = True
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_4():
    int_0 = -861
    str_0 = "P8\x0c"
    str_1 = "\t\rGK<9\r)o.\t"
    str_2 = "Not all workers acknowledged a successful startup. Shutting down.\n\n"
    str_3 = "'U\"hC;s=g"
    dict_0 = {str_0: int_0, str_1: str_0, str_2: str_1, str_3: str_2}
    bool_0 = False
    config_0 = module_0.Config(dict_0, str_2, bool_0)
    float_0 = 1520.873096
    none_type_0 = None
    none_type_1 = config_0.update()
    module_0.Config(env_prefix=float_0, keep_alive=none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    str_0 = '="'
    bool_0 = True
    none_type_1 = config_0.register_type(bool_0)
    var_0 = config_0.update_config(config_0)
    none_type_2 = config_0.__setattr__(str_0, str_0)
    module_1.Http(config_0)


def test_case_6():
    bytes_0 = b"\x96/\x81\x89\x1a\xd8\xee\xcb\xea"
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    config_0.update_config(bytes_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.update_config(none_type_0)


def test_case_8():
    str_0 = "n2,ky<"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    list_0 = []
    module_2.ABCMeta(*list_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_10():
    int_0 = -861
    str_0 = "P8\x0c"
    str_1 = "\t\rGK<9\r)o.\t"
    str_2 = "Not all workers acknowledged a successful startup. Shutting down.\n\n"
    str_3 = "'U\"hC;s=g"
    dict_0 = {str_0: int_0, str_1: str_0, str_2: str_1, str_3: str_2}
    bool_0 = False
    config_0 = module_0.Config(dict_0, str_2, bool_0)
    none_type_0 = config_0.update()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_12():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    bool_0 = True
    none_type_1 = config_0.register_type(bool_0)
    config_0.register_type(bool_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.update_config(config_0)
    config_0.__setattr__(str_0, str_0)
