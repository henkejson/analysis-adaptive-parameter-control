# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    module_0.Config(converters=bool_0)


def test_case_2():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_3():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.__getattr__(bool_0)


def test_case_4():
    bool_0 = True
    config_0 = module_0.Config(keep_alive=bool_0)
    var_0 = config_0.update_config(config_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_8():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config()
    none_type_0 = None
    str_0 = "INSPECTOR"
    none_type_1 = config_0.__setitem__(str_0, config_0)
    config_1 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    var_0 = config_1.update_config(config_0)
    config_1.__getattr__(bool_0)


def test_case_11():
    bool_0 = True
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=bool_0)
    module_0.Config(env_prefix=bool_0, converters=config_1)


def test_case_12():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)
    var_0 = config_1.update_config(config_1)
    str_0 = "%s is not a valid Range Type"
    config_1.update_config(str_0)


def test_case_13():
    bool_0 = False
    config_0 = module_0.Config()
    module_0.Config(config_0, config_0, bool_0)


def test_case_14():
    config_0 = module_0.Config()
    int_0 = 1753
    none_type_0 = config_0.register_type(int_0)
    var_0 = config_0.update_config(config_0)
    config_0.register_type(int_0)


def test_case_15():
    bool_0 = True
    config_0 = module_0.Config()
    str_0 = "5yk"
    bool_1 = True
    str_1 = "_FALLBACK_ERROR_FORMAT"
    str_2 = "gcjg"
    dict_0 = {str_0: bool_1, str_1: str_1, str_0: bool_0, str_2: str_0}
    module_0.Config(dict_0)


def test_case_16():
    config_0 = module_0.Config()
    str_0 = "H"
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.update_config(str_0)
