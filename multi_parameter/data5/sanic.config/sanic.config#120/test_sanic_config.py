# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "C'#R.B2.p7]\x0c;"
    module_0.Config(env_prefix=str_0, converters=str_0)


def test_case_2():
    tuple_0 = ()
    config_0 = module_0.Config(env_prefix=tuple_0, keep_alive=tuple_0)
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(none_type_0)


def test_case_3():
    list_0 = []
    var_0 = module_1.isclass(list_0)
    int_0 = 727
    tuple_0 = (var_0, int_0, var_0)
    module_0.Config(tuple_0, keep_alive=var_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = module_1.getmembers(config_0)
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_0.register_type(var_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    none_type_1 = config_0.register_type(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    config_0.update_config(none_type_0)


def test_case_10():
    bool_0 = False
    var_0 = module_1.isclass(bool_0)
    var_1 = module_1.isclass(var_0)
    none_type_0 = None
    var_2 = module_1.isdatadescriptor(none_type_0)
    str_0 = "=K^W/R\n"
    set_0 = {str_0, str_0, str_0, str_0}
    tuple_0 = (str_0, set_0)
    config_0 = module_0.Config(converters=tuple_0)
    config_0.update_config(str_0)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    bytes_0 = b"1R=\xa1F\x9a\xd9B\xa9\x81\x830U"
    config_0.update_config(bytes_0)


def test_case_12():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    module_0.Config(config_0, config_0)


def test_case_13():
    config_0 = module_0.Config()
    config_0.__setitem__(config_0, config_0)


def test_case_14():
    config_0 = module_0.Config()
    str_0 = "LOCAL_CERT_CREATOR"
    var_0 = config_0.update_config(config_0)
    str_1 = "f'Rt"
    none_type_0 = config_0.__setitem__(str_1, str_0)
    config_0.__setitem__(str_0, str_0)
