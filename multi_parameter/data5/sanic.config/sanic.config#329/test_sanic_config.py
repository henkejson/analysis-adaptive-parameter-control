# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    config_1 = module_0.Config(keep_alive=config_0, converters=config_0)
    var_0 = config_0.update_config(config_0)
    var_0.load_environment_vars(var_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config()
    config_0.__getattr__(none_type_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    float_0 = 0.1
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    config_0.update_config(float_0)


def test_case_6():
    str_0 = 'Exception raised in exception handler "%s" for uri: %s'
    str_1 = "GRACEFUL_SHUTDOWN_TIMEOUT"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__setitem__(none_type_0, str_1)


def test_case_7():
    str_0 = 'Exception raised in exception handler "%s" for uri: %s'
    config_0 = module_0.Config(env_prefix=str_0)
    bytes_0 = b'\x04*p\x8b\xed-"-\x06\xb7\xed'
    module_1.Http(bytes_0)


def test_case_8():
    str_0 = "<\t1>)r^Q\nrvt9/W"
    bool_0 = False
    set_0 = {bool_0}
    config_0 = module_0.Config(keep_alive=set_0)
    none_type_0 = config_0.__setattr__(str_0, str_0)
    module_0.DescriptorMeta(str_0)


def test_case_9():
    bool_0 = True
    module_0.Config(bool_0)


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config(bool_0)
    config_1 = module_0.Config()
    config_0.__getattr__(config_1)


def test_case_11():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, str_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "y(F2Jtn)5Z4#HGzo,h>"
    none_type_0 = config_0.__setattr__(str_0, str_0)
    config_0.update_config(str_0)


def test_case_13():
    str_0 = "Check if the application is in debug mode.\n\n        Returns:\n            bool: `True` if the application is in debug mode, `False`\n                otherwise.\n        "
    module_0.Config(converters=str_0)
