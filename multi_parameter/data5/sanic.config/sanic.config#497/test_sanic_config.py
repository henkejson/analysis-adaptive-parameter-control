# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.stream as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    bool_0 = True
    stream_0 = module_1.Stream()
    config_0 = module_0.Config()
    module_0.Config(converters=bool_0)


def test_case_2():
    dict_0 = {}
    config_0 = module_0.Config(dict_0, dict_0)
    var_0 = config_0.update_config(config_0)


def test_case_3():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    config_1 = module_0.Config(config_0, dict_0)
    var_0 = config_0.update_config(config_0)


def test_case_4():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_5():
    str_0 = "none"
    config_0 = module_0.Config(env_prefix=str_0)
    str_1 = "x2V8U}&x!HAsr53AZ"
    list_0 = [str_1, str_1]
    none_type_0 = config_0.__setattr__(str_1, list_0)
    config_0.update_config(str_1)


def test_case_6():
    dict_0 = {}
    config_0 = module_0.Config(dict_0, dict_0)
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.update_config(dict_0)
    none_type_0 = config_0.register_type(config_0)
    var_1 = config_0.update_config(dict_0)
    config_0.__setitem__(config_0, dict_0)


def test_case_8():
    bool_0 = True
    str_0 = "none"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.__setattr__(bool_0, bool_0)


def test_case_9():
    dict_0 = {}
    config_0 = module_0.Config(env_prefix=dict_0, keep_alive=dict_0)
    var_0 = config_0.load_environment_vars()
    int_0 = 8
    module_0.DescriptorMeta(int_0)


def test_case_10():
    config_0 = module_0.Config()
    list_0 = module_2.getmembers(config_0)
    config_0.update_config(list_0)


def test_case_11():
    config_0 = module_0.Config()
    list_0 = [config_0, config_0, config_0]
    config_0.update_config(list_0)


def test_case_12():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.update()
    config_0.__getattr__(dict_0)


def test_case_13():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(config_0, var_0)
    config_2 = module_0.Config(dict_0, var_0, converters=config_1)
    var_0.update_config(dict_0)


def test_case_14():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.register_type(config_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(config_0)
    config_2 = module_0.Config(config_0, var_0)
    var_1 = config_0.update_config(config_0)
    config_0.register_type(config_0)


def test_case_15():
    dict_0 = {}
    config_0 = module_0.Config(dict_0)
    var_0 = config_0.load_environment_vars()
    config_1 = module_0.Config(config_0, var_0)
    var_1 = config_0.update_config(config_0)
    config_2 = module_0.Config(dict_0, converters=config_0)
    str_0 = "_FALLBACK_ERROR_FORMAT"
    dict_1 = {str_0: var_0, var_1: str_0}
    module_0.Config(dict_1)
