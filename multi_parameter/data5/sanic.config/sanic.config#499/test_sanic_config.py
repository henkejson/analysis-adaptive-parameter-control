# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.errorpages as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    config_0 = module_0.Config()
    bool_0 = False
    config_1 = module_0.Config(converters=config_0)
    none_type_0 = config_0.register_type(bool_0)
    none_type_1 = config_0.register_type(config_0)
    var_0 = config_1.update_config(config_1)
    module_1.check_error_format(none_type_0)


def test_case_2():
    bool_0 = False
    config_0 = module_0.Config()
    bool_1 = True
    config_1 = module_0.Config(env_prefix=bool_0, keep_alive=bool_1)


def test_case_3():
    config_0 = module_0.Config()
    config_1 = module_0.Config(config_0)


def test_case_4():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    config_0.__getattr__(none_type_0)


def test_case_5():
    str_0 = "vV9LX;u"
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=none_type_0, converters=str_0)
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    var_0 = config_0.update_config(config_0)
    config_1 = module_0.Config(config_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_9():
    str_0 = "<*DZ.uDgzE-7Q#z"
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=str_0, converters=none_type_0)
    bytes_0 = b"\xd0$\xd2\xbd\t\x0b\xb4D@\xec\xfe\xb7\xa5\x13c%.\x9c"
    var_0 = module_2.isclass(bytes_0)
    config_1 = module_0.Config()
    var_0.log_response()


def test_case_10():
    bool_0 = False
    config_0 = module_0.Config()
    str_0 = '+5g3"k'
    str_1 = "_INIT"
    str_2 = "H=8P.;^Ex"
    dict_0 = {str_1: str_1, str_2: bool_0, str_1: str_2, str_2: str_0}
    none_type_0 = config_0.update(**dict_0)
    config_0.update_config(str_0)


def test_case_11():
    none_type_0 = None
    none_type_1 = None
    config_0 = module_0.Config(none_type_1, converters=none_type_1)
    list_0 = [none_type_0]
    tuple_0 = (list_0, config_0, list_0, list_0)
    config_0.__setitem__(none_type_1, tuple_0)


def test_case_12():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(var_0)
    config_1 = module_0.Config(config_0)
    config_0.register_type(none_type_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setitem__(str_0, var_0)
