# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import sanic.utils as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "7F{'EFbM&#&6\x0b.$l)[:8"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, converters=dict_0)
    module_0.DescriptorMeta(str_0)


def test_case_2():
    str_0 = ">%uW4"
    config_0 = module_0.Config(keep_alive=str_0, converters=str_0)
    config_1 = module_0.Config()
    var_0 = config_1.update_config(config_1)
    var_1 = module_1.isclass(var_0)


def test_case_3():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)


def test_case_4():
    bool_0 = True
    str_0 = ">"
    none_type_0 = None
    module_0.Config(bool_0, str_0, converters=none_type_0)


def test_case_5():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, converters=none_type_0)
    var_0 = config_0.load_environment_vars()
    config_0.__getattr__(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    str_0 = ">%uW4"
    config_0 = module_0.Config()
    none_type_0 = config_0.__setitem__(str_0, str_0)
    none_type_1 = None
    module_0.DescriptorMeta(none_type_1)


def test_case_8():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_1 = config_0.register_type(var_0)
    config_0.__subclasscheck__(list_0, list_0)


def test_case_9():
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, none_type_0, converters=none_type_0)
    config_0.update_config(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_1 = module_0.Config()
    var_0 = module_1.isclass(config_1)
    str_0 = ",v-aR']I~thE6C"
    bytes_0 = b"\x98\x05L\xaf`^\x84\xbfYL\xb8\xdc"
    none_type_0 = config_1.register_type(bytes_0)
    var_1 = config_1.__repr__()
    config_1.update_config(str_0)


def test_case_11():
    str_0 = "\nLogger used by Sanic for server related messages\n"
    none_type_0 = None
    config_0 = module_0.Config(converters=none_type_0)
    none_type_1 = None
    config_1 = module_0.Config(none_type_1, str_0, none_type_0, converters=none_type_1)
    module_2.load_module_from_file_location(config_1)


def test_case_12():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.Config(converters=list_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update()
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, config_0)
