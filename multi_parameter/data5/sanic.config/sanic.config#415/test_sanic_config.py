# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)


def test_case_2():
    str_0 = "iD'im]gzve"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_1 = module_0.Config()
    config_1.__setattr__(dict_0, config_1)


def test_case_3():
    str_0 = "L"
    config_0 = module_0.Config(env_prefix=str_0)
    config_0.update_config(str_0)


def test_case_4():
    bytes_0 = b"\xfb\x89\x01|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_1 = module_0.Config(config_0, keep_alive=bytes_0)
    bool_0 = True
    none_type_0 = None
    str_0 = "L"
    config_2 = module_0.Config(env_prefix=str_0)
    config_3 = module_0.Config(config_1, keep_alive=none_type_0, converters=none_type_0)
    list_0 = [config_1]
    none_type_1 = config_3.update(*list_0)
    none_type_2 = config_3.register_type(bool_0)
    var_0 = config_2.update_config(config_1)
    module_0.Config(keep_alive=var_0, converters=bool_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)
    none_type_1 = config_0.register_type(none_type_0)


def test_case_6():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    none_type_1 = config_0.update()
    var_0 = config_0.load_environment_vars()


def test_case_7():
    bytes_0 = b"\xfb\x89\x01|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    none_type_0 = config_0.update(**config_0)


def test_case_8():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_9():
    bool_0 = True
    config_0 = module_0.Config()
    config_0.update_config(bool_0)


def test_case_10():
    str_0 = ".S8PAt&6\\i7"
    bool_0 = False
    str_1 = "yep"
    none_type_0 = None
    dict_0 = {str_0: bool_0, str_1: str_1, str_0: none_type_0}
    str_2 = "A$)6qOGD?65 xs~*goG"
    module_0.Config(dict_0, bool_0, converters=str_2)


def test_case_11():
    bytes_0 = b"\xfb\x89\x01|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    config_1 = module_0.Config(config_0, keep_alive=bytes_0)
    float_0 = -2360.906
    none_type_0 = config_1.register_type(float_0)
    bool_0 = True
    none_type_1 = None
    str_0 = "L"
    config_2 = module_0.Config(env_prefix=str_0)
    config_3 = module_0.Config(config_1, keep_alive=none_type_1, converters=none_type_1)
    list_0 = [config_1]
    none_type_2 = config_3.update(*list_0)
    none_type_3 = config_3.register_type(bool_0)
    config_4 = module_0.Config(none_type_3, keep_alive=none_type_1, converters=config_2)
    config_1.update_config(bool_0)


def test_case_12():
    bytes_0 = b"\xfb\xb5|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)


def test_case_13():
    config_0 = module_0.Config()
    none_type_0 = config_0.update(**config_0)


def test_case_14():
    str_0 = ".S8PDAt&6\\i7R"
    none_type_0 = None
    bool_0 = False
    str_1 = "yep"
    none_type_1 = None
    dict_0 = {str_0: bool_0, str_1: str_1, str_0: none_type_1}
    config_0 = module_0.Config(dict_0, str_1)
    str_2 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_2, none_type_0)


def test_case_15():
    bytes_0 = b"\xfb\x89\x01|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    none_type_0 = config_0.update_config(config_0)


def test_case_16():
    bytes_0 = b"\xfb\xb5|"
    config_0 = module_0.Config(keep_alive=bytes_0)
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    none_type_1 = config_0.update(*list_0)
    var_1 = config_0.update_config(config_0)


def test_case_17():
    bytes_0 = b"\xfb\xb5|"
    config_0 = module_0.Config()
    var_0 = module_1.getmembers(config_0)
    list_0 = [var_0]
    none_type_0 = config_0.update(*list_0)
    module_1.getmembers(config_0, bytes_0)
