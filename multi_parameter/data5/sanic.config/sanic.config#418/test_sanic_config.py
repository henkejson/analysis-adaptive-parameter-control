# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import inspect as module_1
import builtins as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0)
    str_0 = "^rS1mHO5z'"
    config_1 = module_0.Config(keep_alive=config_0)
    config_1.update_config(str_0)


def test_case_2():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_3():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_4():
    str_0 = ")W4Ea!n;m"
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(none_type_0, str_0)
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=bool_0)
    none_type_1 = config_0.__setattr__(str_0, bool_0)
    module_0.DescriptorMeta(bool_0)


def test_case_5():
    bool_0 = False
    str_0 = "starts"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0)
    none_type_0 = config_0.register_type(bool_0)
    config_1 = module_0.Config(none_type_0, converters=config_0)
    config_2 = module_0.Config()
    var_0 = config_2.update_config(config_2)
    var_1 = module_1.isclass(config_2)
    config_2.update_config(var_1)


def test_case_6():
    bool_0 = False
    str_0 = "U'-"
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars(str_0)
    str_1 = "starts"
    dict_0 = {str_0: str_0, str_1: str_0}
    config_1 = module_0.Config(dict_0)
    none_type_0 = config_1.register_type(bool_0)
    none_type_1 = config_1.__setattr__(str_0, bool_0)
    config_2 = module_0.Config()
    var_1 = config_2.update_config(config_2)
    var_2 = module_1.isclass(config_2)
    config_2.update_config(var_2)


def test_case_7():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_8():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_9():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.__getattr__(var_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = module_2.object()
    var_1 = var_0.__repr__()
    none_type_0 = config_0.__setitem__(var_1, var_1)


def test_case_11():
    config_0 = module_0.Config()
    set_0 = set()
    none_type_0 = config_0.register_type(set_0)
    config_0.register_type(set_0)


def test_case_12():
    str_0 = "_FALLBACK_ERROR_FORMAT"
    str_1 = "starts"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.Config(dict_0)
