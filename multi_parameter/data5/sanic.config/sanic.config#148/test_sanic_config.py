# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import sanic.http.http1 as module_1
import inspect as module_2
import sanic.utils as module_3


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = ",Y\\Ec9b[ef"
    config_0 = module_0.Config(env_prefix=str_0, converters=str_0)
    bytes_0 = b"'"
    config_0.__setattr__(bytes_0, bytes_0)


def test_case_2():
    str_0 = "FORWARDED_SECRET"
    dict_0 = {str_0: str_0, str_0: str_0}
    config_0 = module_0.Config(dict_0, str_0)
    none_type_0 = config_0.__setattr__(str_0, dict_0)
    config_1 = module_0.Config()
    config_1.__setitem__(config_1, config_1)


def test_case_3():
    bytes_0 = b""
    none_type_0 = None
    config_0 = module_0.Config()
    config_1 = module_0.Config(none_type_0)
    config_1.update_config(bytes_0)


def test_case_4():
    config_0 = module_0.Config()
    module_1.Http(config_0)


def test_case_5():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.__getattr__(config_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = module_2.isclass(config_0)
    str_0 = "R"
    config_1 = module_0.Config(env_prefix=str_0, keep_alive=str_0, converters=config_0)
    var_1 = config_0.load_environment_vars()
    bytes_0 = b"Already Reported"
    str_1 = "nH{.[+'X"
    module_3.load_module_from_file_location(bytes_0, str_1)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    none_type_1 = config_0.register_type(none_type_0)
    config_0.register_type(none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)
    none_type_0 = config_0.register_type(config_0)
    none_type_1 = None
    config_1 = module_0.Config(
        env_prefix=none_type_1, keep_alive=var_0, converters=var_0
    )
    str_0 = ")iDXDuY<\n!,\x0cF@4c#v"
    float_0 = -1478.472937
    none_type_2 = config_1.__setattr__(str_0, float_0)
    var_0.init_for_request()
