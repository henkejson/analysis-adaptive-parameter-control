# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0
import builtins as module_1
import inspect as module_2


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    str_0 = "4'z;9f]Ql~7|\x0c]i`Eb"
    dict_0 = {str_0: str_0}
    bool_0 = False
    none_type_0 = None
    config_0 = module_0.Config(keep_alive=bool_0, converters=none_type_0)
    none_type_1 = config_0.update(**dict_0)


def test_case_2():
    str_0 = "\ru+V\\F0WerB{Q$"
    bool_0 = True
    str_1 = "_FALLBACK_ERROR_FORMAT"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0, str_1: bool_0}
    module_0.Config(dict_0, str_0)


def test_case_3():
    bool_0 = False
    str_0 = "MjliIqX2]9=w\x0b(q/[,iS"
    dict_0 = {str_0: str_0}
    config_0 = module_0.Config(dict_0)
    config_0.update_config(bool_0)


def test_case_4():
    config_0 = module_0.Config()
    bool_0 = False
    config_0.__getattr__(bool_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_6():
    config_0 = module_0.Config()
    var_0 = config_0.load_environment_vars()
    none_type_0 = config_0.register_type(var_0)
    var_1 = config_0.update_config(config_0)
    config_1 = module_0.Config(env_prefix=none_type_0, converters=none_type_0)
    none_type_1 = config_1.register_type(config_0)
    config_0.update_config(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_8():
    config_0 = module_0.Config()
    var_0 = config_0.update_config(config_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)
    config_0.__setitem__(none_type_0, none_type_0)


def test_case_10():
    config_0 = module_0.Config()
    config_0.__getattr__(config_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = None
    object_0 = module_1.object()
    module_0.Config(keep_alive=none_type_0, converters=object_0)


def test_case_12():
    bytes_0 = b"Loop Detected"
    module_0.Config(converters=bytes_0)


def test_case_13():
    config_0 = module_0.Config()
    var_0 = module_2.isclass(config_0)
    config_1 = module_0.Config(keep_alive=config_0)
    config_2 = module_0.Config(var_0, converters=config_1)
    var_1 = config_0.update_config(config_0)
    config_0.update_config(var_0)


def test_case_14():
    config_0 = module_0.Config()
    var_0 = module_2.isclass(config_0)
    none_type_0 = config_0.register_type(var_0)
    var_1 = var_0.__repr__()
    config_0.update_config(var_1)


def test_case_15():
    config_0 = module_0.Config()
    var_0 = module_2.isclass(config_0)
    none_type_0 = config_0.register_type(var_0)
    set_0 = {var_0}
    str_0 = "LOCAL_CERT_CREATOR"
    config_0.__setattr__(str_0, set_0)
