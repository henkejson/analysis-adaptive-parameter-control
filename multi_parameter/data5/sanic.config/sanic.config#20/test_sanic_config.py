# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import sanic.config as module_0


def test_case_0():
    config_0 = module_0.Config()


def test_case_1():
    none_type_0 = None
    config_0 = module_0.Config(env_prefix=none_type_0, keep_alive=none_type_0)


def test_case_2():
    config_0 = module_0.Config()
    str_0 = "oRdxD"
    none_type_0 = config_0.__setattr__(str_0, config_0)
    module_0.Config(str_0)


def test_case_3():
    config_0 = module_0.Config()
    str_0 = "\n\n                 Sanic\n         Build Fast. Run Fast.\n\n"
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.__getattr__(str_0)


def test_case_4():
    config_0 = module_0.Config()
    none_type_0 = None
    config_0.update_config(none_type_0)


def test_case_5():
    config_0 = module_0.Config()
    none_type_0 = config_0.update_config(config_0)


def test_case_6():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    str_0 = "tjZdM"
    none_type_1 = config_0.__setitem__(str_0, str_0)
    str_0.__getattr__(none_type_0)


def test_case_7():
    config_0 = module_0.Config()
    module_0.Config(env_prefix=config_0)


def test_case_8():
    config_0 = module_0.Config()
    bytes_0 = b"H\x86fe\x1b\x92tuY\xc0qE"
    config_0.update_config(bytes_0)


def test_case_9():
    config_0 = module_0.Config()
    none_type_0 = None
    var_0 = config_0.update_config(config_0)
    module_0.Config(none_type_0, config_0, none_type_0, converters=config_0)


def test_case_10():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "Required\n========\n  Positional"
    config_0 = module_0.Config(keep_alive=dict_0)
    config_1 = module_0.Config(env_prefix=str_0)
    config_1.update_config(bool_0)


def test_case_11():
    config_0 = module_0.Config()
    none_type_0 = config_0.register_type(config_0)


def test_case_12():
    config_0 = module_0.Config()
    bool_0 = False
    none_type_0 = config_0.register_type(bool_0)
    config_0.__getattr__(config_0)


def test_case_13():
    config_0 = module_0.Config()
    int_0 = -1110
    none_type_0 = config_0.register_type(int_0)
    config_0.register_type(int_0)


def test_case_14():
    str_0 = "L"
    module_0.Config(env_prefix=str_0, converters=str_0)
