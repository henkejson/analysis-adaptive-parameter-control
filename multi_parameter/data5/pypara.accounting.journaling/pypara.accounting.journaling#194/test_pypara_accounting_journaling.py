# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pypara.accounting.journaling as module_0
import pypara.commons.numbers as module_1


def test_case_0():
    pass


def test_case_1():
    direction_0 = module_0.Direction.DEC
    journal_entry_0 = module_0.JournalEntry(direction_0, direction_0, direction_0)
    none_type_0 = journal_entry_0.validate()


def test_case_2():
    none_type_0 = None
    journal_entry_0 = module_0.JournalEntry(none_type_0, none_type_0, none_type_0)
    bytes_0 = b"\x0cS\x12OhK\x88}\xf9\x8ep\x1d\x95\x07!}\x94\x10Y"
    var_0 = module_1.isum(bytes_0)
    journal_entry_1 = journal_entry_0.post(journal_entry_0, var_0, var_0)


def test_case_3():
    none_type_0 = None
    journal_entry_0 = module_0.JournalEntry(none_type_0, none_type_0, none_type_0)
    none_type_1 = journal_entry_0.validate()
    bytes_0 = b"\x0cS\x12OhK\x88}\x8ep\x1d\x95\x07!}\x94\x10Y"
    var_0 = module_1.isum(bytes_0)
    journal_entry_1 = journal_entry_0.post(none_type_1, var_0, var_0)
    journal_entry_1.validate()


def test_case_4():
    none_type_0 = None
    str_0 = "\n        Returns the ``dov`` if the monetary value is *defined*, ``default``\n        otherwise.\n\n        >>> from pypara.currencies import Currencies\n        >>> someprice = Price.of(Currencies[\"USD\"], Decimal('1'), Date(2019, 1, 1))\n        >>> someprice.dov_or(Date(2001, 1, 1))\n        datetime.date(2019, 1, 1)\n        >>> noneprice = Price.of(None, None, Date(2019, 1, 1))\n        >>> noneprice.dov_or(Date(2001, 1, 1))\n        datetime.date(2001, 1, 1)\n        "
    posting_0 = module_0.Posting(str_0, str_0, str_0, str_0, none_type_0)
    var_0 = posting_0.__hash__()
    journal_entry_0 = module_0.JournalEntry(none_type_0, none_type_0, none_type_0)
    none_type_1 = journal_entry_0.validate()
    bytes_0 = b""
    var_1 = none_type_1.__hash__()
    var_2 = module_1.isum(bytes_0)
    var_3 = var_2.__repr__()
    journal_entry_1 = journal_entry_0.post(none_type_1, var_2, var_2)
    list_0 = []
    var_4 = var_0.__repr__()
    var_4.post(var_2, list_0, var_1)
