# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    import_processor_0 = module_0.ImportProcessor()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        import_processor_0, import_processor_0, import_processor_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = "$I:C\r*F1&^n&8[P>QNg"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(var_0, str_0, var_0)


def test_case_3():
    bool_0 = False
    list_0 = [bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, list_0, children=bool_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "Context manager to pass exceptions.\n    :param exceptions: Exceptions to pass\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "N)e"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        import_processor_0, import_processor_0, import_processor_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    tuple_0 = ()
    module_0.ScopeReplacer(tuple_0, tuple_0, tuple_0)


def test_case_9():
    import_processor_0 = module_0.disallow_proxying()


def test_case_10():
    bytes_0 = b""
    bool_0 = False
    list_0 = [bytes_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(
        list_0, bool_0, bytes_0, bytes_0, bool_0
    )
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_11():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = "Context manager to pass excepti(ns.\n  Y :param exceptions: Exceptions to pass\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_12():
    str_0 = "\n    Update and/or insert query parameters in a URL.\n\n    >>> update_query_params('http://example.com?foo=bar&biz=baz', dict(foo='stuff'))\n    'http://example.com?...foo=stuff...'\n\n    :param url: URL\n    :type url: str\n    :param kwargs: Query parameters\n    :type kwargs: dict\n    :return: Modified URL\n    :rtype: str\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "\n    Update and/or insert query parameters in a URL.\n\n    >>> update_query_params('http://ex\nmple.com?foo=b:r&biz=baz', dict(foo='stuff'))\n    'http://example.com?...foo=stuff...'\n\n    :param url: URL\n    :type url: str\n    :param kwargs: Query parameters\n    :type kwargs: dict\n    :return: Modified URL\n    :rtype: str\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = 'r3Z"uT'
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_15():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        var_0, var_0, var_0
    )
    var_1 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_16():
    str_0 = "#"
    illegal_use_of_scope_replacer_0 = module_0.disallow_proxying()
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = "Context manager to pass exceptions.\n    :param exceptions: Exceptions to pass\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = "kT^\x0c[$#nmV3"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n    Update and/or insert query parameters ina URL(\n\n    >>> update_uery_params(http://ex\nmple.com?foo=b:r&biz=baz', dict(|oo='stuffi))\n    'http://example.com?...foo=stuff...'\n\n    param url: URL\n R  :typeurl: str\n    :param kwrgs: Query parameters\n    :type kwargs: dict\n    :return: Modified URL\n    :rtype6 str\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = "Context manager to pass excetons.\n    :paramexcetions: Exceptions to pass\n    "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=str_0)
    import_replacer_0.__setattr__(dict_0, str_0)


def test_case_21():
    bytes_0 = b""
    bool_0 = False
    list_0 = [bool_0]
    import_replacer_0 = module_0.ImportReplacer(
        list_0, bool_0, bytes_0, children=bool_0
    )
    scope_replacer_0 = module_0.ScopeReplacer(list_0, import_replacer_0, bool_0)
    scope_replacer_0.__setattr__(list_0, import_replacer_0)
