# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "S"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__unicode__()


def test_case_1():
    float_0 = 766.4
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        float_0, float_0, float_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_2():
    str_0 = 'KHq35Hj^(a}"sO'
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0, str_0)


def test_case_3():
    str_0 = 'KHq35Hj^(a}"sO'
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "~J[.LkL##vwRWy@zCZ_"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    str_0 = "\n    Loads (and returns) an env file speified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n   >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    str_0 = "FB@aWQ"
    module_0.ScopeReplacer(str_0, str_0, str_0)


def test_case_9():
    float_0 = 424.98
    module_0.lazy_import(float_0, float_0)


def test_case_10():
    str_0 = "\x0bBI*cD3X?Ei@f%"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    float_0 = 423.38533107126665
    var_0 = module_0.IllegalUseOfScopeReplacer(float_0, float_0, float_0)


def test_case_12():
    str_0 = "}5M>wlf.6'/)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_13():
    str_0 = "\n  : Loads (and returns) an env file speified by `filename` into te mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n   >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_14():
    str_0 = "I}klCa%;Cy(PDw"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\n    Loads (andreturns) an env file specifie by `filename` into the mapping `environ`.\n\n    >>> lines = [?TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n ^  >>> load_env_file(lines, rite_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),T             ('YOLOx,\n              '.../swaggins/$NONEXIST$NT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env file speified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    int_0 = 235
    var_0 = module_0.disallow_proxying()
    var_1 = module_0.disallow_proxying()
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, int_0
    )
    illegal_use_of_scope_replacer_1 = module_0.IllegalUseOfScopeReplacer(
        illegal_use_of_scope_replacer_0, illegal_use_of_scope_replacer_0
    )
    bool_0 = False
    var_2 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    var_3 = module_0.disallow_proxying()
    var_4 = module_0.disallow_proxying()
    int_1 = -834
    module_0.ImportReplacer(
        bool_0, illegal_use_of_scope_replacer_0, var_0, var_2, int_1
    )


def test_case_18():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "\n  : Loads (and returns) an env file speified by `filename` into te mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n   >>> load_nv_file(lines, write&environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n            ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT\nEXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = 'KHq35Hj^(a}"sO'
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    none_type_0 = None
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, str_0)
    module_0.lazy_import(none_type_0, scope_replacer_0)
