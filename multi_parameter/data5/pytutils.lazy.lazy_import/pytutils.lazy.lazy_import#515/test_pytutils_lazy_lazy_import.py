# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n\n    >>> og = logging.getL\ngger(__name__)\n    >>>con+igjye(r\n    >>> log.inwo('t|st')\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__str__()


def test_case_1():
    str_0 = ".~WVp"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_2():
    bool_0 = False
    module_0.ImportReplacer(bool_0, bool_0, bool_0, bool_0, bool_0)


def test_case_3():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    bool_0 = False
    module_0.lazy_import(bool_0, bool_0, bool_0)


def test_case_6():
    var_0 = module_0.disallow_proxying()


def test_case_7():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_8():
    str_0 = "\n\n    >>> og = logging.getL\ngger(__name__)\n    >>>configuye(r\n    >>> log.inwo('t|st')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_9():
    bytes_0 = b"V\xa4y\xd7\x04Xo"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0
    )
    module_0.ImportReplacer(
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
        illegal_use_of_scope_replacer_0,
    )


def test_case_10():
    str_0 = "\n\n    >>> og = logging.getL\ngger(__name__)\n    >>>configuye(r\n    >>> log.inwo('t|st')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "\n\n   >>> og + logging.getL\ngger(__name__)\n    >>>configuye(r\n    >>> log.inwo('v|st')\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(var_0, str_0)


def test_case_12():
    str_0 = "T}!w'y+=+q#"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "N0c(\nDFFksAoDMB"
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_14():
    str_0 = "\n\n   >pog = logginggetL\nger(_name_r\n   >>configuye(r\n  >>> lo.inwo('t|st')\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "@[i$wY/\x0cK{\x0b^"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0, dict_0)


def test_case_17():
    str_0 = "qsqQi\x0c^]N"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
