# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\n!(.\n)"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_1():
    str_0 = "\\(.)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_2():
    str_0 = "\\(.)"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0.__repr__()


def test_case_3():
    str_0 = "tdfg@cocfBy"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_4():
    str_0 = "\\(.)"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_5():
    str_0 = "\\\\(.)"
    none_type_0 = None
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, dict_0, str_0)
    import_replacer_0.__getattribute__(none_type_0)


def test_case_6():
    str_0 = "XF"
    none_type_0 = None
    module_0.ImportReplacer(str_0, none_type_0, str_0, none_type_0)


def test_case_7():
    import_processor_0 = module_0.ImportProcessor()


def test_case_8():
    str_0 = "X3F"
    var_0 = module_0.ImportProcessor(str_0)


def test_case_9():
    str_0 = "X3F"
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    var_0 = module_0.disallow_proxying()


def test_case_11():
    bytes_0 = b"69\xdb\xf9\xfat\xf3\xa2\x10"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.ScopeReplacer(dict_0, bytes_0, dict_0)


def test_case_12():
    str_0 = 'eP7b_Tlgew"A2<H<'
    list_0 = [str_0, str_0]
    str_1 = ""
    bool_0 = False
    module_0.ImportReplacer(str_1, str_0, list_0, bool_0, str_0)


def test_case_13():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\\\\(."
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\\\\(.)"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "PGC^o6qn+Z>,V#"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    none_type_0 = None
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, dict_0)
    module_0.lazy_import(none_type_0, import_replacer_0)


def test_case_18():
    str_0 = "\\\\(.)"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_19():
    str_0 = "\n!(.\n)"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_20():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = "\n!(.\n0"
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "I/VC8MJ2a>=gchb!U}\rV"
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, str_0, str_0, str_0, none_type_0
    )
    module_0.lazy_import(none_type_0, import_replacer_0, dict_0)
