# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "\x0c=1DRW"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0
    )


def test_case_2():
    bytes_0 = b""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    str_0 = "\n    Create a random hex string of a specific length performantly.\n\n    :param int length: length of hex string to generate\n    :return: random hex string\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_4():
    bytes_0 = b"\xb9S\x9aT\xab\xfc\x8e\x08\xb2\xc6\xb4\x18\x18"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_5():
    var_0 = module_0.disallow_proxying()
    module_0.ImportReplacer(var_0, var_0, var_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "\x0c^=1DRTW"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    str_0 = "\x0c^_=1DRTW"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()


def test_case_10():
    dict_0 = {}
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(dict_0, dict_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    var_0 = module_0.disallow_proxying()
    module_0.ScopeReplacer(var_0, var_0, var_0)


def test_case_12():
    import_processor_0 = module_0.ImportProcessor()
    import_processor_0.lazy_import(import_processor_0, import_processor_0)


def test_case_13():
    str_0 = "(dobug\nZhell)"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_14():
    str_0 = "\n    Create a random hex string of a specific length performantly.\n\n    :param int length: length of hex string to generate\n    :return: random hex string\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "(dobug\nZhell)"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "(ougZhel)"
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "(Jeb]g shellg"
    str_1 = "subn"
    var_0 = module_0.disallow_proxying()
    module_0.lazy_import(str_1, str_0, str_0)


def test_case_18():
    str_0 = "$8s#+;#\x0bpuInmYV{\t"
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    str_0 = "(dobu\n2\nlhell~)"
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = ""
    str_1 = "subn"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.lazy_import(str_1, str_0, str_0)


def test_case_21():
    bytes_0 = b""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_22():
    str_0 = "(dobug\nZhell)"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
