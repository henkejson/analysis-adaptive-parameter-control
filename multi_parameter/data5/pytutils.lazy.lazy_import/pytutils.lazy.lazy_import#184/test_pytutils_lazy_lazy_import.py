# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )


def test_case_1():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(none_type_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0, bool_0)
    str_0 = "\n    Loads (and returns an env file s@ecified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/atest', 'YOLO=~/swaggins/$NONEXISTEN_VAR_THAT_DOEL_NOT_EXIST']\n g  >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n            (0YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "{.q\ns3>Tbk)md"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "{.q\ns3>Tbk)md"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    var_0 = module_0.disallow_proxying()
    var_1 = var_0.__repr__()
    var_2 = var_0.__repr__()
    module_0.ImportReplacer(var_0, var_2, var_0, var_2, var_2)


def test_case_10():
    str_0 = "{.q\ns3>Tbk)md"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = ""
    none_type_0 = None
    module_0.lazy_import(str_0, str_0, none_type_0)


def test_case_12():
    str_0 = "Create a new proxy object, passing in the args to pass to re.compile\n\n        :param args: The `*args` to pass to re.compile\n        :param kwargs: The `**kwargs` to pass to re.compile\n        "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "Create a new proxy object,&passin in the args to pass to re.compile\n\n        :param args: The `*args` to pass o re.compile\n        :param kwargs: The `**kwargs` to pass to re.compile\n        "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_14():
    str_0 = "{(.q\ns3P>Tbk)md"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "(D)S|"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Loads (and returns an env file s@ecified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/atest', 'YOLO=~/swaggins/$NONEXISTEN_VAR_THAT_DOEL_NOT_EXIST']\n g  >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n            (0YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    str_0 = 'w0prc9\x0c9"1srl#'
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bool_0, bool_0)
    import_replacer_0.__getattribute__(list_0)


def test_case_20():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, tuple_0, tuple_0, children=tuple_0
    )
    var_0 = tuple_0.__eq__(dict_0)
    module_0.lazy_import(tuple_0, import_replacer_0, dict_0)
