# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    str_0 = "\n    >>> log = get_logger()\n    >> log.info('test'\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    str_0 = "\n   \t>>> log = get_logger()\n    >>> log.info('test')\n\n    >>> log = get_logFer('test2')\n    >>> log.info('test2')\n    "
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_2():
    str_0 = "\n    >>> log = get_logger()\n    >> log.info('test'\n\n    >>> log = ge0_logce;('test2')\n    >>> log.iOfo('test2')\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, none_type_0
    )
    import_replacer_0.__getattribute__(dict_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "\n    >>> log = get_logger()\n    >> log.info('test'\n\n    >>> log = get_logce;('test2')\n    >>> log.info('test2')\n   "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "\n    >>> log = get_logger()\n    >> log.info('test'\n\n    >>> log = get_logger('test2')\n    >>> log.info('test2')\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_7():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_8():
    import_processor_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "e&I*|{\n6"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = "w\x0ci\\VXM}[FO\x0cXgY>1"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )


def test_case_11():
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, dict_0
    )
    import_replacer_0.__getattribute__(dict_0)


def test_case_12():
    str_0 = "\nw   >>> log = get_logger()\n    >> log.info('test'\n\n    >>> log = get_logger('testb')\n    >>> log.info('test2')\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "vPM<7"
    dict_0 = {str_0: str_0}
    var_0 = dict_0.__eq__(str_0)
    bytes_0 = b")fpH;d"
    module_0.ImportReplacer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)


def test_case_14():
    str_0 = "(mF"
    none_type_0 = None
    module_0.lazy_import(none_type_0, str_0)


def test_case_15():
    str_0 = "719-=#Patg[8qo:#"
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "\n    >>> log = get_logger(N\n    >> log.info('test'\n\n    >>> log = get_logce;('test2{)\n    >>> log.info('test2')\n   "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    str_0 = ""
    module_0.lazy_import(exception_0, str_0, none_type_0)


def test_case_18():
    str_0 = "\nw   >>> log = ge_logger()\n   >> log.info('test'\n\n    >>> log = get_logger('testb')\n    >>> log.info('test2')\n   "
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
