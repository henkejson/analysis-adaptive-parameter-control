# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bool_0, bool_0, bool_0
    )


def test_case_1():
    object_0 = module_1.object()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        object_0, object_0
    )


def test_case_2():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_3():
    str_0 = "*\nx_Bj_a4U#pQ0"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_4():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_5():
    str_0 = "{1Jx 0t\x0bxm_t#nOKMiu"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_6():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0)


def test_case_7():
    import_processor_0 = module_0.ImportProcessor()


def test_case_8():
    str_0 = "I"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_9():
    str_0 = "Context manager to pass exceptions.\n    :param exceptions: Exceptions to pass\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_10():
    var_0 = module_0.disallow_proxying()


def test_case_11():
    str_0 = "I"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_12():
    none_type_0 = None
    module_0.ScopeReplacer(none_type_0, none_type_0, none_type_0)


def test_case_13():
    str_0 = '\x0bo2IL]E(-+;j"XnuB]\n'
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "*\nx_Bj_a#:Q0"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = ""
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    str_1 = "|X=n"
    module_0.lazy_import(str_0, str_0, str_1)


def test_case_16():
    bytes_0 = b"\xc5(\x90\x99\xcbV6\x01\xd3\x9b\x83\xd7\x92\xe2"
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    module_0.ImportReplacer(set_0, set_0, none_type_0, set_0, bytes_0)


def test_case_17():
    str_0 = "%s(%s)"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    none_type_0 = None
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, none_type_0, children=dict_0
    )
    import_replacer_0.__setattr__(none_type_0, none_type_0)


def test_case_19():
    str_0 = "{1Jx 0t\x0bxm_t#nOKMiu"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_20():
    str_0 = "`X\r*W<?(3E\nD'"
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "js(%\n)"
    module_0.lazy_import(str_0, str_0, str_0)
