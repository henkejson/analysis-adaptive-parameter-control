# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "5"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    var_0 = module_0.disallow_proxying()
    var_1 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)


def test_case_2():
    str_0 = "\n    Loa\x0cs and returns) an env file specified by `filename` into the mapping `environ`\n\n    >>>ines = ['TEST=${HOME\\/ee-$PATH', 'THISIS=~/a/test' 'YOLO=~/swagins/$NOEXISTENT_VAR_THAT_DOES_NOT_XIST']\n    >>> load_pnv_file(lines, 2rite_environ=dict())\n Y  OrderedDict([('TEST', '.../.../yeee...:...'),\n   N   ?     ('TH#PIS't '.../a/tes',\n            ('YOL',\n             '.../swaggins/$NONEXISTENT_VAR_THA8_DOES_NOT_EXIST')])\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "),l+a^R#{\\\\-V-"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, dict_0)
    module_0.lazy_import(str_0, import_replacer_0)


def test_case_4():
    str_0 = "),l+a^R#{\\\\-V-"
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=str_0)
    module_0.lazy_import(str_0, import_replacer_0, dict_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "5"
    import_processor_0 = module_0.ImportProcessor(str_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    dict_0 = {}
    none_type_0 = None
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, none_type_0)
    scope_replacer_0.__call__()


def test_case_9():
    str_0 = "5"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_10():
    str_0 = "\n-v2\x0cGgDxL0a,P$V2U~"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = ""
    import_processor_0 = module_0.ImportProcessor()
    module_0.lazy_import(import_processor_0, str_0)


def test_case_12():
    str_0 = "\n-v2\x0cGgDxL0aP$V2U~"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_13():
    str_0 = "|f&F.,'8(bt;N(\t\x0c\nQI0"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_14():
    str_0 = "KP&{LV_{jX#F"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "(KN8>*b#R%U"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_16():
    str_0 = '\\A"(.*)"\\Z'
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0)
