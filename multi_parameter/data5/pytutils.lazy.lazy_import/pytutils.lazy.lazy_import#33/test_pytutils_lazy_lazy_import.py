# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "v\t"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__str__()


def test_case_1():
    float_0 = 541.103094
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        float_0, none_type_0
    )


def test_case_2():
    str_0 = "a\t"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    float_0 = -752.800377
    none_type_0 = None
    module_0.ImportReplacer(float_0, none_type_0, none_type_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "a\t"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "a\t"
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    var_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "a\t"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0)


def test_case_9():
    str_0 = "b24"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = " Mer=ezmultiple queues together\n\n    >>>Xq1, q2, q3 = [Queue(% for _ in range(3*]\n    >>> out_q = merge(q1, q2, q3)\n   "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = " Merge multiple queues together\n\n    >>> q1, q2, q3 = [Queue() for _ in range(3)]\n    >>> out_q = merge(q1, q2, q3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "rA(*TrMTh!VC\x0cO\x0c1"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "l\x0cf ^5% Wa1Z#M\nCV "
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "."
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(var_0, str_0)


def test_case_15():
    illegal_use_of_scope_replacer_0 = module_0.disallow_proxying()
    str_0 = "#t-=3e>kYU3y"
    var_0 = module_0.ImportProcessor()
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    str_0 = "YI-(#IqcPA-"
    module_0.ImportReplacer(str_0, str_0, str_0, str_0, str_0)


def test_case_17():
    str_0 = " Mer=ezmultiple queues together\n\n    >>>Xq1, q2, q3 = [Queue(% for _ in range(3*]\n    >>> out_q = merge(q1, q2, q3)\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    str_0 = " Mer=ezmultiple queues together\n\n   >>>Xq1, q2, q3 = [Queue(% for _ i range(3*]\n    >>> out_q = erge(q1, q2, q3\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_19():
    bool_0 = False
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
        bool_0: bool_0,
    }
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, bool_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_20():
    str_0 = " Mer=ezmultiple queues together\n\n    >>>Xq1, q2, q3 = [Quue(% or _ in range(3*]\n    >>> out_q = merge(q1, q2, q3)\n   "
    dict_0 = {str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, dict_0, children=dict_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)


def test_case_21():
    str_0 = " Mer=ezmultiple queues tgether\n\n    >>>Xq1, q2, q3 = [Quue(% or _ in range(3*]\n    >>> out_q = merge(q1, q2, q3)\n   "
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(dict_0, none_type_0, str_0, str_0)
    module_0.lazy_import(import_replacer_0, import_replacer_0)
