# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    var_0 = module_0.disallow_proxying()
    tuple_0 = (var_0,)
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        tuple_0, var_0, tuple_0
    )


def test_case_1():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a)est', 'YOLO=~/swaggins/$]ONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '..._yeee'),\n            ('THISIS', '.../aBtest'),\n             ('YOLO',\n      N       '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_3():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    str_0 = "c\rJ%hU}q0|%iNJ[\nF_"
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, str_0)
    module_0.lazy_import(import_replacer_0, str_0)


def test_case_4():
    none_type_0 = None
    module_0.ImportReplacer(none_type_0, none_type_0, none_type_0, none_type_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "*_scope"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\\{(\\w+)\\}"
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    import_processor_0 = module_0.disallow_proxying()


def test_case_9():
    import_processor_0 = module_0.ImportProcessor()
    list_0 = [import_processor_0]
    none_type_0 = None
    bytes_0 = b"\xbf\xd9\x8det\x02"
    module_0.ImportReplacer(list_0, list_0, none_type_0, bytes_0, bytes_0)


def test_case_10():
    str_0 = "_scope"
    module_0.lazy_import(str_0, str_0)


def test_case_11():
    str_0 = "Context manager to pass exceptions.\n    :param exceptions: Exceptions to pass\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    str_0 = "T{C|S%D[uKUj"
    str_1 = '\\3rz("/oCiR,G'
    module_0.lazy_import(str_0, str_1)


def test_case_14():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_15():
    var_0 = module_0.disallow_proxying()
    dict_0 = {var_0: var_0, var_0: var_0}
    str_0 = "c\rJ%hU}q0|%iNJ8[\nF_"
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, str_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_16():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "0LF'=vs#E%"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_18():
    str_0 = '\\A"(.*)"\\Z'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_19():
    str_0 = "\n    Parses env fil content.\n\n    (rom honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a)est', 'YOLO=~/swaggins/$]ONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict()\n    OrderedDict([('TEST', '..._yeee'),\n            ('THISIS',H'.../a/test'),\n             ('YOLO',\n      N       '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_20():
    var_0 = module_0.disallow_proxying()
    dict_0 = {
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
        var_0: var_0,
    }
    str_0 = "7"
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, str_0, str_0)
    import_replacer_0.__getattribute__(dict_0)
