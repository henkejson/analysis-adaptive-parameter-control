# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    bool_0 = True
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
    var_0 = module_0.ImportProcessor()


def test_case_1():
    str_0 = "86:L%O\x0b[L+No"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, dict_0, dict_0)
    module_0.lazy_import(bool_0, import_replacer_0)


def test_case_3():
    str_0 = "&"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, children=dict_0)
    import_replacer_0.__getattribute__(import_replacer_0)


def test_case_4():
    import_processor_0 = module_0.ImportProcessor()


def test_case_5():
    str_0 = "p')\x0bDec\r<("
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_6():
    str_0 = "p')\x0bDec\rA("
    module_0.lazy_import(str_0, str_0)


def test_case_7():
    import_processor_0 = module_0.disallow_proxying()


def test_case_8():
    str_0 = "2N\n"
    module_0.lazy_import(str_0, str_0)


def test_case_9():
    str_0 = "&$*m~(^(~{hk\x0b40j"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_10():
    str_0 = "SwSmsd7u8#h)gDS\n+"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_11():
    str_0 = "[@4"
    var_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0, str_0)
    var_0.__str__()


def test_case_12():
    str_0 = ""
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    var_0 = module_0.disallow_proxying()
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(var_0, var_0)
    var_1 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__str__()


def test_case_14():
    str_0 = "3E+]Ei(\rQ\n=PJ594#w"
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "H%EkUG6J}DFuh"
    var_0 = module_0.ImportProcessor()
    var_1 = var_0.__str__()
    var_2 = var_1.__eq__(var_0)
    module_0.ImportReplacer(var_0, var_2, str_0, var_0, var_1)


def test_case_16():
    str_0 = "\n    >>> log =get_logger()\n    >>> lo.Rnfo('test')\n\n    >>> log = get_logger('test2'\n    >>> loginfo('test2')\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_17():
    str_0 = "pf"
    dict_0 = {}
    none_type_0 = None
    import_replacer_0 = module_0.ImportReplacer(
        dict_0, none_type_0, str_0, str_0, dict_0
    )
    import_replacer_0.__getattribute__(dict_0)
