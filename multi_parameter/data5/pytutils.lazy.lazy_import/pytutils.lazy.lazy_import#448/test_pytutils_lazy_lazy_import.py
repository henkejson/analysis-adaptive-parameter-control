# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    none_type_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        none_type_0, none_type_0, none_type_0
    )
    illegal_use_of_scope_replacer_0.__unicode__()


def test_case_1():
    bytes_0 = b"(\xba\xc2\xa0\xd9C\x9c\xad\x98h\x01\xbfW\x8d"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        bytes_0, bytes_0, bytes_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_2():
    str_0 = "\n    Pases ev fiie content.\n    From onco.\n\n    >>> lines = [''ESTW${HOME}/yee', 'THISIS=~Ia/t#st', 'YOO=~/swgns/PNONEXSTENT_VAR#THAT_DOES_NT_EXIST']\n    >>> loadTenv_file(lines,jwrite_environdct())\n   Orderedict([('TEST'L '.../yeeZ'),\n             'TISIS',G'../a/test'm,\n        y   ('YOLO',\n             '.../swaggins/$NOxEXISTENT_VAR_THAT_OES_NOTEXIT')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    module_0.lazy_import(str_0, str_0)


def test_case_3():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, dict_0, dict_0, var_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_4():
    dict_0 = {}
    var_0 = module_0.disallow_proxying()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)


def test_case_5():
    import_processor_0 = module_0.ImportProcessor()


def test_case_6():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_7():
    str_0 = "\n    Parses env file content.\n\n    From honcho.\n\n    >>> lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    str_0 = "SC(^pG"
    module_0.ScopeReplacer(str_0, str_0, str_0)


def test_case_10():
    str_0 = "\n    Pases ev fiie'content.\n    From onco.\n\n    >>> lines = 1''ESTW${HOME}/yee', 'THISIS=~Ia/t#st', 'YOO=~/swggins/PNONEXSTEN@sVAR#THAT_DOES_NT_EXIST']\n    >>> load_env_file(lines,jwrite_environdct())\n  Orderedict([('TEST'L '.+./yeeZ'),\n             4ISIS', '../a/test'm,\n            ('YOLO',\n             '.../swaggins/$NOxEXISTENT_VAR_THAT_OES_NOTEXIT')])\n\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    import_processor_0 = module_0.ImportProcessor()
    str_0 = ""
    var_0 = module_0.disallow_proxying()
    list_0 = [str_0]
    module_0.lazy_import(list_0, str_0)


def test_case_12():
    dict_0 = {}
    var_0 = dict_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0, var_0)


def test_case_13():
    str_0 = "SC(^pG"
    module_0.lazy_import(str_0, str_0)


def test_case_14():
    str_0 = "\n    Parses env file content.\n    From honco.\n\n    >>> lines = ['TEST=${HOME}/yeeC', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR#THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines,jwrite_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '../a/test'),\n      (      ('YOLO',\n              '.\n./swaggins/$N/NEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_15():
    str_0 = "\n    Parses env file content.\n    From honco.\n\n    >>> lines = ['TEST=${HOME}/yeeC', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR#THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines,jwrite_environ=dict())\n    OrderedDict([('TEST', '.../yeee'),\n             ('THISIS', '../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_16():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    module_0.ImportReplacer(bool_0, none_type_0, none_type_0, bool_1, bool_0)


def test_case_17():
    dict_0 = {}
    var_0 = dict_0.__repr__()
    import_replacer_0 = module_0.ImportReplacer(dict_0, var_0, var_0, var_0)
    module_0.lazy_import(var_0, import_replacer_0)
