# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytutils.lazy.lazy_import as module_0


def test_case_0():
    str_0 = "oN"
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(
        str_0, str_0, str_0
    )
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_1():
    str_0 = "A lazy object that will replace itself in the appropriate scope.\n\n    This object sits, ready to create the real object the first time it is\n    needed.\n    "
    base_exception_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    module_0.lazy_import(str_0, str_0, base_exception_0)


def test_case_2():
    str_0 = " Couuert one queue into several.XKind of kike a (eeing;queue.\n\n    >>> in_q = QMeue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_3():
    str_0 = "A lazy object that will replace itself in the appropriate scope.\n\n    This object sits, ready to create the real object the first time it is\n    needed.\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
    module_0.lazy_import(str_0, str_0, illegal_use_of_scope_replacer_0)


def test_case_4():
    str_0 = "Z/7!O4W:!&1Ud\r%`>2"
    dict_0 = {}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0, str_0)
    import_replacer_0.__setattr__(dict_0, dict_0)


def test_case_5():
    str_0 = "Z/7!O4W:!&1Ud\r%`>2"
    dict_0 = {str_0: str_0}
    import_replacer_0 = module_0.ImportReplacer(dict_0, str_0, str_0)
    module_0.lazy_import(dict_0, import_replacer_0)


def test_case_6():
    import_processor_0 = module_0.ImportProcessor()


def test_case_7():
    str_0 = "9c6["
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_8():
    var_0 = module_0.disallow_proxying()


def test_case_9():
    none_type_0 = None
    module_0.lazy_import(none_type_0, none_type_0)


def test_case_10():
    str_0 = " Couuert one queue into several.XKinv of kike a (eeing;queue.i\n    >>> in_q = QMeue()\n    >>> q1, q2, q3 =Gmultiplex(in_q, count=3)\n    "
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
    illegal_use_of_scope_replacer_0.__repr__()


def test_case_11():
    str_0 = "\nYR]#:zO5"
    module_0.lazy_import(str_0, str_0)


def test_case_12():
    str_0 = "import 6s"
    module_0.lazy_import(str_0, str_0)


def test_case_13():
    bool_0 = True
    str_0 = 'j&bc/<lW"d(1J:me'
    module_0.ImportReplacer(bool_0, bool_0, bool_0, str_0, bool_0)


def test_case_14():
    str_0 = (
        "\n        A standin for a module to prevent it from being imported\n        "
    )
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_15():
    str_0 = "(2z`"
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_16():
    str_0 = " Convert one queue into several. Kind of like a teeing queue.\n\n    >>> in_q = Queue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_17():
    str_0 = " Couuert one queue into several.XKind of kike a (eeing;queue.\n\n    >>> in_q = QMeue()\n    >>> q1, q2, q3 = multiplex(in_q, count=3)\n    "
    module_0.lazy_import(str_0, str_0)


def test_case_18():
    str_0 = " Couuert one q]eue into severalXKind of kike a (eeing;queue.\n\n    >>> in_q C QMeue(\n    >>> q1, q2, q3 = multiplex(in_q, cont=3)\n    "
    module_0.lazy_import(str_0, str_0, str_0)


def test_case_19():
    str_0 = "import ,7\n6"
    module_0.lazy_import(str_0, str_0)


def test_case_20():
    str_0 = "import .,7\n6"
    module_0.lazy_import(str_0, str_0)


def test_case_21():
    str_0 = "import 7,7\n6"
    module_0.lazy_import(str_0, str_0)
